; ModuleID = '../../third_party/blink/renderer/modules/service_worker/service_worker_clients.cc'
source_filename = "../../third_party/blink/renderer/modules/service_worker/service_worker_clients.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.220" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.226" }
%"struct.std::__1::atomic.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__cxx_atomic_impl.229" }
%"struct.std::__1::__cxx_atomic_impl.229" = type { %"struct.std::__1::__cxx_atomic_base_impl.230" }
%"struct.std::__1::__cxx_atomic_base_impl.230" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.517" }
%"struct.std::__1::atomic.517" = type { %"struct.std::__1::__atomic_base.518" }
%"struct.std::__1::__atomic_base.518" = type { %"struct.std::__1::__atomic_base.519" }
%"struct.std::__1::__atomic_base.519" = type { %"struct.std::__1::__cxx_atomic_impl.520" }
%"struct.std::__1::__cxx_atomic_impl.520" = type { %"struct.std::__1::__cxx_atomic_base_impl.521" }
%"struct.std::__1::__cxx_atomic_base_impl.521" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::ServiceWorkerClients" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.231", %"class.blink::ScriptValue" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.233", %class.scoped_refptr.236 }
%"class.blink::TraceWrapperV8Reference.233" = type { %"class.v8::TracedReference.234" }
%"class.v8::TracedReference.234" = type { %"class.v8::BasicTracedReference.235" }
%"class.v8::BasicTracedReference.235" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.236 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.177", %"class.blink::HeapHashMap.186", %"class.std::__1::unique_ptr.196", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.208", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.211" }
%"class.blink::HeapHashMap.177" = type { %"class.WTF::HashMap.180" }
%"class.WTF::HashMap.180" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ %"struct.WTF::KeyValuePair.183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.183" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.193" }
%"class.blink::TraceWrapperV8Reference.193" = type { %"class.v8::TracedReference.194" }
%"class.v8::TracedReference.194" = type { %"class.v8::BasicTracedReference.195" }
%"class.v8::BasicTracedReference.195" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.199" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.208" = type { %"class.v8::Persistent.209" }
%"class.v8::Persistent.209" = type { %"class.v8::PersistentBase.210" }
%"class.v8::PersistentBase.210" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.211" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.217" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.218" }
%"class.blink::Persistent.218" = type { %"class.blink::PersistentBase.219" }
%"class.blink::PersistentBase.219" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr.225 }
%class.scoped_refptr.225 = type { %"class.WTF::StringImpl"* }
%"class.base::OnceCallback.1361" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.543 }
%class.scoped_refptr.543 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.544", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.544" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.517" }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.1357", i32, %"class.blink::Member.231", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.233", %"class.blink::SelfKeepAlive.1358" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1355" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"class.blink::WeakMember.268"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.268" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1357" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1050 }
%class.scoped_refptr.1050 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.231", %"class.blink::ScriptValue" }
%"class.blink::SelfKeepAlive.1358" = type { %"class.blink::Persistent.1359" }
%"class.blink::Persistent.1359" = type { %"class.blink::PersistentBase.1360" }
%"class.blink::PersistentBase.1360" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.mojo::StructPtr.1362" = type { %"class.std::__1::unique_ptr.1363" }
%"class.std::__1::unique_ptr.1363" = type { %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.blink::mojom::blink::ServiceWorkerClientInfo"* }
%"class.blink::mojom::blink::ServiceWorkerClientInfo" = type { %"class.blink::KURL", i32, %"class.WTF::String", i32, i8, i8, i32, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.455" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.blink::KURL"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.323", i32, i8, [3 x i8], %"class.blink::HeapVector.325", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.334", %"class.blink::Member.336", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.345", %"class.blink::Member.351", %"class.blink::Member.353", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.257" }
%"class.blink::HeapHashMap.257" = type { %"class.WTF::HashMap.260" }
%"class.WTF::HashMap.260" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"struct.WTF::KeyValuePair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.263" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.269" }
%"class.blink::Supplementable.269" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.270" }
%"class.blink::HeapHashMap.270" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type { i8*, %"class.blink::Member.1382" }
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1384" }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.277, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.311", %"class.blink::Member.317", i32, [4 x i8], %"class.WTF::HashSet.319", i32, i32 }
%class.scoped_refptr.277 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.278", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.280 }
%"class.WTF::RefCounted.278" = type { %"class.base::RefCounted.279" }
%"class.base::RefCounted.279" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.280 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.298", %"class.std::__1::map.307"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.286 }
%union.anon.286 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.298" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.307" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.325" = type { %"class.WTF::Vector.328" }
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"class.blink::Member.331"*, i32, i32 }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.338", i32, i32 }
%"class.blink::HeapHashMap.338" = type { %"class.WTF::HashMap.341" }
%"class.WTF::HashMap.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"struct.WTF::KeyValuePair.344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.344" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.336", i8, [7 x i8], %"class.WTF::Vector.357", %"class.blink::HeapVector.397", i8, [7 x i8], %"class.WTF::HashSet.319", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.360" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.363", %"class.WTF::HashMap.370", %"class.WTF::HashMap.375", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.380", i32, %"class.mojo::StructPtr.385", %"class.WTF::Vector.380" }
%"class.mojo::StructPtr.363" = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.370" = type { %"class.WTF::HashTable.371" }
%"class.WTF::HashTable.371" = type <{ %"struct.WTF::KeyValuePair.374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.374" = type opaque
%"class.WTF::HashMap.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.385" = type { %"class.std::__1::unique_ptr.386" }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.380", i8, i8, [6 x i8] }>
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.397" = type { %"class.WTF::Vector.400" }
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.blink::Member.403"*, i32, i32 }
%"class.blink::Member.403" = type opaque
%"class.blink::ServiceWorkerGlobalScope" = type { %"class.blink::WorkerGlobalScope", %"class.blink::mojom::blink::ControllerServiceWorker", %"class.blink::mojom::blink::ServiceWorker", %"class.blink::Member.965", %"class.blink::Member.967", %"class.blink::Member.969", %"class.blink::HeapHashMap.971", i8, i64, i64, i64, i8, i64, i64, i64, %"class.std::__1::unique_ptr.978", %"class.mojo::PendingRemote.1000", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoReceiver", %"class.WTF::HashMap.1005", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.blink::HeapHashMap.1015", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.WTF::HashMap.1010", %"class.blink::HeapHashMap.1015", %"class.blink::HeapHashMap.1015", %"class.blink::HeapHashMap.1022", %"class.blink::HeapHashMap.1029", %"class.WTF::HashMap.1036", %"class.std::__1::unique_ptr.1041", i8, i8, %"class.blink::HeapMojoReceiverSet", %"class.util::TokenType.1068" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.447", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.468", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::Member.499", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.501", i32, %"class.blink::Member.508", %"class.std::__1::unique_ptr.510", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.707", %"class.absl::optional.717", i32, %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.420", %"class.blink::Member.426", %"class.blink::HeapHashSet.428", %class.scoped_refptr.435, %"class.blink::Member.437", %"class.blink::Member.439", i32, %"class.WTF::Vector.357", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.443" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.250" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.241" }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243", [32 x i8] }
%"class.WTF::VectorBufferBase.243" = type { %"struct.std::__1::pair.244"*, i32, i32 }
%"struct.std::__1::pair.244" = type { %"class.WTF::AtomicString", %"class.blink::Member.245" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::HeapVector.247"* }
%"class.blink::HeapVector.247" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.WTF::Vector.253"* }
%"class.WTF::Vector.253" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.323", i32, i8, [3 x i8], %"class.blink::HeapVector.325", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.334", %"class.blink::Member.336", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.345", %"class.blink::Member.351", %"class.blink::Member.353", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.405" }
%"class.blink::PersistentBase.405" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.408" }
%"class.blink::Supplementable.408" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.409" }
%"class.blink::HeapHashMap.409" = type { %"class.WTF::HashMap.412" }
%"class.WTF::HashMap.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"struct.WTF::KeyValuePair.415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.415" = type { i8*, %"class.blink::Member.1400" }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::Supplement.1402"* }
%"class.blink::Supplement.1402" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1403" }
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.416" }
%"struct.std::__1::atomic.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__cxx_atomic_impl.418" }
%"struct.std::__1::__cxx_atomic_impl.418" = type { %"struct.std::__1::__cxx_atomic_base_impl.419" }
%"struct.std::__1::__cxx_atomic_base_impl.419" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.blink::Member.1079", %class.scoped_refptr.1081, %class.scoped_refptr.1081, %"class.blink::Member.1082", %"class.blink::Member.1084", %"class.blink::Member.1090", %"class.blink::Member.1094", %"class.blink::Member.1146", %"class.blink::HeapHashMap.1148", %"class.blink::HeapHashSet.1155", %"class.blink::HeapHashSet.1155", %"class.blink::HeapHashMap.1304", %"class.blink::HeapVector.1311", %"class.blink::Member.1319", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1322", %"class.WTF::Vector.1329", %"class.blink::HeapHashSet.1335", %"class.blink::HeapHashSet.1335", %"class.std::__1::unique_ptr.1341", %"class.base::WeakPtr.1139", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1350", i8, i8, %"class.base::WeakPtrFactory.1352" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.1081 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.523" }>
%"class.base::RefCountedThreadSafe.523" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1088" }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1098", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1100", %"class.WTF::HashSet.1105", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1109", %"class.std::__1::map.1116", %"class.std::__1::map.1127", %"class.std::__1::unique_ptr.1136", %"class.blink::Member.1084", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1143", %"class.mojo::InlinedStructPtr.1145", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"struct.WTF::KeyValuePair.1104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1104" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1109" = type { %"class.WTF::HashMap.1112" }
%"class.WTF::HashMap.1112" = type { %"class.WTF::HashTable.1113" }
%"class.WTF::HashTable.1113" = type <{ %"struct.WTF::KeyValuePair.1115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1115" = type opaque
%"class.std::__1::map.1116" = type { %"class.std::__1::__tree.1117" }
%"class.std::__1::__tree.1117" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1118", %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.1127" = type { %"class.std::__1::__tree.1128" }
%"class.std::__1::__tree.1128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1129", %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1139", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1145" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1148" = type { %"class.WTF::HashMap.1151" }
%"class.WTF::HashMap.1151" = type { %"class.WTF::HashTable.1152" }
%"class.WTF::HashTable.1152" = type <{ %"struct.WTF::KeyValuePair.1154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1154" = type opaque
%"class.blink::HeapHashSet.1155" = type { %"class.WTF::HashSet.1158" }
%"class.WTF::HashSet.1158" = type { %"class.WTF::HashTable.1159" }
%"class.WTF::HashTable.1159" = type <{ %"class.blink::WeakMember.1161"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1165", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1185", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1268", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1279", %"class.blink::ResourceResponse", %class.scoped_refptr.1281, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1165" = type { %"class.absl::optional_internal::optional_data.1166" }
%"class.absl::optional_internal::optional_data.1166" = type { %"class.absl::optional_internal::optional_data_base.1167" }
%"class.absl::optional_internal::optional_data_base.1167" = type { %"class.absl::optional_internal::optional_data_dtor_base.1168" }
%"class.absl::optional_internal::optional_data_dtor_base.1168" = type { i8, %union.anon.1169 }
%union.anon.1169 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1170", i8, %"class.absl::optional.1175", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1170" = type { %"class.absl::optional_internal::optional_data.1171" }
%"class.absl::optional_internal::optional_data.1171" = type { %"class.absl::optional_internal::optional_data_base.1172" }
%"class.absl::optional_internal::optional_data_base.1172" = type { %"class.absl::optional_internal::optional_data_dtor_base.1173" }
%"class.absl::optional_internal::optional_data_dtor_base.1173" = type { i8, [7 x i8], %union.anon.1174 }
%union.anon.1174 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1175" = type { %"class.absl::optional_internal::optional_data.1176" }
%"class.absl::optional_internal::optional_data.1176" = type { %"class.absl::optional_internal::optional_data_base.1177" }
%"class.absl::optional_internal::optional_data_base.1177" = type { %"class.absl::optional_internal::optional_data_dtor_base.1178" }
%"class.absl::optional_internal::optional_data_dtor_base.1178" = type { i8, %union.anon.1179 }
%union.anon.1179 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1180", %"class.WTF::Vector.380" }
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182" }
%"class.WTF::VectorBufferBase.1182" = type { i32*, i32, i32 }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1264" }
%"class.WTF::HashMap.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"struct.WTF::KeyValuePair.1267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1267" = type <{ %"class.blink::WeakMember.1405", i32, [4 x i8] }>
%"class.blink::WeakMember.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1407", [7 x i8], %"class.blink::Member.1317", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1407" = type { i8 }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1162" }
%"class.blink::HeapHashSet.1268" = type { %"class.WTF::HashSet.1271" }
%"class.WTF::HashSet.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"class.blink::WeakMember.1274"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1274" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.716", %"class.WTF::String", %"class.WTF::HashSet.711", i8, i8, %class.scoped_refptr.236, %class.scoped_refptr.1275, %class.scoped_refptr.1277 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.716" = type { i8 }
%"class.WTF::HashSet.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.std::__1::pair.715"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.715" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1275 = type { %"class.base::RefCountedData.1276"* }
%"class.base::RefCountedData.1276" = type opaque
%class.scoped_refptr.1277 = type { %"class.base::RefCountedData.1278"* }
%"class.base::RefCountedData.1278" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.736" }
%"class.base::time_internal::TimeBase.736" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.280, %class.scoped_refptr.280, %class.scoped_refptr.280, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1193, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1205", %"class.absl::optional.1210", %"class.absl::optional.1220", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.932", %"class.absl::optional.1220", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1220", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.932", %"class.absl::optional.1225", i8, %class.scoped_refptr.1231 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1188" }
%"class.WTF::HashMap.1188" = type { %"class.WTF::HashTable.1189" }
%"class.WTF::HashTable.1189" = type <{ %"struct.WTF::KeyValuePair.1192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1192" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1193 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1194", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1203, i8, %"class.url::Origin" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.225 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1195" }
%"class.std::__1::vector.1195" = type { %"class.std::__1::__vector_base.1196" }
%"class.std::__1::__vector_base.1196" = type { %"class.std::__1::unique_ptr.1197"*, %"class.std::__1::unique_ptr.1197"*, %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.std::__1::unique_ptr.1197"* }
%class.scoped_refptr.1203 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1204", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1204" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1205" = type { %"class.absl::optional_internal::optional_data.1206" }
%"class.absl::optional_internal::optional_data.1206" = type { %"class.absl::optional_internal::optional_data_base.1207" }
%"class.absl::optional_internal::optional_data_base.1207" = type { %"class.absl::optional_internal::optional_data_dtor_base.1208" }
%"class.absl::optional_internal::optional_data_dtor_base.1208" = type { i8, %union.anon.1209 }
%union.anon.1209 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1210" = type { %"class.absl::optional_internal::optional_data.1211" }
%"class.absl::optional_internal::optional_data.1211" = type { %"class.absl::optional_internal::optional_data_base.1212" }
%"class.absl::optional_internal::optional_data_base.1212" = type { %"class.absl::optional_internal::optional_data_dtor_base.1213" }
%"class.absl::optional_internal::optional_data_dtor_base.1213" = type { i8, %union.anon.1214 }
%union.anon.1214 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1215", %"class.WTF::Vector.380", %"class.WTF::String" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %class.scoped_refptr.280*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.645", %"class.absl::optional.645" }
%"class.absl::optional.645" = type { %"class.absl::optional_internal::optional_data.646" }
%"class.absl::optional_internal::optional_data.646" = type { %"class.absl::optional_internal::optional_data_base.647" }
%"class.absl::optional_internal::optional_data_base.647" = type { %"class.absl::optional_internal::optional_data_dtor_base.648" }
%"class.absl::optional_internal::optional_data_dtor_base.648" = type { i8, %union.anon.649 }
%union.anon.649 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1220" = type { %"class.absl::optional_internal::optional_data.1221" }
%"class.absl::optional_internal::optional_data.1221" = type { %"class.absl::optional_internal::optional_data_base.1222" }
%"class.absl::optional_internal::optional_data_base.1222" = type { %"class.absl::optional_internal::optional_data_dtor_base.1223" }
%"class.absl::optional_internal::optional_data_dtor_base.1223" = type { i8, %union.anon.1224 }
%union.anon.1224 = type { %"class.WTF::String" }
%"class.absl::optional.932" = type { %"class.absl::optional_internal::optional_data.933" }
%"class.absl::optional_internal::optional_data.933" = type { %"class.absl::optional_internal::optional_data_base.934" }
%"class.absl::optional_internal::optional_data_base.934" = type { %"class.absl::optional_internal::optional_data_dtor_base.935" }
%"class.absl::optional_internal::optional_data_dtor_base.935" = type { i8, %union.anon.936 }
%union.anon.936 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1225" = type { %"class.absl::optional_internal::optional_data.1226" }
%"class.absl::optional_internal::optional_data.1226" = type { %"class.absl::optional_internal::optional_data_base.1227" }
%"class.absl::optional_internal::optional_data_base.1227" = type { %"class.absl::optional_internal::optional_data_dtor_base.1228" }
%"class.absl::optional_internal::optional_data_dtor_base.1228" = type { i8, %union.anon.1229 }
%union.anon.1229 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1230" }
%"class.mojo::PendingRemote.1230" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1231 = type { %"class.base::RefCountedData.1232"* }
%"class.base::RefCountedData.1232" = type { %"class.base::RefCountedThreadSafe.1391", %"class.base::internal::flat_tree.1392" }
%"class.base::RefCountedThreadSafe.1391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1392" = type { %"class.std::__1::vector.1393" }
%"class.std::__1::vector.1393" = type { %"class.std::__1::__vector_base.1394" }
%"class.std::__1::__vector_base.1394" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { i32* }
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1233", %class.scoped_refptr.1248, %class.scoped_refptr.1249, %"struct.blink::CacheControlHeader", %"class.absl::optional.645", %"class.absl::optional.1250", %"class.absl::optional.1250", %"class.absl::optional.1250", i64, %"class.blink::KURL", %"class.WTF::Vector.1255", %"class.WTF::String", %"class.WTF::Vector.380", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.932", %"class.WTF::Vector.380", %"class.blink::KURL", %"class.absl::optional.816" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1233" = type { %"class.absl::optional_internal::optional_data.1234" }
%"class.absl::optional_internal::optional_data.1234" = type { %"class.absl::optional_internal::optional_data_base.1235" }
%"class.absl::optional_internal::optional_data_base.1235" = type { %"class.absl::optional_internal::optional_data_dtor_base.1236" }
%"class.absl::optional_internal::optional_data_dtor_base.1236" = type { i8, %union.anon.1237 }
%union.anon.1237 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.380", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1238", %"class.WTF::Vector.1243" }
%"class.WTF::Vector.1238" = type { %"class.WTF::VectorBuffer.1239" }
%"class.WTF::VectorBuffer.1239" = type { %"class.WTF::VectorBufferBase.1240" }
%"class.WTF::VectorBufferBase.1240" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1248 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1249 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1250" = type { %"class.absl::optional_internal::optional_data.1251" }
%"class.absl::optional_internal::optional_data.1251" = type { %"class.absl::optional_internal::optional_data_base.1252" }
%"class.absl::optional_internal::optional_data_base.1252" = type { %"class.absl::optional_internal::optional_data_dtor_base.1253" }
%"class.absl::optional_internal::optional_data_dtor_base.1253" = type { i8, %union.anon.1254 }
%union.anon.1254 = type { %"class.base::Time" }
%"class.WTF::Vector.1255" = type { %"class.WTF::VectorBuffer.1256" }
%"class.WTF::VectorBuffer.1256" = type { %"class.WTF::VectorBufferBase.1257" }
%"class.WTF::VectorBufferBase.1257" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1281 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1282", i64, %"class.WTF::Vector.1284", %"class.WTF::Vector.1289" }
%"class.WTF::RefCounted.1282" = type { %"class.base::RefCounted.1283" }
%"class.base::RefCounted.1283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1284" = type { %"class.WTF::VectorBuffer.1285" }
%"class.WTF::VectorBuffer.1285" = type { %"class.WTF::VectorBufferBase.1286" }
%"class.WTF::VectorBufferBase.1286" = type { i8*, i32, i32 }
%"class.WTF::Vector.1289" = type { %"class.WTF::VectorBuffer.1290" }
%"class.WTF::VectorBuffer.1290" = type { %"class.WTF::VectorBufferBase.1291" }
%"class.WTF::VectorBufferBase.1291" = type { %"class.std::__1::unique_ptr.1292"*, i32, i32 }
%"class.std::__1::unique_ptr.1292" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1295" }
%"class.std::__1::__tree.1295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1296", %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.blink::HeapHashMap.1304" = type { %"class.WTF::HashMap.1307" }
%"class.WTF::HashMap.1307" = type { %"class.WTF::HashTable.1308" }
%"class.WTF::HashTable.1308" = type <{ %"struct.WTF::KeyValuePair.1310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1310" = type opaque
%"class.blink::HeapVector.1311" = type { %"class.WTF::Vector.1314" }
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { %"class.blink::Member.1317"*, i32, i32 }
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.434", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1081, %"class.base::WeakPtrFactory.1321" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1321" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.537", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.537" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.538" }
%"struct.std::__1::atomic.538" = type { %"struct.std::__1::__atomic_base.539" }
%"struct.std::__1::__atomic_base.539" = type { %"struct.std::__1::__atomic_base.540" }
%"struct.std::__1::__atomic_base.540" = type { %"struct.std::__1::__cxx_atomic_impl.541" }
%"struct.std::__1::__cxx_atomic_impl.541" = type { %"struct.std::__1::__cxx_atomic_base_impl.542" }
%"struct.std::__1::__cxx_atomic_base_impl.542" = type { i8 }
%"class.blink::WeakMember.434" = type { %"class.blink::MemberBase.427" }
%"class.blink::HeapHashMap.1322" = type { %"class.WTF::HashMap.1325" }
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1328" = type opaque
%"class.WTF::Vector.1329" = type { %"class.WTF::VectorBuffer.1330" }
%"class.WTF::VectorBuffer.1330" = type { %"class.WTF::VectorBufferBase.1331" }
%"class.WTF::VectorBufferBase.1331" = type { %class.scoped_refptr.1332*, i32, i32 }
%class.scoped_refptr.1332 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1335" = type { %"class.WTF::HashSet.1338" }
%"class.WTF::HashSet.1338" = type { %"class.WTF::HashTable.1339" }
%"class.WTF::HashTable.1339" = type <{ %"class.blink::Member.1279"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.WTF::HashSet.1344"* }
%"class.WTF::HashSet.1344" = type opaque
%"class.base::WeakPtr.1139" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.604 }
%class.scoped_refptr.604 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1348" }
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1352" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.428" = type { %"class.WTF::HashSet.431" }
%"class.WTF::HashSet.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"class.blink::WeakMember.434"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.435 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.436", [4 x i8] }>
%"class.base::RefCounted.436" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.441", i32, [4 x i8] }>
%"class.std::__1::bitset.441" = type { %"class.std::__1::__bitset.442" }
%"class.std::__1::__bitset.442" = type { [25 x i64] }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.447" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.448" }
%"class.blink::HeapHashMap.448" = type { %"class.WTF::HashMap.451" }
%"class.WTF::HashMap.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"struct.WTF::KeyValuePair.454"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.454" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.461", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.463" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.WTF::HashMap.471", %"class.std::__1::unique_ptr.476" }
%"class.WTF::HashMap.471" = type { %"class.WTF::HashTable.472" }
%"class.WTF::HashTable.472" = type <{ %"struct.WTF::KeyValuePair.475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.475" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.WTF::Vector.479"* }
%"class.WTF::Vector.479" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type { %"class.blink::ScriptWrappable", %"class.blink::DOMURLUtilsReadOnly", %"class.blink::KURL" }
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.491" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.490", %"class.WTF::Vector.380", i8 }>
%"class.blink::WeakMember.490" = type { %"class.blink::MemberBase.318" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.490" }
%"class.blink::Supplementable.491" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.492" }
%"class.blink::HeapHashMap.492" = type { %"class.WTF::HashMap.495" }
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.498" = type { i8*, %"class.blink::Member.1409" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::Supplement.1411"* }
%"class.blink::Supplement.1411" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1412" }
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.501" = type { %"class.WTF::HashMap.504" }
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.696" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.690" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.516, %"class.std::__1::unique_ptr.640", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.522, i32 }>
%class.scoped_refptr.516 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.522, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.606", %"class.absl::optional.611", %"class.absl::optional.564", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.631", i8, [7 x i8], %class.scoped_refptr.522, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.522, %"class.std::__1::unique_ptr.545", %"class.absl::optional.554", %"struct.std::__1::atomic.170", i8, i8, i8, i8, i32, i32, %"class.absl::optional.564", %"class.std::__1::unique_ptr.569", i8, i64, %class.scoped_refptr.602, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.605" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.522, i8, %"class.mojo::ScopedHandleBase.548", %class.scoped_refptr.549, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.550" }
%"class.mojo::ScopedHandleBase.548" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.549 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.550" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.554" = type { %"class.absl::optional_internal::optional_data.555" }
%"class.absl::optional_internal::optional_data.555" = type { %"class.absl::optional_internal::optional_data_base.556" }
%"class.absl::optional_internal::optional_data_base.556" = type { %"class.absl::optional_internal::optional_data_dtor_base.557" }
%"class.absl::optional_internal::optional_data_dtor_base.557" = type { i8, %union.anon.558 }
%union.anon.558 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.559", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.559" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.572", i8, i64, %class.scoped_refptr.573, %class.scoped_refptr.598 }
%"class.base::RepeatingCallback.572" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.573 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.574", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.576", %"class.std::__1::map.587", i8, [7 x i8] }>
%"class.base::RefCounted.574" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.575 }
%class.scoped_refptr.575 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.576" = type { %"class.std::__1::__tree.577" }
%"class.std::__1::__tree.577" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.587" = type { %"class.std::__1::__tree.588" }
%"class.std::__1::__tree.588" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.589", %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%class.scoped_refptr.598 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.602 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.603 }
%class.scoped_refptr.603 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1070", [4 x i8], %"class.base::RepeatingCallback.643", %class.scoped_refptr.522, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.226", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1070" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.643" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.605" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.606" = type { %"class.absl::optional_internal::optional_data.607" }
%"class.absl::optional_internal::optional_data.607" = type { %"class.absl::optional_internal::optional_data_base.608" }
%"class.absl::optional_internal::optional_data_base.608" = type { %"class.absl::optional_internal::optional_data_dtor_base.609" }
%"class.absl::optional_internal::optional_data_dtor_base.609" = type { i8, %union.anon.610 }
%union.anon.610 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, [7 x i8], %union.anon.615 }
%union.anon.615 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.564" = type { %"class.absl::optional_internal::optional_data.565" }
%"class.absl::optional_internal::optional_data.565" = type { %"class.absl::optional_internal::optional_data_base.566" }
%"class.absl::optional_internal::optional_data_base.566" = type { %"class.absl::optional_internal::optional_data_dtor_base.567" }
%"class.absl::optional_internal::optional_data_dtor_base.567" = type { i8, %union.anon.568 }
%union.anon.568 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.616 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.616 = type { %"class.std::__1::map.619" }
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.630"*, i64 }
%"class.std::__1::unique_ptr.630" = type opaque
%"class.std::__1::map.631" = type { %"class.std::__1::__tree.632" }
%"class.std::__1::__tree.632" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.643", %"class.base::OnceCallback.644", %"class.absl::optional.645", %"class.absl::optional.650", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.657", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.665", %"class.std::__1::map.676", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.685", i8, %class.scoped_refptr.522, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.686" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.644" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.650" = type { %"class.absl::optional_internal::optional_data.651" }
%"class.absl::optional_internal::optional_data.651" = type { %"class.absl::optional_internal::optional_data_base.652" }
%"class.absl::optional_internal::optional_data_base.652" = type { %"class.absl::optional_internal::optional_data_dtor_base.653" }
%"class.absl::optional_internal::optional_data_dtor_base.653" = type { i8, %union.anon.654 }
%union.anon.654 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.522, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.655" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.655" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.660", %class.scoped_refptr.661 }
%"class.base::RepeatingCallback.660" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.661 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.665" = type { %"class.std::__1::__tree.666" }
%"class.std::__1::__tree.666" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.676" = type { %"class.std::__1::__tree.677" }
%"class.std::__1::__tree.677" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.678", %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::OnceCallback.685" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.686" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.522 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.696" = type { %"class.std::__1::__tree.697" }
%"class.std::__1::__tree.697" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.698", %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.711", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.716", [6 x i8] }>
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, [7 x i8], %union.anon.721 }
%union.anon.721 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.722", i8, [7 x i8] }>
%"struct.std::__1::pair.722" = type { i64, i64 }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.732", %"class.mojo::ScopedHandleBase.940", %"class.mojo::StructPtr.941", %"class.std::__1::vector.948", %"class.std::__1::vector.955" }
%"class.mojo::StructPtr.732" = type { %"class.std::__1::unique_ptr.733" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.737, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.752", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.768", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.774", %"class.std::__1::vector.781", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.816", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.821", %"class.absl::optional.921", %"class.absl::optional.932", %"class.std::__1::vector.781", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.737 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.738", %"class.std::__1::vector.739", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.738" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.741" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.752" = type { %"class.std::__1::unique_ptr.753" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.756", %"class.std::__1::vector.756", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.mojo::InlinedStructPtr.758"*, %"class.mojo::InlinedStructPtr.758"*, %"class.std::__1::__compressed_pair.760" }
%"class.mojo::InlinedStructPtr.758" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.mojo::InlinedStructPtr.758"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.768" = type { %"class.std::__1::__vector_base.769" }
%"class.std::__1::__vector_base.769" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %class.GURL* }
%"class.absl::optional.774" = type { %"class.absl::optional_internal::optional_data.775" }
%"class.absl::optional_internal::optional_data.775" = type { %"class.absl::optional_internal::optional_data_base.776" }
%"class.absl::optional_internal::optional_data_base.776" = type { %"class.absl::optional_internal::optional_data_dtor_base.777" }
%"class.absl::optional_internal::optional_data_dtor_base.777" = type { i8, [7 x i8], %union.anon.778 }
%union.anon.778 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.779, %class.scoped_refptr.779, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.799", %"class.std::__1::basic_string", %"class.std::__1::vector.807", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.779 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.780", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.788", %"class.std::__1::vector.792" }
%"class.base::RefCountedThreadSafe.780" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.781", %"class.std::__1::vector.781", %"class.std::__1::vector.781", %"class.std::__1::vector.781" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"class.std::__1::unique_ptr.788"*, %"class.std::__1::unique_ptr.788"*, %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.std::__1::unique_ptr.788"* }
%"class.std::__1::vector.799" = type { %"class.std::__1::__vector_base.800" }
%"class.std::__1::__vector_base.800" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.802" }
%"class.net::HashValue" = type { i32, %union.anon.801 }
%union.anon.801 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.811" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.809, i32, [4 x i8] }>
%class.scoped_refptr.809 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.810", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.810" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.821" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.825", %"class.mojo::StructPtr.873", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.885", %"class.base::TimeDelta", %"class.absl::optional.885", i32, [4 x i8], %"class.std::__1::vector.897", %"class.mojo::StructPtr.911", i8, [7 x i8] }>
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"class.mojo::StructPtr.827"*, %"class.mojo::StructPtr.827"*, %"class.std::__1::__compressed_pair.868" }
%"class.mojo::StructPtr.827" = type { %"class.std::__1::unique_ptr.828" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.831", %"class.base::flat_map", %"class.base::flat_map.846", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.856", i8, %"class.std::__1::vector.781", i32, %"class.mojo::StructPtr.858", %"class.std::__1::vector.781" }
%"class.mojo::StructPtr.831" = type { %"class.std::__1::unique_ptr.832" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.838" }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"struct.std::__1::pair.840"*, %"struct.std::__1::pair.840"*, %"class.std::__1::__compressed_pair.841" }
%"struct.std::__1::pair.840" = type opaque
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.std::__1::pair.840"* }
%"class.base::flat_map.846" = type { %"class.base::internal::flat_tree.847" }
%"class.base::internal::flat_tree.847" = type { %"class.std::__1::vector.848" }
%"class.std::__1::vector.848" = type { %"class.std::__1::__vector_base.849" }
%"class.std::__1::__vector_base.849" = type { %"struct.std::__1::pair.850"*, %"struct.std::__1::pair.850"*, %"class.std::__1::__compressed_pair.851" }
%"struct.std::__1::pair.850" = type opaque
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"struct.std::__1::pair.850"* }
%"class.mojo::InlinedStructPtr.856" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.858" = type { %"class.std::__1::unique_ptr.859" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.781", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.mojo::StructPtr.827"* }
%"class.mojo::StructPtr.873" = type { %"class.std::__1::unique_ptr.874" }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.880", i32, %"class.absl::optional.880" }
%"class.absl::optional.880" = type { %"class.absl::optional_internal::optional_data.881" }
%"class.absl::optional_internal::optional_data.881" = type { %"class.absl::optional_internal::optional_data_base.882" }
%"class.absl::optional_internal::optional_data_base.882" = type { %"class.absl::optional_internal::optional_data_dtor_base.883" }
%"class.absl::optional_internal::optional_data_dtor_base.883" = type { i8, %union.anon.884 }
%union.anon.884 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.880", i32, %"class.absl::optional.880" }
%"class.absl::optional.885" = type { %"class.absl::optional_internal::optional_data.886" }
%"class.absl::optional_internal::optional_data.886" = type { %"class.absl::optional_internal::optional_data_base.887" }
%"class.absl::optional_internal::optional_data_base.887" = type { %"class.absl::optional_internal::optional_data_dtor_base.888" }
%"class.absl::optional_internal::optional_data_dtor_base.888" = type { i8, %union.anon.889 }
%union.anon.889 = type { %"class.std::__1::vector.890" }
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { i32*, i32*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { i32* }
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"class.mojo::StructPtr.899"*, %"class.mojo::StructPtr.899"*, %"class.std::__1::__compressed_pair.906" }
%"class.mojo::StructPtr.899" = type { %"class.std::__1::unique_ptr.900" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.880" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.mojo::StructPtr.899"* }
%"class.mojo::StructPtr.911" = type { %"class.std::__1::unique_ptr.912" }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.781"* }
%"class.absl::optional.921" = type { %"class.absl::optional_internal::optional_data.922" }
%"class.absl::optional_internal::optional_data.922" = type { %"class.absl::optional_internal::optional_data_base.923" }
%"class.absl::optional_internal::optional_data_base.923" = type { %"class.absl::optional_internal::optional_data_dtor_base.924" }
%"class.absl::optional_internal::optional_data_dtor_base.924" = type { i8, %union.anon.925 }
%union.anon.925 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.926" }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.781", %"class.absl::optional.880", %"class.std::__1::vector.781", %"class.std::__1::vector.781" }
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.746" }
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"class.mojo::ScopedHandleBase.940" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.941" = type { %"class.std::__1::unique_ptr.942" }
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.950" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.955" = type { %"class.std::__1::__vector_base.956" }
%"class.std::__1::__vector_base.956" = type { %"class.mojo::StructPtr.732"*, %"class.mojo::StructPtr.732"*, %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.mojo::StructPtr.732"* }
%"class.blink::mojom::blink::ControllerServiceWorker" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorker" = type { i32 (...)** }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::ServiceWorkerClients"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::ServiceWorkerRegistration"* }
%"class.blink::ServiceWorkerRegistration" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::ServiceWorker"* }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::HeapHashMap.971" = type { %"class.WTF::HashMap.974" }
%"class.WTF::HashMap.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %"struct.WTF::KeyValuePair.977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.977" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.blink::ServiceWorkerInstalledScriptsManager"* }
%"class.blink::ServiceWorkerInstalledScriptsManager" = type { %"class.blink::InstalledScriptsManager", %"class.WTF::HashSet.981", %class.scoped_refptr.985, %"class.mojo::SharedRemote" }
%"class.blink::InstalledScriptsManager" = type { i32 (...)** }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.985 = type { %"class.blink::ThreadSafeScriptContainer"* }
%"class.blink::ThreadSafeScriptContainer" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.WTF::Mutex", %"class.WTF::ThreadCondition", %"class.WTF::HashMap.991", %"class.blink::KURL", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.986" }
%"class.base::RefCountedThreadSafe.986" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::ThreadCondition" = type { %union.pthread_cond_t, %"struct.WTF::PlatformMutex"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.987, %union.anon.989, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.987 = type { i64 }
%union.anon.989 = type { i64 }
%"class.WTF::HashMap.991" = type { %"class.WTF::HashTable.992" }
%"class.WTF::HashTable.992" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.996 }
%class.scoped_refptr.996 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%"class.mojo::PendingRemote.1000" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1001" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1416" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.640", i32 }>
%"class.std::__1::unique_ptr.1416" = type { %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"class.blink::mojom::blink::ServiceWorkerHostProxy"* }
%"class.blink::mojom::blink::ServiceWorkerHostProxy" = type { %"class.blink::mojom::blink::ServiceWorkerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ServiceWorkerHost" = type { i32 (...)** }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1003" }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1424", %"class.blink::Member.1425", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1424" = type { i8 }
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::ServiceWorkerGlobalScope"* }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::ServiceWorkerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.516, %"class.std::__1::unique_ptr.640", %"class.base::WeakPtrFactory.1427" }
%"class.base::WeakPtrFactory.1427" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::ServiceWorkerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::ServiceWorker"* }
%"class.WTF::HashMap.1005" = type { %"class.WTF::HashTable.1006" }
%"class.WTF::HashTable.1006" = type <{ %"struct.WTF::KeyValuePair.1009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1009" = type opaque
%"class.WTF::HashMap.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"struct.WTF::KeyValuePair.1014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1014" = type opaque
%"class.blink::HeapHashMap.1015" = type { %"class.WTF::HashMap.1018" }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1021" = type opaque
%"class.blink::HeapHashMap.1022" = type { %"class.WTF::HashMap.1025" }
%"class.WTF::HashMap.1025" = type { %"class.WTF::HashTable.1026" }
%"class.WTF::HashTable.1026" = type <{ %"struct.WTF::KeyValuePair.1028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1028" = type opaque
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type opaque
%"class.WTF::HashMap.1036" = type { %"class.WTF::HashTable.1037" }
%"class.WTF::HashTable.1037" = type <{ %"struct.WTF::KeyValuePair.1040"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1040" = type opaque
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::ServiceWorkerEventQueue"* }
%"class.blink::ServiceWorkerEventQueue" = type { %class.scoped_refptr.522, %"class.WTF::HashMap.1044", %"class.base::RepeatingCallback.1049", %"class.base::RepeatingCallback.643", %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, %"class.std::__1::map.1051", %"class.std::__1::map.1051", i8, i32, i32, %"class.base::RepeatingTimer", %"class.base::TickClock"*, i32, %"class.base::WeakPtrFactory.1062" }
%"class.WTF::HashMap.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"struct.WTF::KeyValuePair.1048"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1048" = type opaque
%"class.base::RepeatingCallback.1049" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1051" = type { %"class.std::__1::__tree.1052" }
%"class.std::__1::__tree.1052" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1053", %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.643" }
%"class.base::WeakPtrFactory.1062" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiverSet" = type { %"class.blink::Member.1066" }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper"* }
%"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1430", %"class.blink::Member.1425", %"class.mojo::ReceiverSetBase" }
%"class.blink::ThreadState::PrefinalizerRegistration.1430" = type { i8 }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.643", %"class.base::RepeatingCallback.1431", i64, %"class.std::__1::map.1432", i8*, i64, %"class.base::WeakPtrFactory.1441" }
%"class.base::RepeatingCallback.1431" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1432" = type { %"class.std::__1::__tree.1433" }
%"class.std::__1::__tree.1433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1434", %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::WeakPtrFactory.1441" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.util::TokenType.1068" = type { %"class.base::StrongAlias.1069" }
%"class.base::StrongAlias.1069" = type { %"class.base::UnguessableToken" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)*, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.1359" }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ServiceWorkerWindowClient" = type { %"class.blink::ServiceWorkerClient.base", i8, i8, [2 x i8] }
%"class.blink::ServiceWorkerClient.base" = type <{ %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", i32, i32, i32 }>
%"class.blink::ServiceWorkerClient" = type <{ %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8] }>
%"class.blink::ClientQueryOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.1371" = type { %"class.blink::mojom::blink::ServiceWorkerClientQueryOptions", i32 }
%"class.blink::mojom::blink::ServiceWorkerClientQueryOptions" = type { i8, i32 }
%"class.base::OnceCallback.1372" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"class.mojo::StructPtr.1362"*, i32, i32 }
%"struct.base::internal::BindState.1492" = type { %"class.base::internal::BindStateBase", void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)*, %"class.std::__1::tuple" }
%"class.blink::HeapVector.1463" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::Member.1469"*, i32, i32 }
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::ServiceWorkerClient"* }
%"class.base::OnceCallback.1378" = type { %"class.base::internal::CallbackBase" }
%"struct.base::internal::BindState.1497" = type { %"class.base::internal::BindStateBase", void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)*, %"class.std::__1::tuple" }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1380", i8* }
%"class.WTF::StringAppend.1380" = type { i8*, %"class.WTF::String" }
%"class.base::OnceCallback.1381" = type { %"class.base::internal::CallbackBase" }
%"class.v8::Value" = type { i8 }
%"class.WTF::StringTypeAdapter.1498" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.184" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.184" = type { %"class.v8::Context"* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.absl::optional.1484" = type { %"class.absl::optional_internal::optional_data.1485" }
%"class.absl::optional_internal::optional_data.1485" = type { %"class.absl::optional_internal::optional_data_base.1486" }
%"class.absl::optional_internal::optional_data_base.1486" = type { %"class.absl::optional_internal::optional_data_dtor_base.1487" }
%"class.absl::optional_internal::optional_data_dtor_base.1487" = type { i8, %union.anon.1488 }
%union.anon.1488 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.WTF::StringTypeAdapter.1499" = type { %"class.WTF::StringTypeAdapter.1500" }
%"class.WTF::StringTypeAdapter.1500" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink20ServiceWorkerClientsD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink20ServiceWorkerClients18GetWrapperTypeInfoEv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_19ServiceWorkerClientEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25ServiceWorkerWindowClientEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ServiceWorkerClientEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19ServiceWorkerClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS6_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEEC2ISG_JSI_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverENS3_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS3_10PersistentIS4_EEEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA30_KcEEEPS1_DpOT_ = comdat any

$_ZTVN5blink20ServiceWorkerClientsE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20ServiceWorkerClientsE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::ServiceWorkerClients"*)* @_ZN5blink20ServiceWorkerClientsD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::ServiceWorkerClients"*)* @_ZNK5blink20ServiceWorkerClients18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"' is not a valid URL.\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"' cannot be opened.\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Not allowed to open a window.\00", align 1
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.6 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"worker\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"sharedworker\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19ServiceWorkerClientEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [179 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ServiceWorkerClient>, WTF::VectorTraits<blink::Member<blink::ServiceWorkerClient> > >]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.21 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink20ServiceWorkerClients18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink20ServiceWorkerClientsC1Ev = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerClients"*), void (%"class.blink::ServiceWorkerClients"*)* @_ZN5blink20ServiceWorkerClientsC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ServiceWorkerClients"* @_ZN5blink20ServiceWorkerClients6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 16) #12
  %2 = bitcast i8* %1 to %"class.blink::ServiceWorkerClients"*
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i64**
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink20ServiceWorkerClientsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  ret %"class.blink::ServiceWorkerClients"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink20ServiceWorkerClientsC2Ev(%"class.blink::ServiceWorkerClients"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerClients", %"class.blink::ServiceWorkerClients"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerClients", %"class.blink::ServiceWorkerClients"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink20ServiceWorkerClientsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ServiceWorkerClients3getEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ServiceWorkerClients"* nocapture readnone, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.1361", align 8
  %6 = alloca void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)*, align 8
  %7 = alloca %"class.blink::Persistent.1359", align 8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #12
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 -1, i32 22
  %11 = icmp eq %"class.blink::DOMTimerCoordinator"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  br label %89

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::DOMTimerCoordinator"* %10 to %"class.blink::ServiceWorkerGlobalScope"*
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #12
  %18 = bitcast i8* %17 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %18, %"class.blink::ScriptState"* %2) #12
  %19 = getelementptr inbounds i8, i8* %17, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = tail call %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"* nonnull %16) #12
  %24 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  store void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)* @_ZN5blink12_GLOBAL__N_112DidGetClientEPNS_21ScriptPromiseResolverEN4mojo9StructPtrINS_5mojom5blink23ServiceWorkerClientInfoEEE, void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** %6, align 8
  %25 = bitcast %"class.blink::Persistent.1359"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %7, i64 0, i32 0
  %27 = bitcast %"class.blink::Persistent.1359"* %7 to i8**
  store i8* %17, i8** %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !2
  %29 = ptrtoint i8* %17 to i64
  switch i64 %29, label %30 [
    i64 0, label %56
    i64 -1, label %56
  ]

30:                                               ; preds = %15
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !2
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #12, !noalias !2
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #12
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8, !noalias !2
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8, !noalias !2
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8, !noalias !2
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %46, label %49, !prof !5

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %47) #12
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi %"class.blink::PersistentNode"* [ %48, %46 ], [ %44, %37 ]
  %51 = bitcast %"class.blink::PersistentNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !2
  %53 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  store i64 %52, i64* %53, align 8, !noalias !2
  %54 = bitcast %"class.blink::PersistentNode"* %50 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %26, %"class.blink::PersistentBase.1360"** %54, align 8, !noalias !2
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %50, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %50, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !2
  br label %56

56:                                               ; preds = %15, %15, %49
  %57 = call i8* @_Znwm(i64 56) #13, !noalias !6
  %58 = bitcast i8* %57 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %58, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1362"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** nonnull dereferenceable(8) %6, %"class.blink::Persistent.1359"* nonnull dereferenceable(16) %7) #12, !noalias !6
  %59 = bitcast %"class.base::OnceCallback.1361"* %5 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !6
  %60 = bitcast %"class.blink::mojom::blink::ServiceWorkerHost"* %23 to void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)***
  %61 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)**, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)** %61, i64 5
  %63 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.WTF::String"*, %"class.base::OnceCallback.1361"*)** %62, align 8
  call void %63(%"class.blink::mojom::blink::ServiceWorkerHost"* %23, %"class.WTF::String"* dereferenceable(8) %3, %"class.base::OnceCallback.1361"* nonnull %5) #12
  %64 = getelementptr inbounds %"class.base::OnceCallback.1361", %"class.base::OnceCallback.1361"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #12
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %66 = icmp eq %"class.blink::PersistentNode"* %65, null
  br i1 %66, label %86, label %67

67:                                               ; preds = %56
  %68 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %69 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %68, i64 0, i32 1
  %70 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %69) #12
  %71 = icmp eq i8* %70, null
  br i1 %71, label %72, label %74, !prof !5

72:                                               ; preds = %67
  %73 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %69, i8* %73) #12
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i8* [ %73, %72 ], [ %70, %67 ]
  %76 = bitcast i8* %75 to %"class.blink::ThreadState"**
  %77 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %78, align 8
  %80 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %81 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %79, i64 0, i32 0, i32 0
  %82 = bitcast %"class.blink::PersistentRegion"* %79 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.blink::PersistentNode"* %80 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %80, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %85, align 8
  store %"class.blink::PersistentNode"* %80, %"class.blink::PersistentNode"** %81, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8
  br label %86

86:                                               ; preds = %56, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %87 = getelementptr inbounds i8, i8* %17, i64 48
  %88 = bitcast i8* %87 to %"class.blink::ScriptPromise::InternalResolver"*
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %88) #12
  br label %89

89:                                               ; preds = %86, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112DidGetClientEPNS_21ScriptPromiseResolverEN4mojo9StructPtrINS_5mojom5blink23ServiceWorkerClientInfoEEE(%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"* nocapture readonly) #0 {
  %3 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #12
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #12
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %7, i64 0, i32 13
  %9 = load i8, i8* %8, align 4, !range !13
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::mojom::blink::ServiceWorkerClientInfo"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %12, align 8
  %14 = icmp eq %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %0, i32 1) #12
  br label %36

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerClientInfo", %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %13, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %34 [
    i32 0, label %19
    i32 1, label %27
    i32 2, label %27
    i32 3, label %36
  ]

19:                                               ; preds = %16
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %21 = bitcast i8* %20 to %"class.blink::ServiceWorkerWindowClient"*
  tail call void @_ZN5blink25ServiceWorkerWindowClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerWindowClient"* %21, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* nonnull dereferenceable(160) %13) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = bitcast i8* %20 to %"class.blink::ServiceWorkerClient"*
  br label %34

27:                                               ; preds = %16, %16
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %29 = bitcast i8* %28 to %"class.blink::ServiceWorkerClient"*
  tail call void @_ZN5blink19ServiceWorkerClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerClient"* %29, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* nonnull dereferenceable(160) %13) #12
  %30 = getelementptr inbounds i8, i8* %28, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  br label %34

34:                                               ; preds = %16, %27, %19
  %35 = phi %"class.blink::ServiceWorkerClient"* [ null, %16 ], [ %29, %27 ], [ %26, %19 ]
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_19ServiceWorkerClientEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %0, %"class.blink::ServiceWorkerClient"* %35, i32 1) #12
  br label %36

36:                                               ; preds = %6, %34, %16, %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ServiceWorkerClients8matchAllEPNS_11ScriptStateEPKNS_18ClientQueryOptionsE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ServiceWorkerClients"* nocapture readnone, %"class.blink::ScriptState"*, %"class.blink::ClientQueryOptions"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.mojo::InlinedStructPtr.1371", align 4
  %14 = alloca %"class.base::OnceCallback.1372", align 8
  %15 = alloca void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)*, align 8
  %16 = alloca %"class.blink::Persistent.1359", align 8
  %17 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #12
  %18 = icmp eq %"class.blink::ExecutionContext"* %17, null
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 -1, i32 22
  %20 = icmp eq %"class.blink::DOMTimerCoordinator"* %19, null
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %4
  %23 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false)
  br label %206

24:                                               ; preds = %4
  %25 = bitcast %"class.blink::DOMTimerCoordinator"* %19 to %"class.blink::ServiceWorkerGlobalScope"*
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #12
  %27 = bitcast i8* %26 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %27, %"class.blink::ScriptState"* %2) #12
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = tail call %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"* nonnull %25) #12
  %33 = getelementptr inbounds %"class.blink::ClientQueryOptions", %"class.blink::ClientQueryOptions"* %3, i64 0, i32 2
  %34 = load i8, i8* %33, align 1, !range !13
  %35 = icmp ne i8 %34, 0
  %36 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.blink::ClientQueryOptions", %"class.blink::ClientQueryOptions"* %3, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %42, i64* %43, align 8
  br label %52

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

52:                                               ; preds = %44, %40
  %53 = phi i64 [ %51, %44 ], [ %42, %40 ]
  %54 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %54, i32* %55, align 8
  %56 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %53, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 6, i32* %59, align 8
  %60 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  br i1 %60, label %137, label %61

61:                                               ; preds = %52
  %62 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %67, i64* %68, align 8
  br label %77

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %77

77:                                               ; preds = %69, %65
  %78 = phi i64 [ %76, %69 ], [ %67, %65 ]
  %79 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %79, i32* %80, align 8
  %81 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %78, i64* %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 6, i32* %84, align 8
  %85 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  br i1 %85, label %137, label %86

86:                                               ; preds = %77
  %87 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %91, align 8
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %92, i64* %93, align 8
  br label %102

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %100 = bitcast i8** %99 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %102

102:                                              ; preds = %94, %90
  %103 = phi i64 [ %101, %94 ], [ %92, %90 ]
  %104 = phi i32 [ %97, %94 ], [ 0, %90 ]
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %104, i32* %105, align 8
  %106 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #12
  %107 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %103, i64* %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 12, i32* %109, align 8
  %110 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  br i1 %110, label %137, label %111

111:                                              ; preds = %102
  %112 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #12
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %116, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %117, i64* %118, align 8
  br label %127

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %127

127:                                              ; preds = %119, %115
  %128 = phi i64 [ %126, %119 ], [ %117, %115 ]
  %129 = phi i32 [ %122, %119 ], [ 0, %115 ]
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %129, i32* %130, align 8
  %131 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  %132 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %128, i64* %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %134, align 8
  %135 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #12
  %136 = select i1 %135, i32 3, i32 0
  br label %137

137:                                              ; preds = %52, %77, %102, %127
  %138 = phi i32 [ 0, %52 ], [ 1, %77 ], [ 2, %102 ], [ %136, %127 ]
  %139 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1371", %"class.mojo::InlinedStructPtr.1371"* %13, i64 0, i32 0
  call void @_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptionsC1EbNS0_23ServiceWorkerClientTypeE(%"class.blink::mojom::blink::ServiceWorkerClientQueryOptions"* nonnull %139, i1 zeroext %35, i32 %138) #12
  %140 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1371", %"class.mojo::InlinedStructPtr.1371"* %13, i64 0, i32 1
  store i32 1, i32* %140, align 4, !alias.scope !14
  %141 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #12
  store void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)* @_ZN5blink12_GLOBAL__N_113DidGetClientsEPNS_21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS3_18PartitionAllocatorEEE, void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** %15, align 8
  %142 = bitcast %"class.blink::Persistent.1359"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #12
  %143 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %16, i64 0, i32 0
  %144 = bitcast %"class.blink::Persistent.1359"* %16 to i8**
  store i8* %26, i8** %144, align 8, !alias.scope !17
  %145 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %16, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %145, align 8, !alias.scope !17
  %146 = ptrtoint i8* %26 to i64
  switch i64 %146, label %147 [
    i64 0, label %173
    i64 -1, label %173
  ]

147:                                              ; preds = %137
  %148 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !17
  %149 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %148, i64 0, i32 1
  %150 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %149) #12, !noalias !17
  %151 = icmp eq i8* %150, null
  br i1 %151, label %152, label %154, !prof !5

152:                                              ; preds = %147
  %153 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %149, i8* %153) #12
  br label %154

154:                                              ; preds = %152, %147
  %155 = phi i8* [ %153, %152 ], [ %150, %147 ]
  %156 = bitcast i8* %155 to %"class.blink::ThreadState"**
  %157 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %156, align 8, !noalias !17
  %158 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %158, align 8, !noalias !17
  %160 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %160, align 8, !noalias !17
  %162 = icmp eq %"class.blink::PersistentNode"* %161, null
  br i1 %162, label %163, label %166, !prof !5

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %159, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %164) #12
  %165 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %160, align 8
  br label %166

166:                                              ; preds = %163, %154
  %167 = phi %"class.blink::PersistentNode"* [ %165, %163 ], [ %161, %154 ]
  %168 = bitcast %"class.blink::PersistentNode"* %167 to i64*
  %169 = load i64, i64* %168, align 8, !noalias !17
  %170 = bitcast %"class.blink::PersistentRegion"* %159 to i64*
  store i64 %169, i64* %170, align 8, !noalias !17
  %171 = bitcast %"class.blink::PersistentNode"* %167 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %143, %"class.blink::PersistentBase.1360"** %171, align 8, !noalias !17
  %172 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %167, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %172, align 8
  store %"class.blink::PersistentNode"* %167, %"class.blink::PersistentNode"** %145, align 8, !alias.scope !17
  br label %173

173:                                              ; preds = %137, %137, %166
  %174 = call i8* @_Znwm(i64 56) #13, !noalias !20
  %175 = bitcast i8* %174 to %"struct.base::internal::BindState.1492"*
  call void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEEC2ISG_JSI_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1492"* nonnull %175, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.1373"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS6_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_ to void ()*), void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** nonnull dereferenceable(8) %15, %"class.blink::Persistent.1359"* nonnull dereferenceable(16) %16) #12, !noalias !20
  %176 = bitcast %"class.base::OnceCallback.1372"* %14 to i8**
  store i8* %174, i8** %176, align 8, !alias.scope !20
  %177 = bitcast %"class.blink::mojom::blink::ServiceWorkerHost"* %32 to void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)***
  %178 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)**, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)** %178, i64 4
  %180 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.mojo::InlinedStructPtr.1371"*, %"class.base::OnceCallback.1372"*)** %179, align 8
  call void %180(%"class.blink::mojom::blink::ServiceWorkerHost"* %32, %"class.mojo::InlinedStructPtr.1371"* nonnull %13, %"class.base::OnceCallback.1372"* nonnull %14) #12
  %181 = getelementptr inbounds %"class.base::OnceCallback.1372", %"class.base::OnceCallback.1372"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %181) #12
  %182 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %145, align 8
  %183 = icmp eq %"class.blink::PersistentNode"* %182, null
  br i1 %183, label %203, label %184

184:                                              ; preds = %173
  %185 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %186 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %185, i64 0, i32 1
  %187 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %186) #12
  %188 = icmp eq i8* %187, null
  br i1 %188, label %189, label %191, !prof !5

189:                                              ; preds = %184
  %190 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %186, i8* %190) #12
  br label %191

191:                                              ; preds = %189, %184
  %192 = phi i8* [ %190, %189 ], [ %187, %184 ]
  %193 = bitcast i8* %192 to %"class.blink::ThreadState"**
  %194 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %194, i64 0, i32 3, i32 0, i32 0, i32 0
  %196 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %195, align 8
  %197 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %145, align 8
  %198 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %196, i64 0, i32 0, i32 0
  %199 = bitcast %"class.blink::PersistentRegion"* %196 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.blink::PersistentNode"* %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %197, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %202, align 8
  store %"class.blink::PersistentNode"* %197, %"class.blink::PersistentNode"** %198, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %145, align 8
  br label %203

203:                                              ; preds = %173, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #12
  call void @_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptionsD1Ev(%"class.blink::mojom::blink::ServiceWorkerClientQueryOptions"* nonnull %139) #12
  %204 = getelementptr inbounds i8, i8* %26, i64 48
  %205 = bitcast i8* %204 to %"class.blink::ScriptPromise::InternalResolver"*
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %205) #12
  br label %206

206:                                              ; preds = %203, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_113DidGetClientsEPNS_21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"* nocapture readonly) #0 {
  %3 = alloca %"class.blink::HeapVector.1463", align 8
  %4 = alloca %"class.blink::HeapVector.1463", align 8
  %5 = alloca %"class.blink::ServiceWorkerWindowClient"*, align 8
  %6 = alloca %"class.blink::ServiceWorkerClient"*, align 8
  %7 = alloca %"class.blink::HeapVector.1463", align 8
  %8 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #12
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %125, label %11

11:                                               ; preds = %2
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #12
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 13
  %14 = load i8, i8* %13, align 4, !range !13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %125

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::HeapVector.1463"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #12
  %21 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.mojo::StructPtr.1362"*, %"class.mojo::StructPtr.1362"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %1, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %16
  %29 = bitcast %"class.blink::HeapVector.1463"* %4 to i64*
  br label %41

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %4, i64 0, i32 0
  %32 = bitcast %"class.blink::ServiceWorkerClient"** %6 to i8*
  %33 = bitcast %"class.blink::ServiceWorkerClient"** %6 to i8**
  %34 = bitcast %"class.blink::ServiceWorkerWindowClient"** %5 to i8*
  %35 = bitcast %"class.blink::ServiceWorkerWindowClient"** %5 to i8**
  br label %66

36:                                               ; preds = %121
  %37 = bitcast %"class.blink::HeapVector.1463"* %4 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i32, i32* %19, align 8
  %40 = load i32, i32* %20, align 4
  br label %41

41:                                               ; preds = %28, %36
  %42 = phi i64* [ %29, %28 ], [ %37, %36 ]
  %43 = phi i32 [ 0, %28 ], [ %40, %36 ]
  %44 = phi i32 [ 0, %28 ], [ %39, %36 ]
  %45 = phi i64 [ 0, %28 ], [ %38, %36 ]
  %46 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.blink::HeapVector.1463"* %7 to i64*
  store i64 0, i64* %48, align 8
  %49 = bitcast %"class.blink::HeapVector.1463"* %7 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store atomic i64 %45, i64* %49 monotonic, align 8
  store i32 %44, i32* %46, align 8
  store i32 0, i32* %19, align 8
  store i32 %43, i32* %47, align 4
  store i32 0, i32* %20, align 4
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %41
  %53 = inttoptr i64 %45 to i8*
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %52, %41
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::HeapVector.1463"* %4 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #12
  br label %62

62:                                               ; preds = %55, %58
  %63 = bitcast %"class.blink::HeapVector.1463"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63)
  %64 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %3, i64 0, i32 0
  %65 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %7, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1466"* nonnull %64, %"class.WTF::Vector.1466"* nonnull dereferenceable(16) %65) #12
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %0, %"class.blink::HeapVector.1463"* nonnull %3, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  br label %125

66:                                               ; preds = %30, %121
  %67 = phi %"class.mojo::StructPtr.1362"* [ %22, %30 ], [ %123, %121 ]
  %68 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::mojom::blink::ServiceWorkerClientInfo"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerClientInfo", %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %97

73:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %74 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %75 = bitcast i8* %74 to %"class.blink::ServiceWorkerWindowClient"*
  call void @_ZN5blink25ServiceWorkerWindowClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerWindowClient"* %75, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* dereferenceable(160) %69) #12
  %76 = getelementptr inbounds i8, i8* %74, i64 -4
  %77 = bitcast i8* %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = or i16 %78, 1
  store atomic i16 %79, i16* %77 release, align 2
  store i8* %74, i8** %35, align 8
  %80 = load i32, i32* %20, align 4
  %81 = load i32, i32* %19, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %96, label %83, !prof !5

83:                                               ; preds = %73
  %84 = ptrtoint i8* %74 to i64
  %85 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %18, align 8
  %86 = zext i32 %80 to i64
  %87 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %85, i64 %86
  %88 = bitcast %"class.blink::Member.1469"* %87 to i64*
  store atomic i64 %84, i64* %88 monotonic, align 8
  %89 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %83
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #12
  br label %93

93:                                               ; preds = %91, %83
  %94 = load i32, i32* %20, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %20, align 4
  br label %121

96:                                               ; preds = %73
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25ServiceWorkerWindowClientEEEvOT_(%"class.WTF::Vector.1466"* nonnull %31, %"class.blink::ServiceWorkerWindowClient"** nonnull dereferenceable(8) %5) #12
  br label %121

97:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %98 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %99 = bitcast i8* %98 to %"class.blink::ServiceWorkerClient"*
  call void @_ZN5blink19ServiceWorkerClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerClient"* %99, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* dereferenceable(160) %69) #12
  %100 = getelementptr inbounds i8, i8* %98, i64 -4
  %101 = bitcast i8* %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = or i16 %102, 1
  store atomic i16 %103, i16* %101 release, align 2
  store i8* %98, i8** %33, align 8
  %104 = load i32, i32* %20, align 4
  %105 = load i32, i32* %19, align 8
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %120, label %107, !prof !5

107:                                              ; preds = %97
  %108 = ptrtoint i8* %98 to i64
  %109 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %18, align 8
  %110 = zext i32 %104 to i64
  %111 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %109, i64 %110
  %112 = bitcast %"class.blink::Member.1469"* %111 to i64*
  store atomic i64 %108, i64* %112 monotonic, align 8
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  %116 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %98) #12
  br label %117

117:                                              ; preds = %115, %107
  %118 = load i32, i32* %20, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %20, align 4
  br label %121

120:                                              ; preds = %97
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1466"* nonnull %31, %"class.blink::ServiceWorkerClient"** nonnull dereferenceable(8) %6) #12
  br label %121

121:                                              ; preds = %120, %117, %96, %93
  %122 = phi i8* [ %34, %93 ], [ %34, %96 ], [ %32, %117 ], [ %32, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %123 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %67, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.1362"* %123, %26
  br i1 %124, label %36, label %66

125:                                              ; preds = %11, %2, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ServiceWorkerClients5claimEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ServiceWorkerClients"* nocapture readnone, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.1378", align 8
  %5 = alloca void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)*, align 8
  %6 = alloca %"class.blink::Persistent.1359", align 8
  %7 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #12
  %8 = icmp eq %"class.blink::ExecutionContext"* %7, null
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %7, i64 -1, i32 22
  %10 = icmp eq %"class.blink::DOMTimerCoordinator"* %9, null
  %11 = or i1 %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  br label %88

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::DOMTimerCoordinator"* %9 to %"class.blink::ServiceWorkerGlobalScope"*
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #12
  %17 = bitcast i8* %16 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %17, %"class.blink::ScriptState"* %2) #12
  %18 = getelementptr inbounds i8, i8* %16, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = tail call %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"* nonnull %15) #12
  %23 = bitcast void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  store void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)* @_ZN5blink12_GLOBAL__N_18DidClaimEPNS_21ScriptPromiseResolverENS_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringE, void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** %5, align 8
  %24 = bitcast %"class.blink::Persistent.1359"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %6, i64 0, i32 0
  %26 = bitcast %"class.blink::Persistent.1359"* %6 to i8**
  store i8* %16, i8** %26, align 8, !alias.scope !27
  %27 = getelementptr inbounds %"class.blink::Persistent.1359", %"class.blink::Persistent.1359"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8, !alias.scope !27
  %28 = ptrtoint i8* %16 to i64
  switch i64 %28, label %29 [
    i64 0, label %55
    i64 -1, label %55
  ]

29:                                               ; preds = %14
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !27
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #12, !noalias !27
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !5

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #12
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8, !noalias !27
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %40, align 8, !noalias !27
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8, !noalias !27
  %44 = icmp eq %"class.blink::PersistentNode"* %43, null
  br i1 %44, label %45, label %48, !prof !5

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %46) #12
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  br label %48

48:                                               ; preds = %45, %36
  %49 = phi %"class.blink::PersistentNode"* [ %47, %45 ], [ %43, %36 ]
  %50 = bitcast %"class.blink::PersistentNode"* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !27
  %52 = bitcast %"class.blink::PersistentRegion"* %41 to i64*
  store i64 %51, i64* %52, align 8, !noalias !27
  %53 = bitcast %"class.blink::PersistentNode"* %49 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %25, %"class.blink::PersistentBase.1360"** %53, align 8, !noalias !27
  %54 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %49, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %54, align 8
  store %"class.blink::PersistentNode"* %49, %"class.blink::PersistentNode"** %27, align 8, !alias.scope !27
  br label %55

55:                                               ; preds = %14, %14, %48
  %56 = call i8* @_Znwm(i64 56) #13, !noalias !30
  %57 = bitcast i8* %56 to %"struct.base::internal::BindState.1497"*
  call void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1497"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverENS3_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS3_10PersistentIS4_EEEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_ to void ()*), void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** nonnull dereferenceable(8) %5, %"class.blink::Persistent.1359"* nonnull dereferenceable(16) %6) #12, !noalias !30
  %58 = bitcast %"class.base::OnceCallback.1378"* %4 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !30
  %59 = bitcast %"class.blink::mojom::blink::ServiceWorkerHost"* %22 to void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)***
  %60 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)**, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)** %60, i64 12
  %62 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.base::OnceCallback.1378"*)** %61, align 8
  call void %62(%"class.blink::mojom::blink::ServiceWorkerHost"* %22, %"class.base::OnceCallback.1378"* nonnull %4) #12
  %63 = getelementptr inbounds %"class.base::OnceCallback.1378", %"class.base::OnceCallback.1378"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #12
  %64 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %65 = icmp eq %"class.blink::PersistentNode"* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %55
  %67 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %68 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %67, i64 0, i32 1
  %69 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %68) #12
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %73, !prof !5

71:                                               ; preds = %66
  %72 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %68, i8* %72) #12
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i8* [ %72, %71 ], [ %69, %66 ]
  %75 = bitcast i8* %74 to %"class.blink::ThreadState"**
  %76 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %77, align 8
  %79 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0, i32 0
  %81 = bitcast %"class.blink::PersistentRegion"* %78 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::PersistentNode"* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %79, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %84, align 8
  store %"class.blink::PersistentNode"* %79, %"class.blink::PersistentNode"** %80, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %85

85:                                               ; preds = %55, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %86 = getelementptr inbounds i8, i8* %16, i64 48
  %87 = bitcast i8* %86 to %"class.blink::ScriptPromise::InternalResolver"*
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %87) #12
  br label %88

88:                                               ; preds = %85, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_18DidClaimEPNS_21ScriptPromiseResolverENS_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringE(%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"* dereferenceable(8)) #0 {
  %4 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %5 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %4) #12
  %6 = icmp eq %"class.blink::ExecutionContext"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %4) #12
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 13
  %10 = load i8, i8* %9, align 4, !range !13
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = tail call %"class.blink::DOMException"* @_ZN5blink18ServiceWorkerError12GetExceptionEPNS_21ScriptPromiseResolverENS_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringE(%"class.blink::ScriptPromiseResolver"* %0, i32 %1, %"class.WTF::String"* dereferenceable(8) %2) #12
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %0, %"class.blink::DOMException"* %15, i32 2) #12
  br label %17

16:                                               ; preds = %12
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %0, i32 1) #12
  br label %17

17:                                               ; preds = %7, %3, %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ServiceWorkerClients10openWindowEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ServiceWorkerClients"* nocapture readnone, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.base::OnceCallback.1381", align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %14, %"class.blink::ScriptState"* %2) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds i8, i8* %13, i64 48
  %20 = bitcast i8* %19 to %"class.blink::ScriptPromise::InternalResolver"*
  %21 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 32, i1 false)
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %20) #12
  %22 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #12
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  %24 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %22, i64 -1, i32 22
  %25 = bitcast %"class.blink::DOMTimerCoordinator"* %24 to %"class.blink::ServiceWorkerGlobalScope"*
  %26 = select i1 %23, %"class.blink::ServiceWorkerGlobalScope"* null, %"class.blink::ServiceWorkerGlobalScope"* %25
  %27 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %27) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 112, i1 false)
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.blink::ServiceWorkerGlobalScope", %"class.blink::ServiceWorkerGlobalScope"* %26, i64 0, i32 0
  %30 = tail call %"class.blink::WorkerLocation"* @_ZNK5blink17WorkerGlobalScope8locationEv(%"class.blink::WorkerGlobalScope"* %29) #12
  %31 = getelementptr inbounds %"class.blink::WorkerLocation", %"class.blink::WorkerLocation"* %30, i64 0, i32 2
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %31) #12
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %5, %"class.blink::KURL"* nonnull dereferenceable(112) %6, %"class.WTF::String"* dereferenceable(8) %3) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %28) #12
  %32 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %5) #12
  br i1 %32, label %183, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  %37 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %116, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %58

48:                                               ; preds = %41
  %49 = zext i32 %47 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !5

55:                                               ; preds = %48
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %48
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %46, align 4
  br label %58

58:                                               ; preds = %56, %41
  %59 = phi i32 [ %57, %56 ], [ %47, %41 ]
  %60 = load atomic i32, i32* %42 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %58
  %64 = zext i32 %59 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #12
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !5

70:                                               ; preds = %63
  call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %63
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %46, align 4
  br label %73

73:                                               ; preds = %71, %58
  %74 = phi i32 [ %72, %71 ], [ %59, %58 ]
  %75 = load atomic i32, i32* %42 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = add i32 %74, -1
  store i32 %79, i32* %46, align 4
  br label %80

80:                                               ; preds = %78, %73
  %81 = phi i32 [ %79, %78 ], [ %74, %73 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %84

84:                                               ; preds = %80, %83
  %85 = load atomic i32, i32* %42 monotonic, align 4, !noalias !37
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = load i32, i32* %46, align 4
  br i1 %87, label %89, label %99

89:                                               ; preds = %84
  %90 = zext i32 %88 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !5

96:                                               ; preds = %89
  call void @llvm.trap() #12, !noalias !37
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %46, align 4, !noalias !37
  br label %99

99:                                               ; preds = %84, %97
  %100 = phi i32 [ %98, %97 ], [ %88, %84 ]
  %101 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([2 x i8]* @.str to i64), i64* %101, align 8, !alias.scope !37
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %102, align 8, !alias.scope !37
  %103 = load atomic i32, i32* %42 monotonic, align 4, !noalias !37
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %120

106:                                              ; preds = %99
  %107 = zext i32 %100 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #12
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !5

113:                                              ; preds = %106
  call void @llvm.trap() #12, !noalias !37
  unreachable

114:                                              ; preds = %106
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %46, align 4, !noalias !37
  br label %120

116:                                              ; preds = %33
  %117 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([2 x i8]* @.str to i64), i64* %117, align 8, !alias.scope !37
  %118 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8, !alias.scope !37
  %119 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8** %119, align 8, !alias.scope !37
  br label %132

120:                                              ; preds = %114, %99
  %121 = phi i32 [ %115, %114 ], [ %100, %99 ]
  %122 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8** %122, align 8, !alias.scope !37
  %123 = load atomic i32, i32* %42 monotonic, align 4, !noalias !37
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = add i32 %121, -1
  store i32 %127, i32* %46, align 4, !noalias !37
  br label %128

128:                                              ; preds = %126, %120
  %129 = phi i32 [ %127, %126 ], [ %121, %120 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12, !noalias !37
  br label %132

132:                                              ; preds = %116, %128, %131
  %133 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %134, align 8
  %135 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %35, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %14, %"class.v8::Value"* %135, i32 2) #12
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #12
  br label %151

151:                                              ; preds = %132, %147, %150
  %152 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #12
  br label %168

168:                                              ; preds = %151, %164, %167
  br i1 %40, label %182, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %182

182:                                              ; preds = %168, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %361

183:                                              ; preds = %4
  %184 = getelementptr inbounds %"class.blink::ServiceWorkerGlobalScope", %"class.blink::ServiceWorkerGlobalScope"* %26, i64 0, i32 0, i32 0, i32 1
  %185 = bitcast %"class.blink::ExecutionContext.base"* %184 to %"class.blink::ExecutionContext"*
  %186 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %185) #12
  %187 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanDisplayERKNS_4KURLE(%"class.blink::SecurityOrigin"* %186, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #12
  br i1 %187, label %349, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %190 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %189, align 8
  %191 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #12
  %192 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #12
  %193 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* nonnull %5) #12
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %270, label %195

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %212

202:                                              ; preds = %195
  %203 = zext i32 %201 to i33
  %204 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %203, i33 1) #12
  %205 = extractvalue { i33, i1 } %204, 1
  %206 = extractvalue { i33, i1 } %204, 0
  %207 = icmp slt i33 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %210, !prof !5

209:                                              ; preds = %202
  call void @llvm.trap() #12
  unreachable

210:                                              ; preds = %202
  %211 = trunc i33 %206 to i32
  store i32 %211, i32* %200, align 4
  br label %212

212:                                              ; preds = %210, %195
  %213 = phi i32 [ %211, %210 ], [ %201, %195 ]
  %214 = load atomic i32, i32* %196 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %227

217:                                              ; preds = %212
  %218 = zext i32 %213 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #12
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !5

224:                                              ; preds = %217
  call void @llvm.trap() #12
  unreachable

225:                                              ; preds = %217
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %200, align 4
  br label %227

227:                                              ; preds = %225, %212
  %228 = phi i32 [ %226, %225 ], [ %213, %212 ]
  %229 = load atomic i32, i32* %196 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %227
  %233 = add i32 %228, -1
  store i32 %233, i32* %200, align 4
  br label %234

234:                                              ; preds = %232, %227
  %235 = phi i32 [ %233, %232 ], [ %228, %227 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  br label %238

238:                                              ; preds = %234, %237
  %239 = load atomic i32, i32* %196 monotonic, align 4, !noalias !40
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = load i32, i32* %200, align 4
  br i1 %241, label %243, label %253

243:                                              ; preds = %238
  %244 = zext i32 %242 to i33
  %245 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %244, i33 1) #12
  %246 = extractvalue { i33, i1 } %245, 1
  %247 = extractvalue { i33, i1 } %245, 0
  %248 = icmp slt i33 %247, 0
  %249 = or i1 %246, %248
  br i1 %249, label %250, label %251, !prof !5

250:                                              ; preds = %243
  call void @llvm.trap() #12, !noalias !40
  unreachable

251:                                              ; preds = %243
  %252 = trunc i33 %247 to i32
  store i32 %252, i32* %200, align 4, !noalias !40
  br label %253

253:                                              ; preds = %238, %251
  %254 = phi i32 [ %252, %251 ], [ %242, %238 ]
  %255 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([2 x i8]* @.str to i64), i64* %255, align 8, !alias.scope !40
  %256 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %256, align 8, !alias.scope !40
  %257 = load atomic i32, i32* %196 monotonic, align 4, !noalias !40
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %274

260:                                              ; preds = %253
  %261 = zext i32 %254 to i33
  %262 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #12
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %268, !prof !5

267:                                              ; preds = %260
  call void @llvm.trap() #12, !noalias !40
  unreachable

268:                                              ; preds = %260
  %269 = trunc i33 %264 to i32
  store i32 %269, i32* %200, align 4, !noalias !40
  br label %274

270:                                              ; preds = %188
  %271 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([2 x i8]* @.str to i64), i64* %271, align 8, !alias.scope !40
  %272 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %272, align 8, !alias.scope !40
  %273 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8** %273, align 8, !alias.scope !40
  br label %286

274:                                              ; preds = %268, %253
  %275 = phi i32 [ %269, %268 ], [ %254, %253 ]
  %276 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8** %276, align 8, !alias.scope !40
  %277 = load atomic i32, i32* %196 monotonic, align 4, !noalias !40
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %274
  %281 = add i32 %275, -1
  store i32 %281, i32* %200, align 4, !noalias !40
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i32 [ %281, %280 ], [ %275, %274 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12, !noalias !40
  br label %286

286:                                              ; preds = %270, %282, %285
  %287 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %288 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %287, %"class.WTF::StringImpl"** %288, align 8
  %289 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %190, %"class.WTF::String"* nonnull dereferenceable(8) %9) #12
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %14, %"class.v8::Value"* %289, i32 2) #12
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #12
  br label %305

305:                                              ; preds = %286, %301, %304
  %306 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #12
  br label %322

322:                                              ; preds = %305, %318, %321
  br i1 %194, label %348, label %323

323:                                              ; preds = %322
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %337

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  %336 = load i32, i32* %328, align 4
  br label %337

337:                                              ; preds = %332, %335
  %338 = phi i32 [ %333, %332 ], [ %336, %335 ]
  %339 = load atomic i32, i32* %324 monotonic, align 4
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %337
  %343 = add i32 %338, -1
  store i32 %343, i32* %328, align 4
  br label %344

344:                                              ; preds = %342, %337
  %345 = phi i32 [ %343, %342 ], [ %338, %337 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  br label %348

348:                                              ; preds = %322, %344, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #12
  br label %361

349:                                              ; preds = %183
  %350 = call zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"* %185) #12
  br i1 %350, label %354, label %351

351:                                              ; preds = %349
  %352 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %352) #12
  store i32 15, i32* %11, align 4
  %353 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA30_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %11, [30 x i8]* nonnull dereferenceable(30) @.str.3) #12
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %14, %"class.blink::DOMException"* %353, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %352) #12
  br label %361

354:                                              ; preds = %349
  call void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"* %185) #12
  %355 = call %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"* %26) #12
  call void @_ZN5blink25ServiceWorkerWindowClient33CreateResolveWindowClientCallbackEPNS_21ScriptPromiseResolverE(%"class.base::OnceCallback.1381"* nonnull sret %12, %"class.blink::ScriptPromiseResolver"* %14) #12
  %356 = bitcast %"class.blink::mojom::blink::ServiceWorkerHost"* %355 to void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)***
  %357 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)**, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)** %357, i64 6
  %359 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1381"*)** %358, align 8
  call void %359(%"class.blink::mojom::blink::ServiceWorkerHost"* %355, %"class.blink::KURL"* nonnull dereferenceable(112) %5, %"class.base::OnceCallback.1381"* nonnull %12) #12
  %360 = getelementptr inbounds %"class.base::OnceCallback.1381", %"class.base::OnceCallback.1381"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %360) #12
  br label %361

361:                                              ; preds = %354, %351, %348, %182
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %27) #12
  ret void
}

declare %"class.blink::WorkerLocation"* @_ZNK5blink17WorkerGlobalScope8locationEv(%"class.blink::WorkerGlobalScope"*) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1498"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.1498"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !5

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !5

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin10CanDisplayERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink25ServiceWorkerWindowClient33CreateResolveWindowClientCallbackEPNS_21ScriptPromiseResolverE(%"class.base::OnceCallback.1381"* sret, %"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ServiceWorkerClientsD0Ev(%"class.blink::ServiceWorkerClients"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink20ServiceWorkerClients18GetWrapperTypeInfoEv(%"class.blink::ServiceWorkerClients"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20ServiceWorkerClients18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %111

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %111, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %16, align 8
  %18 = icmp eq %"class.blink::V8PerContextData"* %17, null
  br i1 %18, label %111, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %21 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #12
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %111, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #12
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 13
  %26 = load i8, i8* %25, align 4, !range !13
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %111

28:                                               ; preds = %23
  store i32 %1, i32* %6, align 8
  %29 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %31 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %33 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %33, %"class.v8::Isolate"* %35) #12
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::ScriptState"* %32 to %"class.v8::internal::Isolate"**
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = bitcast %"class.v8::Context"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %43) #12
  %45 = bitcast i64* %44 to %"class.v8::Context"*
  br label %46

46:                                               ; preds = %28, %39
  %47 = phi %"class.v8::Context"* [ %45, %39 ], [ null, %28 ]
  store %"class.v8::Context"* %47, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %47) #12
  %48 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %49 = load i32, i32* %48, align 4
  store i32 0, i32* %48, align 4
  %50 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %51 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %50, i64 0, i32 0
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %53 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  %54 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %52, i32 1) #12
  %55 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %56 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %57 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.v8::Context"*, %"class.v8::Context"** %57, align 8
  %59 = icmp eq %"class.v8::Context"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %46
  %61 = bitcast %"class.blink::ScriptState"* %56 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = bitcast %"class.v8::Context"* %58 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %62, i64 %64) #12
  %66 = bitcast i64* %65 to %"class.v8::Context"*
  br label %67

67:                                               ; preds = %46, %60
  %68 = phi %"class.v8::Context"* [ %66, %60 ], [ null, %46 ]
  %69 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %68) #12
  %70 = bitcast %"class.blink::ScriptState"** %10 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.233", %"class.blink::TraceWrapperV8Reference.233"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %75) #12
  %78 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %55 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %77, %67
  %80 = icmp eq i64 %73, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %73 to i64*
  %83 = bitcast %"class.v8::Isolate"* %52 to %"class.v8::internal::Isolate"*
  %84 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %55 to i64*
  %85 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %83, i64* nonnull %82, i64* %84, i1 zeroext false) #12
  %86 = ptrtoint i64* %85 to i64
  store atomic i64 %86, i64* %84 monotonic, align 8
  br label %87

87:                                               ; preds = %79, %81
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %55) #12
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  %88 = icmp eq i32* %48, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  store i32 %49, i32* %48, align 4
  br label %90

90:                                               ; preds = %87, %89
  %91 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #12
  %92 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %91) #12
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %109

94:                                               ; preds = %90
  %95 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #12
  %96 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %97 = ptrtoint i64* %3 to i64
  %98 = sub i64 %96, %97
  %99 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %100 = icmp ult i64 %98, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #12
  br i1 %100, label %103, label %101, !prof !43

101:                                              ; preds = %94
  %102 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  br label %103

103:                                              ; preds = %94, %101
  %104 = phi i32* [ %102, %101 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %94 ]
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %109

108:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %109

109:                                              ; preds = %108, %107, %93
  %110 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %110) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  br label %111

111:                                              ; preds = %23, %15, %9, %19, %2, %109
  ret void
}

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #3

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #3

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #3

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #3

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #3

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #3

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

declare void @_ZN5blink25ServiceWorkerWindowClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerWindowClient"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.226"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.226"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.226"*) local_unnamed_addr #3

declare void @_ZN5blink19ServiceWorkerClientC1ERKNS_5mojom5blink23ServiceWorkerClientInfoE(%"class.blink::ServiceWorkerClient"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_19ServiceWorkerClientEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ServiceWorkerClient"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #12
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #12
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #12
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::ServiceWorkerClient", %"class.blink::ServiceWorkerClient"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #12
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #12
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::ServiceWorkerClient"* %1, null
  br i1 %75, label %76, label %79, !prof !5

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #12
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #12
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #12
  %86 = bitcast %"class.blink::ServiceWorkerClient"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #12
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !5

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.233", %"class.blink::TraceWrapperV8Reference.233"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #12
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #12
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %56) #12
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #12
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #12
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  br i1 %123, label %126, label %124, !prof !43

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #12
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #12
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #12
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !13
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #12
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #12
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #12
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)) #12
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

declare void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise::InternalResolver"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_25ServiceWorkerWindowClientEEEvOT_(%"class.WTF::Vector.1466"*, %"class.blink::ServiceWorkerWindowClient"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1466"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %16, i64 %18
  %20 = bitcast %"class.blink::ServiceWorkerWindowClient"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1469"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1466"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !43

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1469"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ServiceWorkerClientEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1466"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1469"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1469"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !5

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !13
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1466"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1466"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1466"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1466"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ServiceWorkerClientEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1469"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1469"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !43

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1466"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.1466"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.1466"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ServiceWorkerClientEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.16, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.226"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.226"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19ServiceWorkerClientEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1469"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1469"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19ServiceWorkerClientEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19ServiceWorkerClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1466"*, %"class.blink::ServiceWorkerClient"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1466"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %16, i64 %18
  %20 = bitcast %"class.blink::ServiceWorkerClient"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1469"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::HeapVector.1463"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %112

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %112, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %112, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %112, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %112

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #12
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #12
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #12
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #12
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #12
  %71 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %72 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %71, i64 0, i32 0
  %73 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %72, align 8
  %74 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.1463"* dereferenceable(16) %1, %"class.v8::Object"* %70, %"class.v8::Isolate"* %73) #12
  %75 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.233", %"class.blink::TraceWrapperV8Reference.233"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %76) #12
  %79 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  br label %80

80:                                               ; preds = %78, %68
  %81 = icmp eq %"class.v8::Array"* %74, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::Array"* %74 to i64*
  %84 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %85 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  %86 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %84, i64* nonnull %83, i64* %85, i1 zeroext false) #12
  %87 = ptrtoint i64* %86 to i64
  store atomic i64 %87, i64* %85 monotonic, align 8
  br label %88

88:                                               ; preds = %80, %82
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %56) #12
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %89 = icmp eq i32* %49, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %88
  store i32 %50, i32* %49, align 4
  br label %91

91:                                               ; preds = %88, %90
  %92 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %93 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %92) #12
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %110

95:                                               ; preds = %91
  %96 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #12
  %97 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %98 = ptrtoint i64* %4 to i64
  %99 = sub i64 %97, %98
  %100 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %101 = icmp ult i64 %99, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #12
  br i1 %101, label %104, label %102, !prof !43

102:                                              ; preds = %95
  %103 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  br label %104

104:                                              ; preds = %95, %102
  %105 = phi i32* [ %103, %102 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %95 ]
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %110

109:                                              ; preds = %104
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %110

110:                                              ; preds = %109, %108, %94
  %111 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %111) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  br label %112

112:                                              ; preds = %24, %16, %10, %20, %3, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_19ServiceWorkerClientEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.1463"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.absl::optional.1484", align 8
  %5 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #12
  %6 = bitcast %"class.absl::optional.1484"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.1488* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #12
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !13
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !43

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #12
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #12
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #12
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #12
  %27 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !43

30:                                               ; preds = %25
  call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #12
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #12
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #12
  %35 = getelementptr inbounds %"class.blink::HeapVector.1463", %"class.blink::HeapVector.1463"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = add i64 %43, 160
  br label %46

46:                                               ; preds = %41, %79
  %47 = phi i32 [ 0, %41 ], [ %80, %79 ]
  %48 = phi %"class.blink::Member.1469"* [ %36, %41 ], [ %81, %79 ]
  %49 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::ServiceWorkerClient"*, %"class.blink::ServiceWorkerClient"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ServiceWorkerClient", %"class.blink::ServiceWorkerClient"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::ServiceWorkerClient"* %50, null
  br i1 %52, label %69, label %53, !prof !5

53:                                               ; preds = %46
  %54 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %51, %"class.v8::Isolate"* %2) #12
  %55 = ptrtoint %"class.v8::Object"* %54 to i64
  %56 = icmp eq %"class.v8::Object"* %54, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %42) #12
  %59 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #12
  %60 = bitcast %"class.blink::ServiceWorkerClient"* %50 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %51, %"class.blink::ScriptState"* %59) #12
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %66, label %67, !prof !5

66:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %67

67:                                               ; preds = %66, %57
  %68 = ptrtoint %"class.v8::Value"* %64 to i64
  br label %69

69:                                               ; preds = %46, %53, %67
  %70 = phi i64 [ %68, %67 ], [ %55, %53 ], [ %44, %46 ]
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i64 %45, i64 %70
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  %74 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %73) #12
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  %77 = icmp ult i16 %74, 256
  %78 = or i1 %77, %76
  br i1 %78, label %83, label %79, !prof !44

79:                                               ; preds = %69
  %80 = add i32 %47, 1
  %81 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %48, i64 1
  %82 = icmp eq %"class.blink::Member.1469"* %81, %39
  br i1 %82, label %83, label %46

83:                                               ; preds = %79, %69, %31
  %84 = phi i64 [ %33, %31 ], [ 0, %69 ], [ %33, %79 ]
  %85 = load i8, i8* %5, align 8, !range !13
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %88, align 8
  %90 = getelementptr inbounds %"class.absl::optional.1484", %"class.absl::optional.1484"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %90) #12
  %92 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %89, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %91, %"class.blink::RuntimeCallTimer"** %92, align 8
  store i8 0, i8* %5, align 8
  br label %93

93:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #12
  %94 = inttoptr i64 %84 to %"class.v8::Array"*
  ret %"class.v8::Array"* %94
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #3

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #3

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ServiceWorkerClientEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1466"*, %"class.WTF::Vector.1466"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.1469"* null, %"class.blink::Member.1469"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ServiceWorkerClientEEEEEmm(i64 %9) #12
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ServiceWorkerClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #12
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.1466"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.1469"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #12
  %22 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.1469"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.1466", %"class.WTF::Vector.1466"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.1469"*, %"class.blink::Member.1469"** %28, align 8
  %30 = icmp ne %"class.blink::Member.1469"* %24, null
  %31 = icmp ne %"class.blink::Member.1469"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !43

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.1469"* %24 to i8*
  %37 = bitcast %"class.blink::Member.1469"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #12
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.1469"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.1469"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.1469", %"class.blink::Member.1469"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptionsD1Ev(%"class.blink::mojom::blink::ServiceWorkerClientQueryOptions"*) unnamed_addr #4

declare %"class.blink::DOMException"* @_ZN5blink18ServiceWorkerError12GetExceptionEPNS_21ScriptPromiseResolverENS_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringE(%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::DOMException"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #12
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #12
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #12
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #12
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #12
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::DOMException"* %1, null
  br i1 %75, label %76, label %79, !prof !5

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #12
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #12
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #12
  %86 = bitcast %"class.blink::DOMException"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #12
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !5

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.233", %"class.blink::TraceWrapperV8Reference.233"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #12
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #12
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %56) #12
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #12
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #12
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  br i1 %123, label %126, label %124, !prof !43

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

declare void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.226"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.226"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptPromiseResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptPromiseResolver"*)***
  %4 = load void (%"class.blink::ScriptPromiseResolver"*)**, void (%"class.blink::ScriptPromiseResolver"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"**
  %5 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::ScriptPromiseResolver"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ScriptPromiseResolver"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1362"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.1362", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.mojo::StructPtr.1362"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.blink::ScriptPromiseResolver"**
  %10 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %9, align 8
  %11 = bitcast %"class.mojo::StructPtr.1362"* %3 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr.1362"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  call void %8(%"class.blink::ScriptPromiseResolver"* %10, %"class.mojo::StructPtr.1362"* nonnull %3) #12
  %15 = load %"class.blink::mojom::blink::ServiceWorkerClientInfo"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %12, align 8
  store %"class.blink::mojom::blink::ServiceWorkerClientInfo"* null, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %12, align 8
  %16 = icmp eq %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink23ServiceWorkerClientInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerClientInfo"* nonnull %15) #12
  %18 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerClientInfo", %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %15, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23ServiceWorkerClientInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerClientInfo"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** dereferenceable(8), %"class.blink::Persistent.1359"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1
  %7 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.mojo::StructPtr.1362"*)** %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.1359"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #12
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #12
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %11, %"class.blink::PersistentBase.1360"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptionsC1EbNS0_23ServiceWorkerClientTypeE(%"class.blink::mojom::blink::ServiceWorkerClientQueryOptions"*, i1 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS6_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_(%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.1373"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1373", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.WTF::Vector.1373"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.blink::ScriptPromiseResolver"**
  %10 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %3, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector.1373"* %1 to i64*
  %14 = bitcast %"class.WTF::Vector.1373"* %3 to i64*
  store i64 0, i64* %14, align 8
  %15 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %15, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %11, align 8
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 4
  store i32 0, i32* %18, align 4
  call void %8(%"class.blink::ScriptPromiseResolver"* %10, %"class.WTF::Vector.1373"* nonnull %3) #12
  %20 = getelementptr inbounds %"class.WTF::Vector.1373", %"class.WTF::Vector.1373"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.1362"*, %"class.mojo::StructPtr.1362"** %20, align 8
  %22 = icmp eq %"class.mojo::StructPtr.1362"* %21, null
  br i1 %22, label %45, label %23, !prof !43

23:                                               ; preds = %2
  %24 = bitcast %"class.mojo::StructPtr.1362"* %21 to i8*
  %25 = load i32, i32* %12, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27, !prof !5

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %21, i64 %28
  br label %30

30:                                               ; preds = %37, %27
  %31 = phi %"class.mojo::StructPtr.1362"* [ %38, %37 ], [ %21, %27 ]
  %32 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::mojom::blink::ServiceWorkerClientInfo"*, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %32, align 8
  store %"class.blink::mojom::blink::ServiceWorkerClientInfo"* null, %"class.blink::mojom::blink::ServiceWorkerClientInfo"** %32, align 8
  %34 = icmp eq %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  call void @_ZN5blink5mojom5blink23ServiceWorkerClientInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerClientInfo"* nonnull %33) #12
  %36 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerClientInfo", %"class.blink::mojom::blink::ServiceWorkerClientInfo"* %33, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30
  %38 = getelementptr inbounds %"class.mojo::StructPtr.1362", %"class.mojo::StructPtr.1362"* %31, i64 1
  %39 = icmp eq %"class.mojo::StructPtr.1362"* %38, %29
  br i1 %39, label %40, label %30

40:                                               ; preds = %37
  store i32 0, i32* %12, align 4
  %41 = bitcast %"class.WTF::Vector.1373"* %3 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %23
  %44 = phi i8* [ %42, %40 ], [ %24, %23 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #12
  store %"class.mojo::StructPtr.1362"* null, %"class.mojo::StructPtr.1362"** %20, align 8
  br label %45

45:                                               ; preds = %2, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEEC2ISG_JSI_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1492"*, void ()*, void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** dereferenceable(8), %"class.blink::Persistent.1359"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.1492", %"struct.base::internal::BindState.1492"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12
  %6 = getelementptr inbounds %"struct.base::internal::BindState.1492", %"struct.base::internal::BindState.1492"* %0, i64 0, i32 1
  %7 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.blink::ScriptPromiseResolver"*, %"class.WTF::Vector.1373"*)** %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1492", %"struct.base::internal::BindState.1492"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.1359"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.1492", %"struct.base::internal::BindState.1492"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #12
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #12
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %11, %"class.blink::PersistentBase.1360"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS5_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink21ScriptPromiseResolverENS3_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS3_10PersistentIS4_EEEEEFvS7_SB_EE7RunOnceEPNS0_13BindStateBaseES7_SB_(%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = load void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** %5, align 8
  %8 = bitcast void ()** %6 to %"class.blink::ScriptPromiseResolver"**
  %9 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %8, align 8
  tail call void %7(%"class.blink::ScriptPromiseResolver"* %9, i32 %1, %"class.WTF::String"* dereferenceable(8) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1497"*, void ()*, void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** dereferenceable(8), %"class.blink::Persistent.1359"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.1497", %"struct.base::internal::BindState.1497"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12
  %6 = getelementptr inbounds %"struct.base::internal::BindState.1497", %"struct.base::internal::BindState.1497"* %0, i64 0, i32 1
  %7 = bitcast void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.blink::ScriptPromiseResolver"*, i32, %"class.WTF::String"*)** %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1497", %"struct.base::internal::BindState.1497"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.1359"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.1497", %"struct.base::internal::BindState.1497"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #12
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #12
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1360"**
  store %"class.blink::PersistentBase.1360"* %11, %"class.blink::PersistentBase.1360"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink21ScriptPromiseResolverENS2_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1498"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1498", %"class.WTF::StringTypeAdapter.1498"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1498"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1380"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1380"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1499", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1498"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1498"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1498"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1498", %"class.WTF::StringTypeAdapter.1498"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1499"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1499"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1498"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1500"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1380"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1498"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1499", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1498"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1498"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1498"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1498", %"class.WTF::StringTypeAdapter.1498"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1499"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1499"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1498"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1499", %"class.WTF::StringTypeAdapter.1499"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1500"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1380"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1498"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1380"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1498", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1498"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1498", %"class.WTF::StringTypeAdapter.1498"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1380", %"class.WTF::StringAppend.1380"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1498"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1498"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1380", %"class.WTF::StringAppend.1380"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1498"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1500"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1498"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1500"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.v8::Value"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %108

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %108, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %108, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %108, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %108

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #12
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #12
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #12
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #12
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #12
  %71 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.233", %"class.blink::TraceWrapperV8Reference.233"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %72) #12
  %75 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  br label %76

76:                                               ; preds = %74, %68
  %77 = icmp eq %"class.v8::Value"* %1, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.v8::Value"* %1 to i64*
  %80 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %81 = bitcast %"class.blink::TraceWrapperV8Reference.233"* %56 to i64*
  %82 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %80, i64* nonnull %79, i64* %81, i1 zeroext false) #12
  %83 = ptrtoint i64* %82 to i64
  store atomic i64 %83, i64* %81 monotonic, align 8
  br label %84

84:                                               ; preds = %76, %78
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %56) #12
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %85 = icmp eq i32* %49, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  store i32 %50, i32* %49, align 4
  br label %87

87:                                               ; preds = %84, %86
  %88 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #12
  %89 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %88) #12
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %106

91:                                               ; preds = %87
  %92 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  %93 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %94 = ptrtoint i64* %4 to i64
  %95 = sub i64 %93, %94
  %96 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %97 = icmp ult i64 %95, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br i1 %97, label %100, label %98, !prof !43

98:                                               ; preds = %91
  %99 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32* [ %99, %98 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %91 ]
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %106

105:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #12
  br label %106

106:                                              ; preds = %105, %104, %90
  %107 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %107) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  br label %108

108:                                              ; preds = %24, %16, %10, %20, %3, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA30_KcEEEPS1_DpOT_(i32* dereferenceable(4), [30 x i8]* dereferenceable(30)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds [30 x i8], [30 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [30 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #14
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #12
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!11 = distinct !{!11, !12, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEEEJNS1_10PersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverEN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEEEJNS1_10PersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptions3NewIJbNS0_23ServiceWorkerClientTypeEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink5mojom5blink31ServiceWorkerClientQueryOptions3NewIJbNS0_23ServiceWorkerClientTypeEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_"}
!20 = !{!21, !23, !25}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS6_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS6_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS4_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverEN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS4_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!25 = distinct !{!25, !26, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverENS_6VectorIN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EEEFvSC_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverENS_6VectorIN4mojo9StructPtrINS1_5mojom5blink23ServiceWorkerClientInfoEEELj0ENS_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EEEFvSC_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_: argument 0"}
!29 = distinct !{!29, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_"}
!30 = !{!31, !33, !35}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverENS3_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink21ScriptPromiseResolverENS3_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverENS1_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIPFvPN5blink21ScriptPromiseResolverENS1_5mojom22ServiceWorkerErrorTypeERKN3WTF6StringEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!35 = distinct !{!35, !36, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverENS1_5mojom22ServiceWorkerErrorTypeERKNS_6StringEEJNS1_10PersistentIS2_EEEFvS5_S8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF4BindIPFvPN5blink21ScriptPromiseResolverENS1_5mojom22ServiceWorkerErrorTypeERKNS_6StringEEJNS1_10PersistentIS2_EEEFvS5_S8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!43 = !{!"branch_weights", i32 2000, i32 1}
!44 = !{!"branch_weights", i32 2002, i32 2000}
