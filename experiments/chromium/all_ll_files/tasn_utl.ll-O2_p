; ModuleID = '../../third_party/boringssl/src/crypto/asn1/tasn_utl.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/tasn_utl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_VALUE_st = type opaque
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.ASN1_ADB_st = type { i64, i64, %struct.asn1_must_be_null_st*, %struct.ASN1_ADB_TABLE_st*, i64, %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st* }
%struct.asn1_must_be_null_st = type opaque
%struct.ASN1_ADB_TABLE_st = type { i64, %struct.ASN1_TEMPLATE_st }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/asn1/tasn_utl.c\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st** nocapture readonly, i32, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #1 {
  %4 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %2, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  store i32 %1, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @asn1_refcount_set_one(%struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %26

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %struct.ASN1_AUX_st**
  %9 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %8, align 8
  %10 = icmp eq %struct.ASN1_AUX_st* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %9, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = bitcast i8* %22 to i32*
  store i32 1, i32* %25, align 4
  br label %26

26:                                               ; preds = %6, %11, %2, %16, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @asn1_refcount_dec_and_test_zero(%struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %struct.ASN1_AUX_st**
  %9 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %8, align 8
  %10 = icmp eq %struct.ASN1_AUX_st* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %9, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = bitcast i8* %22 to i32*
  %26 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* nonnull %25) #5
  br label %27

27:                                               ; preds = %6, %11, %2, %16, %24
  %28 = phi i32 [ %26, %24 ], [ 1, %16 ], [ 1, %2 ], [ 1, %11 ], [ 1, %6 ]
  ret i32 %28
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @asn1_enc_init(%struct.ASN1_VALUE_st** readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #1 {
  %3 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %6 = icmp eq %struct.ASN1_VALUE_st* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.ASN1_AUX_st**
  %10 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %9, align 8
  %11 = icmp eq %struct.ASN1_AUX_st* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = bitcast %struct.ASN1_VALUE_st* %5 to i8*
  %19 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %10, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %17
  %25 = bitcast i8* %22 to i8**
  store i8* null, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 20
  %29 = load i8, i8* %28, align 4
  %30 = and i8 %29, -4
  store i8 %30, i8* %28, align 4
  %31 = getelementptr inbounds i8, i8* %22, i64 16
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 8
  br label %33

33:                                               ; preds = %7, %12, %2, %4, %17, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @asn1_enc_free(%struct.ASN1_VALUE_st** readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #2 {
  %3 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %6 = icmp eq %struct.ASN1_VALUE_st* %5, null
  br i1 %6, label %42, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.ASN1_AUX_st**
  %10 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %9, align 8
  %11 = icmp eq %struct.ASN1_AUX_st* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %12
  %18 = bitcast %struct.ASN1_VALUE_st* %5 to i8*
  %19 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %10, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = icmp eq i8* %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %17
  %25 = bitcast i8* %22 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %22, i64 20
  %30 = load i8, i8* %29, align 4
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  tail call void @OPENSSL_free(i8* nonnull %26) #5
  br label %34

34:                                               ; preds = %28, %24, %33
  store i8* null, i8** %25, align 8
  %35 = getelementptr inbounds i8, i8* %22, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %22, i64 20
  %38 = load i8, i8* %37, align 4
  %39 = and i8 %38, -4
  store i8 %39, i8* %37, align 4
  %40 = getelementptr inbounds i8, i8* %22, i64 16
  %41 = bitcast i8* %40 to i32*
  store i32 1, i32* %41, align 8
  br label %42

42:                                               ; preds = %7, %12, %2, %4, %17, %34
  ret void
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @asn1_enc_save(%struct.ASN1_VALUE_st** readonly, i8*, i32, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #2 {
  %5 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %5, label %59, label %6

6:                                                ; preds = %4
  %7 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %8 = icmp eq %struct.ASN1_VALUE_st* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 4
  %11 = bitcast i8** %10 to %struct.ASN1_AUX_st**
  %12 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %11, align 8
  %13 = icmp eq %struct.ASN1_AUX_st* %12, null
  br i1 %13, label %59, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %14
  %20 = bitcast %struct.ASN1_VALUE_st* %7 to i8*
  %21 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %12, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = icmp eq i8* %24, null
  br i1 %25, label %59, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %24, i64 20
  %28 = load i8, i8* %27, align 4
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = bitcast i8* %24 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @OPENSSL_free(i8* %33) #5
  %34 = load i8, i8* %27, align 4
  br label %35

35:                                               ; preds = %26, %31
  %36 = phi i8 [ %28, %26 ], [ %34, %31 ]
  %37 = lshr i8 %36, 1
  %38 = and i8 %37, 1
  %39 = and i8 %36, -4
  %40 = or i8 %38, %39
  store i8 %40, i8* %27, align 4
  %41 = icmp eq i8 %38, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast i8* %24 to i8**
  store i8* %1, i8** %43, align 8
  %44 = sext i32 %2 to i64
  br label %53

45:                                               ; preds = %35
  %46 = sext i32 %2 to i64
  %47 = tail call i8* @OPENSSL_malloc(i64 %46) #5
  %48 = bitcast i8* %24 to i8**
  store i8* %47, i8** %48, align 8
  %49 = icmp eq i8* %47, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %45
  %51 = icmp eq i32 %2, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %1, i64 %46, i1 false) #5
  br label %53

53:                                               ; preds = %52, %50, %42
  %54 = phi i64 [ %46, %52 ], [ 0, %50 ], [ %44, %42 ]
  %55 = getelementptr inbounds i8, i8* %24, i64 8
  %56 = bitcast i8* %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %24, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 8
  br label %59

59:                                               ; preds = %9, %14, %4, %6, %45, %19, %53
  %60 = phi i32 [ 1, %53 ], [ 1, %19 ], [ 0, %45 ], [ 1, %6 ], [ 1, %4 ], [ 1, %14 ], [ 1, %9 ]
  ret i32 %60
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @asn1_enc_restore(i32*, i8**, %struct.ASN1_VALUE_st** readonly, %struct.ASN1_ITEM_st* nocapture readonly) local_unnamed_addr #2 {
  %5 = icmp eq %struct.ASN1_VALUE_st** %2, null
  br i1 %5, label %54, label %6

6:                                                ; preds = %4
  %7 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %2, align 8
  %8 = icmp eq %struct.ASN1_VALUE_st* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 4
  %11 = bitcast i8** %10 to %struct.ASN1_AUX_st**
  %12 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %11, align 8
  %13 = icmp eq %struct.ASN1_AUX_st* %12, null
  br i1 %13, label %54, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %14
  %20 = bitcast %struct.ASN1_VALUE_st* %7 to i8*
  %21 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %12, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = icmp eq i8* %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %24, i64 16
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %54

31:                                               ; preds = %26
  %32 = icmp eq i8** %1, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %24, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = bitcast i8* %24 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = load i8*, i8** %1, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %40, i64 %36, i1 false) #5
  %42 = load i64, i64* %35, align 8
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi i64 [ 0, %33 ], [ %42, %38 ]
  %45 = load i8*, i8** %1, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8* %46, i8** %1, align 8
  br label %47

47:                                               ; preds = %31, %43
  %48 = icmp eq i32* %0, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds i8, i8* %24, i64 8
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %0, align 4
  br label %54

54:                                               ; preds = %9, %14, %4, %6, %49, %47, %19, %26
  %55 = phi i32 [ 0, %26 ], [ 0, %19 ], [ 1, %47 ], [ 1, %49 ], [ 0, %6 ], [ 0, %4 ], [ 0, %14 ], [ 0, %9 ]
  ret i32 %55
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** readonly, %struct.ASN1_TEMPLATE_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1024
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = bitcast i8* %12 to %struct.ASN1_VALUE_st**
  br label %14

14:                                               ; preds = %2, %7
  %15 = phi %struct.ASN1_VALUE_st** [ %13, %7 ], [ %0, %2 ]
  ret %struct.ASN1_VALUE_st** %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_TEMPLATE_st* readonly, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 768
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 4
  %10 = bitcast %struct.ASN1_ITEM_st** %9 to %struct.ASN1_ADB_st**
  %11 = load %struct.ASN1_ADB_st*, %struct.ASN1_ADB_st** %10, align 8
  %12 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.ASN1_ADB_st, %struct.ASN1_ADB_st* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = bitcast i8* %16 to %struct.ASN1_VALUE_st**
  %18 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %17, align 8
  %19 = icmp eq %struct.ASN1_VALUE_st* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %8
  %21 = getelementptr inbounds %struct.ASN1_ADB_st, %struct.ASN1_ADB_st* %11, i64 0, i32 6
  %22 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %21, align 8
  %23 = icmp eq %struct.ASN1_TEMPLATE_st* %22, null
  br i1 %23, label %58, label %61

24:                                               ; preds = %8
  %25 = and i64 %5, 256
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %struct.ASN1_VALUE_st* %18 to %struct.asn1_object_st*
  %29 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* nonnull %28) #5
  %30 = sext i32 %29 to i64
  br label %34

31:                                               ; preds = %24
  %32 = bitcast %struct.ASN1_VALUE_st* %18 to %struct.asn1_string_st*
  %33 = tail call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* nonnull %32) #5
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi i64 [ %30, %27 ], [ %33, %31 ]
  %36 = getelementptr inbounds %struct.ASN1_ADB_st, %struct.ASN1_ADB_st* %11, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.ASN1_ADB_st, %struct.ASN1_ADB_st* %11, i64 0, i32 3
  %41 = load %struct.ASN1_ADB_TABLE_st*, %struct.ASN1_ADB_TABLE_st** %40, align 8
  br label %42

42:                                               ; preds = %39, %50
  %43 = phi i64 [ 0, %39 ], [ %51, %50 ]
  %44 = phi %struct.ASN1_ADB_TABLE_st* [ %41, %39 ], [ %52, %50 ]
  %45 = getelementptr inbounds %struct.ASN1_ADB_TABLE_st, %struct.ASN1_ADB_TABLE_st* %44, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %35
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.ASN1_ADB_TABLE_st, %struct.ASN1_ADB_TABLE_st* %44, i64 0, i32 1
  br label %61

50:                                               ; preds = %42
  %51 = add nuw nsw i64 %43, 1
  %52 = getelementptr inbounds %struct.ASN1_ADB_TABLE_st, %struct.ASN1_ADB_TABLE_st* %44, i64 1
  %53 = icmp sgt i64 %37, %51
  br i1 %53, label %42, label %54

54:                                               ; preds = %50, %34
  %55 = getelementptr inbounds %struct.ASN1_ADB_st, %struct.ASN1_ADB_st* %11, i64 0, i32 5
  %56 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %55, align 8
  %57 = icmp eq %struct.ASN1_TEMPLATE_st* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %20, %54
  %59 = icmp eq i32 %2, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  tail call void @ERR_put_error(i32 12, i32 0, i32 186, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 277) #5
  br label %61

61:                                               ; preds = %60, %58, %54, %20, %3, %48
  %62 = phi %struct.ASN1_TEMPLATE_st* [ %49, %48 ], [ %1, %3 ], [ %22, %20 ], [ %56, %54 ], [ null, %58 ], [ null, %60 ]
  ret %struct.ASN1_TEMPLATE_st* %62
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #3

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) local_unnamed_addr #3

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
