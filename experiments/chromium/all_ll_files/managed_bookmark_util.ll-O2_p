; ModuleID = '../../components/bookmarks/managed/managed_bookmark_util.cc'
source_filename = "../../components/bookmarks/managed/managed_bookmark_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.15", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.19", i8 }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.15", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.19", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.6" }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.6", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.15" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GURL* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::map"* }
%"class.std::__1::map" = type opaque
%"class.bookmarks::ManagedBookmarkService" = type { %class.KeyedService, %"class.bookmarks::BaseBookmarkModelObserver", %class.PrefService*, %"class.bookmarks::BookmarkModel"*, %"class.std::__1::unique_ptr.25", %"class.base::RepeatingCallback", %"class.bookmarks::BookmarkPermanentNode"* }
%class.KeyedService = type { i32 (...)** }
%"class.bookmarks::BaseBookmarkModelObserver" = type { %"class.bookmarks::BookmarkModelObserver" }
%"class.bookmarks::BookmarkModelObserver" = type { i32 (...)** }
%class.PrefService = type opaque
%"class.bookmarks::BookmarkModel" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.bookmarks::ManagedBookmarksTracker"* }
%"class.bookmarks::ManagedBookmarksTracker" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9bookmarks15IsPermanentNodeEPKNS_21BookmarkPermanentNodeEPNS_22ManagedBookmarkServiceE(%"class.bookmarks::BookmarkPermanentNode"* readonly, %"class.bookmarks::ManagedBookmarkService"* readonly) local_unnamed_addr #0 {
  %3 = bitcast %"class.bookmarks::BookmarkPermanentNode"* %0 to %"class.bookmarks::BookmarkNode"*
  %4 = getelementptr inbounds %"class.bookmarks::BookmarkPermanentNode", %"class.bookmarks::BookmarkPermanentNode"* %0, i64 0, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %6, 3
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = icmp eq %"class.bookmarks::ManagedBookmarkService"* %1, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.bookmarks::ManagedBookmarkService", %"class.bookmarks::ManagedBookmarkService"* %1, i64 0, i32 6
  %12 = bitcast %"class.bookmarks::BookmarkPermanentNode"** %11 to %"class.bookmarks::BookmarkNode"**
  %13 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %12, align 8
  %14 = icmp eq %"class.bookmarks::BookmarkNode"* %13, %3
  br label %15

15:                                               ; preds = %10, %8, %2
  %16 = phi i1 [ true, %2 ], [ %14, %10 ], [ false, %8 ]
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9bookmarks13IsManagedNodeEPKNS_21BookmarkPermanentNodeEPNS_22ManagedBookmarkServiceE(%"class.bookmarks::BookmarkPermanentNode"* readnone, %"class.bookmarks::ManagedBookmarkService"* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %"class.bookmarks::ManagedBookmarkService"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.bookmarks::BookmarkPermanentNode"* %0 to %"class.bookmarks::BookmarkNode"*
  %6 = getelementptr inbounds %"class.bookmarks::ManagedBookmarkService", %"class.bookmarks::ManagedBookmarkService"* %1, i64 0, i32 6
  %7 = bitcast %"class.bookmarks::BookmarkPermanentNode"** %6 to %"class.bookmarks::BookmarkNode"**
  %8 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %7, align 8
  %9 = icmp eq %"class.bookmarks::BookmarkNode"* %8, %5
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i1 [ %9, %4 ], [ false, %2 ]
  ret i1 %11
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
