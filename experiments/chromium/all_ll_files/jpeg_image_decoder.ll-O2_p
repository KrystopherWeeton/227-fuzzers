; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/jpeg/jpeg_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/jpeg/jpeg_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::JPEGImageDecoder" = type { %"class.blink::ImageDecoder", %"class.std::__1::unique_ptr.28", i64, %"class.blink::IntSize", %"class.WTF::Vector.34" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.9", %class.sk_sp.1, i8, %"class.std::__1::unique_ptr.22" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.13" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.12, [8 x i8] }
%struct.anon.12 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::JPEGImageReader"* }
%"class.blink::JPEGImageReader" = type { %class.scoped_refptr, %"class.blink::JPEGImageDecoder"*, i8, i64, i64, i8*, %struct.jpeg_decompress_struct, %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_source_mgr", %struct.jpeg_progress_mgr, i32, i8**, %"class.blink::IntSize" }
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { {}*, void (%struct.jpeg_common_struct*, i32)*, {}*, void (%struct.jpeg_common_struct*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_source_mgr = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, {}* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%"struct.blink::decoder_error_mgr" = type { %struct.jpeg_error_mgr, i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%"struct.blink::decoder_source_mgr" = type { %struct.jpeg_source_mgr, %"class.blink::JPEGImageReader"* }
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %struct.SkISize*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.53 }
%union.anon.53 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.13", i64, i64 }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i64 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.40", %"class.absl::optional.40", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.gfx::Size" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { i8 }
%"struct.blink::DecodedImageMetaData" = type { %"class.blink::ImageOrientation", %"class.blink::FloatSize", %"class.blink::IntSize", i32 }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.WTF::StringImpl"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12ImageDecoderD2Ev = comdat any

$_ZN5blink12ImageDecoder9SetFailedEv = comdat any

$_ZNK5blink12ImageDecoder4SizeEv = comdat any

$_ZN20trace_event_internal13AddTraceEventIRA5_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_ = comdat any

$_ZN5blink10OutputRowsIL13J_COLOR_SPACE2EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE = comdat any

$_ZN5blink10OutputRowsIL13J_COLOR_SPACE4EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE = comdat any

$_ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE = comdat any

$_ZNK5blink16JPEGImageDecoder17FilenameExtensionEv = comdat any

$_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv = comdat any

$_ZNK5blink16JPEGImageDecoder11DecodedSizeEv = comdat any

$_ZNK5blink12ImageDecoder14GetYUVBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder15RepetitionCountEv = comdat any

$_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE = comdat any

$_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE = comdat any

$_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv = comdat any

$_ZN5blink16JPEGImageDecoder10DecodeSizeEv = comdat any

$_ZN5blink12ImageDecoder16DecodeFrameCountEv = comdat any

$_ZN5blink12ImageDecoder18InitializeNewFrameEm = comdat any

$_ZN5blink16JPEGImageDecoder6DecodeEm = comdat any

$_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj = comdat any

$_ZN5blink12ImageDecoder17OnInitFrameBufferEm = comdat any

$_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm = comdat any

$_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorI7SkISizeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm = comdat any

$_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [13 x i8] c"Corrupt JPEG\00", align 1
@_ZTVN5blink16JPEGImageDecoderE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JPEGImageDecoder"*)* @_ZN5blink16JPEGImageDecoderD2Ev to i8*), i8* bitcast (void (%"class.blink::JPEGImageDecoder"*)* @_ZN5blink16JPEGImageDecoderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder17FilenameExtensionEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv to i8*), i8* bitcast (void (%"class.blink::JPEGImageDecoder"*, %"class.blink::SegmentReader"*)* @_ZN5blink16JPEGImageDecoder9OnSetDataEPNS_13SegmentReaderE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder4SizeEv to i8*), i8* bitcast (void (%"class.WTF::Vector.34"*, %"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder23GetSupportedDecodeSizesEv to i8*), i8* bitcast (i64 (%"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder11DecodedSizeEv to i8*), i8* bitcast (i32 (%"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder17GetYUVSubsamplingEv to i8*), i8* bitcast (i64 (%"class.blink::JPEGImageDecoder"*, i32)* @_ZNK5blink16JPEGImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE to i8*), i8* bitcast (i64 (%"class.blink::JPEGImageDecoder"*, i32)* @_ZNK5blink16JPEGImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE to i8*), i8* bitcast (i32 (%"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder16GetYUVColorSpaceEv to i8*), i8* bitcast (i8 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv to i8*), i8* bitcast (void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::JPEGImageDecoder"*)* @_ZNK5blink16JPEGImageDecoder33MakeMetadataForDecodeAccelerationEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::JPEGImageDecoder"*, i32, i32)* @_ZN5blink16JPEGImageDecoder7SetSizeEjj to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder15RepetitionCountEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder9SetFailedEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)* @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)* @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE to i8*), i8* bitcast (void (%"class.blink::JPEGImageDecoder"*)* @_ZN5blink16JPEGImageDecoder11DecodeToYUVEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder16ClearFrameBufferEm to i8*), i8* bitcast (void (%"class.blink::JPEGImageDecoder"*)* @_ZN5blink16JPEGImageDecoder10DecodeSizeEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder16DecodeFrameCountEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder18InitializeNewFrameEm to i8*), i8* bitcast (void (%"class.blink::JPEGImageDecoder"*, i64)* @_ZN5blink16JPEGImageDecoder6DecodeEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32)* @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder17OnInitFrameBufferEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [13 x i8] c"Decode Image\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"imageType\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"JPEG\00", align 1
@_ZTVN5blink12ImageDecoderE = external unnamed_addr constant { [37 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase41is_decode_jpeg_420_images_to_yuv_enabled_E = external local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI7SkISizeEEPKcv = private unnamed_addr constant [55 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkISize]\00", align 1
@.str.10 = private unnamed_addr constant [84 x i8] c"../../third_party/blink/renderer/platform/image-decoders/jpeg/jpeg_image_decoder.cc\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"metadata.resolution.Width()\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"metadata.resolution.Height()\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"jpg\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE = private unnamed_addr constant [4 x i32] [i32 10, i32 8, i32 11, i32 6], align 4
@switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE.15 = private unnamed_addr constant [4 x i32] [i32 9, i32 7, i32 11, i32 5], align 4
@switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE.16 = private unnamed_addr constant [5 x i32] [i32 13, i32 13, i32 13, i32 4, i32 4], align 4

@_ZN5blink16JPEGImageDecoderC1ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEmm = hidden unnamed_addr alias void (%"class.blink::JPEGImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64, i64), void (%"class.blink::JPEGImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64, i64)* @_ZN5blink16JPEGImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEmm
@_ZN5blink16JPEGImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::JPEGImageDecoder"*), void (%"class.blink::JPEGImageDecoder"*)* @_ZN5blink16JPEGImageDecoderD2Ev

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink10error_exitEP18jpeg_common_struct(%struct.jpeg_common_struct* nocapture readonly) #0 {
  %2 = bitcast %struct.jpeg_common_struct* %0 to %"struct.blink::decoder_error_mgr"**
  %3 = load %"struct.blink::decoder_error_mgr"*, %"struct.blink::decoder_error_mgr"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %3, i64 0, i32 2, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %4, i32 -1) #19
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @__longjmp_chk(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink12emit_messageEP18jpeg_common_structi(%struct.jpeg_common_struct* nocapture readonly, i32) #2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.jpeg_common_struct* %0 to %"struct.blink::decoder_error_mgr"**
  %6 = load %"struct.blink::decoder_error_mgr"*, %"struct.blink::decoder_error_mgr"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %6, i64 0, i32 0, i32 8
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %6, i64 0, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %6, i64 0, i32 0, i32 10
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %11, %15
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %6, i64 0, i32 0, i32 9
  %19 = load i8**, i8*** %18, align 8
  %20 = sext i32 %11 to i64
  %21 = getelementptr inbounds i8*, i8** %19, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %17
  %25 = tail call i32 @strncmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* nonnull %22, i64 12) #20
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %6, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %31

31:                                               ; preds = %4, %13, %27, %17, %24, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink11init_sourceEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture) #5 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15skip_input_dataEP22jpeg_decompress_structl(%struct.jpeg_decompress_struct* nocapture readonly, i64) #6 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %4 = bitcast %struct.jpeg_source_mgr** %3 to %"struct.blink::decoder_source_mgr"**
  %5 = load %"struct.blink::decoder_source_mgr"*, %"struct.blink::decoder_source_mgr"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::decoder_source_mgr", %"struct.blink::decoder_source_mgr"* %5, i64 0, i32 1
  %7 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %6, align 8
  %8 = icmp slt i64 %1, 1
  br i1 %8, label %40, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 6, i32 6
  %11 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %11, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = sub i64 %13, %1
  store i64 %16, i64* %12, align 8
  %17 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %10, align 8
  %18 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  store i8* %20, i8** %18, align 8
  br label %28

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %1, %13
  %25 = add i64 %24, %23
  store i64 %25, i64* %22, align 8
  store i64 0, i64* %12, align 8
  %26 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %10, align 8
  %27 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %26, i64 0, i32 0
  store i8* null, i8** %27, align 8
  br label %28

28:                                               ; preds = %21, %15
  %29 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %10, align 8
  %32 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 3
  store i64 %34, i64* %35, align 8
  %36 = bitcast %struct.jpeg_source_mgr* %31 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 5
  %39 = bitcast i8** %38 to i64*
  store i64 %37, i64* %39, align 8
  br label %40

40:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17fill_input_bufferEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #7 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %4 = bitcast %struct.jpeg_source_mgr** %3 to %"struct.blink::decoder_source_mgr"**
  %5 = load %"struct.blink::decoder_source_mgr"*, %"struct.blink::decoder_source_mgr"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::decoder_source_mgr", %"struct.blink::decoder_source_mgr"* %5, i64 0, i32 1
  %7 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  store i8 0, i8* %8, align 8
  %12 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 4
  store i64 %13, i64* %14, align 8
  br label %30

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 5
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 6, i32 6
  %19 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %17, %21
  %23 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  br i1 %22, label %30, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %19, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 3
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %25, %15, %11
  %31 = phi i64 [ %24, %25 ], [ %13, %11 ], [ %24, %15 ]
  %32 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #21
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %33 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 0, i32 0
  %34 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 4
  %36 = bitcast %"class.blink::SegmentReader"* %34 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %37 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %37, i64 3
  %39 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %38, align 8
  %40 = call i64 %39(%"class.blink::SegmentReader"* %34, i8** nonnull dereferenceable(8) %2, i64 %31) #21
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %30
  store i8 1, i8* %8, align 8
  %43 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 6, i32 6
  %44 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 1
  store i64 0, i64* %45, align 8
  %46 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %43, align 8
  %47 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %46, i64 0, i32 0
  store i8* null, i8** %47, align 8
  %48 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 5
  store i8* null, i8** %48, align 8
  br label %61

49:                                               ; preds = %30
  %50 = load i64, i64* %35, align 8
  %51 = add i64 %50, %40
  store i64 %51, i64* %35, align 8
  %52 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 6, i32 6
  %53 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %53, i64 0, i32 1
  store i64 %40, i64* %54, align 8
  %55 = bitcast i8** %2 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.jpeg_source_mgr** %52 to i64**
  %58 = load i64*, i64** %57, align 8
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %7, i64 0, i32 5
  %60 = bitcast i8** %59 to i64*
  store i64 %56, i64* %60, align 8
  br label %61

61:                                               ; preds = %42, %49
  %62 = phi i32 [ 0, %42 ], [ 1, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #21
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11term_sourceEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #7 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = bitcast %struct.jpeg_source_mgr** %2 to %"struct.blink::decoder_source_mgr"**
  %4 = load %"struct.blink::decoder_source_mgr"*, %"struct.blink::decoder_source_mgr"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::decoder_source_mgr", %"struct.blink::decoder_source_mgr"* %4, i64 0, i32 1
  %6 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %6, i64 0, i32 1
  %8 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %8, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %8, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 0) #21
  tail call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %14, i1 zeroext false) #21
  %15 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 0) #21
  tail call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %15, i32 3) #21
  br label %16

16:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoder8CompleteEv(%"class.blink::JPEGImageDecoder"*) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0) #21
  tail call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %7, i1 zeroext false) #21
  %8 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0) #21
  tail call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %8, i32 3) #21
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEmm(%"class.blink::JPEGImageDecoder"*, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), i64, i64) unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i64 0
  %10 = bitcast %"class.WTF::Vector"* %8 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 3
  %14 = icmp eq i32 %1, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 6, i32 0
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 8
  store i64 %3, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 10
  %26 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12, i32 0
  %29 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 16
  %30 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 19
  %31 = bitcast %"class.std::__1::unique_ptr.22"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast i32* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 11, i1 false) #21
  %33 = bitcast %"class.std::__1::unique_ptr.9"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 17, i1 false) #21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink16JPEGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %34 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.28"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 2
  store i64 %4, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 3, i32 0
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoderD2Ev(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink16JPEGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SkISize*, %struct.SkISize** %3, align 8
  %5 = icmp eq %struct.SkISize* %4, null
  %6 = bitcast %struct.SkISize* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !4

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #21
  store %struct.SkISize* null, %struct.SkISize** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %14, align 8
  store %"class.blink::JPEGImageReader"* null, %"class.blink::JPEGImageReader"** %14, align 8
  %16 = icmp eq %"class.blink::JPEGImageReader"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %15, i64 0, i32 6
  tail call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %18) #21
  %19 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %15, i64 0, i32 0, i32 0
  %20 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %19, align 8
  %21 = icmp eq %"class.blink::SegmentReader"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.blink::SegmentReader"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.blink::SegmentReader"*)***
  %31 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %31, i64 1
  %33 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %32, align 8
  tail call void %33(%"class.blink::SegmentReader"* nonnull %29) #21
  br label %34

34:                                               ; preds = %27, %22, %17
  %35 = bitcast %"class.blink::JPEGImageReader"* %15 to i8*
  tail call void @free(i8* %35) #21
  br label %36

36:                                               ; preds = %13, %34
  %37 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %37) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ColorProfileTransform"*, %"class.blink::ColorProfileTransform"** %3, align 8
  store %"class.blink::ColorProfileTransform"* null, %"class.blink::ColorProfileTransform"** %3, align 8
  %5 = icmp eq %"class.blink::ColorProfileTransform"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ColorProfileTransform"* %4 to i8*
  tail call void @free(i8* %7) #21
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 17, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #22
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %19, align 8
  store %"class.blink::ColorProfile"* null, %"class.blink::ColorProfile"** %19, align 8
  %21 = icmp eq %"class.blink::ColorProfile"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* null, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %24) #22
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.blink::ColorProfile"* %20 to i8*
  tail call void @free(i8* %28) #21
  br label %29

29:                                               ; preds = %18, %27
  %30 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %30, align 8
  store %"class.blink::ImagePlanes"* null, %"class.blink::ImagePlanes"** %30, align 8
  %32 = icmp eq %"class.blink::ImagePlanes"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::ImagePlanes"* %31 to i8*
  tail call void @free(i8* %34) #21
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  br i1 %39, label %51, label %41, !prof !4

41:                                               ; preds = %35
  %42 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %41
  %46 = phi %"class.blink::ImageFrame"* [ %48, %45 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %47) #21
  %48 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 1
  %49 = icmp eq %"class.blink::ImageFrame"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"class.blink::ImageFrame"*
  %55 = icmp eq %"class.blink::ImageFrame"* %52, %54
  br i1 %55, label %58, label %56, !prof !3

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %57, %"class.blink::ImageFrame"* %52) #21
  br label %58

58:                                               ; preds = %51, %56
  store %"class.blink::ImageFrame"* null, %"class.blink::ImageFrame"** %40, align 8
  %59 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %59, align 8
  %61 = icmp eq %"class.blink::SegmentReader"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.blink::SegmentReader"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.blink::SegmentReader"*)***
  %71 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %71, i64 1
  %73 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %72, align 8
  tail call void %73(%"class.blink::SegmentReader"* nonnull %69) #21
  br label %74

74:                                               ; preds = %58, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoderD0Ev(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink16JPEGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SkISize*, %struct.SkISize** %3, align 8
  %5 = icmp eq %struct.SkISize* %4, null
  %6 = bitcast %struct.SkISize* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !4

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #21
  store %struct.SkISize* null, %struct.SkISize** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %14, align 8
  store %"class.blink::JPEGImageReader"* null, %"class.blink::JPEGImageReader"** %14, align 8
  %16 = icmp eq %"class.blink::JPEGImageReader"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %15, i64 0, i32 6
  tail call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %18) #21
  %19 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %15, i64 0, i32 0, i32 0
  %20 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %19, align 8
  %21 = icmp eq %"class.blink::SegmentReader"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.blink::SegmentReader"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.blink::SegmentReader"*)***
  %31 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %31, i64 1
  %33 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %32, align 8
  tail call void %33(%"class.blink::SegmentReader"* nonnull %29) #21
  br label %34

34:                                               ; preds = %27, %22, %17
  %35 = bitcast %"class.blink::JPEGImageReader"* %15 to i8*
  tail call void @free(i8* %35) #21
  br label %36

36:                                               ; preds = %13, %34
  %37 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %37) #21
  %38 = bitcast %"class.blink::JPEGImageDecoder"* %0 to i8*
  tail call void @free(i8* %38) #21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16JPEGImageDecoder7SetSizeEjj(%"class.blink::JPEGImageDecoder"*, i32, i32) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::JPEGImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %6 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %6, i64 3
  %8 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ImageDecoder"* %4) #21
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  %14 = select i1 %13, i32 8, i32 4
  br label %15

15:                                               ; preds = %10, %3
  %16 = phi i32 [ 4, %3 ], [ %14, %10 ]
  %17 = lshr i32 %1, 31
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %50, label %19

19:                                               ; preds = %15
  %20 = icmp slt i32 %1, 0
  %21 = sub i32 0, %1
  %22 = select i1 %20, i32 %21, i32 %1
  %23 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %22, i32 %2) #21
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = add nuw nsw i32 %17, 2147483647
  %27 = icmp ugt i32 %25, %26
  %28 = or i1 %24, %27
  %29 = sub i32 0, %25
  %30 = select i1 %20, i32 %29, i32 %25
  br i1 %28, label %50, label %31

31:                                               ; preds = %19
  %32 = icmp slt i32 %30, 0
  %33 = sub i32 0, %30
  %34 = select i1 %32, i32 %33, i32 %30
  %35 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %34, i32 %16) #21
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = lshr i32 %30, 31
  %39 = add nuw i32 %38, 2147483647
  %40 = icmp ugt i32 %37, %39
  %41 = or i1 %36, %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12
  %44 = bitcast %"class.blink::IntSize"* %43 to i64*
  %45 = zext i32 %2 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %1 to i64
  %48 = or i64 %46, %47
  store i64 %48, i64* %44, align 4
  %49 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 13
  store i8 1, i8* %49, align 4
  br label %59

50:                                               ; preds = %15, %19, %31
  %51 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %5, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %51, i64 21
  %53 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::ImageDecoder"* %4) #21
  br i1 %54, label %55, label %87

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12
  %57 = bitcast %"class.blink::IntSize"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  br label %59

59:                                               ; preds = %55, %42
  %60 = phi i64 [ %58, %55 ], [ %48, %42 ]
  %61 = trunc i64 %60 to i32
  %62 = lshr i64 %60, 32
  %63 = trunc i64 %62 to i32
  %64 = shl i32 %61, 2
  %65 = mul i32 %64, %63
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 8
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %68, %66
  br i1 %69, label %70, label %80

70:                                               ; preds = %59
  %71 = shl i64 %68, 6
  %72 = udiv i64 %71, %66
  %73 = uitofp i64 %72 to float
  %74 = tail call float @sqrtf(float %73) #21
  %75 = tail call float @llvm.floor.f32(float %74) #21
  %76 = fptoui float %75 to i32
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %79, align 2
  br label %87

80:                                               ; preds = %59, %70
  %81 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 3
  %82 = bitcast %"class.blink::IntSize"* %81 to i64*
  %83 = zext i32 %2 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %1 to i64
  %86 = or i64 %84, %85
  store i64 %86, i64* %82, align 8
  br label %87

87:                                               ; preds = %50, %80, %78
  %88 = phi i1 [ true, %80 ], [ false, %78 ], [ false, %50 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16JPEGImageDecoder21DesiredScaleNumeratorEv(%"class.blink::JPEGImageDecoder"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = shl i32 %5, 2
  %9 = mul i32 %8, %7
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %10
  br i1 %13, label %14, label %21

14:                                               ; preds = %1
  %15 = shl i64 %12, 6
  %16 = udiv i64 %15, %10
  %17 = uitofp i64 %16 to float
  %18 = tail call float @sqrtf(float %17) #21
  %19 = tail call float @llvm.floor.f32(float %18) #21
  %20 = fptoui float %19 to i32
  br label %21

21:                                               ; preds = %1, %14
  %22 = phi i32 [ %20, %14 ], [ 8, %1 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder9SetFailedEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 15
  store i8 1, i8* %2, align 2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16JPEGImageDecoder14SetDecodedSizeEjj(%"class.blink::JPEGImageDecoder"* nocapture, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 3
  %5 = bitcast %"class.blink::IntSize"* %4 to i64*
  %6 = zext i32 %2 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %1 to i64
  %9 = or i64 %7, %8
  store i64 %9, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoder9OnSetDataEPNS_13SegmentReaderE(%"class.blink::JPEGImageDecoder"*, %"class.blink::SegmentReader"*) unnamed_addr #7 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %4, align 8
  %6 = icmp eq %"class.blink::JPEGImageReader"* %5, null
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %8, align 8
  %10 = icmp eq %"class.blink::SegmentReader"* %9, %1
  br i1 %10, label %54, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.blink::SegmentReader"* %1, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #21
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #21
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #21
  br label %20

20:                                               ; preds = %13, %17
  %21 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %8, align 8
  br label %22

22:                                               ; preds = %20, %11
  %23 = phi %"class.blink::SegmentReader"* [ %21, %20 ], [ %9, %11 ]
  %24 = ptrtoint %"class.blink::SegmentReader"* %1 to i64
  %25 = bitcast %"class.blink::JPEGImageReader"* %5 to i64*
  store i64 %24, i64* %25, align 8
  %26 = icmp eq %"class.blink::SegmentReader"* %23, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %23, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.blink::SegmentReader"*
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %33 to void (%"class.blink::SegmentReader"*)***
  %36 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %36, i64 1
  %38 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %37, align 8
  call void %38(%"class.blink::SegmentReader"* nonnull %34) #21
  br label %39

39:                                               ; preds = %22, %27, %32
  %40 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 2
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 6, i32 6
  %45 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %45, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %47
  store i64 %50, i64* %48, align 8
  store i64 0, i64* %46, align 8
  %51 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %44, align 8
  %52 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %51, i64 0, i32 0
  store i8* null, i8** %52, align 8
  %53 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 5
  store i8* null, i8** %53, align 8
  br label %54

54:                                               ; preds = %7, %39, %43
  %55 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %4, align 8
  %56 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %55, i64 0, i32 10
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %189, label %59

59:                                               ; preds = %2, %54
  %60 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 9
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %189

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 14
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_decode_jpeg_420_images_to_yuv_enabled_E, align 1
  %69 = icmp ne i8 %68, 0
  %70 = and i1 %67, %69
  br i1 %70, label %71, label %187

71:                                               ; preds = %64
  %72 = call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* %60) #21
  br i1 %72, label %73, label %187

73:                                               ; preds = %71
  %74 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %4, align 8
  %75 = icmp eq %"class.blink::JPEGImageReader"* %74, null
  br i1 %75, label %187, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %74, i64 0, i32 6, i32 12
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %74, i64 0, i32 6, i32 13
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %82, label %187

82:                                               ; preds = %76
  %83 = call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %60) #21
  %84 = icmp eq %"class.blink::ColorProfileTransform"* %83, null
  br i1 %84, label %85, label %187

85:                                               ; preds = %82
  %86 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %4, align 8
  %87 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %86, i64 0, i32 6, i32 10
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 3
  br i1 %89, label %90, label %183

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %86, i64 0, i32 6, i32 9
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 3
  br i1 %93, label %94, label %183

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %86, i64 0, i32 6, i32 44
  %96 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %95, align 8
  %97 = icmp eq %struct.jpeg_component_info* %96, null
  br i1 %97, label %122, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 1, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %122

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 1, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %122

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 2, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %122

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 2, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %122

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 1
  %120 = icmp eq i32 %116, 1
  %121 = and i1 %120, %119
  br i1 %121, label %187, label %122

122:                                              ; preds = %114, %98, %102, %106, %110, %94
  %123 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %86, i64 0, i32 6, i32 44
  %124 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %123, align 8
  %125 = icmp eq %struct.jpeg_component_info* %124, null
  br i1 %125, label %150, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 1, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %150

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 1, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %150

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 2, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %150

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 2, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 1
  %148 = icmp eq i32 %144, 2
  %149 = and i1 %148, %147
  br i1 %149, label %187, label %150

150:                                              ; preds = %142, %126, %130, %134, %138, %122
  %151 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %86, i64 0, i32 6, i32 44
  %152 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %151, align 8
  %153 = icmp eq %struct.jpeg_component_info* %152, null
  br i1 %153, label %183, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 1, i32 2
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %183

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 1, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %183

162:                                              ; preds = %158
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 2, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %183

166:                                              ; preds = %162
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 2, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %183

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 0, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 0, i32 3
  %174 = load i32, i32* %173, align 4
  switch i32 %174, label %183 [
    i32 1, label %175
    i32 2, label %178
  ]

175:                                              ; preds = %170
  switch i32 %172, label %183 [
    i32 1, label %181
    i32 2, label %176
    i32 4, label %177
  ]

176:                                              ; preds = %175
  br label %181

177:                                              ; preds = %175
  br label %181

178:                                              ; preds = %170
  switch i32 %172, label %183 [
    i32 1, label %181
    i32 2, label %179
    i32 4, label %180
  ]

179:                                              ; preds = %178
  br label %181

180:                                              ; preds = %178
  br label %181

181:                                              ; preds = %180, %179, %178, %177, %176, %175
  %182 = phi i32 [ 4, %178 ], [ 5, %175 ], [ 2, %179 ], [ 0, %180 ], [ 3, %176 ], [ 1, %177 ]
  br label %183

183:                                              ; preds = %90, %85, %150, %154, %158, %162, %166, %170, %175, %178, %181
  %184 = phi i32 [ %182, %181 ], [ 6, %170 ], [ 6, %178 ], [ 6, %175 ], [ 6, %150 ], [ 6, %166 ], [ 6, %162 ], [ 6, %158 ], [ 6, %154 ], [ 6, %85 ], [ 6, %90 ]
  %185 = icmp eq i32 %184, 2
  %186 = zext i1 %185 to i8
  br label %187

187:                                              ; preds = %73, %142, %114, %82, %183, %76, %71, %64
  %188 = phi i8 [ 0, %82 ], [ 0, %76 ], [ 0, %73 ], [ 0, %71 ], [ 0, %64 ], [ %186, %183 ], [ 1, %114 ], [ 1, %142 ]
  store i8 %188, i8* %61, align 8
  br label %189

189:                                              ; preds = %59, %54, %187
  ret void
}

declare zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #9

declare %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16JPEGImageDecoder17GetYUVSubsamplingEv(%"class.blink::JPEGImageDecoder"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %3, i64 0, i32 6, i32 10
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %3, i64 0, i32 6, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %44

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %3, i64 0, i32 6, i32 44
  %13 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %12, align 8
  %14 = icmp eq %struct.jpeg_component_info* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %44

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 1, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %44

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 2, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %44

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 2, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %44

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %13, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %44 [
    i32 1, label %36
    i32 2, label %39
  ]

36:                                               ; preds = %31
  switch i32 %33, label %44 [
    i32 1, label %42
    i32 2, label %37
    i32 4, label %38
  ]

37:                                               ; preds = %36
  br label %42

38:                                               ; preds = %36
  br label %42

39:                                               ; preds = %31
  switch i32 %33, label %44 [
    i32 1, label %42
    i32 2, label %40
    i32 4, label %41
  ]

40:                                               ; preds = %39
  br label %42

41:                                               ; preds = %39
  br label %42

42:                                               ; preds = %41, %40, %39, %38, %37, %36
  %43 = phi i32 [ 4, %39 ], [ 5, %36 ], [ 2, %40 ], [ 0, %41 ], [ 3, %37 ], [ 1, %38 ]
  br label %44

44:                                               ; preds = %1, %7, %11, %15, %19, %23, %27, %31, %36, %39, %42
  %45 = phi i32 [ %43, %42 ], [ 6, %31 ], [ 6, %39 ], [ 6, %36 ], [ 6, %11 ], [ 6, %27 ], [ 6, %23 ], [ 6, %19 ], [ 6, %15 ], [ 6, %7 ], [ 6, %1 ]
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink16JPEGImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE(%"class.blink::JPEGImageDecoder"* nocapture readonly, i32) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %4, i64 0, i32 6, i32 44
  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 %7, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 %7, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %9 to i64
  %15 = or i64 %13, %14
  ret i64 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink16JPEGImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE(%"class.blink::JPEGImageDecoder"* nocapture readonly, i32) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %4, i64 0, i32 6, i32 44
  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 %7, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = shl i32 %9, 3
  %11 = zext i32 %10 to i64
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder4SizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16JPEGImageDecoder22ShouldGenerateAllSizesEv(%"class.blink::JPEGImageDecoder"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoder11DecodeToYUVEv(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 align 2 {
  %2 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %3 = and i8 %2, 25
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !3

5:                                                ; preds = %1
  tail call void @_ZN5blink16JPEGImageDecoder6DecodeENS0_12DecodingModeE(%"class.blink::JPEGImageDecoder"* %0, i32 1)
  br label %11

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRA5_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), [5 x i8]* nonnull dereferenceable(5) @.str.3)
  tail call void @_ZN5blink16JPEGImageDecoder6DecodeENS0_12DecodingModeE(%"class.blink::JPEGImageDecoder"* %0, i32 1)
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 %7) #21
  br label %11

11:                                               ; preds = %5, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA5_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [5 x i8]* dereferenceable(5)) local_unnamed_addr #11 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #21
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #21
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #21
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #21
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 6, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 0
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #21
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #21
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #21
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #21
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #21
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #22
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #21
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoder6DecodeENS0_12DecodingModeE(%"class.blink::JPEGImageDecoder"*, i32) local_unnamed_addr #7 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 15
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %168

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  %12 = icmp eq %"class.blink::JPEGImageReader"* %11, null
  br i1 %12, label %13, label %131

13:                                               ; preds = %8
  %14 = ptrtoint %"class.blink::JPEGImageDecoder"* %0 to i64
  %15 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 2
  %16 = tail call noalias i8* @malloc(i64 1176) #21
  %17 = load i64, i64* %15, align 8
  %18 = bitcast i8* %16 to %"class.blink::SegmentReader"**
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %14, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 16
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 24
  %23 = bitcast i8* %22 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %16, i64 32
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 40
  %27 = getelementptr inbounds i8, i8* %16, i64 1152
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %16, i64 1160
  %30 = getelementptr inbounds i8, i8* %16, i64 48
  %31 = bitcast i8* %30 to %struct.jpeg_decompress_struct*
  %32 = getelementptr inbounds i8, i8* %16, i64 680
  %33 = bitcast i8* %32 to %struct.jpeg_error_mgr*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 640, i1 false) #21
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #21
  %34 = tail call %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* %33) #21
  %35 = bitcast i8* %30 to %struct.jpeg_error_mgr**
  store %struct.jpeg_error_mgr* %34, %struct.jpeg_error_mgr** %35, align 8
  %36 = bitcast i8* %32 to void (%struct.jpeg_common_struct*)**
  store void (%struct.jpeg_common_struct*)* @_ZN5blink10error_exitEP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %36, align 8
  tail call void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct* %31, i32 62, i64 632) #21
  %37 = getelementptr inbounds i8, i8* %16, i64 1056
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #21
  %38 = getelementptr inbounds i8, i8* %16, i64 88
  %39 = bitcast i8* %38 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %16, i64 1072
  %41 = bitcast i8* %40 to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @_ZN5blink11init_sourceEP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %41, align 8
  %42 = getelementptr inbounds i8, i8* %16, i64 1080
  %43 = bitcast i8* %42 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @_ZN5blink17fill_input_bufferEP22jpeg_decompress_struct, i32 (%struct.jpeg_decompress_struct*)** %43, align 8
  %44 = getelementptr inbounds i8, i8* %16, i64 1088
  %45 = bitcast i8* %44 to void (%struct.jpeg_decompress_struct*, i64)**
  store void (%struct.jpeg_decompress_struct*, i64)* @_ZN5blink15skip_input_dataEP22jpeg_decompress_structl, void (%struct.jpeg_decompress_struct*, i64)** %45, align 8
  %46 = getelementptr inbounds i8, i8* %16, i64 1096
  %47 = bitcast i8* %46 to i32 (%struct.jpeg_decompress_struct*, i32)**
  store i32 (%struct.jpeg_decompress_struct*, i32)* @jpeg_resync_to_restart, i32 (%struct.jpeg_decompress_struct*, i32)** %47, align 8
  %48 = getelementptr inbounds i8, i8* %16, i64 1104
  %49 = bitcast i8* %48 to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @_ZN5blink11term_sourceEP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %49, align 8
  %50 = getelementptr inbounds i8, i8* %16, i64 1112
  %51 = bitcast i8* %50 to i8**
  store i8* %16, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %16, i64 1120
  %53 = getelementptr inbounds i8, i8* %16, i64 64
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = bitcast i8* %52 to void (%struct.jpeg_common_struct*)**
  store void (%struct.jpeg_common_struct*)* @_ZN5blinkL15ProgressMonitorEP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %55, align 8
  tail call void @setup_read_icc_profile(%struct.jpeg_decompress_struct* %31) #21
  tail call void @jpeg_save_markers(%struct.jpeg_decompress_struct* %31, i32 225, i32 65535) #21
  %56 = ptrtoint i8* %16 to i64
  %57 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.28"* %9 to i64*
  store i64 %56, i64* %58, align 8
  %59 = icmp eq %"class.blink::JPEGImageReader"* %57, null
  %60 = bitcast i8* %16 to %"class.blink::JPEGImageReader"*
  br i1 %59, label %81, label %61

61:                                               ; preds = %13
  %62 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %57, i64 0, i32 6
  tail call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %62) #21
  %63 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %57, i64 0, i32 0, i32 0
  %64 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %63, align 8
  %65 = icmp eq %"class.blink::SegmentReader"* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %64, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 -2
  %73 = bitcast %"class.base::RefCountedThreadSafe"* %72 to %"class.blink::SegmentReader"*
  %74 = bitcast %"class.base::RefCountedThreadSafe"* %72 to void (%"class.blink::SegmentReader"*)***
  %75 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %75, i64 1
  %77 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %76, align 8
  tail call void %77(%"class.blink::SegmentReader"* nonnull %73) #21
  br label %78

78:                                               ; preds = %71, %66, %61
  %79 = bitcast %"class.blink::JPEGImageReader"* %57 to i8*
  tail call void @free(i8* %79) #21
  %80 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  br label %81

81:                                               ; preds = %78, %13
  %82 = phi %"class.blink::JPEGImageReader"* [ %80, %78 ], [ %60, %13 ]
  %83 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %84 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %82, i64 0, i32 0, i32 0
  %86 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %85, align 8
  %87 = icmp eq %"class.blink::SegmentReader"* %86, %84
  br i1 %87, label %131, label %88

88:                                               ; preds = %81
  %89 = icmp eq %"class.blink::SegmentReader"* %84, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 1 monotonic
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #21
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #21
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #21
  br label %97

97:                                               ; preds = %90, %94
  %98 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %85, align 8
  br label %99

99:                                               ; preds = %97, %88
  %100 = phi %"class.blink::SegmentReader"* [ %98, %97 ], [ %86, %88 ]
  %101 = ptrtoint %"class.blink::SegmentReader"* %84 to i64
  %102 = bitcast %"class.blink::JPEGImageReader"* %82 to i64*
  store i64 %101, i64* %102, align 8
  %103 = icmp eq %"class.blink::SegmentReader"* %100, null
  br i1 %103, label %116, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %100, i64 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw sub i32* %106, i32 1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %116

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %105, i64 -2
  %111 = bitcast %"class.base::RefCountedThreadSafe"* %110 to %"class.blink::SegmentReader"*
  %112 = bitcast %"class.base::RefCountedThreadSafe"* %110 to void (%"class.blink::SegmentReader"*)***
  %113 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %113, i64 1
  %115 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %114, align 8
  call void %115(%"class.blink::SegmentReader"* nonnull %111) #21
  br label %116

116:                                              ; preds = %99, %104, %109
  %117 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %82, i64 0, i32 2
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %131

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %82, i64 0, i32 6, i32 6
  %122 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %121, align 8
  %123 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %122, i64 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %82, i64 0, i32 4
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %126, %124
  store i64 %127, i64* %125, align 8
  store i64 0, i64* %123, align 8
  %128 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %121, align 8
  %129 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %128, i64 0, i32 0
  store i8* null, i8** %129, align 8
  %130 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %82, i64 0, i32 5
  store i8* null, i8** %130, align 8
  br label %131

131:                                              ; preds = %8, %120, %116, %81
  %132 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  %133 = call zeroext i1 @_ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE(%"class.blink::JPEGImageReader"* %132, i32 %1)
  br i1 %133, label %139, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 14
  %136 = load i8, i8* %135, align 1, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %134
  store i8 1, i8* %5, align 2
  br label %139

139:                                              ; preds = %134, %138, %131
  %140 = icmp eq i32 %1, 1
  br i1 %140, label %146, label %141

141:                                              ; preds = %139
  %142 = call zeroext i1 @_ZNK5blink12ImageDecoder21FrameIsDecodedAtIndexEm(%"class.blink::ImageDecoder"* %4, i64 0) #21
  br i1 %142, label %146, label %143

143:                                              ; preds = %141
  %144 = load i8, i8* %5, align 2, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %168, label %146

146:                                              ; preds = %143, %139, %141
  %147 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  store %"class.blink::JPEGImageReader"* null, %"class.blink::JPEGImageReader"** %10, align 8
  %148 = icmp eq %"class.blink::JPEGImageReader"* %147, null
  br i1 %148, label %168, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %147, i64 0, i32 6
  call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %150) #21
  %151 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %147, i64 0, i32 0, i32 0
  %152 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %151, align 8
  %153 = icmp eq %"class.blink::SegmentReader"* %152, null
  br i1 %153, label %166, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %152, i64 0, i32 1, i32 0
  %156 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw sub i32* %156, i32 1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %166

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %155, i64 -2
  %161 = bitcast %"class.base::RefCountedThreadSafe"* %160 to %"class.blink::SegmentReader"*
  %162 = bitcast %"class.base::RefCountedThreadSafe"* %160 to void (%"class.blink::SegmentReader"*)***
  %163 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %163, i64 1
  %165 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %164, align 8
  call void %165(%"class.blink::SegmentReader"* nonnull %161) #21
  br label %166

166:                                              ; preds = %159, %154, %149
  %167 = bitcast %"class.blink::JPEGImageReader"* %147 to i8*
  call void @free(i8* %167) #21
  br label %168

168:                                              ; preds = %143, %2, %166, %146
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink16JPEGImageDecoder16GetYUVColorSpaceEv(%"class.blink::JPEGImageDecoder"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16JPEGImageDecoder23SetSupportedDecodeSizesEN3WTF6VectorI7SkISizeLj0ENS1_18PartitionAllocatorEEE(%"class.blink::JPEGImageDecoder"* nocapture, %"class.WTF::Vector.34"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4
  %4 = bitcast %"class.WTF::Vector.34"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::Vector.34"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16JPEGImageDecoder23GetSupportedDecodeSizesEv(%"class.WTF::Vector.34"* noalias nocapture sret, %"class.blink::JPEGImageDecoder"* nocapture readonly) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.SkISize* null, %struct.SkISize** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm(i64 %9) #21
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI7SkISizeEEPKcv, i64 0, i64 0)) #21
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.34"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 3
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = icmp ne i8* %11, null
  br label %17

17:                                               ; preds = %8, %2
  %18 = phi i8* [ null, %2 ], [ %11, %8 ]
  %19 = phi i1 [ false, %2 ], [ %16, %8 ]
  %20 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %struct.SkISize*, %struct.SkISize** %23, align 8
  %25 = icmp ne %struct.SkISize* %24, null
  %26 = and i1 %19, %25
  br i1 %26, label %27, label %31, !prof !3

27:                                               ; preds = %17
  %28 = zext i32 %21 to i64
  %29 = bitcast %struct.SkISize* %24 to i8*
  %30 = shl nuw nsw i64 %28, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* nonnull align 4 %29, i64 %30, i1 false) #21
  br label %31

31:                                               ; preds = %17, %27
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink16JPEGImageDecoder17GetImageCodedSizeEv(%"class.blink::JPEGImageDecoder"* nocapture readonly) local_unnamed_addr #12 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3)
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 6, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %5, i64 0, i32 6, i32 44
  %11 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %10, align 8
  %12 = icmp eq %struct.jpeg_component_info* %11, null
  br i1 %12, label %73, label %13

13:                                               ; preds = %9
  store i32 0, i32* %2, align 4
  %14 = icmp sgt i32 %7, 0
  br i1 %14, label %15, label %41

15:                                               ; preds = %13
  %16 = sext i32 %7 to i64
  br label %17

17:                                               ; preds = %30, %15
  %18 = phi i32 [ %33, %30 ], [ 0, %15 ]
  %19 = phi i32 [ %35, %30 ], [ 0, %15 ]
  %20 = phi i64 [ %36, %30 ], [ 0, %15 ]
  %21 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 %20, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  %24 = icmp ugt i32 %23, 3
  br i1 %24, label %73, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %11, i64 %20, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  %29 = icmp ugt i32 %28, 3
  br i1 %29, label %73, label %30

30:                                               ; preds = %25
  %31 = icmp slt i32 %18, %22
  %32 = select i1 %31, i32* %21, i32* %2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %2, align 4
  %34 = icmp slt i32 %19, %27
  %35 = select i1 %34, i32 %27, i32 %19
  %36 = add nuw nsw i64 %20, 1
  %37 = icmp eq i64 %36, %16
  br i1 %37, label %38, label %17

38:                                               ; preds = %30
  %39 = shl i32 %33, 3
  %40 = shl i32 %35, 3
  br label %41

41:                                               ; preds = %38, %13
  %42 = phi i32 [ 0, %13 ], [ %39, %38 ]
  %43 = phi i32 [ 0, %13 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12
  %45 = bitcast %"class.blink::IntSize"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = srem i32 %47, %42
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %41
  %52 = add nsw i32 %42, %47
  %53 = srem i32 %52, %42
  %54 = sub i32 %52, %53
  br label %55

55:                                               ; preds = %41, %51
  %56 = phi i32 [ %54, %51 ], [ %47, %41 ]
  %57 = trunc i64 %48 to i32
  %58 = srem i32 %57, %43
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %55
  %61 = add nsw i32 %43, %57
  %62 = srem i32 %61, %43
  %63 = sub i32 %61, %62
  br label %64

64:                                               ; preds = %55, %60
  %65 = phi i32 [ %63, %60 ], [ %57, %55 ]
  %66 = icmp sgt i32 %56, 0
  %67 = select i1 %66, i32 %56, i32 0
  %68 = icmp sgt i32 %65, 0
  %69 = select i1 %68, i32 %65, i32 0
  %70 = zext i32 %69 to i64
  %71 = shl nuw nsw i64 %70, 32
  %72 = zext i32 %67 to i64
  br label %73

73:                                               ; preds = %17, %25, %1, %9, %64
  %74 = phi i64 [ %72, %64 ], [ 0, %9 ], [ 0, %1 ], [ 0, %25 ], [ 0, %17 ]
  %75 = phi i64 [ %71, %64 ], [ 0, %9 ], [ 0, %1 ], [ 0, %25 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3)
  %76 = or i64 %75, %74
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16JPEGImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* noalias sret, %"class.blink::JPEGImageDecoder"*) unnamed_addr #7 align 2 {
  %3 = bitcast %"struct.cc::ImageHeaderMetadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 -86, i64 36, i1 false)
  %4 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %1, i64 0, i32 0
  tail call void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret %0, %"class.blink::ImageDecoder"* %4) #21
  %5 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %6, i64 0, i32 6, i32 15
  %8 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = load i32, i32* %7, align 4
  br i1 %10, label %12, label %13

12:                                               ; preds = %2
  store i8 1, i8* %8, align 1
  br label %13

13:                                               ; preds = %2, %12
  %14 = icmp ne i32 %11, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 %15, i8* %16, align 1
  %17 = tail call i64 @_ZNK5blink16JPEGImageDecoder17GetImageCodedSizeEv(%"class.blink::JPEGImageDecoder"* %1)
  %18 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.gfx::Size"* %22 to i64*
  store i64 %17, i64* %23, align 4
  br label %27

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %union.anon.39* %25 to i64*
  store i64 %17, i64* %26, align 4
  store i8 1, i8* %18, align 4
  br label %27

27:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret, %"class.blink::ImageDecoder"*) unnamed_addr #9

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8SetPixelIL13J_COLOR_SPACE2EEEvPjPPhi(i32* nocapture, i8** nocapture readonly, i32) local_unnamed_addr #6 {
  %4 = load i8*, i8** %1, align 8
  %5 = mul nsw i32 %2, 3
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds i8, i8* %7, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds i8, i8* %7, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %9, 16
  %17 = shl nuw nsw i32 %12, 8
  %18 = or i32 %16, %17
  %19 = or i32 %18, %15
  %20 = or i32 %19, -16777216
  store i32 %20, i32* %0, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8SetPixelIL13J_COLOR_SPACE4EEEvPjPPhi(i32* nocapture, i8** nocapture readonly, i32) local_unnamed_addr #6 {
  %4 = load i8*, i8** %1, align 8
  %5 = shl nsw i32 %2, 2
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = getelementptr inbounds i8, i8* %7, i64 3
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = load i8, i8* %7, align 1
  %12 = zext i8 %11 to i32
  %13 = mul nuw nsw i32 %12, %10
  %14 = trunc i32 %13 to i16
  %15 = udiv i16 %14, 255
  %16 = zext i16 %15 to i32
  %17 = getelementptr inbounds i8, i8* %7, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nuw nsw i32 %19, %10
  %21 = trunc i32 %20 to i16
  %22 = udiv i16 %21, 255
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds i8, i8* %7, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = mul nuw nsw i32 %26, %10
  %28 = trunc i32 %27 to i16
  %29 = udiv i16 %28, 255
  %30 = zext i16 %29 to i32
  %31 = shl nuw nsw i32 %16, 16
  %32 = shl nuw nsw i32 %23, 8
  %33 = or i32 %31, %32
  %34 = or i32 %33, %30
  %35 = or i32 %34, -16777216
  store i32 %35, i32* %0, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16JPEGImageDecoder15OutputScanlinesEv(%"class.blink::JPEGImageDecoder"*) local_unnamed_addr #7 align 2 {
  %2 = alloca [3 x i8**], align 16
  %3 = alloca [32 x i8*], align 16
  %4 = alloca %class.sk_sp.1, align 8
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %6, align 8
  %8 = icmp eq %"class.blink::ImagePlanes"* %7, null
  br i1 %8, label %179, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 11
  %13 = bitcast i8*** %12 to i64**
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 6
  %16 = bitcast [3 x i8**]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #21
  %17 = getelementptr inbounds [3 x i8**], [3 x i8**]* %2, i64 0, i64 0
  %18 = getelementptr inbounds [3 x i8**], [3 x i8**]* %2, i64 0, i64 1
  %19 = getelementptr inbounds [3 x i8**], [3 x i8**]* %2, i64 0, i64 2
  %20 = bitcast [32 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %20) #21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 256, i1 false) #21
  %21 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 0
  store i8** %21, i8*** %17, align 16
  %22 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 16
  store i8** %22, i8*** %18, align 8
  %23 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 24
  store i8** %23, i8*** %19, align 16
  %24 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 6, i32 28
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 6, i32 44
  %27 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 12
  %31 = bitcast %"class.blink::IntSize"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 0) #21
  %34 = call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 1) #21
  %35 = call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 2) #21
  %36 = call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 0) #21
  %37 = call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 1) #21
  %38 = call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* nonnull %7, i32 2) #21
  %39 = shl nsw i32 %29, 3
  %40 = load i64, i64* %14, align 8
  %41 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %11, i64 0, i32 6, i32 34
  %42 = icmp sgt i32 %29, 0
  %43 = sext i32 %39 to i64
  %44 = ashr i64 %32, 32
  %45 = bitcast i8** %22 to i64*
  %46 = bitcast i8** %23 to i64*
  %47 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 17
  %48 = bitcast i8** %47 to i64*
  %49 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 25
  %50 = bitcast i8** %49 to i64*
  %51 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 18
  %52 = bitcast i8** %51 to i64*
  %53 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 26
  %54 = bitcast i8** %53 to i64*
  %55 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 19
  %56 = bitcast i8** %55 to i64*
  %57 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 27
  %58 = bitcast i8** %57 to i64*
  %59 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 20
  %60 = bitcast i8** %59 to i64*
  %61 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 28
  %62 = bitcast i8** %61 to i64*
  %63 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 21
  %64 = bitcast i8** %63 to i64*
  %65 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 29
  %66 = bitcast i8** %65 to i64*
  %67 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 22
  %68 = bitcast i8** %67 to i64*
  %69 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 30
  %70 = bitcast i8** %69 to i64*
  %71 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 23
  %72 = bitcast i8** %71 to i64*
  %73 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 31
  %74 = bitcast i8** %73 to i64*
  br label %75

75:                                               ; preds = %174, %9
  %76 = load i32, i32* %41, align 8
  %77 = load i32, i32* %24, align 4
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %79, label %109

79:                                               ; preds = %75
  br i1 %42, label %84, label %80

80:                                               ; preds = %97, %79
  %81 = udiv i32 %76, %29
  %82 = sext i32 %81 to i64
  %83 = icmp sgt i64 %44, %82
  br i1 %83, label %100, label %105

84:                                               ; preds = %79, %97
  %85 = phi i64 [ %98, %97 ], [ 0, %79 ]
  %86 = trunc i64 %85 to i32
  %87 = add i32 %76, %86
  %88 = icmp slt i32 %87, %25
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = sext i32 %87 to i64
  %91 = mul i64 %36, %90
  %92 = getelementptr inbounds i8, i8* %33, i64 %91
  %93 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 %85
  store i8* %92, i8** %93, align 8
  br label %97

94:                                               ; preds = %84
  %95 = getelementptr inbounds [32 x i8*], [32 x i8*]* %3, i64 0, i64 %85
  %96 = bitcast i8** %95 to i64*
  store i64 %40, i64* %96, align 8
  br label %97

97:                                               ; preds = %94, %89
  %98 = add nuw nsw i64 %85, 1
  %99 = icmp slt i64 %98, %43
  br i1 %99, label %84, label %80

100:                                              ; preds = %80
  %101 = mul i64 %37, %82
  %102 = getelementptr inbounds i8, i8* %34, i64 %101
  store i8* %102, i8** %22, align 16
  %103 = mul i64 %38, %82
  %104 = getelementptr inbounds i8, i8* %35, i64 %103
  store i8* %104, i8** %23, align 16
  br label %106

105:                                              ; preds = %80
  store i64 %40, i64* %45, align 16
  store i64 %40, i64* %46, align 16
  br label %106

106:                                              ; preds = %105, %100
  %107 = add nsw i64 %82, 1
  %108 = icmp slt i64 %107, %44
  br i1 %108, label %115, label %114

109:                                              ; preds = %75
  %110 = icmp ult i32 %77, %76
  %111 = select i1 %110, i32* %24, i32* %41
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %41, align 8
  %113 = getelementptr inbounds %"class.blink::ImagePlanes", %"class.blink::ImagePlanes"* %7, i64 0, i32 3
  store i8 1, i8* %113, align 4
  br label %177

114:                                              ; preds = %106
  store i64 %40, i64* %48, align 8
  store i64 %40, i64* %50, align 8
  br label %120

115:                                              ; preds = %106
  %116 = mul i64 %107, %37
  %117 = getelementptr inbounds i8, i8* %34, i64 %116
  store i8* %117, i8** %47, align 8
  %118 = mul i64 %107, %38
  %119 = getelementptr inbounds i8, i8* %35, i64 %118
  store i8* %119, i8** %49, align 8
  br label %120

120:                                              ; preds = %115, %114
  %121 = add nsw i64 %82, 2
  %122 = icmp slt i64 %121, %44
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  store i64 %40, i64* %52, align 16
  store i64 %40, i64* %54, align 16
  br label %129

124:                                              ; preds = %120
  %125 = mul i64 %121, %37
  %126 = getelementptr inbounds i8, i8* %34, i64 %125
  store i8* %126, i8** %51, align 16
  %127 = mul i64 %121, %38
  %128 = getelementptr inbounds i8, i8* %35, i64 %127
  store i8* %128, i8** %53, align 16
  br label %129

129:                                              ; preds = %124, %123
  %130 = add nsw i64 %82, 3
  %131 = icmp slt i64 %130, %44
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  store i64 %40, i64* %56, align 8
  store i64 %40, i64* %58, align 8
  br label %138

133:                                              ; preds = %129
  %134 = mul i64 %130, %37
  %135 = getelementptr inbounds i8, i8* %34, i64 %134
  store i8* %135, i8** %55, align 8
  %136 = mul i64 %130, %38
  %137 = getelementptr inbounds i8, i8* %35, i64 %136
  store i8* %137, i8** %57, align 8
  br label %138

138:                                              ; preds = %133, %132
  %139 = add nsw i64 %82, 4
  %140 = icmp slt i64 %139, %44
  br i1 %140, label %142, label %141

141:                                              ; preds = %138
  store i64 %40, i64* %60, align 16
  store i64 %40, i64* %62, align 16
  br label %147

142:                                              ; preds = %138
  %143 = mul i64 %139, %37
  %144 = getelementptr inbounds i8, i8* %34, i64 %143
  store i8* %144, i8** %59, align 16
  %145 = mul i64 %139, %38
  %146 = getelementptr inbounds i8, i8* %35, i64 %145
  store i8* %146, i8** %61, align 16
  br label %147

147:                                              ; preds = %142, %141
  %148 = add nsw i64 %82, 5
  %149 = icmp slt i64 %148, %44
  br i1 %149, label %151, label %150

150:                                              ; preds = %147
  store i64 %40, i64* %64, align 8
  store i64 %40, i64* %66, align 8
  br label %156

151:                                              ; preds = %147
  %152 = mul i64 %148, %37
  %153 = getelementptr inbounds i8, i8* %34, i64 %152
  store i8* %153, i8** %63, align 8
  %154 = mul i64 %148, %38
  %155 = getelementptr inbounds i8, i8* %35, i64 %154
  store i8* %155, i8** %65, align 8
  br label %156

156:                                              ; preds = %151, %150
  %157 = add nsw i64 %82, 6
  %158 = icmp slt i64 %157, %44
  br i1 %158, label %160, label %159

159:                                              ; preds = %156
  store i64 %40, i64* %68, align 16
  store i64 %40, i64* %70, align 16
  br label %165

160:                                              ; preds = %156
  %161 = mul i64 %157, %37
  %162 = getelementptr inbounds i8, i8* %34, i64 %161
  store i8* %162, i8** %67, align 16
  %163 = mul i64 %157, %38
  %164 = getelementptr inbounds i8, i8* %35, i64 %163
  store i8* %164, i8** %69, align 16
  br label %165

165:                                              ; preds = %160, %159
  %166 = add nsw i64 %82, 7
  %167 = icmp slt i64 %166, %44
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  store i64 %40, i64* %72, align 8
  store i64 %40, i64* %74, align 8
  br label %174

169:                                              ; preds = %165
  %170 = mul i64 %166, %37
  %171 = getelementptr inbounds i8, i8* %34, i64 %170
  store i8* %171, i8** %71, align 8
  %172 = mul i64 %166, %38
  %173 = getelementptr inbounds i8, i8* %35, i64 %172
  store i8* %173, i8** %73, align 8
  br label %174

174:                                              ; preds = %169, %168
  %175 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %15, i8*** nonnull %17, i32 %39) #21
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %75

177:                                              ; preds = %174, %109
  %178 = phi i1 [ true, %109 ], [ false, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %20) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #21
  br label %271

179:                                              ; preds = %1
  %180 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0
  %181 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %271, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 2
  %186 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %187 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6
  %189 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %185, i32 0) #21
  %190 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 5
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %219

193:                                              ; preds = %184
  %194 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 27
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 28
  %197 = load i32, i32* %196, align 4
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* nonnull sret %4, %"class.blink::ImageDecoder"* %180) #21
  %198 = call zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"* %189, i32 %195, i32 %197, %class.sk_sp.1* nonnull %4) #21
  %199 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %200 = load %class.SkColorSpace*, %class.SkColorSpace** %199, align 8
  %201 = icmp eq %class.SkColorSpace* %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %193
  %203 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %208

206:                                              ; preds = %202
  %207 = bitcast %class.SkColorSpace* %200 to i8*
  call void @_ZdlPv(i8* %207) #22
  br label %208

208:                                              ; preds = %193, %202, %206
  br i1 %198, label %211, label %209

209:                                              ; preds = %208
  %210 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %210, align 2
  br label %271

211:                                              ; preds = %208
  call void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"* %189) #21
  call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %189, i32 2) #21
  call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %189, i1 zeroext true) #21
  %212 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 12
  %213 = bitcast %"class.blink::IntSize"* %212 to i64*
  %214 = load i64, i64* %213, align 4
  %215 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 4
  %216 = bitcast %"class.blink::IntRect"* %215 to i64*
  store i64 0, i64* %216, align 8
  %217 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 4, i32 1
  %218 = bitcast %"class.blink::IntSize"* %217 to i64*
  store i64 %214, i64* %218, align 8
  br label %219

219:                                              ; preds = %211, %184
  %220 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 11
  %221 = load i32, i32* %220, align 8
  %222 = or i32 %221, 1
  %223 = icmp eq i32 %222, 13
  br i1 %223, label %224, label %261

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 34
  %226 = load i32, i32* %225, align 8
  %227 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 28
  %228 = load i32, i32* %227, align 4
  %229 = icmp ult i32 %226, %228
  br i1 %229, label %230, label %259

230:                                              ; preds = %224
  %231 = bitcast i8** %5 to i8*
  %232 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 0, i32 1, i32 0
  %233 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 0, i32 1, i32 1
  %234 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %187, i64 0, i32 6, i32 27
  br label %235

235:                                              ; preds = %230, %255
  %236 = phi i32 [ %226, %230 ], [ %256, %255 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #21
  %237 = load i8*, i8** %232, align 8
  %238 = sext i32 %236 to i64
  %239 = load i64, i64* %233, align 8
  %240 = mul i64 %239, %238
  %241 = getelementptr inbounds i8, i8* %237, i64 %240
  store i8* %241, i8** %5, align 8
  %242 = call i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct* %188, i8** nonnull %5, i32 1) #21
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %270

244:                                              ; preds = %235
  %245 = call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %180) #21
  %246 = icmp eq %"class.blink::ColorProfileTransform"* %245, null
  br i1 %246, label %255, label %247

247:                                              ; preds = %244
  %248 = load i8*, i8** %5, align 8
  %249 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %245) #21
  %250 = load i8*, i8** %5, align 8
  %251 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %245) #21
  %252 = load i32, i32* %234, align 8
  %253 = zext i32 %252 to i64
  %254 = call zeroext i1 @skcms_Transform(i8* %248, i32 13, i32 1, %struct.skcms_ICCProfile* %249, i8* %250, i32 13, i32 1, %struct.skcms_ICCProfile* %251, i64 %253) #21
  br label %255

255:                                              ; preds = %247, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #21
  %256 = load i32, i32* %225, align 8
  %257 = load i32, i32* %227, align 4
  %258 = icmp ult i32 %256, %257
  br i1 %258, label %235, label %259

259:                                              ; preds = %255, %224
  %260 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %189, i64 0, i32 10
  store i8 1, i8* %260, align 1
  br label %271

261:                                              ; preds = %219
  switch i32 %221, label %268 [
    i32 2, label %262
    i32 4, label %265
  ]

262:                                              ; preds = %261
  %263 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %186, align 8
  %264 = call zeroext i1 @_ZN5blink10OutputRowsIL13J_COLOR_SPACE2EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE(%"class.blink::JPEGImageReader"* %263, %"class.blink::ImageFrame"* dereferenceable(128) %189)
  br label %271

265:                                              ; preds = %261
  %266 = load %"class.blink::JPEGImageReader"*, %"class.blink::JPEGImageReader"** %186, align 8
  %267 = call zeroext i1 @_ZN5blink10OutputRowsIL13J_COLOR_SPACE4EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE(%"class.blink::JPEGImageReader"* %266, %"class.blink::ImageFrame"* dereferenceable(128) %189)
  br label %271

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %269, align 2
  br label %271

270:                                              ; preds = %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #21
  br label %271

271:                                              ; preds = %209, %259, %262, %265, %268, %270, %179, %177
  %272 = phi i1 [ %178, %177 ], [ false, %179 ], [ false, %209 ], [ true, %259 ], [ false, %268 ], [ %267, %265 ], [ %264, %262 ], [ false, %270 ]
  ret i1 %272
}

declare zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"*, i32, i32, %class.sk_sp.1*) local_unnamed_addr #9

declare void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #9

declare void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"*) local_unnamed_addr #9

declare void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"*, i32) local_unnamed_addr #9

declare void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"*, i1 zeroext) local_unnamed_addr #9

declare i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct*, i8**, i32) local_unnamed_addr #9

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #9

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #9

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink10OutputRowsIL13J_COLOR_SPACE2EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE(%"class.blink::JPEGImageReader"*, %"class.blink::ImageFrame"* dereferenceable(128)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 11
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 27
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 34
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 28
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %118

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 1
  %16 = icmp sgt i32 %7, 0
  %17 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %18 = sext i32 %7 to i64
  %19 = zext i32 %7 to i64
  %20 = and i64 %19, 1
  %21 = icmp eq i32 %7, 1
  %22 = sub nsw i64 %19, %20
  %23 = icmp eq i64 %20, 0
  br label %24

24:                                               ; preds = %13, %114
  %25 = phi i32 [ %9, %13 ], [ %115, %114 ]
  %26 = tail call i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct* %5, i8** %4, i32 1) #21
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %120

28:                                               ; preds = %24
  %29 = sext i32 %25 to i64
  br i1 %16, label %30, label %57

30:                                               ; preds = %28
  %31 = load i8*, i8** %14, align 8
  %32 = load i64, i64* %15, align 8
  %33 = mul i64 %32, %29
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = bitcast i8* %34 to i32*
  br i1 %21, label %36, label %62

36:                                               ; preds = %62, %30
  %37 = phi i64 [ 0, %30 ], [ %103, %62 ]
  %38 = phi i32* [ %35, %30 ], [ %102, %62 ]
  br i1 %23, label %57, label %39

39:                                               ; preds = %36
  %40 = load i8*, i8** %4, align 8
  %41 = mul i64 %37, 3
  %42 = and i64 %41, 4294967295
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %43, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %43, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %45, 16
  %53 = shl nuw nsw i32 %48, 8
  %54 = or i32 %52, %53
  %55 = or i32 %54, %51
  %56 = or i32 %55, -16777216
  store i32 %56, i32* %38, align 4
  br label %57

57:                                               ; preds = %39, %36, %28
  %58 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %17, align 8
  %59 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %58, i64 0, i32 0
  %60 = tail call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %59) #21
  %61 = icmp eq %"class.blink::ColorProfileTransform"* %60, null
  br i1 %61, label %114, label %106

62:                                               ; preds = %30, %62
  %63 = phi i64 [ %103, %62 ], [ 0, %30 ]
  %64 = phi i32* [ %102, %62 ], [ %35, %30 ]
  %65 = phi i64 [ %104, %62 ], [ %22, %30 ]
  %66 = load i8*, i8** %4, align 8
  %67 = mul i64 %63, 3
  %68 = and i64 %67, 4294967294
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = getelementptr inbounds i8, i8* %69, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = getelementptr inbounds i8, i8* %69, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %71, 16
  %79 = shl nuw nsw i32 %74, 8
  %80 = or i32 %78, %79
  %81 = or i32 %80, %77
  %82 = or i32 %81, -16777216
  store i32 %82, i32* %64, align 4
  %83 = getelementptr inbounds i32, i32* %64, i64 1
  %84 = or i64 %63, 1
  %85 = load i8*, i8** %4, align 8
  %86 = mul i64 %84, 3
  %87 = and i64 %86, 4294967295
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = getelementptr inbounds i8, i8* %88, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i8, i8* %88, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %90, 16
  %98 = shl nuw nsw i32 %93, 8
  %99 = or i32 %97, %98
  %100 = or i32 %99, %96
  %101 = or i32 %100, -16777216
  store i32 %101, i32* %83, align 4
  %102 = getelementptr inbounds i32, i32* %64, i64 2
  %103 = add nuw nsw i64 %63, 2
  %104 = add i64 %65, -2
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %36, label %62

106:                                              ; preds = %57
  %107 = load i8*, i8** %14, align 8
  %108 = load i64, i64* %15, align 8
  %109 = mul i64 %108, %29
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %60) #21
  %112 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %60) #21
  %113 = tail call zeroext i1 @skcms_Transform(i8* %110, i32 13, i32 1, %struct.skcms_ICCProfile* %111, i8* %110, i32 13, i32 1, %struct.skcms_ICCProfile* %112, i64 %18) #21
  br label %114

114:                                              ; preds = %106, %57
  %115 = load i32, i32* %8, align 8
  %116 = load i32, i32* %10, align 4
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %24, label %118

118:                                              ; preds = %114, %2
  %119 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 10
  store i8 1, i8* %119, align 1
  br label %120

120:                                              ; preds = %24, %118
  %121 = phi i1 [ true, %118 ], [ false, %24 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink10OutputRowsIL13J_COLOR_SPACE4EEEbPNS_15JPEGImageReaderERNS_10ImageFrameE(%"class.blink::JPEGImageReader"*, %"class.blink::ImageFrame"* dereferenceable(128)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 11
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 27
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 34
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 28
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 1
  %16 = icmp sgt i32 %7, 0
  %17 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %18 = sext i32 %7 to i64
  %19 = zext i32 %7 to i64
  br label %20

20:                                               ; preds = %13, %83
  %21 = phi i32 [ %9, %13 ], [ %84, %83 ]
  %22 = tail call i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct* %5, i8** %4, i32 1) #21
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %89

24:                                               ; preds = %20
  %25 = sext i32 %21 to i64
  br i1 %16, label %26, label %32

26:                                               ; preds = %24
  %27 = load i8*, i8** %14, align 8
  %28 = load i64, i64* %15, align 8
  %29 = mul i64 %28, %25
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = bitcast i8* %30 to i32*
  br label %37

32:                                               ; preds = %37, %24
  %33 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %17, align 8
  %34 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %33, i64 0, i32 0
  %35 = tail call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %34) #21
  %36 = icmp eq %"class.blink::ColorProfileTransform"* %35, null
  br i1 %36, label %83, label %75

37:                                               ; preds = %37, %26
  %38 = phi i64 [ 0, %26 ], [ %73, %37 ]
  %39 = phi i32* [ %31, %26 ], [ %72, %37 ]
  %40 = load i8*, i8** %4, align 8
  %41 = shl i64 %38, 2
  %42 = and i64 %41, 4294967292
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = load i8, i8* %43, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %46
  %50 = trunc i32 %49 to i16
  %51 = udiv i16 %50, 255
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds i8, i8* %43, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %46
  %57 = trunc i32 %56 to i16
  %58 = udiv i16 %57, 255
  %59 = zext i16 %58 to i32
  %60 = getelementptr inbounds i8, i8* %43, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %46
  %64 = trunc i32 %63 to i16
  %65 = udiv i16 %64, 255
  %66 = zext i16 %65 to i32
  %67 = shl nuw nsw i32 %52, 16
  %68 = shl nuw nsw i32 %59, 8
  %69 = or i32 %67, %68
  %70 = or i32 %69, %66
  %71 = or i32 %70, -16777216
  store i32 %71, i32* %39, align 4
  %72 = getelementptr inbounds i32, i32* %39, i64 1
  %73 = add nuw nsw i64 %38, 1
  %74 = icmp eq i64 %73, %19
  br i1 %74, label %32, label %37

75:                                               ; preds = %32
  %76 = load i8*, i8** %14, align 8
  %77 = load i64, i64* %15, align 8
  %78 = mul i64 %77, %25
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %35) #21
  %81 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %35) #21
  %82 = tail call zeroext i1 @skcms_Transform(i8* %79, i32 13, i32 1, %struct.skcms_ICCProfile* %80, i8* %79, i32 13, i32 1, %struct.skcms_ICCProfile* %81, i64 %18) #21
  br label %83

83:                                               ; preds = %75, %32
  %84 = load i32, i32* %8, align 8
  %85 = load i32, i32* %10, align 4
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %20, label %87

87:                                               ; preds = %83, %2
  %88 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 10
  store i8 1, i8* %88, align 1
  br label %89

89:                                               ; preds = %20, %87
  %90 = phi i1 [ true, %87 ], [ false, %20 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE(%"class.blink::JPEGImageReader"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.WTF::Vector.34", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkISize*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkISize*
  %10 = alloca %"struct.blink::DecodedImageMetaData", align 4
  %11 = alloca %"class.blink::IntSize", align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.blink::IntSize"*
  %16 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 7, i32 2, i64 0
  %17 = call i32 @_setjmp(%struct.__jmp_buf_tag* %16) #23
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %21 = bitcast %"class.blink::JPEGImageDecoder"** %20 to %"class.blink::ImageDecoder"**
  %22 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %22, i64 0, i32 15
  store i8 1, i8* %23, align 2
  br label %728

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 10
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %728 [
    i32 0, label %27
    i32 1, label %460
    i32 3, label %525
    i32 2, label %529
    i32 4, label %666
  ]

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %29 = call i32 @jpeg_read_header(%struct.jpeg_decompress_struct* %28, i32 1) #21
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %728, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 10
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  %35 = icmp ult i32 %34, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %38 = bitcast %"class.blink::JPEGImageDecoder"** %37 to %"class.blink::ImageDecoder"**
  %39 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %39, i64 0, i32 15
  store i8 1, i8* %40, align 2
  br label %728

41:                                               ; preds = %31
  %42 = sext i32 %34 to i64
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE.16, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 11
  store i32 %44, i32* %45, align 8
  store i32 1, i32* %25, align 8
  %46 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %47 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 7
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 8
  %51 = load i32, i32* %50, align 4
  %52 = call zeroext i1 @_ZN5blink16JPEGImageDecoder7SetSizeEjj(%"class.blink::JPEGImageDecoder"* %47, i32 %49, i32 %51)
  br i1 %52, label %53, label %728

53:                                               ; preds = %41
  %54 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %55 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %54, i64 0, i32 0, i32 12
  %56 = bitcast %"class.blink::IntSize"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = shl i32 %58, 2
  %62 = mul i32 %61, %60
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %54, i64 0, i32 0, i32 8
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, %63
  br i1 %66, label %67, label %75

67:                                               ; preds = %53
  %68 = shl i64 %65, 6
  %69 = udiv i64 %68, %63
  %70 = uitofp i64 %69 to float
  %71 = call float @sqrtf(float %70) #21
  %72 = call float @llvm.floor.f32(float %71) #21
  %73 = fptoui float %72 to i32
  %74 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  br label %75

75:                                               ; preds = %53, %67
  %76 = phi %"class.blink::JPEGImageDecoder"* [ %74, %67 ], [ %54, %53 ]
  %77 = phi i32 [ %73, %67 ], [ 8, %53 ]
  %78 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 13
  store i32 8, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %76, i64 0, i32 4, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %170

82:                                               ; preds = %75
  %83 = bitcast %"class.WTF::Vector.34"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #21
  %84 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %5, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %5, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #21
  switch i32 %77, label %110 [
    i32 8, label %87
    i32 0, label %146
  ], !prof !5

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 61
  %89 = load i32, i32* %88, align 8
  %90 = shl nsw i32 %89, 3
  %91 = load i32, i32* %48, align 8
  %92 = urem i32 %91, %90
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %87
  %95 = load i32, i32* %50, align 4
  br label %103

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 62
  %98 = load i32, i32* %97, align 4
  %99 = shl nsw i32 %98, 3
  %100 = load i32, i32* %50, align 4
  %101 = urem i32 %100, %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %94, %96
  %104 = phi i32 [ %95, %94 ], [ %100, %96 ]
  %105 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #21
  %106 = zext i32 %104 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %91 to i64
  %109 = or i64 %107, %108
  store i64 %109, i64* %6, align 8
  call void @_ZN3WTF6VectorI7SkISizeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.34"* nonnull %5, %struct.SkISize* nonnull dereferenceable(8) %7) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #21
  br label %146

110:                                              ; preds = %82, %96
  %111 = zext i32 %77 to i64
  %112 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm(i64 %111) #21
  %113 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %112, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI7SkISizeEEPKcv, i64 0, i64 0)) #21
  %114 = ptrtoint i8* %113 to i64
  %115 = bitcast %"class.WTF::Vector.34"* %5 to i64*
  store atomic i64 %114, i64* %115 monotonic, align 8
  %116 = lshr i64 %112, 3
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* %85, align 8
  %118 = icmp slt i32 %77, 1
  br i1 %118, label %146, label %119

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 12
  %121 = bitcast i64* %8 to i8*
  %122 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 27
  %123 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 28
  br label %124

124:                                              ; preds = %143, %119
  %125 = phi i32 [ 1, %119 ], [ %144, %143 ]
  store i32 %125, i32* %120, align 4
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* %28) #21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #21
  %126 = load i32, i32* %122, align 8
  %127 = load i32, i32* %123, align 4
  %128 = zext i32 %127 to i64
  %129 = shl nuw i64 %128, 32
  %130 = zext i32 %126 to i64
  %131 = or i64 %129, %130
  store i64 %131, i64* %8, align 8
  %132 = load i32, i32* %86, align 4
  %133 = load i32, i32* %85, align 8
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %142, label %135, !prof !4

135:                                              ; preds = %124
  %136 = load %struct.SkISize*, %struct.SkISize** %84, align 8
  %137 = zext i32 %132 to i64
  %138 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %136, i64 %137
  %139 = bitcast %struct.SkISize* %138 to i64*
  store i64 %131, i64* %139, align 4
  %140 = load i32, i32* %86, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %86, align 4
  br label %143

142:                                              ; preds = %124
  call void @_ZN3WTF6VectorI7SkISizeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.34"* nonnull %5, %struct.SkISize* nonnull dereferenceable(8) %9) #21
  br label %143

143:                                              ; preds = %135, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #21
  %144 = add nuw i32 %125, 1
  %145 = icmp eq i32 %125, %77
  br i1 %145, label %146, label %124

146:                                              ; preds = %143, %82, %110, %103
  %147 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %148 = bitcast %"class.WTF::Vector.34"* %5 to i64*
  %149 = load i64, i64* %148, align 8
  store atomic i64 0, i64* %148 monotonic, align 8
  %150 = load i32, i32* %85, align 8
  store i32 0, i32* %85, align 8
  %151 = load i32, i32* %86, align 4
  store i32 0, i32* %86, align 4
  %152 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %147, i64 0, i32 4
  %153 = bitcast %"class.WTF::Vector.34"* %152 to i64*
  %154 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %152, i64 0, i32 0, i32 0, i32 0
  %155 = load %struct.SkISize*, %struct.SkISize** %154, align 8
  store atomic i64 %149, i64* %153 monotonic, align 8
  %156 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %147, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 %150, i32* %156, align 4
  %157 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %147, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %151, i32* %157, align 4
  %158 = icmp eq %struct.SkISize* %155, null
  br i1 %158, label %169, label %159, !prof !3

159:                                              ; preds = %146
  %160 = bitcast %struct.SkISize* %155 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %160) #21
  %161 = load %struct.SkISize*, %struct.SkISize** %84, align 8
  %162 = bitcast %struct.SkISize* %161 to i8*
  %163 = icmp eq %struct.SkISize* %161, null
  br i1 %163, label %169, label %164, !prof !3

164:                                              ; preds = %159
  %165 = load i32, i32* %86, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %168, label %167, !prof !4

167:                                              ; preds = %164
  store i32 0, i32* %86, align 4
  br label %168

168:                                              ; preds = %167, %164
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %162) #21
  store %struct.SkISize* null, %struct.SkISize** %84, align 8
  br label %169

169:                                              ; preds = %146, %159, %168
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #21
  br label %170

170:                                              ; preds = %169, %75
  %171 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 12
  store i32 %77, i32* %171, align 4
  call void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct* %28) #21
  %172 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %173 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 27
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 28
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %172, i64 0, i32 3
  %178 = bitcast %"class.blink::IntSize"* %177 to i64*
  %179 = zext i32 %176 to i64
  %180 = shl nuw i64 %179, 32
  %181 = zext i32 %174 to i64
  %182 = or i64 %180, %181
  store i64 %182, i64* %178, align 8
  %183 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #21
  %184 = bitcast %"struct.blink::DecodedImageMetaData"* %10 to i32*
  store i32 -1431655766, i32* %184, align 4
  store i8 1, i8* %183, align 4
  %185 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 1, i32 0
  %186 = bitcast float* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %186, i8 0, i64 20, i1 false) #21
  %187 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 60
  %188 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %187, align 8
  %189 = icmp eq %struct.jpeg_marker_struct* %188, null
  br i1 %189, label %305, label %190

190:                                              ; preds = %170, %297
  %191 = phi %struct.jpeg_marker_struct* [ %299, %297 ], [ %188, %170 ]
  %192 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %191, i64 0, i32 1
  %193 = load i8, i8* %192, align 8
  %194 = icmp eq i8 %193, -31
  br i1 %194, label %195, label %297

195:                                              ; preds = %190
  %196 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %191, i64 0, i32 3
  %197 = load i32, i32* %196, align 8
  %198 = icmp ugt i32 %197, 13
  br i1 %198, label %199, label %297

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %191, i64 0, i32 4
  %201 = load i8*, i8** %200, align 8
  %202 = load i8, i8* %201, align 1
  %203 = icmp eq i8 %202, 69
  br i1 %203, label %204, label %297

204:                                              ; preds = %199
  %205 = getelementptr inbounds i8, i8* %201, i64 1
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 120
  br i1 %207, label %208, label %297

208:                                              ; preds = %204
  %209 = getelementptr inbounds i8, i8* %201, i64 2
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 105
  br i1 %211, label %212, label %297

212:                                              ; preds = %208
  %213 = getelementptr inbounds i8, i8* %201, i64 3
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 102
  br i1 %215, label %216, label %297

216:                                              ; preds = %212
  %217 = getelementptr inbounds i8, i8* %201, i64 4
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %297

220:                                              ; preds = %216
  %221 = getelementptr inbounds i8, i8* %201, i64 6
  %222 = load i8, i8* %221, align 1
  switch i8 %222, label %297 [
    i8 73, label %223
    i8 77, label %227
  ]

223:                                              ; preds = %220
  %224 = getelementptr inbounds i8, i8* %201, i64 7
  %225 = load i8, i8* %224, align 1
  %226 = icmp eq i8 %225, 73
  br i1 %226, label %234, label %297

227:                                              ; preds = %220
  %228 = getelementptr inbounds i8, i8* %201, i64 7
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 77
  br i1 %230, label %231, label %297

231:                                              ; preds = %227
  %232 = getelementptr inbounds i8, i8* %201, i64 8
  %233 = getelementptr inbounds i8, i8* %201, i64 9
  br label %237

234:                                              ; preds = %223
  %235 = getelementptr inbounds i8, i8* %201, i64 8
  %236 = getelementptr inbounds i8, i8* %201, i64 9
  br label %237

237:                                              ; preds = %234, %231
  %238 = phi i8* [ %235, %234 ], [ %233, %231 ]
  %239 = phi i8* [ %236, %234 ], [ %232, %231 ]
  %240 = phi i8 [ 0, %234 ], [ 1, %231 ]
  %241 = phi i1 [ false, %234 ], [ true, %231 ]
  %242 = load i8, i8* %239, align 1
  %243 = zext i8 %242 to i32
  %244 = shl nuw nsw i32 %243, 8
  %245 = load i8, i8* %238, align 1
  %246 = zext i8 %245 to i32
  %247 = or i32 %244, %246
  %248 = icmp eq i32 %247, 42
  br i1 %248, label %249, label %297

249:                                              ; preds = %237
  %250 = getelementptr inbounds i8, i8* %201, i64 10
  br i1 %241, label %251, label %266

251:                                              ; preds = %249
  %252 = load i8, i8* %250, align 1
  %253 = zext i8 %252 to i32
  %254 = shl nuw i32 %253, 24
  %255 = getelementptr inbounds i8, i8* %201, i64 11
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = shl nuw nsw i32 %257, 16
  %259 = or i32 %258, %254
  %260 = getelementptr inbounds i8, i8* %201, i64 12
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = shl nuw nsw i32 %262, 8
  %264 = or i32 %259, %263
  %265 = getelementptr inbounds i8, i8* %201, i64 13
  br label %281

266:                                              ; preds = %249
  %267 = getelementptr inbounds i8, i8* %201, i64 13
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw i32 %269, 24
  %271 = getelementptr inbounds i8, i8* %201, i64 12
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 16
  %275 = or i32 %274, %270
  %276 = getelementptr inbounds i8, i8* %201, i64 11
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = shl nuw nsw i32 %278, 8
  %280 = or i32 %275, %279
  br label %281

281:                                              ; preds = %266, %251
  %282 = phi i8* [ %250, %266 ], [ %265, %251 ]
  %283 = phi i32 [ %280, %266 ], [ %264, %251 ]
  %284 = load i8, i8* %282, align 1
  %285 = zext i8 %284 to i32
  %286 = or i32 %283, %285
  %287 = add i32 %197, -6
  %288 = icmp ult i32 %286, %287
  br i1 %288, label %289, label %297

289:                                              ; preds = %281
  %290 = zext i32 %197 to i64
  %291 = getelementptr inbounds i8, i8* %201, i64 %290
  %292 = zext i32 %286 to i64
  %293 = getelementptr inbounds i8, i8* %201, i64 -2
  %294 = getelementptr inbounds i8, i8* %293, i64 %292
  %295 = getelementptr inbounds i8, i8* %221, i64 %292
  %296 = icmp ne i8 %240, 0
  call fastcc void @_ZN5blinkL17ReadExifDirectoryEPhS0_S0_S0_bRNS_20DecodedImageMetaDataEb(i8* %295, i8* %294, i8* %221, i8* %291, i1 zeroext %296, %"struct.blink::DecodedImageMetaData"* nonnull dereferenceable(24) %10, i1 zeroext true) #21
  br label %297

297:                                              ; preds = %289, %281, %237, %227, %223, %220, %216, %212, %208, %204, %199, %195, %190
  %298 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %191, i64 0, i32 0
  %299 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %298, align 8
  %300 = icmp eq %struct.jpeg_marker_struct* %299, null
  br i1 %300, label %301, label %190

301:                                              ; preds = %297
  %302 = load i8, i8* %183, align 4
  %303 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 3
  %304 = load i32, i32* %303, align 4
  br label %305

305:                                              ; preds = %301, %170
  %306 = phi i32 [ %304, %301 ], [ 0, %170 ]
  %307 = phi i8 [ %302, %301 ], [ 1, %170 ]
  %308 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %309 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %308, i64 0, i32 0, i32 6, i32 0
  store i8 %307, i8* %309, align 4
  %310 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %311 = bitcast %"class.blink::IntSize"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311)
  %312 = load i32, i32* %173, align 8
  %313 = load i32, i32* %175, align 4
  %314 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %11, i64 0, i32 0
  store i32 %312, i32* %314, align 4
  %315 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %11, i64 0, i32 1
  store i32 %313, i32* %315, align 4
  %316 = icmp eq i32 %306, 2
  br i1 %316, label %317, label %372

317:                                              ; preds = %305
  %318 = load float, float* %185, align 4
  %319 = fcmp ugt float %318, 0.000000e+00
  br i1 %319, label %320, label %372

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 1, i32 1
  %322 = load float, float* %321, align 4
  %323 = fcmp ugt float %322, 0.000000e+00
  br i1 %323, label %324, label %372

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 2
  %326 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %325, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = icmp slt i32 %327, 1
  br i1 %328, label %372, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %10, i64 0, i32 2, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %331, 1
  br i1 %332, label %372, label %333

333:                                              ; preds = %329
  %334 = fcmp une float %318, 0.000000e+00
  br i1 %334, label %338, label %335

335:                                              ; preds = %333
  %336 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #21
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.10, i64 0, i64 0), i32 290, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0)) #21
  %337 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336) #21
  br label %338

338:                                              ; preds = %335, %333
  %339 = fcmp une float %322, 0.000000e+00
  br i1 %339, label %343, label %340

340:                                              ; preds = %338
  %341 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #21
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.10, i64 0, i64 0), i32 291, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #21
  %342 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #21
  br label %343

343:                                              ; preds = %340, %338
  %344 = mul i32 %312, 72
  %345 = uitofp i32 %344 to float
  %346 = fdiv float %345, %318
  %347 = mul i32 %313, 72
  %348 = uitofp i32 %347 to float
  %349 = fdiv float %348, %322
  %350 = call float @llvm.round.f32(float %346) #21
  %351 = fpext float %350 to double
  %352 = fcmp ult double %351, 0x41DFFFFFFFC00000
  br i1 %352, label %353, label %357

353:                                              ; preds = %343
  %354 = fcmp ugt float %350, 0xC1E0000000000000
  br i1 %354, label %355, label %357

355:                                              ; preds = %353
  %356 = fptosi float %350 to i32
  br label %357

357:                                              ; preds = %355, %353, %343
  %358 = phi i32 [ %356, %355 ], [ 2147483647, %343 ], [ -2147483648, %353 ]
  %359 = call float @llvm.round.f32(float %349) #21
  %360 = fpext float %359 to double
  %361 = fcmp ult double %360, 0x41DFFFFFFFC00000
  br i1 %361, label %362, label %366

362:                                              ; preds = %357
  %363 = fcmp ugt float %359, 0xC1E0000000000000
  br i1 %363, label %364, label %366

364:                                              ; preds = %362
  %365 = fptosi float %359 to i32
  br label %366

366:                                              ; preds = %364, %362, %357
  %367 = phi i32 [ %365, %364 ], [ 2147483647, %357 ], [ -2147483648, %362 ]
  %368 = icmp eq i32 %327, %358
  br i1 %368, label %369, label %372

369:                                              ; preds = %366
  %370 = icmp eq i32 %331, %367
  %371 = select i1 %370, %"class.blink::IntSize"* %325, %"class.blink::IntSize"* %11
  br label %372

372:                                              ; preds = %305, %317, %320, %324, %329, %366, %369
  %373 = phi %"class.blink::IntSize"* [ %11, %320 ], [ %11, %324 ], [ %11, %317 ], [ %11, %305 ], [ %11, %329 ], [ %11, %366 ], [ %371, %369 ]
  %374 = bitcast %"class.blink::IntSize"* %373 to i64*
  %375 = load i64, i64* %374, align 4
  %376 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %310, i64 0, i32 0, i32 7
  %377 = bitcast %"class.blink::IntSize"* %376 to i64*
  store i64 %375, i64* %377, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311)
  %378 = bitcast %"class.blink::JPEGImageDecoder"** %46 to %"class.blink::ImageDecoder"**
  %379 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %379, i64 0, i32 5, i32 0
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %430, label %383

383:                                              ; preds = %372
  %384 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #21
  store i8* null, i8** %12, align 8
  %385 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %385) #21
  store i32 0, i32* %13, align 4
  %386 = call i32 @read_icc_profile(%struct.jpeg_decompress_struct* %28, i8** nonnull %12, i32* nonnull %13) #21
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %429, label %388

388:                                              ; preds = %383
  %389 = load i8*, i8** %12, align 8
  %390 = load i32, i32* %13, align 4
  %391 = zext i32 %390 to i64
  %392 = call %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8* %389, i64 %391) #21
  %393 = icmp eq %"class.blink::ColorProfile"* %392, null
  br i1 %393, label %427, label %394

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %392, i64 0, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = load i32, i32* %32, align 4
  switch i32 %397, label %415 [
    i32 4, label %398
    i32 5, label %398
    i32 1, label %407
  ]

398:                                              ; preds = %394, %394
  %399 = icmp eq i32 %396, 1129142603
  br i1 %399, label %424, label %400

400:                                              ; preds = %398
  %401 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %392, i64 0, i32 1, i32 0, i32 0, i32 0
  %402 = load i8*, i8** %401, align 8
  store i8* null, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %405, label %404

404:                                              ; preds = %400
  call void @_ZdaPv(i8* nonnull %402) #22
  br label %405

405:                                              ; preds = %400, %404
  %406 = bitcast %"class.blink::ColorProfile"* %392 to i8*
  call void @free(i8* %406) #21
  br label %427

407:                                              ; preds = %394
  switch i32 %396, label %408 [
    i32 1380401696, label %424
    i32 1196573017, label %424
  ]

408:                                              ; preds = %407
  %409 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %392, i64 0, i32 1, i32 0, i32 0, i32 0
  %410 = load i8*, i8** %409, align 8
  store i8* null, i8** %409, align 8
  %411 = icmp eq i8* %410, null
  br i1 %411, label %413, label %412

412:                                              ; preds = %408
  call void @_ZdaPv(i8* nonnull %410) #22
  br label %413

413:                                              ; preds = %408, %412
  %414 = bitcast %"class.blink::ColorProfile"* %392 to i8*
  call void @free(i8* %414) #21
  br label %427

415:                                              ; preds = %394
  %416 = icmp eq i32 %396, 1380401696
  br i1 %416, label %424, label %417

417:                                              ; preds = %415
  %418 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %392, i64 0, i32 1, i32 0, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  store i8* null, i8** %418, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %422, label %421

421:                                              ; preds = %417
  call void @_ZdaPv(i8* nonnull %419) #22
  br label %422

422:                                              ; preds = %417, %421
  %423 = bitcast %"class.blink::ColorProfile"* %392 to i8*
  call void @free(i8* %423) #21
  br label %427

424:                                              ; preds = %398, %415, %407, %407
  %425 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %46, align 8
  %426 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %425, i64 0, i32 0
  call void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"* %426, %"class.blink::ColorProfile"* nonnull %392) #21
  br label %427

427:                                              ; preds = %388, %405, %413, %422, %424
  %428 = load i8*, i8** %12, align 8
  call void @free(i8* %428) #21
  br label %429

429:                                              ; preds = %427, %383
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #21
  br label %430

430:                                              ; preds = %429, %372
  %431 = call i32 @jpeg_has_multiple_scans(%struct.jpeg_decompress_struct* %28) #21
  %432 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 15
  store i32 %431, i32* %432, align 8
  %433 = icmp eq i32 %431, 0
  br i1 %433, label %437, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 7, i32 0, i32 1
  store void (%struct.jpeg_common_struct*, i32)* @_ZN5blink12emit_messageEP18jpeg_common_structi, void (%struct.jpeg_common_struct*, i32)** %435, align 8
  %436 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %436, align 8
  br label %437

437:                                              ; preds = %430, %434
  %438 = icmp eq i32 %1, 0
  br i1 %438, label %439, label %459

439:                                              ; preds = %437
  %440 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 2
  store i8 1, i8* %440, align 8
  %441 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 5
  %442 = load i8*, i8** %441, align 8
  %443 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 6
  %444 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %443, align 8
  %445 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %444, i64 0, i32 0
  %446 = load i8*, i8** %445, align 8
  %447 = icmp eq i8* %442, %446
  br i1 %447, label %455, label %448

448:                                              ; preds = %439
  %449 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 4
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %444, i64 0, i32 1
  %452 = load i64, i64* %451, align 8
  %453 = sub i64 %450, %452
  %454 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 3
  store i64 %453, i64* %454, align 8
  br label %455

455:                                              ; preds = %439, %448
  %456 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %444, i64 0, i32 1
  store i64 0, i64* %456, align 8
  %457 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %443, align 8
  %458 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %457, i64 0, i32 0
  store i8* null, i8** %458, align 8
  store i8* null, i8** %441, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #21
  br label %728

459:                                              ; preds = %437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #21
  br label %460

460:                                              ; preds = %459, %24
  %461 = icmp eq i32 %1, 1
  %462 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 11
  br i1 %461, label %465, label %463

463:                                              ; preds = %460
  %464 = load i32, i32* %462, align 8
  br label %479

465:                                              ; preds = %460
  store i32 3, i32* %462, align 8
  %466 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 16
  store i32 1, i32* %466, align 4
  %467 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 44
  %468 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %467, align 8
  %469 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %468, i64 1, i32 10
  %470 = load i32, i32* %469, align 8
  %471 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %468, i64 1, i32 11
  %472 = load i32, i32* %471, align 4
  %473 = zext i32 %472 to i64
  %474 = shl nuw i64 %473, 32
  %475 = zext i32 %470 to i64
  %476 = or i64 %474, %475
  %477 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 12
  %478 = bitcast %"class.blink::IntSize"* %477 to i64*
  store i64 %476, i64* %478, align 8
  br label %479

479:                                              ; preds = %463, %465
  %480 = phi i32 [ %464, %463 ], [ 3, %465 ]
  %481 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %482 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 17
  %483 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 21
  store i32 2, i32* %483, align 8
  %484 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 26
  store i32 0, i32* %484, align 4
  %485 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 25
  store i32 0, i32* %485, align 8
  %486 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 24
  store i32 0, i32* %486, align 4
  %487 = bitcast i32* %482 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 0>, <4 x i32>* %487, align 8
  %488 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 33
  store i8** null, i8*** %488, align 8
  %489 = or i32 %480, 1
  %490 = icmp eq i32 %489, 13
  br i1 %490, label %515, label %491

491:                                              ; preds = %479
  %492 = icmp eq i32 %480, 3
  br i1 %492, label %503, label %493

493:                                              ; preds = %491
  %494 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 1
  %495 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %494, align 8
  %496 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %495, i64 0, i32 2
  %497 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %496, align 8
  %498 = bitcast %struct.jpeg_decompress_struct* %481 to %struct.jpeg_common_struct*
  %499 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 27
  %500 = load i32, i32* %499, align 8
  %501 = shl i32 %500, 2
  %502 = call i8** %497(%struct.jpeg_common_struct* %498, i32 1, i32 %501, i32 1) #21
  br label %515

503:                                              ; preds = %491
  %504 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 44
  %505 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %504, align 8
  %506 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %505, i64 0, i32 7
  %507 = load i32, i32* %506, align 4
  %508 = shl i32 %507, 3
  %509 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 1
  %510 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %509, align 8
  %511 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %510, i64 0, i32 2
  %512 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)** %511, align 8
  %513 = bitcast %struct.jpeg_decompress_struct* %481 to %struct.jpeg_common_struct*
  %514 = call i8** %512(%struct.jpeg_common_struct* %513, i32 1, i32 %508, i32 1) #21
  br label %515

515:                                              ; preds = %479, %493, %503
  %516 = phi i8** [ %502, %493 ], [ %514, %503 ], [ null, %479 ]
  %517 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 11
  store i8** %516, i8*** %517, align 8
  %518 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %481) #21
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %728, label %520

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 15
  %522 = load i32, i32* %521, align 8
  %523 = icmp eq i32 %522, 0
  %524 = select i1 %523, i32 3, i32 2
  store i32 %524, i32* %25, align 8
  br i1 %523, label %525, label %529

525:                                              ; preds = %24, %520
  %526 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %527 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %526, align 8
  %528 = call zeroext i1 @_ZN5blink16JPEGImageDecoder15OutputScanlinesEv(%"class.blink::JPEGImageDecoder"* %527)
  br i1 %528, label %665, label %728

529:                                              ; preds = %520, %24
  %530 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %531 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 39
  %532 = load [64 x i32]*, [64 x i32]** %531, align 8
  %533 = icmp eq [64 x i32]* %532, null
  br i1 %533, label %548, label %534

534:                                              ; preds = %529
  %535 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 9
  %536 = load i32, i32* %535, align 8
  %537 = icmp sgt i32 %536, 0
  br i1 %537, label %538, label %548

538:                                              ; preds = %534
  %539 = sext i32 %536 to i64
  br label %542

540:                                              ; preds = %542
  %541 = icmp eq i64 %547, %539
  br i1 %541, label %548, label %542

542:                                              ; preds = %540, %538
  %543 = phi i64 [ 0, %538 ], [ %547, %540 ]
  %544 = getelementptr inbounds [64 x i32], [64 x i32]* %532, i64 %543, i64 0
  %545 = load i32, i32* %544, align 4
  %546 = icmp eq i32 %545, -1
  %547 = add nuw nsw i64 %543, 1
  br i1 %546, label %551, label %540

548:                                              ; preds = %540, %529, %534
  %549 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 35
  %550 = load i32, i32* %549, align 4
  br label %551

551:                                              ; preds = %542, %548
  %552 = phi i32 [ %550, %548 ], [ 0, %542 ]
  %553 = bitcast %struct.jpeg_decompress_struct* %530 to %"struct.blink::decoder_error_mgr"**
  %554 = load %"struct.blink::decoder_error_mgr"*, %"struct.blink::decoder_error_mgr"** %553, align 8
  %555 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %554, i64 0, i32 1
  %556 = load i32, i32* %555, align 8
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %597

558:                                              ; preds = %551
  %559 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 9
  %560 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 35
  br label %566

561:                                              ; preds = %593
  %562 = load %"struct.blink::decoder_error_mgr"*, %"struct.blink::decoder_error_mgr"** %553, align 8
  %563 = getelementptr inbounds %"struct.blink::decoder_error_mgr", %"struct.blink::decoder_error_mgr"* %562, i64 0, i32 1
  %564 = load i32, i32* %563, align 8
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %597

566:                                              ; preds = %558, %561
  %567 = phi i32 [ %552, %558 ], [ %594, %561 ]
  %568 = call i32 @jpeg_consume_input(%struct.jpeg_decompress_struct* %530) #21
  %569 = add i32 %568, -1
  %570 = icmp ugt i32 %569, 1
  %571 = icmp ne i32 %568, 0
  %572 = and i1 %571, %570
  %573 = icmp ne i32 %567, 0
  %574 = or i1 %573, %572
  br i1 %574, label %593, label %575

575:                                              ; preds = %566
  %576 = load [64 x i32]*, [64 x i32]** %531, align 8
  %577 = icmp eq [64 x i32]* %576, null
  br i1 %577, label %591, label %578

578:                                              ; preds = %575
  %579 = load i32, i32* %559, align 8
  %580 = icmp sgt i32 %579, 0
  br i1 %580, label %581, label %591

581:                                              ; preds = %578
  %582 = sext i32 %579 to i64
  br label %585

583:                                              ; preds = %585
  %584 = icmp eq i64 %590, %582
  br i1 %584, label %591, label %585

585:                                              ; preds = %583, %581
  %586 = phi i64 [ 0, %581 ], [ %590, %583 ]
  %587 = getelementptr inbounds [64 x i32], [64 x i32]* %576, i64 %586, i64 0
  %588 = load i32, i32* %587, align 4
  %589 = icmp eq i32 %588, -1
  %590 = add nuw nsw i64 %586, 1
  br i1 %589, label %593, label %583

591:                                              ; preds = %583, %575, %578
  %592 = load i32, i32* %560, align 4
  br label %593

593:                                              ; preds = %585, %591, %566
  %594 = phi i32 [ %567, %566 ], [ %592, %591 ], [ 0, %585 ]
  %595 = and i32 %568, -3
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %561

597:                                              ; preds = %593, %561, %551
  %598 = phi i32 [ %552, %551 ], [ %594, %561 ], [ %594, %593 ]
  %599 = phi i32 [ 0, %551 ], [ %568, %561 ], [ %568, %593 ]
  %600 = icmp eq i32 %598, 0
  br i1 %600, label %728, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 34
  %603 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 35
  %604 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 37
  %605 = icmp ne i32 %599, 2
  %606 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %607 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 28
  %608 = load i32, i32* %602, align 8
  br label %609

609:                                              ; preds = %663, %601
  %610 = phi i32 [ %608, %601 ], [ %664, %663 ]
  %611 = phi i1 [ true, %601 ], [ %632, %663 ]
  %612 = icmp eq i32 %610, 0
  br i1 %612, label %613, label %630

613:                                              ; preds = %609
  %614 = load i32, i32* %603, align 4
  %615 = load i32, i32* %604, align 4
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %622

617:                                              ; preds = %613
  %618 = icmp sgt i32 %614, %598
  %619 = and i1 %605, %618
  %620 = zext i1 %619 to i32
  %621 = sub i32 %614, %620
  br label %622

622:                                              ; preds = %617, %613
  %623 = phi i32 [ %614, %613 ], [ %621, %617 ]
  %624 = call i32 @jpeg_start_output(%struct.jpeg_decompress_struct* %530, i32 %623) #21
  %625 = icmp eq i32 %624, 0
  %626 = xor i1 %625, true
  %627 = and i1 %611, %626
  br i1 %625, label %728, label %628

628:                                              ; preds = %622
  %629 = load i32, i32* %602, align 8
  br label %630

630:                                              ; preds = %628, %609
  %631 = phi i32 [ %629, %628 ], [ %610, %609 ]
  %632 = phi i1 [ %627, %628 ], [ %611, %609 ]
  %633 = icmp eq i32 %631, 16777215
  br i1 %633, label %634, label %635

634:                                              ; preds = %630
  store i32 0, i32* %602, align 8
  br label %635

635:                                              ; preds = %634, %630
  %636 = load %"class.blink::JPEGImageDecoder"*, %"class.blink::JPEGImageDecoder"** %606, align 8
  %637 = call zeroext i1 @_ZN5blink16JPEGImageDecoder15OutputScanlinesEv(%"class.blink::JPEGImageDecoder"* %636)
  br i1 %637, label %648, label %638

638:                                              ; preds = %635
  %639 = bitcast %"class.blink::JPEGImageDecoder"** %606 to %"class.blink::ImageDecoder"**
  %640 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %639, align 8
  %641 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %640, i64 0, i32 15
  %642 = load i8, i8* %641, align 2, !range !2
  %643 = icmp eq i8 %642, 0
  br i1 %643, label %644, label %728

644:                                              ; preds = %638
  %645 = load i32, i32* %602, align 8
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %647, label %728

647:                                              ; preds = %644
  store i32 16777215, i32* %602, align 8
  br label %728

648:                                              ; preds = %635
  %649 = load i32, i32* %602, align 8
  %650 = load i32, i32* %607, align 4
  %651 = icmp eq i32 %649, %650
  br i1 %651, label %652, label %663

652:                                              ; preds = %648
  %653 = call i32 @jpeg_finish_output(%struct.jpeg_decompress_struct* %530) #21
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %728, label %655

655:                                              ; preds = %652
  %656 = call i32 @jpeg_input_complete(%struct.jpeg_decompress_struct* %530) #21
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %662, label %658

658:                                              ; preds = %655
  %659 = load i32, i32* %603, align 4
  %660 = load i32, i32* %604, align 4
  %661 = icmp eq i32 %659, %660
  br i1 %661, label %665, label %662

662:                                              ; preds = %655, %658
  store i32 0, i32* %602, align 8
  br label %663

663:                                              ; preds = %662, %648
  %664 = phi i32 [ 0, %662 ], [ %649, %648 ]
  br label %609

665:                                              ; preds = %658, %525
  store i32 4, i32* %25, align 8
  br label %666

666:                                              ; preds = %665, %24
  %667 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %667) #21
  %668 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 1
  %669 = bitcast %"class.blink::JPEGImageDecoder"** %668 to %"class.blink::ImageDecoder"**
  %670 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %669, align 8
  %671 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %670, i64 0, i32 12
  %672 = bitcast %"class.blink::IntSize"* %671 to i64*
  %673 = load i64, i64* %672, align 4
  store i64 %673, i64* %14, align 8
  call void @_ZN5blink18BitmapImageMetrics13CountJpegAreaERKNS_7IntSizeE(%"class.blink::IntSize"* nonnull dereferenceable(8) %15) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %667) #21
  %674 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6
  %675 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 10
  %676 = load i32, i32* %675, align 4
  switch i32 %676, label %715 [
    i32 1, label %724
    i32 2, label %677
    i32 4, label %678
    i32 5, label %679
    i32 3, label %680
  ]

677:                                              ; preds = %666
  br label %724

678:                                              ; preds = %666
  br label %724

679:                                              ; preds = %666
  br label %724

680:                                              ; preds = %666
  %681 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 9
  %682 = load i32, i32* %681, align 8
  %683 = icmp eq i32 %682, 3
  br i1 %683, label %684, label %724

684:                                              ; preds = %680
  %685 = getelementptr inbounds %"class.blink::JPEGImageReader", %"class.blink::JPEGImageReader"* %0, i64 0, i32 6, i32 44
  %686 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %685, align 8
  %687 = icmp eq %struct.jpeg_component_info* %686, null
  br i1 %687, label %724, label %688

688:                                              ; preds = %684
  %689 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 1, i32 2
  %690 = load i32, i32* %689, align 8
  %691 = icmp eq i32 %690, 1
  br i1 %691, label %692, label %724

692:                                              ; preds = %688
  %693 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 1, i32 3
  %694 = load i32, i32* %693, align 4
  %695 = icmp eq i32 %694, 1
  br i1 %695, label %696, label %724

696:                                              ; preds = %692
  %697 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 2, i32 2
  %698 = load i32, i32* %697, align 8
  %699 = icmp eq i32 %698, 1
  br i1 %699, label %700, label %724

700:                                              ; preds = %696
  %701 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 2, i32 3
  %702 = load i32, i32* %701, align 4
  %703 = icmp eq i32 %702, 1
  br i1 %703, label %704, label %724

704:                                              ; preds = %700
  %705 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 0, i32 2
  %706 = load i32, i32* %705, align 8
  %707 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %686, i64 0, i32 3
  %708 = load i32, i32* %707, align 4
  switch i32 %708, label %724 [
    i32 1, label %709
    i32 2, label %712
  ]

709:                                              ; preds = %704
  %710 = add i32 %706, -1
  %711 = icmp ult i32 %710, 4
  br i1 %711, label %716, label %724

712:                                              ; preds = %704
  %713 = add i32 %706, -1
  %714 = icmp ult i32 %713, 4
  br i1 %714, label %720, label %724

715:                                              ; preds = %666
  br label %724

716:                                              ; preds = %709
  %717 = sext i32 %710 to i64
  %718 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE, i64 0, i64 %717
  %719 = load i32, i32* %718, align 4
  br label %724

720:                                              ; preds = %712
  %721 = sext i32 %713 to i64
  %722 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5blink15JPEGImageReader6DecodeENS_16JPEGImageDecoder12DecodingModeE.15, i64 0, i64 %721
  %723 = load i32, i32* %722, align 4
  br label %724

724:                                              ; preds = %680, %684, %688, %692, %696, %700, %704, %709, %712, %720, %716, %666, %677, %678, %679, %715
  %725 = phi i32 [ 0, %715 ], [ 4, %679 ], [ 3, %678 ], [ 2, %677 ], [ %676, %666 ], [ %719, %716 ], [ %723, %720 ], [ 11, %712 ], [ 11, %709 ], [ 11, %704 ], [ 11, %700 ], [ 11, %696 ], [ 11, %692 ], [ 11, %688 ], [ 11, %684 ], [ 11, %680 ]
  call void @_ZN5blink18BitmapImageMetrics19CountJpegColorSpaceENS0_14JpegColorSpaceE(i32 %725) #21
  %726 = call i32 @jpeg_finish_decompress(%struct.jpeg_decompress_struct* %674) #21
  %727 = icmp ne i32 %726, 0
  br label %728

728:                                              ; preds = %622, %652, %638, %647, %644, %597, %24, %525, %515, %455, %41, %27, %724, %36, %19
  %729 = phi i1 [ false, %19 ], [ %727, %724 ], [ false, %36 ], [ false, %27 ], [ false, %41 ], [ true, %455 ], [ false, %515 ], [ false, %525 ], [ true, %24 ], [ false, %647 ], [ false, %644 ], [ false, %638 ], [ false, %597 ], [ %627, %622 ], [ false, %652 ]
  ret i1 %729
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16JPEGImageDecoder17FilenameExtensionEv(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #21
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16JPEGImageDecoder11DecodedSizeEv(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JPEGImageDecoder", %"class.blink::JPEGImageDecoder"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  ret i8 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %4 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, i64 5
  %6 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::ImageDecoder"* %0) #21
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder15RepetitionCountEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  ret i32 -2
}

declare zeroext i1 @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #9

declare zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  ret i64 0
}

declare i64 @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #9

declare i64 @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #7 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE(%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*) unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %0) #21
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7, %2
  %11 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #21
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %11, i64 0, i32 1
  store %"class.SkBitmap::Allocator"* %1, %"class.SkBitmap::Allocator"** %12, align 8
  br label %13

13:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16JPEGImageDecoder10DecodeSizeEv(%"class.blink::JPEGImageDecoder"*) unnamed_addr #7 comdat align 2 {
  tail call void @_ZN5blink16JPEGImageDecoder6DecodeENS0_12DecodingModeE(%"class.blink::JPEGImageDecoder"* %0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink12ImageDecoder16DecodeFrameCountEv(%"class.blink::ImageDecoder"*) unnamed_addr #7 comdat align 2 {
  ret i64 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18InitializeNewFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16JPEGImageDecoder6DecodeEm(%"class.blink::JPEGImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  tail call void @_ZN5blink16JPEGImageDecoder6DecodeENS0_12DecodingModeE(%"class.blink::JPEGImageDecoder"* %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj(%"class.blink::ImageDecoder"*, i32) unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #21
  %5 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder17OnInitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #7 comdat align 2 {
  ret i1 false
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #13

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ImageFrame"*) local_unnamed_addr #15 comdat align 2 {
  %3 = bitcast %"class.blink::ImageFrame"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #21
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #16

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #16

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #17

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #9

declare i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"*, i32) local_unnamed_addr #9

declare i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"*, i32) local_unnamed_addr #9

declare i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct*, i8***, i32) local_unnamed_addr #9

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #18

declare i32 @jpeg_read_header(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #9

declare void @jpeg_calc_output_dimensions(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare i32 @read_icc_profile(%struct.jpeg_decompress_struct*, i8**, i32*) local_unnamed_addr #9

declare %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8*, i64) local_unnamed_addr #9

declare void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"*, %"class.blink::ColorProfile"*) local_unnamed_addr #9

declare i32 @jpeg_has_multiple_scans(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare i32 @jpeg_consume_input(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare i32 @jpeg_start_output(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #9

declare i32 @jpeg_finish_output(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare i32 @jpeg_input_complete(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare void @_ZN5blink18BitmapImageMetrics13CountJpegAreaERKNS_7IntSizeE(%"class.blink::IntSize"* dereferenceable(8)) local_unnamed_addr #9

declare void @_ZN5blink18BitmapImageMetrics19CountJpegColorSpaceENS0_14JpegColorSpaceE(i32) local_unnamed_addr #9

declare i32 @jpeg_finish_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI7SkISizeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.34"*, %struct.SkISize* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %struct.SkISize*, %struct.SkISize** %6, align 8
  %8 = icmp ugt %struct.SkISize* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %7, i64 %10
  %12 = icmp ugt %struct.SkISize* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %struct.SkISize* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm(i64 %26) #21
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI7SkISizeEEPKcv, i64 0, i64 0)) #21
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.34"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %struct.SkISize*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %struct.SkISize*, %struct.SkISize** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %struct.SkISize* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %struct.SkISize* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #21
  %47 = bitcast %"class.WTF::Vector.34"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #21
  %51 = bitcast %"class.WTF::Vector.34"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %struct.SkISize*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %struct.SkISize* %1 to i64
  %56 = ptrtoint %struct.SkISize* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.34", %"class.WTF::Vector.34"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %struct.SkISize* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm(i64 %71) #21
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI7SkISizeEEPKcv, i64 0, i64 0)) #21
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.34"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %struct.SkISize*, %struct.SkISize** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %struct.SkISize* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %struct.SkISize* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #21
  %87 = bitcast %"class.WTF::Vector.34"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #21
  %91 = bitcast %"class.WTF::Vector.34"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %struct.SkISize*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %struct.SkISize* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %struct.SkISize* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %struct.SkISize* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %100, i64 %103
  %105 = bitcast %struct.SkISize* %101 to i64*
  %106 = bitcast %struct.SkISize* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI7SkISizeEEmm(i64) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #21
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #21
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #21
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #21
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #21
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #21
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #21
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #21
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #21
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #9

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #9

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #9

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL17ReadExifDirectoryEPhS0_S0_S0_bRNS_20DecodedImageMetaDataEb(i8*, i8*, i8*, i8*, i1 zeroext, %"struct.blink::DecodedImageMetaData"* nocapture dereferenceable(24), i1 zeroext) unnamed_addr #2 {
  %8 = ptrtoint i8* %3 to i64
  %9 = ptrtoint i8* %0 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 2
  br i1 %11, label %517, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  %14 = select i1 %4, i8* %13, i8* %0
  %15 = select i1 %4, i8* %0, i8* %13
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = load i8, i8* %14, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %18, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %517, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = ptrtoint i8* %1 to i64
  %26 = sub i64 %8, %25
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds i8, i8* %3, i64 -16
  %29 = xor i1 %6, true
  %30 = ptrtoint i8* %2 to i64
  %31 = sub i64 %8, %30
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 2, i32 1
  %34 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 2, i32 0
  %35 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.blink::DecodedImageMetaData", %"struct.blink::DecodedImageMetaData"* %5, i64 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %513, %23
  %40 = phi i32 [ 0, %23 ], [ %514, %513 ]
  %41 = phi i8* [ %24, %23 ], [ %515, %513 ]
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %8, %42
  %44 = icmp sgt i64 %43, 11
  br i1 %44, label %45, label %517

45:                                               ; preds = %39
  br i1 %4, label %46, label %77

46:                                               ; preds = %45
  %47 = load i8, i8* %41, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = getelementptr inbounds i8, i8* %41, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %49, %52
  %54 = getelementptr inbounds i8, i8* %41, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = getelementptr inbounds i8, i8* %41, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = or i32 %57, %60
  %62 = getelementptr inbounds i8, i8* %41, i64 4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw i32 %64, 24
  %66 = getelementptr inbounds i8, i8* %41, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 16
  %70 = or i32 %69, %65
  %71 = getelementptr inbounds i8, i8* %41, i64 6
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = or i32 %70, %74
  %76 = getelementptr inbounds i8, i8* %41, i64 7
  br label %108

77:                                               ; preds = %45
  %78 = getelementptr inbounds i8, i8* %41, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw nsw i32 %80, 8
  %82 = load i8, i8* %41, align 1
  %83 = zext i8 %82 to i32
  %84 = or i32 %81, %83
  %85 = getelementptr inbounds i8, i8* %41, i64 2
  %86 = getelementptr inbounds i8, i8* %41, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = shl nuw nsw i32 %88, 8
  %90 = load i8, i8* %85, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %89, %91
  %93 = getelementptr inbounds i8, i8* %41, i64 4
  %94 = getelementptr inbounds i8, i8* %41, i64 7
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw i32 %96, 24
  %98 = getelementptr inbounds i8, i8* %41, i64 6
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %97
  %103 = getelementptr inbounds i8, i8* %41, i64 5
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  %107 = or i32 %102, %106
  br label %108

108:                                              ; preds = %46, %77
  %109 = phi i8* [ %76, %46 ], [ %93, %77 ]
  %110 = phi i32 [ %75, %46 ], [ %107, %77 ]
  %111 = phi i32 [ %61, %46 ], [ %92, %77 ]
  %112 = phi i32 [ %53, %46 ], [ %84, %77 ]
  %113 = load i8, i8* %109, align 1
  %114 = zext i8 %113 to i32
  %115 = or i32 %110, %114
  %116 = getelementptr inbounds i8, i8* %41, i64 8
  %117 = icmp eq i32 %111, 5
  br i1 %117, label %118, label %164

118:                                              ; preds = %108
  br i1 %4, label %119, label %134

119:                                              ; preds = %118
  %120 = load i8, i8* %116, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw i32 %121, 24
  %123 = getelementptr inbounds i8, i8* %41, i64 9
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl nuw nsw i32 %125, 16
  %127 = or i32 %126, %122
  %128 = getelementptr inbounds i8, i8* %41, i64 10
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 8
  %132 = or i32 %127, %131
  %133 = getelementptr inbounds i8, i8* %41, i64 11
  br label %149

134:                                              ; preds = %118
  %135 = getelementptr inbounds i8, i8* %41, i64 11
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl nuw i32 %137, 24
  %139 = getelementptr inbounds i8, i8* %41, i64 10
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 16
  %143 = or i32 %142, %138
  %144 = getelementptr inbounds i8, i8* %41, i64 9
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = shl nuw nsw i32 %146, 8
  %148 = or i32 %143, %147
  br label %149

149:                                              ; preds = %119, %134
  %150 = phi i8* [ %133, %119 ], [ %116, %134 ]
  %151 = phi i32 [ %132, %119 ], [ %148, %134 ]
  %152 = load i8, i8* %150, align 1
  %153 = zext i8 %152 to i32
  %154 = or i32 %151, %153
  %155 = icmp ugt i32 %154, %27
  %156 = zext i32 %154 to i64
  %157 = getelementptr inbounds i8, i8* %1, i64 %156
  %158 = select i1 %155, i8* null, i8* %157
  %159 = icmp eq i8* %158, null
  %160 = icmp ult i8* %158, %41
  %161 = or i1 %159, %160
  %162 = icmp ugt i8* %158, %28
  %163 = or i1 %162, %161
  br i1 %163, label %513, label %164

164:                                              ; preds = %149, %108
  %165 = phi i8* [ %116, %108 ], [ %158, %149 ]
  switch i32 %112, label %513 [
    i32 274, label %166
    i32 296, label %183
    i32 282, label %197
    i32 283, label %281
    i32 40962, label %365
    i32 40963, label %415
    i32 34665, label %465
  ]

166:                                              ; preds = %164
  %167 = icmp eq i32 %111, 3
  %168 = icmp eq i32 %115, 1
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %513

170:                                              ; preds = %166
  %171 = getelementptr inbounds i8, i8* %165, i64 1
  %172 = select i1 %4, i8* %171, i8* %165
  %173 = select i1 %4, i8* %165, i8* %171
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 8
  %177 = load i8, i8* %172, align 1
  %178 = zext i8 %177 to i32
  %179 = or i32 %176, %178
  %180 = add nsw i32 %179, -1
  %181 = icmp ugt i32 %180, 7
  %182 = select i1 %181, i8 1, i8 %177
  store i8 %182, i8* %38, align 4
  br label %513

183:                                              ; preds = %164
  %184 = icmp eq i32 %111, 3
  %185 = icmp eq i32 %115, 1
  %186 = and i1 %184, %185
  br i1 %186, label %187, label %513

187:                                              ; preds = %183
  %188 = getelementptr inbounds i8, i8* %165, i64 1
  %189 = select i1 %4, i8* %188, i8* %165
  %190 = select i1 %4, i8* %165, i8* %188
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = shl nuw nsw i32 %192, 8
  %194 = load i8, i8* %189, align 1
  %195 = zext i8 %194 to i32
  %196 = or i32 %193, %195
  store i32 %196, i32* %37, align 4
  br label %513

197:                                              ; preds = %164
  %198 = icmp eq i32 %115, 1
  %199 = and i1 %117, %198
  br i1 %199, label %200, label %513

200:                                              ; preds = %197
  br i1 %4, label %201, label %234

201:                                              ; preds = %200
  %202 = load i8, i8* %165, align 1
  %203 = zext i8 %202 to i32
  %204 = shl nuw i32 %203, 24
  %205 = getelementptr inbounds i8, i8* %165, i64 1
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 16
  %209 = or i32 %208, %204
  %210 = getelementptr inbounds i8, i8* %165, i64 2
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = shl nuw nsw i32 %212, 8
  %214 = or i32 %209, %213
  %215 = getelementptr inbounds i8, i8* %165, i64 3
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = or i32 %214, %217
  %219 = getelementptr inbounds i8, i8* %165, i64 4
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl nuw i32 %221, 24
  %223 = getelementptr inbounds i8, i8* %165, i64 5
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 16
  %227 = or i32 %226, %222
  %228 = getelementptr inbounds i8, i8* %165, i64 6
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = shl nuw nsw i32 %230, 8
  %232 = or i32 %227, %231
  %233 = getelementptr inbounds i8, i8* %165, i64 7
  br label %267

234:                                              ; preds = %200
  %235 = getelementptr inbounds i8, i8* %165, i64 3
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = shl nuw i32 %237, 24
  %239 = getelementptr inbounds i8, i8* %165, i64 2
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 16
  %243 = or i32 %242, %238
  %244 = getelementptr inbounds i8, i8* %165, i64 1
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl nuw nsw i32 %246, 8
  %248 = or i32 %243, %247
  %249 = load i8, i8* %165, align 1
  %250 = zext i8 %249 to i32
  %251 = or i32 %248, %250
  %252 = getelementptr inbounds i8, i8* %165, i64 4
  %253 = getelementptr inbounds i8, i8* %165, i64 7
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = shl nuw i32 %255, 24
  %257 = getelementptr inbounds i8, i8* %165, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = shl nuw nsw i32 %259, 16
  %261 = or i32 %260, %256
  %262 = getelementptr inbounds i8, i8* %165, i64 5
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = shl nuw nsw i32 %264, 8
  %266 = or i32 %261, %265
  br label %267

267:                                              ; preds = %234, %201
  %268 = phi i8* [ %252, %234 ], [ %233, %201 ]
  %269 = phi i32 [ %266, %234 ], [ %232, %201 ]
  %270 = phi i32 [ %251, %234 ], [ %218, %201 ]
  %271 = load i8, i8* %268, align 1
  %272 = zext i8 %271 to i32
  %273 = or i32 %269, %272
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %279, label %275

275:                                              ; preds = %267
  %276 = uitofp i32 %270 to float
  %277 = uitofp i32 %273 to float
  %278 = fdiv float %276, %277
  br label %279

279:                                              ; preds = %267, %275
  %280 = phi float [ %278, %275 ], [ 0.000000e+00, %267 ]
  store float %280, float* %36, align 4
  br label %513

281:                                              ; preds = %164
  %282 = icmp eq i32 %115, 1
  %283 = and i1 %117, %282
  br i1 %283, label %284, label %513

284:                                              ; preds = %281
  br i1 %4, label %285, label %318

285:                                              ; preds = %284
  %286 = load i8, i8* %165, align 1
  %287 = zext i8 %286 to i32
  %288 = shl nuw i32 %287, 24
  %289 = getelementptr inbounds i8, i8* %165, i64 1
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = shl nuw nsw i32 %291, 16
  %293 = or i32 %292, %288
  %294 = getelementptr inbounds i8, i8* %165, i64 2
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = shl nuw nsw i32 %296, 8
  %298 = or i32 %293, %297
  %299 = getelementptr inbounds i8, i8* %165, i64 3
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = or i32 %298, %301
  %303 = getelementptr inbounds i8, i8* %165, i64 4
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = shl nuw i32 %305, 24
  %307 = getelementptr inbounds i8, i8* %165, i64 5
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = shl nuw nsw i32 %309, 16
  %311 = or i32 %310, %306
  %312 = getelementptr inbounds i8, i8* %165, i64 6
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i32
  %315 = shl nuw nsw i32 %314, 8
  %316 = or i32 %311, %315
  %317 = getelementptr inbounds i8, i8* %165, i64 7
  br label %351

318:                                              ; preds = %284
  %319 = getelementptr inbounds i8, i8* %165, i64 3
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = shl nuw i32 %321, 24
  %323 = getelementptr inbounds i8, i8* %165, i64 2
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = shl nuw nsw i32 %325, 16
  %327 = or i32 %326, %322
  %328 = getelementptr inbounds i8, i8* %165, i64 1
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = shl nuw nsw i32 %330, 8
  %332 = or i32 %327, %331
  %333 = load i8, i8* %165, align 1
  %334 = zext i8 %333 to i32
  %335 = or i32 %332, %334
  %336 = getelementptr inbounds i8, i8* %165, i64 4
  %337 = getelementptr inbounds i8, i8* %165, i64 7
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = shl nuw i32 %339, 24
  %341 = getelementptr inbounds i8, i8* %165, i64 6
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = shl nuw nsw i32 %343, 16
  %345 = or i32 %344, %340
  %346 = getelementptr inbounds i8, i8* %165, i64 5
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = shl nuw nsw i32 %348, 8
  %350 = or i32 %345, %349
  br label %351

351:                                              ; preds = %318, %285
  %352 = phi i8* [ %336, %318 ], [ %317, %285 ]
  %353 = phi i32 [ %350, %318 ], [ %316, %285 ]
  %354 = phi i32 [ %335, %318 ], [ %302, %285 ]
  %355 = load i8, i8* %352, align 1
  %356 = zext i8 %355 to i32
  %357 = or i32 %353, %356
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %363, label %359

359:                                              ; preds = %351
  %360 = uitofp i32 %354 to float
  %361 = uitofp i32 %357 to float
  %362 = fdiv float %360, %361
  br label %363

363:                                              ; preds = %351, %359
  %364 = phi float [ %362, %359 ], [ 0.000000e+00, %351 ]
  store float %364, float* %35, align 4
  br label %513

365:                                              ; preds = %164
  %366 = icmp eq i32 %115, 1
  br i1 %366, label %367, label %513

367:                                              ; preds = %365
  switch i32 %111, label %513 [
    i32 3, label %368
    i32 4, label %378
  ]

368:                                              ; preds = %367
  %369 = getelementptr inbounds i8, i8* %165, i64 1
  %370 = select i1 %4, i8* %369, i8* %165
  %371 = select i1 %4, i8* %165, i8* %369
  %372 = load i8, i8* %371, align 1
  %373 = zext i8 %372 to i32
  %374 = shl nuw nsw i32 %373, 8
  %375 = load i8, i8* %370, align 1
  %376 = zext i8 %375 to i32
  %377 = or i32 %374, %376
  store i32 %377, i32* %34, align 4
  br label %513

378:                                              ; preds = %367
  br i1 %4, label %379, label %394

379:                                              ; preds = %378
  %380 = load i8, i8* %165, align 1
  %381 = zext i8 %380 to i32
  %382 = shl nuw i32 %381, 24
  %383 = getelementptr inbounds i8, i8* %165, i64 1
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = shl nuw nsw i32 %385, 16
  %387 = or i32 %386, %382
  %388 = getelementptr inbounds i8, i8* %165, i64 2
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i32
  %391 = shl nuw nsw i32 %390, 8
  %392 = or i32 %387, %391
  %393 = getelementptr inbounds i8, i8* %165, i64 3
  br label %409

394:                                              ; preds = %378
  %395 = getelementptr inbounds i8, i8* %165, i64 3
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = shl nuw i32 %397, 24
  %399 = getelementptr inbounds i8, i8* %165, i64 2
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = shl nuw nsw i32 %401, 16
  %403 = or i32 %402, %398
  %404 = getelementptr inbounds i8, i8* %165, i64 1
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i32
  %407 = shl nuw nsw i32 %406, 8
  %408 = or i32 %403, %407
  br label %409

409:                                              ; preds = %379, %394
  %410 = phi i8* [ %393, %379 ], [ %165, %394 ]
  %411 = phi i32 [ %392, %379 ], [ %408, %394 ]
  %412 = load i8, i8* %410, align 1
  %413 = zext i8 %412 to i32
  %414 = or i32 %411, %413
  store i32 %414, i32* %34, align 4
  br label %513

415:                                              ; preds = %164
  %416 = icmp eq i32 %115, 1
  br i1 %416, label %417, label %513

417:                                              ; preds = %415
  switch i32 %111, label %513 [
    i32 3, label %418
    i32 4, label %428
  ]

418:                                              ; preds = %417
  %419 = getelementptr inbounds i8, i8* %165, i64 1
  %420 = select i1 %4, i8* %419, i8* %165
  %421 = select i1 %4, i8* %165, i8* %419
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = shl nuw nsw i32 %423, 8
  %425 = load i8, i8* %420, align 1
  %426 = zext i8 %425 to i32
  %427 = or i32 %424, %426
  store i32 %427, i32* %33, align 4
  br label %513

428:                                              ; preds = %417
  br i1 %4, label %429, label %444

429:                                              ; preds = %428
  %430 = load i8, i8* %165, align 1
  %431 = zext i8 %430 to i32
  %432 = shl nuw i32 %431, 24
  %433 = getelementptr inbounds i8, i8* %165, i64 1
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = shl nuw nsw i32 %435, 16
  %437 = or i32 %436, %432
  %438 = getelementptr inbounds i8, i8* %165, i64 2
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = shl nuw nsw i32 %440, 8
  %442 = or i32 %437, %441
  %443 = getelementptr inbounds i8, i8* %165, i64 3
  br label %459

444:                                              ; preds = %428
  %445 = getelementptr inbounds i8, i8* %165, i64 3
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i32
  %448 = shl nuw i32 %447, 24
  %449 = getelementptr inbounds i8, i8* %165, i64 2
  %450 = load i8, i8* %449, align 1
  %451 = zext i8 %450 to i32
  %452 = shl nuw nsw i32 %451, 16
  %453 = or i32 %452, %448
  %454 = getelementptr inbounds i8, i8* %165, i64 1
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i32
  %457 = shl nuw nsw i32 %456, 8
  %458 = or i32 %453, %457
  br label %459

459:                                              ; preds = %429, %444
  %460 = phi i8* [ %443, %429 ], [ %165, %444 ]
  %461 = phi i32 [ %442, %429 ], [ %458, %444 ]
  %462 = load i8, i8* %460, align 1
  %463 = zext i8 %462 to i32
  %464 = or i32 %461, %463
  store i32 %464, i32* %33, align 4
  br label %513

465:                                              ; preds = %164
  %466 = icmp ne i32 %111, 4
  %467 = icmp ne i32 %115, 1
  %468 = or i1 %466, %467
  %469 = or i1 %468, %29
  br i1 %469, label %513, label %470

470:                                              ; preds = %465
  br i1 %4, label %471, label %486

471:                                              ; preds = %470
  %472 = load i8, i8* %165, align 1
  %473 = zext i8 %472 to i32
  %474 = shl nuw i32 %473, 24
  %475 = getelementptr inbounds i8, i8* %165, i64 1
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i32
  %478 = shl nuw nsw i32 %477, 16
  %479 = or i32 %478, %474
  %480 = getelementptr inbounds i8, i8* %165, i64 2
  %481 = load i8, i8* %480, align 1
  %482 = zext i8 %481 to i32
  %483 = shl nuw nsw i32 %482, 8
  %484 = or i32 %479, %483
  %485 = getelementptr inbounds i8, i8* %165, i64 3
  br label %501

486:                                              ; preds = %470
  %487 = getelementptr inbounds i8, i8* %165, i64 3
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  %490 = shl nuw i32 %489, 24
  %491 = getelementptr inbounds i8, i8* %165, i64 2
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = shl nuw nsw i32 %493, 16
  %495 = or i32 %494, %490
  %496 = getelementptr inbounds i8, i8* %165, i64 1
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i32
  %499 = shl nuw nsw i32 %498, 8
  %500 = or i32 %495, %499
  br label %501

501:                                              ; preds = %471, %486
  %502 = phi i8* [ %485, %471 ], [ %165, %486 ]
  %503 = phi i32 [ %484, %471 ], [ %500, %486 ]
  %504 = load i8, i8* %502, align 1
  %505 = zext i8 %504 to i32
  %506 = or i32 %503, %505
  %507 = icmp ugt i32 %506, %32
  %508 = zext i32 %506 to i64
  %509 = getelementptr inbounds i8, i8* %2, i64 %508
  %510 = icmp eq i8* %509, null
  %511 = or i1 %507, %510
  br i1 %511, label %513, label %512

512:                                              ; preds = %501
  tail call fastcc void @_ZN5blinkL17ReadExifDirectoryEPhS0_S0_S0_bRNS_20DecodedImageMetaDataEb(i8* nonnull %509, i8* %1, i8* %2, i8* %3, i1 zeroext %4, %"struct.blink::DecodedImageMetaData"* dereferenceable(24) %5, i1 zeroext false)
  br label %513

513:                                              ; preds = %164, %170, %166, %187, %183, %279, %197, %363, %281, %367, %409, %368, %417, %459, %418, %415, %365, %465, %501, %512, %149
  %514 = add nuw nsw i32 %40, 1
  %515 = getelementptr inbounds i8, i8* %41, i64 12
  %516 = icmp eq i32 %514, %21
  br i1 %516, label %517, label %39

517:                                              ; preds = %39, %513, %12, %7
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #16

declare zeroext i1 @_ZNK5blink12ImageDecoder21FrameIsDecodedAtIndexEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #9

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #21
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #21
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #21
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #21
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #21
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #21
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #21
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #21
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #21
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #9

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #9

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #9

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #13

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #17

declare %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr*) local_unnamed_addr #9

declare void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct*, i32, i64) local_unnamed_addr #9

declare i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct*, i32) #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL15ProgressMonitorEP18jpeg_common_struct(%struct.jpeg_common_struct* nocapture readonly) #7 {
  %2 = bitcast %struct.jpeg_common_struct* %0 to %struct.jpeg_decompress_struct*
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %2, i64 0, i32 35
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 99
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN5blink10error_exitEP18jpeg_common_struct(%struct.jpeg_common_struct* %0)
  unreachable

7:                                                ; preds = %1
  ret void
}

declare void @setup_read_icc_profile(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

declare void @jpeg_save_markers(%struct.jpeg_decompress_struct*, i32, i32) local_unnamed_addr #9

declare void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #9

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { nounwind }
attributes #22 = { builtin nounwind }
attributes #23 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 2001, i32 1}
