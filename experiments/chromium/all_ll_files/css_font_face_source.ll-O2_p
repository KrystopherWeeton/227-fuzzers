; ModuleID = '../../third_party/blink/renderer/core/css/css_font_face_source.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_font_face_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.2 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, float }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %class.scoped_refptr.5 }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.2, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%class.scoped_refptr.5 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.23, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.6" }>
%"class.WTF::RefCounted.6" = type { %"class.base::RefCounted.7" }
%"class.base::RefCounted.7" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.8 }
%union.anon.8 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.19, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.9" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.19 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.5, %class.scoped_refptr.5 }
%class.scoped_refptr.23 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.24", [4 x i8] }>
%"class.WTF::RefCounted.24" = type { %"class.base::RefCounted.25" }
%"class.base::RefCounted.25" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.26", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.26" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"struct.WTF::KeyValuePair.30"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.30" = type { %"struct.blink::FontCacheKey", i32, [4 x i8] }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.31", i32, i32 }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"struct.blink::FontCacheKey" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.37, %class.scoped_refptr.2, %class.scoped_refptr.47, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.53 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.54", [4 x i8] }>
%"class.WTF::RefCounted.54" = type { %"class.base::RefCounted.55" }
%"class.base::RefCounted.55" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.37 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings.38", %"class.WTF::RefCounted.45", [4 x i8] }>
%"class.blink::FontSettings.38" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::FontTagValuePair.42"*, i32, i32 }
%"class.blink::FontTagValuePair.42" = type { i32, i32 }
%"class.WTF::RefCounted.45" = type { %"class.base::RefCounted.46" }
%"class.base::RefCounted.46" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.47 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.48", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.50, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.48" = type { %"class.base::RefCounted.49" }
%"class.base::RefCounted.49" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.50 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.51", [4 x i8] }>
%"class.WTF::RefCounted.51" = type { %"class.base::RefCounted.52" }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.53 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.6", [4 x i8] }>
%"class.blink::FontCustomPlatformData" = type opaque
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.56", i32, [4 x i8], %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.235", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.174", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.92" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.152", %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.168", [4 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154", %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { i64 }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { float }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.177", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.186" }
%"class.WTF::Vector.186" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188" }
%"class.WTF::VectorBufferBase.188" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::VectorBufferBase.203" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.103"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.239" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.234 }
%class.scoped_refptr.234 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__cxx_atomic_impl.237" }
%"struct.std::__1::__cxx_atomic_impl.237" = type { %"struct.std::__1::__cxx_atomic_base_impl.238" }
%"struct.std::__1::__cxx_atomic_base_impl.238" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE20PrependOrMoveToFirstIRS2_EENS6_9AddResultEOT_ = comdat any

$_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE8pop_backEv = comdat any

$_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv = comdat any

$_ZNK5blink17CSSFontFaceSource9IsLoadingEv = comdat any

$_ZNK5blink17CSSFontFaceSource8IsLoadedEv = comdat any

$_ZNK5blink17CSSFontFaceSource7IsValidEv = comdat any

$_ZNK5blink17CSSFontFaceSource6GetURLEv = comdat any

$_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv = comdat any

$_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE = comdat any

$_ZN5blink17CSSFontFaceSource17BeginLoadIfNeededEv = comdat any

$_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE = comdat any

$_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv = comdat any

$_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv = comdat any

$_ZN5blink17CSSFontFaceSource12UpdatePeriodEv = comdat any

$_ZN5blink17CSSFontFaceSource12HadBlankTextEv = comdat any

$_ZN5blink17CSSFontFaceSource14PaintRequestedEv = comdat any

$_ZNK5blink17CSSFontFaceSource5TraceEPNS_7VisitorE = comdat any

$_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_ = comdat any

$_ZNK5blink22FontFaceCreationParamseqERKS0_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_ = comdat any

$_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE = comdat any

$_ZNK5blink22FontFaceCreationParams7GetHashEv = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN5blink22FontFaceCreationParamsaSERKS0_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6insertIRS2_EENS_30VectorBackedLinkedListIteratorIS4_EENS_35VectorBackedLinkedListConstIteratorIS4_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS4_EES6_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERS2_RKjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_IjEEEENS3_16FontCacheKeyHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_jEERS4_RKjEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EENSt3__14pairIPS4_bEERKT0_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPS7_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS4_EE = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EEPS4_RKT0_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5clearEv = comdat any

@_ZTVN5blink17CSSFontFaceSourceE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource7IsValidEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource6GetURLEv to i8*), i8* bitcast (%"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)* @_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource17BeginLoadIfNeededEv to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*, i32)* @_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource12UpdatePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource12HadBlankTextEv to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSource14PaintRequestedEv to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)* @_ZNK5blink17CSSFontFaceSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)* @_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb to i8*)] }, align 8
@__const._ZN5blink17CSSFontFaceSource11GetFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE.key = private unnamed_addr constant <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.2, i8, [7 x i8] }> <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.2 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyE13scoped_refptrINS2_14SimpleFontDataEEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FontCacheKey, scoped_refptr<blink::SimpleFontData> >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyEjEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FontCacheKey, unsigned int>]\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<blink::FontCacheKey, WTF::PartitionAllocator>]\00", align 1

@_ZN5blink17CSSFontFaceSourceD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSFontFaceSource"*), void (%"class.blink::CSSFontFaceSource"*)* @_ZN5blink17CSSFontFaceSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink17CSSFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2
  tail call void @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::LinkedHashSet"* %3) #11
  %4 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %10, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"* nonnull %5, i32 %9) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::LinkedHashSet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %3, align 8
  %5 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %4, null
  br i1 %5, label %73, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %4 to i8*
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %71, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %4, i64 %12
  br label %14

14:                                               ; preds = %65, %11
  %15 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %66, %65 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #11
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 -4
  %27 = bitcast %"class.base::RefCounted"* %26 to %"class.blink::FontTagValuePair"**
  %28 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %27, align 8
  %29 = icmp eq %"class.blink::FontTagValuePair"* %28, null
  %30 = bitcast %"class.blink::FontTagValuePair"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !2

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 -1, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #11
  br label %37

37:                                               ; preds = %36, %25
  %38 = bitcast %"class.base::RefCounted"* %26 to i8*
  tail call void @free(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %19, %14
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %45, %39
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #11
  br label %65

65:                                               ; preds = %48, %61, %64
  %66 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 1
  %67 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %66, %13
  br i1 %67, label %68, label %14

68:                                               ; preds = %65
  store i32 0, i32* %8, align 4
  %69 = bitcast %"class.WTF::VectorBackedLinkedList"* %2 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %6
  %72 = phi i8* [ %70, %68 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #11
  store %"class.WTF::VectorBackedLinkedListNode"* null, %"class.WTF::VectorBackedLinkedListNode"** %3, align 8
  br label %73

73:                                               ; preds = %1, %71
  %74 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %74, align 8
  %76 = icmp eq %"struct.WTF::KeyValuePair.30"* %75, null
  br i1 %76, label %147, label %77, !prof !2

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %145, label %81

81:                                               ; preds = %77
  %82 = zext i32 %79 to i64
  br label %83

83:                                               ; preds = %142, %81
  %84 = phi i64 [ 0, %81 ], [ %143, %142 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %75, i64 %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %75, i64 %84, i32 0, i32 3
  %90 = load float, float* %89, align 8
  %91 = fcmp oeq float %90, 0x47EFFFFFE0000000
  br i1 %91, label %142, label %92

92:                                               ; preds = %88, %83
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %75, i64 %84, i32 0, i32 5, i32 0
  %94 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %93, align 8
  %95 = icmp eq %"class.blink::FontVariationSettings"* %94, null
  br i1 %95, label %116, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %94, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #11
  %99 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %116

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 -4
  %104 = bitcast %"class.base::RefCounted"* %103 to %"class.blink::FontTagValuePair"**
  %105 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %104, align 8
  %106 = icmp eq %"class.blink::FontTagValuePair"* %105, null
  %107 = bitcast %"class.blink::FontTagValuePair"* %105 to i8*
  br i1 %106, label %114, label %108, !prof !2

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 -1, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %113, label %112, !prof !3

112:                                              ; preds = %108
  store i32 0, i32* %109, align 4
  br label %113

113:                                              ; preds = %112, %108
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %107) #11
  br label %114

114:                                              ; preds = %113, %102
  %115 = bitcast %"class.base::RefCounted"* %103 to i8*
  tail call void @free(i8* %115) #11
  br label %116

116:                                              ; preds = %114, %96, %92
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %75, i64 %84, i32 0, i32 0, i32 2
  %118 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %122, %116
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %75, i64 %84, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %142

142:                                              ; preds = %141, %138, %125, %88
  %143 = add nuw nsw i64 %84, 1
  %144 = icmp eq i64 %143, %82
  br i1 %144, label %145, label %83

145:                                              ; preds = %142, %77
  %146 = bitcast %"struct.WTF::KeyValuePair.30"* %75 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %146) #11
  store %"struct.WTF::KeyValuePair.30"* null, %"struct.WTF::KeyValuePair.30"** %74, align 8
  br label %147

147:                                              ; preds = %73, %145
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink17CSSFontFaceSourceD0Ev(%"class.blink::CSSFontFaceSource"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink17CSSFontFaceSource11GetFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::FontCacheKey", align 8
  %5 = alloca %"class.blink::FontFaceCreationParams", align 8
  %6 = alloca %"struct.blink::FontSelectionRequest", align 2
  %7 = alloca i8*, align 8
  %8 = bitcast %"class.blink::CSSFontFaceSource"* %0 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %9 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %9, i64 5
  %11 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::CSSFontFaceSource"* %0) #11
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::CSSFontFaceSource"* %0 to void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)***
  %15 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)**, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %15, i64 18
  %17 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)** %16, align 8
  tail call void %17(%"class.blink::CSSFontFaceSource"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* null, i1 zeroext false) #11
  br label %158

18:                                               ; preds = %3
  %19 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %8, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %19, i64 2
  %21 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::CSSFontFaceSource"* %0) #11
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::CSSFontFaceSource"* %0 to %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)***
  %25 = load %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)**, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)** %25, i64 17
  %27 = load %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)** %26, align 8
  %28 = tail call %"class.blink::SimpleFontData"* %27(%"class.blink::CSSFontFaceSource"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %2) #11
  %29 = ptrtoint %"class.blink::SimpleFontData"* %28 to i64
  br label %158

30:                                               ; preds = %18
  %31 = bitcast %"struct.blink::FontCacheKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %31) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast (<{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.2, i8, [7 x i8] }>* @__const._ZN5blink17CSSFontFaceSource11GetFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE.key to i8*), i64 80, i1 false)
  %32 = bitcast %"class.blink::FontFaceCreationParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 0
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1
  %35 = bitcast %"class.WTF::AtomicString"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 40, i1 false) #11
  %36 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %36) #11
  %37 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %37, i8 0, i64 6, i1 false)
  call void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* nonnull sret %4, %"class.blink::FontDescription"* %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %5, i1 zeroext false, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %36) #11
  %38 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %43, %30
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %63

63:                                               ; preds = %46, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  %64 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  store i8* null, i8** %7, align 8
  %65 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0
  %66 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %65, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %4, i8** nonnull dereferenceable(8) %7) #11
  %67 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %66, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 1
  %69 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %68, i64 0, i32 0
  %70 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %69, align 8
  %71 = icmp eq %"class.blink::SimpleFontData"* %70, null
  br i1 %71, label %72, label %100

72:                                               ; preds = %63
  %73 = bitcast %"class.blink::CSSFontFaceSource"* %0 to %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)***
  %74 = load %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)**, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)** %74, i64 17
  %76 = load %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)*, %"class.blink::SimpleFontData"* (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)** %75, align 8
  %77 = call %"class.blink::SimpleFontData"* %76(%"class.blink::CSSFontFaceSource"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %2) #11
  %78 = ptrtoint %"class.blink::SimpleFontData"* %77 to i64
  %79 = bitcast %class.scoped_refptr.5* %68 to i64*
  %80 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %69, align 8
  store i64 %78, i64* %79, align 8
  %81 = icmp eq %"class.blink::SimpleFontData"* %80, null
  br i1 %81, label %97, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %80, i64 0, i32 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %83, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #11
  %85 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %83, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %83, i64 -2
  %90 = bitcast %"class.base::RefCounted.7"* %89 to %"class.blink::FontData"*
  %91 = bitcast %"class.base::RefCounted.7"* %89 to void (%"class.blink::FontData"*)***
  %92 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %92, i64 1
  %94 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %93, align 8
  call void %94(%"class.blink::FontData"* nonnull %90) #11
  br label %95

95:                                               ; preds = %82, %88
  %96 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %69, align 8
  br label %97

97:                                               ; preds = %95, %72
  %98 = phi %"class.blink::SimpleFontData"* [ %96, %95 ], [ %77, %72 ]
  %99 = icmp eq %"class.blink::SimpleFontData"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %63, %97
  %101 = phi %"class.blink::SimpleFontData"* [ %98, %97 ], [ %70, %63 ]
  %102 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %101, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %102) #11
  br label %103

103:                                              ; preds = %97, %100
  %104 = phi %"class.blink::SimpleFontData"* [ null, %97 ], [ %101, %100 ]
  %105 = ptrtoint %"class.blink::SimpleFontData"* %104 to i64
  %106 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2
  %107 = call { %"struct.blink::FontCacheKey"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE20PrependOrMoveToFirstIRS2_EENS6_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %106, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %4)
  call void @_ZN5blink17CSSFontFaceSource19PruneOldestIfNeededEv(%"class.blink::CSSFontFaceSource"* %0)
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 5, i32 0
  %109 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %108, align 8
  %110 = icmp eq %"class.blink::FontVariationSettings"* %109, null
  br i1 %110, label %131, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %109, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #11
  %114 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 -4
  %119 = bitcast %"class.base::RefCounted"* %118 to %"class.blink::FontTagValuePair"**
  %120 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %119, align 8
  %121 = icmp eq %"class.blink::FontTagValuePair"* %120, null
  %122 = bitcast %"class.blink::FontTagValuePair"* %120 to i8*
  br i1 %121, label %129, label %123, !prof !2

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 -1, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %128, label %127, !prof !3

127:                                              ; preds = %123
  store i32 0, i32* %124, align 4
  br label %128

128:                                              ; preds = %127, %123
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %122) #11
  br label %129

129:                                              ; preds = %128, %117
  %130 = bitcast %"class.base::RefCounted"* %118 to i8*
  call void @free(i8* %130) #11
  br label %131

131:                                              ; preds = %129, %111, %103
  %132 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 0, i32 2
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %137, %131
  %141 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #11
  br label %157

157:                                              ; preds = %140, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %31) #11
  br label %158

158:                                              ; preds = %157, %23, %13
  %159 = phi i64 [ %29, %23 ], [ %105, %157 ], [ 0, %13 ]
  %160 = inttoptr i64 %159 to %"class.blink::SimpleFontData"*
  ret %"class.blink::SimpleFontData"* %160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* sret, %"class.blink::FontDescription"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48), i1 zeroext, %"struct.blink::FontSelectionRequest"* dereferenceable(6)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.blink::FontCacheKey"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE20PrependOrMoveToFirstIRS2_EENS6_9AddResultEOT_(%"class.WTF::LinkedHashSet"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %4, i32 0) #11, !noalias !4
  %6 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !noalias !4
  %8 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %4, i32 %7) #11, !noalias !4
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4, !noalias !7
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %12, align 8, !noalias !7
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8, !noalias !7
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  %19 = or i1 %11, %18
  br i1 %19, label %35, label %20

20:                                               ; preds = %2, %32
  %21 = phi %"struct.WTF::KeyValuePair.30"* [ %33, %32 ], [ %13, %2 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %21, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %22) #11, !noalias !7
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %21, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8, !noalias !7
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %21, i64 0, i32 0, i32 3
  %30 = load float, float* %29, align 8, !noalias !7
  %31 = fcmp oeq float %30, 0x47EFFFFFE0000000
  br i1 %31, label %32, label %35

32:                                               ; preds = %28, %20
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %21, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.30"* %33, %17
  br i1 %34, label %35, label %20

35:                                               ; preds = %24, %28, %32, %2
  %36 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %37 = tail call { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERS2_RKjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_(%"class.WTF::HashTable.27"* %36, %"struct.blink::FontCacheKey"* dereferenceable(80) %1, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %38 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %37, 0
  %39 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %37, 1
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6insertIRS2_EENS_30VectorBackedLinkedListIteratorIS4_EENS_35VectorBackedLinkedListConstIteratorIS4_EEOT_(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %8, %"class.WTF::VectorBackedLinkedList"* %3, %"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %44 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, 0
  %45 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, 1
  %46 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %45, i64 0, i32 0
  %48 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %47, i32 0) #11
  %49 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %48 to i64
  %50 = sub i64 %46, %49
  %51 = sdiv exact i64 %50, 88
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 0, i32 1
  store i32 %52, i32* %53, align 8
  br label %60

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %4, i32 %56) #11
  %58 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS4_EES6_(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %57, %"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %8, %"class.WTF::VectorBackedLinkedList"* %3) #11
  %59 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %58, 0
  br label %60

60:                                               ; preds = %42, %54
  %61 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %44, %42 ], [ %59, %54 ]
  %62 = phi i8 [ 1, %42 ], [ 0, %54 ]
  %63 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %61, i64 0, i32 2
  %64 = insertvalue { %"struct.blink::FontCacheKey"*, i8 } undef, %"struct.blink::FontCacheKey"* %63, 0
  %65 = insertvalue { %"struct.blink::FontCacheKey"*, i8 } %64, i8 %62, 1
  ret { %"struct.blink::FontCacheKey"*, i8 } %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSFontFaceSource19PruneOldestIfNeededEv(%"class.blink::CSSFontFaceSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2, i32 1, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, 1024
  br i1 %5, label %6, label %59

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2, i32 1, i32 0
  %8 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %7, i32 0) #11
  %9 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %7, i32 %10) #11
  %12 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %11, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0
  %15 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPS7_RKT0_(%"class.WTF::HashTable"* %14, %"struct.blink::FontCacheKey"* dereferenceable(80) %12) #11
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %21
  %23 = select i1 %16, %"struct.WTF::KeyValuePair"* %22, %"struct.WTF::KeyValuePair"* %15
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %22
  br i1 %24, label %25, label %26

25:                                               ; preds = %6
  tail call void @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE8pop_backEv(%"class.WTF::LinkedHashSet"* %2)
  br label %59

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 1, i32 0
  %28 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %27, align 8
  %29 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %30 = load i32, i32* %19, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %31
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, %23
  br i1 %33, label %35, label %34

34:                                               ; preds = %26
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"* %14, %"struct.WTF::KeyValuePair"* %23) #11
  br label %35

35:                                               ; preds = %26, %34
  tail call void @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE8pop_backEv(%"class.WTF::LinkedHashSet"* %2)
  %36 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %36, label %59, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %28, i64 0, i32 11, i32 0
  %39 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %38, align 8
  %40 = icmp eq %"class.blink::CustomFontData"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::CustomFontData"* %39 to void (%"class.blink::CustomFontData"*)***
  %43 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %43, i64 6
  %45 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %44, align 8
  tail call void %45(%"class.blink::CustomFontData"* nonnull %39) #11
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %28, i64 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %47, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #11
  %49 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %47, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %47, i64 -2
  %54 = bitcast %"class.base::RefCounted.7"* %53 to %"class.blink::FontData"*
  %55 = bitcast %"class.base::RefCounted.7"* %53 to void (%"class.blink::FontData"*)***
  %56 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %56, i64 1
  %58 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %57, align 8
  tail call void %58(%"class.blink::FontData"* nonnull %54) #11
  br label %59

59:                                               ; preds = %35, %25, %52, %46, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE8pop_backEv(%"class.WTF::LinkedHashSet"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %4 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %3, i32 0) #11, !noalias !10
  %5 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4, !noalias !13
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %8, align 8, !noalias !13
  %10 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !noalias !13
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  %15 = or i1 %7, %14
  br i1 %15, label %31, label %16

16:                                               ; preds = %1, %28
  %17 = phi %"struct.WTF::KeyValuePair.30"* [ %29, %28 ], [ %9, %1 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %17, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %18) #11, !noalias !13
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %17, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8, !noalias !13
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %17, i64 0, i32 0, i32 3
  %26 = load float, float* %25, align 8, !noalias !13
  %27 = fcmp oeq float %26, 0x47EFFFFFE0000000
  br i1 %27, label %28, label %31

28:                                               ; preds = %24, %16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %17, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.30"* %29, %13
  br i1 %30, label %31, label %16

31:                                               ; preds = %20, %24, %28, %1
  %32 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %4, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %3, i32 %33) #11
  %35 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %3, i32 0) #11, !noalias !16
  %36 = load i32, i32* %5, align 4, !noalias !19
  %37 = icmp eq i32 %36, 0
  %38 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %8, align 8, !noalias !19
  %39 = load i32, i32* %10, align 8, !noalias !19
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %40
  %42 = icmp eq i32 %39, 0
  %43 = or i1 %37, %42
  br i1 %43, label %59, label %44

44:                                               ; preds = %31, %56
  %45 = phi %"struct.WTF::KeyValuePair.30"* [ %57, %56 ], [ %38, %31 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %45, i64 0, i32 0
  %47 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %46) #11, !noalias !19
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %45, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8, !noalias !19
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %59

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %45, i64 0, i32 0, i32 3
  %54 = load float, float* %53, align 8, !noalias !19
  %55 = fcmp oeq float %54, 0x47EFFFFFE0000000
  br i1 %55, label %56, label %59

56:                                               ; preds = %52, %44
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %45, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair.30"* %57, %41
  br i1 %58, label %59, label %44

59:                                               ; preds = %56, %52, %48, %31
  %60 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %34, %35
  br i1 %60, label %75, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 2
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %64 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EEPS4_RKT0_(%"class.WTF::HashTable.27"* %63, %"struct.blink::FontCacheKey"* dereferenceable(80) %62) #11
  %65 = icmp eq %"struct.WTF::KeyValuePair.30"* %64, null
  %66 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %8, align 8
  %67 = load i32, i32* %10, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %66, i64 %68
  %70 = select i1 %65, %"struct.WTF::KeyValuePair.30"* %69, %"struct.WTF::KeyValuePair.30"* %64
  %71 = icmp eq %"struct.WTF::KeyValuePair.30"* %69, %70
  br i1 %71, label %73, label %72

72:                                               ; preds = %61
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.27"* %63, %"struct.WTF::KeyValuePair.30"* %70) #11
  br label %73

73:                                               ; preds = %72, %61
  %74 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS4_EE(%"class.WTF::VectorBackedLinkedList"* %2, %"class.WTF::VectorBackedLinkedListNode"* %34, %"class.WTF::VectorBackedLinkedList"* %2) #11
  br label %75

75:                                               ; preds = %59, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %83, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %6, %26
  %15 = phi %"struct.WTF::KeyValuePair"* [ %27, %26 ], [ %8, %6 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %16) #11
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0, i32 3
  %24 = load float, float* %23, align 8
  %25 = fcmp oeq float %24, 0x47EFFFFFE0000000
  br i1 %25, label %26, label %29

26:                                               ; preds = %22, %14
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %12
  br i1 %28, label %29, label %14

29:                                               ; preds = %26, %22, %18
  %30 = phi %"struct.WTF::KeyValuePair"* [ %15, %18 ], [ %15, %22 ], [ %12, %26 ]
  %31 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %32 = load i32, i32* %9, align 8
  %33 = zext i32 %32 to i64
  br label %34

34:                                               ; preds = %29, %6
  %35 = phi i64 [ 0, %6 ], [ %33, %29 ]
  %36 = phi %"struct.WTF::KeyValuePair"* [ %8, %6 ], [ %31, %29 ]
  %37 = phi %"struct.WTF::KeyValuePair"* [ %8, %6 ], [ %30, %29 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %35
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %37, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %80, %34
  %41 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.27"* %41) #11
  %42 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5clearEv(%"class.WTF::VectorBackedLinkedList"* %42) #11
  %43 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, null
  br i1 %44, label %83, label %45

45:                                               ; preds = %40
  %46 = load i32, i32* %9, align 8
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"* nonnull %43, i32 %46) #11
  %47 = bitcast %"class.WTF::HashMap"* %2 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %3, align 4
  br label %83

48:                                               ; preds = %34, %80
  %49 = phi %"struct.WTF::KeyValuePair"* [ %81, %80 ], [ %37, %34 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1, i32 0
  %51 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %50, align 8
  %52 = icmp eq %"class.blink::SimpleFontData"* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %51, i64 0, i32 11, i32 0
  %55 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %54, align 8
  %56 = icmp eq %"class.blink::CustomFontData"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.blink::CustomFontData"* %55 to void (%"class.blink::CustomFontData"*)***
  %59 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %59, i64 6
  %61 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %60, align 8
  tail call void %61(%"class.blink::CustomFontData"* nonnull %55) #11
  br label %62

62:                                               ; preds = %53, %48, %57
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, %12
  br i1 %64, label %80, label %65

65:                                               ; preds = %62, %77
  %66 = phi %"struct.WTF::KeyValuePair"* [ %78, %77 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %67) #11
  br i1 %68, label %77, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0, i32 3
  %75 = load float, float* %74, align 8
  %76 = fcmp oeq float %75, 0x47EFFFFFE0000000
  br i1 %76, label %77, label %80

77:                                               ; preds = %73, %65
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %78, %12
  br i1 %79, label %80, label %65

80:                                               ; preds = %69, %73, %77, %62
  %81 = phi %"struct.WTF::KeyValuePair"* [ %12, %62 ], [ %66, %69 ], [ %66, %73 ], [ %12, %77 ]
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, %38
  br i1 %82, label %40, label %48

83:                                               ; preds = %45, %40, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource9IsLoadingEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource8IsLoadedEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource7IsValidEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink17CSSFontFaceSource6GetURLEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FontCustomPlatformData"* @_ZNK5blink17CSSFontFaceSource21GetCustomPlaftormDataEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FontCustomPlatformData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource17BeginLoadIfNeededEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFaceSource"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource15IsInBlockPeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource17IsInFailurePeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17CSSFontFaceSource12UpdatePeriodEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17CSSFontFaceSource12HadBlankTextEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource14PaintRequestedEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17CSSFontFaceSource5TraceEPNS_7VisitorE(%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %84, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  ret void

8:                                                ; preds = %84, %4
  %9 = phi i64 [ 0, %4 ], [ %85, %84 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 3
  %14 = load float, float* %13, align 8
  %15 = fcmp oeq float %14, 0x47EFFFFFE0000000
  %16 = and i1 %12, %15
  br i1 %16, label %84, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0
  %19 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %18, align 8
  %20 = icmp eq %"class.blink::SimpleFontData"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %19, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %22, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  %24 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %22, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %22, i64 -2
  %29 = bitcast %"class.base::RefCounted.7"* %28 to %"class.blink::FontData"*
  %30 = bitcast %"class.base::RefCounted.7"* %28 to void (%"class.blink::FontData"*)***
  %31 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %31, i64 1
  %33 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %32, align 8
  tail call void %33(%"class.blink::FontData"* nonnull %29) #11
  br label %34

34:                                               ; preds = %17, %21, %27
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 5, i32 0
  %36 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %35, align 8
  %37 = icmp eq %"class.blink::FontVariationSettings"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %39, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #11
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %39, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %39, i64 -4
  %46 = bitcast %"class.base::RefCounted"* %45 to %"class.blink::FontTagValuePair"**
  %47 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %46, align 8
  %48 = icmp eq %"class.blink::FontTagValuePair"* %47, null
  %49 = bitcast %"class.blink::FontTagValuePair"* %47 to i8*
  br i1 %48, label %56, label %50, !prof !2

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %39, i64 -1, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #11
  br label %56

56:                                               ; preds = %55, %44
  %57 = bitcast %"class.base::RefCounted"* %45 to i8*
  tail call void @free(i8* %57) #11
  br label %58

58:                                               ; preds = %56, %38, %34
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 0, i32 2
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %64, %58
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #11
  br label %84

84:                                               ; preds = %83, %80, %67, %8
  %85 = add nuw nsw i64 %9, 1
  %86 = icmp eq i64 %85, %5
  br i1 %86, label %6, label %8
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %22) #11
  br i1 %23, label %151, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %31 = xor i32 %18, -1
  %32 = lshr i32 %18, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %24, %116
  %45 = phi %"struct.WTF::KeyValuePair"* [ %21, %24 ], [ %127, %116 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ null, %24 ], [ %122, %116 ]
  %47 = phi i64 [ %20, %24 ], [ %126, %116 ]
  %48 = phi i64 [ 0, %24 ], [ %124, %116 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %25, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %26) #11
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %27, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %28, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %29, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !22
  %114 = load i8, i8* %30, align 8, !range !22
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %226, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 3
  %119 = load float, float* %118, align 8
  %120 = fcmp oeq float %119, 0x47EFFFFFE0000000
  %121 = and i1 %117, %120
  %122 = select i1 %121, %"struct.WTF::KeyValuePair"* %45, %"struct.WTF::KeyValuePair"* %46
  %123 = icmp eq i64 %48, 0
  %124 = select i1 %123, i64 %43, i64 %48
  %125 = add i64 %124, %47
  %126 = and i64 %125, %17
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %126
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 0
  %129 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %128) #11
  br i1 %129, label %130, label %44

130:                                              ; preds = %116
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %122, null
  br i1 %131, label %151, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %133)
  %134 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %134)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 20, i1 false), !alias.scope !23, !noalias !26
  %135 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* align 8 %135, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %134)
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 1
  %139 = bitcast i32* %138 to i8*
  %140 = bitcast %"class.WTF::AtomicString"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* nonnull align 8 %133, i64 12, i1 false) #11
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 5
  %142 = bitcast %class.scoped_refptr.2* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 6
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 1, i32 0
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %144, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %133)
  %145 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, 2147483647
  %148 = and i32 %147, 2147483647
  %149 = and i32 %146, -2147483648
  %150 = or i32 %148, %149
  store i32 %150, i32* %145, align 8
  br label %151

151:                                              ; preds = %12, %130, %132
  %152 = phi %"struct.WTF::KeyValuePair"* [ %122, %132 ], [ %127, %130 ], [ %21, %12 ]
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %155 = tail call dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"* %153, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %154) #11
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 0, i32 1
  %157 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %158 = bitcast i32* %156 to i8*
  %159 = bitcast i32* %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 12, i1 false) #11
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 0, i32 5
  %161 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %162 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %161, align 8
  %163 = icmp eq %"class.blink::FontVariationSettings"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %151
  %165 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %162, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #11
  br label %166

166:                                              ; preds = %164, %151
  %167 = ptrtoint %"class.blink::FontVariationSettings"* %162 to i64
  %168 = bitcast %class.scoped_refptr.2* %160 to i64*
  %169 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %160, i64 0, i32 0
  %170 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %169, align 8
  store i64 %167, i64* %168, align 8
  %171 = icmp eq %"class.blink::FontVariationSettings"* %170, null
  br i1 %171, label %192, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %170, i64 0, i32 1, i32 0
  %174 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %173, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %174) #11
  %175 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %173, i64 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %192

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %173, i64 -4
  %180 = bitcast %"class.base::RefCounted"* %179 to %"class.blink::FontTagValuePair"**
  %181 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %180, align 8
  %182 = icmp eq %"class.blink::FontTagValuePair"* %181, null
  %183 = bitcast %"class.blink::FontTagValuePair"* %181 to i8*
  br i1 %182, label %190, label %184, !prof !2

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %173, i64 -1, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %189, label %188, !prof !3

188:                                              ; preds = %184
  store i32 0, i32* %185, align 4
  br label %189

189:                                              ; preds = %188, %184
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %183) #11
  br label %190

190:                                              ; preds = %189, %178
  %191 = bitcast %"class.base::RefCounted"* %179 to i8*
  tail call void @free(i8* %191) #11
  br label %192

192:                                              ; preds = %166, %172, %190
  %193 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %194 = load i8, i8* %193, align 8, !range !22
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 0, i32 6
  store i8 %194, i8* %195, align 8
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 1
  %197 = bitcast %class.scoped_refptr.5* %196 to i64*
  %198 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %196, i64 0, i32 0
  %199 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %198, align 8
  store i64 0, i64* %197, align 8
  %200 = icmp eq %"class.blink::SimpleFontData"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %199, i64 0, i32 0, i32 1, i32 0
  %203 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %202, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %203) #11
  %204 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %202, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %214

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %202, i64 -2
  %209 = bitcast %"class.base::RefCounted.7"* %208 to %"class.blink::FontData"*
  %210 = bitcast %"class.base::RefCounted.7"* %208 to void (%"class.blink::FontData"*)***
  %211 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %211, i64 1
  %213 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %212, align 8
  tail call void %213(%"class.blink::FontData"* nonnull %209) #11
  br label %214

214:                                              ; preds = %192, %201, %207
  %215 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %215, align 4
  %218 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = add i32 %219, %217
  %221 = shl i32 %220, 1
  %222 = load i32, i32* %14, align 8
  %223 = icmp ult i32 %221, %222
  br i1 %223, label %226, label %224

224:                                              ; preds = %214
  %225 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %152)
  br label %226

226:                                              ; preds = %111, %214, %224
  %227 = phi i8 [ 1, %214 ], [ 1, %224 ], [ 0, %111 ]
  %228 = phi %"struct.WTF::KeyValuePair"* [ %152, %214 ], [ %225, %224 ], [ %45, %111 ]
  %229 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %228, 0
  %230 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %229, i8 %227, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %230
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #11
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %24, i8* %25) #11
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #11
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %33

33:                                               ; preds = %11, %2, %32
  %34 = phi i32 [ %15, %32 ], [ 8, %2 ], [ %9, %11 ]
  %35 = zext i32 %34 to i64
  %36 = mul nuw nsw i64 %35, 88
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyE13scoped_refptrINS2_14SimpleFontDataEEEEEEPKcv, i64 0, i64 0)) #11
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair"*
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %42 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  %43 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi i64 [ 0, %40 ], [ %55, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 20, i1 false), !alias.scope !29, !noalias !32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43)
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 0, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 1
  %49 = bitcast i32* %48 to i8*
  %50 = bitcast %"class.WTF::AtomicString"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %41, i64 12, i1 false) #11
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 5
  %52 = bitcast %class.scoped_refptr.2* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 6
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 1, i32 0
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41)
  %55 = add nuw nsw i64 %45, 1
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %57, label %44

57:                                               ; preds = %44, %33
  %58 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %38, i32 %34, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %58
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %36

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %22

19:                                               ; preds = %59
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %60, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %61, %19 ]
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"* nonnull %31, i32 %26) #11
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %32

32:                                               ; preds = %22, %30
  %33 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -2147483648
  store i32 %35, i32* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %25

36:                                               ; preds = %4, %59
  %37 = phi %"struct.WTF::KeyValuePair"* [ %60, %59 ], [ null, %4 ]
  %38 = phi i32 [ %61, %59 ], [ 0, %4 ]
  %39 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %40, i32 0
  %42 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %41) #11
  br i1 %42, label %59, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %40, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %40, i32 0, i32 3
  %49 = load float, float* %48, align 8
  %50 = fcmp oeq float %49, 0x47EFFFFFE0000000
  br i1 %50, label %59, label %51

51:                                               ; preds = %43, %47
  %52 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %40
  %54 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(88) %53)
  %55 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %40
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %56, %3
  %58 = select i1 %57, %"struct.WTF::KeyValuePair"* %54, %"struct.WTF::KeyValuePair"* %37
  br label %59

59:                                               ; preds = %36, %47, %51
  %60 = phi %"struct.WTF::KeyValuePair"* [ %37, %47 ], [ %58, %51 ], [ %37, %36 ]
  %61 = add i32 %38, 1
  %62 = load i32, i32* %12, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %19, label %36
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(88)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_(%"class.WTF::HashTable"* %0, %"struct.blink::FontCacheKey"* dereferenceable(80) %3) #11
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0
  %7 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %6, align 8
  %8 = icmp eq %"class.blink::SimpleFontData"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %7, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %10, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #11
  %12 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %10, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %10, i64 -2
  %17 = bitcast %"class.base::RefCounted.7"* %16 to %"class.blink::FontData"*
  %18 = bitcast %"class.base::RefCounted.7"* %16 to void (%"class.blink::FontData"*)***
  %19 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %19, i64 1
  %21 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %20, align 8
  tail call void %21(%"class.blink::FontData"* nonnull %17) #11
  br label %22

22:                                               ; preds = %2, %9, %15
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %23, align 8
  %25 = icmp eq %"class.blink::FontVariationSettings"* %24, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %24, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #11
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -4
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.blink::FontTagValuePair"**
  %35 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %34, align 8
  %36 = icmp eq %"class.blink::FontTagValuePair"* %35, null
  %37 = bitcast %"class.blink::FontTagValuePair"* %35 to i8*
  br i1 %36, label %44, label %38, !prof !2

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -1, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %38
  store i32 0, i32* %39, align 4
  br label %43

43:                                               ; preds = %42, %38
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #11
  br label %44

44:                                               ; preds = %43, %32
  %45 = bitcast %"class.base::RefCounted"* %33 to i8*
  tail call void @free(i8* %45) #11
  br label %46

46:                                               ; preds = %44, %26, %22
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %46
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %55, %68, %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::AtomicString"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.WTF::AtomicString"* %76 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 3
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 3
  %87 = bitcast i32* %86 to i64*
  %88 = bitcast i32* %85 to i64*
  %89 = load i64, i64* %87, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  %92 = bitcast i32* %90 to i8*
  %93 = bitcast i32* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 12, i1 false) #11
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 5
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 5
  %96 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %95, i64 0, i32 0
  %97 = bitcast %class.scoped_refptr.2* %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %class.scoped_refptr.2* %94 to i64*
  store i64 %98, i64* %99, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %96, align 8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 6
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 6
  %102 = load i8, i8* %101, align 8, !range !22
  store i8 %102, i8* %100, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %105 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.5* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.5* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %105, align 8
  ret %"struct.WTF::KeyValuePair"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.blink::FontCacheKey", align 8
  %3 = bitcast %"struct.blink::FontCacheKey"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8, !alias.scope !35
  %5 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %6, align 8, !alias.scope !35
  %7 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 6
  store i8 0, i8* %7, align 8, !alias.scope !35
  %8 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 52, i1 false) #11, !alias.scope !35
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %11 = icmp ne %"class.blink::FontVariationSettings"* %10, null
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0
  %14 = call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %12, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %13) #11
  br i1 %14, label %15, label %39

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %29 = load float, float* %28, align 8
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 3
  %31 = load float, float* %30, align 8
  %32 = fcmp une float %29, %31
  %33 = or i1 %11, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !22
  %37 = load i8, i8* %7, align 8, !range !22
  %38 = icmp eq i8 %36, %37
  br label %39

39:                                               ; preds = %1, %15, %21, %27, %34
  %40 = phi i1 [ false, %27 ], [ false, %21 ], [ false, %15 ], [ false, %1 ], [ %38, %34 ]
  %41 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %6, align 8
  %42 = icmp eq %"class.blink::FontVariationSettings"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #11
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 -4
  %51 = bitcast %"class.base::RefCounted"* %50 to %"class.blink::FontTagValuePair"**
  %52 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %51, align 8
  %53 = icmp eq %"class.blink::FontTagValuePair"* %52, null
  %54 = bitcast %"class.blink::FontTagValuePair"* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %44, i64 -1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #11
  br label %61

61:                                               ; preds = %60, %49
  %62 = bitcast %"class.base::RefCounted"* %50 to i8*
  call void @free(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %43, %39
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 2
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %63
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #11
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #11
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  br i1 %9, label %12, label %112

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %16, %20
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  br i1 %47, label %48, label %112

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp eq i64 %58, %66
  br i1 %67, label %68, label %112

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %72 = select i1 %54, i8* %70, i8* %71
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %76 = select i1 %62, i8* %74, i8* %75
  %77 = icmp eq i64 %58, 0
  br i1 %54, label %84, label %78

78:                                               ; preds = %68
  br i1 %77, label %100, label %79

79:                                               ; preds = %78
  %80 = ptrtoint i8* %70 to i64
  %81 = trunc i64 %80 to i8
  %82 = load i8, i8* %76, align 1
  %83 = icmp eq i8 %82, %81
  br i1 %83, label %85, label %112

84:                                               ; preds = %68
  br i1 %77, label %100, label %97

85:                                               ; preds = %79, %92
  %86 = phi i64 [ %89, %92 ], [ %57, %79 ]
  %87 = phi i8* [ %90, %92 ], [ %71, %79 ]
  %88 = phi i8* [ %93, %92 ], [ %76, %79 ]
  %89 = add i64 %86, -1
  %90 = getelementptr inbounds i8, i8* %87, i64 1
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = load i8, i8* %90, align 1
  %95 = load i8, i8* %93, align 1
  %96 = icmp eq i8 %94, %95
  br i1 %96, label %85, label %112

97:                                               ; preds = %84
  %98 = call i32 @bcmp(i8* %72, i8* %76, i64 %58) #11
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %85, %78, %84, %97
  %101 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br label %112

112:                                              ; preds = %92, %79, %48, %106, %100, %97, %44, %2
  %113 = phi i1 [ false, %100 ], [ false, %97 ], [ false, %44 ], [ false, %2 ], [ %111, %106 ], [ false, %48 ], [ false, %79 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret i1 %113
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %10 = and i32 %9, %7
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %11
  %13 = ptrtoint %"struct.WTF::KeyValuePair"* %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %14) #11
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %23 = xor i32 %9, -1
  %24 = lshr i32 %9, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %44

36:                                               ; preds = %116
  %37 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  br label %38

38:                                               ; preds = %36, %2
  %39 = phi i64 [ %13, %2 ], [ %37, %36 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %123, %36 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, null
  %42 = ptrtoint %"struct.WTF::KeyValuePair"* %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  br label %132

44:                                               ; preds = %16, %116
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %123, %116 ]
  %46 = phi i64 [ %13, %16 ], [ %129, %116 ]
  %47 = phi i64 [ %11, %16 ], [ %127, %116 ]
  %48 = phi i64 [ 0, %16 ], [ %125, %116 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %17, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %18) #11
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %19, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %20, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %21, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !22
  %114 = load i8, i8* %22, align 8, !range !22
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %132, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %119 = load float, float* %118, align 8
  %120 = fcmp oeq float %119, 0x47EFFFFFE0000000
  %121 = and i1 %117, %120
  %122 = inttoptr i64 %46 to %"struct.WTF::KeyValuePair"*
  %123 = select i1 %121, %"struct.WTF::KeyValuePair"* %122, %"struct.WTF::KeyValuePair"* %45
  %124 = icmp eq i64 %48, 0
  %125 = select i1 %124, i64 %35, i64 %48
  %126 = add i64 %125, %47
  %127 = and i64 %126, %8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %127
  %129 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0
  %131 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %130) #11
  br i1 %131, label %36, label %44

132:                                              ; preds = %111, %38
  %133 = phi i64 [ %43, %38 ], [ %46, %111 ]
  %134 = phi i8 [ 0, %38 ], [ 1, %111 ]
  %135 = inttoptr i64 %133 to %"struct.WTF::KeyValuePair"*
  %136 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %135, 0
  %137 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %136, i8 %134, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  %4 = fmul float %3, 1.000000e+03
  %5 = fptoui float %4 to i32
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %7 = tail call i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"* %6) #11
  %8 = lshr i32 %7, 16
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 16
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 16
  %15 = lshr i32 %5, 16
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = tail call i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"* nonnull %17) #11
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %1 ]
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !22
  %26 = and i32 %7, 65535
  %27 = add nuw nsw i32 %26, -1640531527
  %28 = shl i32 %27, 16
  %29 = shl nuw nsw i32 %8, 11
  %30 = xor i32 %29, %27
  %31 = xor i32 %30, %28
  %32 = lshr i32 %31, 11
  %33 = and i32 %10, 65535
  %34 = add i32 %31, %33
  %35 = add i32 %34, %32
  %36 = shl i32 %35, 16
  %37 = shl nuw nsw i32 %11, 11
  %38 = xor i32 %35, %37
  %39 = xor i32 %38, %36
  %40 = lshr i32 %39, 11
  %41 = and i32 %13, 65535
  %42 = add i32 %39, %41
  %43 = add i32 %42, %40
  %44 = shl i32 %43, 16
  %45 = shl nuw nsw i32 %14, 11
  %46 = xor i32 %43, %45
  %47 = xor i32 %46, %44
  %48 = lshr i32 %47, 11
  %49 = and i32 %5, 65535
  %50 = add i32 %47, %49
  %51 = add i32 %50, %48
  %52 = shl i32 %51, 16
  %53 = shl nuw nsw i32 %15, 11
  %54 = xor i32 %51, %53
  %55 = xor i32 %54, %52
  %56 = lshr i32 %55, 11
  %57 = add i32 %56, %55
  %58 = trunc i64 %23 to i32
  %59 = and i32 %58, 65535
  %60 = add i32 %57, %59
  %61 = shl i32 %60, 16
  %62 = lshr i64 %23, 5
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 134215680
  %65 = xor i32 %64, %60
  %66 = xor i32 %65, %61
  %67 = lshr i32 %66, 11
  %68 = zext i8 %25 to i32
  %69 = add i32 %66, %68
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 16
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 11
  %74 = add i32 %73, %72
  %75 = shl i32 %74, 3
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 5
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 2
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 15
  %82 = add i32 %81, %80
  %83 = shl i32 %82, 10
  %84 = xor i32 %83, %82
  %85 = and i32 %84, 16777215
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 8388608, i32 %85
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %205

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %20

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = zext i8 %10 to i64
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i8* [ %14, %12 ], [ %18, %17 ]
  %22 = phi i64 [ %16, %12 ], [ %19, %17 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = lshr i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %20
  %29 = add nsw i32 %26, -1
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = add nuw nsw i64 %31, 2
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %26, 1
  br i1 %34, label %69, label %35

35:                                               ; preds = %28
  %36 = sub nsw i32 %26, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i32 [ -1640531527, %35 ], [ %65, %37 ]
  %39 = phi i8* [ %21, %35 ], [ %66, %37 ]
  %40 = phi i32 [ %36, %35 ], [ %67, %37 ]
  %41 = load i8, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %38, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %39, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %39, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %54 to i32
  %58 = add i32 %52, %57
  %59 = shl i32 %58, 16
  %60 = zext i8 %56 to i32
  %61 = shl nuw nsw i32 %60, 11
  %62 = xor i32 %61, %58
  %63 = xor i32 %62, %59
  %64 = lshr i32 %63, 11
  %65 = add i32 %64, %63
  %66 = getelementptr inbounds i8, i8* %39, i64 4
  %67 = add i32 %40, -2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %37

69:                                               ; preds = %37, %28
  %70 = phi i32 [ undef, %28 ], [ %65, %37 ]
  %71 = phi i32 [ -1640531527, %28 ], [ %65, %37 ]
  %72 = phi i8* [ %21, %28 ], [ %66, %37 ]
  %73 = icmp eq i32 %33, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %75 to i32
  %79 = add i32 %71, %78
  %80 = shl i32 %79, 16
  %81 = zext i8 %77 to i32
  %82 = shl nuw nsw i32 %81, 11
  %83 = xor i32 %82, %79
  %84 = xor i32 %83, %80
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  br label %87

87:                                               ; preds = %69, %74
  %88 = phi i32 [ %70, %69 ], [ %86, %74 ]
  %89 = getelementptr i8, i8* %21, i64 %32
  br label %90

90:                                               ; preds = %87, %20
  %91 = phi i32 [ -1640531527, %20 ], [ %88, %87 ]
  %92 = phi i8* [ %21, %20 ], [ %89, %87 ]
  br i1 %25, label %93, label %96

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %95 = bitcast i32* %94 to i8*
  br label %111

96:                                               ; preds = %90
  %97 = load i8, i8* %92, align 1
  %98 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %99 = bitcast i32* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %97 to i32
  %103 = add i32 %91, %102
  %104 = shl i32 %103, 16
  %105 = zext i8 %101 to i32
  %106 = shl nuw nsw i32 %105, 11
  %107 = xor i32 %106, %103
  %108 = xor i32 %107, %104
  %109 = lshr i32 %108, 11
  %110 = add i32 %109, %108
  br label %111

111:                                              ; preds = %96, %93
  %112 = phi i32 [ %110, %96 ], [ %91, %93 ]
  %113 = phi i8* [ %100, %96 ], [ %95, %93 ]
  %114 = phi i32 [ 3, %96 ], [ 4, %93 ]
  %115 = and i32 %114, 1
  %116 = lshr i32 %114, 1
  %117 = add nsw i32 %116, -1
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 1
  %120 = add nuw nsw i64 %119, 2
  %121 = load i8, i8* %113, align 1
  %122 = getelementptr inbounds i8, i8* %113, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %121 to i32
  %125 = add i32 %112, %124
  %126 = shl i32 %125, 16
  %127 = zext i8 %123 to i32
  %128 = shl nuw nsw i32 %127, 11
  %129 = xor i32 %128, %125
  %130 = xor i32 %129, %126
  %131 = lshr i32 %130, 11
  %132 = add i32 %131, %130
  %133 = icmp eq i32 %116, 1
  br i1 %133, label %134, label %269

134:                                              ; preds = %269, %111
  %135 = phi i32 [ %132, %111 ], [ %282, %269 ]
  %136 = icmp eq i32 %115, 0
  br i1 %136, label %153, label %137

137:                                              ; preds = %134
  %138 = getelementptr i8, i8* %113, i64 %120
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %139 to i32
  %145 = add i32 %135, %144
  %146 = shl i32 %145, 16
  %147 = zext i8 %143 to i32
  %148 = shl nuw nsw i32 %147, 11
  %149 = xor i32 %148, %145
  %150 = xor i32 %149, %146
  %151 = lshr i32 %150, 11
  %152 = add i32 %151, %150
  br label %156

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %155 = bitcast i32* %154 to i8*
  br label %156

156:                                              ; preds = %137, %153
  %157 = phi i32 [ %152, %137 ], [ %135, %153 ]
  %158 = phi i8* [ %142, %137 ], [ %155, %153 ]
  %159 = phi i32 [ 3, %137 ], [ 4, %153 ]
  %160 = and i32 %159, 1
  %161 = lshr i32 %159, 1
  %162 = add nsw i32 %161, -1
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %163, 1
  %165 = add nuw nsw i64 %164, 2
  %166 = load i8, i8* %158, align 1
  %167 = getelementptr inbounds i8, i8* %158, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %166 to i32
  %170 = add i32 %157, %169
  %171 = shl i32 %170, 16
  %172 = zext i8 %168 to i32
  %173 = shl nuw nsw i32 %172, 11
  %174 = xor i32 %173, %170
  %175 = xor i32 %174, %171
  %176 = lshr i32 %175, 11
  %177 = add i32 %176, %175
  %178 = icmp eq i32 %161, 1
  br i1 %178, label %179, label %255

179:                                              ; preds = %255, %156
  %180 = phi i32 [ %177, %156 ], [ %268, %255 ]
  %181 = icmp eq i32 %160, 0
  br i1 %181, label %191, label %182

182:                                              ; preds = %179
  %183 = getelementptr i8, i8* %158, i64 %165
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = add i32 %180, %185
  %187 = shl i32 %186, 11
  %188 = xor i32 %187, %186
  %189 = lshr i32 %188, 17
  %190 = add i32 %189, %188
  br label %191

191:                                              ; preds = %179, %182
  %192 = phi i32 [ %190, %182 ], [ %180, %179 ]
  %193 = shl i32 %192, 3
  %194 = xor i32 %193, %192
  %195 = lshr i32 %194, 5
  %196 = add i32 %195, %194
  %197 = shl i32 %196, 2
  %198 = xor i32 %197, %196
  %199 = lshr i32 %198, 15
  %200 = add i32 %199, %198
  %201 = shl i32 %200, 10
  %202 = xor i32 %201, %200
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 %202
  br label %253

205:                                              ; preds = %1
  %206 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #11
  %207 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %205, %210
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #11
  br label %233

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #11
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !3

230:                                              ; preds = %221
  tail call void @llvm.trap() #11
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %231, %215, %214
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %235) #11
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #11
  br label %252

252:                                              ; preds = %233, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #11
  br label %253

253:                                              ; preds = %252, %191
  %254 = phi i32 [ %204, %191 ], [ %236, %252 ]
  ret i32 %254

255:                                              ; preds = %156
  %256 = getelementptr inbounds i8, i8* %158, i64 2
  %257 = load i8, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %158, i64 3
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %257 to i32
  %261 = add i32 %177, %260
  %262 = shl i32 %261, 16
  %263 = zext i8 %259 to i32
  %264 = shl nuw nsw i32 %263, 11
  %265 = xor i32 %264, %261
  %266 = xor i32 %265, %262
  %267 = lshr i32 %266, 11
  %268 = add i32 %267, %266
  br label %179

269:                                              ; preds = %111
  %270 = getelementptr inbounds i8, i8* %113, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %113, i64 3
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %271 to i32
  %275 = add i32 %132, %274
  %276 = shl i32 %275, 16
  %277 = zext i8 %273 to i32
  %278 = shl nuw nsw i32 %277, 11
  %279 = xor i32 %278, %275
  %280 = xor i32 %279, %276
  %281 = lshr i32 %280, 11
  %282 = add i32 %281, %280
  br label %134
}

declare i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #11
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !22
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #11
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #11
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #11
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !22
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %49 = icmp eq %"class.blink::FontFaceCreationParams"* %0, %1
  br i1 %49, label %79, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %54, label %69, label %59

59:                                               ; preds = %50
  br i1 %58, label %63, label %60

60:                                               ; preds = %59
  %61 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #11
  br label %79

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %65, i64 %67) #11
  br label %79

69:                                               ; preds = %50
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %75 = zext i8 %57 to i64
  %76 = select i1 %58, i8* %71, i8* %74
  %77 = select i1 %58, i64 %73, i64 %75
  %78 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %76, i64 %77) #11
  br label %79

79:                                               ; preds = %46, %60, %63, %69
  %80 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %81 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %82 = bitcast i32* %81 to i64*
  %83 = bitcast i32* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  ret %"class.blink::FontFaceCreationParams"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6insertIRS2_EENS_30VectorBackedLinkedListIteratorIS4_EENS_35VectorBackedLinkedListConstIteratorIS4_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %8 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %9 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %8, i32 0) #11
  %10 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %9 to i64
  %11 = sub i64 %7, %10
  %12 = sdiv exact i64 %11, 88
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %13) #11
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %172

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %17, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %13, i32* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #11
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %39
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %49, %34, %21
  %52 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0, i32 2
  %53 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 2
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #11
  br label %66

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %52, i8* %63, i64 %65) #11
  br label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0, i32 3
  %68 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 3
  %69 = bitcast i32* %68 to i64*
  %70 = bitcast i32* %67 to i64*
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 1
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 1
  %74 = bitcast i32* %72 to i8*
  %75 = bitcast i32* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 12, i1 false) #11
  %76 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 5, i32 0
  %77 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %77, %"class.blink::FontVariationSettings"** %78, align 8
  %79 = icmp eq %"class.blink::FontVariationSettings"* %77, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %77, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #11
  br label %82

82:                                               ; preds = %66, %80
  %83 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 6
  %84 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 6
  %85 = load i8, i8* %84, align 8, !range !22
  store i8 %85, i8* %83, align 8
  %86 = load i32, i32* %22, align 4
  %87 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %124, label %90, !prof !3

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %91, align 8
  %93 = zext i32 %86 to i64
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93
  %95 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %96 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %94 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 0, i32 0
  %99 = load i32, i32* %27, align 8
  store i32 %99, i32* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 0, i32 1
  %101 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.WTF::AtomicString"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.WTF::AtomicString"* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 0, i32 2
  %107 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #11
  %109 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 0, i32 3
  %110 = bitcast i32* %109 to i64*
  %111 = load i64, i64* %70, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 1
  %113 = bitcast i32* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %74, i64 12, i1 false) #11
  %114 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 5
  %115 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 5
  %116 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %115, i64 0, i32 0
  %117 = bitcast %class.scoped_refptr.2* %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %class.scoped_refptr.2* %114 to i64*
  store i64 %118, i64* %119, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %116, align 8
  %120 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 %93, i32 2, i32 6
  %121 = load i8, i8* %83, align 8, !range !22
  store i8 %121, i8* %120, align 8
  %122 = load i32, i32* %22, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %22, align 4
  br label %125

124:                                              ; preds = %82
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.31"* %14, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(88) %5) #11
  br label %125

125:                                              ; preds = %90, %124
  %126 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %78, align 8
  %127 = icmp eq %"class.blink::FontVariationSettings"* %126, null
  br i1 %127, label %148, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %126, i64 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %130) #11
  %131 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %148

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 -4
  %136 = bitcast %"class.base::RefCounted"* %135 to %"class.blink::FontTagValuePair"**
  %137 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %136, align 8
  %138 = icmp eq %"class.blink::FontTagValuePair"* %137, null
  %139 = bitcast %"class.blink::FontTagValuePair"* %137 to i8*
  br i1 %138, label %146, label %140, !prof !2

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 -1, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144, !prof !3

144:                                              ; preds = %140
  store i32 0, i32* %141, align 4
  br label %145

145:                                              ; preds = %144, %140
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %139) #11
  br label %146

146:                                              ; preds = %145, %134
  %147 = bitcast %"class.base::RefCounted"* %135 to i8*
  call void @free(i8* %147) #11
  br label %148

148:                                              ; preds = %146, %128, %125
  %149 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %153, %148
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %360, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %360

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #11
  br label %360

172:                                              ; preds = %4
  %173 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %19) #11
  %174 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 1
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %18, align 8
  %176 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %176) #11
  %177 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 0
  store i32 %17, i32* %177, align 8
  %178 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 1
  store i32 %13, i32* %178, align 4
  %179 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %184, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %185, label %203, label %186

186:                                              ; preds = %172
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #11
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !3

200:                                              ; preds = %191
  tail call void @llvm.trap() #11
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %203

203:                                              ; preds = %201, %186, %172
  %204 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 0, i32 2
  %205 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 2
  %206 = bitcast %"class.std::__1::basic_string"* %205 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %203
  %211 = bitcast %"class.std::__1::basic_string"* %204 to i8*
  %212 = bitcast %"class.std::__1::basic_string"* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false) #11
  br label %218

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %204, i8* %215, i64 %217) #11
  br label %218

218:                                              ; preds = %213, %210
  %219 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 0, i32 3
  %220 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 0, i32 3
  %221 = bitcast i32* %220 to i64*
  %222 = bitcast i32* %219 to i64*
  %223 = load i64, i64* %221, align 8
  store i64 %223, i64* %222, align 8
  %224 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 1
  %225 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 1
  %226 = bitcast i32* %224 to i8*
  %227 = bitcast i32* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 12, i1 false) #11
  %228 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 5, i32 0
  %229 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %228, align 8
  %230 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %229, %"class.blink::FontVariationSettings"** %230, align 8
  %231 = icmp eq %"class.blink::FontVariationSettings"* %229, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %218
  %233 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %229, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %233) #11
  br label %234

234:                                              ; preds = %218, %232
  %235 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 6
  %236 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %3, i64 0, i32 6
  %237 = load i8, i8* %236, align 8, !range !22
  store i8 %237, i8* %235, align 8
  %238 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %6 to i64*
  %239 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %173 to i64*
  %240 = load i64, i64* %238, align 8
  store i64 %240, i64* %239, align 8
  %241 = load i32, i32* %179, align 8
  %242 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 0, i32 0
  store i32 %241, i32* %242, align 8
  %243 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 0, i32 1
  %244 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 0, i32 1
  %245 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %244, i64 0, i32 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::AtomicString"* %244 to i64*
  %247 = load i64, i64* %246, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %245, align 8
  %248 = bitcast %"class.WTF::AtomicString"* %243 to i64*
  %249 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %243, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  store i64 %247, i64* %248, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %234
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #11
  br label %265

265:                                              ; preds = %264, %261, %234
  %266 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 0, i32 2
  %267 = bitcast %"class.std::__1::basic_string"* %266 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %267, i64 0, i32 1, i32 0
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %273) #12
  br label %274

274:                                              ; preds = %271, %265
  %275 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  %276 = bitcast %"class.std::__1::basic_string"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %276, i64 24, i1 false) #11
  %277 = bitcast %"class.std::__1::basic_string"* %204 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  store i8 0, i8* %278, align 1
  store i8 0, i8* %276, align 8
  %279 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 0, i32 3
  %280 = bitcast i32* %279 to i64*
  %281 = load i64, i64* %222, align 8
  store i64 %281, i64* %280, align 8
  %282 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 1
  %283 = bitcast i32* %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %226, i64 12, i1 false) #11
  %284 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 5
  %285 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 0, i32 2, i32 5
  %286 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %285, i64 0, i32 0
  %287 = bitcast %class.scoped_refptr.2* %285 to i64*
  %288 = load i64, i64* %287, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %286, align 8
  %289 = bitcast %class.scoped_refptr.2* %284 to i64*
  %290 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %284, i64 0, i32 0
  %291 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %290, align 8
  store i64 %288, i64* %289, align 8
  %292 = icmp eq %"class.blink::FontVariationSettings"* %291, null
  br i1 %292, label %313, label %293

293:                                              ; preds = %274
  %294 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %291, i64 0, i32 1, i32 0
  %295 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %294, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %295) #11
  %296 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %294, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %313

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %294, i64 -4
  %301 = bitcast %"class.base::RefCounted"* %300 to %"class.blink::FontTagValuePair"**
  %302 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %301, align 8
  %303 = icmp eq %"class.blink::FontTagValuePair"* %302, null
  %304 = bitcast %"class.blink::FontTagValuePair"* %302 to i8*
  br i1 %303, label %311, label %305, !prof !2

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %294, i64 -1, i32 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %310, label %309, !prof !3

309:                                              ; preds = %305
  store i32 0, i32* %306, align 4
  br label %310

310:                                              ; preds = %309, %305
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %304) #11
  br label %311

311:                                              ; preds = %310, %299
  %312 = bitcast %"class.base::RefCounted"* %300 to i8*
  call void @free(i8* %312) #11
  br label %313

313:                                              ; preds = %274, %293, %311
  %314 = load i8, i8* %235, align 8, !range !22
  %315 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %173, i64 0, i32 2, i32 6
  store i8 %314, i8* %315, align 8
  %316 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %230, align 8
  %317 = icmp eq %"class.blink::FontVariationSettings"* %316, null
  br i1 %317, label %338, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %316, i64 0, i32 1, i32 0
  %320 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %319, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %320) #11
  %321 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %319, i64 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %338

324:                                              ; preds = %318
  %325 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %319, i64 -4
  %326 = bitcast %"class.base::RefCounted"* %325 to %"class.blink::FontTagValuePair"**
  %327 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %326, align 8
  %328 = icmp eq %"class.blink::FontTagValuePair"* %327, null
  %329 = bitcast %"class.blink::FontTagValuePair"* %327 to i8*
  br i1 %328, label %336, label %330, !prof !2

330:                                              ; preds = %324
  %331 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %319, i64 -1, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %335, label %334, !prof !3

334:                                              ; preds = %330
  store i32 0, i32* %331, align 4
  br label %335

335:                                              ; preds = %334, %330
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %329) #11
  br label %336

336:                                              ; preds = %335, %324
  %337 = bitcast %"class.base::RefCounted"* %325 to i8*
  call void @free(i8* %337) #11
  br label %338

338:                                              ; preds = %336, %318, %313
  %339 = load i8, i8* %278, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %344

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i8*, i8** %342, align 8
  call void @_ZdlPv(i8* %343) #12
  br label %344

344:                                              ; preds = %341, %338
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #11
  br label %360

360:                                              ; preds = %359, %356, %344, %171, %168, %156
  %361 = phi i8* [ %24, %156 ], [ %24, %168 ], [ %24, %171 ], [ %176, %344 ], [ %176, %356 ], [ %176, %359 ]
  %362 = phi i32 [ %23, %156 ], [ %23, %168 ], [ %23, %171 ], [ %19, %344 ], [ %19, %356 ], [ %19, %359 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %361) #11
  %363 = call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %17) #11
  %364 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %363, i64 0, i32 1
  store i32 %362, i32* %364, align 4
  %365 = call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %13) #11
  %366 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %365, i64 0, i32 0
  store i32 %362, i32* %366, align 8
  %367 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %368 = load i32, i32* %367, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %367, align 4
  %370 = call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %362) #11
  %371 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %370, 0
  %372 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %371, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %372
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS4_EES6_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 88
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %12) #11
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %18, i32 0) #11
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = sdiv exact i64 %21, 88
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %23) #11
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %30) #11
  %34 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %32) #11
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %26) #11
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %12) #11
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERS2_RKjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_(%"class.WTF::HashTable.27"*, %"struct.blink::FontCacheKey"* dereferenceable(80), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.30"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair.30"* null)
  %11 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.30"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %21, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %22) #11
  br i1 %23, label %153, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %31 = xor i32 %18, -1
  %32 = lshr i32 %18, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %24, %123
  %45 = phi %"struct.WTF::KeyValuePair.30"* [ %21, %24 ], [ %129, %123 ]
  %46 = phi %"struct.WTF::KeyValuePair.30"* [ null, %24 ], [ %124, %123 ]
  %47 = phi i64 [ %20, %24 ], [ %128, %123 ]
  %48 = phi i64 [ 0, %24 ], [ %126, %123 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %25, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %45, i64 0, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %26) #11
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %27, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %28, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %29, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !22
  %114 = load i8, i8* %30, align 8, !range !22
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %166, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  br i1 %117, label %118, label %123

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %47, i32 0, i32 3
  %120 = load float, float* %119, align 8
  %121 = fcmp oeq float %120, 0x47EFFFFFE0000000
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  br label %123

123:                                              ; preds = %116, %118, %122
  %124 = phi %"struct.WTF::KeyValuePair.30"* [ %45, %122 ], [ %46, %118 ], [ %46, %116 ]
  %125 = icmp eq i64 %48, 0
  %126 = select i1 %125, i64 %43, i64 %48
  %127 = add i64 %126, %47
  %128 = and i64 %127, %17
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %13, i64 %128
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %129, i64 0, i32 0
  %131 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %130) #11
  br i1 %131, label %132, label %44

132:                                              ; preds = %123
  %133 = icmp eq %"struct.WTF::KeyValuePair.30"* %124, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %135)
  %136 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %136)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 20, i1 false), !alias.scope !38, !noalias !41
  %137 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 %137, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %136)
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %138, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 1
  %141 = bitcast i32* %140 to i8*
  %142 = bitcast %"class.WTF::AtomicString"* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %135, i64 12, i1 false) #11
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 5
  %144 = bitcast %class.scoped_refptr.2* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 6
  store i8 0, i8* %145, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 1
  store i32 0, i32* %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %135)
  %147 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = add i32 %148, 2147483647
  %150 = and i32 %149, 2147483647
  %151 = and i32 %148, -2147483648
  %152 = or i32 %150, %151
  store i32 %152, i32* %147, align 8
  br label %153

153:                                              ; preds = %12, %132, %134
  %154 = phi %"struct.WTF::KeyValuePair.30"* [ %124, %134 ], [ %129, %132 ], [ %21, %12 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_IjEEEENS3_16FontCacheKeyHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_jEERS4_RKjEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.30"* dereferenceable(88) %154, %"struct.blink::FontCacheKey"* dereferenceable(80) %1, i32* dereferenceable(4) %2)
  %155 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %155, align 4
  %158 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = add i32 %159, %157
  %161 = shl i32 %160, 1
  %162 = load i32, i32* %14, align 8
  %163 = icmp ult i32 %161, %162
  br i1 %163, label %166, label %164

164:                                              ; preds = %153
  %165 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair.30"* %154)
  br label %166

166:                                              ; preds = %111, %153, %164
  %167 = phi i8 [ 1, %153 ], [ 1, %164 ], [ 0, %111 ]
  %168 = phi %"struct.WTF::KeyValuePair.30"* [ %154, %153 ], [ %165, %164 ], [ %45, %111 ]
  %169 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } undef, %"struct.WTF::KeyValuePair.30"* %168, 0
  %170 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %169, i8 %167, 1
  ret { %"struct.WTF::KeyValuePair.30"*, i8 } %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.27"*, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #11
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %24, i8* %25) #11
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #11
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %33

33:                                               ; preds = %11, %2, %32
  %34 = phi i32 [ %15, %32 ], [ 8, %2 ], [ %9, %11 ]
  %35 = zext i32 %34 to i64
  %36 = mul nuw nsw i64 %35, 88
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyEjEEEEPKcv, i64 0, i64 0)) #11
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair.30"*
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %42 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  %43 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi i64 [ 0, %40 ], [ %55, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 20, i1 false), !alias.scope !44, !noalias !47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43)
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 0, i32 0, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 0, i32 1
  %49 = bitcast i32* %48 to i8*
  %50 = bitcast %"class.WTF::AtomicString"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %41, i64 12, i1 false) #11
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 0, i32 5
  %52 = bitcast %class.scoped_refptr.2* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 0, i32 6
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %38, i64 %45, i32 1
  store i32 0, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41)
  %55 = add nuw nsw i64 %45, 1
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %57, label %44

57:                                               ; preds = %44, %33
  %58 = call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair.30"* %38, i32 %34, %"struct.WTF::KeyValuePair.30"* %1) #11
  ret %"struct.WTF::KeyValuePair.30"* %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_IjEEEENS3_16FontCacheKeyHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_jEERS4_RKjEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.30"* dereferenceable(88), %"struct.blink::FontCacheKey"* dereferenceable(80), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"* %4, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %5) #11
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 12, i1 false) #11
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 5
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %13 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %12, align 8
  %14 = icmp eq %"class.blink::FontVariationSettings"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #11
  br label %17

17:                                               ; preds = %15, %3
  %18 = ptrtoint %"class.blink::FontVariationSettings"* %13 to i64
  %19 = bitcast %class.scoped_refptr.2* %11 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %11, i64 0, i32 0
  %21 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.blink::FontVariationSettings"* %21, null
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #11
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 -4
  %31 = bitcast %"class.base::RefCounted"* %30 to %"class.blink::FontTagValuePair"**
  %32 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %31, align 8
  %33 = icmp eq %"class.blink::FontTagValuePair"* %32, null
  %34 = bitcast %"class.blink::FontTagValuePair"* %32 to i8*
  br i1 %33, label %41, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 -1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !3

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #11
  br label %41

41:                                               ; preds = %40, %29
  %42 = bitcast %"class.base::RefCounted"* %30 to i8*
  tail call void @free(i8* %42) #11
  br label %43

43:                                               ; preds = %17, %23, %41
  %44 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !22
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 6
  store i8 %45, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 1
  %48 = load i32, i32* %2, align 4
  store i32 %48, i32* %47, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_(%"class.WTF::HashTable.27"*, %"struct.WTF::KeyValuePair.30"*, i32, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.27", align 8
  %6 = bitcast %"class.WTF::HashTable.27"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.27"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.30"* %1, %"struct.WTF::KeyValuePair.30"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  br i1 %14, label %16, label %104

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.30"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.27"* %5 to i64*
  br label %22

19:                                               ; preds = %212
  %20 = bitcast %"class.WTF::HashTable.27"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair.30"* [ null, %16 ], [ %213, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %214, %19 ]
  %27 = bitcast %"class.WTF::HashTable.27"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.27"* nonnull %5)
  %29 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, -2147483648
  store i32 %31, i32* %29, align 8
  %32 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %7, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.30"* %32, null
  br i1 %33, label %103, label %34, !prof !2

34:                                               ; preds = %22
  %35 = load i32, i32* %8, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %101, label %37

37:                                               ; preds = %34
  %38 = zext i32 %35 to i64
  br label %39

39:                                               ; preds = %98, %37
  %40 = phi i64 [ 0, %37 ], [ %99, %98 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %32, i64 %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %32, i64 %40, i32 0, i32 3
  %46 = load float, float* %45, align 8
  %47 = fcmp oeq float %46, 0x47EFFFFFE0000000
  br i1 %47, label %98, label %48

48:                                               ; preds = %44, %39
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %32, i64 %40, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  br i1 %51, label %72, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #11
  %55 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 -4
  %60 = bitcast %"class.base::RefCounted"* %59 to %"class.blink::FontTagValuePair"**
  %61 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %60, align 8
  %62 = icmp eq %"class.blink::FontTagValuePair"* %61, null
  %63 = bitcast %"class.blink::FontTagValuePair"* %61 to i8*
  br i1 %62, label %70, label %64, !prof !2

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 -1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %64
  store i32 0, i32* %65, align 4
  br label %69

69:                                               ; preds = %68, %64
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #11
  br label %70

70:                                               ; preds = %69, %58
  %71 = bitcast %"class.base::RefCounted"* %59 to i8*
  call void @free(i8* %71) #11
  br label %72

72:                                               ; preds = %70, %52, %48
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %32, i64 %40, i32 0, i32 0, i32 2
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %78, %72
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %32, i64 %40, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #11
  br label %98

98:                                               ; preds = %97, %94, %81, %44
  %99 = add nuw nsw i64 %40, 1
  %100 = icmp eq i64 %99, %38
  br i1 %100, label %101, label %39

101:                                              ; preds = %98, %34
  %102 = bitcast %"struct.WTF::KeyValuePair.30"* %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %102) #11
  store %"struct.WTF::KeyValuePair.30"* null, %"struct.WTF::KeyValuePair.30"** %7, align 8
  br label %103

103:                                              ; preds = %22, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.30"* %25

104:                                              ; preds = %4, %212
  %105 = phi %"struct.WTF::KeyValuePair.30"* [ %213, %212 ], [ null, %4 ]
  %106 = phi i32 [ %214, %212 ], [ 0, %4 ]
  %107 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %15, align 8
  %108 = zext i32 %106 to i64
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %107, i64 %108, i32 0
  %110 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %109) #11
  br i1 %110, label %212, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %107, i64 %108, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %107, i64 %108, i32 0, i32 3
  %117 = load float, float* %116, align 8
  %118 = fcmp oeq float %117, 0x47EFFFFFE0000000
  br i1 %118, label %212, label %119

119:                                              ; preds = %111, %115
  %120 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %15, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %121, i64 0, i32 0
  %123 = call { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EENSt3__14pairIPS4_bEERKT0_(%"class.WTF::HashTable.27"* nonnull %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %122) #11
  %124 = extractvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %123, 0
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 5, i32 0
  %126 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %125, align 8
  %127 = icmp eq %"class.blink::FontVariationSettings"* %126, null
  br i1 %127, label %148, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %126, i64 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %130) #11
  %131 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %148

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 -4
  %136 = bitcast %"class.base::RefCounted"* %135 to %"class.blink::FontTagValuePair"**
  %137 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %136, align 8
  %138 = icmp eq %"class.blink::FontTagValuePair"* %137, null
  %139 = bitcast %"class.blink::FontTagValuePair"* %137 to i8*
  br i1 %138, label %146, label %140, !prof !2

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %129, i64 -1, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144, !prof !3

144:                                              ; preds = %140
  store i32 0, i32* %141, align 4
  br label %145

145:                                              ; preds = %144, %140
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %139) #11
  br label %146

146:                                              ; preds = %145, %134
  %147 = bitcast %"class.base::RefCounted"* %135 to i8*
  call void @free(i8* %147) #11
  br label %148

148:                                              ; preds = %146, %128, %119
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 2
  %150 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %156) #12
  br label %157

157:                                              ; preds = %154, %148
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #11
  br label %174

174:                                              ; preds = %157, %170, %173
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %121, i64 0, i32 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 8
  store i32 %177, i32* %175, align 8
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 1
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 0, i32 1
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = bitcast %"class.WTF::AtomicString"* %179 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.WTF::AtomicString"* %178 to i64*
  store i64 %182, i64* %183, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %180, align 8
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 0, i32 2
  %185 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  %186 = bitcast %"class.std::__1::basic_string"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #11
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 0, i32 3
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 0, i32 3
  %189 = bitcast i32* %188 to i64*
  %190 = bitcast i32* %187 to i64*
  %191 = load i64, i64* %189, align 8
  store i64 %191, i64* %190, align 8
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 1
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 1
  %194 = bitcast i32* %192 to i8*
  %195 = bitcast i32* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 12, i1 false) #11
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 5
  %197 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 5
  %198 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %197, i64 0, i32 0
  %199 = bitcast %class.scoped_refptr.2* %197 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %class.scoped_refptr.2* %196 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %198, align 8
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 0, i32 6
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 0, i32 6
  %204 = load i8, i8* %203, align 8, !range !22
  store i8 %204, i8* %202, align 8
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %124, i64 0, i32 1
  %206 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %120, i64 %108, i32 1
  %207 = load i32, i32* %206, align 8
  store i32 %207, i32* %205, align 8
  %208 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %15, align 8
  %209 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %208, i64 %108
  %210 = icmp eq %"struct.WTF::KeyValuePair.30"* %209, %3
  %211 = select i1 %210, %"struct.WTF::KeyValuePair.30"* %124, %"struct.WTF::KeyValuePair.30"* %105
  br label %212

212:                                              ; preds = %104, %115, %174
  %213 = phi %"struct.WTF::KeyValuePair.30"* [ %105, %115 ], [ %211, %174 ], [ %105, %104 ]
  %214 = add i32 %106, 1
  %215 = load i32, i32* %12, align 8
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %19, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable.27"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.30"* %3, null
  br i1 %4, label %77, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %70, %9
  %12 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %3, i64 %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %3, i64 %12, i32 0, i32 3
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %18, 0x47EFFFFFE0000000
  br i1 %19, label %70, label %20

20:                                               ; preds = %16, %11
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %3, i64 %12, i32 0, i32 5, i32 0
  %22 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %21, align 8
  %23 = icmp eq %"class.blink::FontVariationSettings"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %22, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #11
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %44

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.blink::FontTagValuePair"**
  %33 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %32, align 8
  %34 = icmp eq %"class.blink::FontTagValuePair"* %33, null
  %35 = bitcast %"class.blink::FontTagValuePair"* %33 to i8*
  br i1 %34, label %42, label %36, !prof !2

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !3

40:                                               ; preds = %36
  store i32 0, i32* %37, align 4
  br label %41

41:                                               ; preds = %40, %36
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %35) #11
  br label %42

42:                                               ; preds = %41, %30
  %43 = bitcast %"class.base::RefCounted"* %31 to i8*
  tail call void @free(i8* %43) #11
  br label %44

44:                                               ; preds = %42, %24, %20
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %3, i64 %12, i32 0, i32 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %50, %44
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %3, i64 %12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %53, %16
  %71 = add nuw nsw i64 %12, 1
  %72 = icmp eq i64 %71, %10
  br i1 %72, label %73, label %11

73:                                               ; preds = %70, %5
  %74 = bitcast %"struct.WTF::KeyValuePair.30"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %74) #11
  %75 = bitcast %"class.WTF::HashTable.27"* %0 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %6, align 8
  %76 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  store i32 0, i32* %76, align 4
  br label %77

77:                                               ; preds = %1, %73
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.30"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EENSt3__14pairIPS4_bEERKT0_(%"class.WTF::HashTable.27"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %10 = and i32 %9, %7
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %11
  %13 = ptrtoint %"struct.WTF::KeyValuePair.30"* %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %12, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %14) #11
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %23 = xor i32 %9, -1
  %24 = lshr i32 %9, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %44

36:                                               ; preds = %124
  %37 = ptrtoint %"struct.WTF::KeyValuePair.30"* %130 to i64
  br label %38

38:                                               ; preds = %36, %2
  %39 = phi i64 [ %13, %2 ], [ %37, %36 ]
  %40 = phi %"struct.WTF::KeyValuePair.30"* [ null, %2 ], [ %125, %36 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair.30"* %40, null
  %42 = ptrtoint %"struct.WTF::KeyValuePair.30"* %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  br label %134

44:                                               ; preds = %16, %124
  %45 = phi %"struct.WTF::KeyValuePair.30"* [ null, %16 ], [ %125, %124 ]
  %46 = phi i64 [ %13, %16 ], [ %131, %124 ]
  %47 = phi i64 [ %11, %16 ], [ %129, %124 ]
  %48 = phi i64 [ 0, %16 ], [ %127, %124 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %17, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %18) #11
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %19, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %20, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %21, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !22
  %114 = load i8, i8* %22, align 8, !range !22
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %134, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  br i1 %117, label %118, label %124

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %47, i32 0, i32 3
  %120 = load float, float* %119, align 8
  %121 = fcmp oeq float %120, 0x47EFFFFFE0000000
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = inttoptr i64 %46 to %"struct.WTF::KeyValuePair.30"*
  br label %124

124:                                              ; preds = %116, %118, %122
  %125 = phi %"struct.WTF::KeyValuePair.30"* [ %45, %116 ], [ %45, %118 ], [ %123, %122 ]
  %126 = icmp eq i64 %48, 0
  %127 = select i1 %126, i64 %35, i64 %48
  %128 = add i64 %127, %47
  %129 = and i64 %128, %8
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %129
  %131 = ptrtoint %"struct.WTF::KeyValuePair.30"* %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %130, i64 0, i32 0
  %133 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %132) #11
  br i1 %133, label %36, label %44

134:                                              ; preds = %111, %38
  %135 = phi i64 [ %43, %38 ], [ %46, %111 ]
  %136 = phi i8 [ 0, %38 ], [ 1, %111 ]
  %137 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.30"*
  %138 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } undef, %"struct.WTF::KeyValuePair.30"* %137, 0
  %139 = insertvalue { %"struct.WTF::KeyValuePair.30"*, i8 } %138, i8 %136, 1
  ret { %"struct.WTF::KeyValuePair.30"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.31"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(88)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.31"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.31"* %0, i32 %22) #11
  %36 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %39 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.31"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.31"* %0, i32 %50) #11
  %64 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72
  %74 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %70 to i64*
  %75 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %73 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::AtomicString"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %88 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 2
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %89, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #11
  %90 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 3
  %91 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 3
  %92 = bitcast i32* %91 to i64*
  %93 = bitcast i32* %90 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 1
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 1
  %98 = bitcast i32* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %98, i64 12, i1 false) #11
  %99 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 5
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 5
  %101 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %100, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr.2* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.2* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 6
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 6
  %107 = load i8, i8* %106, align 8, !range !22
  store i8 %107, i8* %105, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %105

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.31"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %103, label %14

14:                                               ; preds = %4, %99
  %15 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %101, %99 ], [ %6, %4 ]
  %16 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %100, %99 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i64*
  %18 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %16 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::AtomicString"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #11
  %33 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 3
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 3
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 1
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 1
  %41 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %41, i64 12, i1 false) #11
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 5
  %43 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5
  %44 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %43, i64 0, i32 0
  %45 = bitcast %class.scoped_refptr.2* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.scoped_refptr.2* %42 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %44, align 8
  %48 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 6
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 6
  %50 = load i8, i8* %49, align 8, !range !22
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5, i32 0
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %51, align 8
  %53 = icmp eq %"class.blink::FontVariationSettings"* %52, null
  br i1 %53, label %74, label %54

54:                                               ; preds = %14
  %55 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %55, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #11
  %57 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %55, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %55, i64 -4
  %62 = bitcast %"class.base::RefCounted"* %61 to %"class.blink::FontTagValuePair"**
  %63 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %62, align 8
  %64 = icmp eq %"class.blink::FontTagValuePair"* %63, null
  %65 = bitcast %"class.blink::FontTagValuePair"* %63 to i8*
  br i1 %64, label %72, label %66, !prof !2

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %55, i64 -1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %66
  store i32 0, i32* %67, align 4
  br label %71

71:                                               ; preds = %70, %66
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #11
  br label %72

72:                                               ; preds = %71, %60
  %73 = bitcast %"class.base::RefCounted"* %61 to i8*
  tail call void @free(i8* %73) #11
  br label %74

74:                                               ; preds = %72, %54, %14
  %75 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %79, %74
  %83 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %99

99:                                               ; preds = %82, %95, %98
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 1
  %101 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 1
  %102 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %101, %10
  br i1 %102, label %103, label %14

103:                                              ; preds = %99, %4
  %104 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #11
  br label %219

105:                                              ; preds = %2
  %106 = zext i32 %1 to i64
  %107 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %106) #11
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %109 = udiv i64 %107, 88
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %105
  %119 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %112 to i8*
  br label %214

120:                                              ; preds = %105
  %121 = bitcast i8* %108 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %122

122:                                              ; preds = %120, %207
  %123 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %209, %207 ], [ %112, %120 ]
  %124 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %208, %207 ], [ %121, %120 ]
  %125 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %123 to i64*
  %126 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %124 to i64*
  %127 = load i64, i64* %125, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %128, align 8
  %131 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::AtomicString"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.WTF::AtomicString"* %131 to i64*
  store i64 %135, i64* %136, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %137 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 2
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %139 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 2
  %140 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %140, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #11
  %141 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 3
  %142 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 3
  %143 = bitcast i32* %142 to i64*
  %144 = bitcast i32* %141 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 1
  %147 = bitcast i32* %146 to i8*
  %148 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 1
  %149 = bitcast i32* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %149, i64 12, i1 false) #11
  %150 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 5
  %151 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5
  %152 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %151, i64 0, i32 0
  %153 = bitcast %class.scoped_refptr.2* %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %class.scoped_refptr.2* %150 to i64*
  store i64 %154, i64* %155, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %152, align 8
  %156 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 6
  %157 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 6
  %158 = load i8, i8* %157, align 8, !range !22
  store i8 %158, i8* %156, align 8
  %159 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5, i32 0
  %160 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %159, align 8
  %161 = icmp eq %"class.blink::FontVariationSettings"* %160, null
  br i1 %161, label %182, label %162

162:                                              ; preds = %122
  %163 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %160, i64 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %163, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %164) #11
  %165 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %163, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %182

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %163, i64 -4
  %170 = bitcast %"class.base::RefCounted"* %169 to %"class.blink::FontTagValuePair"**
  %171 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %170, align 8
  %172 = icmp eq %"class.blink::FontTagValuePair"* %171, null
  %173 = bitcast %"class.blink::FontTagValuePair"* %171 to i8*
  br i1 %172, label %180, label %174, !prof !2

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %163, i64 -1, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178, !prof !3

178:                                              ; preds = %174
  store i32 0, i32* %175, align 4
  br label %179

179:                                              ; preds = %178, %174
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %173) #11
  br label %180

180:                                              ; preds = %179, %168
  %181 = bitcast %"class.base::RefCounted"* %169 to i8*
  tail call void @free(i8* %181) #11
  br label %182

182:                                              ; preds = %180, %162, %122
  %183 = bitcast %"class.std::__1::basic_string"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  tail call void @_ZdlPv(i8* %189) #12
  br label %190

190:                                              ; preds = %187, %182
  %191 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #11
  br label %207

207:                                              ; preds = %190, %203, %206
  %208 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 1
  %209 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 1
  %210 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %209, %116
  br i1 %210, label %211, label %122

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::Vector.31"* %0 to i8**
  %213 = load i8*, i8** %212, align 8
  br label %214

214:                                              ; preds = %118, %211
  %215 = phi i8* [ %213, %211 ], [ %119, %118 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %215) #11
  %216 = bitcast %"class.WTF::Vector.31"* %0 to i64*
  store atomic i64 %110, i64* %216 monotonic, align 8
  %217 = trunc i64 %109 to i32
  %218 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %217, i32* %218, align 8
  br label %219

219:                                              ; preds = %214, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPS7_RKT0_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %187, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %12 = and i32 %11, %9
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %20 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %21 = icmp ne %"class.blink::FontVariationSettings"* %20, null
  %22 = xor i1 %21, true
  %23 = or i1 %18, %22
  %24 = xor i1 %18, true
  %25 = or i1 %21, %24
  br i1 %23, label %59, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %59

32:                                               ; preds = %26
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %37, align 8
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 %39
  br label %41

41:                                               ; preds = %55, %34
  %42 = phi %"class.blink::FontTagValuePair"* [ %57, %55 ], [ %38, %34 ]
  %43 = phi %"class.blink::FontTagValuePair"* [ %56, %55 ], [ %36, %34 ]
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 1
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 1
  %58 = icmp eq %"class.blink::FontTagValuePair"* %56, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %49, %41, %32, %26, %6
  %60 = phi i1 [ true, %26 ], [ false, %32 ], [ %25, %6 ], [ true, %49 ], [ false, %55 ], [ true, %41 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %61, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #11
  br i1 %63, label %64, label %89

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %89

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 3
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fcmp une float %78, %80
  %82 = or i1 %60, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 6
  %85 = load i8, i8* %84, align 8, !range !22
  %86 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %87 = load i8, i8* %86, align 8, !range !22
  %88 = icmp eq i8 %85, %87
  br i1 %88, label %187, label %89

89:                                               ; preds = %59, %64, %70, %76, %83
  %90 = xor i32 %11, -1
  %91 = lshr i32 %11, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %15) #11
  br i1 %103, label %187, label %104

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  br label %109

109:                                              ; preds = %104, %185
  %110 = phi i64 [ 0, %104 ], [ %113, %185 ]
  %111 = phi i64 [ %13, %104 ], [ %115, %185 ]
  %112 = icmp eq i64 %110, 0
  %113 = select i1 %112, i64 %102, i64 %110
  %114 = add i64 %113, %111
  %115 = and i64 %114, %10
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 5, i32 0
  %119 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %118, align 8
  %120 = icmp eq %"class.blink::FontVariationSettings"* %119, null
  %121 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %122 = icmp ne %"class.blink::FontVariationSettings"* %121, null
  %123 = xor i1 %122, true
  %124 = or i1 %120, %123
  %125 = xor i1 %120, true
  %126 = or i1 %122, %125
  br i1 %124, label %160, label %127

127:                                              ; preds = %109
  %128 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %160

133:                                              ; preds = %127
  %134 = icmp eq i32 %129, 0
  br i1 %134, label %160, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %138, align 8
  %140 = zext i32 %129 to i64
  %141 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %137, i64 %140
  br label %142

142:                                              ; preds = %156, %135
  %143 = phi %"class.blink::FontTagValuePair"* [ %158, %156 ], [ %139, %135 ]
  %144 = phi %"class.blink::FontTagValuePair"* [ %157, %156 ], [ %137, %135 ]
  %145 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %152, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 1
  %158 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 1
  %159 = icmp eq %"class.blink::FontTagValuePair"* %157, %141
  br i1 %159, label %160, label %142

160:                                              ; preds = %156, %150, %142, %133, %127, %109
  %161 = phi i1 [ true, %127 ], [ false, %133 ], [ %126, %109 ], [ true, %150 ], [ false, %156 ], [ true, %142 ]
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 0
  %163 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %162, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #11
  br i1 %163, label %164, label %185

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %105, align 8
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %169, label %185

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %106, align 4
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %185

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 3
  %176 = load float, float* %175, align 8
  %177 = load float, float* %107, align 8
  %178 = fcmp une float %176, %177
  %179 = or i1 %161, %178
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 6
  %182 = load i8, i8* %181, align 8, !range !22
  %183 = load i8, i8* %108, align 8, !range !22
  %184 = icmp eq i8 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %174, %169, %164, %160, %180
  %186 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %117) #11
  br i1 %186, label %187, label %109

187:                                              ; preds = %185, %180, %89, %2, %83
  %188 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %14, %83 ], [ null, %89 ], [ null, %185 ], [ %116, %180 ]
  ret %"struct.WTF::KeyValuePair"* %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [20 x i8], align 8
  %4 = alloca [12 x i8], align 8
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %6 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %5, align 8
  %7 = icmp eq %"class.blink::SimpleFontData"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %6, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #11
  %11 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.7", %"class.base::RefCounted.7"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.7"* %15 to %"class.blink::FontData"*
  %17 = bitcast %"class.base::RefCounted.7"* %15 to void (%"class.blink::FontData"*)***
  %18 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %18, i64 1
  %20 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %19, align 8
  tail call void %20(%"class.blink::FontData"* nonnull %16) #11
  br label %21

21:                                               ; preds = %2, %8, %14
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %22, align 8
  %24 = icmp eq %"class.blink::FontVariationSettings"* %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %23, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #11
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 -4
  %33 = bitcast %"class.base::RefCounted"* %32 to %"class.blink::FontTagValuePair"**
  %34 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %33, align 8
  %35 = icmp eq %"class.blink::FontTagValuePair"* %34, null
  %36 = bitcast %"class.blink::FontTagValuePair"* %34 to i8*
  br i1 %35, label %43, label %37, !prof !2

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 -1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #11
  br label %43

43:                                               ; preds = %42, %31
  %44 = bitcast %"class.base::RefCounted"* %32 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %25, %21
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %51, %45
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #11
  br label %71

71:                                               ; preds = %54, %67, %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.WTF::AtomicString"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 40, i1 false) #11
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  store i32 -1, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %76, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %22, align 8
  %77 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 1
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -1
  store i32 %85, i32* %83, align 4
  %86 = mul i32 %85, 6
  %87 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp ult i32 %86, %88
  %90 = icmp ugt i32 %88, 8
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %118

92:                                               ; preds = %71
  %93 = lshr i32 %88, 1
  %94 = zext i32 %93 to i64
  %95 = mul nuw nsw i64 %94, 88
  %96 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %95, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyE13scoped_refptrINS2_14SimpleFontDataEEEEEEPKcv, i64 0, i64 0)) #11
  %97 = bitcast i8* %96 to %"struct.WTF::KeyValuePair"*
  %98 = icmp eq i32 %93, 0
  br i1 %98, label %116, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0
  %101 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 8
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  br label %103

103:                                              ; preds = %103, %99
  %104 = phi i64 [ 0, %99 ], [ %114, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %100)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %102)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 20, i1 false), !alias.scope !50, !noalias !53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 8 %101, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %102)
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 0, i32 0, i32 0
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 0, i32 1
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast %"class.WTF::AtomicString"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %100, i64 12, i1 false) #11
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 0, i32 5
  %111 = bitcast %class.scoped_refptr.2* %110 to i64*
  store i64 0, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 0, i32 6
  store i8 0, i8* %112, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 %104, i32 1, i32 0
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %100)
  %114 = add nuw nsw i64 %104, 1
  %115 = icmp eq i64 %114, %94
  br i1 %115, label %116, label %103

116:                                              ; preds = %103, %92
  %117 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_13scoped_refptrINS1_14SimpleFontDataEEEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %97, i32 %93, %"struct.WTF::KeyValuePair"* null) #11
  br label %118

118:                                              ; preds = %116, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS4_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %8 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %9 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %8, i32 0) #11
  %10 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %9 to i64
  %11 = sub i64 %7, %10
  %12 = sdiv exact i64 %11, 88
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %13) #11
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %19) #11
  %21 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %17) #11
  %22 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %20, i64 0, i32 1
  store i32 %17, i32* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %21, i64 0, i32 0
  store i32 %19, i32* %23, align 8
  %24 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 15, i1 false), !alias.scope !56
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 12, i1 false), !alias.scope !56
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"class.WTF::AtomicString"* %26 to i64*
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 0, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %44

44:                                               ; preds = %43, %40, %3
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %50, %44
  %54 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* null, i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast i64* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %24, i64 15, i1 false)
  %57 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 47
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 3
  %60 = bitcast i32* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 1
  %62 = bitcast i32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %6, i64 12, i1 false)
  %63 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5
  %64 = bitcast %class.scoped_refptr.2* %63 to i64*
  %65 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %63, i64 0, i32 0
  %66 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %65, align 8
  store i64 0, i64* %64, align 8
  %67 = icmp eq %"class.blink::FontVariationSettings"* %66, null
  br i1 %67, label %88, label %68

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %66, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #11
  %71 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 -4
  %76 = bitcast %"class.base::RefCounted"* %75 to %"class.blink::FontTagValuePair"**
  %77 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %76, align 8
  %78 = icmp eq %"class.blink::FontTagValuePair"* %77, null
  %79 = bitcast %"class.blink::FontTagValuePair"* %77 to i8*
  br i1 %78, label %86, label %80, !prof !2

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 -1, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84, !prof !3

84:                                               ; preds = %80
  store i32 0, i32* %81, align 4
  br label %85

85:                                               ; preds = %84, %80
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #11
  br label %86

86:                                               ; preds = %85, %74
  %87 = bitcast %"class.base::RefCounted"* %75 to i8*
  tail call void @free(i8* %87) #11
  br label %88

88:                                               ; preds = %86, %68, %53
  %89 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 6
  store i8 0, i8* %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6)
  %90 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  store i32 %91, i32* %16, align 4
  store i32 -1, i32* %18, align 8
  store i32 %13, i32* %90, align 8
  %92 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, -1
  store i32 %94, i32* %92, align 4
  %95 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %14, i32 %17) #11
  %96 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %95, 0
  %97 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %96, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.27"*, %"struct.WTF::KeyValuePair.30"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [20 x i8], align 8
  %4 = alloca [12 x i8], align 8
  tail call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"struct.WTF::KeyValuePair.30"* dereferenceable(88) %1)
  %5 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  %8 = and i32 %7, 2147483647
  %9 = and i32 %6, -2147483648
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = mul i32 %13, 6
  %15 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 8
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %46

20:                                               ; preds = %2
  %21 = lshr i32 %16, 1
  %22 = zext i32 %21 to i64
  %23 = mul nuw nsw i64 %22, 88
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyEjEEEEPKcv, i64 0, i64 0)) #11
  %25 = bitcast i8* %24 to %"struct.WTF::KeyValuePair.30"*
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0
  %29 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 8
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  br label %31

31:                                               ; preds = %31, %27
  %32 = phi i64 [ 0, %27 ], [ %42, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 20, i1 false), !alias.scope !59, !noalias !62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 12, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30)
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 0, i32 0, i32 0
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 0, i32 1
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast %"class.WTF::AtomicString"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 40, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %28, i64 12, i1 false) #11
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 0, i32 5
  %39 = bitcast %class.scoped_refptr.2* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 0, i32 6
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %25, i64 %32, i32 1
  store i32 0, i32* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28)
  %42 = add nuw nsw i64 %32, 1
  %43 = icmp eq i64 %42, %22
  br i1 %43, label %44, label %31

44:                                               ; preds = %31, %20
  %45 = tail call %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair.30"* %25, i32 %21, %"struct.WTF::KeyValuePair.30"* null) #11
  br label %46

46:                                               ; preds = %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"struct.WTF::KeyValuePair.30"* dereferenceable(88)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %2, align 8
  %4 = icmp eq %"class.blink::FontVariationSettings"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #11
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 -4
  %13 = bitcast %"class.base::RefCounted"* %12 to %"class.blink::FontTagValuePair"**
  %14 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %13, align 8
  %15 = icmp eq %"class.blink::FontTagValuePair"* %14, null
  %16 = bitcast %"class.blink::FontTagValuePair"* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 -1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #11
  br label %23

23:                                               ; preds = %22, %11
  %24 = bitcast %"class.base::RefCounted"* %12 to i8*
  tail call void @free(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %5, %1
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %31, %25
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %34, %47, %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.WTF::AtomicString"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 40, i1 false) #11
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %0, i64 0, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %56, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.30"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_16FontCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_SB_SC_EES2_EEPS4_RKT0_(%"class.WTF::HashTable.27"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.30"*, %"struct.WTF::KeyValuePair.30"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.30"* %4, null
  br i1 %5, label %187, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #11
  %12 = and i32 %11, %9
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13, i32 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %20 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %21 = icmp ne %"class.blink::FontVariationSettings"* %20, null
  %22 = xor i1 %21, true
  %23 = or i1 %18, %22
  %24 = xor i1 %18, true
  %25 = or i1 %21, %24
  br i1 %23, label %59, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %59

32:                                               ; preds = %26
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %37, align 8
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %36, i64 %39
  br label %41

41:                                               ; preds = %55, %34
  %42 = phi %"class.blink::FontTagValuePair"* [ %57, %55 ], [ %38, %34 ]
  %43 = phi %"class.blink::FontTagValuePair"* [ %56, %55 ], [ %36, %34 ]
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %43, i64 1
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %42, i64 1
  %58 = icmp eq %"class.blink::FontTagValuePair"* %56, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %49, %41, %32, %26, %6
  %60 = phi i1 [ true, %26 ], [ false, %32 ], [ %25, %6 ], [ true, %49 ], [ false, %55 ], [ true, %41 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %14, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %61, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #11
  br i1 %63, label %64, label %89

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %89

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13, i32 0, i32 3
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fcmp une float %78, %80
  %82 = or i1 %60, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %13, i32 0, i32 6
  %85 = load i8, i8* %84, align 8, !range !22
  %86 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %87 = load i8, i8* %86, align 8, !range !22
  %88 = icmp eq i8 %85, %87
  br i1 %88, label %187, label %89

89:                                               ; preds = %59, %64, %70, %76, %83
  %90 = xor i32 %11, -1
  %91 = lshr i32 %11, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %15) #11
  br i1 %103, label %187, label %104

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  br label %109

109:                                              ; preds = %104, %185
  %110 = phi i64 [ 0, %104 ], [ %113, %185 ]
  %111 = phi i64 [ %13, %104 ], [ %115, %185 ]
  %112 = icmp eq i64 %110, 0
  %113 = select i1 %112, i64 %102, i64 %110
  %114 = add i64 %113, %111
  %115 = and i64 %114, %10
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %116, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115, i32 0, i32 5, i32 0
  %119 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %118, align 8
  %120 = icmp eq %"class.blink::FontVariationSettings"* %119, null
  %121 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %122 = icmp ne %"class.blink::FontVariationSettings"* %121, null
  %123 = xor i1 %122, true
  %124 = or i1 %120, %123
  %125 = xor i1 %120, true
  %126 = or i1 %122, %125
  br i1 %124, label %160, label %127

127:                                              ; preds = %109
  %128 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %160

133:                                              ; preds = %127
  %134 = icmp eq i32 %129, 0
  br i1 %134, label %160, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %138, align 8
  %140 = zext i32 %129 to i64
  %141 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %137, i64 %140
  br label %142

142:                                              ; preds = %156, %135
  %143 = phi %"class.blink::FontTagValuePair"* [ %158, %156 ], [ %139, %135 ]
  %144 = phi %"class.blink::FontTagValuePair"* [ %157, %156 ], [ %137, %135 ]
  %145 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %152, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %144, i64 1
  %158 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %143, i64 1
  %159 = icmp eq %"class.blink::FontTagValuePair"* %157, %141
  br i1 %159, label %160, label %142

160:                                              ; preds = %156, %150, %142, %133, %127, %109
  %161 = phi i1 [ true, %127 ], [ false, %133 ], [ %126, %109 ], [ true, %150 ], [ false, %156 ], [ true, %142 ]
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %116, i64 0, i32 0, i32 0
  %163 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %162, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #11
  br i1 %163, label %164, label %185

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %105, align 8
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %169, label %185

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %106, align 4
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %185

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115, i32 0, i32 3
  %176 = load float, float* %175, align 8
  %177 = load float, float* %107, align 8
  %178 = fcmp une float %176, %177
  %179 = or i1 %161, %178
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair.30", %"struct.WTF::KeyValuePair.30"* %4, i64 %115, i32 0, i32 6
  %182 = load i8, i8* %181, align 8, !range !22
  %183 = load i8, i8* %108, align 8, !range !22
  %184 = icmp eq i8 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %174, %169, %164, %160, %180
  %186 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %117) #11
  br i1 %186, label %187, label %109

187:                                              ; preds = %185, %180, %89, %2, %83
  %188 = phi %"struct.WTF::KeyValuePair.30"* [ null, %2 ], [ %14, %83 ], [ null, %89 ], [ null, %185 ], [ %116, %180 ]
  ret %"struct.WTF::KeyValuePair.30"* %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEE5clearEv(%"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %6, label %81

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %10, label %71

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %13
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 1
  br label %16

16:                                               ; preds = %67, %10
  %17 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %68, %67 ], [ %15, %10 ]
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 2, i32 5, i32 0
  %19 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %18, align 8
  %20 = icmp eq %"class.blink::FontVariationSettings"* %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %19, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 -4
  %29 = bitcast %"class.base::RefCounted"* %28 to %"class.blink::FontTagValuePair"**
  %30 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %29, align 8
  %31 = icmp eq %"class.blink::FontTagValuePair"* %30, null
  %32 = bitcast %"class.blink::FontTagValuePair"* %30 to i8*
  br i1 %31, label %39, label %33, !prof !2

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 -1, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #11
  br label %39

39:                                               ; preds = %38, %27
  %40 = bitcast %"class.base::RefCounted"* %28 to i8*
  tail call void @free(i8* %40) #11
  br label %41

41:                                               ; preds = %39, %21, %16
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 2, i32 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %47, %41
  %51 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %50, %63, %66
  %68 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 1
  %69 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %68, %14
  br i1 %69, label %70, label %16

70:                                               ; preds = %67
  store i32 1, i32* %7, align 4
  br label %71

71:                                               ; preds = %70, %6
  %72 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 88) #11
  %73 = load i32, i32* %3, align 8
  %74 = zext i32 %73 to i64
  %75 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %74) #11
  %76 = icmp eq i64 %75, %72
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = udiv i64 %72, 88
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %3, align 8
  br label %81

80:                                               ; preds = %71
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.31"* %2, i32 1) #11
  br label %81

81:                                               ; preds = %1, %77, %80
  %82 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %2, i32 0) #11
  %83 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %82, i64 0, i32 0
  store i32 0, i32* %83, align 8
  %84 = tail call dereferenceable(88) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.31"* %2, i32 0) #11
  %85 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %84, i64 0, i32 1
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  store i32 0, i32* %87, align 4
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE5beginEv"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE3endEv"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE: argument 0"}
!15 = distinct !{!15, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE3endEv"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE: argument 0"}
!21 = distinct !{!21, !"_ZNK3WTF13LinkedHashSetIN5blink12FontCacheKeyENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS2_S5_EEEE"}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_I13scoped_refptrINS2_14SimpleFontDataEEEEE10EmptyValueEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!58 = distinct !{!58, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!61 = distinct !{!61, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv: argument 0"}
!64 = distinct !{!64, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_IjEEE10EmptyValueEv"}
