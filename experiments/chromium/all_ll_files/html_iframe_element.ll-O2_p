; ModuleID = '../../third_party/blink/renderer/core/html/html_iframe_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_iframe_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1984", i32, i32, %"class.blink::Persistent.1986" }
%"class.WTF::RefCounted.1984" = type { %"class.base::RefCounted.1985" }
%"class.base::RefCounted.1985" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1986" = type { %"class.blink::PersistentBase.1987" }
%"class.blink::PersistentBase.1987" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1990" }
%"class.blink::HeapHashMap.1990" = type { %"class.WTF::HashMap.1993" }
%"class.WTF::HashMap.1993" = type { %"class.WTF::HashTable.1994" }
%"class.WTF::HashTable.1994" = type <{ %"struct.WTF::KeyValuePair.1996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1996" = type { %"class.blink::WeakMember.1997", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.1195" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.981", i32, [4 x i8], %"class.std::__1::unique_ptr.1119", %"class.std::__1::unique_ptr.1119", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1130", %"class.std::__1::unique_ptr.1136", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1148", %"class.std::__1::unique_ptr.1154", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.353", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.984", %"class.std::__1::unique_ptr.990", %"class.std::__1::unique_ptr.996", %"class.std::__1::unique_ptr.1002", %"class.std::__1::unique_ptr.1008", %"class.std::__1::unique_ptr.1014", %"class.std::__1::unique_ptr.1025", %"class.std::__1::unique_ptr.1032", %"class.std::__1::unique_ptr.1032", %"class.std::__1::unique_ptr.1039", %"class.std::__1::unique_ptr.1046", %"class.std::__1::unique_ptr.1053", %"class.std::__1::unique_ptr.1053", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.1074", %"class.std::__1::unique_ptr.1099", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1014" = type { %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1017" = type { %"struct.std::__1::__atomic_base.1018" }
%"struct.std::__1::__atomic_base.1018" = type { %"struct.std::__1::__atomic_base.1019" }
%"struct.std::__1::__atomic_base.1019" = type { %"struct.std::__1::__cxx_atomic_impl.1020" }
%"struct.std::__1::__cxx_atomic_impl.1020" = type { %"struct.std::__1::__cxx_atomic_base_impl.1021" }
%"struct.std::__1::__cxx_atomic_base_impl.1021" = type { i64 }
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.blink::Worklist.1028"* }
%"class.blink::Worklist.1028" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::Worklist.1035"* }
%"class.blink::Worklist.1035" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::Worklist.1042"* }
%"class.blink::Worklist.1042" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.blink::Worklist.1049"* }
%"class.blink::Worklist.1049" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::Worklist.1056"* }
%"class.blink::Worklist.1056" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.blink::Worklist.1063"* }
%"class.blink::Worklist.1063" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.blink::Worklist.1070"* }
%"class.blink::Worklist.1070" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1017" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1077", %"class.std::__1::__compressed_pair.1085", %"class.std::__1::__compressed_pair.1090", %"class.std::__1::__compressed_pair.1092", [4 x i8] }>
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079", %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64 }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { float }
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1102", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1111" }
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113" }
%"class.WTF::VectorBufferBase.1113" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { %"struct.std::__1::pair.1129"*, i32, i32 }
%"struct.std::__1::pair.1129" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1142" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1028"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1035"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1042"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1049"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1056"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2228", i64 }
%"class.std::__1::vector.2228" = type { %"class.std::__1::__vector_base.2229" }
%"class.std::__1::__vector_base.2229" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2230" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2230" = type { %"struct.std::__1::__compressed_pair_elem.2231" }
%"struct.std::__1::__compressed_pair_elem.2231" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1160 }
%class.scoped_refptr.1160 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.353" = type { %"struct.std::__1::__atomic_base.354" }
%"struct.std::__1::__atomic_base.354" = type { %"struct.std::__1::__cxx_atomic_impl.355" }
%"struct.std::__1::__cxx_atomic_impl.355" = type { %"struct.std::__1::__cxx_atomic_base_impl.356" }
%"struct.std::__1::__cxx_atomic_base_impl.356" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.196" }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"class.blink::HTMLIFrameElement" = type <{ %"class.blink::HTMLFrameElementBase", %"class.blink::Supplementable", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i8, i8, [5 x i8], %"class.blink::Member.49", %"class.blink::Member.53", i32, [4 x i8] }>
%"class.blink::HTMLFrameElementBase" = type { %"class.blink::HTMLFrameOwnerElement.base", i32, i32, i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1242", %"class.blink::Member.1244", %"class.blink::Member.0", %"class.blink::Member.1246", %"class.blink::Member.1246", %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.blink::Member.1272", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1277", %"class.blink::HeapVector.1279" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::Document"* }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1250" }
%"class.blink::HeapHashMap.1250" = type { %"class.WTF::HashMap.1253" }
%"class.WTF::HashMap.1253" = type { %"class.WTF::HashTable.1254" }
%"class.WTF::HashTable.1254" = type <{ %"struct.WTF::KeyValuePair.1256"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1256" = type { %"class.WTF::AtomicString", %"class.blink::Member.1257" }
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.51", i32, %"class.blink::HeapVector.1261" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.1261" = type { %"class.WTF::Vector.1264" }
%"class.WTF::Vector.1264" = type { %"class.WTF::VectorBuffer.1265" }
%"class.WTF::VectorBuffer.1265" = type { %"class.WTF::VectorBufferBase.1266" }
%"class.WTF::VectorBufferBase.1266" = type { %"class.blink::Member.51"*, i32, i32 }
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1274" }
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::HeapHashMap.1276"* }
%"class.blink::HeapHashMap.1276" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"class.blink::Member.1285"*, i32, i32 }
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.300", %"class.blink::Member.302", %"class.blink::Member.304", i8, i32, i8, i32, %"class.blink::Member.440", %"class.blink::Member.327", %"class.blink::FrameLifecycle", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.442", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.444", i8, %"class.base::UnguessableToken", %"class.absl::optional.446", %"class.absl::optional.451", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.19", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.19", %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::Member.331", i8, %"class.WTF::Vector.333" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.320" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.308" }
%"class.blink::HeapVector.308" = type { %"class.WTF::Vector.311" }
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313", [32 x i8] }
%"class.WTF::VectorBufferBase.313" = type { %"struct.std::__1::pair.314"*, i32, i32 }
%"struct.std::__1::pair.314" = type { %"class.WTF::AtomicString", %"class.blink::Member.315" }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::HeapVector.317"* }
%"class.blink::HeapVector.317" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.WTF::Vector.323"* }
%"class.WTF::Vector.323" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.333" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.432" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.336, %"class.std::__1::unique_ptr.192", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.211, i32 }>
%class.scoped_refptr.336 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.211, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.398", %"class.absl::optional.403", %"class.absl::optional.357", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.423", i8, [7 x i8], %class.scoped_refptr.211, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.232" }>
%"class.base::RefCountedThreadSafe.232" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.196" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.248" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.248" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.213 }
%class.scoped_refptr.213 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.214", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.214" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.215" }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.220", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.211, %"class.std::__1::unique_ptr.337", %"class.absl::optional.347", %"struct.std::__1::atomic.353", i8, i8, i8, i8, i32, i32, %"class.absl::optional.357", %"class.std::__1::unique_ptr.362", i8, i64, %class.scoped_refptr.395, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.397" }
%"class.base::OnceCallback.220" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.211, i8, %"class.mojo::ScopedHandleBase.340", %class.scoped_refptr.341, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.342", i8*, %"class.base::WeakPtrFactory.343" }
%"class.mojo::ScopedHandleBase.340" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.341 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.342" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.343" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.347" = type { %"class.absl::optional_internal::optional_data.348" }
%"class.absl::optional_internal::optional_data.348" = type { %"class.absl::optional_internal::optional_data_base.349" }
%"class.absl::optional_internal::optional_data_base.349" = type { %"class.absl::optional_internal::optional_data_dtor_base.350" }
%"class.absl::optional_internal::optional_data_dtor_base.350" = type { i8, %union.anon.351 }
%union.anon.351 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.352", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.352" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.365", i8, i64, %class.scoped_refptr.366, %class.scoped_refptr.391 }
%"class.base::RepeatingCallback.365" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.366 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.367", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.369", %"class.std::__1::map.380", i8, [7 x i8] }>
%"class.base::RefCounted.367" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.369" = type { %"class.std::__1::__tree.370" }
%"class.std::__1::__tree.370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.380" = type { %"class.std::__1::__tree.381" }
%"class.std::__1::__tree.381" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%class.scoped_refptr.391 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.395 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.225 }
%class.scoped_refptr.225 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.297", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.211, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.297" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.396 }
%class.scoped_refptr.396 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.398" = type { %"class.absl::optional_internal::optional_data.399" }
%"class.absl::optional_internal::optional_data.399" = type { %"class.absl::optional_internal::optional_data_base.400" }
%"class.absl::optional_internal::optional_data_base.400" = type { %"class.absl::optional_internal::optional_data_dtor_base.401" }
%"class.absl::optional_internal::optional_data_dtor_base.401" = type { i8, %union.anon.402 }
%union.anon.402 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, [7 x i8], %union.anon.407 }
%union.anon.407 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.408 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.408 = type { %"class.std::__1::map.411" }
%"class.std::__1::map.411" = type { %"class.std::__1::__tree.412" }
%"class.std::__1::__tree.412" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.422"*, i64 }
%"class.std::__1::unique_ptr.422" = type opaque
%"class.std::__1::map.423" = type { %"class.std::__1::__tree.424" }
%"class.std::__1::__tree.424" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.201", %"class.absl::optional.206", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.227", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.249", %"class.std::__1::map.260", i64, %"class.base::OnceCallback.220", %"class.base::OnceCallback.269", i8, %class.scoped_refptr.211, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.270" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.201" = type { %"class.absl::optional_internal::optional_data.202" }
%"class.absl::optional_internal::optional_data.202" = type { %"class.absl::optional_internal::optional_data_base.203" }
%"class.absl::optional_internal::optional_data_base.203" = type { %"class.absl::optional_internal::optional_data_dtor_base.204" }
%"class.absl::optional_internal::optional_data_dtor_base.204" = type { i8, %union.anon.205 }
%union.anon.205 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.206" = type { %"class.absl::optional_internal::optional_data.207" }
%"class.absl::optional_internal::optional_data.207" = type { %"class.absl::optional_internal::optional_data_base.208" }
%"class.absl::optional_internal::optional_data_base.208" = type { %"class.absl::optional_internal::optional_data_dtor_base.209" }
%"class.absl::optional_internal::optional_data_dtor_base.209" = type { i8, %union.anon.210 }
%union.anon.210 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.220" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.211, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.226 }
%class.scoped_refptr.226 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.230", %class.scoped_refptr.231 }
%"class.base::RepeatingCallback.230" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.231 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.232", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.249" = type { %"class.std::__1::__tree.250" }
%"class.std::__1::__tree.250" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.260" = type { %"class.std::__1::__tree.261" }
%"class.std::__1::__tree.261" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::OnceCallback.269" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.220" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.270" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.211 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.212" }>
%"class.base::RefCountedThreadSafe.212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.464", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.472", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.486", %"class.blink::FrameLoader", %"class.blink::Member.513", %"class.blink::Member.51", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::Member.519", %"class.blink::Member.521", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.523", %class.scoped_refptr.743, %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", %"class.blink::Member.752", %"class.blink::Member.756", %"class.blink::Member.758", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.762", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.768", %"class.std::__1::unique_ptr.769", %"class.absl::optional.451", i32, [4 x i8], %"class.std::__1::unique_ptr.775", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.783", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.788", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.793", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.800", %"class.blink::Member.802", %"class.mojo::StructPtr.805", %"class.blink::Member.814", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.816", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.464" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.465" }
%"class.blink::HeapHashMap.465" = type { %"class.WTF::HashMap.468" }
%"class.WTF::HashMap.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"struct.WTF::KeyValuePair.471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.471" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.475", %"class.base::WeakPtrFactory.480" }
%"class.WTF::HashMap.475" = type { %"class.WTF::HashTable.476" }
%"class.WTF::HashTable.476" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%"class.base::WeakPtrFactory.480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.484" }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2704" }
%"class.blink::WeakMember.2704" = type { %"class.blink::MemberBase.2705" }
%"class.blink::MemberBase.2705" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.67" }
%"class.WTF::HashTable.67" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2706", i64, %"class.std::__1::map.2707", i8*, i64, %"class.base::WeakPtrFactory.2716" }
%"class.base::RepeatingCallback.2706" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2707" = type { %"class.std::__1::__tree.2708" }
%"class.std::__1::__tree.2708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2709", %"class.std::__1::__compressed_pair.2713" }
%"class.std::__1::__compressed_pair.2709" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.2713" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::WeakPtrFactory.2716" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.486" = type { %"class.WTF::HashSet.489" }
%"class.WTF::HashSet.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"class.blink::WeakMember.492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.492" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.442", %"class.blink::Member.493", %"class.blink::Member.495", %"class.std::__1::unique_ptr.497", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.509" }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2239", %"class.blink::Member.2244", %"class.std::__1::unique_ptr.2246", %"class.std::__1::unique_ptr.142", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2417, %"class.WTF::AtomicString", i32, %"class.absl::optional.2321", %class.scoped_refptr.80, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2286", i8, %"class.absl::optional.2293", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.442", %"class.blink::Member.2418", %"class.blink::Member.1964", %"class.blink::Member.2491", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2493", %class.scoped_refptr.77, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2506", %"class.std::__1::unique_ptr.2298", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2508", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2513, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2527, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2528", %"class.blink::Member.2543", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2556", %"class.WTF::Vector.172", i8, i8, i8, %"class.blink::WebVector.2406", %"class.blink::WebVector.2406", %"class.mojo::Remote.2561" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2239" = type { %"class.WTF::VectorBuffer.2240" }
%"class.WTF::VectorBuffer.2240" = type { %"class.WTF::VectorBufferBase.2241" }
%"class.WTF::VectorBufferBase.2241" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2246" = type { %"class.std::__1::__compressed_pair.2247" }
%"class.std::__1::__compressed_pair.2247" = type { %"struct.std::__1::__compressed_pair_elem.2248" }
%"struct.std::__1::__compressed_pair_elem.2248" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2286", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2293", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2298", %"class.base::UnguessableToken", %"class.blink::WebVector.2304", %"class.base::TickClock"*, %"class.blink::WebVector.2313", %"class.absl::optional.2321", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2334", %"class.blink::WebVector.2326", i8, %"class.blink::WebVector.2339", i8, %"class.std::__1::unique_ptr.2347", %"class.blink::WebVector.2406", %"class.blink::WebVector.2406" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2250" }
%"class.std::__1::vector.2250" = type { %"class.std::__1::__vector_base.2251" }
%"class.std::__1::__vector_base.2251" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2281" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2281" = type { %"struct.std::__1::__compressed_pair_elem.2282" }
%"struct.std::__1::__compressed_pair_elem.2282" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2252", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2292", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2292" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2249" }
%"class.blink::WebPrivatePtr.2249" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2304" = type { %"class.std::__1::vector.2305" }
%"class.std::__1::vector.2305" = type { %"class.std::__1::__vector_base.2306" }
%"class.std::__1::__vector_base.2306" = type { %"class.std::__1::unique_ptr.2307"*, %"class.std::__1::unique_ptr.2307"*, %"class.std::__1::__compressed_pair.2308" }
%"class.std::__1::unique_ptr.2307" = type opaque
%"class.std::__1::__compressed_pair.2308" = type { %"struct.std::__1::__compressed_pair_elem.2309" }
%"struct.std::__1::__compressed_pair_elem.2309" = type { %"class.std::__1::unique_ptr.2307"* }
%"class.blink::WebVector.2313" = type { %"class.std::__1::vector.2314" }
%"class.std::__1::vector.2314" = type { %"class.std::__1::__vector_base.2315" }
%"class.std::__1::__vector_base.2315" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2334" = type { %"class.absl::optional_internal::optional_data.2335" }
%"class.absl::optional_internal::optional_data.2335" = type { %"class.absl::optional_internal::optional_data_base.2336" }
%"class.absl::optional_internal::optional_data_base.2336" = type { %"class.absl::optional_internal::optional_data_dtor_base.2337" }
%"class.absl::optional_internal::optional_data_dtor_base.2337" = type { i8, [7 x i8], %union.anon.2338 }
%union.anon.2338 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2326" = type { %"class.std::__1::vector.2327" }
%"class.std::__1::vector.2327" = type { %"class.std::__1::__vector_base.2328" }
%"class.std::__1::__vector_base.2328" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2329" }
%"class.std::__1::__compressed_pair.2329" = type { %"struct.std::__1::__compressed_pair_elem.2330" }
%"struct.std::__1::__compressed_pair_elem.2330" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2339" = type { %"class.std::__1::vector.2340" }
%"class.std::__1::vector.2340" = type { %"class.std::__1::__vector_base.2341" }
%"class.std::__1::__vector_base.2341" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2342" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.2343" }
%"struct.std::__1::__compressed_pair_elem.2343" = type { i32* }
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2349" }
%"struct.std::__1::__compressed_pair_elem.2349" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2350" }
%"class.blink::WebVector.2350" = type { %"class.std::__1::vector.2351" }
%"class.std::__1::vector.2351" = type { %"class.std::__1::__vector_base.2352" }
%"class.std::__1::__vector_base.2352" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2398" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2353", %"class.blink::WebVector.2361", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2326", i32, [4 x i8], %"class.absl::optional.2393", %"class.blink::WebVector.2326" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2353" = type { %"class.std::__1::vector.2354" }
%"class.std::__1::vector.2354" = type { %"class.std::__1::__vector_base.2355" }
%"class.std::__1::__vector_base.2355" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2356" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2356" = type { %"struct.std::__1::__compressed_pair_elem.2357" }
%"struct.std::__1::__compressed_pair_elem.2357" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2361" = type { %"class.std::__1::vector.2362" }
%"class.std::__1::vector.2362" = type { %"class.std::__1::__vector_base.2363" }
%"class.std::__1::__vector_base.2363" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2388" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2364", %"class.blink::WebVector.2326", %"class.blink::WebVector.2372", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2364" = type { %"class.std::__1::vector.2365" }
%"class.std::__1::vector.2365" = type { %"class.std::__1::__vector_base.2366" }
%"class.std::__1::__vector_base.2366" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2367" }
%"class.std::__1::__compressed_pair.2367" = type { %"struct.std::__1::__compressed_pair_elem.2368" }
%"struct.std::__1::__compressed_pair_elem.2368" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2372" = type { %"class.std::__1::vector.2373" }
%"class.std::__1::vector.2373" = type { %"class.std::__1::__vector_base.2374" }
%"class.std::__1::__vector_base.2374" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2383" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2375" }
%"class.blink::WebVector.2375" = type { %"class.std::__1::vector.2376" }
%"class.std::__1::vector.2376" = type { %"class.std::__1::__vector_base.2377" }
%"class.std::__1::__vector_base.2377" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2378" }
%"class.std::__1::__compressed_pair.2378" = type { %"struct.std::__1::__compressed_pair_elem.2379" }
%"struct.std::__1::__compressed_pair_elem.2379" = type { i8* }
%"class.std::__1::__compressed_pair.2383" = type { %"struct.std::__1::__compressed_pair_elem.2384" }
%"struct.std::__1::__compressed_pair_elem.2384" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.2389" }
%"struct.std::__1::__compressed_pair_elem.2389" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2393" = type { %"class.absl::optional_internal::optional_data.2394" }
%"class.absl::optional_internal::optional_data.2394" = type { %"class.absl::optional_internal::optional_data_base.2395" }
%"class.absl::optional_internal::optional_data_base.2395" = type { %"class.absl::optional_internal::optional_data_dtor_base.2396" }
%"class.absl::optional_internal::optional_data_dtor_base.2396" = type { i8, [7 x i8], %union.anon.2397 }
%union.anon.2397 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2326", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.2399" }
%"struct.std::__1::__compressed_pair_elem.2399" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.148" }
%"class.WTF::Vector.148" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"class.mojo::StructPtr.151"*, i32, i32 }
%"class.mojo::StructPtr.151" = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.155", %"class.WTF::HashMap.162", %"class.WTF::HashMap.167", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.172", i32, %"class.mojo::StructPtr.177", %"class.WTF::Vector.172" }
%"class.mojo::StructPtr.155" = type { %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.162" = type { %"class.WTF::HashTable.163" }
%"class.WTF::HashTable.163" = type <{ %"struct.WTF::KeyValuePair.166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.166" = type opaque
%"class.WTF::HashMap.167" = type { %"class.WTF::HashTable.168" }
%"class.WTF::HashTable.168" = type <{ %"struct.WTF::KeyValuePair.171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.171" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.177" = type { %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.172", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.274" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.192", i32 }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2417 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2321" = type { %"class.absl::optional_internal::optional_data.2322" }
%"class.absl::optional_internal::optional_data.2322" = type { %"class.absl::optional_internal::optional_data_base.2323" }
%"class.absl::optional_internal::optional_data_base.2323" = type { %"class.absl::optional_internal::optional_data_dtor_base.2324" }
%"class.absl::optional_internal::optional_data_dtor_base.2324" = type { i8, %union.anon.2325 }
%union.anon.2325 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2326", %"class.blink::WebString", %"class.blink::WebVector.2326", %"class.blink::WebVector.2326" }
%class.scoped_refptr.80 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.78", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.80 }
%"class.WTF::RefCounted.78" = type { %"class.base::RefCounted.79" }
%"class.base::RefCounted.79" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2286" = type { %"class.std::__1::__compressed_pair.2287" }
%"class.std::__1::__compressed_pair.2287" = type { %"struct.std::__1::__compressed_pair_elem.2288" }
%"struct.std::__1::__compressed_pair_elem.2288" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2293" = type { %"class.absl::optional_internal::optional_data.2294" }
%"class.absl::optional_internal::optional_data.2294" = type { %"class.absl::optional_internal::optional_data_base.2295" }
%"class.absl::optional_internal::optional_data_base.2295" = type { %"class.absl::optional_internal::optional_data_dtor_base.2296" }
%"class.absl::optional_internal::optional_data_dtor_base.2296" = type { i8, %union.anon.2297 }
%union.anon.2297 = type { i32 }
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.172", %"class.blink::Member.2422", %"class.absl::optional.2424", i64, i64, i32, %class.scoped_refptr.2429, %class.scoped_refptr.2417, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2429 }
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2424" = type { %"class.absl::optional_internal::optional_data.2425" }
%"class.absl::optional_internal::optional_data.2425" = type { %"class.absl::optional_internal::optional_data_base.2426" }
%"class.absl::optional_internal::optional_data_base.2426" = type { %"class.absl::optional_internal::optional_data_dtor_base.2427" }
%"class.absl::optional_internal::optional_data_dtor_base.2427" = type { i8, %union.anon.2428 }
%union.anon.2428 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2429 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2430", [4 x i8], %"class.std::__1::unique_ptr.2432", i64, %"class.WTF::Vector.2435", %"class.WTF::Vector.2440", %"class.WTF::Vector.2446", %"class.WTF::Vector.2464", %class.scoped_refptr.77, %"class.WTF::HashMap.2470", %"class.WTF::Vector.2475", %"class.WTF::Vector.2435", %"class.WTF::Vector.2481", %"class.WTF::HashMap.2486", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2430" = type { %"class.base::RefCountedThreadSafe.2431" }
%"class.base::RefCountedThreadSafe.2431" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2432" = type { %"class.std::__1::__compressed_pair.2433" }
%"class.std::__1::__compressed_pair.2433" = type { %"struct.std::__1::__compressed_pair_elem.2379" }
%"class.WTF::Vector.2440" = type { %"class.WTF::VectorBuffer.2441" }
%"class.WTF::VectorBuffer.2441" = type { %"class.WTF::VectorBufferBase.2442", [8 x i8] }
%"class.WTF::VectorBufferBase.2442" = type { %class.scoped_refptr.2443*, i32, i32 }
%class.scoped_refptr.2443 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2446" = type { %"class.WTF::VectorBuffer.2447" }
%"class.WTF::VectorBuffer.2447" = type { %"class.WTF::VectorBufferBase.2448" }
%"class.WTF::VectorBufferBase.2448" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2450", %"class.std::__1::unique_ptr.2456" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2449 }
%class.scoped_refptr.2449 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2450" = type { %"class.std::__1::__compressed_pair.2451" }
%"class.std::__1::__compressed_pair.2451" = type { %"struct.std::__1::__compressed_pair_elem.2452" }
%"struct.std::__1::__compressed_pair_elem.2452" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2456" = type { %"class.std::__1::__compressed_pair.2457" }
%"class.std::__1::__compressed_pair.2457" = type { %"struct.std::__1::__compressed_pair_elem.2458" }
%"struct.std::__1::__compressed_pair_elem.2458" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2464" = type { %"class.WTF::VectorBuffer.2465" }
%"class.WTF::VectorBuffer.2465" = type { %"class.WTF::VectorBufferBase.2466" }
%"class.WTF::VectorBufferBase.2466" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2467", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2467" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2470" = type { %"class.WTF::HashTable.2471" }
%"class.WTF::HashTable.2471" = type <{ %"struct.WTF::KeyValuePair.2474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2474" = type opaque
%"class.WTF::Vector.2475" = type { %"class.WTF::VectorBuffer.2476" }
%"class.WTF::VectorBuffer.2476" = type { %"class.WTF::VectorBufferBase.2477" }
%"class.WTF::VectorBufferBase.2477" = type { %"class.mojo::ScopedHandleBase.2478"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2478" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2435" = type { %"class.WTF::VectorBuffer.2436" }
%"class.WTF::VectorBuffer.2436" = type { %"class.WTF::VectorBufferBase.2437", [16 x i8] }
%"class.WTF::VectorBufferBase.2437" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2481" = type { %"class.WTF::VectorBuffer.2482" }
%"class.WTF::VectorBuffer.2482" = type { %"class.WTF::VectorBufferBase.2483" }
%"class.WTF::VectorBufferBase.2483" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2486" = type { %"class.WTF::HashTable.2487" }
%"class.WTF::HashTable.2487" = type <{ %"struct.WTF::KeyValuePair.2490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2490" = type { i8**, %"class.std::__1::unique_ptr.2692" }
%"class.std::__1::unique_ptr.2692" = type { %"class.std::__1::__compressed_pair.2693" }
%"class.std::__1::__compressed_pair.2693" = type { %"struct.std::__1::__compressed_pair_elem.2694" }
%"struct.std::__1::__compressed_pair_elem.2694" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2261", %class.scoped_refptr.2271, %class.scoped_refptr.2272, %"struct.blink::CacheControlHeader", %"class.absl::optional.201", %"class.absl::optional.1923", %"class.absl::optional.1923", %"class.absl::optional.1923", i64, %"class.blink::KURL", %"class.WTF::Vector.2239", %"class.WTF::String", %"class.WTF::Vector.172", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.451", %"class.WTF::Vector.172", %"class.blink::KURL", %"class.absl::optional.2273" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2255" }
%"class.WTF::HashMap.2255" = type { %"class.WTF::HashTable.2256" }
%"class.WTF::HashTable.2256" = type <{ %"struct.WTF::KeyValuePair.2259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2259" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2260", i8 }
%"struct.std::__1::array.2260" = type { [16 x i8] }
%"class.absl::optional.2261" = type { %"class.absl::optional_internal::optional_data.2262" }
%"class.absl::optional_internal::optional_data.2262" = type { %"class.absl::optional_internal::optional_data_base.2263" }
%"class.absl::optional_internal::optional_data_base.2263" = type { %"class.absl::optional_internal::optional_data_dtor_base.2264" }
%"class.absl::optional_internal::optional_data_dtor_base.2264" = type { i8, %union.anon.2265 }
%union.anon.2265 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.172", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1213", %"class.WTF::Vector.2266" }
%"class.WTF::Vector.1213" = type { %"class.WTF::VectorBuffer.1214" }
%"class.WTF::VectorBuffer.1214" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2266" = type { %"class.WTF::VectorBuffer.2267" }
%"class.WTF::VectorBuffer.2267" = type { %"class.WTF::VectorBufferBase.2268" }
%"class.WTF::VectorBufferBase.2268" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2271 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2272 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.201", %"class.absl::optional.201" }
%"class.absl::optional.1923" = type { %"class.absl::optional_internal::optional_data.1924" }
%"class.absl::optional_internal::optional_data.1924" = type { %"class.absl::optional_internal::optional_data_base.1925" }
%"class.absl::optional_internal::optional_data_base.1925" = type { %"class.absl::optional_internal::optional_data_dtor_base.1926" }
%"class.absl::optional_internal::optional_data_dtor_base.1926" = type { i8, %union.anon.1927 }
%union.anon.1927 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1916" }
%"class.base::time_internal::TimeBase.1916" = type { i64 }
%"class.absl::optional.2273" = type { %"class.absl::optional_internal::optional_data.2274" }
%"class.absl::optional_internal::optional_data.2274" = type { %"class.absl::optional_internal::optional_data_base.2275" }
%"class.absl::optional_internal::optional_data_base.2275" = type { %"class.absl::optional_internal::optional_data_dtor_base.2276" }
%"class.absl::optional_internal::optional_data_dtor_base.2276" = type { i8, %union.anon.2277 }
%union.anon.2277 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::Remote.2493" = type { %"class.mojo::internal::InterfacePtrState.2494" }
%"class.mojo::internal::InterfacePtrState.2494" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2495" }
%"class.std::__1::unique_ptr.2495" = type { %"class.std::__1::__compressed_pair.2496" }
%"class.std::__1::__compressed_pair.2496" = type { %"struct.std::__1::__compressed_pair_elem.2497" }
%"struct.std::__1::__compressed_pair_elem.2497" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.77 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.201", %"class.absl::optional.201", %"class.absl::optional.201", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2501", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.495" }
%"class.WTF::Vector.2501" = type { %"class.WTF::VectorBuffer.2502" }
%"class.WTF::VectorBuffer.2502" = type { %"class.WTF::VectorBufferBase.2503" }
%"class.WTF::VectorBufferBase.2503" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2506" = type { %"class.blink::MemberBase.2507" }
%"class.blink::MemberBase.2507" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2298" = type { %"class.std::__1::__compressed_pair.2299" }
%"class.std::__1::__compressed_pair.2299" = type { %"struct.std::__1::__compressed_pair_elem.2300" }
%"struct.std::__1::__compressed_pair_elem.2300" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.105" }
%"class.base::flat_map.105" = type { %"class.base::internal::flat_tree.106" }
%"class.base::internal::flat_tree.106" = type { %"class.std::__1::vector.107" }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.std::__1::pair.109"*, %"struct.std::__1::pair.109"*, %"class.std::__1::__compressed_pair.110" }
%"struct.std::__1::pair.109" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::pair.109"* }
%"class.WTF::Vector.2508" = type { %"class.WTF::VectorBuffer.2509" }
%"class.WTF::VectorBuffer.2509" = type { %"class.WTF::VectorBufferBase.2510" }
%"class.WTF::VectorBufferBase.2510" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2513 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2514", i64, %"class.WTF::Vector.2516", %"class.WTF::Vector.2521" }
%"class.WTF::RefCounted.2514" = type { %"class.base::RefCounted.2515" }
%"class.base::RefCounted.2515" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2516" = type { %"class.WTF::VectorBuffer.2517" }
%"class.WTF::VectorBuffer.2517" = type { %"class.WTF::VectorBufferBase.2518" }
%"class.WTF::VectorBufferBase.2518" = type { i8*, i32, i32 }
%"class.WTF::Vector.2521" = type { %"class.WTF::VectorBuffer.2522" }
%"class.WTF::VectorBuffer.2522" = type { %"class.WTF::VectorBufferBase.2523" }
%"class.WTF::VectorBufferBase.2523" = type { %"class.std::__1::unique_ptr.2524"*, i32, i32 }
%"class.std::__1::unique_ptr.2524" = type opaque
%class.scoped_refptr.2527 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2528" = type { %"class.blink::MemberBase.2529" }
%"class.blink::MemberBase.2529" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2532", %"class.std::__1::unique_ptr.2537", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2532" = type { %"class.WTF::HashTable.2533" }
%"class.WTF::HashTable.2533" = type <{ %"struct.WTF::KeyValuePair.2536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2536" = type { %"class.WTF::Vector.2790", %class.scoped_refptr.2795 }
%"class.WTF::Vector.2790" = type { %"class.WTF::VectorBuffer.2791" }
%"class.WTF::VectorBuffer.2791" = type { %"class.WTF::VectorBufferBase.2792", [32 x i8] }
%"class.WTF::VectorBufferBase.2792" = type { i8*, i32, i32 }
%class.scoped_refptr.2795 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2796", %"class.WTF::Vector.2798", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2796" = type { %"class.base::RefCounted.2797" }
%"class.base::RefCounted.2797" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2798" = type { %"class.WTF::VectorBuffer.2799" }
%"class.WTF::VectorBuffer.2799" = type { %"class.WTF::VectorBufferBase.2792" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2802", i64, %"class.absl::optional.2807" }
%"class.std::__1::unique_ptr.2802" = type { %"class.std::__1::__compressed_pair.2803" }
%"class.std::__1::__compressed_pair.2803" = type { %"struct.std::__1::__compressed_pair_elem.2379" }
%"class.absl::optional.2807" = type { %"class.absl::optional_internal::optional_data.2808" }
%"class.absl::optional_internal::optional_data.2808" = type { %"class.absl::optional_internal::optional_data_base.2809" }
%"class.absl::optional_internal::optional_data_base.2809" = type { %"class.absl::optional_internal::optional_data_dtor_base.2810" }
%"class.absl::optional_internal::optional_data_dtor_base.2810" = type { i8, %union.anon.2811 }
%union.anon.2811 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2812", %"class.std::__1::unique_ptr.2813" }
%"class.mojo::ScopedHandleBase.2812" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2813" = type { %"class.std::__1::__compressed_pair.2814" }
%"class.std::__1::__compressed_pair.2814" = type { %"struct.std::__1::__compressed_pair_elem.2815" }
%"struct.std::__1::__compressed_pair_elem.2815" = type { i8* }
%"class.std::__1::unique_ptr.2537" = type { %"class.std::__1::__compressed_pair.2538" }
%"class.std::__1::__compressed_pair.2538" = type { %"struct.std::__1::__compressed_pair_elem.2539" }
%"struct.std::__1::__compressed_pair_elem.2539" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2543" = type { %"class.blink::MemberBase.2544" }
%"class.blink::MemberBase.2544" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.500" }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2549" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2545", %"class.std::__1::bitset.2545", %"class.std::__1::bitset.2547" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2545" = type { %"class.std::__1::__bitset.2546" }
%"class.std::__1::__bitset.2546" = type { [11 x i64] }
%"class.std::__1::bitset.2547" = type { %"class.std::__1::__bitset.2548" }
%"class.std::__1::__bitset.2548" = type { [2 x i64] }
%"class.blink::HeapHashSet.2549" = type { %"class.WTF::HashSet.2552" }
%"class.WTF::HashSet.2552" = type { %"class.WTF::HashTable.2553" }
%"class.WTF::HashTable.2553" = type <{ %"class.blink::Member.2555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2555" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2556" = type { %"class.WTF::VectorBuffer.2557" }
%"class.WTF::VectorBuffer.2557" = type { %"class.WTF::VectorBufferBase.2558" }
%"class.WTF::VectorBufferBase.2558" = type { i32*, i32, i32 }
%"class.WTF::Vector.172" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.2406" = type { %"class.std::__1::vector.2407" }
%"class.std::__1::vector.2407" = type { %"class.std::__1::__vector_base.2408" }
%"class.std::__1::__vector_base.2408" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2409" }
%"class.std::__1::__compressed_pair.2409" = type { %"struct.std::__1::__compressed_pair_elem.2410" }
%"struct.std::__1::__compressed_pair_elem.2410" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2561" = type { %"class.mojo::internal::InterfacePtrState.2562" }
%"class.mojo::internal::InterfacePtrState.2562" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2563" }
%"class.std::__1::unique_ptr.2563" = type { %"class.std::__1::__compressed_pair.2564" }
%"class.std::__1::__compressed_pair.2564" = type { %"struct.std::__1::__compressed_pair_elem.2565" }
%"struct.std::__1::__compressed_pair_elem.2565" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.895", %"class.blink::Member.442", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.903", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.908", %"class.blink::Member.910", %"class.blink::Member.910", %"class.std::__1::unique_ptr.913", i32, [4 x i8], %"class.WTF::HashSet.916", %"class.blink::Member.1745", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1747", %"class.blink::HeapHashSet.1754", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1762", i8, %"class.blink::Member.1768", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1780", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1794", i8, %"class.std::__1::unique_ptr.1800", %"class.std::__1::unique_ptr.1881", %"class.WTF::Vector.1887", i32, %class.scoped_refptr.1892, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1893", %"class.blink::Member.1895", %"class.blink::Member.1897", %"class.blink::HeapHashSet.1899", %"class.blink::HeapHashSet.1906", %"class.std::__1::unique_ptr.1913", %"class.std::__1::unique_ptr.1920", %"class.WTF::Vector.1931" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.895" = type { %"class.WTF::HashTable.896" }
%"class.WTF::HashTable.896" = type <{ %class.scoped_refptr.899*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.899 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.902", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.900, %"class.base::WeakPtrFactory.901" }
%class.scoped_refptr.900 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.902" = type { %"class.blink::MemberBase.514" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.903" = type { %"class.absl::optional_internal::optional_data.904" }
%"class.absl::optional_internal::optional_data.904" = type { %"class.absl::optional_internal::optional_data_base.905" }
%"class.absl::optional_internal::optional_data_base.905" = type { %"class.absl::optional_internal::optional_data_dtor_base.906" }
%"class.absl::optional_internal::optional_data_dtor_base.906" = type { i8, %union.anon.907 }
%union.anon.907 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::HeapHashSet.912"* }
%"class.blink::HeapHashSet.912" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.WTF::HashSet.916"* }
%"class.WTF::HashSet.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.920, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.920 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1573", %"class.std::__1::unique_ptr.1575" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1163", %"class.blink::DataRef.1290", %"class.blink::DataRef.1294", %"class.blink::DataRef.1489", %"class.blink::DataRef.1556", %"class.blink::DataRef.1560", %"class.blink::DataRef.1564", %"class.blink::DataRef.1568", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.921 }
%class.scoped_refptr.921 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.922", %"class.blink::DataRef.924", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.922" = type { %"class.base::RefCounted.923" }
%"class.base::RefCounted.923" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.924" = type { %class.scoped_refptr.925 }
%class.scoped_refptr.925 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.926", %"class.blink::Font" }
%"class.WTF::RefCounted.926" = type { %"class.base::RefCounted.927" }
%"class.base::RefCounted.927" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.954 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.929, %class.scoped_refptr.937, %class.scoped_refptr.947, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.953 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.928 }
%class.scoped_refptr.928 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2235", [4 x i8] }>
%"class.WTF::RefCounted.2235" = type { %"class.base::RefCounted.2236" }
%"class.base::RefCounted.2236" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.929 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.935", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.930" }
%"class.WTF::Vector.930" = type { %"class.WTF::VectorBuffer.931" }
%"class.WTF::VectorBuffer.931" = type { %"class.WTF::VectorBufferBase.932" }
%"class.WTF::VectorBufferBase.932" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.937 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.938", %"class.WTF::RefCounted.945", [4 x i8] }>
%"class.blink::FontSettings.938" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { %"class.blink::FontTagValuePair.942"*, i32, i32 }
%"class.blink::FontTagValuePair.942" = type { i32, float }
%"class.WTF::RefCounted.945" = type { %"class.base::RefCounted.946" }
%"class.base::RefCounted.946" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.947 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.948", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.950, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.950 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.951", [4 x i8] }>
%"class.WTF::RefCounted.951" = type { %"class.base::RefCounted.952" }
%"class.base::RefCounted.952" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.953 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.954 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.955", %"class.WTF::Vector.957", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1161" }
%"class.WTF::RefCounted.955" = type { %"class.base::RefCounted.956" }
%"class.base::RefCounted.956" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959", [8 x i8] }
%"class.WTF::VectorBufferBase.959" = type { %class.scoped_refptr.960*, i32, i32 }
%class.scoped_refptr.960 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.961", [4 x i8] }>
%"class.WTF::RefCounted.961" = type { %"class.base::RefCounted.962" }
%"class.base::RefCounted.962" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.971", %class.scoped_refptr.978, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.961" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.965", %"class.absl::optional.965", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.965" = type { %"class.absl::optional_internal::optional_data.966" }
%"class.absl::optional_internal::optional_data.966" = type { %"class.absl::optional_internal::optional_data_base.967" }
%"class.absl::optional_internal::optional_data_base.967" = type { %"class.absl::optional_internal::optional_data_dtor_base.968" }
%"class.absl::optional_internal::optional_data_dtor_base.968" = type { i8, %union.anon.969 }
%union.anon.969 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.970, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.196" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.196" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.215" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.970 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.974, %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.978 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.979", [4 x i8] }>
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1161" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1162, i8, i8, i8, i8 }>
%union.anon.1162 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1163" = type { %class.scoped_refptr.1164 }
%class.scoped_refptr.1164 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1165", [4 x i8], %"class.blink::DataRef.1167", %"class.blink::DataRef.1209", %"class.WTF::Vector.1213", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1217, %class.scoped_refptr.1226, %"class.blink::Persistent.1234", %"class.blink::Persistent.1236", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1165" = type { %"class.base::RefCounted.1166" }
%"class.base::RefCounted.1166" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1167" = type { %class.scoped_refptr.1168 }
%class.scoped_refptr.1168 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1169", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1171, %class.scoped_refptr.1179, %"class.blink::Persistent.1196", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1169" = type { %"class.base::RefCounted.1170" }
%"class.base::RefCounted.1170" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1171 = type { %"class.base::RefCountedData.1172"* }
%"class.base::RefCountedData.1172" = type { %"class.base::RefCountedThreadSafe.1173", %"class.WTF::Vector.1174" }
%"class.base::RefCountedThreadSafe.1173" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1179 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1180", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1180" = type { %"class.base::RefCounted.1181" }
%"class.base::RefCounted.1181" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1182", %"class.blink::Persistent" }
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2776 }
%class.scoped_refptr.2776 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2777", %"class.WTF::Vector.172", %"class.WTF::Vector.2779", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2777" = type { %"class.base::RefCounted.2778" }
%"class.base::RefCounted.2778" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2779" = type { %"class.WTF::VectorBuffer.2780" }
%"class.WTF::VectorBuffer.2780" = type { %"class.WTF::VectorBufferBase.2781" }
%"class.WTF::VectorBufferBase.2781" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2782 }
%union.anon.2782 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1187" }
%"class.blink::PersistentBase.1187" = type { %"class.blink::HeapHashMap.1188"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::HeapHashMap.1188" = type { %"class.WTF::HashMap.1191" }
%"class.WTF::HashMap.1191" = type { %"class.WTF::HashTable.1192" }
%"class.WTF::HashTable.1192" = type <{ %"struct.WTF::KeyValuePair.1194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1194" = type opaque
%"class.blink::Persistent.1196" = type { %"class.blink::PersistentBase.1197" }
%"class.blink::PersistentBase.1197" = type { %"class.blink::HeapVector.1198"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::HeapVector.1198" = type { %"class.WTF::Vector.1201" }
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1204", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1209" = type { %class.scoped_refptr.1210 }
%class.scoped_refptr.1210 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1211", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1211" = type { %"class.base::RefCounted.1212" }
%"class.base::RefCounted.1212" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1217 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1218", %"class.WTF::Vector.1220" }
%"class.WTF::RefCounted.1218" = type { %"class.base::RefCounted.1219" }
%"class.base::RefCounted.1219" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"struct.std::__1::pair.1223"*, i32, i32 }
%"struct.std::__1::pair.1223" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1226 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1227", [4 x i8], %"class.WTF::Vector.1229" }
%"class.WTF::RefCounted.1227" = type { %"class.base::RefCounted.1228" }
%"class.base::RefCounted.1228" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1231", [28 x i8] }>
%"class.WTF::VectorBufferBase.1231" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1234" = type { %"class.blink::PersistentBase.1235" }
%"class.blink::PersistentBase.1235" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::Persistent.1236" = type { %"class.blink::PersistentBase.1237" }
%"class.blink::PersistentBase.1237" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1240", %"class.blink::Member.1288" }
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1290" = type { %class.scoped_refptr.1291 }
%class.scoped_refptr.1291 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1292", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1292" = type { %"class.base::RefCounted.1293" }
%"class.base::RefCounted.1293" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1294" = type { %class.scoped_refptr.1295 }
%class.scoped_refptr.1295 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1296", [4 x i8], %"class.blink::DataRef.1298", %"class.blink::DataRef.1364", %"class.blink::TransformOperations", %class.scoped_refptr.1226, %"class.blink::Persistent.1483", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1296" = type { %"class.base::RefCounted.1297" }
%"class.base::RefCounted.1297" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1298" = type { %class.scoped_refptr.1299 }
%class.scoped_refptr.1299 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1300", [4 x i8], %"class.blink::DataRef.1302", %"class.blink::Persistent.1340", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1300" = type { %"class.base::RefCounted.1301" }
%"class.base::RefCounted.1301" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1302" = type { %class.scoped_refptr.1303 }
%class.scoped_refptr.1303 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1304", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1322, %class.scoped_refptr.1325, %class.scoped_refptr.1328, %class.scoped_refptr.1331, %class.scoped_refptr.1332, %class.scoped_refptr.1333, %"class.blink::Persistent.1340", %"class.blink::Persistent.1355", %"class.absl::optional.1359", %"class.absl::optional.1359", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1304" = type { %"class.base::RefCounted.1305" }
%"class.base::RefCounted.1305" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1306", %"class.std::__1::unique_ptr.1311" }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1314", %"class.WTF::Vector.1306", i32, i32 }
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1322 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1323", [4 x i8] }>
%"class.WTF::RefCounted.1323" = type { %"class.base::RefCounted.1324" }
%"class.base::RefCounted.1324" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1325 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1326", [4 x i8] }>
%"class.WTF::RefCounted.1326" = type { %"class.base::RefCounted.1327" }
%"class.base::RefCounted.1327" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1328 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1329" }>
%"class.WTF::RefCounted.1329" = type { %"class.base::RefCounted.1330" }
%"class.base::RefCounted.1330" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1331 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1332 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1333 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1334", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1334" = type { %"class.base::RefCounted.1335" }
%"class.base::RefCounted.1335" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1336" }
%"class.blink::DataRef.1336" = type { %class.scoped_refptr.1337 }
%class.scoped_refptr.1337 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1234", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1338" }
%"class.WTF::RefCounted.1338" = type { %"class.base::RefCounted.1339" }
%"class.base::RefCounted.1339" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1355" = type { %"class.blink::PersistentBase.1356" }
%"class.blink::PersistentBase.1356" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1325, %"class.blink::Member.1204", i32, [4 x i8] }>
%"class.absl::optional.1359" = type { %"class.absl::optional_internal::optional_data.1360" }
%"class.absl::optional_internal::optional_data.1360" = type { %"class.absl::optional_internal::optional_data_base.1361" }
%"class.absl::optional_internal::optional_data_base.1361" = type { %"class.absl::optional_internal::optional_data_dtor_base.1362" }
%"class.absl::optional_internal::optional_data_dtor_base.1362" = type { i8, [3 x i8], %union.anon.1363 }
%union.anon.1363 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1340" = type { %"class.blink::PersistentBase.1341" }
%"class.blink::PersistentBase.1341" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1344" }
%"class.blink::HeapVector.1344" = type { %"class.WTF::Vector.1347" }
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::Member.1350"*, i32, i32 }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1364" = type { %class.scoped_refptr.1365 }
%class.scoped_refptr.1365 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1366", %"class.blink::DataRef.1368", %"class.blink::DataRef.1372", %"class.blink::DataRef.1381", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1400", %"class.std::__1::unique_ptr.1411", %"class.std::__1::unique_ptr.1449", %"class.std::__1::unique_ptr.1460", %"class.std::__1::unique_ptr.1471", %"class.WTF::Vector.172", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1368" = type { %class.scoped_refptr.1369 }
%class.scoped_refptr.1369 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1370", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1370" = type { %"class.base::RefCounted.1371" }
%"class.base::RefCounted.1371" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1372" = type { %class.scoped_refptr.1373 }
%class.scoped_refptr.1373 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1374", [4 x i8], %"class.WTF::Vector.1376", i8, [7 x i8] }>
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1376" = type { %"class.WTF::VectorBuffer.1377" }
%"class.WTF::VectorBuffer.1377" = type { %"class.WTF::VectorBufferBase.1378" }
%"class.WTF::VectorBufferBase.1378" = type { i32*, i32, i32 }
%"class.blink::DataRef.1381" = type { %class.scoped_refptr.1382 }
%class.scoped_refptr.1382 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1383", [4 x i8], %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1385", %"class.WTF::HashMap.1390", %"class.WTF::HashMap.1390", %"class.WTF::HashMap.1390", %"class.WTF::HashMap.1390", %"class.WTF::HashMap.1395", %"class.WTF::Vector.1306", %"class.WTF::Vector.1306", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1383" = type { %"class.base::RefCounted.1384" }
%"class.base::RefCounted.1384" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::String", %"class.WTF::Vector.2766" }
%"class.WTF::Vector.2766" = type { %"class.WTF::VectorBuffer.2767" }
%"class.WTF::VectorBuffer.2767" = type { %"class.WTF::VectorBufferBase.2768" }
%"class.WTF::VectorBufferBase.2768" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1390" = type { %"class.WTF::HashTable.1391" }
%"class.WTF::HashTable.1391" = type <{ %"struct.WTF::KeyValuePair.1394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1394" = type { i64, %"class.WTF::Vector.172" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1399" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1403" }
%"class.WTF::HashMap.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"struct.WTF::KeyValuePair.1407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1407" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2771", %"class.absl::optional.2771", %"class.absl::optional.2771" }
%"class.absl::optional.2771" = type { %"class.absl::optional_internal::optional_data.2772" }
%"class.absl::optional_internal::optional_data.2772" = type { %"class.absl::optional_internal::optional_data_base.2773" }
%"class.absl::optional_internal::optional_data_base.2773" = type { %"class.absl::optional_internal::optional_data_dtor_base.2774" }
%"class.absl::optional_internal::optional_data_dtor_base.2774" = type { i8, %union.anon.2775 }
%union.anon.2775 = type { i32 }
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1213", %"class.WTF::Vector.1426", %"class.WTF::Vector.1414", %"class.WTF::Vector.1431", %"class.WTF::Vector.1436", %"class.WTF::Vector.1441" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1414", %"class.WTF::Vector.1414", %"class.WTF::Vector.1419" }
%"class.WTF::Vector.1419" = type { %"class.WTF::VectorBuffer.1420" }
%"class.WTF::VectorBuffer.1420" = type { %"class.WTF::VectorBufferBase.1421" }
%"class.WTF::VectorBufferBase.1421" = type { %class.scoped_refptr.1422*, i32, i32 }
%class.scoped_refptr.1422 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1423" }
%"class.base::RefCountedThreadSafe.1423" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { double*, i32, i32 }
%"class.WTF::Vector.1431" = type { %"class.WTF::VectorBuffer.1432" }
%"class.WTF::VectorBuffer.1432" = type { %"class.WTF::VectorBufferBase.1433" }
%"class.WTF::VectorBufferBase.1433" = type { i32*, i32, i32 }
%"class.WTF::Vector.1436" = type { %"class.WTF::VectorBuffer.1437" }
%"class.WTF::VectorBuffer.1437" = type { %"class.WTF::VectorBufferBase.1438" }
%"class.WTF::VectorBufferBase.1438" = type { i32*, i32, i32 }
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1449" = type { %"class.std::__1::__compressed_pair.1450" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1452" }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1460" = type { %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1463" }
%"class.WTF::Vector.1463" = type { %"class.WTF::VectorBuffer.1464" }
%"class.WTF::VectorBuffer.1464" = type { %"class.WTF::VectorBufferBase.1465" }
%"class.WTF::VectorBufferBase.1465" = type { %"class.blink::Persistent.1234"*, i32, i32 }
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1234", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1477" }
%"class.WTF::Vector.1477" = type { %"class.WTF::VectorBuffer.1478" }
%"class.WTF::VectorBuffer.1478" = type { %"class.WTF::VectorBufferBase.1479" }
%"class.WTF::VectorBufferBase.1479" = type { %class.scoped_refptr.1480*, i32, i32 }
%class.scoped_refptr.1480 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1329", [4 x i8] }>
%"class.blink::Persistent.1483" = type { %"class.blink::PersistentBase.1484" }
%"class.blink::PersistentBase.1484" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1487" }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1489" = type { %class.scoped_refptr.1490 }
%class.scoped_refptr.1490 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1491", [4 x i8], %"class.blink::DataRef.1493", %"class.blink::DataRef.1497", %"class.blink::DataRef.1518", %"class.blink::DataRef.1536", %"class.blink::DataRef.1548", %"class.blink::DataRef.1552", %class.scoped_refptr.1522, i32, [4 x i8] }>
%"class.WTF::RefCounted.1491" = type { %"class.base::RefCounted.1492" }
%"class.base::RefCounted.1492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1493" = type { %class.scoped_refptr.1494 }
%class.scoped_refptr.1494 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1495", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1495" = type { %"class.base::RefCounted.1496" }
%"class.base::RefCounted.1496" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1497" = type { %class.scoped_refptr.1498 }
%class.scoped_refptr.1498 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1499", %class.scoped_refptr.1501, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1499" = type { %"class.base::RefCounted.1500" }
%"class.base::RefCounted.1500" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1501 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1502", %"class.std::__1::unique_ptr.1508", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1326" }>
%"class.std::__1::unique_ptr.1502" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.1504" }
%"struct.std::__1::__compressed_pair_elem.1504" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1508" = type { %"class.std::__1::__compressed_pair.1509" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1511, i32, %"struct.std::__1::atomic.215", %"struct.std::__1::atomic.215", i8, i8 }>
%class.sk_sp.1511 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1512, %class.SkTDArray.1513, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.196" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1512 = type { i8*, i32, i32 }
%class.SkTDArray.1513 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1514 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.196", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1514 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.353", [3 x i8] }
%"class.blink::DataRef.1518" = type { %class.scoped_refptr.1519 }
%class.scoped_refptr.1519 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1520", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1520" = type { %"class.base::RefCounted.1521" }
%"class.base::RefCounted.1521" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1522, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1536" = type { %class.scoped_refptr.1537 }
%class.scoped_refptr.1537 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1538", [4 x i8], %class.scoped_refptr.1540, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1538" = type { %"class.base::RefCounted.1539" }
%"class.base::RefCounted.1539" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1540 = type { %"class.base::RefCountedData.1541"* }
%"class.base::RefCountedData.1541" = type { %"class.base::RefCountedThreadSafe.1542", %"class.WTF::Vector.1543" }
%"class.base::RefCountedThreadSafe.1542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1543" = type { %"class.WTF::VectorBuffer.1544" }
%"class.WTF::VectorBuffer.1544" = type { %"class.WTF::VectorBufferBase.1545" }
%"class.WTF::VectorBufferBase.1545" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1548" = type { %class.scoped_refptr.1549 }
%class.scoped_refptr.1549 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1550", %class.scoped_refptr.1522, %class.scoped_refptr.1522, %class.scoped_refptr.1522 }
%"class.WTF::RefCounted.1550" = type { %"class.base::RefCounted.1551" }
%"class.base::RefCounted.1551" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1552" = type { %class.scoped_refptr.1553 }
%class.scoped_refptr.1553 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1554", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1554" = type { %"class.base::RefCounted.1555" }
%"class.base::RefCounted.1555" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1522 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1523", %"class.blink::Persistent.1525", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1523" = type { %"class.base::RefCounted.1524" }
%"class.base::RefCounted.1524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1525" = type { %"class.blink::PersistentBase.1526" }
%"class.blink::PersistentBase.1526" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.1195" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.51", %"class.blink::HeapHashMap.1529" }
%"class.blink::HeapHashMap.1529" = type { %"class.WTF::HashMap.1532" }
%"class.WTF::HashMap.1532" = type { %"class.WTF::HashTable.1533" }
%"class.WTF::HashTable.1533" = type <{ %"struct.WTF::KeyValuePair.1535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1535" = type opaque
%"class.blink::DataRef.1556" = type { %class.scoped_refptr.1557 }
%class.scoped_refptr.1557 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1558", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1558" = type { %"class.base::RefCounted.1559" }
%"class.base::RefCounted.1559" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1560" = type { %class.scoped_refptr.1561 }
%class.scoped_refptr.1561 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1562", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1562" = type { %"class.base::RefCounted.1563" }
%"class.base::RefCounted.1563" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1564" = type { %class.scoped_refptr.1565 }
%class.scoped_refptr.1565 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1566", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1566" = type { %"class.base::RefCounted.1567" }
%"class.base::RefCounted.1567" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1568" = type { %class.scoped_refptr.1569 }
%class.scoped_refptr.1569 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1570", %class.scoped_refptr.1572 }
%"class.WTF::RefCounted.1570" = type { %"class.base::RefCounted.1571" }
%"class.base::RefCounted.1571" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1572 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1950", %"class.blink::StyleVariables", %class.scoped_refptr.1572 }
%"class.WTF::RefCounted.1950" = type { %"class.base::RefCounted.1951" }
%"class.base::RefCounted.1951" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1573" = type { %"class.base::RefCounted.1574" }
%"class.base::RefCounted.1574" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1575" = type { %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.1577" }
%"struct.std::__1::__compressed_pair_elem.1577" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1578" }
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.WTF::Vector.1581"* }
%"class.WTF::Vector.1581" = type { %"class.WTF::VectorBuffer.2786" }
%"class.WTF::VectorBuffer.2786" = type { %"class.WTF::VectorBufferBase.2787", [32 x i8] }
%"class.WTF::VectorBufferBase.2787" = type { %class.scoped_refptr.920*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1589" }
%"class.std::__1::unique_ptr.1589" = type { %"class.std::__1::__compressed_pair.1590" }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.1591" }
%"struct.std::__1::__compressed_pair_elem.1591" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1592", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1598", %"class.std::__1::unique_ptr.1722", i8, %"class.absl::optional.1728", %class.scoped_refptr.1704, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1733" }
%"class.std::__1::unique_ptr.1592" = type { %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1601, %class.scoped_refptr.1601, %class.scoped_refptr.1601, %class.scoped_refptr.1601, %class.scoped_refptr.1601, %class.scoped_refptr.1601, %class.scoped_refptr.1636, %class.scoped_refptr.1652, %class.scoped_refptr.1653, %class.scoped_refptr.1653, %class.scoped_refptr.1653, %class.scoped_refptr.1653, %class.scoped_refptr.1653, %class.scoped_refptr.1653, %class.scoped_refptr.1694, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1695, %class.scoped_refptr.1718 }
%class.scoped_refptr.1601 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1618" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1602", i8, i8, %class.scoped_refptr.1604, i32, i32 }
%"class.WTF::RefCounted.1602" = type { %"class.base::RefCounted.1603" }
%"class.base::RefCounted.1603" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1604 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1611, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1612", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1605" }
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1611 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1637", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1637" = type { %"class.WTF::RefCounted.1638", i8, i8, %class.scoped_refptr.1611, i32, i32 }
%"class.WTF::RefCounted.1638" = type { %"class.base::RefCounted.1639" }
%"class.base::RefCounted.1639" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1640" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1640" = type { %"class.absl::optional_internal::optional_data.1641" }
%"class.absl::optional_internal::optional_data.1641" = type { %"class.absl::optional_internal::optional_data_base.1642" }
%"class.absl::optional_internal::optional_data_base.1642" = type { %"class.absl::optional_internal::optional_data_dtor_base.1643" }
%"class.absl::optional_internal::optional_data_dtor_base.1643" = type { i8, %union.anon.1644 }
%union.anon.1644 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1645", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1645" = type { %"class.std::__1::__vector_base.1646" }
%"class.std::__1::__vector_base.1646" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1647" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1621", %"class.std::__1::unique_ptr.1627", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1621" = type { %"class.std::__1::__compressed_pair.1622" }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.1623" }
%"struct.std::__1::__compressed_pair_elem.1623" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1627" = type { %"class.std::__1::__compressed_pair.1628" }
%"class.std::__1::__compressed_pair.1628" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"struct.std::__1::__compressed_pair_elem.1629" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1636 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1652 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1653 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1654" }
%"class.blink::PaintPropertyNode.1654" = type { %"class.WTF::RefCounted.1655", i8, i8, %class.scoped_refptr.1657, i32, i32 }
%"class.WTF::RefCounted.1655" = type { %"class.base::RefCounted.1656" }
%"class.base::RefCounted.1656" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1657 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1604, %class.scoped_refptr.1658, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1680", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1658 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1696" }
%"class.blink::PaintPropertyNode.1696" = type { %"class.WTF::RefCounted.1697", i8, i8, %class.scoped_refptr.1658, i32, i32 }
%"class.WTF::RefCounted.1697" = type { %"class.base::RefCounted.1698" }
%"class.base::RefCounted.1698" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1659" }
%"class.std::__1::vector.1659" = type { %"class.std::__1::__vector_base.1660" }
%"class.std::__1::__vector_base.1660" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1675" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1661, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1668", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1661 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1662, i32, %"class.absl::optional.1663", i8, i32 }
%class.sk_sp.1662 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1663" = type { %"class.absl::optional_internal::optional_data.1664" }
%"class.absl::optional_internal::optional_data.1664" = type { %"class.absl::optional_internal::optional_data_base.1665" }
%"class.absl::optional_internal::optional_data_base.1665" = type { %"class.absl::optional_internal::optional_data_dtor_base.1666" }
%"class.absl::optional_internal::optional_data_dtor_base.1666" = type { i8, %union.anon.1667 }
%union.anon.1667 = type { %struct.SkRect }
%"class.std::__1::vector.1668" = type { %"class.std::__1::__vector_base.1669" }
%"class.std::__1::__vector_base.1669" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1686" }
%"class.base::internal::flat_tree.1686" = type { %"class.std::__1::vector.1687" }
%"class.std::__1::vector.1687" = type { %"class.std::__1::__vector_base.1688" }
%"class.std::__1::__vector_base.1688" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { i32* }
%class.scoped_refptr.1694 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1695 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1707" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1604, %"class.absl::optional.1699", %class.scoped_refptr.1704, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1699" = type { %"class.absl::optional_internal::optional_data.1700" }
%"class.absl::optional_internal::optional_data.1700" = type { %"class.absl::optional_internal::optional_data_base.1701" }
%"class.absl::optional_internal::optional_data_base.1701" = type { %"class.absl::optional_internal::optional_data_dtor_base.1702" }
%"class.absl::optional_internal::optional_data_dtor_base.1702" = type { i8, [3 x i8], %union.anon.1703 }
%union.anon.1703 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1710", i32, [4 x i8] }>
%"class.WTF::Vector.1710" = type { %"class.WTF::VectorBuffer.1711" }
%"class.WTF::VectorBuffer.1711" = type { %"class.WTF::VectorBufferBase.1712" }
%"class.WTF::VectorBufferBase.1712" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1718 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1604, %class.scoped_refptr.1658, %class.scoped_refptr.1657 }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, %union.anon.1732 }
%union.anon.1732 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1704 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1705", [4 x i8] }
%"class.WTF::RefCounted.1705" = type { %"class.base::RefCounted.1706" }
%"class.base::RefCounted.1706" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.1745" = type { %"class.blink::MemberBase.1746" }
%"class.blink::MemberBase.1746" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1747" = type { %"class.WTF::HashSet.1750" }
%"class.WTF::HashSet.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"class.blink::Member.1753"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1753" = type opaque
%"class.blink::HeapHashSet.1754" = type { %"class.WTF::HashSet.1757" }
%"class.WTF::HashSet.1757" = type { %"class.WTF::HashTable.1758" }
%"class.WTF::HashTable.1758" = type <{ %"class.blink::Member.1760"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1938", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1948", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.51" }
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1940", %"class.blink::Member.1942", %"class.blink::Member.1944", %"class.blink::Member.1946", %"class.WTF::Vector.1931", i16, %class.scoped_refptr.900 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1948" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1949", { i64, i64 } }
%"class.blink::WeakMember.1949" = type { %"class.blink::MemberBase.1761" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1762" = type { %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1772", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1772" = type { %"class.WTF::HashTable.1773" }
%"class.WTF::HashTable.1773" = type <{ %"struct.WTF::KeyValuePair.1775"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1775" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1776", i32, i32 }
%"class.WTF::Vector.1776" = type { %"class.WTF::VectorBuffer.1777" }
%"class.WTF::VectorBuffer.1777" = type { %"class.WTF::VectorBufferBase.1778" }
%"class.WTF::VectorBufferBase.1778" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1780" = type { %"class.WTF::LinkedHashSet.1783" }
%"class.WTF::LinkedHashSet.1783" = type { %"class.WTF::HashMap.1784", %"class.WTF::VectorBackedLinkedList.1788" }
%"class.WTF::HashMap.1784" = type { %"class.WTF::HashTable.1785" }
%"class.WTF::HashTable.1785" = type <{ %"struct.WTF::KeyValuePair.1787"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1787" = type opaque
%"class.WTF::VectorBackedLinkedList.1788" = type { %"class.WTF::Vector.1789", i32, i32 }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"class.WTF::VectorBackedLinkedListNode.1792"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1792" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1803, %class.scoped_refptr.1803, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1858", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1863", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1803 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1804", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1811" }
%"class.WTF::RefCounted.1804" = type { %"class.base::RefCounted.1805" }
%"class.base::RefCounted.1805" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1806", i32, [4 x i8] }>
%"class.WTF::Vector.1806" = type { %"class.WTF::VectorBuffer.1807" }
%"class.WTF::VectorBuffer.1807" = type { %"class.WTF::VectorBufferBase.1808" }
%"class.WTF::VectorBufferBase.1808" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813" }
%"class.WTF::VectorBufferBase.1813" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1814", %"class.std::__1::unique_ptr.1830", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1817", %"class.WTF::Vector.1822", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.1818" }
%"class.WTF::VectorBuffer.1818" = type { %"class.WTF::VectorBufferBase.1819" }
%"class.WTF::VectorBufferBase.1819" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824" }
%"class.WTF::VectorBufferBase.1824" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1833", %"class.absl::optional.1833" }
%"class.absl::optional.1833" = type { %"class.absl::optional_internal::optional_data.1834" }
%"class.absl::optional_internal::optional_data.1834" = type { %"class.absl::optional_internal::optional_data_base.1835" }
%"class.absl::optional_internal::optional_data_base.1835" = type { %"class.absl::optional_internal::optional_data_dtor_base.1836" }
%"class.absl::optional_internal::optional_data_dtor_base.1836" = type { i8, [3 x i8], %union.anon.1837 }
%union.anon.1837 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1811"*, %"class.absl::optional.1843", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1843" = type { %"class.absl::optional_internal::optional_data.1844" }
%"class.absl::optional_internal::optional_data.1844" = type { %"class.absl::optional_internal::optional_data_base.1845" }
%"class.absl::optional_internal::optional_data_base.1845" = type { %"class.absl::optional_internal::optional_data_dtor_base.1846" }
%"class.absl::optional_internal::optional_data_dtor_base.1846" = type { i8, %union.anon.1847 }
%union.anon.1847 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1848", %"class.WTF::Vector.1853" }
%"class.WTF::Vector.1848" = type { %"class.WTF::VectorBuffer.1849" }
%"class.WTF::VectorBuffer.1849" = type { %"class.WTF::VectorBufferBase.1850", [128 x i8] }
%"class.WTF::VectorBufferBase.1850" = type { i32*, i32, i32 }
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855", [128 x i8] }
%"class.WTF::VectorBufferBase.1855" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1863" = type { %"class.WTF::HashTable.1864" }
%"class.WTF::HashTable.1864" = type <{ %"struct.WTF::KeyValuePair.1867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1867" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1868", %"class.WTF::Vector.1873" }
%"class.WTF::HashMap.1868" = type { %"class.WTF::HashTable.1869" }
%"class.WTF::HashTable.1869" = type <{ %"struct.WTF::KeyValuePair.1872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1872" = type opaque
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1881" = type { %"class.std::__1::__compressed_pair.1882" }
%"class.std::__1::__compressed_pair.1882" = type { %"struct.std::__1::__compressed_pair_elem.1883" }
%"struct.std::__1::__compressed_pair_elem.1883" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1887" = type { %"class.WTF::VectorBuffer.1888" }
%"class.WTF::VectorBuffer.1888" = type { %"class.WTF::VectorBufferBase.1889" }
%"class.WTF::VectorBufferBase.1889" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1892 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1893" = type { %"class.blink::MemberBase.1894" }
%"class.blink::MemberBase.1894" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1895" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1899" = type { %"class.WTF::HashSet.1902" }
%"class.WTF::HashSet.1902" = type { %"class.WTF::HashTable.1903" }
%"class.WTF::HashTable.1903" = type <{ %"class.blink::WeakMember.1905"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1905" = type opaque
%"class.blink::HeapHashSet.1906" = type { %"class.WTF::HashSet.1909" }
%"class.WTF::HashSet.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"class.blink::WeakMember.1912"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1912" = type opaque
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1920" = type { %"class.std::__1::__compressed_pair.1921" }
%"class.std::__1::__compressed_pair.1921" = type { %"struct.std::__1::__compressed_pair_elem.1922" }
%"struct.std::__1::__compressed_pair_elem.1922" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1923", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { %"class.base::OnceCallback.220"*, i32, i32 }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.534", %"class.blink::HeapListHashSet.545", %"class.blink::HeapListHashSet.556", %"class.blink::HeapListHashSet.567", %"class.blink::HeapListHashSet.578", %"class.blink::HeapListHashSet.589", %"class.blink::HeapListHashSet.600", %"class.blink::HeapListHashSet.611", %"class.blink::HeapListHashSet.622", %"class.blink::HeapListHashSet.633", %"class.blink::HeapListHashSet.644", %"class.blink::HeapListHashSet.655", %"class.blink::HeapListHashSet.666", %"class.blink::HeapListHashSet.677", %"class.blink::HeapListHashSet.688", %"class.blink::HeapListHashSet.699", %"class.blink::HeapListHashSet.710", %"class.blink::HeapListHashSet.721", %"class.blink::HeapListHashSet.732" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.530", %"class.blink::Member.532", %"class.blink::Member.532", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.530" = type <{ %"class.blink::Member.532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.746", %"class.blink::Member.532", %"class.blink::Member.532" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.534" = type { %"class.WTF::ListHashSet.base.544", [7 x i8] }
%"class.WTF::ListHashSet.base.544" = type <{ %"class.WTF::HashTable.539", %"class.blink::Member.541", %"class.blink::Member.541", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.539" = type <{ %"class.blink::Member.541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::HeapListHashSetNode.543"* }
%"class.blink::HeapListHashSetNode.543" = type { %"class.blink::Member.889", %"class.blink::Member.541", %"class.blink::Member.541" }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.545" = type { %"class.WTF::ListHashSet.base.555", [7 x i8] }
%"class.WTF::ListHashSet.base.555" = type <{ %"class.WTF::HashTable.550", %"class.blink::Member.552", %"class.blink::Member.552", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.550" = type <{ %"class.blink::Member.552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::HeapListHashSetNode.554"* }
%"class.blink::HeapListHashSetNode.554" = type { %"class.blink::Member.885", %"class.blink::Member.552", %"class.blink::Member.552" }
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.556" = type { %"class.WTF::ListHashSet.base.566", [7 x i8] }
%"class.WTF::ListHashSet.base.566" = type <{ %"class.WTF::HashTable.561", %"class.blink::Member.563", %"class.blink::Member.563", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.561" = type <{ %"class.blink::Member.563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::HeapListHashSetNode.565"* }
%"class.blink::HeapListHashSetNode.565" = type { %"class.blink::Member.881", %"class.blink::Member.563", %"class.blink::Member.563" }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.567" = type { %"class.WTF::ListHashSet.base.577", [7 x i8] }
%"class.WTF::ListHashSet.base.577" = type <{ %"class.WTF::HashTable.572", %"class.blink::Member.574", %"class.blink::Member.574", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.572" = type <{ %"class.blink::Member.574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::HeapListHashSetNode.576"* }
%"class.blink::HeapListHashSetNode.576" = type { %"class.blink::Member.877", %"class.blink::Member.574", %"class.blink::Member.574" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.578" = type { %"class.WTF::ListHashSet.base.588", [7 x i8] }
%"class.WTF::ListHashSet.base.588" = type <{ %"class.WTF::HashTable.583", %"class.blink::Member.585", %"class.blink::Member.585", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.583" = type <{ %"class.blink::Member.585"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::HeapListHashSetNode.587"* }
%"class.blink::HeapListHashSetNode.587" = type { %"class.blink::Member.873", %"class.blink::Member.585", %"class.blink::Member.585" }
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.589" = type { %"class.WTF::ListHashSet.base.599", [7 x i8] }
%"class.WTF::ListHashSet.base.599" = type <{ %"class.WTF::HashTable.594", %"class.blink::Member.596", %"class.blink::Member.596", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.594" = type <{ %"class.blink::Member.596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::HeapListHashSetNode.598"* }
%"class.blink::HeapListHashSetNode.598" = type { %"class.blink::Member.869", %"class.blink::Member.596", %"class.blink::Member.596" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.600" = type { %"class.WTF::ListHashSet.base.610", [7 x i8] }
%"class.WTF::ListHashSet.base.610" = type <{ %"class.WTF::HashTable.605", %"class.blink::Member.607", %"class.blink::Member.607", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.605" = type <{ %"class.blink::Member.607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::HeapListHashSetNode.609"* }
%"class.blink::HeapListHashSetNode.609" = type { %"class.blink::Member.865", %"class.blink::Member.607", %"class.blink::Member.607" }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.611" = type { %"class.WTF::ListHashSet.base.621", [7 x i8] }
%"class.WTF::ListHashSet.base.621" = type <{ %"class.WTF::HashTable.616", %"class.blink::Member.618", %"class.blink::Member.618", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.616" = type <{ %"class.blink::Member.618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::HeapListHashSetNode.620"* }
%"class.blink::HeapListHashSetNode.620" = type { %"class.blink::Member.861", %"class.blink::Member.618", %"class.blink::Member.618" }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.622" = type { %"class.WTF::ListHashSet.base.632", [7 x i8] }
%"class.WTF::ListHashSet.base.632" = type <{ %"class.WTF::HashTable.627", %"class.blink::Member.629", %"class.blink::Member.629", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.627" = type <{ %"class.blink::Member.629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::HeapListHashSetNode.631"* }
%"class.blink::HeapListHashSetNode.631" = type { %"class.blink::Member.857", %"class.blink::Member.629", %"class.blink::Member.629" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.633" = type { %"class.WTF::ListHashSet.base.643", [7 x i8] }
%"class.WTF::ListHashSet.base.643" = type <{ %"class.WTF::HashTable.638", %"class.blink::Member.640", %"class.blink::Member.640", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.638" = type <{ %"class.blink::Member.640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::HeapListHashSetNode.642"* }
%"class.blink::HeapListHashSetNode.642" = type { %"class.blink::Member.750", %"class.blink::Member.640", %"class.blink::Member.640" }
%"class.blink::HeapListHashSet.644" = type { %"class.WTF::ListHashSet.base.654", [7 x i8] }
%"class.WTF::ListHashSet.base.654" = type <{ %"class.WTF::HashTable.649", %"class.blink::Member.651", %"class.blink::Member.651", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.649" = type <{ %"class.blink::Member.651"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::HeapListHashSetNode.653"* }
%"class.blink::HeapListHashSetNode.653" = type { %"class.blink::Member.851", %"class.blink::Member.651", %"class.blink::Member.651" }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.655" = type { %"class.WTF::ListHashSet.base.665", [7 x i8] }
%"class.WTF::ListHashSet.base.665" = type <{ %"class.WTF::HashTable.660", %"class.blink::Member.662", %"class.blink::Member.662", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.660" = type <{ %"class.blink::Member.662"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::HeapListHashSetNode.664"* }
%"class.blink::HeapListHashSetNode.664" = type { %"class.blink::Member.847", %"class.blink::Member.662", %"class.blink::Member.662" }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.666" = type { %"class.WTF::ListHashSet.base.676", [7 x i8] }
%"class.WTF::ListHashSet.base.676" = type <{ %"class.WTF::HashTable.671", %"class.blink::Member.673", %"class.blink::Member.673", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.671" = type <{ %"class.blink::Member.673"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::HeapListHashSetNode.675"* }
%"class.blink::HeapListHashSetNode.675" = type { %"class.blink::Member.843", %"class.blink::Member.673", %"class.blink::Member.673" }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.677" = type { %"class.WTF::ListHashSet.base.687", [7 x i8] }
%"class.WTF::ListHashSet.base.687" = type <{ %"class.WTF::HashTable.682", %"class.blink::Member.684", %"class.blink::Member.684", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.682" = type <{ %"class.blink::Member.684"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::HeapListHashSetNode.686"* }
%"class.blink::HeapListHashSetNode.686" = type { %"class.blink::Member.839", %"class.blink::Member.684", %"class.blink::Member.684" }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.688" = type { %"class.WTF::ListHashSet.base.698", [7 x i8] }
%"class.WTF::ListHashSet.base.698" = type <{ %"class.WTF::HashTable.693", %"class.blink::Member.695", %"class.blink::Member.695", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.693" = type <{ %"class.blink::Member.695"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::HeapListHashSetNode.697"* }
%"class.blink::HeapListHashSetNode.697" = type { %"class.blink::Member.835", %"class.blink::Member.695", %"class.blink::Member.695" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.699" = type { %"class.WTF::ListHashSet.base.709", [7 x i8] }
%"class.WTF::ListHashSet.base.709" = type <{ %"class.WTF::HashTable.704", %"class.blink::Member.706", %"class.blink::Member.706", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.704" = type <{ %"class.blink::Member.706"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::HeapListHashSetNode.708"* }
%"class.blink::HeapListHashSetNode.708" = type { %"class.blink::Member.831", %"class.blink::Member.706", %"class.blink::Member.706" }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.710" = type { %"class.WTF::ListHashSet.base.720", [7 x i8] }
%"class.WTF::ListHashSet.base.720" = type <{ %"class.WTF::HashTable.715", %"class.blink::Member.717", %"class.blink::Member.717", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.715" = type <{ %"class.blink::Member.717"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::HeapListHashSetNode.719"* }
%"class.blink::HeapListHashSetNode.719" = type { %"class.blink::Member.827", %"class.blink::Member.717", %"class.blink::Member.717" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.721" = type { %"class.WTF::ListHashSet.base.731", [7 x i8] }
%"class.WTF::ListHashSet.base.731" = type <{ %"class.WTF::HashTable.726", %"class.blink::Member.728", %"class.blink::Member.728", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.726" = type <{ %"class.blink::Member.728"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::HeapListHashSetNode.730"* }
%"class.blink::HeapListHashSetNode.730" = type { %"class.blink::Member.752", %"class.blink::Member.728", %"class.blink::Member.728" }
%"class.blink::HeapListHashSet.732" = type { %"class.WTF::ListHashSet.base.742", [7 x i8] }
%"class.WTF::ListHashSet.base.742" = type <{ %"class.WTF::HashTable.737", %"class.blink::Member.739", %"class.blink::Member.739", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.737" = type <{ %"class.blink::Member.739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::HeapListHashSetNode.741"* }
%"class.blink::HeapListHashSetNode.741" = type { %"class.blink::Member.744", %"class.blink::Member.739", %"class.blink::Member.739" }
%class.scoped_refptr.743 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.760" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2719" }
%"class.mojo::Remote.2719" = type { %"class.mojo::internal::InterfacePtrState.2720" }
%"class.mojo::internal::InterfacePtrState.2720" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2721" }
%"class.std::__1::unique_ptr.2721" = type { %"class.std::__1::__compressed_pair.2722" }
%"class.std::__1::__compressed_pair.2722" = type { %"struct.std::__1::__compressed_pair_elem.2723" }
%"struct.std::__1::__compressed_pair_elem.2723" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.768" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.781" }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2729" }
%"class.mojo::AssociatedRemote.2729" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2730" }
%"class.mojo::internal::AssociatedInterfacePtrState.2730" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2731" }
%"class.std::__1::unique_ptr.2731" = type { %"class.std::__1::__compressed_pair.2732" }
%"class.std::__1::__compressed_pair.2732" = type { %"struct.std::__1::__compressed_pair_elem.2733" }
%"struct.std::__1::__compressed_pair_elem.2733" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.783" = type { %"class.blink::Member.784" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2739" }
%"class.mojo::AssociatedRemote.2739" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2740" }
%"class.mojo::internal::AssociatedInterfacePtrState.2740" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2741" }
%"class.std::__1::unique_ptr.2741" = type { %"class.std::__1::__compressed_pair.2742" }
%"class.std::__1::__compressed_pair.2742" = type { %"struct.std::__1::__compressed_pair_elem.2743" }
%"struct.std::__1::__compressed_pair_elem.2743" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.786" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2749", %"class.blink::Member.442", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2749" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2750" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.192" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2750" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.788" = type { %"class.blink::Member.789" }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2753", %"class.blink::Member.442", %"class.mojo::AssociatedReceiver.2754" }
%"class.blink::ThreadState::PrefinalizerRegistration.2753" = type { i8 }
%"class.mojo::AssociatedReceiver.2754" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2755" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2755" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.791" }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2758", %"class.blink::Member.442", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2758" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.336, %"class.std::__1::unique_ptr.192", %"class.base::WeakPtrFactory.2759" }
%"class.base::WeakPtrFactory.2759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.793" = type { %"class.blink::Member.794" }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2762", %"class.blink::Member.442", %"class.mojo::AssociatedReceiver.2763" }
%"class.blink::ThreadState::PrefinalizerRegistration.2762" = type { i8 }
%"class.mojo::AssociatedReceiver.2763" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2764" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2764" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::HeapHashMap.804"* }
%"class.blink::HeapHashMap.804" = type opaque
%"class.mojo::StructPtr.805" = type { %"class.std::__1::unique_ptr.806" }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.809", %"class.mojo::InlinedStructPtr.810" }
%"class.mojo::InlinedStructPtr.809" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.810" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.19", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.446" = type { %"class.absl::optional_internal::optional_data.447" }
%"class.absl::optional_internal::optional_data.447" = type { %"class.absl::optional_internal::optional_data_base.448" }
%"class.absl::optional_internal::optional_data_base.448" = type { %"class.absl::optional_internal::optional_data_dtor_base.449" }
%"class.absl::optional_internal::optional_data_dtor_base.449" = type { i8, %union.anon.450 }
%union.anon.450 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.451" = type { %"class.absl::optional_internal::optional_data.452" }
%"class.absl::optional_internal::optional_data.452" = type { %"class.absl::optional_internal::optional_data_base.453" }
%"class.absl::optional_internal::optional_data_base.453" = type { %"class.absl::optional_internal::optional_data_dtor_base.454" }
%"class.absl::optional_internal::optional_data_dtor_base.454" = type { i8, %union.anon.455 }
%union.anon.455 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.457" }
%"class.blink::HeapHashSet.457" = type { %"class.WTF::HashSet.460" }
%"class.WTF::HashSet.460" = type { %"class.WTF::HashTable.461" }
%"class.WTF::HashTable.461" = type <{ %"class.blink::WeakMember.463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.463" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.32" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.23", i8, i8, [6 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.blink::Member.2821" }
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::Supplement.2823"* }
%"class.blink::Supplement.2823" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2824" }
%"class.blink::Member.2824" = type { %"class.blink::MemberBase.2825" }
%"class.blink::MemberBase.2825" = type { %"class.blink::HTMLIFrameElement"* }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::HTMLIFrameElementSandbox"* }
%"class.blink::HTMLIFrameElementSandbox" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.51", %"class.blink::QualifiedName", i8 }>
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.55" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.57", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.122", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.131", %"class.blink::Member.133", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.142", %"class.blink::Member.283", %"class.blink::Member.285", i8, [7 x i8] }>
%"class.blink::Supplementable.57" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.58" }
%"class.blink::HeapHashMap.58" = type { %"class.WTF::HashMap.61" }
%"class.WTF::HashMap.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair.64"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.64" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.69" }
%"class.blink::Supplementable.69" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.70" }
%"class.blink::HeapHashMap.70" = type { %"class.WTF::HashMap.73" }
%"class.WTF::HashMap.73" = type { %"class.WTF::HashTable.74" }
%"class.WTF::HashTable.74" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type { i8*, %"class.blink::Member.2698" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2700" }
%"class.blink::Member.2700" = type { %"class.blink::MemberBase.2701" }
%"class.blink::MemberBase.2701" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.77, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", %"class.blink::Member.55", i32, [4 x i8], %"class.WTF::HashSet.118", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.91", %"class.std::__1::map.100"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.100" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.105" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.118" = type { %"class.WTF::HashTable.119" }
%"class.WTF::HashTable.119" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::Member.129"*, i32, i32 }
%"class.blink::Member.129" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.135", i32, i32 }
%"class.blink::HeapHashMap.135" = type { %"class.WTF::HashMap.138" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.133", i8, [7 x i8], %"class.WTF::Vector.148", %"class.blink::HeapVector.289", i8, [7 x i8], %"class.WTF::HashSet.118", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.289" = type { %"class.WTF::Vector.292" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::Member.295"*, i32, i32 }
%"class.blink::Member.295" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1952", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1931", %"class.WTF::Vector.1931", i8, i32, %"class.blink::Member.1960", %"class.blink::Member.55", %"class.blink::Member.1962", %"class.blink::Member.1964", %"class.blink::Member.1966", %"class.blink::Member.1968", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1970", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1976", %"class.blink::Member.1978", %"class.blink::Member.1285", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1980", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2001", %"class.blink::HeapVector.1261", %"class.blink::Member.51", %"class.blink::Member.2003", %"class.blink::Member.51", %"class.blink::Member.51", %"class.blink::Member.51", %"class.blink::UserActionElementSet", %"class.blink::Member.2012", double, double, i64, i64, %"class.blink::HeapHashSet.2014", %"class.blink::HeapHashSet.2021", i16, i8, %"class.blink::Member.2028", %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::TextLinkColors", %"class.blink::Member.2036", i8, [7 x i8], %"class.blink::HeapHashMap.2038", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.51", %"class.WTF::Vector.2045", %"class.blink::Member.2050", %"class.blink::Member.2052", i8, %"class.blink::Member.51", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2054", %"class.blink::HeapVector.2056", %"class.std::__1::unique_ptr.2064", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2070", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2083", %"class.WTF::Vector.2085", i8, i8, %"class.std::__1::unique_ptr.2090", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1261", %"class.blink::HeapVector.2096", i32, i8, %"class.blink::HeapTaskRunnerTimer.2001", %"class.blink::HeapTaskRunnerTimer.2001", %"class.blink::DocumentTiming", %"class.blink::Member.2104", i8, i32, %"class.blink::Member.2106", %"class.blink::Member.2108", %"class.blink::Member.2110", %"class.blink::HeapTaskRunnerTimer.2001", %"class.blink::Member.2112", %"class.WTF::HashMap.2114", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.blink::Member.1244", %"class.blink::Member.1244", %"class.blink::HeapTaskRunnerTimer.2001", %"class.blink::HeapHashSet.2127", i8, i32, %"class.blink::Member.2134", %"class.blink::Member.2136", i32, %"class.blink::Member.2138", %"class.blink::Member.2140", %"class.blink::Member.2142", %"class.std::__1::unique_ptr.2144", i64, %"class.std::__1::unique_ptr.2150", i32, i32, %"class.blink::Member.53", %"class.blink::Member.2165", %"class.blink::Member.2167", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2169", %"class.WTF::Vector.2171", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2176", %"class.blink::Member.2183", %"class.std::__1::unique_ptr.2185", %"class.blink::Member.2191", i8, i8, %"class.WTF::String", %"class.blink::Member.2193", i8, [7 x i8], %"class.blink::HeapHashMap.2195", %"class.blink::HeapObserverSet.2202", %"class.blink::Member.2210", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2212", i32, i8, i8, %"class.blink::WeakMember.2214", %"class.blink::Member.2215" }
%"class.blink::Supplementable.1952" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1953" }
%"class.blink::HeapHashMap.1953" = type { %"class.WTF::HashMap.1956" }
%"class.WTF::HashMap.1956" = type { %"class.WTF::HashTable.1957" }
%"class.WTF::HashTable.1957" = type <{ %"struct.WTF::KeyValuePair.1959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1959" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1970" = type { %"class.std::__1::__compressed_pair.1971" }
%"class.std::__1::__compressed_pair.1971" = type { %"struct.std::__1::__compressed_pair_elem.1972" }
%"struct.std::__1::__compressed_pair_elem.1972" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1980" = type { %"class.WTF::VectorBuffer.1981" }
%"class.WTF::VectorBuffer.1981" = type { %"class.WTF::VectorBufferBase.1982" }
%"class.WTF::VectorBufferBase.1982" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1983 }
%class.scoped_refptr.1983 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.2005" }
%"class.blink::HeapHashMap.2005" = type { %"class.WTF::HashMap.2008" }
%"class.WTF::HashMap.2008" = type { %"class.WTF::HashTable.2009" }
%"class.WTF::HashTable.2009" = type <{ %"struct.WTF::KeyValuePair.2011"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2011" = type opaque
%"class.blink::Member.2012" = type { %"class.blink::MemberBase.2013" }
%"class.blink::MemberBase.2013" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.2014" = type { %"class.WTF::HashSet.2017" }
%"class.WTF::HashSet.2017" = type { %"class.WTF::HashTable.2018" }
%"class.WTF::HashTable.2018" = type <{ %"class.blink::WeakMember.2020"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2020" = type opaque
%"class.blink::HeapHashSet.2021" = type { %"class.WTF::HashSet.2024" }
%"class.WTF::HashSet.2024" = type { %"class.WTF::HashTable.2025" }
%"class.WTF::HashTable.2025" = type <{ %"class.blink::WeakMember.2027"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2027" = type opaque
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2038" = type { %"class.WTF::HashMap.2041" }
%"class.WTF::HashMap.2041" = type { %"class.WTF::HashTable.2042" }
%"class.WTF::HashTable.2042" = type <{ %"struct.WTF::KeyValuePair.2044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2044" = type opaque
%"class.WTF::Vector.2045" = type { %"class.WTF::VectorBuffer.2046" }
%"class.WTF::VectorBuffer.2046" = type { %"class.WTF::VectorBufferBase.2047" }
%"class.WTF::VectorBufferBase.2047" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2056" = type { %"class.WTF::Vector.2059" }
%"class.WTF::Vector.2059" = type { %"class.WTF::VectorBuffer.2060" }
%"class.WTF::VectorBuffer.2060" = type { %"class.WTF::VectorBufferBase.2061" }
%"class.WTF::VectorBufferBase.2061" = type { %"class.blink::Member.2062"*, i32, i32 }
%"class.blink::Member.2062" = type opaque
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2070" = type { %"class.WTF::HashSet.2073" }
%"class.WTF::HashSet.2073" = type { %"class.WTF::HashTable.2074" }
%"class.WTF::HashTable.2074" = type <{ %"class.blink::WeakMember.2076"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2076" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2077", i32, [4 x i8] }>
%"class.WTF::Vector.2077" = type { %"class.WTF::VectorBuffer.2078" }
%"class.WTF::VectorBuffer.2078" = type { %"class.WTF::VectorBufferBase.2079" }
%"class.WTF::VectorBufferBase.2079" = type { %"struct.std::__1::pair.2080"*, i32, i32 }
%"struct.std::__1::pair.2080" = type opaque
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2085" = type { %"class.WTF::VectorBuffer.2086" }
%"class.WTF::VectorBuffer.2086" = type { %"class.WTF::VectorBufferBase.2087" }
%"class.WTF::VectorBufferBase.2087" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2090" = type { %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.2092" }
%"struct.std::__1::__compressed_pair_elem.2092" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2096" = type { %"class.WTF::Vector.2099" }
%"class.WTF::Vector.2099" = type { %"class.WTF::VectorBuffer.2100" }
%"class.WTF::VectorBuffer.2100" = type { %"class.WTF::VectorBufferBase.2101" }
%"class.WTF::VectorBufferBase.2101" = type { %"class.blink::Member.2102"*, i32, i32 }
%"class.blink::Member.2102" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1244" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2114" = type { %"class.WTF::HashTable.2115" }
%"class.WTF::HashTable.2115" = type <{ %"struct.WTF::KeyValuePair.2118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2118" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.2001" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2002", { i64, i64 } }
%"class.blink::WeakMember.2002" = type { %"class.blink::MemberBase.1245" }
%"class.blink::HeapHashSet.2127" = type { %"class.WTF::HashSet.2130" }
%"class.WTF::HashSet.2130" = type { %"class.WTF::HashTable.2131" }
%"class.WTF::HashTable.2131" = type <{ %"class.blink::Member.2133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2133" = type opaque
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2144" = type { %"class.std::__1::__compressed_pair.2145" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.2150" = type { %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.2153", %"class.WTF::HashSet.2153", %"class.WTF::HashSet.2153", %"class.WTF::HashSet.2153", %"class.WTF::HashSet.2153", %"class.WTF::HashSet.2153", i32, [4 x i8], %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", %"class.WTF::HashMap.2157", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.2153" = type { %"class.WTF::HashTable.2154" }
%"class.WTF::HashTable.2154" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.2157" = type { %"class.WTF::HashTable.2158" }
%"class.WTF::HashTable.2158" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2167" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.2171" = type { %"class.WTF::VectorBuffer.2172" }
%"class.WTF::VectorBuffer.2172" = type { %"class.WTF::VectorBufferBase.2173" }
%"class.WTF::VectorBufferBase.2173" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2176" = type { %"class.WTF::HashMap.2179" }
%"class.WTF::HashMap.2179" = type { %"class.WTF::HashTable.2180" }
%"class.WTF::HashTable.2180" = type <{ %"struct.WTF::KeyValuePair.2182"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2182" = type opaque
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2185" = type { %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2191" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2195" = type { %"class.WTF::HashMap.2198" }
%"class.WTF::HashMap.2198" = type { %"class.WTF::HashTable.2199" }
%"class.WTF::HashTable.2199" = type <{ %"struct.WTF::KeyValuePair.2201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2201" = type opaque
%"class.blink::HeapObserverSet.2202" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2203" }
%"class.blink::HeapHashSet.2203" = type { %"class.WTF::HashSet.2206" }
%"class.WTF::HashSet.2206" = type { %"class.WTF::HashTable.2207" }
%"class.WTF::HashTable.2207" = type <{ %"class.blink::WeakMember.2209"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2209" = type opaque
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1244", %"class.blink::HeapHashSet.2219", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2226", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2219" = type { %"class.WTF::HashSet.2222" }
%"class.WTF::HashSet.2222" = type { %"class.WTF::HashTable.2223" }
%"class.WTF::HashTable.2223" = type <{ %"class.blink::Member.2225"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2225" = type opaque
%"class.blink::HeapTaskRunnerTimer.2226" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2227", { i64, i64 } }
%"class.blink::WeakMember.2227" = type { %"class.blink::MemberBase.2213" }
%"class.blink::WeakMember.2214" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2569" = type { %"class.WTF::HashTable.2570" }
%"class.WTF::HashTable.2570" = type <{ %"struct.WTF::KeyValuePair.2573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2573" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.51", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.blink::IFramePolicy" = type { %"class.blink::DOMFeaturePolicy", %"class.std::__1::unique_ptr" }
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.network::WebSandboxFlagsParsingResult" = type { i32, %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::HTMLDocument" = type { %"class.blink::Document", %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2576" }
%"class.WTF::HashMap.2576" = type { %"class.WTF::HashTable.2577" }
%"class.WTF::HashTable.2577" = type <{ %"struct.WTF::KeyValuePair.2580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2580" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2583", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2595", %"class.WTF::Vector.2596" }
%"class.std::__1::unique_ptr.2583" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2586", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2586" = type { %"class.std::__1::__compressed_pair.2587" }
%"class.std::__1::__compressed_pair.2587" = type { %"struct.std::__1::__compressed_pair_elem.2588" }
%"struct.std::__1::__compressed_pair_elem.2588" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2595" = type { %"class.blink::MemberBase.443" }
%"class.WTF::Vector.2596" = type { %"class.WTF::VectorBuffer.2597" }
%"class.WTF::VectorBuffer.2597" = type { %"class.WTF::VectorBufferBase.1850" }
%"class.blink::PolicyParserMessageBuffer" = type <{ %"class.WTF::String", %"class.WTF::Vector.2508", i8, [7 x i8] }>
%"class.absl::optional.2600" = type { %"class.absl::optional_internal::optional_data.2601" }
%"class.absl::optional_internal::optional_data.2601" = type { %"class.absl::optional_internal::optional_data_base.2602" }
%"class.absl::optional_internal::optional_data_base.2602" = type { %"class.absl::optional_internal::optional_data_dtor_base.2603" }
%"class.absl::optional_internal::optional_data_dtor_base.2603" = type { i8, %union.anon.2604 }
%union.anon.2604 = type { %"struct.blink::DocumentPolicy::ParsedDocumentPolicy" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::StringAppend.2827" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::LayoutIFrame" = type { %"class.blink::LayoutEmbeddedContent.base", [4 x i8] }
%"class.blink::LayoutEmbeddedContent.base" = type <{ %"class.blink::LayoutReplaced", i32 }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2605, %"class.WTF::Vector.2606", %"class.std::__1::unique_ptr.2611", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2632, %"class.blink::Persistent.2633" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2605 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2606" = type { %"class.WTF::VectorBuffer.2607" }
%"class.WTF::VectorBuffer.2607" = type { %"class.WTF::VectorBufferBase.2608", [8 x i8] }
%"class.WTF::VectorBufferBase.2608" = type { %class.scoped_refptr.2605*, i32, i32 }
%"class.std::__1::unique_ptr.2611" = type { %"class.std::__1::__compressed_pair.2612" }
%"class.std::__1::__compressed_pair.2612" = type { %"struct.std::__1::__compressed_pair_elem.2613" }
%"struct.std::__1::__compressed_pair_elem.2613" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2614", %"class.absl::optional.2619", %"class.absl::optional.2624" }
%"class.absl::optional.2614" = type { %"class.absl::optional_internal::optional_data.2615" }
%"class.absl::optional_internal::optional_data.2615" = type { %"class.absl::optional_internal::optional_data_base.2616" }
%"class.absl::optional_internal::optional_data_base.2616" = type { %"class.absl::optional_internal::optional_data_dtor_base.2617" }
%"class.absl::optional_internal::optional_data_dtor_base.2617" = type { i8, %union.anon.2618 }
%union.anon.2618 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2619" = type { %"class.absl::optional_internal::optional_data.2620" }
%"class.absl::optional_internal::optional_data.2620" = type { %"class.absl::optional_internal::optional_data_base.2621" }
%"class.absl::optional_internal::optional_data_base.2621" = type { %"class.absl::optional_internal::optional_data_dtor_base.2622" }
%"class.absl::optional_internal::optional_data_dtor_base.2622" = type { i8, [3 x i8], %union.anon.2623 }
%union.anon.2623 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2624" = type { %"class.absl::optional_internal::optional_data.2625" }
%"class.absl::optional_internal::optional_data.2625" = type { %"class.absl::optional_internal::optional_data_base.2626" }
%"class.absl::optional_internal::optional_data_base.2626" = type { %"class.absl::optional_internal::optional_data_dtor_base.2627" }
%"class.absl::optional_internal::optional_data_dtor_base.2627" = type { i8, %union.anon.2628 }
%union.anon.2628 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2632 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.2633" = type { %"class.blink::PersistentBase.2634" }
%"class.blink::PersistentBase.2634" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.1195" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2637", %"struct.blink::PhysicalRect", %"class.blink::Member.2647" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.2637" = type { %"class.std::__1::__compressed_pair.2638" }
%"class.std::__1::__compressed_pair.2638" = type { %"struct.std::__1::__compressed_pair_elem.2639" }
%"struct.std::__1::__compressed_pair_elem.2639" = type { %"class.WTF::HashSet.2640"* }
%"class.WTF::HashSet.2640" = type { %"class.WTF::HashTable.2641" }
%"class.WTF::HashTable.2641" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.mojo::StructPtr.2649" = type { %"class.std::__1::unique_ptr.2650" }
%"class.std::__1::unique_ptr.2650" = type { %"class.std::__1::__compressed_pair.2651" }
%"class.std::__1::__compressed_pair.2651" = type { %"struct.std::__1::__compressed_pair_elem.2652" }
%"struct.std::__1::__compressed_pair_elem.2652" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2653", %"class.WTF::Vector.172", %"class.WTF::String" }
%"class.WTF::Vector.2653" = type { %"class.WTF::VectorBuffer.2654" }
%"class.WTF::VectorBuffer.2654" = type { %"class.WTF::VectorBufferBase.2655" }
%"class.WTF::VectorBufferBase.2655" = type { %class.scoped_refptr.80*, i32, i32 }
%"struct.blink::JSONParseError" = type { i32, i32, i32, %"class.WTF::String" }
%"class.WTF::StringAppend.2667" = type { %"class.WTF::StringAppend.2668", %"class.WTF::String" }
%"class.WTF::StringAppend.2668" = type { i8*, %"class.WTF::String" }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2673, %"class.blink::Member.2674", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2678" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2673 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2676" }
%"class.blink::Persistent.2676" = type { %"class.blink::PersistentBase.2677" }
%"class.blink::PersistentBase.2677" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.1195" }
%"class.util::TokenType.2678" = type { %"class.base::StrongAlias.2679" }
%"class.base::StrongAlias.2679" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2680", i8, [7 x i8] }>
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2682" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2682" = type { %"class.v8::TracedReference.2683" }
%"class.v8::TracedReference.2683" = type { %"class.v8::BasicTracedReference.2684" }
%"class.v8::BasicTracedReference.2684" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2685", %"class.WTF::String"* }
%"class.blink::HeapVector.2685" = type { %"class.WTF::Vector.2688" }
%"class.WTF::Vector.2688" = type { %"class.WTF::VectorBuffer.2689" }
%"class.WTF::VectorBuffer.2689" = type { %"class.WTF::VectorBufferBase.2690" }
%"class.WTF::VectorBufferBase.2690" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::FormAssociated" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2834" }
%"class.WTF::Vector.2834" = type { %"class.WTF::VectorBuffer.2835" }
%"class.WTF::VectorBuffer.2835" = type { %"class.WTF::VectorBufferBase.2836", [64 x i8] }
%"class.WTF::VectorBufferBase.2836" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.2833" }
%"class.WTF::StringTypeAdapter.2833" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2841", %"class.blink::FreeList", %"class.WTF::Vector.2846" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2840" }
%"struct.std::__1::array.2840" = type { [256 x i8] }
%"class.WTF::Vector.2841" = type { %"class.WTF::VectorBuffer.2842" }
%"class.WTF::VectorBuffer.2842" = type { %"class.WTF::VectorBufferBase.2843" }
%"class.WTF::VectorBufferBase.2843" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2846" = type { %"class.WTF::VectorBuffer.2847" }
%"class.WTF::VectorBuffer.2847" = type { %"class.WTF::VectorBufferBase.2848" }
%"class.WTF::VectorBufferBase.2848" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.WTF::StringTypeAdapter.2883" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2884" = type { %"class.WTF::StringTypeAdapter.2833" }

$_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZNK5blink17HTMLIFrameElement15AllowFullscreenEv = comdat any

$_ZN5blink25PolicyParserMessageBuffer4WarnERKN3WTF6StringE = comdat any

$_ZNK5blink17HTMLIFrameElement19AllowPaymentRequestEv = comdat any

$_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17HTMLIFrameElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink17HTMLIFrameElement9OwnerTypeEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv = comdat any

$_ZNK5blink20HTMLFrameElementBase11MarginWidthEv = comdat any

$_ZNK5blink20HTMLFrameElementBase12MarginHeightEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZNK5blink10FrameOwner8IsPluginEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv = comdat any

$_ZThn104_NK5blink17HTMLIFrameElement15AllowFullscreenEv = comdat any

$_ZThn104_NK5blink17HTMLIFrameElement19AllowPaymentRequestEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZN3WTF6VectorIN5blink25PolicyParserMessageBuffer7MessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25PolicyParserMessageBuffer7MessageEEEmm = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_24HTMLIFrameElementSandboxEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16DOMFeaturePolicyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_17HTMLIFrameElementEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink12IFramePolicyC2EPNS_16ExecutionContextERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEE13scoped_refptrIKNS_14SecurityOriginEE = comdat any

$_ZN5blink12IFramePolicy21UpdateContainerPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE13scoped_refptrIKNS_14SecurityOriginEE = comdat any

$_ZN5blink12IFramePolicyD2Ev = comdat any

$_ZN5blink12IFramePolicyD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink16DOMFeaturePolicy18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink12IFramePolicy9GetPolicyEv = comdat any

$_ZNK5blink12IFramePolicy14IsIFramePolicyEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelENS_9WebStringEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_12AtomicStringEEEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEEcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA96_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA59_KcEEEPS1_DpOT_ = comdat any

$_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA69_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA117_KcEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink12IFramePolicyE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink17HTMLIFrameElementE = hidden unnamed_addr constant { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] } { [202 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZN5blink17HTMLIFrameElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZN5blink17HTMLIFrameElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*, i1, i32)* @_ZN5blink20HTMLFrameElementBase10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink20HTMLFrameElementBase16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLIFrameElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLIFrameElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZN5blink20HTMLFrameElementBase36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLIFrameElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2569"* (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink17HTMLIFrameElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink17HTMLIFrameElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17HTMLIFrameElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"*)* @_ZNK5blink20HTMLFrameElementBase21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLIFrameElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink17HTMLIFrameElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink17HTMLIFrameElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"*)* @_ZNK5blink20HTMLFrameElementBase14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"*)* @_ZNK5blink20HTMLFrameElementBase22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement22DisconnectContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, i1)* @_ZN5blink17HTMLIFrameElement12SetCollapsedEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement9OwnerTypeEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement24ConstructContainerPolicyEv to i8*), i8* bitcast (void (%"class.base::flat_map"*, %"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement23ConstructRequiredPolicyEv to i8*), i8* bitcast (void (%"class.mojo::StructPtr.2649"*, %"class.blink::HTMLIFrameElement"*)* @_ZNK5blink17HTMLIFrameElement25ConstructTrustTokenParamsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLIFrameElement"*)* @_ZN5blink17HTMLIFrameElement23ReferrerPolicyAttributeEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZN5blink17HTMLIFrameElement19CSPAttributeChangedEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [28 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZThn104_N5blink17HTMLIFrameElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZThn104_N5blink17HTMLIFrameElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (i1 (%"class.blink::FrameOwner"*)* @_ZNK5blink10FrameOwner8IsPluginEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*)* @_ZThn104_NK5blink17HTMLIFrameElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLIFrameElement"*)* @_ZThn104_NK5blink17HTMLIFrameElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLIFrameElement"*)* @_ZThn104_N5blink17HTMLIFrameElement19CSPAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*)], [3 x i8*] [i8* inttoptr (i64 -232 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*)* @_ZThn232_NK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global i64 0, align 8
@_ZN5blink19style_change_reason6kFrameE = external constant [0 x i8], align 1
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kFrameborderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kSandboxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [46 x i8] c"Error while parsing the 'sandbox' attribute: \00", align 1
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAllowfullscreenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAllowpaymentrequestAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kCspAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"'csp' attribute is invalid: \00", align 1
@_ZN5blink10html_names10kAllowAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names27kDisallowdocumentaccessAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kPolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kTrusttokenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"gesture\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"media\00", align 1
@.str.4 = private unnamed_addr constant [96 x i8] c"<iframe gesture=\22media\22> is not supported. Use <iframe allow=\22autoplay\22>, https://goo.gl/ximf56\00", align 1
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"iframe\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"Iframe policy attribute cannot specify reporting endpoint.\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"Blink.UseCounter.DocumentPolicy.PolicyAttribute\00", align 1
@.str.8 = private unnamed_addr constant [61 x i8] c"Allow attribute will take precedence over 'allowfullscreen'.\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"Allow attribute will take precedence over 'allowpaymentrequest'.\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"iframe trusttoken attribute was invalid JSON: \00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c" (line %d, col %d)\00", align 1
@.str.12 = private unnamed_addr constant [69 x i8] c"Couldn't parse iframe trusttoken attribute (was it missing a field?)\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.13 = private unnamed_addr constant [117 x i8] c"Trust Tokens: Attempted redemption or signing without the trust-token-redemption Permissions Policy feature present.\00", align 1
@.str.14 = private unnamed_addr constant [96 x i8] c"Trust Tokens issuance is disabled except in contexts with the TrustTokens Origin Trial enabled.\00", align 1
@_ZTVN5blink20HTMLFrameElementBaseE = external unnamed_addr constant { [201 x i8*], [3 x i8*], [28 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_storage_access_api_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_disallow_document_access_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.16 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25PolicyParserMessageBuffer7MessageEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PolicyParserMessageBuffer::Message]\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.21 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink17HTMLIFrameElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.25 = private unnamed_addr constant [7 x i8] c"srcdoc\00", align 1
@.str.26 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::SpecificTrustedType>]\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZTVN5blink12IFramePolicyE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::IFramePolicy"*)* @_ZN5blink12IFramePolicyD2Ev to i8*), i8* bitcast (void (%"class.blink::IFramePolicy"*)* @_ZN5blink12IFramePolicyD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)* @_ZNK5blink16DOMFeaturePolicy5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMFeaturePolicy"*)* @_ZNK5blink16DOMFeaturePolicy18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::IFramePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)* @_ZN5blink12IFramePolicy21UpdateContainerPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE13scoped_refptrIKNS_14SecurityOriginEE to i8*), i8* bitcast (%"class.blink::PermissionsPolicy"* (%"class.blink::IFramePolicy"*)* @_ZNK5blink12IFramePolicy9GetPolicyEv to i8*), i8* bitcast (i1 (%"class.blink::IFramePolicy"*)* @_ZNK5blink12IFramePolicy14IsIFramePolicyEv to i8*)] }, comdat, align 8
@_ZN5blink16DOMFeaturePolicy18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZZNK5blink17HTMLIFrameElement23ConstructRequiredPolicyEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink17HTMLIFrameElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLIFrameElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLIFrameElement"*, %"class.blink::Document"*)* @_ZN5blink17HTMLIFrameElementC2ERNS_8DocumentE
@_ZN5blink17HTMLIFrameElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLIFrameElement"*), void (%"class.blink::HTMLIFrameElement"*)* @_ZN5blink17HTMLIFrameElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElementC2ERNS_8DocumentE(%"class.blink::HTMLIFrameElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink20HTMLFrameElementBaseC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFrameElementBase"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* dereferenceable(2848) %1) #15
  %5 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 1, i32 1
  %7 = bitcast %"class.blink::HeapHashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #15
  %8 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 9
  store i8 0, i8* %12, align 2
  %13 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 40, i1 false)
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #15
  %15 = bitcast i8* %14 to %"class.blink::HTMLIFrameElementSandbox"*
  tail call void @_ZN5blink24HTMLIFrameElementSandboxC1EPNS_17HTMLIFrameElementE(%"class.blink::HTMLIFrameElementSandbox"* %15, %"class.blink::HTMLIFrameElement"* %0) #15
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 11, i32 0, i32 0
  %21 = bitcast %"class.blink::HTMLIFrameElementSandbox"** %20 to i8**
  store i8* %14, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::DOMFeaturePolicy"* null, %"class.blink::DOMFeaturePolicy"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 13
  store i32 1, i32* %23, align 8
  ret void
}

declare void @_ZN5blink20HTMLFrameElementBaseC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE(%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 11
  %4 = bitcast %"class.blink::Member.49"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24HTMLIFrameElementSandboxEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 12
  %15 = bitcast %"class.blink::Member.53"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DOMFeaturePolicyEE5TraceEPNS_7VisitorEPKv) #15
  br label %24

24:                                               ; preds = %13, %18
  %25 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"* %25, %"class.blink::Visitor"* %1) #15
  %26 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 1, i32 1
  %27 = bitcast %"class.blink::HeapHashMap"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = bitcast %"class.blink::HeapHashMap"* %26 to i8**
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %31 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, i64 11
  %33 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8** %29) #15
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %24
  %36 = inttoptr i64 %28 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #15
  br label %41

41:                                               ; preds = %24, %35
  ret void
}

declare void @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE(%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %4 = getelementptr inbounds %"class.blink::Supplementable", %"class.blink::Supplementable"* %3, i64 9, i32 1, i32 0, i32 0, i32 3
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24HTMLIFrameElementSandboxEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Supplementable", %"class.blink::Supplementable"* %3, i64 10
  %16 = bitcast %"class.blink::Supplementable"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DOMFeaturePolicyEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %19, %14
  %26 = bitcast %"class.blink::Supplementable"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"* %26, %"class.blink::Visitor"* %1) #15
  %27 = getelementptr inbounds %"class.blink::Supplementable", %"class.blink::Supplementable"* %3, i64 7, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast i32* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = bitcast i32* %27 to i8**
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %32 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, i64 11
  %34 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8** %30) #15
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = inttoptr i64 %29 to i8*
  %38 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, i64 5
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, align 8
  tail call void %41(%"class.blink::Visitor"* %1, i8* nonnull %37, i8* nonnull %37, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #15
  br label %42

42:                                               ; preds = %25, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn232_NK5blink17HTMLIFrameElement5TraceEPNS_7VisitorE(%"class.blink::HTMLIFrameElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %3, i64 39
  %5 = bitcast %"class.blink::FrameOwner"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24HTMLIFrameElementSandboxEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %3, i64 40
  %16 = bitcast %"class.blink::FrameOwner"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DOMFeaturePolicyEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %19, %14
  %26 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"* %26, %"class.blink::Visitor"* %1) #15
  %27 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %3, i64 30
  %28 = bitcast %"class.blink::FrameOwner"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = bitcast %"class.blink::FrameOwner"* %27 to i8**
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %32 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, i64 11
  %34 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8** %30) #15
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = inttoptr i64 %29 to i8*
  %38 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, i64 5
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, align 8
  tail call void %41(%"class.blink::Visitor"* %1, i8* nonnull %37, i8* nonnull %37, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #15
  br label %42

42:                                               ; preds = %25, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElementD2Ev(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }, { [202 x i8*], [3 x i8*], [28 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLIFrameElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #15
  br label %73

73:                                               ; preds = %56, %69, %72
  %74 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #15
  br label %90

90:                                               ; preds = %73, %86, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #15
  br label %107

107:                                              ; preds = %106, %103, %90
  %108 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #15
  br label %124

124:                                              ; preds = %107, %120, %123
  %125 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElementD2Ev(%"class.blink::HTMLFrameOwnerElement"* %125) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLIFrameElementD1Ev(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::Supplementable"* %2 to %"class.blink::HTMLIFrameElement"*
  tail call void @_ZN5blink17HTMLIFrameElementD2Ev(%"class.blink::HTMLIFrameElement"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElementD0Ev(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17HTMLIFrameElementD2Ev(%"class.blink::HTMLIFrameElement"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLIFrameElementD0Ev(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::Supplementable"* %2 to %"class.blink::HTMLIFrameElement"*
  tail call void @_ZN5blink17HTMLIFrameElementD2Ev(%"class.blink::HTMLIFrameElement"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.2569"* @_ZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEv(%"class.blink::HTMLIFrameElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca [1 x %"struct.WTF::KeyValuePair.2573"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %30, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = bitcast [1 x %"struct.WTF::KeyValuePair.2573"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2573"], [1 x %"struct.WTF::KeyValuePair.2573"]* %2, i64 0, i64 0, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i64 6) #15
  %11 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2573"], [1 x %"struct.WTF::KeyValuePair.2573"]* %2, i64 0, i64 0, i32 1
  store i32 1, i32* %11, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2570"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2570"*), i32 1) #15
  %12 = call { %"struct.WTF::KeyValuePair.2573"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2570"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2570"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, i32* dereferenceable(4) %11) #15
  %13 = getelementptr inbounds [1 x %"struct.WTF::KeyValuePair.2573"], [1 x %"struct.WTF::KeyValuePair.2573"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %8, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map) #15
  br label %30

30:                                               ; preds = %5, %29, %1
  ret %"class.WTF::HashMap.2569"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLIFrameElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashMap.2569"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElement12SetCollapsedEb(%"class.blink::HTMLIFrameElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 2, !range !3
  %6 = zext i8 %5 to i32
  %7 = zext i1 %1 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = zext i1 %1 to i8
  store i8 %10, i8* %4, align 2
  %11 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #15
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !4

31:                                               ; preds = %22
  tail call void @llvm.trap() #15
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %9, %17, %32
  %35 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason6kFrameE, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %36, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %11, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #15
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %34, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br label %53

53:                                               ; preds = %2, %52
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMTokenList"* @_ZNK5blink17HTMLIFrameElement7sandboxEv(%"class.blink::HTMLIFrameElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = bitcast %"class.blink::HTMLIFrameElementSandbox"** %2 to %"class.blink::DOMTokenList"**
  %4 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %3, align 8
  ret %"class.blink::DOMTokenList"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMFeaturePolicy"* @_ZN5blink17HTMLIFrameElement13featurePolicyEv(%"class.blink::HTMLIFrameElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.blink::Member.53", %"class.blink::Member.53"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::DOMFeaturePolicy"*, %"class.blink::DOMFeaturePolicy"** %3, align 8
  %5 = icmp eq %"class.blink::DOMFeaturePolicy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  %12 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 4, i32 2
  %13 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameElementBase"* %13) #15
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #15
  %16 = bitcast i8* %15 to %"class.blink::IFramePolicy"*
  tail call void @_ZN5blink12IFramePolicyC2EPNS_16ExecutionContextERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::IFramePolicy"* %16, %"class.blink::ExecutionContext"* %11, %"class.std::__1::vector"* dereferenceable(24) %12, %"class.blink::SecurityOrigin"* %14) #15
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = ptrtoint i8* %15 to i64
  %22 = bitcast %"class.blink::Member.53"* %2 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %10
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #15
  br label %27

27:                                               ; preds = %1, %10, %25, %6
  %28 = load %"class.blink::DOMFeaturePolicy"*, %"class.blink::DOMFeaturePolicy"** %3, align 8
  ret %"class.blink::DOMFeaturePolicy"* %28
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 4
  ret %"struct.blink::FramePolicy"* %2
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLIFrameElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLIFrameElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %27, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kFrameborderAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %25, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br label %27

27:                                               ; preds = %2, %9, %14, %19, %24
  %28 = phi i1 [ %26, %24 ], [ true, %19 ], [ true, %14 ], [ true, %9 ], [ true, %2 ]
  ret i1 %28
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLIFrameElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %12, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 438, %"class.WTF::String"* dereferenceable(8) %13, i32 1, i32 1) #15
  br label %42

14:                                               ; preds = %4
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %20, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 165, %"class.WTF::String"* dereferenceable(8) %21, i32 1, i32 1) #15
  br label %42

22:                                               ; preds = %14
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %42

29:                                               ; preds = %22
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kFrameborderAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %36 = tail call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %35, i8* null) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"* %39, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 471, double 0.000000e+00, i32 5) #15
  br label %42

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %41, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #15
  br label %42

42:                                               ; preds = %34, %19, %40, %38, %27, %11
  ret void
}

declare void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, double, i32) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLIFrameElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"struct.network::WebSandboxFlagsParsingResult", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::WebString", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.WTF::StringAppend", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %21, align 8
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %27
  br i1 %28, label %29, label %128

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %33, i64 0, i32 107
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  %38 = bitcast %"class.blink::Document"* %33 to %"class.blink::HTMLDocument"*
  %39 = icmp eq %"class.blink::Document"* %33, null
  %40 = or i1 %39, %37
  br i1 %40, label %48, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 768
  %45 = icmp eq i32 %44, 256
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2
  tail call void @_ZN5blink12HTMLDocument15RemoveNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"* nonnull %38, %"class.WTF::AtomicString"* dereferenceable(8) %47) #15
  tail call void @_ZN5blink12HTMLDocument12AddNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"* nonnull %38, %"class.WTF::AtomicString"* dereferenceable(8) %22) #15
  br label %48

48:                                               ; preds = %29, %46, %41
  %49 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #15
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !4

67:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %48, %53, %68
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #15
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !4

88:                                               ; preds = %79
  tail call void @llvm.trap() #15
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %70
  %92 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %93 = bitcast %"class.WTF::AtomicString"* %49 to i64*
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %92, i64* %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %109

109:                                              ; preds = %91, %105, %108
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, %51
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"* %113) #15
  br label %114

114:                                              ; preds = %109, %112
  br i1 %52, label %907, label %115

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %907

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #15
  br label %907

128:                                              ; preds = %2
  %129 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kSandboxAttrE, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %131
  br i1 %132, label %133, label %246

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 11, i32 0, i32 0
  %135 = bitcast %"class.blink::HTMLIFrameElementSandbox"** %134 to %"class.blink::DOMTokenList"**
  %136 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %135, align 8
  %137 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %138 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %137, align 8
  tail call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %136, %"class.WTF::AtomicString"* dereferenceable(8) %138, %"class.WTF::AtomicString"* dereferenceable(8) %22) #15
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %234, label %142

142:                                              ; preds = %133
  %143 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_storage_access_api_enabled_E, align 1, !range !3
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %144, i32 65536, i32 0
  %146 = bitcast %"struct.network::WebSandboxFlagsParsingResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %146) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 32, i1 false)
  %147 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #15
  %148 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #15
  %149 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #15
  %150 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %135, align 8
  %151 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12DOMTokenList5valueEv(%"class.blink::DOMTokenList"* %150) #15
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* nonnull %153, i32 0) #15
  %154 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %155 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = select i1 %158, i8* %160, i8* %148
  store i8* %161, i8** %154, align 8
  %162 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = zext i8 %157 to i64
  %166 = select i1 %158, i64 %164, i64 %165
  store i64 %166, i64* %162, align 8
  call void @_ZN7network21ParseWebSandboxPolicyERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_5mojom15WebSandboxFlagsE(%"struct.network::WebSandboxFlagsParsingResult"* nonnull sret %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, i32 %145) #15
  %167 = load i8, i8* %156, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %142
  %170 = load i8*, i8** %159, align 8
  call void @_ZdlPv(i8* %170) #16
  br label %171

171:                                              ; preds = %142, %169
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #15
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #15
  %188 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %5, i64 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %5, i64 0, i32 1
  %191 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = zext i8 %193 to i64
  %198 = select i1 %194, i64 %196, i64 %197
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %227, label %200

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %202 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %202, i64 0, i32 2, i32 0, i32 0
  %204 = load %"class.blink::Document"*, %"class.blink::Document"** %203, align 8
  %205 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #15
  store i32 8, i32* %9, align 4
  %206 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206) #15
  store i32 3, i32* %10, align 4
  %207 = bitcast %"class.blink::WebString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #15
  %208 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #15
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %190) #15
  %209 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1, !noalias !5
  %212 = icmp slt i8 %211, 0
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8, !noalias !5
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8, !noalias !5
  %217 = zext i8 %211 to i64
  %218 = select i1 %212, i8* %214, i8* %208
  %219 = select i1 %212, i64 %216, i64 %217
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %218, i64 %219) #15
  %220 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelENS_9WebStringEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10, %"class.blink::WebString"* nonnull dereferenceable(8) %11) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %204, %"class.blink::ConsoleMessage"* %220, i1 zeroext false) #15
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #15
  %221 = load i8, i8* %210, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %200
  %224 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %224) #16
  br label %225

225:                                              ; preds = %200, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #15
  %226 = load i8, i8* %192, align 1
  br label %227

227:                                              ; preds = %225, %187
  %228 = phi i8 [ %226, %225 ], [ %193, %187 ]
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %232) #16
  br label %233

233:                                              ; preds = %227, %230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %146) #15
  br label %234

234:                                              ; preds = %233, %133
  %235 = phi i32 [ 0, %133 ], [ %189, %233 ]
  %236 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  call void @_ZN5blink21HTMLFrameOwnerElement15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::HTMLFrameOwnerElement"* %236, i32 %235) #15
  %237 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %238 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %238, i64 0, i32 2, i32 0, i32 0
  %240 = load %"class.blink::Document"*, %"class.blink::Document"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %240, i64 0, i32 2
  %242 = bitcast %"class.blink::UseCounter"* %241 to void (%"class.blink::UseCounter"*, i32)***
  %243 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %243, i64 3
  %245 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %244, align 8
  call void %245(%"class.blink::UseCounter"* %241, i32 672) #15
  br label %907

246:                                              ; preds = %128
  %247 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %248 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %248, align 8
  %250 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %249
  br i1 %250, label %251, label %268

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 13
  store i32 1, i32* %252, align 8
  %253 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %907, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0
  %258 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %257, i32 0, i32* %252) #15
  %259 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %260 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %260, i64 0, i32 2, i32 0, i32 0
  %262 = load %"class.blink::Document"*, %"class.blink::Document"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %262, i64 0, i32 2
  %264 = bitcast %"class.blink::UseCounter"* %263 to void (%"class.blink::UseCounter"*, i32)***
  %265 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %265, i64 3
  %267 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %266, align 8
  tail call void %267(%"class.blink::UseCounter"* %263, i32 1755) #15
  br label %907

268:                                              ; preds = %246
  %269 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAllowfullscreenAttrE, align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %269, i64 0, i32 0, i32 0
  %271 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %270, align 8
  %272 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %271
  br i1 %272, label %273, label %301

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 7
  %275 = load i8, i8* %274, align 8, !range !3
  %276 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  %279 = xor i1 %278, true
  %280 = zext i1 %279 to i8
  store i8 %280, i8* %274, align 8
  %281 = zext i1 %279 to i32
  %282 = zext i8 %275 to i32
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %907, label %284

284:                                              ; preds = %273
  br i1 %278, label %299, label %285

285:                                              ; preds = %284
  %286 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %287 = load %"class.blink::Frame"*, %"class.blink::Frame"** %286, align 8
  %288 = icmp eq %"class.blink::Frame"* %287, null
  br i1 %288, label %299, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %291 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %291, i64 0, i32 2, i32 0, i32 0
  %293 = load %"class.blink::Document"*, %"class.blink::Document"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %293, i64 0, i32 2
  %295 = bitcast %"class.blink::UseCounter"* %294 to void (%"class.blink::UseCounter"*, i32)***
  %296 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %296, i64 3
  %298 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %297, align 8
  tail call void %298(%"class.blink::UseCounter"* %294, i32 1805) #15
  br label %299

299:                                              ; preds = %285, %284, %289
  %300 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"* %300) #15
  tail call void @_ZN5blink21HTMLFrameOwnerElement21UpdateContainerPolicyEv(%"class.blink::HTMLFrameOwnerElement"* %300) #15
  br label %907

301:                                              ; preds = %268
  %302 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAllowpaymentrequestAttrE, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %302, i64 0, i32 0, i32 0
  %304 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %303, align 8
  %305 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %304
  br i1 %305, label %306, label %318

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 8
  %308 = load i8, i8* %307, align 1, !range !3
  %309 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp ne %"class.WTF::StringImpl"* %310, null
  %312 = zext i1 %311 to i8
  store i8 %312, i8* %307, align 1
  %313 = zext i1 %311 to i32
  %314 = zext i8 %308 to i32
  %315 = icmp eq i32 %313, %314
  br i1 %315, label %907, label %316

316:                                              ; preds = %306
  %317 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"* %317) #15
  tail call void @_ZN5blink21HTMLFrameOwnerElement21UpdateContainerPolicyEv(%"class.blink::HTMLFrameOwnerElement"* %317) #15
  br label %907

318:                                              ; preds = %301
  %319 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kCspAttrE, align 8
  %320 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %319, i64 0, i32 0, i32 0
  %321 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %320, align 8
  %322 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %321
  br i1 %322, label %323, label %571

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %517, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 1
  br i1 %331, label %345, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %365, label %337

337:                                              ; preds = %333
  %338 = bitcast %"class.WTF::StringImpl"* %332 to i8*
  %339 = zext i32 %335 to i64
  %340 = tail call i8* @memchr(i8* %338, i32 10, i64 %339) #17
  %341 = icmp eq i8* %340, null
  %342 = ptrtoint i8* %340 to i64
  %343 = ptrtoint %"class.WTF::StringImpl"* %332 to i64
  %344 = sub i64 %342, %343
  br i1 %341, label %365, label %360

345:                                              ; preds = %327
  %346 = bitcast %"class.WTF::StringImpl"* %332 to i16*
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %365, label %350

350:                                              ; preds = %345
  %351 = zext i32 %348 to i64
  br label %352

352:                                              ; preds = %357, %350
  %353 = phi i64 [ %358, %357 ], [ 0, %350 ]
  %354 = getelementptr inbounds i16, i16* %346, i64 %353
  %355 = load i16, i16* %354, align 2
  %356 = icmp eq i16 %355, 10
  br i1 %356, label %360, label %357

357:                                              ; preds = %352
  %358 = add nuw nsw i64 %353, 1
  %359 = icmp eq i64 %358, %351
  br i1 %359, label %365, label %352

360:                                              ; preds = %352, %337
  %361 = phi i32 [ %335, %337 ], [ %348, %352 ]
  %362 = phi i64 [ %344, %337 ], [ %353, %352 ]
  %363 = trunc i64 %362 to i32
  %364 = icmp eq i32 %363, -1
  br i1 %364, label %365, label %400

365:                                              ; preds = %357, %360, %337, %345, %333
  %366 = phi i32 [ %361, %360 ], [ %335, %337 ], [ 0, %345 ], [ 0, %333 ], [ %348, %357 ]
  %367 = load atomic i32, i32* %328 monotonic, align 4
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %380, label %370

370:                                              ; preds = %365
  %371 = icmp eq i32 %366, 0
  br i1 %371, label %397, label %372

372:                                              ; preds = %370
  %373 = bitcast %"class.WTF::StringImpl"* %332 to i8*
  %374 = zext i32 %366 to i64
  %375 = tail call i8* @memchr(i8* %373, i32 13, i64 %374) #17
  %376 = icmp eq i8* %375, null
  %377 = ptrtoint i8* %375 to i64
  %378 = ptrtoint %"class.WTF::StringImpl"* %332 to i64
  %379 = sub i64 %377, %378
  br i1 %376, label %397, label %393

380:                                              ; preds = %365
  %381 = bitcast %"class.WTF::StringImpl"* %332 to i16*
  %382 = icmp eq i32 %366, 0
  br i1 %382, label %397, label %383

383:                                              ; preds = %380
  %384 = zext i32 %366 to i64
  br label %385

385:                                              ; preds = %390, %383
  %386 = phi i64 [ %391, %390 ], [ 0, %383 ]
  %387 = getelementptr inbounds i16, i16* %381, i64 %386
  %388 = load i16, i16* %387, align 2
  %389 = icmp eq i16 %388, 13
  br i1 %389, label %393, label %390

390:                                              ; preds = %385
  %391 = add nuw nsw i64 %386, 1
  %392 = icmp eq i64 %391, %384
  br i1 %392, label %397, label %385

393:                                              ; preds = %385, %372
  %394 = phi i64 [ %379, %372 ], [ %386, %385 ]
  %395 = trunc i64 %394 to i32
  %396 = icmp eq i32 %395, -1
  br i1 %396, label %397, label %400

397:                                              ; preds = %390, %393, %372, %380, %370
  %398 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0
  %399 = tail call zeroext i1 @_ZN5blink30MatchesTheSerializedCSPGrammarERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %398) #15
  br i1 %399, label %515, label %400

400:                                              ; preds = %393, %360, %397
  %401 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %402 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 3
  %403 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %401, i64 0, i32 0, i32 0, i32 0
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %403, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %423, label %406

406:                                              ; preds = %400
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %423

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  %414 = zext i32 %413 to i33
  %415 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %414, i33 1) #15
  %416 = extractvalue { i33, i1 } %415, 1
  %417 = extractvalue { i33, i1 } %415, 0
  %418 = icmp slt i33 %417, 0
  %419 = or i1 %416, %418
  br i1 %419, label %420, label %421, !prof !4

420:                                              ; preds = %411
  tail call void @llvm.trap() #15
  unreachable

421:                                              ; preds = %411
  %422 = trunc i33 %417 to i32
  store i32 %422, i32* %412, align 4
  br label %423

423:                                              ; preds = %421, %406, %400
  %424 = ptrtoint %"class.WTF::StringImpl"* %404 to i64
  %425 = bitcast %"class.WTF::AtomicString"* %402 to i64*
  %426 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %402, i64 0, i32 0, i32 0, i32 0
  %427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  store i64 %424, i64* %425, align 8
  %428 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %428, label %442, label %429

429:                                              ; preds = %423
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = and i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 0
  %435 = load i32, i32* %434, align 4
  br i1 %433, label %436, label %438

436:                                              ; preds = %429
  %437 = add i32 %435, -1
  store i32 %437, i32* %434, align 4
  br label %438

438:                                              ; preds = %436, %429
  %439 = phi i32 [ %437, %436 ], [ %435, %429 ]
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %427) #15
  br label %442

442:                                              ; preds = %423, %438, %441
  %443 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %444 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %443, align 8
  %445 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %444, i64 0, i32 2, i32 0, i32 0
  %446 = load %"class.blink::Document"*, %"class.blink::Document"** %445, align 8
  %447 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %447) #15
  store i32 8, i32* %13, align 4
  %448 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %448) #15
  store i32 3, i32* %14, align 4
  %449 = bitcast %"class.WTF::StringAppend"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %449) #15
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %495, label %452

452:                                              ; preds = %442
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %469

459:                                              ; preds = %452
  %460 = zext i32 %458 to i33
  %461 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %460, i33 1) #15
  %462 = extractvalue { i33, i1 } %461, 1
  %463 = extractvalue { i33, i1 } %461, 0
  %464 = icmp slt i33 %463, 0
  %465 = or i1 %462, %464
  br i1 %465, label %466, label %467, !prof !4

466:                                              ; preds = %459
  tail call void @llvm.trap() #15
  unreachable

467:                                              ; preds = %459
  %468 = trunc i33 %463 to i32
  store i32 %468, i32* %457, align 4
  br label %469

469:                                              ; preds = %467, %452
  %470 = phi i32 [ %468, %467 ], [ %458, %452 ]
  %471 = load atomic i32, i32* %453 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %484

474:                                              ; preds = %469
  %475 = zext i32 %470 to i33
  %476 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %475, i33 1) #15
  %477 = extractvalue { i33, i1 } %476, 1
  %478 = extractvalue { i33, i1 } %476, 0
  %479 = icmp slt i33 %478, 0
  %480 = or i1 %477, %479
  br i1 %480, label %481, label %482, !prof !4

481:                                              ; preds = %474
  tail call void @llvm.trap() #15
  unreachable

482:                                              ; preds = %474
  %483 = trunc i33 %478 to i32
  store i32 %483, i32* %457, align 4
  br label %484

484:                                              ; preds = %482, %469
  %485 = phi i32 [ %483, %482 ], [ %470, %469 ]
  %486 = load atomic i32, i32* %453 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %491

489:                                              ; preds = %484
  %490 = add i32 %485, -1
  store i32 %490, i32* %457, align 4
  br label %491

491:                                              ; preds = %489, %484
  %492 = phi i32 [ %490, %489 ], [ %485, %484 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #15
  br label %495

495:                                              ; preds = %442, %491, %494
  %496 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8** %496, align 8
  %497 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %497, align 8
  %498 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_12AtomicStringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %15) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %446, %"class.blink::ConsoleMessage"* %498, i1 zeroext false) #15
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %497, align 8
  %500 = icmp eq %"class.WTF::StringImpl"* %499, null
  br i1 %500, label %514, label %501

501:                                              ; preds = %495
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = and i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %507 = load i32, i32* %506, align 4
  br i1 %505, label %508, label %510

508:                                              ; preds = %501
  %509 = add i32 %507, -1
  store i32 %509, i32* %506, align 4
  br label %510

510:                                              ; preds = %508, %501
  %511 = phi i32 [ %509, %508 ], [ %507, %501 ]
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %514

513:                                              ; preds = %510
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #15
  br label %514

514:                                              ; preds = %495, %510, %513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %449) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %448) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %447) #15
  br label %907

515:                                              ; preds = %397
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  br label %517

517:                                              ; preds = %323, %515
  %518 = phi %"class.WTF::StringImpl"* [ %516, %515 ], [ null, %323 ]
  %519 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 3
  %520 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %519, i64 0, i32 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, %518
  br i1 %522, label %907, label %523

523:                                              ; preds = %517
  %524 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %524, label %543, label %525

525:                                              ; preds = %523
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %543

530:                                              ; preds = %525
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %532 = load i32, i32* %531, align 4
  %533 = zext i32 %532 to i33
  %534 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %533, i33 1) #15
  %535 = extractvalue { i33, i1 } %534, 1
  %536 = extractvalue { i33, i1 } %534, 0
  %537 = icmp slt i33 %536, 0
  %538 = or i1 %535, %537
  br i1 %538, label %539, label %540, !prof !4

539:                                              ; preds = %530
  tail call void @llvm.trap() #15
  unreachable

540:                                              ; preds = %530
  %541 = trunc i33 %536 to i32
  store i32 %541, i32* %531, align 4
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  br label %543

543:                                              ; preds = %540, %525, %523
  %544 = phi %"class.WTF::StringImpl"* [ %521, %523 ], [ %521, %525 ], [ %542, %540 ]
  %545 = ptrtoint %"class.WTF::StringImpl"* %518 to i64
  %546 = bitcast %"class.WTF::AtomicString"* %519 to i64*
  store i64 %545, i64* %546, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %547, label %561, label %548

548:                                              ; preds = %543
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  br i1 %552, label %555, label %557

555:                                              ; preds = %548
  %556 = add i32 %554, -1
  store i32 %556, i32* %553, align 4
  br label %557

557:                                              ; preds = %555, %548
  %558 = phi i32 [ %556, %555 ], [ %554, %548 ]
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %561

560:                                              ; preds = %557
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #15
  br label %561

561:                                              ; preds = %543, %557, %560
  tail call void @_ZN5blink17HTMLIFrameElement19CSPAttributeChangedEv(%"class.blink::HTMLIFrameElement"* %0)
  %562 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %563 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %562, align 8
  %564 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %563, i64 0, i32 2, i32 0, i32 0
  %565 = load %"class.blink::Document"*, %"class.blink::Document"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %565, i64 0, i32 2
  %567 = bitcast %"class.blink::UseCounter"* %566 to void (%"class.blink::UseCounter"*, i32)***
  %568 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %567, align 8
  %569 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %568, i64 3
  %570 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %569, align 8
  tail call void %570(%"class.blink::UseCounter"* %566, i32 3274) #15
  br label %907

571:                                              ; preds = %318
  %572 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAllowAttrE, align 8
  %573 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %572, i64 0, i32 0, i32 0
  %574 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %573, align 8
  %575 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %574
  br i1 %575, label %576, label %639

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 4
  %578 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %577, i64 0, i32 0, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  %580 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %582 = icmp eq %"class.WTF::StringImpl"* %579, %581
  br i1 %582, label %907, label %583

583:                                              ; preds = %576
  %584 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %584, label %603, label %585

585:                                              ; preds = %583
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %603

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %592 = load i32, i32* %591, align 4
  %593 = zext i32 %592 to i33
  %594 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %593, i33 1) #15
  %595 = extractvalue { i33, i1 } %594, 1
  %596 = extractvalue { i33, i1 } %594, 0
  %597 = icmp slt i33 %596, 0
  %598 = or i1 %595, %597
  br i1 %598, label %599, label %600, !prof !4

599:                                              ; preds = %590
  tail call void @llvm.trap() #15
  unreachable

600:                                              ; preds = %590
  %601 = trunc i33 %596 to i32
  store i32 %601, i32* %591, align 4
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  br label %603

603:                                              ; preds = %600, %585, %583
  %604 = phi %"class.WTF::StringImpl"* [ %602, %600 ], [ %579, %585 ], [ %579, %583 ]
  %605 = ptrtoint %"class.WTF::StringImpl"* %581 to i64
  %606 = bitcast %"class.WTF::AtomicString"* %577 to i64*
  store i64 %605, i64* %606, align 8
  %607 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %607, label %621, label %608

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = load atomic i32, i32* %609 monotonic, align 4
  %611 = and i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  br i1 %612, label %615, label %617

615:                                              ; preds = %608
  %616 = add i32 %614, -1
  store i32 %616, i32* %613, align 4
  br label %617

617:                                              ; preds = %615, %608
  %618 = phi i32 [ %616, %615 ], [ %614, %608 ]
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %617
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #15
  br label %621

621:                                              ; preds = %603, %617, %620
  %622 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement21UpdateContainerPolicyEv(%"class.blink::HTMLFrameOwnerElement"* %622) #15
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %623, null
  br i1 %624, label %907, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 1
  %627 = load i32, i32* %626, align 4
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %907, label %629

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %631 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %630, align 8
  %632 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %631, i64 0, i32 2, i32 0, i32 0
  %633 = load %"class.blink::Document"*, %"class.blink::Document"** %632, align 8
  %634 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %633, i64 0, i32 2
  %635 = bitcast %"class.blink::UseCounter"* %634 to void (%"class.blink::UseCounter"*, i32)***
  %636 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %635, align 8
  %637 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %636, i64 3
  %638 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %637, align 8
  tail call void %638(%"class.blink::UseCounter"* %634, i32 2028) #15
  br label %907

639:                                              ; preds = %571
  %640 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kDisallowdocumentaccessAttrE, align 8
  %641 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %640, i64 0, i32 0, i32 0
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %642
  %644 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_disallow_document_access_enabled_E, align 1
  %645 = icmp ne i8 %644, 0
  %646 = and i1 %643, %645
  br i1 %646, label %647, label %661

647:                                              ; preds = %639
  %648 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %649 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %648, align 8
  %650 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %649, i64 0, i32 2, i32 0, i32 0
  %651 = load %"class.blink::Document"*, %"class.blink::Document"** %650, align 8
  %652 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %651, i64 0, i32 2
  %653 = bitcast %"class.blink::UseCounter"* %652 to void (%"class.blink::UseCounter"*, i32)***
  %654 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %653, align 8
  %655 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %654, i64 3
  %656 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %655, align 8
  tail call void %656(%"class.blink::UseCounter"* %652, i32 3165) #15
  %657 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %658 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %658, align 8
  %660 = icmp ne %"class.WTF::StringImpl"* %659, null
  tail call void @_ZN5blink21HTMLFrameOwnerElement26SetDisallowDocumentAccesssEb(%"class.blink::HTMLFrameOwnerElement"* %657, i1 zeroext %660) #15
  br label %907

661:                                              ; preds = %639
  %662 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kPolicyAttrE, align 8
  %663 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %662, i64 0, i32 0, i32 0
  %664 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %663, align 8
  %665 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %664
  br i1 %665, label %666, label %713

666:                                              ; preds = %661
  %667 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 5
  %668 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %667, i64 0, i32 0, i32 0, i32 0
  %669 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %668, align 8
  %670 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %670, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %669, %671
  br i1 %672, label %907, label %673

673:                                              ; preds = %666
  %674 = icmp eq %"class.WTF::StringImpl"* %671, null
  br i1 %674, label %693, label %675

675:                                              ; preds = %673
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %677 = load atomic i32, i32* %676 monotonic, align 4
  %678 = and i32 %677, 2
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %693

680:                                              ; preds = %675
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 0
  %682 = load i32, i32* %681, align 4
  %683 = zext i32 %682 to i33
  %684 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %683, i33 1) #15
  %685 = extractvalue { i33, i1 } %684, 1
  %686 = extractvalue { i33, i1 } %684, 0
  %687 = icmp slt i33 %686, 0
  %688 = or i1 %685, %687
  br i1 %688, label %689, label %690, !prof !4

689:                                              ; preds = %680
  tail call void @llvm.trap() #15
  unreachable

690:                                              ; preds = %680
  %691 = trunc i33 %686 to i32
  store i32 %691, i32* %681, align 4
  %692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %668, align 8
  br label %693

693:                                              ; preds = %690, %675, %673
  %694 = phi %"class.WTF::StringImpl"* [ %692, %690 ], [ %669, %675 ], [ %669, %673 ]
  %695 = ptrtoint %"class.WTF::StringImpl"* %671 to i64
  %696 = bitcast %"class.WTF::AtomicString"* %667 to i64*
  store i64 %695, i64* %696, align 8
  %697 = icmp eq %"class.WTF::StringImpl"* %694, null
  br i1 %697, label %711, label %698

698:                                              ; preds = %693
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %698
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i32 [ %706, %705 ], [ %704, %698 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %694) #15
  br label %711

711:                                              ; preds = %693, %707, %710
  %712 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement20UpdateRequiredPolicyEv(%"class.blink::HTMLFrameOwnerElement"* %712) #15
  br label %907

713:                                              ; preds = %661
  %714 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kTrusttokenAttrE, align 8
  %715 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %714, i64 0, i32 0, i32 0
  %716 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %715, align 8
  %717 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %716
  br i1 %717, label %718, label %768

718:                                              ; preds = %713
  %719 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %720 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %719, align 8
  %721 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %720, i64 0, i32 2, i32 0, i32 0
  %722 = load %"class.blink::Document"*, %"class.blink::Document"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %722, i64 0, i32 2
  %724 = bitcast %"class.blink::UseCounter"* %723 to void (%"class.blink::UseCounter"*, i32)***
  %725 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %724, align 8
  %726 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %725, i64 3
  %727 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %726, align 8
  tail call void %727(%"class.blink::UseCounter"* %723, i32 3278) #15
  %728 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 6
  %729 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %730 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %729, align 8
  %731 = icmp eq %"class.WTF::StringImpl"* %730, null
  br i1 %731, label %749, label %732

732:                                              ; preds = %718
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %730, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %734 = load atomic i32, i32* %733 monotonic, align 4
  %735 = and i32 %734, 2
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %737, label %749

737:                                              ; preds = %732
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %730, i64 0, i32 0
  %739 = load i32, i32* %738, align 4
  %740 = zext i32 %739 to i33
  %741 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %740, i33 1) #15
  %742 = extractvalue { i33, i1 } %741, 1
  %743 = extractvalue { i33, i1 } %741, 0
  %744 = icmp slt i33 %743, 0
  %745 = or i1 %742, %744
  br i1 %745, label %746, label %747, !prof !4

746:                                              ; preds = %737
  tail call void @llvm.trap() #15
  unreachable

747:                                              ; preds = %737
  %748 = trunc i33 %743 to i32
  store i32 %748, i32* %738, align 4
  br label %749

749:                                              ; preds = %747, %732, %718
  %750 = ptrtoint %"class.WTF::StringImpl"* %730 to i64
  %751 = bitcast %"class.WTF::AtomicString"* %728 to i64*
  %752 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %728, i64 0, i32 0, i32 0, i32 0
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %752, align 8
  store i64 %750, i64* %751, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %907, label %755

755:                                              ; preds = %749
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %907

767:                                              ; preds = %764
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #15
  br label %907

768:                                              ; preds = %713
  %769 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %769) #15
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #15
  %770 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %771 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %773 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %770, i64 0, i32 3, i32 0, i32 0, i32 0
  %774 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %773, align 8
  %775 = icmp eq %"class.WTF::StringImpl"* %772, %774
  br i1 %775, label %776, label %881

776:                                              ; preds = %768
  %777 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #15
  %778 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %779 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %778, align 8
  %780 = icmp eq %"class.WTF::StringImpl"* %779, null
  br i1 %780, label %781, label %785

781:                                              ; preds = %776
  %782 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %782, align 8
  %783 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %784 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %783, i64* %784, align 8
  br label %793

785:                                              ; preds = %776
  %786 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %779, %"class.WTF::StringImpl"** %786, align 8
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 1
  %790 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %791 = bitcast i8** %790 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %789, %"class.WTF::StringImpl"** %791, align 8
  %792 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %793

793:                                              ; preds = %785, %781
  %794 = phi i64 [ %792, %785 ], [ %783, %781 ]
  %795 = phi i32 [ %788, %785 ], [ 0, %781 ]
  %796 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %795, i32* %796, align 8
  %797 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %797) #15
  %798 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %794, i64* %798, align 8
  %799 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** %799, align 8
  %800 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %800, align 8
  %801 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %797) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #15
  br i1 %801, label %802, label %864

802:                                              ; preds = %793
  %803 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %804 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %803, align 8
  %805 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %804, i64 0, i32 2, i32 0, i32 0
  %806 = load %"class.blink::Document"*, %"class.blink::Document"** %805, align 8
  %807 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %806) #15
  %808 = icmp eq %"class.blink::DocumentLoader"* %807, null
  br i1 %808, label %847, label %809

809:                                              ; preds = %802
  %810 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %803, align 8
  %811 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %810, i64 0, i32 2, i32 0, i32 0
  %812 = load %"class.blink::Document"*, %"class.blink::Document"** %811, align 8
  %813 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %812) #15
  %814 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %813, i64 0, i32 74
  %815 = call zeroext i1 @_ZNK5blink14UseCounterImpl9IsCountedENS_5mojom10WebFeatureE(%"class.blink::UseCounterImpl"* %814, i32 2363) #15
  %816 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %817 = icmp eq %"class.WTF::StringImpl"* %816, null
  br i1 %817, label %831, label %818

818:                                              ; preds = %809
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 0
  %824 = load i32, i32* %823, align 4
  br i1 %822, label %825, label %827

825:                                              ; preds = %818
  %826 = add i32 %824, -1
  store i32 %826, i32* %823, align 4
  br label %827

827:                                              ; preds = %825, %818
  %828 = phi i32 [ %826, %825 ], [ %824, %818 ]
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %831

830:                                              ; preds = %827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %816) #15
  br label %831

831:                                              ; preds = %809, %827, %830
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %769) #15
  br i1 %815, label %897, label %832

832:                                              ; preds = %831
  %833 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %803, align 8
  %834 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %833, i64 0, i32 2, i32 0, i32 0
  %835 = load %"class.blink::Document"*, %"class.blink::Document"** %834, align 8
  %836 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %835, i64 0, i32 2
  %837 = bitcast %"class.blink::UseCounter"* %836 to void (%"class.blink::UseCounter"*, i32)***
  %838 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %837, align 8
  %839 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %838, i64 3
  %840 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %839, align 8
  call void %840(%"class.blink::UseCounter"* %836, i32 2363) #15
  %841 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %803, align 8
  %842 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %841, i64 0, i32 2, i32 0, i32 0
  %843 = load %"class.blink::Document"*, %"class.blink::Document"** %842, align 8
  %844 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %844) #15
  store i32 8, i32* %17, align 4
  %845 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %845) #15
  store i32 2, i32* %18, align 4
  %846 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA96_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %18, [96 x i8]* nonnull dereferenceable(96) @.str.4) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %843, %"class.blink::ConsoleMessage"* %846, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %845) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %844) #15
  br label %897

847:                                              ; preds = %802
  %848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %849 = icmp eq %"class.WTF::StringImpl"* %848, null
  br i1 %849, label %863, label %850

850:                                              ; preds = %847
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %859

857:                                              ; preds = %850
  %858 = add i32 %856, -1
  store i32 %858, i32* %855, align 4
  br label %859

859:                                              ; preds = %857, %850
  %860 = phi i32 [ %858, %857 ], [ %856, %850 ]
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %848) #15
  br label %863

863:                                              ; preds = %847, %859, %862
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %769) #15
  br label %897

864:                                              ; preds = %793
  %865 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %866 = icmp eq %"class.WTF::StringImpl"* %865, null
  br i1 %866, label %880, label %867

867:                                              ; preds = %864
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %869 = load atomic i32, i32* %868 monotonic, align 4
  %870 = and i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 0
  %873 = load i32, i32* %872, align 4
  br i1 %871, label %874, label %876

874:                                              ; preds = %867
  %875 = add i32 %873, -1
  store i32 %875, i32* %872, align 4
  br label %876

876:                                              ; preds = %874, %867
  %877 = phi i32 [ %875, %874 ], [ %873, %867 ]
  %878 = icmp eq i32 %877, 0
  br i1 %878, label %879, label %880

879:                                              ; preds = %876
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %865) #15
  br label %880

880:                                              ; preds = %864, %876, %879
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %769) #15
  br label %897

881:                                              ; preds = %768
  %882 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %882, label %896, label %883

883:                                              ; preds = %881
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %885 = load atomic i32, i32* %884 monotonic, align 4
  %886 = and i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %889 = load i32, i32* %888, align 4
  br i1 %887, label %890, label %892

890:                                              ; preds = %883
  %891 = add i32 %889, -1
  store i32 %891, i32* %888, align 4
  br label %892

892:                                              ; preds = %890, %883
  %893 = phi i32 [ %891, %890 ], [ %889, %883 ]
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %896

895:                                              ; preds = %892
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #15
  br label %896

896:                                              ; preds = %881, %892, %895
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %769) #15
  br label %897

897:                                              ; preds = %831, %896, %880, %863, %832
  %898 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %899 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %900 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %898, i64 0, i32 0, i32 0
  %901 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %900, align 8
  %902 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %899, %901
  br i1 %902, label %903, label %905

903:                                              ; preds = %897
  %904 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %904, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %905

905:                                              ; preds = %903, %897
  %906 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0
  call void @_ZN5blink20HTMLFrameElementBase14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameElementBase"* %906, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %907

907:                                              ; preds = %517, %576, %666, %621, %767, %764, %749, %127, %124, %114, %256, %251, %625, %629, %711, %905, %647, %561, %234, %273, %299, %306, %316, %514
  ret void
}

declare void @_ZN5blink12HTMLDocument15RemoveNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink12HTMLDocument12AddNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7network21ParseWebSandboxPolicyERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_5mojom15WebSandboxFlagsE(%"struct.network::WebSandboxFlagsParsingResult"* sret, %"class.base::BasicStringPiece"* dereferenceable(16), i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12DOMTokenList5valueEv(%"class.blink::DOMTokenList"*) local_unnamed_addr #1

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #5

declare void @_ZN5blink21HTMLFrameOwnerElement15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::HTMLFrameOwnerElement"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  ret %"class.blink::Frame"* %3
}

declare void @_ZN5blink21HTMLFrameOwnerElement21UpdateContainerPolicyEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink30MatchesTheSerializedCSPGrammarERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElement19CSPAttributeChangedEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.148", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.mojo::StructPtr.151", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 7
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %74

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Frame"*, %"class.blink::Frame"** %9, align 8
  %11 = icmp eq %"class.blink::Frame"* %10, null
  br i1 %11, label %74, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.WTF::Vector.148"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::Vector.148", %"class.WTF::Vector.148"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.148", %"class.WTF::Vector.148"* %2, i64 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %18 = bitcast %"class.WTF::Vector.148"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #15
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #15
  call void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.148"* nonnull sret %2, %"class.WTF::String"* dereferenceable(8) %16, i32 1, i32 0, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #15
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #15
  %19 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %22) #15
  %24 = call dereferenceable(8) %"class.blink::mojom::blink::LocalFrameHost"* @_ZNK5blink10LocalFrame23GetLocalFrameHostRemoteEv(%"class.blink::LocalFrame"* %23) #15
  %25 = load %"class.blink::Frame"*, %"class.blink::Frame"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %25, i64 0, i32 30
  %27 = load i32, i32* %15, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %12
  %30 = bitcast %"class.mojo::StructPtr.151"* %4 to i64*
  br label %37

31:                                               ; preds = %12
  %32 = call dereferenceable(8) %"class.mojo::StructPtr.151"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.148"* nonnull %2, i32 0) #15
  %33 = bitcast %"class.mojo::StructPtr.151"* %4 to i64*
  %34 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %34, align 8
  %35 = bitcast %"class.mojo::StructPtr.151"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  br label %37

37:                                               ; preds = %31, %29
  %38 = phi i64* [ %35, %31 ], [ %30, %29 ]
  store i64 0, i64* %38, align 8
  %39 = bitcast %"class.blink::mojom::blink::LocalFrameHost"* %24 to void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)***
  %40 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)**, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)** %40, i64 57
  %42 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.blink::MultiToken"*, %"class.mojo::StructPtr.151"*)** %41, align 8
  call void %42(%"class.blink::mojom::blink::LocalFrameHost"* %24, %"class.blink::MultiToken"* dereferenceable(24) %26, %"class.mojo::StructPtr.151"* nonnull %4) #15
  %43 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %45 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %37
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %44) #15
  %47 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %44 to i8*
  call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %37, %46
  %49 = load %"class.mojo::StructPtr.151"*, %"class.mojo::StructPtr.151"** %14, align 8
  %50 = icmp eq %"class.mojo::StructPtr.151"* %49, null
  br i1 %50, label %73, label %51, !prof !8

51:                                               ; preds = %48
  %52 = bitcast %"class.mojo::StructPtr.151"* %49 to i8*
  %53 = load i32, i32* %15, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %71, label %55, !prof !4

55:                                               ; preds = %51
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %49, i64 %56
  br label %58

58:                                               ; preds = %65, %55
  %59 = phi %"class.mojo::StructPtr.151"* [ %66, %65 ], [ %49, %55 ]
  %60 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %62 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %61) #15
  %64 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %61 to i8*
  call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %63, %58
  %66 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %59, i64 1
  %67 = icmp eq %"class.mojo::StructPtr.151"* %66, %57
  br i1 %67, label %68, label %58

68:                                               ; preds = %65
  store i32 0, i32* %15, align 4
  %69 = bitcast %"class.WTF::Vector.148"* %2 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %51
  %72 = phi i8* [ %70, %68 ], [ %52, %51 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #15
  store %"class.mojo::StructPtr.151"* null, %"class.mojo::StructPtr.151"** %14, align 8
  br label %73

73:                                               ; preds = %48, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %74

74:                                               ; preds = %1, %8, %73
  ret void
}

declare void @_ZN5blink21HTMLFrameOwnerElement26SetDisallowDocumentAccesssEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement20UpdateRequiredPolicyEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14UseCounterImpl9IsCountedENS_5mojom10WebFeatureE(%"class.blink::UseCounterImpl"*, i32) local_unnamed_addr #1

declare void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, i8*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLFrameElementBase14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLIFrameElement23ConstructRequiredPolicyEv(%"class.base::flat_map"* noalias sret, %"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PolicyParserMessageBuffer", align 8
  %4 = alloca %"class.absl::optional.2600", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 4
  %11 = select i1 %9, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %10
  %12 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase32DocumentPolicyNegotiationEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %11) #15
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  br label %268

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 2
  %30 = bitcast %"class.blink::UseCounter"* %29 to void (%"class.blink::UseCounter"*, i32)***
  %31 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, i64 3
  %33 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %32, align 8
  tail call void %33(%"class.blink::UseCounter"* %29, i32 3228) #15
  br label %34

34:                                               ; preds = %15, %24, %20
  %35 = bitcast %"class.blink::PolicyParserMessageBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %38 = bitcast %"class.blink::PolicyParserMessageBuffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 25, i1 false) #15
  %39 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0
  call void @_ZN5blink20DocumentPolicyParser5ParseERKN3WTF6StringERNS_25PolicyParserMessageBufferE(%"class.absl::optional.2600"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %40, %"class.blink::PolicyParserMessageBuffer"* nonnull dereferenceable(32) %3) #15
  %41 = load i8, i8* %39, align 8, !range !3, !noalias !9
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %94, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = bitcast %"struct.blink::DocumentPolicy::ParsedDocumentPolicy"* %44 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !9
  %47 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"struct.std::__1::pair"** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !9
  %50 = bitcast %"struct.blink::DocumentPolicy::ParsedDocumentPolicy"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #15, !noalias !9
  %51 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %52 = bitcast %"class.base::flat_map.105"* %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !9
  %54 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %55 = load %"struct.std::__1::pair.109"*, %"struct.std::__1::pair.109"** %54, align 8, !noalias !9
  %56 = bitcast %"class.base::flat_map.105"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #15, !noalias !9
  %57 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.base::internal::flat_tree.106", %"class.base::internal::flat_tree.106"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::pair.109"*, %"struct.std::__1::pair.109"** %58, align 8
  %60 = icmp eq %"struct.std::__1::pair.109"* %59, null
  br i1 %60, label %84, label %61

61:                                               ; preds = %43
  %62 = bitcast %"struct.std::__1::pair.109"* %59 to i8*
  %63 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %64 = load %"struct.std::__1::pair.109"*, %"struct.std::__1::pair.109"** %63, align 8
  %65 = icmp eq %"struct.std::__1::pair.109"* %64, %59
  br i1 %65, label %82, label %66

66:                                               ; preds = %61, %77
  %67 = phi %"struct.std::__1::pair.109"* [ %68, %77 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.109", %"struct.std::__1::pair.109"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.std::__1::pair.109", %"struct.std::__1::pair.109"* %67, i64 -1, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #16
  br label %77

77:                                               ; preds = %74, %66
  %78 = icmp eq %"struct.std::__1::pair.109"* %68, %59
  br i1 %78, label %79, label %66

79:                                               ; preds = %77
  %80 = bitcast %"class.base::internal::flat_tree.106"* %57 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %61
  %83 = phi i8* [ %81, %79 ], [ %62, %61 ]
  store %"struct.std::__1::pair.109"* %59, %"struct.std::__1::pair.109"** %63, align 8
  call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %43
  %85 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %85, align 8
  %87 = icmp eq %"struct.std::__1::pair"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint %"struct.std::__1::pair"* %86 to i64
  %90 = getelementptr inbounds %"class.absl::optional.2600", %"class.absl::optional.2600"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast %"struct.std::__1::pair"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast %"struct.std::__1::pair"* %86 to i8*
  call void @_ZdlPv(i8* %92) #16
  br label %93

93:                                               ; preds = %88, %84
  store i8 0, i8* %39, align 8
  br label %94

94:                                               ; preds = %34, %93
  %95 = phi i64 [ %46, %93 ], [ 0, %34 ]
  %96 = phi %"struct.std::__1::pair.109"* [ %55, %93 ], [ null, %34 ]
  %97 = phi i64 [ %53, %93 ], [ 0, %34 ]
  %98 = phi i64 [ %49, %93 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #15
  %99 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  %102 = load i32, i32* %37, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %101, i64 %103
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %94
  %107 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %111

108:                                              ; preds = %111, %94
  %109 = inttoptr i64 %97 to %"struct.std::__1::pair.109"*
  %110 = icmp eq %"struct.std::__1::pair.109"* %96, %109
  br i1 %110, label %136, label %128

111:                                              ; preds = %106, %111
  %112 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %101, %106 ], [ %126, %111 ]
  %113 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %114 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %113, i64 0, i32 2, i32 0, i32 0
  %115 = load %"class.blink::Document"*, %"class.blink::Document"** %114, align 8
  %116 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %112, i64 0, i32 0
  %117 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %112, i64 0, i32 1
  %118 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %119 = bitcast i8* %118 to %"class.blink::ConsoleMessage"*
  %120 = load i32, i32* %116, align 4
  %121 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %119, i32 8, i32 %120, %"class.WTF::String"* dereferenceable(8) %117, %"class.blink::SourceLocation"* %121) #15
  %122 = getelementptr inbounds i8, i8* %118, i64 -4
  %123 = bitcast i8* %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = or i16 %124, 1
  store atomic i16 %125, i16* %123 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %115, %"class.blink::ConsoleMessage"* %119, i1 zeroext false) #15
  %126 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %112, i64 1
  %127 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %126, %104
  br i1 %127, label %108, label %111

128:                                              ; preds = %108
  %129 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %130, i64 0, i32 2, i32 0, i32 0
  %132 = load %"class.blink::Document"*, %"class.blink::Document"** %131, align 8
  %133 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #15
  store i32 8, i32* %5, align 4
  %134 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #15
  store i32 2, i32* %6, align 4
  %135 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA59_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, [59 x i8]* nonnull dereferenceable(59) @.str.6) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %132, %"class.blink::ConsoleMessage"* %135, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #15
  br label %136

136:                                              ; preds = %128, %108
  %137 = inttoptr i64 %95 to %"struct.std::__1::pair"*
  %138 = inttoptr i64 %98 to %"struct.std::__1::pair"*
  %139 = icmp eq %"struct.std::__1::pair"* %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %244

142:                                              ; preds = %265, %136
  %143 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #15
  %144 = sub i64 %98, %95
  %145 = ashr exact i64 %144, 5
  %146 = icmp eq i64 %144, 0
  br i1 %146, label %169, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 576460752303423487
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = bitcast %"class.base::flat_map"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #18
  unreachable

151:                                              ; preds = %147
  %152 = call i8* @_Znwm(i64 %144) #16
  %153 = bitcast i8* %152 to %"struct.std::__1::pair"*
  %154 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %155 = bitcast %"struct.std::__1::pair"** %154 to i8**
  store i8* %152, i8** %155, align 8
  %156 = bitcast %"class.base::flat_map"* %0 to i8**
  store i8* %152, i8** %156, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %145
  %158 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %157, %"struct.std::__1::pair"** %158, align 8
  %159 = bitcast %"struct.std::__1::pair"** %154 to i64*
  %160 = ptrtoint i8* %152 to i64
  %161 = icmp sgt i64 %144, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %151
  %163 = lshr exact i64 %144, 5
  %164 = inttoptr i64 %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %152, i8* align 8 %164, i64 %144, i1 false) #15
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %163
  %166 = ptrtoint %"struct.std::__1::pair"* %165 to i64
  br label %167

167:                                              ; preds = %162, %151
  %168 = phi i64 [ %166, %162 ], [ %160, %151 ]
  store i64 %168, i64* %159, align 8
  br label %169

169:                                              ; preds = %142, %167
  %170 = icmp eq i64 %97, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %169
  br i1 %110, label %185, label %172

172:                                              ; preds = %171, %183
  %173 = phi %"struct.std::__1::pair.109"* [ %174, %183 ], [ %96, %171 ]
  %174 = getelementptr inbounds %"struct.std::__1::pair.109", %"struct.std::__1::pair.109"* %173, i64 -1
  %175 = getelementptr inbounds %"struct.std::__1::pair.109", %"struct.std::__1::pair.109"* %173, i64 -1, i32 1
  %176 = bitcast %"class.std::__1::basic_string"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #16
  br label %183

183:                                              ; preds = %180, %172
  %184 = icmp eq %"struct.std::__1::pair.109"* %174, %109
  br i1 %184, label %185, label %172

185:                                              ; preds = %183, %171
  %186 = inttoptr i64 %97 to i8*
  call void @_ZdlPv(i8* %186) #16
  br label %187

187:                                              ; preds = %185, %169
  %188 = icmp eq i64 %95, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %95 to i8*
  call void @_ZdlPv(i8* %190) #16
  br label %191

191:                                              ; preds = %187, %189
  %192 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  %193 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %192, null
  br i1 %193, label %227, label %194, !prof !8

194:                                              ; preds = %191
  %195 = bitcast %"struct.blink::PolicyParserMessageBuffer::Message"* %192 to i8*
  %196 = load i32, i32* %37, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %225, label %198, !prof !4

198:                                              ; preds = %194
  %199 = zext i32 %196 to i64
  %200 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %192, i64 %199
  br label %201

201:                                              ; preds = %219, %198
  %202 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %220, %219 ], [ %192, %198 ]
  %203 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %202, i64 0, i32 1, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #15
  br label %219

219:                                              ; preds = %218, %215, %201
  %220 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %202, i64 1
  %221 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %220, %200
  br i1 %221, label %222, label %201

222:                                              ; preds = %219
  store i32 0, i32* %37, align 4
  %223 = bitcast %"class.WTF::Vector.2508"* %99 to i8**
  %224 = load i8*, i8** %223, align 8
  br label %225

225:                                              ; preds = %222, %194
  %226 = phi i8* [ %224, %222 ], [ %195, %194 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %226) #15
  store %"struct.blink::PolicyParserMessageBuffer::Message"* null, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  br label %227

227:                                              ; preds = %225, %191
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #15
  br label %243

243:                                              ; preds = %227, %239, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #15
  br label %268

244:                                              ; preds = %140, %265
  %245 = phi %"struct.std::__1::pair"* [ %137, %140 ], [ %266, %265 ]
  %246 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %141, align 8
  %249 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %248, i64 0, i32 2, i32 0, i32 0
  %250 = load %"class.blink::Document"*, %"class.blink::Document"** %249, align 8
  %251 = call zeroext i1 @_ZN5blink8Document29DocumentPolicyFeatureObservedENS_5mojom21DocumentPolicyFeatureE(%"class.blink::Document"* %250, i32 %247) #15
  br i1 %251, label %265, label %252

252:                                              ; preds = %244
  %253 = load atomic i64, i64* @_ZZNK5blink17HTMLIFrameElement23ConstructRequiredPolicyEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %254 = inttoptr i64 %253 to %"class.base::HistogramBase"*
  %255 = icmp eq i64 %253, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %252
  %257 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 14, i32 15, i32 1) #15
  %258 = ptrtoint %"class.base::HistogramBase"* %257 to i64
  store atomic i64 %258, i64* @_ZZNK5blink17HTMLIFrameElement23ConstructRequiredPolicyEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %259

259:                                              ; preds = %252, %256
  %260 = phi %"class.base::HistogramBase"* [ %254, %252 ], [ %257, %256 ]
  %261 = bitcast %"class.base::HistogramBase"* %260 to void (%"class.base::HistogramBase"*, i32)***
  %262 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %262, i64 6
  %264 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %263, align 8
  call void %264(%"class.base::HistogramBase"* %260, i32 %247) #15
  br label %265

265:                                              ; preds = %259, %244
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %245, i64 1
  %267 = icmp eq %"struct.std::__1::pair"* %266, %138
  br i1 %267, label %142, label %244

268:                                              ; preds = %243, %13
  ret void
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase32DocumentPolicyNegotiationEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink20DocumentPolicyParser5ParseERKN3WTF6StringERNS_25PolicyParserMessageBufferE(%"class.absl::optional.2600"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::PolicyParserMessageBuffer"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink8Document29DocumentPolicyFeatureObservedENS_5mojom21DocumentPolicyFeatureE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLIFrameElement24ConstructContainerPolicyEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PolicyParserMessageBuffer", align 8
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #15
  br label %200

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0
  %14 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameElementBase"* %13) #15
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  %16 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %15) #15
  %17 = icmp eq %"class.blink::SecurityOrigin"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #15
  br label %20

20:                                               ; preds = %12, %18
  %21 = bitcast %"class.blink::PolicyParserMessageBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %24 = bitcast %"class.blink::PolicyParserMessageBuffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 25, i1 false) #15
  %25 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 4, i32 0
  %28 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 24, i1 false)
  br i1 %17, label %31, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %30) #15
  br label %31

31:                                               ; preds = %20, %29
  %32 = icmp eq %"class.blink::SecurityOrigin"* %14, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %34) #15
  br label %35

35:                                               ; preds = %31, %33
  %36 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %7) #15
  call void @_ZN5blink23PermissionsPolicyParser14ParseAttributeERKN3WTF6StringE13scoped_refptrIKNS_14SecurityOriginEES8_RNS_25PolicyParserMessageBufferEPNS_16ExecutionContextE(%"class.std::__1::vector"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::SecurityOrigin"* %16, %"class.blink::SecurityOrigin"* %14, %"class.blink::PolicyParserMessageBuffer"* nonnull dereferenceable(32) %3, %"class.blink::ExecutionContext"* %36) #15
  %37 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 7
  %38 = load i8, i8* %37, align 8, !range !3
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %61, label %40

40:                                               ; preds = %35
  %41 = call zeroext i1 @_ZN5blink34AllowFeatureEverywhereIfNotPresentENS_5mojom24PermissionsPolicyFeatureERNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS2_9allocatorIS4_EEEE(i32 4, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #15
  br i1 %41, label %61, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.8, i64 0, i64 0), i64 60) #15
  call void @_ZN5blink25PolicyParserMessageBuffer4WarnERKN3WTF6StringE(%"class.blink::PolicyParserMessageBuffer"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %60

60:                                               ; preds = %42, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  br label %61

61:                                               ; preds = %35, %40, %60
  %62 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 8
  %63 = load i8, i8* %62, align 1, !range !3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %86, label %65

65:                                               ; preds = %61
  %66 = call zeroext i1 @_ZN5blink34AllowFeatureEverywhereIfNotPresentENS_5mojom24PermissionsPolicyFeatureERNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS2_9allocatorIS4_EEEE(i32 8, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #15
  br i1 %66, label %86, label %67

67:                                               ; preds = %65
  %68 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i64 0, i64 0), i64 64) #15
  call void @_ZN5blink25PolicyParserMessageBuffer4WarnERKN3WTF6StringE(%"class.blink::PolicyParserMessageBuffer"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #15
  br label %85

85:                                               ; preds = %67, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #15
  br label %86

86:                                               ; preds = %61, %65, %85
  %87 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 12, i32 0, i32 0
  %88 = load %"class.blink::DOMFeaturePolicy"*, %"class.blink::DOMFeaturePolicy"** %87, align 8
  %89 = icmp eq %"class.blink::DOMFeaturePolicy"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  br i1 %32, label %93, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #15
  br label %93

93:                                               ; preds = %90, %91
  %94 = bitcast %"class.blink::DOMFeaturePolicy"* %88 to void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)***
  %95 = load void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)**, void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)*, void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)** %95, i64 9
  %97 = load void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)*, void (%"class.blink::DOMFeaturePolicy"*, %"class.std::__1::vector"*, %"class.blink::SecurityOrigin"*)** %96, align 8
  call void %97(%"class.blink::DOMFeaturePolicy"* nonnull %88, %"class.std::__1::vector"* nonnull dereferenceable(24) %4, %"class.blink::SecurityOrigin"* %14) #15
  br label %98

98:                                               ; preds = %86, %93
  %99 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %3, i64 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  %102 = load i32, i32* %23, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %101, i64 %103
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %183

108:                                              ; preds = %183, %98
  %109 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 16
  %111 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 8
  %112 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %26 to i64*
  %113 = load i64, i64* %112, align 16
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  %117 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %116, null
  br i1 %117, label %151, label %118, !prof !8

118:                                              ; preds = %108
  %119 = bitcast %"struct.blink::PolicyParserMessageBuffer::Message"* %116 to i8*
  %120 = load i32, i32* %23, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %118
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %116, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %144, %143 ], [ %116, %122 ]
  %127 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %126, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %126, i64 1
  %145 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %23, align 4
  %147 = bitcast %"class.WTF::Vector.2508"* %99 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %118
  %150 = phi i8* [ %148, %146 ], [ %119, %118 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #15
  store %"struct.blink::PolicyParserMessageBuffer::Message"* null, %"struct.blink::PolicyParserMessageBuffer::Message"** %100, align 8
  br label %151

151:                                              ; preds = %149, %108
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #15
  br label %167

167:                                              ; preds = %151, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  br i1 %17, label %175, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %169) #15
  %170 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %168
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %16) #15
  %174 = bitcast %"class.blink::SecurityOrigin"* %16 to i8*
  call void @free(i8* %174) #15
  br label %175

175:                                              ; preds = %167, %168, %173
  br i1 %32, label %200, label %176

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %177) #15
  %178 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %200

181:                                              ; preds = %176
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %14) #15
  %182 = bitcast %"class.blink::SecurityOrigin"* %14 to i8*
  call void @free(i8* %182) #15
  br label %200

183:                                              ; preds = %106, %183
  %184 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %101, %106 ], [ %198, %183 ]
  %185 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %186 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %185, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::Document"*, %"class.blink::Document"** %186, align 8
  %188 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %184, i64 0, i32 0
  %189 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %184, i64 0, i32 1
  %190 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %191 = bitcast i8* %190 to %"class.blink::ConsoleMessage"*
  %192 = load i32, i32* %188, align 4
  %193 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %191, i32 8, i32 %192, %"class.WTF::String"* dereferenceable(8) %189, %"class.blink::SourceLocation"* %193) #15
  %194 = getelementptr inbounds i8, i8* %190, i64 -4
  %195 = bitcast i8* %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = or i16 %196, 1
  store atomic i16 %197, i16* %195 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %187, %"class.blink::ConsoleMessage"* %191, i1 zeroext true) #15
  %198 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %184, i64 1
  %199 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %198, %104
  br i1 %199, label %108, label %183

200:                                              ; preds = %181, %176, %175, %10
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink23PermissionsPolicyParser14ParseAttributeERKN3WTF6StringE13scoped_refptrIKNS_14SecurityOriginEES8_RNS_25PolicyParserMessageBufferEPNS_16ExecutionContextE(%"class.std::__1::vector"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, %"class.blink::PolicyParserMessageBuffer"* dereferenceable(32), %"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLIFrameElement15AllowFullscreenEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare zeroext i1 @_ZN5blink34AllowFeatureEverywhereIfNotPresentENS_5mojom24PermissionsPolicyFeatureERNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS2_9allocatorIS4_EEEE(i32, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PolicyParserMessageBuffer4WarnERKN3WTF6StringE(%"class.blink::PolicyParserMessageBuffer"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringAppend.2827", align 8
  %4 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %136

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringAppend.2827"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #15
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %19
  tail call void @llvm.trap() #15
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %7, %14, %29
  %32 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::StringImpl"* %12)
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %3, i64 0, i32 1, i32 0, i32 0
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 1
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::PolicyParserMessageBuffer", %"class.blink::PolicyParserMessageBuffer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %64, !prof !4

42:                                               ; preds = %31
  %43 = add i32 %38, 1
  %44 = lshr i32 %38, 2
  %45 = add i32 %43, %44
  %46 = icmp ugt i32 %45, 4
  %47 = select i1 %46, i32 %45, i32 4
  %48 = icmp ugt i32 %47, %43
  %49 = select i1 %48, i32 %47, i32 %43
  %50 = icmp ult i32 %38, %49
  br i1 %50, label %51, label %64, !prof !8

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %8, i64 0, i32 0, i32 0, i32 0
  %53 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %52, align 8
  %54 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = zext i32 %49 to i64
  %57 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25PolicyParserMessageBuffer7MessageEEEmm(i64 %56) #15
  %58 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %57, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25PolicyParserMessageBuffer7MessageEEEPKcv, i64 0, i64 0)) #15
  %59 = ptrtoint i8* %58 to i64
  %60 = bitcast %"class.WTF::Vector.2508"* %8 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = lshr i64 %57, 4
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %39, align 8
  br label %64

63:                                               ; preds = %51
  tail call void @_ZN3WTF6VectorIN5blink25PolicyParserMessageBuffer7MessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2508"* %8, i32 %49) #15
  br label %64

64:                                               ; preds = %63, %55, %42, %31
  %65 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %8, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %65, align 8
  %67 = load i32, i32* %37, align 4
  %68 = zext i32 %67 to i64
  %69 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2827"* nonnull %3) #15
  %70 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %66, i64 %68, i32 0
  store i32 2, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %66, i64 %68, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %71, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %72, label %101, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #15
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %80
  call void @llvm.trap() #15
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %88, %73
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = load atomic i32, i32* %74 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = add i32 %91, -1
  store i32 %96, i32* %78, align 4
  br label %97

97:                                               ; preds = %95, %90
  %98 = phi i32 [ %96, %95 ], [ %91, %90 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #15
  br label %101

101:                                              ; preds = %64, %97, %100
  %102 = load i32, i32* %37, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %37, align 4
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %119

119:                                              ; preds = %118, %115, %101
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #15
  br label %135

135:                                              ; preds = %119, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  br label %136

136:                                              ; preds = %2, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLIFrameElement19AllowPaymentRequestEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLIFrameElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::HTMLIFrameElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %5 = icmp eq %"class.blink::Frame"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %11, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #15
  br label %13

13:                                               ; preds = %6, %2, %10
  %14 = phi i1 [ false, %6 ], [ false, %2 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink17HTMLIFrameElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLIFrameElement"*, %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 232) #15
  %5 = bitcast i8* %4 to %"class.blink::LayoutIFrame"*
  %6 = bitcast %"class.blink::HTMLIFrameElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink12LayoutIFrameC1EPNS_21HTMLFrameOwnerElementE(%"class.blink::LayoutIFrame"* %5, %"class.blink::HTMLFrameOwnerElement"* %6) #15
  %7 = bitcast i8* %4 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %7
}

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink12LayoutIFrameC1EPNS_21HTMLFrameOwnerElementE(%"class.blink::LayoutIFrame"*, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17HTMLIFrameElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLIFrameElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink20HTMLFrameElementBase12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFrameElementBase"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #15
  %5 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 107
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  %13 = bitcast %"class.blink::Document"* %8 to %"class.blink::HTMLDocument"*
  %14 = icmp eq %"class.blink::Document"* %8, null
  %15 = or i1 %14, %12
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 768
  %20 = icmp eq i32 %19, 256
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2
  tail call void @_ZN5blink12HTMLDocument12AddNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %22) #15
  br label %23

23:                                               ; preds = %2, %21, %16
  %24 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  tail call void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameE(%"class.blink::Element"* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), %"class.blink::QualifiedName"* dereferenceable(8) %25) #15
  ret i32 %4
}

declare i32 @_ZN5blink20HTMLFrameElementBase12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameE(%"class.blink::Element"*, i8*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLIFrameElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLIFrameElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #15
  %4 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 107
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = bitcast %"class.blink::Document"* %7 to %"class.blink::HTMLDocument"*
  %13 = icmp eq %"class.blink::Document"* %7, null
  %14 = or i1 %13, %11
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 768
  %19 = icmp eq i32 %18, 256
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 2
  tail call void @_ZN5blink12HTMLDocument15RemoveNamedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLDocument"* nonnull %12, %"class.WTF::AtomicString"* dereferenceable(8) %21) #15
  br label %22

22:                                               ; preds = %2, %20, %15
  ret void
}

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLIFrameElement20IsInteractiveContentEv(%"class.blink::HTMLIFrameElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink17HTMLIFrameElement23ReferrerPolicyAttributeEv(%"class.blink::HTMLIFrameElement"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLIFrameElement25ConstructTrustTokenParamsEv(%"class.mojo::StructPtr.2649"* noalias nocapture sret, %"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::JSONParseError", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::StringAppend.2667", align 8
  %7 = alloca %"class.WTF::StringAppend.2668", align 8
  %8 = alloca %"class.mojo::StructPtr.2649", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 6
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = bitcast %"class.mojo::StructPtr.2649"* %0 to i64*
  store i64 0, i64* %20, align 8
  br label %227

21:                                               ; preds = %2
  %22 = bitcast %"struct.blink::JSONParseError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %3, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0
  %25 = call %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8) %24, %"struct.blink::JSONParseError"* nonnull %3) #15
  %26 = icmp eq %"class.blink::JSONValue"* %25, null
  br i1 %26, label %27, label %139

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #15
  store i32 8, i32* %4, align 4
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #15
  store i32 3, i32* %5, align 4
  %34 = bitcast %"class.WTF::StringAppend.2667"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = bitcast %"class.WTF::StringAppend.2668"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #15
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %81, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %55

45:                                               ; preds = %38
  %46 = zext i32 %44 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %45
  call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %43, align 4
  br label %55

55:                                               ; preds = %53, %38
  %56 = phi i32 [ %54, %53 ], [ %44, %38 ]
  %57 = load atomic i32, i32* %39 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %55
  %61 = zext i32 %56 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #15
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !4

67:                                               ; preds = %60
  call void @llvm.trap() #15
  unreachable

68:                                               ; preds = %60
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %43, align 4
  br label %70

70:                                               ; preds = %68, %55
  %71 = phi i32 [ %69, %68 ], [ %56, %55 ]
  %72 = load atomic i32, i32* %39 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = add i32 %71, -1
  store i32 %76, i32* %43, align 4
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i32 [ %76, %75 ], [ %71, %70 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %81

81:                                               ; preds = %27, %77, %80
  %82 = getelementptr inbounds %"class.WTF::StringAppend.2668", %"class.WTF::StringAppend.2668"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringAppend.2668", %"class.WTF::StringAppend.2668"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %3, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %3, i64 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %85, i32 %87) #15
  call void @_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2667"* nonnull sret %6, %"class.WTF::StringAppend.2668"* nonnull dereferenceable(16) %7, %"class.WTF::StringImpl"* %88)
  %89 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, %"class.WTF::StringAppend.2667"* nonnull dereferenceable(24) %6) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %31, %"class.blink::ConsoleMessage"* %89, i1 zeroext false) #15
  %90 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %6, i64 0, i32 1, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #15
  br label %106

106:                                              ; preds = %105, %102, %81
  %107 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #15
  br label %123

123:                                              ; preds = %106, %119, %122
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %208, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %208

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #15
  br label %208

139:                                              ; preds = %21
  %140 = bitcast %"class.mojo::StructPtr.2649"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #15
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2649", %"class.mojo::StructPtr.2649"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::TrustTokenParams"* inttoptr (i64 -6148914691236517206 to %"class.network::mojom::blink::TrustTokenParams"*), %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  call void @_ZN5blink8internal24TrustTokenParamsFromJsonENSt3__110unique_ptrINS_9JSONValueENS1_14default_deleteIS3_EEEE(%"class.mojo::StructPtr.2649"* nonnull sret %8, %"class.blink::JSONValue"* nonnull %25) #15
  %142 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  %143 = icmp eq %"class.network::mojom::blink::TrustTokenParams"* %142, null
  br i1 %143, label %144, label %152

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %146 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %146, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::Document"*, %"class.blink::Document"** %147, align 8
  %149 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #15
  store i32 8, i32* %9, align 4
  %150 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #15
  store i32 3, i32* %10, align 4
  %151 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA69_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10, [69 x i8]* nonnull dereferenceable(69) @.str.12) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %148, %"class.blink::ConsoleMessage"* %151, i1 zeroext false) #15
  br label %199

152:                                              ; preds = %139
  %153 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %142, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = add i32 %154, -1
  %156 = icmp ult i32 %155, 2
  br i1 %156, label %157, label %175

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %158) #15
  %160 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %161 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* %159, i32 72, i32 1, %"class.WTF::String"* dereferenceable(8) %160) #15
  br i1 %161, label %162, label %166

162:                                              ; preds = %157
  %163 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  %164 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 8
  br label %175

166:                                              ; preds = %157
  %167 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %158) #15
  %168 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168) #15
  store i32 8, i32* %11, align 4
  %169 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #15
  store i32 3, i32* %12, align 4
  %170 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA117_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %12, [117 x i8]* nonnull dereferenceable(117) @.str.13) #15
  %171 = bitcast %"class.blink::ExecutionContext"* %167 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %172 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %172, i64 52
  %174 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %173, align 8
  call void %174(%"class.blink::ExecutionContext"* %167, %"class.blink::ConsoleMessage"* %170, i1 zeroext false) #15
  br label %199

175:                                              ; preds = %162, %152
  %176 = phi %"class.network::mojom::blink::TrustTokenParams"* [ %163, %162 ], [ %142, %152 ]
  %177 = phi i32 [ %165, %162 ], [ %154, %152 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = ptrtoint %"class.network::mojom::blink::TrustTokenParams"* %176 to i64
  br label %196

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %182) #15
  %184 = call zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %183) #15
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = bitcast %"class.mojo::StructPtr.2649"* %8 to i64*
  %187 = load i64, i64* %186, align 8
  br label %196

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %190 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %190, i64 0, i32 2, i32 0, i32 0
  %192 = load %"class.blink::Document"*, %"class.blink::Document"** %191, align 8
  %193 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #15
  store i32 8, i32* %13, align 4
  %194 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #15
  store i32 3, i32* %14, align 4
  %195 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA96_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14, [96 x i8]* nonnull dereferenceable(96) @.str.14) #15
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %192, %"class.blink::ConsoleMessage"* %195, i1 zeroext false) #15
  br label %199

196:                                              ; preds = %185, %179
  %197 = phi i64 [ %180, %179 ], [ %187, %185 ]
  %198 = bitcast %"class.mojo::StructPtr.2649"* %0 to i64*
  store i64 %197, i64* %198, align 8
  store %"class.network::mojom::blink::TrustTokenParams"* null, %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  br label %207

199:                                              ; preds = %166, %188, %144
  %200 = phi i8* [ %169, %166 ], [ %194, %188 ], [ %150, %144 ]
  %201 = phi i8* [ %168, %166 ], [ %193, %188 ], [ %149, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %201) #15
  %202 = bitcast %"class.mojo::StructPtr.2649"* %0 to i64*
  store i64 0, i64* %202, align 8
  %203 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  store %"class.network::mojom::blink::TrustTokenParams"* null, %"class.network::mojom::blink::TrustTokenParams"** %141, align 8
  %204 = icmp eq %"class.network::mojom::blink::TrustTokenParams"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %199
  %206 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %203 to i8*
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %203) #15
  call void @_ZdlPv(i8* %206) #16
  br label %207

207:                                              ; preds = %196, %205, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #15
  br label %210

208:                                              ; preds = %138, %135, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #15
  %209 = bitcast %"class.mojo::StructPtr.2649"* %0 to i64*
  store i64 0, i64* %209, align 8
  br label %210

210:                                              ; preds = %208, %207
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #15
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br label %227

227:                                              ; preds = %226, %19
  ret void
}

declare %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8), %"struct.blink::JSONParseError"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplIPKcNS_6StringES3_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2667"* noalias sret, %"class.WTF::StringAppend.2668"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = bitcast %"class.WTF::StringAppend.2668"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2668", %"class.WTF::StringAppend.2668"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #15
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %14
  tail call void @llvm.trap() #15
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #15
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !4

42:                                               ; preds = %33
  tail call void @llvm.trap() #15
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %47

45:                                               ; preds = %26
  %46 = inttoptr i64 %5 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.2667"* %0, i8* %46, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* null)
  br label %60

47:                                               ; preds = %28, %43
  %48 = inttoptr i64 %5 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.2667"* %0, i8* %48, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* nonnull %2)
  %49 = load atomic i32, i32* %29 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %60

60:                                               ; preds = %45, %56, %59
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare void @_ZN5blink8internal24TrustTokenParamsFromJsonENSt3__110unique_ptrINS_9JSONValueENS1_14default_deleteIS3_EEEE(%"class.mojo::StructPtr.2649"* sret, %"class.blink::JSONValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #1

declare void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_4KURLE(%"class.WTF::Vector.148"* sret, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::mojom::blink::LocalFrameHost"* @_ZNK5blink10LocalFrame23GetLocalFrameHostRemoteEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17HTMLIFrameElement19CSPAttributeChangedEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::Supplementable"* %2 to %"class.blink::HTMLIFrameElement"*
  tail call void @_ZN5blink17HTMLIFrameElement19CSPAttributeChangedEv(%"class.blink::HTMLIFrameElement"* %3)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #15
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17HTMLIFrameElement18GetWrapperTypeInfoEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLIFrameElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink20HTMLFrameElementBase10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::HTMLFrameElementBase"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink20HTMLFrameElementBase16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink20HTMLFrameElementBase36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #15
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20HTMLFrameElementBase21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20HTMLFrameElementBase14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20HTMLFrameElementBase22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20HTMLFrameElementBase13SupportsFocusEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsKeyboardFocusableEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink20HTMLFrameElementBase15DefaultTabIndexEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

declare void @_ZN5blink21HTMLFrameOwnerElement22DisconnectContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17HTMLIFrameElement9OwnerTypeEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

declare void @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #15
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %68
  tail call void @llvm.trap() #15
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase11MarginWidthEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase12MarginHeightEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %2, align 8
  %4 = icmp eq %"class.blink::EmbeddedContentView"* %3, null
  ret i1 %4
}

declare i32 @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10FrameOwner8IsPluginEv(%"class.blink::FrameOwner"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 14
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::Frame"**
  %5 = load %"class.blink::Frame"*, %"class.blink::Frame"** %4, align 8
  ret %"class.blink::Frame"* %5
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 16
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"struct.blink::FramePolicy"*
  ret %"struct.blink::FramePolicy"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 12
  %5 = bitcast %"class.blink::FrameOwner"* %4 to %"class.blink::ElementData"**
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #15
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %70
  tail call void @llvm.trap() #15
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"struct.blink::FramePolicy"* %2 to %"class.blink::HTMLFrameElementBase"*
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 3, i32 2, i32 0, i32 1
  %4 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"struct.blink::FramePolicy"* %2 to %"class.blink::HTMLFrameElementBase"*
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink17HTMLIFrameElement15AllowFullscreenEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::Supplementable", %"class.blink::Supplementable"* %2, i64 9, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink17HTMLIFrameElement19AllowPaymentRequestEv(%"class.blink::HTMLIFrameElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::Supplementable"* %2 to %"class.blink::HTMLIFrameElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLIFrameElement", %"class.blink::HTMLIFrameElement"* %3, i64 0, i32 8
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 15
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::EmbeddedContentView"**
  %5 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %4, align 8
  %6 = icmp eq %"class.blink::EmbeddedContentView"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %4, i64 0, i32 7
  store i8 %5, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink21HTMLFrameOwnerElementD2Ev(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #5

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.2827", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %31
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2827"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2827"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25PolicyParserMessageBuffer7MessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2508"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %86

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2508"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %4
  %15 = shl nuw nsw i64 %9, 4
  %16 = add nsw i64 %15, -16
  %17 = lshr exact i64 %16, 4
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %14, %21
  %22 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %35, %21 ], [ %6, %14 ]
  %23 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %34, %21 ], [ null, %14 ]
  %24 = phi i64 [ %36, %21 ], [ %19, %14 ]
  %25 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %23, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %22, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %23, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %22, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::String"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.WTF::String"* %28 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  %34 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %23, i64 1
  %35 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %22, i64 1
  %36 = add i64 %24, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %21, !llvm.loop !12

38:                                               ; preds = %21, %14
  %39 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %6, %14 ], [ %35, %21 ]
  %40 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ null, %14 ], [ %34, %21 ]
  %41 = icmp ult i64 %16, 48
  br i1 %41, label %84, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %82, %42 ], [ %39, %38 ]
  %44 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %81, %42 ], [ %40, %38 ]
  %45 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %45, align 8
  %48 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::String"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %54 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 1, i32 0
  %55 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 1, i32 0
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %54, align 8
  %57 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 1, i32 1
  %58 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 1, i32 1
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = bitcast %"class.WTF::String"* %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.WTF::String"* %57 to i64*
  store i64 %61, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %63 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 2, i32 0
  %64 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 2, i32 0
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 2, i32 1
  %67 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 2, i32 1
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::String"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.WTF::String"* %66 to i64*
  store i64 %70, i64* %71, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %72 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 3, i32 0
  %73 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 3, i32 0
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 3, i32 1
  %76 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 3, i32 1
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  %78 = bitcast %"class.WTF::String"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.WTF::String"* %75 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %81 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %44, i64 4
  %82 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %43, i64 4
  %83 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %82, %10
  br i1 %83, label %84, label %42

84:                                               ; preds = %38, %42, %4
  %85 = bitcast %"struct.blink::PolicyParserMessageBuffer::Message"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #15
  br label %180

86:                                               ; preds = %2
  %87 = zext i32 %1 to i64
  %88 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25PolicyParserMessageBuffer7MessageEEEmm(i64 %87) #15
  %89 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %88, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25PolicyParserMessageBuffer7MessageEEEPKcv, i64 0, i64 0)) #15
  %90 = lshr i64 %88, 4
  %91 = ptrtoint i8* %89 to i64
  %92 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 0
  %93 = load %"struct.blink::PolicyParserMessageBuffer::Message"*, %"struct.blink::PolicyParserMessageBuffer::Message"** %92, align 8
  %94 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %93, i64 %96
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %86
  %100 = bitcast %"struct.blink::PolicyParserMessageBuffer::Message"* %93 to i8*
  br label %175

101:                                              ; preds = %86
  %102 = bitcast i8* %89 to %"struct.blink::PolicyParserMessageBuffer::Message"*
  %103 = shl nuw nsw i64 %96, 4
  %104 = add nsw i64 %103, -16
  %105 = lshr exact i64 %104, 4
  %106 = add nuw nsw i64 %105, 1
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %126, label %109

109:                                              ; preds = %101, %109
  %110 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %123, %109 ], [ %93, %101 ]
  %111 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %122, %109 ], [ %102, %101 ]
  %112 = phi i64 [ %124, %109 ], [ %107, %101 ]
  %113 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %111, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %110, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  store i32 %115, i32* %113, align 8
  %116 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %111, i64 0, i32 1
  %117 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %110, i64 0, i32 1
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.WTF::String"* %116 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8
  %122 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %111, i64 1
  %123 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %110, i64 1
  %124 = add i64 %112, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %109, !llvm.loop !14

126:                                              ; preds = %109, %101
  %127 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %93, %101 ], [ %123, %109 ]
  %128 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %102, %101 ], [ %122, %109 ]
  %129 = icmp ult i64 %104, 48
  br i1 %129, label %172, label %130

130:                                              ; preds = %126, %130
  %131 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %170, %130 ], [ %127, %126 ]
  %132 = phi %"struct.blink::PolicyParserMessageBuffer::Message"* [ %169, %130 ], [ %128, %126 ]
  %133 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 0, i32 0
  %134 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %133, align 8
  %136 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 0, i32 1
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = bitcast %"class.WTF::String"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.WTF::String"* %136 to i64*
  store i64 %140, i64* %141, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %138, align 8
  %142 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 1, i32 0
  %143 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 1, i32 0
  %144 = load i32, i32* %143, align 8
  store i32 %144, i32* %142, align 8
  %145 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 1, i32 1
  %146 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 1, i32 1
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::String"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.WTF::String"* %145 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %151 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 2, i32 0
  %152 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 2, i32 0
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 2, i32 1
  %155 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 2, i32 1
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 0, i32 0, i32 0
  %157 = bitcast %"class.WTF::String"* %155 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.WTF::String"* %154 to i64*
  store i64 %158, i64* %159, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %156, align 8
  %160 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 3, i32 0
  %161 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 3, i32 0
  %162 = load i32, i32* %161, align 8
  store i32 %162, i32* %160, align 8
  %163 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 3, i32 1
  %164 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 3, i32 1
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 0, i32 0, i32 0
  %166 = bitcast %"class.WTF::String"* %164 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.WTF::String"* %163 to i64*
  store i64 %167, i64* %168, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %165, align 8
  %169 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %132, i64 4
  %170 = getelementptr inbounds %"struct.blink::PolicyParserMessageBuffer::Message", %"struct.blink::PolicyParserMessageBuffer::Message"* %131, i64 4
  %171 = icmp eq %"struct.blink::PolicyParserMessageBuffer::Message"* %170, %97
  br i1 %171, label %172, label %130

172:                                              ; preds = %130, %126
  %173 = bitcast %"class.WTF::Vector.2508"* %0 to i8**
  %174 = load i8*, i8** %173, align 8
  br label %175

175:                                              ; preds = %99, %172
  %176 = phi i8* [ %174, %172 ], [ %100, %99 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %176) #15
  %177 = bitcast %"class.WTF::Vector.2508"* %0 to i64*
  store atomic i64 %91, i64* %177 monotonic, align 8
  %178 = trunc i64 %90 to i32
  %179 = getelementptr inbounds %"class.WTF::Vector.2508", %"class.WTF::Vector.2508"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %178, i32* %179, align 8
  br label %180

180:                                              ; preds = %175, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25PolicyParserMessageBuffer7MessageEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2827"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2827"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #15
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #15
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #15
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"* nonnull %67, i8* %30) #15
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"* nonnull %68, i8* %71) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #15
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %80
  call void @llvm.trap() #15
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2827"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #15
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #15
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #15
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #15
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #15
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"* nonnull %144, i16* %107) #15
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"* nonnull %145, i16* %148) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #15
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #15
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !4

164:                                              ; preds = %157
  call void @llvm.trap() #15
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #15
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2827"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #15
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %31, i8* %32) #15
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2827"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #15
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !4

20:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.2827", %"class.WTF::StringAppend.2827"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %33
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #5

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #15
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #15
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #15
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink24HTMLIFrameElementSandboxC1EPNS_17HTMLIFrameElementE(%"class.blink::HTMLIFrameElementSandbox"*, %"class.blink::HTMLIFrameElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24HTMLIFrameElementSandboxEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMTokenList"*
  tail call void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16DOMFeaturePolicyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMFeaturePolicy"*
  %4 = bitcast i8* %1 to void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)**, void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DOMFeaturePolicy"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_17HTMLIFrameElementEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_17HTMLIFrameElementEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #15
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_17HTMLIFrameElementEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #15
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.2821"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #15, !range !15
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #15
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.2821"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #15, !range !15
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #15
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2570"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0)) #15
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2573"*
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %55 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %30, i64 %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"struct.WTF::KeyValuePair.2573"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %30, i64 %34, i32 1
  store i32 -128, i32* %58, align 8
  %59 = add nuw nsw i64 %34, 1
  %60 = icmp eq i64 %59, %27
  br i1 %60, label %61, label %33

61:                                               ; preds = %55
  %62 = call %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2570"* %0, %"struct.WTF::KeyValuePair.2573"* %30, i32 %17, %"struct.WTF::KeyValuePair.2573"* null) #15
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2570"*, %"struct.WTF::KeyValuePair.2573"*, i32, %"struct.WTF::KeyValuePair.2573"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2570"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.2573"*, %"struct.WTF::KeyValuePair.2573"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %16 to i64
  br label %61

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable.2570"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.2573"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.2573"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.2573"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #15
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair.2573"* %23

61:                                               ; preds = %13, %160
  %62 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %63 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %64 = phi %"struct.WTF::KeyValuePair.2573"* [ %16, %13 ], [ %163, %160 ]
  %65 = phi %"struct.WTF::KeyValuePair.2573"* [ null, %13 ], [ %164, %160 ]
  %66 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair.2573"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %160
    i64 0, label %160
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair.2573"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.2573"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair.2573"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair.2573"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.2573"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair.2573"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.2573"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #15
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %64, i64 %67, i32 1
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = load %"struct.WTF::KeyValuePair.2573"*, %"struct.WTF::KeyValuePair.2573"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %154, i64 %67
  %156 = icmp eq %"struct.WTF::KeyValuePair.2573"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair.2573"* %131, %"struct.WTF::KeyValuePair.2573"* %65
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair.2573"* %154 to i64
  br label %160

160:                                              ; preds = %61, %61, %148
  %161 = phi i64 [ %62, %61 ], [ %159, %148 ], [ %62, %61 ]
  %162 = phi i32 [ %63, %61 ], [ %158, %148 ], [ %63, %61 ]
  %163 = phi %"struct.WTF::KeyValuePair.2573"* [ %64, %61 ], [ %154, %148 ], [ %64, %61 ]
  %164 = phi %"struct.WTF::KeyValuePair.2573"* [ %65, %61 ], [ %157, %148 ], [ %65, %61 ]
  %165 = add i32 %66, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2573"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2570"*, %"class.WTF::AtomicString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2573"*, %"struct.WTF::KeyValuePair.2573"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2573"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2570"* %0, %"struct.WTF::KeyValuePair.2573"* null)
  %9 = load %"struct.WTF::KeyValuePair.2573"*, %"struct.WTF::KeyValuePair.2573"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2573"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %97, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.2573"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.2573"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.2573"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %151, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.2573"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.2573"* %53, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %62
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !4

83:                                               ; preds = %74
  tail call void @llvm.trap() #15
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %64, %69, %84
  %87 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %88 = bitcast %"struct.WTF::KeyValuePair.2573"* %53 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %53, i64 0, i32 1
  store i32 -128, i32* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %97

97:                                               ; preds = %10, %62, %86
  %98 = phi %"class.WTF::StringImpl"* [ %96, %86 ], [ %17, %62 ], [ %17, %10 ]
  %99 = phi %"struct.WTF::KeyValuePair.2573"* [ %53, %86 ], [ %58, %62 ], [ %23, %10 ]
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #15
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !4

115:                                              ; preds = %106
  tail call void @llvm.trap() #15
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %101, %97
  %119 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair.2573"* %99 to i64*
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %119, i64* %120, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %137

137:                                              ; preds = %118, %133, %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %99, i64 0, i32 1
  %139 = load i32, i32* %2, align 4
  store i32 %139, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %137
  %150 = tail call %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2570"* %0, %"struct.WTF::KeyValuePair.2573"* %99)
  br label %151

151:                                              ; preds = %49, %137, %149
  %152 = phi i8 [ 1, %137 ], [ 1, %149 ], [ 0, %49 ]
  %153 = phi %"struct.WTF::KeyValuePair.2573"* [ %99, %137 ], [ %150, %149 ], [ %42, %49 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair.2573"*, i8 } undef, %"struct.WTF::KeyValuePair.2573"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair.2573"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair.2573"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2570"*, %"struct.WTF::KeyValuePair.2573"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2570", %"class.WTF::HashTable.2570"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2573"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %63, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #15
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !4

60:                                               ; preds = %51
  call void @llvm.trap() #15
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %41
  %64 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %65 = bitcast %"struct.WTF::KeyValuePair.2573"* %43 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2573", %"struct.WTF::KeyValuePair.2573"* %36, i64 %42, i32 1
  store i32 -128, i32* %66, align 8
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %63, %31
  %70 = call %"struct.WTF::KeyValuePair.2573"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2570"* %0, %"struct.WTF::KeyValuePair.2573"* %36, i32 %32, %"struct.WTF::KeyValuePair.2573"* %1) #15
  ret %"struct.WTF::KeyValuePair.2573"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12IFramePolicyC2EPNS_16ExecutionContextERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::IFramePolicy"*, %"class.blink::ExecutionContext"*, %"class.std::__1::vector"* dereferenceable(24), %"class.blink::SecurityOrigin"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 0
  tail call void @_ZN5blink16DOMFeaturePolicyC2EPNS_16ExecutionContextE(%"class.blink::DOMFeaturePolicy"* %5, %"class.blink::ExecutionContext"* %1) #15
  %6 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12IFramePolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @_ZN5blink12IFramePolicy21UpdateContainerPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::IFramePolicy"* %0, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.blink::SecurityOrigin"* null)
  br label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #15
  tail call void @_ZN5blink12IFramePolicy21UpdateContainerPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::IFramePolicy"* %0, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.blink::SecurityOrigin"* nonnull %3)
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #15
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #15
  %17 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %17) #15
  br label %18

18:                                               ; preds = %10, %11, %16
  ret void
}

declare void @_ZN5blink16DOMFeaturePolicyC2EPNS_16ExecutionContextE(%"class.blink::DOMFeaturePolicy"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12IFramePolicy21UpdateContainerPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::IFramePolicy"*, %"class.std::__1::vector"* dereferenceable(24), %"class.blink::SecurityOrigin"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.url::Origin", align 8
  %5 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %7, align 8
  %9 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #15
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %4, %"class.blink::SecurityOrigin"* %2) #15
  %10 = call %"class.blink::PermissionsPolicy"* @_ZN5blink17PermissionsPolicy22CreateFromParentPolicyEPKS0_RKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEERKN3url6OriginE(%"class.blink::PermissionsPolicy"* %8, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.url::Origin"* nonnull dereferenceable(80) %4) #15
  %11 = ptrtoint %"class.blink::PermissionsPolicy"* %10 to i64
  %12 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %"class.blink::PermissionsPolicy"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %14) #15
  %18 = bitcast %"class.blink::PermissionsPolicy"* %14 to i8*
  call void @_ZdlPv(i8* %18) #16
  br label %19

19:                                               ; preds = %17, %3
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #15
  %20 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #15
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %2) #15
  %27 = bitcast %"class.blink::SecurityOrigin"* %2 to i8*
  call void @free(i8* %27) #15
  br label %28

28:                                               ; preds = %19, %21, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12IFramePolicyD2Ev(%"class.blink::IFramePolicy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12IFramePolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %3, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %3, align 8
  %5 = icmp eq %"class.blink::PermissionsPolicy"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %4) #15
  %7 = bitcast %"class.blink::PermissionsPolicy"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12IFramePolicyD0Ev(%"class.blink::IFramePolicy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12IFramePolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %3, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %3, align 8
  %5 = icmp eq %"class.blink::PermissionsPolicy"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %4) #15
  %7 = bitcast %"class.blink::PermissionsPolicy"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink16DOMFeaturePolicy5TraceEPNS_7VisitorE(%"class.blink::DOMFeaturePolicy"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16DOMFeaturePolicy18GetWrapperTypeInfoEv(%"class.blink::DOMFeaturePolicy"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16DOMFeaturePolicy18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PermissionsPolicy"* @_ZNK5blink12IFramePolicy9GetPolicyEv(%"class.blink::IFramePolicy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IFramePolicy", %"class.blink::IFramePolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %2, align 8
  ret %"class.blink::PermissionsPolicy"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12IFramePolicy14IsIFramePolicyEv(%"class.blink::IFramePolicy"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::PermissionsPolicy"* @_ZN5blink17PermissionsPolicy22CreateFromParentPolicyEPKS0_RKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEERKN3url6OriginE(%"class.blink::PermissionsPolicy"*, %"class.std::__1::vector"* dereferenceable(24), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelENS_9WebStringEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #15
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #1

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_12AtomicStringEEEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEEcvNS_6StringEEv(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEEcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2884", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2884", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2883"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #15
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %6, i8* %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #15
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2883"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #15
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %4, i8* %28) #15
  %29 = bitcast %"class.WTF::StringTypeAdapter.2884"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #15
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2884"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %4, i8* %25) #15
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"* nonnull %47, i8* %50) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #15
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #15
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %59
  call void @llvm.trap() #15
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #15
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.2883"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #15
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #15
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %2, i8* %89) #15
  %90 = bitcast %"class.WTF::StringTypeAdapter.2884"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #15
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #15
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2884"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %2, i16* %86) #15
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2884", %"class.WTF::StringTypeAdapter.2884"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"* nonnull %108, i16* %111) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #15
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #15
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !4

127:                                              ; preds = %120
  call void @llvm.trap() #15
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #15
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #15
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2883"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2883"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA96_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [96 x i8]* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds [96 x i8], [96 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [96 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #17
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #15
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA59_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [59 x i8]* dereferenceable(59)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds [59 x i8], [59 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [59 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #17
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #15
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EC2ES4_S3_(%"class.WTF::StringAppend.2667"*, i8*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = bitcast %"class.WTF::StringAppend.2667"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #15
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %14
  tail call void @llvm.trap() #15
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %4, %9, %24
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !4

43:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %29, %44
  %47 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %48 = load atomic i32, i32* %30 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %53 = add i32 %47, -1
  store i32 %53, i32* %52, align 4
  br label %54

54:                                               ; preds = %51, %46
  %55 = phi i32 [ %53, %51 ], [ %47, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %58

58:                                               ; preds = %26, %54, %57
  br i1 %8, label %72, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %72

72:                                               ; preds = %58, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESB_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.2667"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev(%"class.WTF::StringAppend.2667"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_EcvS3_Ev(%"class.WTF::StringAppend.2667"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.2883"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #15
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %2, i8* %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %15 = select i1 %13, %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"* %12
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #15
  br i1 %19, label %63, label %20

20:                                               ; preds = %1
  %21 = icmp eq %"class.WTF::StringImpl"* %6, null
  %22 = select i1 %21, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %63, label %27

27:                                               ; preds = %20
  %28 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %29 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.2667"* %0)
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %29, i8** nonnull dereferenceable(8) %3) #15
  %31 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh(%"class.WTF::StringAppend.2667"* %0, i8* %31)
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %99, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %33
  %41 = zext i32 %39 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #15
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !4

47:                                               ; preds = %40
  call void @llvm.trap() #15
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %33, %48
  %51 = phi i32 [ %49, %48 ], [ %39, %33 ]
  %52 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %53 = load atomic i32, i32* %34 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %58 = add i32 %51, -1
  store i32 %58, i32* %57, align 4
  br label %59

59:                                               ; preds = %56, %50
  %60 = phi i32 [ %58, %56 ], [ %51, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %99

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %99

63:                                               ; preds = %20, %1
  %64 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %65 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.2667"* %0)
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %65, i16** nonnull dereferenceable(8) %4) #15
  %67 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2667"* %0, i16* %67)
  %68 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %68, label %99, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %86

76:                                               ; preds = %69
  %77 = zext i32 %75 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !4

83:                                               ; preds = %76
  call void @llvm.trap() #15
  unreachable

84:                                               ; preds = %76
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %74, align 4
  br label %86

86:                                               ; preds = %69, %84
  %87 = phi i32 [ %85, %84 ], [ %75, %69 ]
  %88 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %89 = load atomic i32, i32* %70 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %94 = add i32 %87, -1
  store i32 %94, i32* %93, align 4
  br label %95

95:                                               ; preds = %92, %86
  %96 = phi i32 [ %94, %92 ], [ %87, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %99

99:                                               ; preds = %98, %95, %63, %62, %59, %27
  %100 = phi i8* [ %28, %27 ], [ %28, %59 ], [ %28, %62 ], [ %64, %63 ], [ %64, %95 ], [ %64, %98 ]
  %101 = phi i64 [ 0, %27 ], [ %52, %59 ], [ %52, %62 ], [ 0, %63 ], [ %88, %95 ], [ %88, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #15
  %102 = inttoptr i64 %101 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E6lengthEv(%"class.WTF::StringAppend.2667"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2668"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2668"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPh(%"class.WTF::StringAppend.2667"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2883"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #15
  %30 = load i8*, i8** %29, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %3, i8* %30) #15
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #15
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %22
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %22
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %32, align 8
  store i32 %48, i32* %33, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %3, i8* %1) #15
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %51 = load i32, i32* %28, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"* nonnull %50, i8* %53) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %54 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %55 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2668"* %6) #15
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2833"* nonnull %54, i8* %57) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2667"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2883"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #15
  %30 = load i8*, i8** %29, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %3, i8* %30) #15
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2667", %"class.WTF::StringAppend.2667"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #15
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %22
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %22
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %32, align 8
  store i32 %48, i32* %33, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %3, i16* %1) #15
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %51 = load i32, i32* %28, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"* nonnull %50, i16* %53) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %54 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %55 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2668"* %6) #15
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %1, i64 %56
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2833"* nonnull %54, i16* %57) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2668"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2883", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2883"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2883", %"class.WTF::StringTypeAdapter.2883"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2668", %"class.WTF::StringAppend.2668"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2883"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2883"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2668", %"class.WTF::StringAppend.2668"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA69_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [69 x i8]* dereferenceable(69)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds [69 x i8], [69 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [69 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #17
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #15
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA117_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [117 x i8]* dereferenceable(117)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds [117 x i8], [117 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [117 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #17
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #15
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #15
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr.151"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.148"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.148", %"class.WTF::Vector.148"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.148", %"class.WTF::Vector.148"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.151"*, %"class.mojo::StructPtr.151"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.151", %"class.mojo::StructPtr.151"* %24, i64 %25
  ret %"class.mojo::StructPtr.151"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNO4absl8optionalIN5blink14DocumentPolicy20ParsedDocumentPolicyEE8value_orIS3_EES3_OT_: argument 0"}
!11 = distinct !{!11, !"_ZNO4absl8optionalIN5blink14DocumentPolicy20ParsedDocumentPolicyEE8value_orIS3_EES3_OT_"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = !{i32 24, i32 33}
