; ModuleID = '../../services/metrics/public/cpp/ukm_recorder.cc'
source_filename = "../../services/metrics/public/cpp/ukm_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.ukm::DelegatingUkmRecorder" = type { %"class.ukm::UkmRecorder", %"class.base::Lock", %"class.std::__1::unordered_map" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.19" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GURL* }

$_ZN3ukm11UkmRecorder25DisableSamplingForTestingEv = comdat any

@.str = private unnamed_addr constant [4 x i8] c"Ukm\00", align 1
@_ZN3ukm11kUkmFeatureE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@_ZTVN3ukm11UkmRecorderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ukm::UkmRecorder"*)* @_ZN3ukm11UkmRecorderD2Ev to i8*), i8* bitcast (void (%"class.ukm::UkmRecorder"*)* @_ZN3ukm11UkmRecorderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ukm::UkmRecorder"*)* @_ZN3ukm11UkmRecorder25DisableSamplingForTestingEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3ukm11UkmRecorderD1Ev = hidden unnamed_addr alias void (%"class.ukm::UkmRecorder"*), void (%"class.ukm::UkmRecorder"*)* @_ZN3ukm11UkmRecorderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3ukm11UkmRecorderC2Ev(%"class.ukm::UkmRecorder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ukm::UkmRecorder", %"class.ukm::UkmRecorder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3ukm11UkmRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3ukm11UkmRecorderD2Ev(%"class.ukm::UkmRecorder"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3ukm11UkmRecorderD0Ev(%"class.ukm::UkmRecorder"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ukm::UkmRecorder"* @_ZN3ukm11UkmRecorder3GetEv() local_unnamed_addr #4 align 2 {
  %1 = tail call %"class.ukm::DelegatingUkmRecorder"* @_ZN3ukm21DelegatingUkmRecorder3GetEv() #7
  %2 = getelementptr inbounds %"class.ukm::DelegatingUkmRecorder", %"class.ukm::DelegatingUkmRecorder"* %1, i64 0, i32 0
  ret %"class.ukm::UkmRecorder"* %2
}

declare %"class.ukm::DelegatingUkmRecorder"* @_ZN3ukm21DelegatingUkmRecorder3GetEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11UkmRecorder14GetNewSourceIDEv() local_unnamed_addr #4 align 2 {
  %1 = tail call i64 @_ZN3ukm17AssignNewSourceIdEv() #7
  ret i64 %1
}

declare i64 @_ZN3ukm17AssignNewSourceIdEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11UkmRecorder33GetSourceIdForPaymentAppFromScopeERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZN3ukm17AssignNewSourceIdEv() #7
  %3 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %2, i64 5) #7
  %4 = tail call %"class.ukm::DelegatingUkmRecorder"* @_ZN3ukm21DelegatingUkmRecorder3GetEv() #7
  %5 = getelementptr inbounds %"class.ukm::DelegatingUkmRecorder", %"class.ukm::DelegatingUkmRecorder"* %4, i64 0, i32 0
  %6 = bitcast %"class.ukm::DelegatingUkmRecorder"* %4 to void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)***
  %7 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)**, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %7, i64 4
  %9 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %8, align 8
  tail call void %9(%"class.ukm::UkmRecorder"* %5, i64 %3, %class.GURL* dereferenceable(120) %0) #7
  ret i64 %3
}

declare i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11UkmRecorder31GetSourceIdForWebApkManifestUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZN3ukm17AssignNewSourceIdEv() #7
  %3 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %2, i64 4) #7
  %4 = tail call %"class.ukm::DelegatingUkmRecorder"* @_ZN3ukm21DelegatingUkmRecorder3GetEv() #7
  %5 = getelementptr inbounds %"class.ukm::DelegatingUkmRecorder", %"class.ukm::DelegatingUkmRecorder"* %4, i64 0, i32 0
  %6 = bitcast %"class.ukm::DelegatingUkmRecorder"* %4 to void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)***
  %7 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)**, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %7, i64 4
  %9 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %8, align 8
  tail call void %9(%"class.ukm::UkmRecorder"* %5, i64 %3, %class.GURL* dereferenceable(120) %0) #7
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3ukm11UkmRecorder35GetSourceIdForDesktopWebAppStartUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #4 align 2 {
  %2 = tail call i64 @_ZN3ukm17AssignNewSourceIdEv() #7
  %3 = tail call i64 @_ZN3ukm11SourceIdObj11FromOtherIdElNS0_4TypeE(i64 %2, i64 6) #7
  %4 = tail call %"class.ukm::DelegatingUkmRecorder"* @_ZN3ukm21DelegatingUkmRecorder3GetEv() #7
  %5 = getelementptr inbounds %"class.ukm::DelegatingUkmRecorder", %"class.ukm::DelegatingUkmRecorder"* %4, i64 0, i32 0
  %6 = bitcast %"class.ukm::DelegatingUkmRecorder"* %4 to void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)***
  %7 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)**, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %7, i64 4
  %9 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %8, align 8
  tail call void %9(%"class.ukm::UkmRecorder"* %5, i64 %3, %class.GURL* dereferenceable(120) %0) #7
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm11UkmRecorder14RecordOtherURLENS_11SourceIdObjERK4GURL(%"class.ukm::UkmRecorder"*, i64, %class.GURL* dereferenceable(120)) local_unnamed_addr #4 align 2 {
  %4 = bitcast %"class.ukm::UkmRecorder"* %0 to void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)***
  %5 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)**, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %5, i64 4
  %7 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*)** %6, align 8
  tail call void %7(%"class.ukm::UkmRecorder"* %0, i64 %1, %class.GURL* dereferenceable(120) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm11UkmRecorder12RecordAppURLENS_11SourceIdObjERK4GURLNS_7AppTypeE(%"class.ukm::UkmRecorder"*, i64, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #4 align 2 {
  %5 = bitcast %"class.ukm::UkmRecorder"* %0 to void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)***
  %6 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)**, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)** %6, i64 5
  %8 = load void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)*, void (%"class.ukm::UkmRecorder"*, i64, %class.GURL*, i32)** %7, align 8
  tail call void %8(%"class.ukm::UkmRecorder"* %0, i64 %1, %class.GURL* dereferenceable(120) %2, i32 %3) #7
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ukm11UkmRecorder25DisableSamplingForTestingEv(%"class.ukm::UkmRecorder"*) unnamed_addr #4 comdat align 2 {
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
