; ModuleID = '../../third_party/skia/src/core/SkMaskGamma.cpp'
source_filename = "../../third_party/skia/src/core/SkMaskGamma.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkColorSpaceLuminance = type { i32 (...)** }
%class.SkLinearColorSpaceLuminance = type { %class.SkColorSpaceLuminance }
%class.SkGammaColorSpaceLuminance = type { %class.SkColorSpaceLuminance }
%class.SkSRGBColorSpaceLuminance = type { %class.SkColorSpaceLuminance }

$_ZN21SkColorSpaceLuminanceD2Ev = comdat any

$_ZN27SkLinearColorSpaceLuminanceD0Ev = comdat any

$_ZNK27SkLinearColorSpaceLuminance6toLumaEff = comdat any

$_ZNK27SkLinearColorSpaceLuminance8fromLumaEff = comdat any

$_ZN26SkGammaColorSpaceLuminanceD0Ev = comdat any

$_ZNK26SkGammaColorSpaceLuminance6toLumaEff = comdat any

$_ZNK26SkGammaColorSpaceLuminance8fromLumaEff = comdat any

$_ZN25SkSRGBColorSpaceLuminanceD0Ev = comdat any

$_ZNK25SkSRGBColorSpaceLuminance6toLumaEff = comdat any

$_ZNK25SkSRGBColorSpaceLuminance8fromLumaEff = comdat any

$_ZTV27SkLinearColorSpaceLuminance = comdat any

$_ZTV26SkGammaColorSpaceLuminance = comdat any

$_ZTV25SkSRGBColorSpaceLuminance = comdat any

@_ZZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance = internal global { i8** } { i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27SkLinearColorSpaceLuminance, i32 0, inrange i32 0, i32 2) }, align 8
@_ZTV27SkLinearColorSpaceLuminance = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkColorSpaceLuminance*)* @_ZN21SkColorSpaceLuminanceD2Ev to i8*), i8* bitcast (void (%class.SkLinearColorSpaceLuminance*)* @_ZN27SkLinearColorSpaceLuminanceD0Ev to i8*), i8* bitcast (float (%class.SkLinearColorSpaceLuminance*, float, float)* @_ZNK27SkLinearColorSpaceLuminance6toLumaEff to i8*), i8* bitcast (float (%class.SkLinearColorSpaceLuminance*, float, float)* @_ZNK27SkLinearColorSpaceLuminance8fromLumaEff to i8*)] }, comdat, align 8
@_ZGVZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance = internal global i64 0, align 8
@_ZZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance = internal global { i8** } { i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV26SkGammaColorSpaceLuminance, i32 0, inrange i32 0, i32 2) }, align 8
@_ZTV26SkGammaColorSpaceLuminance = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkColorSpaceLuminance*)* @_ZN21SkColorSpaceLuminanceD2Ev to i8*), i8* bitcast (void (%class.SkGammaColorSpaceLuminance*)* @_ZN26SkGammaColorSpaceLuminanceD0Ev to i8*), i8* bitcast (float (%class.SkGammaColorSpaceLuminance*, float, float)* @_ZNK26SkGammaColorSpaceLuminance6toLumaEff to i8*), i8* bitcast (float (%class.SkGammaColorSpaceLuminance*, float, float)* @_ZNK26SkGammaColorSpaceLuminance8fromLumaEff to i8*)] }, comdat, align 8
@_ZGVZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance = internal global i64 0, align 8
@_ZZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance = internal global { i8** } { i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkSRGBColorSpaceLuminance, i32 0, inrange i32 0, i32 2) }, align 8
@_ZTV25SkSRGBColorSpaceLuminance = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkColorSpaceLuminance*)* @_ZN21SkColorSpaceLuminanceD2Ev to i8*), i8* bitcast (void (%class.SkSRGBColorSpaceLuminance*)* @_ZN25SkSRGBColorSpaceLuminanceD0Ev to i8*), i8* bitcast (float (%class.SkSRGBColorSpaceLuminance*, float, float)* @_ZNK25SkSRGBColorSpaceLuminance6toLumaEff to i8*), i8* bitcast (float (%class.SkSRGBColorSpaceLuminance*, float, float)* @_ZNK25SkSRGBColorSpaceLuminance8fromLumaEff to i8*)] }, comdat, align 8
@_ZGVZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance = internal global i64 0, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkColorSpaceLuminance* @_ZN21SkColorSpaceLuminance5FetchEf(float) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance) #7
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance) #7
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !2

18:                                               ; preds = %15
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance) #7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance) #7
  br label %22

22:                                               ; preds = %18, %21, %15
  %23 = fcmp oeq float %0, 0.000000e+00
  %24 = fcmp oeq float %0, 1.000000e+00
  %25 = select i1 %24, %class.SkColorSpaceLuminance* bitcast ({ i8** }* @_ZZN21SkColorSpaceLuminance5FetchEfE28gSkLinearColorSpaceLuminance to %class.SkColorSpaceLuminance*), %class.SkColorSpaceLuminance* bitcast ({ i8** }* @_ZZN21SkColorSpaceLuminance5FetchEfE27gSkGammaColorSpaceLuminance to %class.SkColorSpaceLuminance*)
  %26 = select i1 %23, %class.SkColorSpaceLuminance* bitcast ({ i8** }* @_ZZN21SkColorSpaceLuminance5FetchEfE26gSkSRGBColorSpaceLuminance to %class.SkColorSpaceLuminance*), %class.SkColorSpaceLuminance* %25
  ret %class.SkColorSpaceLuminance* %26
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkColorSpaceLuminanceD2Ev(%class.SkColorSpaceLuminance*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z33SkTMaskGamma_build_correcting_lutPhjfRK21SkColorSpaceLuminancefS2_f(i8* nocapture, i32, float, %class.SkColorSpaceLuminance* dereferenceable(8), float, %class.SkColorSpaceLuminance* dereferenceable(8), float) local_unnamed_addr #2 {
  %8 = uitofp i32 %1 to float
  %9 = fdiv float %8, 2.550000e+02
  %10 = bitcast %class.SkColorSpaceLuminance* %3 to float (%class.SkColorSpaceLuminance*, float, float)***
  %11 = load float (%class.SkColorSpaceLuminance*, float, float)**, float (%class.SkColorSpaceLuminance*, float, float)*** %10, align 8
  %12 = getelementptr inbounds float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %11, i64 2
  %13 = load float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %12, align 8
  %14 = tail call float %13(%class.SkColorSpaceLuminance* %3, float %4, float %9) #7
  %15 = fsub float 1.000000e+00, %9
  %16 = bitcast %class.SkColorSpaceLuminance* %5 to float (%class.SkColorSpaceLuminance*, float, float)***
  %17 = load float (%class.SkColorSpaceLuminance*, float, float)**, float (%class.SkColorSpaceLuminance*, float, float)*** %16, align 8
  %18 = getelementptr inbounds float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %17, i64 2
  %19 = load float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %18, align 8
  %20 = tail call float %19(%class.SkColorSpaceLuminance* %5, float %6, float %15) #7
  %21 = fmul float %20, %2
  %22 = fsub float %9, %15
  %23 = tail call float @llvm.fabs.f32(float %22) #7
  %24 = fcmp olt float %23, 3.906250e-03
  br i1 %24, label %25, label %46

25:                                               ; preds = %7, %25
  %26 = phi i64 [ %43, %25 ], [ 0, %7 ]
  %27 = phi float [ %44, %25 ], [ 0.000000e+00, %7 ]
  %28 = fdiv float %27, 2.550000e+02
  %29 = fsub float 1.000000e+00, %28
  %30 = fmul float %21, %29
  %31 = fmul float %28, %30
  %32 = fadd float %28, %31
  %33 = fmul float %32, 2.550000e+02
  %34 = fadd float %33, 5.000000e-01
  %35 = tail call float @llvm.floor.f32(float %34)
  %36 = fcmp olt float %35, 0x41DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0x41DFFFFFE0000000
  %38 = fcmp ogt float %37, 0xC1DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0xC1DFFFFFE0000000
  %40 = fptosi float %39 to i32
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, i8* %0, i64 %26
  store i8 %41, i8* %42, align 1
  %43 = add nuw nsw i64 %26, 1
  %44 = fadd float %27, 1.000000e+00
  %45 = icmp eq i64 %43, 256
  br i1 %45, label %77, label %25

46:                                               ; preds = %7, %46
  %47 = phi i64 [ %74, %46 ], [ 0, %7 ]
  %48 = phi float [ %75, %46 ], [ 0.000000e+00, %7 ]
  %49 = fdiv float %48, 2.550000e+02
  %50 = fsub float 1.000000e+00, %49
  %51 = fmul float %21, %50
  %52 = fmul float %49, %51
  %53 = fadd float %49, %52
  %54 = fsub float 1.000000e+00, %53
  %55 = fmul float %14, %53
  %56 = fmul float %20, %54
  %57 = fadd float %55, %56
  %58 = load float (%class.SkColorSpaceLuminance*, float, float)**, float (%class.SkColorSpaceLuminance*, float, float)*** %16, align 8
  %59 = getelementptr inbounds float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %58, i64 3
  %60 = load float (%class.SkColorSpaceLuminance*, float, float)*, float (%class.SkColorSpaceLuminance*, float, float)** %59, align 8
  %61 = tail call float %60(%class.SkColorSpaceLuminance* %5, float %6, float %57) #7
  %62 = fsub float %61, %15
  %63 = fdiv float %62, %22
  %64 = fmul float %63, 2.550000e+02
  %65 = fadd float %64, 5.000000e-01
  %66 = tail call float @llvm.floor.f32(float %65)
  %67 = fcmp olt float %66, 0x41DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0x41DFFFFFE0000000
  %69 = fcmp ogt float %68, 0xC1DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0xC1DFFFFFE0000000
  %71 = fptosi float %70 to i32
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %0, i64 %47
  store i8 %72, i8* %73, align 1
  %74 = add nuw nsw i64 %47, 1
  %75 = fadd float %48, 1.000000e+00
  %76 = icmp eq i64 %74, 256
  br i1 %76, label %77, label %46

77:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27SkLinearColorSpaceLuminanceD0Ev(%class.SkLinearColorSpaceLuminance*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkLinearColorSpaceLuminance* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK27SkLinearColorSpaceLuminance6toLumaEff(%class.SkLinearColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  ret float %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK27SkLinearColorSpaceLuminance8fromLumaEff(%class.SkLinearColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  ret float %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkGammaColorSpaceLuminanceD0Ev(%class.SkGammaColorSpaceLuminance*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkGammaColorSpaceLuminance* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK26SkGammaColorSpaceLuminance6toLumaEff(%class.SkGammaColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  %4 = tail call float @powf(float %2, float %1) #7
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK26SkGammaColorSpaceLuminance8fromLumaEff(%class.SkGammaColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  %4 = fdiv float 1.000000e+00, %1
  %5 = tail call float @powf(float %2, float %4) #7
  ret float %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkSRGBColorSpaceLuminanceD0Ev(%class.SkSRGBColorSpaceLuminance*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkSRGBColorSpaceLuminance* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK25SkSRGBColorSpaceLuminance6toLumaEff(%class.SkSRGBColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  %4 = fcmp ugt float %2, 0x3FA4B5DCC0000000
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = fdiv float %2, 0x4029D70A40000000
  br label %11

7:                                                ; preds = %3
  %8 = fadd float %2, 0x3FAC28F5C0000000
  %9 = fdiv float %8, 0x3FF0E147A0000000
  %10 = tail call float @powf(float %9, float 0x4003333340000000) #7
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi float [ %6, %5 ], [ %10, %7 ]
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK25SkSRGBColorSpaceLuminance8fromLumaEff(%class.SkSRGBColorSpaceLuminance*, float, float) unnamed_addr #2 comdat align 2 {
  %4 = fcmp ugt float %2, 0x3F69A5C380000000
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = fmul float %2, 0x4029D70A40000000
  br label %11

7:                                                ; preds = %3
  %8 = tail call float @powf(float %2, float 0x3FDAAAAAA0000000) #7
  %9 = fmul float %8, 0x3FF0E147A0000000
  %10 = fadd float %9, 0xBFAC28F5C0000000
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi float [ %6, %5 ], [ %10, %7 ]
  ret float %12
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #6

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
