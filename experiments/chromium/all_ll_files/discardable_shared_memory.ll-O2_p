; ModuleID = '../../base/memory/discardable_shared_memory.cc'
source_filename = "../../base/memory/discardable_shared_memory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::DiscardableSharedMemory" = type { i32 (...)**, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", i64, i64, %"class.base::Time" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.base::(anonymous namespace)::SharedState" = type { %union.anon }
%union.anon = type { i64 }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.2 }
%union.anon.2 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.3" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.16", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::map.16" = type { %"class.std::__1::__tree.17" }
%"class.std::__1::__tree.17" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN4base23DiscardableSharedMemoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::DiscardableSharedMemory"*)* @_ZN4base23DiscardableSharedMemoryD2Ev to i8*), i8* bitcast (void (%"class.base::DiscardableSharedMemory"*)* @_ZN4base23DiscardableSharedMemoryD0Ev to i8*), i8* bitcast (i64 (%"class.base::DiscardableSharedMemory"*)* @_ZNK4base23DiscardableSharedMemory3NowEv to i8*)] }, align 8
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"hash\00", align 1

@_ZN4base23DiscardableSharedMemoryC1Ev = hidden unnamed_addr alias void (%"class.base::DiscardableSharedMemory"*), void (%"class.base::DiscardableSharedMemory"*)* @_ZN4base23DiscardableSharedMemoryC2Ev
@_ZN4base23DiscardableSharedMemoryC1ENS_24UnsafeSharedMemoryRegionE = hidden unnamed_addr alias void (%"class.base::DiscardableSharedMemory"*, %"class.base::UnsafeSharedMemoryRegion"*), void (%"class.base::DiscardableSharedMemory"*, %"class.base::UnsafeSharedMemoryRegion"*)* @_ZN4base23DiscardableSharedMemoryC2ENS_24UnsafeSharedMemoryRegionE
@_ZN4base23DiscardableSharedMemoryD1Ev = hidden unnamed_addr alias void (%"class.base::DiscardableSharedMemory"*), void (%"class.base::DiscardableSharedMemory"*)* @_ZN4base23DiscardableSharedMemoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemoryC2Ev(%"class.base::DiscardableSharedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base23DiscardableSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  tail call void @_ZN4base24UnsafeSharedMemoryRegionC1Ev(%"class.base::UnsafeSharedMemoryRegion"* %3) #7
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %4) #7
  %5 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN4base24UnsafeSharedMemoryRegionC1Ev(%"class.base::UnsafeSharedMemoryRegion"*) unnamed_addr #1

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemoryC2ENS_24UnsafeSharedMemoryRegionE(%"class.base::DiscardableSharedMemory"*, %"class.base::UnsafeSharedMemoryRegion"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base23DiscardableSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  tail call void @_ZN4base24UnsafeSharedMemoryRegionC1EOS0_(%"class.base::UnsafeSharedMemoryRegion"* %4, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64) %1) #7
  %5 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %5) #7
  %6 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN4base24UnsafeSharedMemoryRegionC1EOS0_(%"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemoryD2Ev(%"class.base::DiscardableSharedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base23DiscardableSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #7
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  tail call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemoryD0Ev(%"class.base::DiscardableSharedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base23DiscardableSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #7
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  tail call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* %4) #7
  %5 = bitcast %"class.base::DiscardableSharedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base23DiscardableSharedMemory12CreateAndMapEm(%"class.base::DiscardableSharedMemory"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::UnsafeSharedMemoryRegion", align 8
  %4 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %5 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %6 = add i64 %5, 7
  %7 = sub i64 0, %5
  %8 = and i64 %6, %7
  %9 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1, i64 %8) #7
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %45, label %11

11:                                               ; preds = %2
  %12 = extractvalue { i64, i1 } %9, 0
  %13 = bitcast %"class.base::UnsafeSharedMemoryRegion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #7
  call void @_ZN4base24UnsafeSharedMemoryRegion6CreateEm(%"class.base::UnsafeSharedMemoryRegion"* nonnull sret %3, i64 %12) #7
  %14 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  %15 = call dereferenceable(64) %"class.base::UnsafeSharedMemoryRegion"* @_ZN4base24UnsafeSharedMemoryRegionaSEOS0_(%"class.base::UnsafeSharedMemoryRegion"* %14, %"class.base::UnsafeSharedMemoryRegion"* nonnull dereferenceable(64) %3) #7
  call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #7
  %16 = call zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"* %14) #7
  br i1 %16, label %17, label %45

17:                                               ; preds = %11
  %18 = bitcast %"class.base::WritableSharedMemoryMapping"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #7
  call void @_ZNK4base24UnsafeSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* nonnull sret %4, %"class.base::UnsafeSharedMemoryRegion"* %14) #7
  %19 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2
  %20 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %19, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %4) #7
  %21 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %4, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #7
  %22 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = call i64 @_ZN4base11GetPageSizeEv() #7
  %29 = add i64 %28, 7
  %30 = sub i64 0, %28
  %31 = and i64 %29, %30
  %32 = sub i64 %27, %31
  %33 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  store i64 %32, i64* %33, align 8
  %34 = call i64 @_ZN4base11GetPageSizeEv() #7
  %35 = add i64 %34, -1
  %36 = add i64 %35, %32
  %37 = sub i64 0, %34
  %38 = and i64 %36, %37
  %39 = call i64 @_ZN4base11GetPageSizeEv() #7
  %40 = udiv i64 %38, %39
  %41 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 4
  store i64 %40, i64* %41, align 8
  %42 = bitcast i8** %22 to %"struct.base::(anonymous namespace)::SharedState"**
  %43 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %42, align 8
  %44 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %43, i64 0, i32 0, i32 0
  store atomic volatile i64 1, i64* %44 release, align 8
  br label %45

45:                                               ; preds = %17, %2, %11, %25
  %46 = phi i1 [ true, %25 ], [ false, %2 ], [ false, %11 ], [ false, %17 ]
  ret i1 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4base24UnsafeSharedMemoryRegion6CreateEm(%"class.base::UnsafeSharedMemoryRegion"* sret, i64) local_unnamed_addr #1

declare dereferenceable(64) %"class.base::UnsafeSharedMemoryRegion"* @_ZN4base24UnsafeSharedMemoryRegionaSEOS0_(%"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #1

declare void @_ZNK4base24UnsafeSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #2

declare i64 @_ZN4base11GetPageSizeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base23DiscardableSharedMemory3MapEm(%"class.base::DiscardableSharedMemory"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %37

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2
  %9 = bitcast %"class.base::WritableSharedMemoryMapping"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  %11 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %12 = add i64 %11, 7
  %13 = sub i64 0, %11
  %14 = and i64 %12, %13
  %15 = add i64 %14, %1
  call void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* nonnull sret %3, %"class.base::UnsafeSharedMemoryRegion"* %10, i64 0, i64 %15) #7
  %16 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %8, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %3) #7
  %17 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %3, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #7
  %18 = load i8*, i8** %4, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = call i64 @_ZN4base11GetPageSizeEv() #7
  %24 = add i64 %23, 7
  %25 = sub i64 0, %23
  %26 = and i64 %24, %25
  %27 = sub i64 %22, %26
  %28 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN4base11GetPageSizeEv() #7
  %30 = add i64 %29, -1
  %31 = add i64 %30, %27
  %32 = sub i64 0, %29
  %33 = and i64 %31, %32
  %34 = call i64 @_ZN4base11GetPageSizeEv() #7
  %35 = udiv i64 %33, %34
  %36 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 4
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %7, %2, %20
  %38 = phi i1 [ true, %20 ], [ false, %2 ], [ false, %7 ]
  ret i1 %38
}

declare void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::UnsafeSharedMemoryRegion"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base23DiscardableSharedMemory5UnmapEv(%"class.base::DiscardableSharedMemory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2
  %8 = bitcast %"class.base::WritableSharedMemoryMapping"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #7
  call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* nonnull %2) #7
  %9 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %7, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %2) #7
  %10 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %2, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #7
  %11 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %12 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i1 [ true, %6 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base23DiscardableSharedMemory4LockEmm(%"class.base::DiscardableSharedMemory"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = shl i64 %9, 1
  %13 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i8** %13 to %"struct.base::(anonymous namespace)::SharedState"**
  %15 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %14, align 8
  %16 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %15, i64 0, i32 0, i32 0
  %17 = cmpxchg volatile i64* %16, i64 %12, i64 1 acquire acquire
  %18 = extractvalue { i64, i1 } %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = lshr i64 %20, 1
  store i64 %21, i64* %8, align 8
  br label %42

22:                                               ; preds = %11, %3
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %28 = add i64 %26, -1
  %29 = add i64 %28, %27
  %30 = sub i64 0, %27
  %31 = and i64 %29, %30
  %32 = sub i64 %31, %1
  br label %33

33:                                               ; preds = %22, %24
  %34 = phi i64 [ %2, %22 ], [ %32, %24 ]
  %35 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %36 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %37 = udiv i64 %34, %36
  %38 = load i64, i64* %4, align 8
  %39 = add i64 %38, %37
  store i64 %39, i64* %4, align 8
  %40 = icmp eq i64 %34, 0
  %41 = zext i1 %40 to i32
  br label %42

42:                                               ; preds = %19, %7, %33
  %43 = phi i32 [ %41, %33 ], [ 2, %7 ], [ 2, %19 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemory6UnlockEmm(%"class.base::DiscardableSharedMemory"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %9 = add i64 %7, -1
  %10 = add i64 %9, %8
  %11 = sub i64 0, %8
  %12 = and i64 %10, %11
  %13 = sub i64 %12, %1
  br label %14

14:                                               ; preds = %3, %5
  %15 = phi i64 [ %2, %3 ], [ %13, %5 ]
  %16 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %17 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %18 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %19 = udiv i64 %15, %18
  %20 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  store i64 %22, i64* %20, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %14
  %25 = bitcast %"class.base::DiscardableSharedMemory"* %0 to i64 (%"class.base::DiscardableSharedMemory"*)***
  %26 = load i64 (%"class.base::DiscardableSharedMemory"*)**, i64 (%"class.base::DiscardableSharedMemory"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::DiscardableSharedMemory"*)*, i64 (%"class.base::DiscardableSharedMemory"*)** %26, i64 2
  %28 = load i64 (%"class.base::DiscardableSharedMemory"*)*, i64 (%"class.base::DiscardableSharedMemory"*)** %27, align 8
  %29 = tail call i64 %28(%"class.base::DiscardableSharedMemory"* %0) #7
  %30 = shl i64 %29, 1
  %31 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast i8** %31 to %"struct.base::(anonymous namespace)::SharedState"**
  %33 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %32, align 8
  %34 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %33, i64 0, i32 0, i32 0
  %35 = cmpxchg volatile i64* %34, i64 1, i64 %30 release monotonic
  %36 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %29, i64* %36, align 8
  br label %37

37:                                               ; preds = %14, %24
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemory11UnlockPagesERKNS_24UnsafeSharedMemoryRegionEmm(%"class.base::UnsafeSharedMemoryRegion"* nocapture dereferenceable(64), i64, i64) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK4base23DiscardableSharedMemory6memoryEv(%"class.base::DiscardableSharedMemory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %5 = add i64 %4, 7
  %6 = sub i64 0, %4
  %7 = and i64 %5, %6
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base23DiscardableSharedMemory5PurgeENS_4TimeE(%"class.base::DiscardableSharedMemory"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %4, 1
  %6 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast i8** %6 to %"struct.base::(anonymous namespace)::SharedState"**
  %8 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %7, align 8
  %9 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %8, i64 0, i32 0, i32 0
  %10 = cmpxchg volatile i64* %9, i64 %5, i64 0 acquire acquire
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = and i64 %11, 1
  %15 = icmp eq i64 %14, 0
  %16 = lshr i64 %11, 1
  %17 = select i1 %15, i64 %16, i64 %1
  br label %33

18:                                               ; preds = %2
  %19 = load i8*, i8** %6, align 8
  %20 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %21 = add i64 %20, 7
  %22 = sub i64 0, %20
  %23 = and i64 %21, %22
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  %25 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64 @_ZN4base11GetPageSizeEv() #7
  %28 = add i64 %26, -1
  %29 = add i64 %28, %27
  %30 = sub i64 0, %27
  %31 = and i64 %29, %30
  %32 = tail call i32 @madvise(i8* %24, i64 %31, i32 9) #7
  br label %33

33:                                               ; preds = %18, %13
  %34 = phi i64 [ %17, %13 ], [ 0, %18 ]
  %35 = phi i1 [ false, %13 ], [ true, %18 ]
  store i64 %34, i64* %3, align 8
  ret i1 %35
}

; Function Attrs: nounwind
declare i32 @madvise(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemory23ReleaseMemoryIfPossibleEmm(%"class.base::DiscardableSharedMemory"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 %1
  %7 = tail call i32 @madvise(i8* %6, i64 %2, i32 9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base23DiscardableSharedMemory16IsMemoryResidentEv(%"class.base::DiscardableSharedMemory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::(anonymous namespace)::SharedState"**
  %4 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %4, i64 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base23DiscardableSharedMemory14IsMemoryLockedEv(%"class.base::DiscardableSharedMemory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::(anonymous namespace)::SharedState"**
  %4 = load %"struct.base::(anonymous namespace)::SharedState"*, %"struct.base::(anonymous namespace)::SharedState"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::(anonymous namespace)::SharedState", %"struct.base::(anonymous namespace)::SharedState"* %4, i64 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = and i64 %6, 1
  %8 = icmp ne i64 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base23DiscardableSharedMemory5CloseEv(%"class.base::DiscardableSharedMemory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::UnsafeSharedMemoryRegion", align 8
  %3 = bitcast %"class.base::UnsafeSharedMemoryRegion"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #7
  call void @_ZN4base24UnsafeSharedMemoryRegionC1Ev(%"class.base::UnsafeSharedMemoryRegion"* nonnull %2) #7
  %4 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 1
  %5 = call dereferenceable(64) %"class.base::UnsafeSharedMemoryRegion"* @_ZN4base24UnsafeSharedMemoryRegionaSEOS0_(%"class.base::UnsafeSharedMemoryRegion"* %4, %"class.base::UnsafeSharedMemoryRegion"* nonnull dereferenceable(64) %2) #7
  call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base23DiscardableSharedMemory31CreateSharedMemoryOwnershipEdgeEPNS_11trace_event19MemoryAllocatorDumpEPNS1_17ProcessMemoryDumpEb(%"class.base::DiscardableSharedMemory"*, %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::ProcessMemoryDump"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::UnguessableToken", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0
  %8 = tail call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base19SharedMemoryTracker27GetOrCreateSharedMemoryDumpERKNS_19SharedMemoryMappingEPNS_11trace_event17ProcessMemoryDumpE(%"class.base::SharedMemoryMapping"* dereferenceable(48) %7, %"class.base::trace_event::ProcessMemoryDump"* %2) #7
  %9 = tail call i64 @_ZNK4base11trace_event19MemoryAllocatorDump15GetSizeInternalEv(%"class.base::trace_event::MemoryAllocatorDump"* %8) #7
  tail call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %9) #7
  %10 = select i1 %3, i32 2, i32 0
  %11 = bitcast %"class.base::UnguessableToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.base::DiscardableSharedMemory", %"class.base::DiscardableSharedMemory"* %0, i64 0, i32 2, i32 0, i32 4
  %13 = bitcast %"class.base::UnguessableToken"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %5, i64 0, i32 0
  call void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.base::Token"* nonnull %15) #7
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddStringEPKcS3_RKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.base::trace_event::MemoryAllocatorDump"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #8
  br label %23

23:                                               ; preds = %4, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  %24 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %1, i64 0, i32 1
  br i1 %3, label %25, label %26

25:                                               ; preds = %23
  call void @_ZN4base11trace_event17ProcessMemoryDump35CreateWeakSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %24, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %5, i32 %10) #7
  br label %27

26:                                               ; preds = %23
  call void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %24, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %5, i32 %10) #7
  br label %27

27:                                               ; preds = %26, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base19SharedMemoryTracker27GetOrCreateSharedMemoryDumpERKNS_19SharedMemoryMappingEPNS_11trace_event17ProcessMemoryDumpE(%"class.base::SharedMemoryMapping"* dereferenceable(48), %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #1

declare i64 @_ZNK4base11trace_event19MemoryAllocatorDump15GetSizeInternalEv(%"class.base::trace_event::MemoryAllocatorDump"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddStringEPKcS3_RKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump35CreateWeakSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4base23DiscardableSharedMemory9LockPagesERKNS_24UnsafeSharedMemoryRegionEmm(%"class.base::UnsafeSharedMemoryRegion"* nocapture readnone dereferenceable(64), i64, i64) local_unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base23DiscardableSharedMemory3NowEv(%"class.base::DiscardableSharedMemory"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base4Time3NowEv() #7
  ret i64 %2
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

declare void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Token"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
