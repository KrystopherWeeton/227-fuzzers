; ModuleID = '../../components/webcrypto/algorithm_registry.cc'
source_filename = "../../components/webcrypto/algorithm_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [120 x i8] }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.webcrypto::(anonymous namespace)::AlgorithmRegistry" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webcrypto::AlgorithmImplementation"* }

@_ZN9webcrypto20g_algorithm_registryE = internal global %"class.base::LazyInstance" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto26GetAlgorithmImplementationEN5blink20WebCryptoAlgorithmIdEPPKNS_23AlgorithmImplementationE(%"class.webcrypto::Status"* noalias sret, i32, %"class.webcrypto::AlgorithmImplementation"** nocapture) local_unnamed_addr #0 {
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 0)) #2
  br i1 %7, label %8, label %24

8:                                                ; preds = %6
  %9 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto23CreateShaImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %9, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 0) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %10 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesGcmImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %10, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 8) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %11 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesCbcImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %11, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 16) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %12 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesCtrImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %12, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 24) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %13 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto25CreateAesKwImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %13, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 32) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %14 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateHmacImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %14, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 40) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %15 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateRsaSsaImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %15, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 48) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %16 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto27CreateRsaOaepImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %16, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 56) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %17 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateRsaPssImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %17, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 64) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %18 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto25CreateEcdsaImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %18, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 72) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %19 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateEcdhImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %19, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 80) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %20 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateHkdfImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %20, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 88) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %21 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreatePbkdf2ImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %21, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 96) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %22 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto27CreateEd25519ImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %22, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 104) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  %23 = tail call %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateX25519ImplementationEv() #2
  store %"class.webcrypto::AlgorithmImplementation"* %23, %"class.webcrypto::AlgorithmImplementation"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 112) to %"class.webcrypto::AlgorithmImplementation"**), align 8
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #2
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE to i8*)) #2
  br label %26

24:                                               ; preds = %6
  %25 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 0) acquire, align 8
  br label %26

26:                                               ; preds = %3, %8, %24
  %27 = phi i64 [ %4, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN9webcrypto20g_algorithm_registryE, i64 0, i32 1, i64 0) to i64), %8 ], [ %25, %24 ]
  %28 = inttoptr i64 %27 to %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"*
  switch i32 %1, label %29 [
    i32 3, label %30
    i32 4, label %30
    i32 5, label %30
    i32 6, label %30
    i32 7, label %32
    i32 0, label %34
    i32 9, label %36
    i32 10, label %38
    i32 1, label %40
    i32 2, label %42
    i32 8, label %44
    i32 11, label %46
    i32 12, label %48
    i32 13, label %50
    i32 14, label %52
    i32 15, label %54
    i32 16, label %56
    i32 17, label %58
  ]

29:                                               ; preds = %26
  store %"class.webcrypto::AlgorithmImplementation"* null, %"class.webcrypto::AlgorithmImplementation"** %2, align 8
  br label %65

30:                                               ; preds = %26, %26, %26, %26
  %31 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %60

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %60

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %60

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %60

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %60

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %60

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %60

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 7, i32 0, i32 0, i32 0
  br label %60

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %60

48:                                               ; preds = %26
  %49 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 9, i32 0, i32 0, i32 0
  br label %60

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 10, i32 0, i32 0, i32 0
  br label %60

52:                                               ; preds = %26
  %53 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 11, i32 0, i32 0, i32 0
  br label %60

54:                                               ; preds = %26
  %55 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %60

56:                                               ; preds = %26
  %57 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %60

58:                                               ; preds = %26
  %59 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry", %"class.webcrypto::(anonymous namespace)::AlgorithmRegistry"* %28, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %60

60:                                               ; preds = %30, %32, %34, %36, %38, %40, %42, %44, %46, %48, %50, %52, %54, %56, %58
  %61 = phi %"class.webcrypto::AlgorithmImplementation"** [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ %49, %48 ], [ %47, %46 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ], [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ]
  %62 = load %"class.webcrypto::AlgorithmImplementation"*, %"class.webcrypto::AlgorithmImplementation"** %61, align 8
  store %"class.webcrypto::AlgorithmImplementation"* %62, %"class.webcrypto::AlgorithmImplementation"** %2, align 8
  %63 = icmp eq %"class.webcrypto::AlgorithmImplementation"* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #2
  br label %66

65:                                               ; preds = %29, %60
  tail call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #2
  br label %66

66:                                               ; preds = %65, %64
  ret void
}

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

declare void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto23CreateShaImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesGcmImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesCbcImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesCtrImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto25CreateAesKwImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateHmacImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateRsaSsaImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto27CreateRsaOaepImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateRsaPssImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto25CreateEcdsaImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateEcdhImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateHkdfImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreatePbkdf2ImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto27CreateEd25519ImplementationEv() local_unnamed_addr #1

declare %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateX25519ImplementationEv() local_unnamed_addr #1

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
