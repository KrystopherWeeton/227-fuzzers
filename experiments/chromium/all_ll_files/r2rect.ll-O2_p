; ModuleID = '../../third_party/s2cellid/src/s2/r2rect.cc'
source_filename = "../../third_party/s2cellid/src/s2/r2rect.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.R2Rect = type { [2 x %class.R1Interval] }
%class.R1Interval = type { %class.Vector2 }
%class.Vector2 = type { [2 x double] }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [4 x i8] c"[Lo\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c", Hi\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.4 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [3 x i8] c", \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6R2Rect14FromCenterSizeERK7Vector2IdES3_(%class.R2Rect* noalias nocapture sret, %class.Vector2* nocapture readonly dereferenceable(16), %class.Vector2* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.Vector2* %1 to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8
  %6 = bitcast %class.Vector2* %2 to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %8 = fmul <2 x double> %7, <double 5.000000e-01, double 5.000000e-01>
  %9 = extractelement <2 x double> %5, i32 0
  %10 = extractelement <2 x double> %8, i32 0
  %11 = fsub double %9, %10
  %12 = fadd <2 x double> %5, %8
  %13 = fsub <2 x double> %5, %8
  %14 = shufflevector <2 x double> %12, <2 x double> %13, <2 x i32> <i32 0, i32 3>
  %15 = extractelement <2 x double> %5, i32 1
  %16 = extractelement <2 x double> %8, i32 1
  %17 = fadd double %15, %16
  %18 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %20 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  store double %11, double* %18, align 8
  %21 = bitcast double* %19 to <2 x double>*
  store <2 x double> %14, <2 x double>* %21, align 8
  store double %17, double* %20, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6R2Rect13FromPointPairERK7Vector2IdES3_(%class.R2Rect* noalias nocapture sret, %class.Vector2* nocapture readonly dereferenceable(16), %class.Vector2* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.Vector2, %class.Vector2* %2, i64 0, i32 0, i64 0
  %7 = load double, double* %6, align 8
  %8 = fcmp ugt double %5, %7
  %9 = select i1 %8, double %5, double %7
  %10 = select i1 %8, double %7, double %5
  %11 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 1
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %class.Vector2, %class.Vector2* %2, i64 0, i32 0, i64 1
  %14 = load double, double* %13, align 8
  %15 = fcmp ugt double %12, %14
  %16 = select i1 %15, double %12, double %14
  %17 = select i1 %15, double %14, double %12
  %18 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %20 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %21 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  store double %10, double* %18, align 8
  store double %9, double* %19, align 8
  store double %17, double* %20, align 8
  store double %16, double* %21, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6R2Rect8ContainsERKS_(%class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %6 = load double, double* %5, align 8
  %7 = fcmp ogt double %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %10 = load double, double* %9, align 8
  %11 = fcmp ult double %4, %10
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %14 = load double, double* %13, align 8
  %15 = fcmp ugt double %6, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %12, %2
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %20 = load double, double* %19, align 8
  %21 = fcmp ogt double %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %24 = load double, double* %23, align 8
  %25 = fcmp ult double %18, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %28 = load double, double* %27, align 8
  %29 = fcmp ole double %20, %28
  br label %30

30:                                               ; preds = %12, %8, %26, %22, %16
  %31 = phi i1 [ false, %12 ], [ true, %16 ], [ false, %22 ], [ %29, %26 ], [ false, %8 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6R2Rect16InteriorContainsERKS_(%class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %6 = load double, double* %5, align 8
  %7 = fcmp ogt double %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %10 = load double, double* %9, align 8
  %11 = fcmp ogt double %4, %10
  br i1 %11, label %12, label %30

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %14 = load double, double* %13, align 8
  %15 = fcmp olt double %6, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %20 = load double, double* %19, align 8
  %21 = fcmp ogt double %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %24 = load double, double* %23, align 8
  %25 = fcmp ogt double %18, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %28 = load double, double* %27, align 8
  %29 = fcmp olt double %20, %28
  br label %30

30:                                               ; preds = %8, %26, %22, %16, %12
  %31 = phi i1 [ false, %12 ], [ true, %16 ], [ false, %22 ], [ %29, %26 ], [ false, %8 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6R2Rect10IntersectsERKS_(%class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %6 = load double, double* %5, align 8
  %7 = fcmp ugt double %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %10 = load double, double* %9, align 8
  %11 = fcmp ugt double %6, %10
  br i1 %11, label %46, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %14 = load double, double* %13, align 8
  %15 = fcmp ugt double %6, %14
  br i1 %15, label %46, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %18 = load double, double* %17, align 8
  %19 = fcmp ugt double %4, %18
  br i1 %19, label %46, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %22 = load double, double* %21, align 8
  %23 = fcmp ugt double %4, %22
  br i1 %23, label %46, label %24

24:                                               ; preds = %20, %12
  %25 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %28 = load double, double* %27, align 8
  %29 = fcmp ugt double %26, %28
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %32 = load double, double* %31, align 8
  %33 = fcmp ugt double %28, %32
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %36 = load double, double* %35, align 8
  %37 = fcmp ole double %28, %36
  br label %46

38:                                               ; preds = %24
  %39 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %40 = load double, double* %39, align 8
  %41 = fcmp ugt double %26, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %44 = load double, double* %43, align 8
  %45 = fcmp ole double %26, %44
  br label %46

46:                                               ; preds = %20, %12, %16, %8, %42, %38, %34, %30
  %47 = phi i1 [ false, %20 ], [ false, %12 ], [ false, %30 ], [ %37, %34 ], [ false, %38 ], [ %45, %42 ], [ false, %8 ], [ false, %16 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6R2Rect18InteriorIntersectsERKS_(%class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %6 = load double, double* %5, align 8
  %7 = fcmp olt double %4, %6
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %12 = load double, double* %11, align 8
  %13 = fcmp olt double %10, %12
  %14 = fcmp olt double %10, %6
  %15 = and i1 %14, %13
  %16 = fcmp ole double %4, %12
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %34

18:                                               ; preds = %8
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %22 = load double, double* %21, align 8
  %23 = fcmp olt double %20, %22
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %28 = load double, double* %27, align 8
  %29 = fcmp olt double %26, %28
  %30 = fcmp olt double %26, %22
  %31 = and i1 %30, %29
  %32 = fcmp ole double %20, %28
  %33 = and i1 %32, %31
  br label %34

34:                                               ; preds = %2, %24, %18, %8
  %35 = phi i1 [ false, %8 ], [ %33, %24 ], [ false, %18 ], [ false, %2 ]
  ret i1 %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6R2Rect8AddPointERK7Vector2IdE(%class.R2Rect* nocapture, %class.Vector2* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %6 = load double, double* %5, align 8
  %7 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %8 = load double, double* %7, align 8
  %9 = fcmp ogt double %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store double %4, double* %5, align 8
  br label %15

11:                                               ; preds = %2
  %12 = fcmp ogt double %6, %4
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = fcmp olt double %8, %4
  br i1 %14, label %15, label %17

15:                                               ; preds = %13, %11, %10
  %16 = phi double* [ %7, %10 ], [ %5, %11 ], [ %7, %13 ]
  store double %4, double* %16, align 8
  br label %17

17:                                               ; preds = %15, %13
  %18 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 1
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %23 = load double, double* %22, align 8
  %24 = fcmp ogt double %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  store double %19, double* %20, align 8
  br label %30

26:                                               ; preds = %17
  %27 = fcmp ogt double %21, %19
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = fcmp olt double %23, %19
  br i1 %29, label %30, label %32

30:                                               ; preds = %28, %26, %25
  %31 = phi double* [ %22, %25 ], [ %20, %26 ], [ %22, %28 ]
  store double %19, double* %31, align 8
  br label %32

32:                                               ; preds = %30, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6R2Rect7AddRectERKS_(%class.R2Rect* nocapture, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %6 = load double, double* %5, align 8
  %7 = fcmp ogt double %4, %6
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %12 = load double, double* %11, align 8
  %13 = fcmp ogt double %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = bitcast %class.R2Rect* %0 to i8*
  %16 = bitcast %class.R2Rect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false) #10
  br label %25

17:                                               ; preds = %8
  %18 = fcmp olt double %4, %10
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  store double %4, double* %9, align 8
  %20 = load double, double* %5, align 8
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi double [ %20, %19 ], [ %6, %17 ]
  %23 = fcmp ogt double %22, %12
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store double %22, double* %11, align 8
  br label %25

25:                                               ; preds = %2, %14, %21, %24
  %26 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1
  %27 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1
  %28 = getelementptr inbounds %class.R1Interval, %class.R1Interval* %27, i64 0, i32 0, i32 0, i64 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %31 = load double, double* %30, align 8
  %32 = fcmp ogt double %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.R1Interval, %class.R1Interval* %26, i64 0, i32 0, i32 0, i64 0
  %35 = load double, double* %34, align 8
  %36 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %37 = load double, double* %36, align 8
  %38 = fcmp ogt double %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = bitcast %class.R1Interval* %26 to i8*
  %41 = bitcast %class.R1Interval* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #10
  br label %50

42:                                               ; preds = %33
  %43 = fcmp olt double %29, %35
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  store double %29, double* %34, align 8
  %45 = load double, double* %30, align 8
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi double [ %45, %44 ], [ %31, %42 ]
  %48 = fcmp ogt double %47, %37
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store double %47, double* %36, align 8
  br label %50

50:                                               ; preds = %25, %39, %46, %49
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { double, double } @_ZNK6R2Rect7ProjectERK7Vector2IdE(%class.R2Rect* nocapture readonly, %class.Vector2* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %6 = load double, double* %5, align 8
  %7 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %8 = load double, double* %7, align 8
  %9 = fcmp ogt double %8, %4
  %10 = select i1 %9, double %4, double %8
  %11 = fcmp olt double %6, %10
  %12 = select i1 %11, double %10, double %6
  %13 = getelementptr inbounds %class.Vector2, %class.Vector2* %1, i64 0, i32 0, i64 1
  %14 = load double, double* %13, align 8
  %15 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %18 = load double, double* %17, align 8
  %19 = fcmp ogt double %18, %14
  %20 = select i1 %19, double %14, double %18
  %21 = fcmp olt double %16, %20
  %22 = select i1 %21, double %20, double %16
  %23 = insertvalue { double, double } undef, double %12, 0
  %24 = insertvalue { double, double } %23, double %22, 1
  ret { double, double } %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6R2Rect8ExpandedERK7Vector2IdE(%class.R2Rect* noalias nocapture sret, %class.R2Rect* nocapture readonly, %class.Vector2* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.Vector2, %class.Vector2* %2, i64 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %9 = load double, double* %8, align 8
  %10 = fcmp ogt double %7, %9
  %11 = fsub double %7, %5
  %12 = fadd double %5, %9
  %13 = select i1 %10, double %9, double %12
  %14 = select i1 %10, double %7, double %11
  %15 = getelementptr inbounds %class.Vector2, %class.Vector2* %2, i64 0, i32 0, i64 1
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %20 = load double, double* %19, align 8
  %21 = fcmp ogt double %18, %20
  %22 = fsub double %18, %16
  %23 = fadd double %16, %20
  %24 = select i1 %21, double %20, double %23
  %25 = select i1 %21, double %18, double %22
  %26 = fcmp ogt double %14, %13
  %27 = fcmp ogt double %25, %24
  %28 = or i1 %26, %27
  %29 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %31 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %33 = select i1 %28, double 1.000000e+00, double %14
  %34 = select i1 %28, double 0.000000e+00, double %13
  %35 = select i1 %28, double 1.000000e+00, double %25
  %36 = select i1 %28, double 0.000000e+00, double %24
  store double %33, double* %29, align 8
  store double %34, double* %30, align 8
  store double %35, double* %31, align 8
  store double %36, double* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6R2Rect5UnionERKS_(%class.R2Rect* noalias nocapture sret, %class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %7 = load double, double* %6, align 8
  %8 = fcmp ogt double %5, %7
  %9 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %12 = load double, double* %11, align 8
  br i1 %8, label %20, label %13

13:                                               ; preds = %3
  %14 = fcmp ogt double %10, %12
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = fcmp olt double %10, %5
  %17 = select i1 %16, double %10, double %5
  %18 = fcmp olt double %7, %12
  %19 = select i1 %18, double %12, double %7
  br label %20

20:                                               ; preds = %3, %13, %15
  %21 = phi double [ %17, %15 ], [ %5, %13 ], [ %10, %3 ]
  %22 = phi double [ %19, %15 ], [ %7, %13 ], [ %12, %3 ]
  %23 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %26 = load double, double* %25, align 8
  %27 = fcmp ogt double %24, %26
  %28 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %31 = load double, double* %30, align 8
  br i1 %27, label %39, label %32

32:                                               ; preds = %20
  %33 = fcmp ogt double %29, %31
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = fcmp olt double %29, %24
  %36 = select i1 %35, double %29, double %24
  %37 = fcmp olt double %26, %31
  %38 = select i1 %37, double %31, double %26
  br label %39

39:                                               ; preds = %20, %32, %34
  %40 = phi double [ %36, %34 ], [ %24, %32 ], [ %29, %20 ]
  %41 = phi double [ %38, %34 ], [ %26, %32 ], [ %31, %20 ]
  %42 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %43 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %44 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %45 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  store double %21, double* %42, align 8
  store double %22, double* %43, align 8
  store double %40, double* %44, align 8
  store double %41, double* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6R2Rect12IntersectionERKS_(%class.R2Rect* noalias nocapture sret, %class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %7 = load double, double* %6, align 8
  %8 = fcmp olt double %5, %7
  %9 = select i1 %8, double %7, double %5
  %10 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %13 = load double, double* %12, align 8
  %14 = fcmp olt double %13, %11
  %15 = select i1 %14, double %13, double %11
  %16 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %19 = load double, double* %18, align 8
  %20 = fcmp olt double %17, %19
  %21 = select i1 %20, double %19, double %17
  %22 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %2, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %25 = load double, double* %24, align 8
  %26 = fcmp olt double %25, %23
  %27 = select i1 %26, double %25, double %23
  %28 = fcmp ogt double %9, %15
  %29 = fcmp ogt double %21, %27
  %30 = or i1 %28, %29
  %31 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %33 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %34 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %35 = select i1 %30, double 1.000000e+00, double %9
  %36 = select i1 %30, double 0.000000e+00, double %15
  %37 = select i1 %30, double 1.000000e+00, double %21
  %38 = select i1 %30, double 0.000000e+00, double %27
  store double %35, double* %31, align 8
  store double %36, double* %32, align 8
  store double %37, double* %33, align 8
  store double %38, double* %34, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6R2Rect12ApproxEqualsERKS_d(%class.R2Rect* nocapture readonly, %class.R2Rect* nocapture readonly dereferenceable(32), double) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %7 = load double, double* %6, align 8
  %8 = fcmp ogt double %5, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %13 = load double, double* %12, align 8
  %14 = fsub double %11, %13
  %15 = fmul double %2, 2.000000e+00
  %16 = fcmp ugt double %14, %15
  br i1 %16, label %68, label %35

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %21 = load double, double* %20, align 8
  %22 = fcmp ogt double %19, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = fsub double %7, %5
  %25 = fmul double %2, 2.000000e+00
  %26 = fcmp ugt double %24, %25
  br i1 %26, label %68, label %35

27:                                               ; preds = %17
  %28 = fsub double %19, %5
  %29 = tail call double @llvm.fabs.f64(double %28) #10
  %30 = fcmp ugt double %29, %2
  br i1 %30, label %68, label %31

31:                                               ; preds = %27
  %32 = fsub double %21, %7
  %33 = tail call double @llvm.fabs.f64(double %32) #10
  %34 = fcmp ugt double %33, %2
  br i1 %34, label %68, label %35

35:                                               ; preds = %9, %23, %31
  %36 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1
  %37 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %38 = load double, double* %37, align 8
  %39 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %40 = load double, double* %39, align 8
  %41 = fcmp ogt double %38, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %class.R1Interval, %class.R1Interval* %36, i64 0, i32 0, i32 0, i64 0
  %46 = load double, double* %45, align 8
  %47 = fsub double %44, %46
  %48 = fmul double %2, 2.000000e+00
  %49 = fcmp ole double %47, %48
  br label %68

50:                                               ; preds = %35
  %51 = getelementptr inbounds %class.R1Interval, %class.R1Interval* %36, i64 0, i32 0, i32 0, i64 0
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %54 = load double, double* %53, align 8
  %55 = fcmp ogt double %52, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = fsub double %40, %38
  %58 = fmul double %2, 2.000000e+00
  %59 = fcmp ole double %57, %58
  br label %68

60:                                               ; preds = %50
  %61 = fsub double %52, %38
  %62 = tail call double @llvm.fabs.f64(double %61) #10
  %63 = fcmp ugt double %62, %2
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = fsub double %54, %40
  %66 = tail call double @llvm.fabs.f64(double %65) #10
  %67 = fcmp ole double %66, %2
  br label %68

68:                                               ; preds = %9, %23, %31, %27, %64, %60, %56, %42
  %69 = phi i1 [ false, %31 ], [ false, %9 ], [ false, %23 ], [ %49, %42 ], [ %59, %56 ], [ false, %60 ], [ %67, %64 ], [ false, %27 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK6R2Rect(%"class.std::__1::basic_ostream"* dereferenceable(160), %class.R2Rect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #10
  %4 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %7 = load double, double* %6, align 8
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #10
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %3, double %5) #10
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #10
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %3, double %7) #10
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #10
  %15 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %18 = load double, double* %17, align 8
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #10
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %14, double %16) #10
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #10
  %23 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %14, double %18) #10
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  %25 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  ret %"class.std::__1::basic_ostream"* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
