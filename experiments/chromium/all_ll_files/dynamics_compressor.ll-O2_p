; ModuleID = '../../third_party/blink/renderer/platform/audio/dynamics_compressor.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/dynamics_compressor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DynamicsCompressor" = type { i32, [16 x float], float, float, float, float, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.blink::DynamicsCompressorKernel" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { float** }
%"class.blink::DynamicsCompressorKernel" = type { float, float, float, float, float, i32, %"class.WTF::Vector", i32, i32, float, float, float, float, float, float, float, float, float, float }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.7"*, i32, i32 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted", i32, %"class.WTF::Vector.14", i32, float }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16", [64 x i8] }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.7", i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink18DynamicsCompressorC1Efj = hidden unnamed_addr alias void (%"class.blink::DynamicsCompressor"*, float, i32), void (%"class.blink::DynamicsCompressor"*, float, i32)* @_ZN5blink18DynamicsCompressorC2Efj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DynamicsCompressorC2Efj(%"class.blink::DynamicsCompressor"*, float, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 0
  store i32 %2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 2
  store float %1, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 6
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %8 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 7
  %9 = bitcast %"class.std::__1::unique_ptr.1"* %8 to i64*
  %10 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink24DynamicsCompressorKernelC1Efj(%"class.blink::DynamicsCompressorKernel"* %10, float %1, i32 %2) #9
  %12 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 3
  store float -1.000000e+00, float* %12, align 8
  %13 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 4
  store float -1.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 5
  store float -1.000000e+00, float* %14, align 8
  %15 = zext i32 %2 to i64
  %16 = shl nuw nsw i64 %15, 3
  %17 = tail call i8* @_Znam(i64 %16) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 %16, i1 false) #9
  %18 = ptrtoint i8* %17 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = load float**, float*** %19, align 8
  store i64 %18, i64* %7, align 8
  %21 = icmp eq float** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = bitcast float** %20 to i8*
  tail call void @_ZdaPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %3
  %25 = tail call i8* @_Znam(i64 %16) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 %16, i1 false) #9
  %26 = ptrtoint i8* %25 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load float**, float*** %27, align 8
  store i64 %26, i64* %9, align 8
  %29 = icmp eq float** %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast float** %28 to i8*
  tail call void @_ZdaPv(i8* %31) #10
  br label %32

32:                                               ; preds = %24, %30
  tail call void @_ZN5blink24DynamicsCompressorKernel19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressorKernel"* %10, i32 %2) #9
  store i32 %2, i32* %4, align 8
  %33 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 0
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> <float -2.400000e+01, float 3.000000e+01, float 1.200000e+01, float 0x3F689374C0000000>, <4 x float>* %34, align 4
  %35 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 2.500000e-01, float 0x3F789374C0000000, float 0x3FB70A3D80000000, float 0x3FC47AE140000000>, <4 x float>* %36, align 4
  %37 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 8
  %38 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 12
  store float 2.000000e+00, float* %38, align 4
  %39 = load float, float* %5, align 4
  %40 = fmul float %39, 5.000000e-01
  %41 = fdiv float 1.500000e+04, %40
  %42 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 13
  store float %41, float* %42, align 4
  %43 = bitcast float* %37 to <4 x float>*
  store <4 x float> <float 0x3FDAE147A0000000, float 0x3FEF5C2900000000, float 0.000000e+00, float 0x40119999A0000000>, <4 x float>* %43, align 4
  %44 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 15
  store float 0.000000e+00, float* %44, align 4
  %45 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 14
  store float 1.000000e+00, float* %45, align 4
  ret void
}

declare void @_ZN5blink24DynamicsCompressorKernelC1Efj(%"class.blink::DynamicsCompressorKernel"*, float, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DynamicsCompressor19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressor"*, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = shl nuw nsw i64 %3, 3
  %5 = tail call i8* @_Znam(i64 %4) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 %4, i1 false) #9
  %6 = ptrtoint i8* %5 to i64
  %7 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load float**, float*** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq float** %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = bitcast float** %9 to i8*
  tail call void @_ZdaPv(i8* %13) #10
  br label %14

14:                                               ; preds = %12, %2
  %15 = tail call i8* @_Znam(i64 %4) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 %4, i1 false) #9
  %16 = ptrtoint i8* %15 to i64
  %17 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load float**, float*** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.1"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq float** %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = bitcast float** %19 to i8*
  tail call void @_ZdaPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %14
  %25 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8
  tail call void @_ZN5blink24DynamicsCompressorKernel19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressorKernel"* %25, i32 %1) #9
  %26 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 0
  store i32 %1, i32* %26, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18DynamicsCompressor20InitializeParametersEv(%"class.blink::DynamicsCompressor"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 0
  %3 = bitcast float* %2 to <4 x float>*
  store <4 x float> <float -2.400000e+01, float 3.000000e+01, float 1.200000e+01, float 0x3F689374C0000000>, <4 x float>* %3, align 4
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 4
  %5 = bitcast float* %4 to <4 x float>*
  store <4 x float> <float 2.500000e-01, float 0x3F789374C0000000, float 0x3FB70A3D80000000, float 0x3FC47AE140000000>, <4 x float>* %5, align 4
  %6 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 8
  %7 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 12
  store float 2.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, 5.000000e-01
  %11 = fdiv float 1.500000e+04, %10
  %12 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 13
  store float %11, float* %12, align 4
  %13 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 0x3FDAE147A0000000, float 0x3FEF5C2900000000, float 0.000000e+00, float 0x40119999A0000000>, <4 x float>* %13, align 4
  %14 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 15
  store float 0.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 14
  store float 1.000000e+00, float* %15, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18DynamicsCompressor17SetParameterValueEjf(%"class.blink::DynamicsCompressor"* nocapture, i32, float) local_unnamed_addr #3 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 %4
  store float %2, float* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN5blink18DynamicsCompressor14ParameterValueEj(%"class.blink::DynamicsCompressor"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 %3
  %5 = load float, float* %4, align 4
  ret float %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DynamicsCompressor7ProcessEPKNS_8AudioBusEPS1_j(%"class.blink::DynamicsCompressor"*, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, 2
  br i1 %9, label %10, label %46

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %1, i64 0, i32 2
  %12 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"* %11, i32 0) #9
  %13 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %12, i64 0, i32 1
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %18, i64 0, i32 1
  %20 = load float*, float** %19, align 8
  br label %21

21:                                               ; preds = %10, %16
  %22 = phi float* [ %20, %16 ], [ %14, %10 ]
  %23 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load float**, float*** %23, align 8
  store float* %22, float** %24, align 8
  %25 = icmp ugt i32 %8, 1
  br i1 %25, label %26, label %40

26:                                               ; preds = %21
  %27 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"* %11, i32 1) #9
  %28 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %27, i64 0, i32 1
  %29 = load float*, float** %28, align 8
  %30 = icmp eq float* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %33, i64 0, i32 1
  %35 = load float*, float** %34, align 8
  br label %36

36:                                               ; preds = %26, %31
  %37 = phi float* [ %35, %31 ], [ %29, %26 ]
  %38 = load float**, float*** %23, align 8
  %39 = getelementptr inbounds float*, float** %38, i64 1
  store float* %37, float** %39, align 8
  br label %47

40:                                               ; preds = %21
  %41 = load float**, float*** %23, align 8
  %42 = bitcast float** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds float*, float** %41, i64 1
  %45 = bitcast float** %44 to i64*
  store i64 %43, i64* %45, align 8
  br label %47

46:                                               ; preds = %4
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %2) #9
  br label %112

47:                                               ; preds = %36, %40
  %48 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 2
  %49 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %50 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"* %48, i32 0) #9
  %51 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 3
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 1
  %53 = load float*, float** %52, align 8
  %54 = icmp eq float* %53, null
  br i1 %54, label %55, label %60

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %57, i64 0, i32 1
  %59 = load float*, float** %58, align 8
  br label %60

60:                                               ; preds = %47, %55
  %61 = phi float* [ %59, %55 ], [ %53, %47 ]
  %62 = load float**, float*** %49, align 8
  store float* %61, float** %62, align 8
  %63 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"* %48, i32 1) #9
  %64 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %63, i64 0, i32 3
  store i8 0, i8* %64, align 8
  %65 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %63, i64 0, i32 1
  %66 = load float*, float** %65, align 8
  %67 = icmp eq float* %66, null
  br i1 %67, label %113, label %118

68:                                               ; preds = %118
  %69 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 3
  %70 = load float, float* %69, align 8
  %71 = fcmp une float %125, %70
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 4
  %74 = load float, float* %73, align 4
  %75 = fcmp une float %127, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %72, %68, %118
  store float %123, float* %128, align 8
  %77 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 3
  store float %125, float* %77, align 8
  %78 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 4
  store float %127, float* %78, align 4
  br label %79

79:                                               ; preds = %76, %72
  %80 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 0
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 2
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 3
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 4
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 5
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 10
  %93 = load float, float* %92, align 4
  %94 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 14
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 6
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 7
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 8
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 9
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8
  %105 = load float**, float*** %23, align 8
  %106 = load float**, float*** %49, align 8
  tail call void @_ZN5blink24DynamicsCompressorKernel7ProcessEPPKfPPfjjffffffffffff(%"class.blink::DynamicsCompressorKernel"* %104, float** %105, float** %106, i32 2, i32 %3, float %81, float %83, float %85, float %87, float %89, float %91, float %93, float %95, float %97, float %99, float %101, float %103) #9
  %107 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8, i32 4
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 15
  %111 = bitcast float* %110 to i32*
  store i32 %109, i32* %111, align 4
  br label %112

112:                                              ; preds = %79, %46
  ret void

113:                                              ; preds = %60
  %114 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %115 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %115, i64 0, i32 1
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %113, %60
  %119 = phi float* [ %117, %113 ], [ %66, %60 ]
  %120 = load float**, float*** %49, align 8
  %121 = getelementptr inbounds float*, float** %120, i64 1
  store float* %119, float** %121, align 8
  %122 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 11
  %123 = load float, float* %122, align 4
  %124 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 12
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 1, i64 13
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 5
  %129 = load float, float* %128, align 8
  %130 = fcmp une float %123, %129
  br i1 %130, label %76, label %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5blink24DynamicsCompressorKernel7ProcessEPPKfPPfjjffffffffffff(%"class.blink::DynamicsCompressorKernel"*, float**, float**, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DynamicsCompressor5ResetEv(%"class.blink::DynamicsCompressor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 3
  store float -1.000000e+00, float* %2, align 8
  %3 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 4
  store float -1.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 5
  store float -1.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8
  tail call void @_ZN5blink24DynamicsCompressorKernel5ResetEv(%"class.blink::DynamicsCompressorKernel"* %5) #9
  ret void
}

declare void @_ZN5blink24DynamicsCompressorKernel5ResetEv(%"class.blink::DynamicsCompressorKernel"*) local_unnamed_addr #1

declare void @_ZN5blink24DynamicsCompressorKernel19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressorKernel"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink18DynamicsCompressor8TailTimeEv(%"class.blink::DynamicsCompressor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DynamicsCompressor", %"class.blink::DynamicsCompressor"* %0, i64 0, i32 8
  %3 = tail call double @_ZNK5blink24DynamicsCompressorKernel8TailTimeEv(%"class.blink::DynamicsCompressorKernel"* %2) #9
  ret double %3
}

declare double @_ZNK5blink24DynamicsCompressorKernel8TailTimeEv(%"class.blink::DynamicsCompressorKernel"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
