; ModuleID = '../../components/history/core/browser/url_row.cc'
source_filename = "../../components/history/core/browser/url_row.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"*, %"class.std::__1::__compressed_pair.13" }
%"struct.history::VisitContentModelAnnotations::Category" = type { i32, i32 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.history::VisitContentModelAnnotations::Category"* }
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.4", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.history::VisitContentModelAnnotations" = type { float, %"class.std::__1::vector", i64 }
%"class.history::URLResult" = type <{ %"class.history::URLRow.base", [7 x i8], %"class.base::Time", %"struct.history::VisitContentAnnotations", %"class.query_parser::Snippet", %"class.std::__1::vector.18", i8, [7 x i8] }>
%"class.history::URLRow.base" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.4", i32, i32, %"class.base::Time", i8 }>
%"struct.history::VisitContentAnnotations" = type { i64, %"struct.history::VisitContentModelAnnotations" }
%"class.query_parser::Snippet" = type { %"class.std::__1::basic_string.4", %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__14swapIN7history23VisitContentAnnotationsEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_ = comdat any

$_ZNSt3__16vectorIN7history28VisitContentModelAnnotations8CategoryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZTVN7history6URLRowE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::URLRow"*)* @_ZN7history6URLRowD2Ev to i8*), i8* bitcast (void (%"class.history::URLRow"*)* @_ZN7history6URLRowD0Ev to i8*)] }, align 8
@_ZTVN7history9URLResultE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::URLResult"*)* @_ZN7history9URLResultD2Ev to i8*), i8* bitcast (void (%"class.history::URLResult"*)* @_ZN7history9URLResultD0Ev to i8*)] }, align 8
@__const._ZNSt3__14swapIN7history23VisitContentAnnotationsEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_.__t = private unnamed_addr constant { i64, { float, [4 x i8], %"class.std::__1::vector", i64 } } { i64 -6148914691236517206, { float, [4 x i8], %"class.std::__1::vector", i64 } { float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*), %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*), %"class.std::__1::__compressed_pair.13" { %"struct.std::__1::__compressed_pair_elem.14" { %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*) } } } }, i64 -6148914691236517206 } }, align 8

@_ZN7history6URLRowC1Ev = hidden unnamed_addr alias void (%"class.history::URLRow"*), void (%"class.history::URLRow"*)* @_ZN7history6URLRowC2Ev
@_ZN7history6URLRowC1ERK4GURL = hidden unnamed_addr alias void (%"class.history::URLRow"*, %class.GURL*), void (%"class.history::URLRow"*, %class.GURL*)* @_ZN7history6URLRowC2ERK4GURL
@_ZN7history6URLRowC1ERK4GURLl = hidden unnamed_addr alias void (%"class.history::URLRow"*, %class.GURL*, i64), void (%"class.history::URLRow"*, %class.GURL*, i64)* @_ZN7history6URLRowC2ERK4GURLl
@_ZN7history6URLRowC1ERKS0_ = hidden unnamed_addr alias void (%"class.history::URLRow"*, %"class.history::URLRow"*), void (%"class.history::URLRow"*, %"class.history::URLRow"*)* @_ZN7history6URLRowC2ERKS0_
@_ZN7history6URLRowC1EOS0_ = hidden unnamed_addr alias void (%"class.history::URLRow"*, %"class.history::URLRow"*), void (%"class.history::URLRow"*, %"class.history::URLRow"*)* @_ZN7history6URLRowC2EOS0_
@_ZN7history6URLRowD1Ev = hidden unnamed_addr alias void (%"class.history::URLRow"*), void (%"class.history::URLRow"*)* @_ZN7history6URLRowD2Ev
@_ZN7history28VisitContentModelAnnotations8CategoryC1Eii = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations::Category"*, i32, i32), void (%"struct.history::VisitContentModelAnnotations::Category"*, i32, i32)* @_ZN7history28VisitContentModelAnnotations8CategoryC2Eii
@_ZN7history28VisitContentModelAnnotations8CategoryC1Ev = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations::Category"*), void (%"struct.history::VisitContentModelAnnotations::Category"*)* @_ZN7history28VisitContentModelAnnotations8CategoryC2Ev
@_ZN7history28VisitContentModelAnnotationsC1EfRKNSt3__16vectorINS0_8CategoryENS1_9allocatorIS3_EEEEl = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations"*, float, %"class.std::__1::vector"*, i64), void (%"struct.history::VisitContentModelAnnotations"*, float, %"class.std::__1::vector"*, i64)* @_ZN7history28VisitContentModelAnnotationsC2EfRKNSt3__16vectorINS0_8CategoryENS1_9allocatorIS3_EEEEl
@_ZN7history28VisitContentModelAnnotationsC1Ev = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations"*), void (%"struct.history::VisitContentModelAnnotations"*)* @_ZN7history28VisitContentModelAnnotationsC2Ev
@_ZN7history28VisitContentModelAnnotationsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations"*, %"struct.history::VisitContentModelAnnotations"*), void (%"struct.history::VisitContentModelAnnotations"*, %"struct.history::VisitContentModelAnnotations"*)* @_ZN7history28VisitContentModelAnnotationsC2ERKS0_
@_ZN7history28VisitContentModelAnnotationsD1Ev = hidden unnamed_addr alias void (%"struct.history::VisitContentModelAnnotations"*), void (%"struct.history::VisitContentModelAnnotations"*)* @_ZN7history28VisitContentModelAnnotationsD2Ev
@_ZN7history9URLResultC1Ev = hidden unnamed_addr alias void (%"class.history::URLResult"*), void (%"class.history::URLResult"*)* @_ZN7history9URLResultC2Ev
@_ZN7history9URLResultC1ERK4GURLN4base4TimeE = hidden unnamed_addr alias void (%"class.history::URLResult"*, %class.GURL*, i64), void (%"class.history::URLResult"*, %class.GURL*, i64)* @_ZN7history9URLResultC2ERK4GURLN4base4TimeE
@_ZN7history9URLResultC1ERKNS_6URLRowE = hidden unnamed_addr alias void (%"class.history::URLResult"*, %"class.history::URLRow"*), void (%"class.history::URLResult"*, %"class.history::URLRow"*)* @_ZN7history9URLResultC2ERKNS_6URLRowE
@_ZN7history9URLResultC1ERKS0_ = hidden unnamed_addr alias void (%"class.history::URLResult"*, %"class.history::URLResult"*), void (%"class.history::URLResult"*, %"class.history::URLResult"*)* @_ZN7history9URLResultC2ERKS0_
@_ZN7history9URLResultC1EOS0_ = hidden unnamed_addr alias void (%"class.history::URLResult"*, %"class.history::URLResult"*), void (%"class.history::URLResult"*, %"class.history::URLResult"*)* @_ZN7history9URLResultC2EOS0_
@_ZN7history9URLResultD1Ev = hidden unnamed_addr alias void (%"class.history::URLResult"*), void (%"class.history::URLResult"*)* @_ZN7history9URLResultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowC2Ev(%"class.history::URLRow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #12
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 41, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowC2ERK4GURL(%"class.history::URLRow"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %1) #12
  %6 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 41, i1 false)
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowC2ERK4GURLl(%"class.history::URLRow"*, %class.GURL* dereferenceable(120), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %1) #12
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 41, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowC2ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %8) #12
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %17 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #12
  br label %193

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  %26 = trunc i64 %22 to i8
  %27 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1
  br label %46

29:                                               ; preds = %18
  %30 = icmp ugt i64 %22, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::basic_string.4"* %9 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %32) #13
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %22, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  store i8* %40, i8** %42, align 8
  %43 = or i64 %35, -9223372036854775808
  %44 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %24
  %47 = phi i16* [ %25, %24 ], [ %41, %38 ]
  %48 = add nuw nsw i64 %22, 1
  %49 = add i64 %22, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %140, label %51

51:                                               ; preds = %46
  %52 = add i64 %22, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %20, i64 %52
  %55 = icmp ult i16* %47, %54
  %56 = icmp ult i16* %20, %53
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %51
  %59 = and i64 %49, -16
  %60 = sub i64 %48, %59
  %61 = getelementptr i16, i16* %20, i64 %59
  %62 = getelementptr i16, i16* %47, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %20, i64 %71
  %74 = getelementptr i16, i16* %47, i64 %71
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !2
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !5, !noalias !2
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %20, i64 %83
  %85 = getelementptr i16, i16* %47, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !2
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %20, i64 %94
  %96 = getelementptr i16, i16* %47, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !2
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %20, i64 %105
  %107 = getelementptr i16, i16* %47, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !2
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !7

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %20, i64 %123
  %126 = getelementptr i16, i16* %47, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !2
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !2
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !5, !noalias !2
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !5, !noalias !2
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !9

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %49, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %51, %46
  %141 = phi i64 [ %48, %51 ], [ %48, %46 ], [ %60, %138 ]
  %142 = phi i16* [ %20, %51 ], [ %20, %46 ], [ %61, %138 ]
  %143 = phi i16* [ %47, %51 ], [ %47, %46 ], [ %62, %138 ]
  %144 = add i64 %141, -1
  %145 = and i64 %141, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %153, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %155, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %154, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %149, align 2
  store i16 %152, i16* %150, align 2
  %153 = add i64 %148, -1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = getelementptr inbounds i16, i16* %149, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !11

158:                                              ; preds = %147, %140
  %159 = phi i64 [ %141, %140 ], [ %153, %147 ]
  %160 = phi i16* [ %142, %140 ], [ %155, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %154, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %189, %163 ], [ %159, %158 ]
  %165 = phi i16* [ %191, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %190, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %166, i64 1
  %169 = getelementptr inbounds i16, i16* %165, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 2
  %172 = getelementptr inbounds i16, i16* %165, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %166, i64 3
  %175 = getelementptr inbounds i16, i16* %165, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %166, i64 4
  %178 = getelementptr inbounds i16, i16* %165, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %166, i64 5
  %181 = getelementptr inbounds i16, i16* %165, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %166, i64 6
  %184 = getelementptr inbounds i16, i16* %165, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %166, i64 7
  %187 = getelementptr inbounds i16, i16* %165, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %164, -8
  %190 = getelementptr inbounds i16, i16* %166, i64 8
  %191 = getelementptr inbounds i16, i16* %165, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !12

193:                                              ; preds = %158, %163, %138, %15
  %194 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %195 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %196 = bitcast i32* %194 to i8*
  %197 = bitcast i32* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 17, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowC2EOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %8) #12
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %12 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %15 = bitcast i32* %13 to i8*
  %16 = bitcast i32* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowD2Ev(%"class.history::URLRow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.4"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRowD0Ev(%"class.history::URLRow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.4"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #12
  %13 = bitcast %"class.history::URLRow"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSERKS0_(%"class.history::URLRow"* returned, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #12
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %9, %"class.std::__1::basic_string.4"* dereferenceable(24) %10)
  %12 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %14 = bitcast i32* %12 to i8*
  %15 = bitcast i32* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 17, i1 false)
  ret %"class.history::URLRow"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.4"*
  %35 = icmp ugt %"class.std::__1::basic_string.4"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !13
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !13
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !16, !noalias !13
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !16, !noalias !13
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !13
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !13
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !16, !noalias !13
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !16, !noalias !13
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !13
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !13
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !16, !noalias !13
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !16, !noalias !13
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !13
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !13
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !16, !noalias !13
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !16, !noalias !13
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !18

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !13
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !16, !noalias !13
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !16, !noalias !13
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !19

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !20

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !21

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !22
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !22
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !25, !noalias !22
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !25, !noalias !22
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !22
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !22
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !25, !noalias !22
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !25, !noalias !22
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !22
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !22
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !25, !noalias !22
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !25, !noalias !22
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !22
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !22
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !25, !noalias !22
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !25, !noalias !22
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !27

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !22
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !22
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !25, !noalias !22
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !25, !noalias !22
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !28

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !29

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !30

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !31
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !31
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !34, !noalias !31
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !34, !noalias !31
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !31
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !31
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !34, !noalias !31
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !34, !noalias !31
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !31
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !31
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !34, !noalias !31
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !34, !noalias !31
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !31
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !31
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !34, !noalias !31
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !34, !noalias !31
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !36

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !31
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !31
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !34, !noalias !31
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !34, !noalias !31
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !37

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !38

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !39

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.4"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"* returned, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #12
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %2, %15
  %19 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %20 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  %21 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string.4"* %10 to i16*
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %26 = bitcast i32* %24 to i8*
  %27 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 17, i1 false)
  ret %"class.history::URLRow"* %0
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history6URLRow4SwapEPS0_(%"class.history::URLRow"*, %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  tail call void @_ZN4GURL4SwapEPS_(%class.GURL* %7, %class.GURL* %8) #12
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %9 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %16 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #12
  %17 = bitcast %"class.std::__1::basic_string.4"* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %19, align 4
  store i32 %21, i32* %20, align 4
  %23 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 5
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 6, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 6, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 7
  %33 = load i8, i8* %31, align 1, !range !40
  %34 = load i8, i8* %32, align 1, !range !40
  store i8 %34, i8* %31, align 1
  store i8 %33, i8* %32, align 1
  ret void
}

declare void @_ZN4GURL4SwapEPS_(%class.GURL*, %class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7history6URLRow19EstimateMemoryUsageEv(%"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 2
  %3 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %2) #12
  %4 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 3
  %5 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.4"* dereferenceable(24) %4) #12
  %6 = add i64 %5, %3
  ret i64 %6
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history28VisitContentModelAnnotations8CategoryC2Eii(%"struct.history::VisitContentModelAnnotations::Category"* nocapture, i32, i32) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history28VisitContentModelAnnotations8CategoryC2Ev(%"struct.history::VisitContentModelAnnotations::Category"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7history28VisitContentModelAnnotations8CategoryeqERKS1_(%"struct.history::VisitContentModelAnnotations::Category"* nocapture readonly, %"struct.history::VisitContentModelAnnotations::Category"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7history28VisitContentModelAnnotations8CategoryneERKS1_(%"struct.history::VisitContentModelAnnotations::Category"* nocapture readonly, %"struct.history::VisitContentModelAnnotations::Category"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history28VisitContentModelAnnotationsC2EfRKNSt3__16vectorINS0_8CategoryENS1_9allocatorIS3_EEEEl(%"struct.history::VisitContentModelAnnotations"*, float, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 0
  store float %1, float* %5, align 8
  %6 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %4
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #14
  %22 = bitcast i8* %21 to %"struct.history::VisitContentModelAnnotations::Category"*
  %23 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %22, i64 %14
  %27 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::VisitContentModelAnnotations::Category"* %26, %"struct.history::VisitContentModelAnnotations::Category"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %29 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #12
  %39 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %22, i64 %37
  %40 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %4, %41
  %44 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 2
  store i64 %3, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history28VisitContentModelAnnotationsC2Ev(%"struct.history::VisitContentModelAnnotations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 0
  store float -1.000000e+00, float* %2, align 8
  %3 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 2
  store i64 -1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history28VisitContentModelAnnotationsC2ERKS0_(%"struct.history::VisitContentModelAnnotations"*, %"struct.history::VisitContentModelAnnotations"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.history::VisitContentModelAnnotations"* %1 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %"struct.history::VisitContentModelAnnotations"* %0 to i32*
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #13
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #14
  %23 = bitcast i8* %22 to %"struct.history::VisitContentModelAnnotations::Category"*
  %24 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %23, i64 %15
  %28 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::VisitContentModelAnnotations::Category"* %27, %"struct.history::VisitContentModelAnnotations::Category"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %30 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 3
  %39 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %39, i64 %35, i1 false) #12
  %40 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %23, i64 %38
  %41 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %2, %42
  %45 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %1, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history28VisitContentModelAnnotationsD2Ev(%"struct.history::VisitContentModelAnnotations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %2, align 8
  %4 = icmp eq %"struct.history::VisitContentModelAnnotations::Category"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %3 to i64
  %7 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations", %"struct.history::VisitContentModelAnnotations"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultC2Ev(%"class.history::URLResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #12
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 41, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 0
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  store float -1.000000e+00, float* %8, align 8
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  store i64 -1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetC1Ev(%"class.query_parser::Snippet"* %13) #12
  %14 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %15 = bitcast %"class.std::__1::vector.18"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN12query_parser7SnippetC1Ev(%"class.query_parser::Snippet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultC2ERK4GURLN4base4TimeE(%"class.history::URLResult"*, %class.GURL* dereferenceable(120), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %1) #12
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 41, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 0
  store float -1.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  store i64 -1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetC1Ev(%"class.query_parser::Snippet"* %15) #12
  %16 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %17 = bitcast %"class.std::__1::vector.18"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultC2ERKNS_6URLRowE(%"class.history::URLResult"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.history::URLResult"* %0 to %"class.history::URLRow"*
  tail call void @_ZN7history6URLRowC2ERKS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %1)
  %4 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 0
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store float -1.000000e+00, float* %6, align 8
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  store i64 -1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetC1Ev(%"class.query_parser::Snippet"* %11) #12
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector.18"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultC2ERKS0_(%"class.history::URLResult"*, %"class.history::URLResult"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.history::URLResult"* %0 to %"class.history::URLRow"*
  %4 = bitcast %"class.history::URLResult"* %1 to %"class.history::URLRow"*
  tail call void @_ZN7history6URLRowC2ERKS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4)
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 0
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1
  %14 = bitcast %"struct.history::VisitContentModelAnnotations"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"struct.history::VisitContentModelAnnotations"* %12 to i32*
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1
  %19 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %2
  %29 = icmp ugt i64 %26, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #14
  %34 = bitcast i8* %33 to %"struct.history::VisitContentModelAnnotations::Category"*
  %35 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %34, i64 %26
  %39 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::VisitContentModelAnnotations::Category"* %38, %"struct.history::VisitContentModelAnnotations::Category"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %41 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %40, align 8
  %42 = load i64, i64* %21, align 8
  %43 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %35 to i64*
  %44 = ptrtoint i8* %33 to i64
  %45 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %41 to i64
  %46 = sub i64 %42, %45
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %32
  %49 = lshr exact i64 %46, 3
  %50 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %50, i64 %46, i1 false) #12
  %51 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %34, i64 %49
  %52 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %51 to i64
  br label %53

53:                                               ; preds = %48, %32
  %54 = phi i64 [ %52, %48 ], [ %44, %32 ]
  store i64 %54, i64* %43, align 8
  br label %55

55:                                               ; preds = %2, %53
  %56 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  %57 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 2
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %56, align 8
  %59 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  %60 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetC1ERKS0_(%"class.query_parser::Snippet"* %59, %"class.query_parser::Snippet"* dereferenceable(48) %60) #12
  %61 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %62 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5
  %63 = bitcast %"class.std::__1::vector.18"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12
  %64 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.18"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 4
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %99, label %72

72:                                               ; preds = %55
  %73 = icmp ugt i64 %70, 1152921504606846975
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector.18"* %61 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #13
  unreachable

76:                                               ; preds = %72
  %77 = tail call i8* @_Znwm(i64 %69) #14
  %78 = bitcast i8* %77 to %"struct.std::__1::pair"*
  %79 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 1
  %80 = bitcast %"struct.std::__1::pair"** %79 to i8**
  store i8* %77, i8** %80, align 8
  %81 = bitcast %"class.std::__1::vector.18"* %61 to i8**
  store i8* %77, i8** %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 %70
  %83 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %82, %"struct.std::__1::pair"** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %62, i64 0, i32 0, i32 0
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %84, align 8
  %86 = load i64, i64* %65, align 8
  %87 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %88 = ptrtoint i8* %77 to i64
  %89 = ptrtoint %"struct.std::__1::pair"* %85 to i64
  %90 = sub i64 %86, %89
  %91 = icmp sgt i64 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %76
  %93 = lshr exact i64 %90, 4
  %94 = bitcast %"struct.std::__1::pair"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %94, i64 %90, i1 false) #12
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 %93
  %96 = ptrtoint %"struct.std::__1::pair"* %95 to i64
  br label %97

97:                                               ; preds = %92, %76
  %98 = phi i64 [ %96, %92 ], [ %88, %76 ]
  store i64 %98, i64* %87, align 8
  br label %99

99:                                               ; preds = %55, %97
  %100 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 6
  %101 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 6
  %102 = load i8, i8* %101, align 8, !range !40
  store i8 %102, i8* %100, align 8
  ret void
}

declare void @_ZN12query_parser7SnippetC1ERKS0_(%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultC2EOS0_(%"class.history::URLResult"*, %"class.history::URLResult"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %8) #12
  %9 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %12 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 4
  %15 = bitcast i32* %13 to i8*
  %16 = bitcast i32* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 17, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %17 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 0
  %21 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1
  %24 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1
  %25 = bitcast %"struct.history::VisitContentModelAnnotations"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"struct.history::VisitContentModelAnnotations"* %23 to i32*
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %29 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1
  %30 = bitcast %"class.std::__1::vector"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12
  %31 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %32 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %29 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 3
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %2
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %28 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #13
  unreachable

43:                                               ; preds = %39
  %44 = tail call i8* @_Znwm(i64 %36) #14
  %45 = bitcast i8* %44 to %"struct.history::VisitContentModelAnnotations::Category"*
  %46 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %47 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %46 to i8**
  store i8* %44, i8** %47, align 8
  %48 = bitcast %"class.std::__1::vector"* %28 to i8**
  store i8* %44, i8** %48, align 8
  %49 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %45, i64 %37
  %50 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::VisitContentModelAnnotations::Category"* %49, %"struct.history::VisitContentModelAnnotations::Category"** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %52 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %51, align 8
  %53 = load i64, i64* %32, align 8
  %54 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %46 to i64*
  %55 = ptrtoint i8* %44 to i64
  %56 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %52 to i64
  %57 = sub i64 %53, %56
  %58 = icmp sgt i64 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %43
  %60 = lshr exact i64 %57, 3
  %61 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* align 4 %61, i64 %57, i1 false) #12
  %62 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %45, i64 %60
  %63 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %62 to i64
  br label %64

64:                                               ; preds = %59, %43
  %65 = phi i64 [ %63, %59 ], [ %55, %43 ]
  store i64 %65, i64* %54, align 8
  br label %66

66:                                               ; preds = %2, %64
  %67 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  %68 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 2
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %67, align 8
  %70 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  %71 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetC1EOS0_(%"class.query_parser::Snippet"* %70, %"class.query_parser::Snippet"* dereferenceable(48) %71) #12
  %72 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %73 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5
  %74 = bitcast %"class.std::__1::vector.18"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #12
  %75 = bitcast %"class.std::__1::vector.18"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector.18"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 1
  %79 = bitcast %"struct.std::__1::pair"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 1
  %82 = bitcast %"struct.std::__1::pair"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.std::__1::pair"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.std::__1::pair"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"class.std::__1::vector.18"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #12
  %89 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 6
  %90 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 6
  %91 = load i8, i8* %90, align 8, !range !40
  store i8 %91, i8* %89, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12query_parser7SnippetC1EOS0_(%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"* dereferenceable(48)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultD2Ev(%"class.history::URLResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetD1Ev(%"class.query_parser::Snippet"* %12) #12
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 0
  %14 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %13, align 8
  %15 = icmp eq %"struct.history::VisitContentModelAnnotations::Category"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %14 to i64
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %11, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::basic_string.4"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string.4"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %21, %27
  %31 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %31) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12query_parser7SnippetD1Ev(%"class.query_parser::Snippet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResultD0Ev(%"class.history::URLResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history9URLResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  tail call void @_ZN12query_parser7SnippetD1Ev(%"class.query_parser::Snippet"* %12) #12
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 0
  %14 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %13, align 8
  %15 = icmp eq %"struct.history::VisitContentModelAnnotations::Category"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %14 to i64
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %19 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %16, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history6URLRowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::basic_string.4"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string.4"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %21, %27
  %31 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %31) #12
  %32 = bitcast %"class.history::URLResult"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(320) %"class.history::URLResult"* @_ZN7history9URLResultaSERKS0_(%"class.history::URLResult"* returned, %"class.history::URLResult"* dereferenceable(320)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 2
  %8 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #12
  %9 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 3
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %9, %"class.std::__1::basic_string.4"* dereferenceable(24) %10) #12
  %12 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 4
  %14 = bitcast i32* %12 to i8*
  %15 = bitcast i32* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 17, i1 false) #12
  %16 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 0
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1
  %23 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1
  %24 = bitcast %"struct.history::VisitContentModelAnnotations"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %"struct.history::VisitContentModelAnnotations"* %22 to i32*
  store i32 %25, i32* %26, align 8
  %27 = icmp eq %"class.history::URLResult"* %0, %1
  br i1 %27, label %45, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 1
  %30 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1, i32 0, i32 0
  %31 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %30, align 8
  %32 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 1, i32 0, i32 1
  %33 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %32, align 8
  tail call void @_ZNSt3__16vectorIN7history28VisitContentModelAnnotations8CategoryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %29, %"struct.history::VisitContentModelAnnotations::Category"* %31, %"struct.history::VisitContentModelAnnotations::Category"* %33) #12
  %34 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 4
  %39 = tail call dereferenceable(48) %"class.query_parser::Snippet"* @_ZN12query_parser7SnippetaSERKS0_(%"class.query_parser::Snippet"* %37, %"class.query_parser::Snippet"* dereferenceable(48) %38) #12
  %40 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %41 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 0
  %42 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  %43 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 1
  %44 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  tail call void @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.18"* %40, %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"* %44) #12
  br label %52

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3, i32 1, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3, i32 1, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 4
  %51 = tail call dereferenceable(48) %"class.query_parser::Snippet"* @_ZN12query_parser7SnippetaSERKS0_(%"class.query_parser::Snippet"* %49, %"class.query_parser::Snippet"* dereferenceable(48) %50) #12
  br label %52

52:                                               ; preds = %45, %28
  %53 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 6
  %54 = load i8, i8* %53, align 8, !range !40
  %55 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 6
  store i8 %54, i8* %55, align 8
  ret %"class.history::URLResult"* %0
}

declare dereferenceable(48) %"class.query_parser::Snippet"* @_ZN12query_parser7SnippetaSERKS0_(%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history9URLResult10SwapResultEPS0_(%"class.history::URLResult"*, %"class.history::URLResult"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 1
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %7 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 2
  tail call void @_ZN4GURL4SwapEPS_(%class.GURL* %7, %class.GURL* %8) #12
  %9 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string.4"* %9 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  %16 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #12
  %17 = bitcast %"class.std::__1::basic_string.4"* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 4
  %20 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 4
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %19, align 4
  store i32 %21, i32* %20, align 4
  %23 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 5
  %24 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 5
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 6, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %31 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 0, i32 7
  %32 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 0, i32 7
  %33 = load i8, i8* %31, align 1, !range !40
  %34 = load i8, i8* %32, align 1, !range !40
  store i8 %34, i8* %31, align 1
  store i8 %33, i8* %32, align 1
  %35 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  %39 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 3
  tail call void @_ZNSt3__14swapIN7history23VisitContentAnnotationsEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.history::VisitContentAnnotations"* dereferenceable(48) %39, %"struct.history::VisitContentAnnotations"* dereferenceable(48) %40)
  %41 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 4
  %42 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 4
  tail call void @_ZN12query_parser7Snippet4SwapEPS0_(%"class.query_parser::Snippet"* %41, %"class.query_parser::Snippet"* %42) #12
  %43 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5
  %45 = bitcast %"class.std::__1::vector.18"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.18"* %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 1
  %50 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::pair"** %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.std::__1::pair"** %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  store i64 %52, i64* %53, align 8
  %55 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::pair"** %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.std::__1::pair"** %56 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %57, align 8
  store i64 %58, i64* %59, align 8
  %61 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 6
  %62 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 6
  %63 = load i8, i8* %61, align 1, !range !40
  %64 = load i8, i8* %62, align 1, !range !40
  store i8 %64, i8* %61, align 1
  store i8 %63, i8* %62, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7history23VisitContentAnnotationsEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_(%"struct.history::VisitContentAnnotations"* dereferenceable(48), %"struct.history::VisitContentAnnotations"* dereferenceable(48)) local_unnamed_addr #7 comdat {
  %3 = alloca %"struct.history::VisitContentAnnotations", align 8
  %4 = bitcast %"struct.history::VisitContentAnnotations"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ i64, { float, [4 x i8], %"class.std::__1::vector", i64 } }* @__const._ZNSt3__14swapIN7history23VisitContentAnnotationsEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_.__t to i8*), i64 48, i1 false)
  %5 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %0, i64 0, i32 1
  %10 = bitcast %"struct.history::VisitContentModelAnnotations"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"struct.history::VisitContentModelAnnotations"* %8 to i32*
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %0, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  %16 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #14
  %30 = bitcast i8* %29 to %"struct.history::VisitContentModelAnnotations::Category"*
  %31 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 1, i32 0, i32 1
  %32 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %30, i64 %22
  %35 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::VisitContentModelAnnotations::Category"* %34, %"struct.history::VisitContentModelAnnotations::Category"** %35, align 8
  %36 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp sgt i64 %21, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %28
  %40 = lshr exact i64 %21, 3
  %41 = inttoptr i64 %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %41, i64 %21, i1 false) #12
  %42 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %30, i64 %40
  %43 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %42 to i64
  br label %44

44:                                               ; preds = %39, %28
  %45 = phi i64 [ %43, %39 ], [ %37, %28 ]
  store i64 %45, i64* %36, align 8
  %46 = inttoptr i64 %45 to %"struct.history::VisitContentModelAnnotations::Category"*
  br label %47

47:                                               ; preds = %2, %44
  %48 = phi i8* [ null, %2 ], [ %29, %44 ]
  %49 = phi %"struct.history::VisitContentModelAnnotations::Category"* [ null, %2 ], [ %30, %44 ]
  %50 = phi %"struct.history::VisitContentModelAnnotations::Category"* [ null, %2 ], [ %46, %44 ]
  %51 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 2
  %52 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %0, i64 0, i32 1, i32 2
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %6, align 8
  %56 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 1
  %57 = bitcast %"struct.history::VisitContentModelAnnotations"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %10, align 8
  %59 = icmp eq %"struct.history::VisitContentAnnotations"* %0, %1
  br i1 %59, label %65, label %60

60:                                               ; preds = %47
  %61 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %62 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %61, align 8
  %63 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %64 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %63, align 8
  tail call void @_ZNSt3__16vectorIN7history28VisitContentModelAnnotations8CategoryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %14, %"struct.history::VisitContentModelAnnotations::Category"* %62, %"struct.history::VisitContentModelAnnotations::Category"* %64) #12
  br label %65

65:                                               ; preds = %47, %60
  %66 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 1, i32 2
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %52, align 8
  store i64 %7, i64* %54, align 8
  store i32 %11, i32* %57, align 8
  %68 = icmp eq %"struct.history::VisitContentAnnotations"* %3, %1
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %1, i64 0, i32 1, i32 1
  %71 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZNSt3__16vectorIN7history28VisitContentModelAnnotations8CategoryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %70, %"struct.history::VisitContentModelAnnotations::Category"* %49, %"struct.history::VisitContentModelAnnotations::Category"* %50) #12
  %72 = load i64, i64* %51, align 8
  %73 = load %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"** %71, align 8
  %74 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %73 to i8*
  br label %75

75:                                               ; preds = %65, %69
  %76 = phi i8* [ %48, %65 ], [ %74, %69 ]
  %77 = phi %"struct.history::VisitContentModelAnnotations::Category"* [ %49, %65 ], [ %73, %69 ]
  %78 = phi i64 [ %53, %65 ], [ %72, %69 ]
  store i64 %78, i64* %66, align 8
  %79 = icmp eq %"struct.history::VisitContentModelAnnotations::Category"* %77, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %77 to i64
  %82 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %3, i64 0, i32 1, i32 1, i32 0, i32 1
  %83 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %82 to i64*
  store i64 %81, i64* %83, align 8
  call void @_ZdlPv(i8* %76) #14
  br label %84

84:                                               ; preds = %75, %80
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #12
  ret void
}

declare void @_ZN12query_parser7Snippet4SwapEPS0_(%"class.query_parser::Snippet"*, %"class.query_parser::Snippet"*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7history9URLResult16CompareVisitTimeERKS0_S2_(%"class.history::URLResult"* nocapture readonly dereferenceable(320), %"class.history::URLResult"* nocapture readonly dereferenceable(320)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %4, %6
  ret i1 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history28VisitContentModelAnnotations8CategoryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %2 to i64
  %5 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.history::VisitContentModelAnnotations::Category"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %1, i64 %22
  %25 = select i1 %23, %"struct.history::VisitContentModelAnnotations::Category"* %24, %"struct.history::VisitContentModelAnnotations::Category"* %2
  %26 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %"struct.history::VisitContentModelAnnotations::Category"*
  %43 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %42, i64 %39
  %44 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %16, i64 %28
  store %"struct.history::VisitContentModelAnnotations::Category"* %48, %"struct.history::VisitContentModelAnnotations::Category"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to %"struct.history::VisitContentModelAnnotations::Category"*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %75, i64 %72
  store %"struct.history::VisitContentModelAnnotations::Category"* %79, %"struct.history::VisitContentModelAnnotations::Category"** %8, align 8
  %80 = bitcast %"struct.history::VisitContentModelAnnotations::Category"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"struct.history::VisitContentModelAnnotations::Category"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %"struct.history::VisitContentModelAnnotations::Category", %"struct.history::VisitContentModelAnnotations::Category"* %75, i64 %84
  %87 = ptrtoint %"struct.history::VisitContentModelAnnotations::Category"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !41
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !41
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !44, !noalias !41
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !44, !noalias !41
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !41
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !41
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !44, !noalias !41
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !44, !noalias !41
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !41
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !41
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !44, !noalias !41
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !44, !noalias !41
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !41
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !41
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !44, !noalias !41
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !44, !noalias !41
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !46

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !41
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !41
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !44, !noalias !41
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !44, !noalias !41
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !47

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !48

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !49

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !50

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !51

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !52

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !54
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !54
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !57, !noalias !54
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !57, !noalias !54
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !54
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !54
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !57, !noalias !54
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !57, !noalias !54
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !54
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !54
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !57, !noalias !54
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !57, !noalias !54
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !54
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !54
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !57, !noalias !54
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !57, !noalias !54
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !59

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !54
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !54
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !57, !noalias !54
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !57, !noalias !54
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !60

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !61

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !62

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairImmEENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.18"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %2
  %26 = icmp eq %"struct.std::__1::pair"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 -1, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !63

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #12
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #14
  %107 = bitcast %"class.std::__1::vector.18"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #12
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #13
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #13
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #14
  %127 = bitcast i8* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.18"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %124
  store %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #12
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{i8 0, i8 2}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !8}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !53, !8}
!53 = !{!"llvm.loop.unroll.runtime.disable"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !8}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !10}
!62 = distinct !{!62, !8}
!63 = distinct !{!63, !10}
