; ModuleID = '../../third_party/skia/src/gpu/GrContextThreadSafeProxy.cpp'
source_filename = "../../third_party/skia/src/gpu/GrContextThreadSafeProxy.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23", %class.sk_sp.87, %"struct.std::__1::atomic.2", [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type { %class.SkSpinlock, %class.SkTInternalLList, %class.SkTHashMap, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" }
%class.SkSpinlock = type { %"struct.std::__1::atomic.2" }
%class.SkTInternalLList = type { %class.GrTextBlob*, %class.GrTextBlob* }
%class.GrTextBlob = type <{ %class.SkGlyphRunPainterInterface, %class.SkNVRefCnt.6, [4 x i8], %class.GrTextBlob*, %class.GrTextBlob*, %class.GrSubRunAllocator, %struct.GrSubRunList, i32, %class.SkMatrix, i32, %"struct.GrTextBlob::Key", float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes }
%class.SkFibBlockSizes = type { i32 }
%struct.GrSubRunList = type { %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.GrSubRun* }
%class.GrSubRun = type { i32 (...)**, %"class.std::__1::unique_ptr.7" }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.GrTextBlob::Key" = type { i32, i32, float, float, i32, %"struct.SkMaskFilterBase::BlurRec", i32, %class.SkMatrix, i8, i8, i8, i8 }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"struct.GrTextBlobCache::BlobIDCacheEntry" }
%"struct.GrTextBlobCache::BlobIDCacheEntry" = type { i32, %class.SkSTArray.99 }
%class.SkSTArray.99 = type { %class.SkAlignedSTStorage.100, %class.SkTArray.101 }
%class.SkAlignedSTStorage.100 = type { [8 x i8] }
%class.SkTArray.101 = type { %class.sk_sp.102*, i64 }
%class.sk_sp.102 = type { %class.GrTextBlob* }
%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.GrTextBlobCache::PurgeBlobMessage"*, i64 }
%"struct.GrTextBlobCache::PurgeBlobMessage" = type { i32, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type { %class.SkSpinlock, %class.SkTDynamicHash, %class.SkTInternalLList.34, [6656 x i8], %class.SkArenaAlloc, %"struct.GrThreadSafeCache::Entry"* }
%class.SkTDynamicHash = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot" = type opaque
%class.SkTInternalLList.34 = type { %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes.83, [4 x i8] }>
%class.SkFibBlockSizes.83 = type { i32 }
%"struct.GrThreadSafeCache::Entry" = type <{ %"class.std::__1::chrono::time_point", %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"*, %class.GrUniqueKey, %union.anon.37, i32, [4 x i8] }>
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.35, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.35 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.36, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.36 = type { %"struct.std::__1::atomic" }
%union.anon.37 = type { %class.sk_sp.80, [8 x i8] }
%class.sk_sp.80 = type { %"class.GrThreadSafeCache::VertexData"* }
%"class.GrThreadSafeCache::VertexData" = type { %class.SkNVRefCnt.81, i8*, i32, i64, %class.sk_sp.82 }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.sk_sp.82 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.sk_sp.87 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats", [3 x i8] }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::default_delete.21" = type { i8 }
%class.SkSurfaceCharacterization = type { %class.sk_sp.90, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.sk_sp.90 = type { %class.GrContextThreadSafeProxy* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.88, i32, i32 }
%class.sk_sp.88 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.89, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.89 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.43, i32, [4 x i8] }
%union.anon.43 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSurfaceProps = type { i32, i32 }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.91, %"class.std::__1::unique_ptr.92", i32, [4 x i8] }>
%class.SkTDArray.91 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.98 }
%class.SkAlignedSTStorage = type { [48 x i8] }
%class.SkTArray.98 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%class.GrContextThreadSafeProxyPriv = type { %class.GrContextThreadSafeProxy* }
%class.SkMessageBus = type { %class.SkTDArray.103, %class.SkMutex }
%class.SkTDArray.103 = type { %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"**, i32, i32 }

$_ZNKSt3__114default_deleteI15GrTextBlobCacheEclEPS1_ = comdat any

$_ZN12SkMessageBusIN15GrTextBlobCache16PurgeBlobMessageEjLb1EE5InboxD2Ev = comdat any

@_ZZL7next_idvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4
@switch.table._ZNK24GrContextThreadSafeProxy20defaultBackendFormatE11SkColorType12GrRenderable = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN24GrContextThreadSafeProxyC1E12GrBackendApiRK16GrContextOptions = hidden unnamed_addr alias void (%class.GrContextThreadSafeProxy*, i32, %struct.GrContextOptions*), void (%class.GrContextThreadSafeProxy*, i32, %struct.GrContextOptions*)* @_ZN24GrContextThreadSafeProxyC2E12GrBackendApiRK16GrContextOptions
@_ZN24GrContextThreadSafeProxyD1Ev = hidden unnamed_addr alias void (%class.GrContextThreadSafeProxy*), void (%class.GrContextThreadSafeProxy*)* @_ZN24GrContextThreadSafeProxyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrContextThreadSafeProxyC2E12GrBackendApiRK16GrContextOptions(%class.GrContextThreadSafeProxy* nocapture, i32, %struct.GrContextOptions* nocapture readonly dereferenceable(240)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 240, i1 false)
  br label %8

8:                                                ; preds = %8, %3
  %9 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL7next_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %8, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 3
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 5, i32 0
  %14 = bitcast %class.GrCaps** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 33, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrContextThreadSafeProxyD2Ev(%class.GrContextThreadSafeProxy*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 8, i32 0
  %3 = load %class.GrThreadSafePipelineBuilder*, %class.GrThreadSafePipelineBuilder** %2, align 8
  %4 = icmp eq %class.GrThreadSafePipelineBuilder* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrThreadSafePipelineBuilder, %class.GrThreadSafePipelineBuilder* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.GrThreadSafePipelineBuilder* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.GrThreadSafePipelineBuilder* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #8
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = load %class.GrThreadSafeCache*, %class.GrThreadSafeCache** %16, align 8
  store %class.GrThreadSafeCache* null, %class.GrThreadSafeCache** %16, align 8
  %18 = icmp eq %class.GrThreadSafeCache* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZN17GrThreadSafeCacheD1Ev(%class.GrThreadSafeCache* nonnull %17) #8
  %20 = getelementptr inbounds %class.GrThreadSafeCache, %class.GrThreadSafeCache* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.GrTextBlobCache*, %class.GrTextBlobCache** %23, align 8
  store %class.GrTextBlobCache* null, %class.GrTextBlobCache** %23, align 8
  %25 = icmp eq %class.GrTextBlobCache* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::unique_ptr"* %22 to %"struct.std::__1::default_delete.21"*
  tail call void @_ZNKSt3__114default_deleteI15GrTextBlobCacheEclEPS1_(%"struct.std::__1::default_delete.21"* %27, %class.GrTextBlobCache* nonnull %24) #8
  br label %28

28:                                               ; preds = %21, %26
  %29 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 5, i32 0
  %30 = load %class.GrCaps*, %class.GrCaps** %29, align 8
  %31 = icmp eq %class.GrCaps* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.GrCaps* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.GrCaps* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #8
  br label %42

42:                                               ; preds = %28, %32, %36
  %43 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 2, i32 28
  tail call void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds* %43) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrContextThreadSafeProxy4initE5sk_spIK6GrCapsES0_I27GrThreadSafePipelineBuilderE(%class.GrContextThreadSafeProxy*, %class.sk_sp* nocapture, %class.sk_sp.87* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 5
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.GrCaps* null, %class.GrCaps** %5, align 8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %9 = load %class.GrCaps*, %class.GrCaps** %8, align 8
  %10 = bitcast %class.sk_sp* %4 to i64*
  store i64 %7, i64* %10, align 8
  %11 = icmp eq %class.GrCaps* %9, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.GrCaps* %9 to %class.SkRefCntBase*
  %18 = bitcast %class.GrCaps* %9 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #8
  br label %22

22:                                               ; preds = %3, %12, %16
  %23 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 3
  %24 = tail call i8* @_Znwm(i64 104) #9
  %25 = bitcast i8* %24 to %class.GrTextBlobCache*
  %26 = load i32, i32* %23, align 4
  tail call void @_ZN15GrTextBlobCacheC1Ej(%class.GrTextBlobCache* nonnull %25, i32 %26) #8
  %27 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 6
  %28 = ptrtoint i8* %24 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.GrTextBlobCache*, %class.GrTextBlobCache** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %class.GrTextBlobCache* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.std::__1::unique_ptr"* %27 to %"struct.std::__1::default_delete.21"*
  tail call void @_ZNKSt3__114default_deleteI15GrTextBlobCacheEclEPS1_(%"struct.std::__1::default_delete.21"* %34, %class.GrTextBlobCache* nonnull %30) #8
  br label %35

35:                                               ; preds = %33, %22
  %36 = call i8* @_Znwm(i64 6736) #9
  %37 = bitcast i8* %36 to %class.GrThreadSafeCache*
  call void @_ZN17GrThreadSafeCacheC1Ev(%class.GrThreadSafeCache* nonnull %37) #8
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 7
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.GrThreadSafeCache*, %class.GrThreadSafeCache** %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.23"* %39 to i64*
  store i64 %38, i64* %42, align 8
  %43 = icmp eq %class.GrThreadSafeCache* %41, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %35
  call void @_ZN17GrThreadSafeCacheD1Ev(%class.GrThreadSafeCache* nonnull %41) #8
  %45 = getelementptr inbounds %class.GrThreadSafeCache, %class.GrThreadSafeCache* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %44, %35
  %47 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 8
  %48 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %2, i64 0, i32 0
  %49 = bitcast %class.sk_sp.87* %2 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.GrThreadSafePipelineBuilder* null, %class.GrThreadSafePipelineBuilder** %48, align 8
  %51 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %47, i64 0, i32 0
  %52 = load %class.GrThreadSafePipelineBuilder*, %class.GrThreadSafePipelineBuilder** %51, align 8
  %53 = bitcast %class.sk_sp.87* %47 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %class.GrThreadSafePipelineBuilder* %52, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.GrThreadSafePipelineBuilder, %class.GrThreadSafePipelineBuilder* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %class.GrThreadSafePipelineBuilder* %52 to %class.SkRefCntBase*
  %61 = bitcast %class.GrThreadSafePipelineBuilder* %52 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #8
  br label %65

65:                                               ; preds = %46, %55, %59
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrContextThreadSafeProxy22createCharacterizationEmRK11SkImageInfoRK15GrBackendFormati15GrSurfaceOriginRK14SkSurfacePropsbbb11GrProtectedbb(%class.SkSurfaceCharacterization* noalias sret, %class.GrContextThreadSafeProxy*, i64, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %class.GrBackendFormat* dereferenceable(72), i32, i32, %class.SkSurfaceProps* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %4, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %20 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %19, align 8
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %27, align 2
  %28 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %30, i32 0, i32 0) #8
  br label %283

31:                                               ; preds = %14
  %32 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %4, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  %35 = xor i1 %9, true
  %36 = or i1 %34, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %39 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %38, align 8
  %40 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %44, align 8
  %45 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %46, align 2
  %47 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %47, align 4
  %48 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %49, i32 0, i32 0) #8
  br label %283

50:                                               ; preds = %31
  %51 = icmp ne i32 %33, 1
  %52 = or i1 %12, %13
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %67

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %56 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %55, align 8
  %57 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %61, align 8
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %62, align 1
  %63 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %63, align 2
  %64 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %66, i32 0, i32 0) #8
  br label %283

67:                                               ; preds = %50
  %68 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %1, i64 0, i32 5, i32 0
  %69 = load %class.GrCaps*, %class.GrCaps** %68, align 8
  %70 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %69, i64 0, i32 3
  %71 = bitcast i48* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 2
  %74 = icmp ne i64 %73, 0
  %75 = and i1 %74, %8
  %76 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 1
  br i1 %78, label %89, label %79

79:                                               ; preds = %67
  %80 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %69, i64 0, i32 8
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %77, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, 1
  %87 = icmp sgt i32 %85, %81
  %88 = or i1 %86, %87
  br i1 %88, label %89, label %102

89:                                               ; preds = %83, %79, %67
  %90 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %91 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %90, align 8
  %92 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %94, align 8
  %95 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %96, align 8
  %97 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %98, align 2
  %99 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %100, align 1
  %101 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %101, i32 0, i32 0) #8
  br label %283

102:                                              ; preds = %83
  %103 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp ult i32 %104, 21
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  tail call void @llvm.trap() #8
  unreachable

107:                                              ; preds = %102
  %108 = sext i32 %104 to i64
  %109 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK24GrContextThreadSafeProxy20defaultBackendFormatE11SkColorType12GrRenderable, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = tail call zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps* %69, i32 %110, %class.GrBackendFormat* dereferenceable(72) %4) #8
  br i1 %111, label %125, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %114 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %113, align 8
  %115 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %115, align 4
  %116 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %117, align 8
  %118 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %119, align 8
  %120 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %120, align 1
  %121 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %121, align 2
  %122 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %122, align 4
  %123 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %123, align 1
  %124 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %124, i32 0, i32 0) #8
  br label %283

125:                                              ; preds = %107
  %126 = load %class.GrCaps*, %class.GrCaps** %68, align 8
  %127 = bitcast %class.GrCaps* %126 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %128 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %127, align 8
  %129 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %128, i64 7
  %130 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %129, align 8
  %131 = tail call zeroext i1 %130(%class.GrCaps* %126, i32 %110, %class.GrBackendFormat* dereferenceable(72) %4, i32 %5) #8
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %134 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %133, align 8
  %135 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %135, align 4
  %136 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %137, align 8
  %138 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %139, align 8
  %140 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %140, align 1
  %141 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %141, align 2
  %142 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %143, align 1
  %144 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %144, i32 0, i32 0) #8
  br label %283

145:                                              ; preds = %125
  %146 = load %class.GrCaps*, %class.GrCaps** %68, align 8
  %147 = bitcast %class.GrCaps* %146 to i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)***
  %148 = load i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)**, i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)*** %147, align 8
  %149 = getelementptr inbounds i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %148, i64 9
  %150 = load i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %149, align 8
  %151 = tail call i32 %150(%class.GrCaps* %146, i32 %5, %class.GrBackendFormat* dereferenceable(72) %4) #8
  %152 = xor i1 %10, true
  %153 = or i1 %35, %152
  br i1 %153, label %167, label %154

154:                                              ; preds = %145
  %155 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %156 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %155, align 8
  %157 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %157, align 4
  %158 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %158, align 8
  %159 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %159, align 8
  %160 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %160, align 4
  %161 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %161, align 8
  %162 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %162, align 1
  %163 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %163, align 2
  %164 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %164, align 4
  %165 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %165, align 1
  %166 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %166, i32 0, i32 0) #8
  br label %283

167:                                              ; preds = %145
  br i1 %10, label %168, label %188

168:                                              ; preds = %167
  %169 = load %class.GrCaps*, %class.GrCaps** %68, align 8
  %170 = bitcast %class.GrCaps* %169 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %171 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %170, align 8
  %172 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %171, i64 4
  %173 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %172, align 8
  %174 = tail call zeroext i1 %173(%class.GrCaps* %169, %class.GrBackendFormat* dereferenceable(72) %4) #8
  br i1 %174, label %188, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %177 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %176, align 8
  %178 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %178, align 4
  %179 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %179, align 8
  %180 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %180, align 8
  %181 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %181, align 4
  %182 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %182, align 8
  %183 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %183, align 1
  %184 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %184, align 2
  %185 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %185, align 4
  %186 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %186, align 1
  %187 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %187, i32 0, i32 0) #8
  br label %283

188:                                              ; preds = %168, %167
  br i1 %13, label %189, label %206

189:                                              ; preds = %188
  %190 = or i1 %75, %10
  %191 = or i1 %190, %9
  %192 = or i1 %191, %12
  br i1 %192, label %193, label %206

193:                                              ; preds = %189
  %194 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %195 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %194, align 8
  %196 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %196, align 4
  %197 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %197, align 8
  %198 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %198, align 8
  %199 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %200, align 8
  %201 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %201, align 1
  %202 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %202, align 2
  %203 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %203, align 4
  %204 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %204, align 1
  %205 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %205, i32 0, i32 0) #8
  br label %283

206:                                              ; preds = %189, %188
  %207 = load i32, i32* %32, align 8
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %246

209:                                              ; preds = %206
  %210 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %1, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %226, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %215 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %214, align 8
  %216 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %216, align 4
  %217 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %217, align 8
  %218 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %218, align 8
  %219 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %220, align 8
  %221 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %221, align 1
  %222 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %222, align 2
  %223 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %223, align 4
  %224 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %224, align 1
  %225 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %225, i32 0, i32 0) #8
  br label %283

226:                                              ; preds = %209
  %227 = bitcast %class.GrCaps** %68 to %class.GrVkCaps**
  %228 = load %class.GrVkCaps*, %class.GrVkCaps** %227, align 8
  %229 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %228, i64 0, i32 20
  %230 = load i8, i8* %229, align 2, !range !2
  %231 = icmp ne i8 %230, 0
  %232 = xor i1 %231, %11
  br i1 %232, label %233, label %246

233:                                              ; preds = %226
  %234 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %235 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 40, i1 false) #8
  store i32 5, i32* %234, align 8
  %236 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %236, align 4
  %237 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %237, align 8
  %238 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %238, align 8
  %239 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %239, align 4
  %240 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %240, align 8
  %241 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %241, align 1
  %242 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %242, align 2
  %243 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %243, align 4
  %244 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %244, align 1
  %245 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %245, i32 0, i32 0) #8
  br label %283

246:                                              ; preds = %226, %206
  %247 = icmp eq %class.GrContextThreadSafeProxy* %1, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %246
  %249 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 1 monotonic, !noalias !3
  br label %251

251:                                              ; preds = %246, %248
  %252 = ptrtoint %class.GrContextThreadSafeProxy* %1 to i64
  %253 = zext i1 %10 to i8
  %254 = zext i1 %75 to i8
  %255 = zext i1 %9 to i8
  %256 = zext i1 %12 to i8
  %257 = zext i1 %13 to i8
  %258 = zext i1 %11 to i8
  %259 = bitcast %class.SkSurfaceCharacterization* %0 to i64*
  store i64 %252, i64* %259, align 8
  %260 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %2, i64* %260, align 8
  %261 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %263 = load %class.SkColorSpace*, %class.SkColorSpace** %262, align 8
  %264 = icmp eq %class.SkColorSpace* %263, null
  br i1 %264, label %268, label %265

265:                                              ; preds = %251
  %266 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = atomicrmw add i32* %266, i32 1 monotonic
  br label %268

268:                                              ; preds = %265, %251
  store %class.SkColorSpace* %263, %class.SkColorSpace** %261, align 8
  %269 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %270 = bitcast i32* %103 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8
  %272 = bitcast i32* %269 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %272, align 8
  %273 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %273, %class.GrBackendFormat* dereferenceable(72) %4) #8
  %274 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %6, i32* %274, align 8
  %275 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %151, i32* %275, align 4
  %276 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %253, i8* %276, align 8
  %277 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %254, i8* %277, align 1
  %278 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %255, i8* %278, align 2
  %279 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %256, i8* %279, align 1
  %280 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %257, i8* %280, align 4
  %281 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %258, i8* %281, align 1
  %282 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %282, %class.SkSurfaceProps* dereferenceable(8) %7) #8
  br label %283

283:                                              ; preds = %112, %132, %154, %175, %193, %213, %268, %233, %89, %54, %37, %18
  ret void
}

declare zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrContextThreadSafeProxy20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* noalias sret, %class.GrContextThreadSafeProxy* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = icmp ult i32 %2, 21
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.trap() #8
  unreachable

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK24GrContextThreadSafeProxy20defaultBackendFormatE11SkColorType12GrRenderable, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false)
  %13 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %1, i64 0, i32 5, i32 0
  %14 = load %class.GrCaps*, %class.GrCaps** %13, align 8
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %5, %class.GrCaps* %14, i32 %11, i1 zeroext %3) #8
  %15 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %5, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %19, align 8
  %20 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %21, align 8
  br label %23

22:                                               ; preds = %8
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %0, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #8
  br label %23

23:                                               ; preds = %22, %18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrContextThreadSafeProxy14abandonContextEv(%class.GrContextThreadSafeProxy* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw xchg i8* %2, i8 1 seq_cst
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %class.GrTextBlobCache*, %class.GrTextBlobCache** %7, align 8
  tail call void @_ZN15GrTextBlobCache7freeAllEv(%class.GrTextBlobCache* %8) #8
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN15GrTextBlobCache7freeAllEv(%class.GrTextBlobCache*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24GrContextThreadSafeProxy9abandonedEv(%class.GrContextThreadSafeProxy* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28GrContextThreadSafeProxyPriv4MakeE12GrBackendApiRK16GrContextOptions(%class.sk_sp.90* noalias nocapture sret, i32, %struct.GrContextOptions* nocapture readonly dereferenceable(240)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 296) #9
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %4, i64 4
  %7 = bitcast i8* %6 to i32*
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 240, i1 false) #8
  br label %10

10:                                               ; preds = %10, %3
  %11 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL7next_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %10, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %4, i64 248
  %15 = bitcast i8* %14 to i32*
  store i32 %11, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 256
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 33, i1 false) #8
  %17 = bitcast %class.sk_sp.90* %0 to i8**
  store i8* %4, i8** %17, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrContextThreadSafeProxyPriv4initE5sk_spIK6GrCapsES0_I27GrThreadSafePipelineBuilderE(%class.GrContextThreadSafeProxyPriv* nocapture readonly, %class.sk_sp* nocapture, %class.sk_sp.87* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp.87, align 8
  %6 = getelementptr inbounds %class.GrContextThreadSafeProxyPriv, %class.GrContextThreadSafeProxyPriv* %0, i64 0, i32 0
  %7 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.GrCaps* null, %class.GrCaps** %8, align 8
  %11 = bitcast %class.sk_sp* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %2, i64 0, i32 0
  %13 = bitcast %class.sk_sp.87* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.GrThreadSafePipelineBuilder* null, %class.GrThreadSafePipelineBuilder** %12, align 8
  %15 = bitcast %class.sk_sp.87* %5 to i64*
  store i64 %14, i64* %15, align 8
  call void @_ZN24GrContextThreadSafeProxy4initE5sk_spIK6GrCapsES0_I27GrThreadSafePipelineBuilderE(%class.GrContextThreadSafeProxy* %7, %class.sk_sp* nonnull %4, %class.sk_sp.87* nonnull %5)
  %16 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %5, i64 0, i32 0
  %17 = load %class.GrThreadSafePipelineBuilder*, %class.GrThreadSafePipelineBuilder** %16, align 8
  %18 = icmp eq %class.GrThreadSafePipelineBuilder* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.GrThreadSafePipelineBuilder, %class.GrThreadSafePipelineBuilder* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.GrThreadSafePipelineBuilder* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.GrThreadSafePipelineBuilder* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #8
  br label %29

29:                                               ; preds = %3, %19, %23
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %31 = load %class.GrCaps*, %class.GrCaps** %30, align 8
  %32 = icmp eq %class.GrCaps* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.GrCaps* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.GrCaps* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  tail call void %42(%class.SkRefCntBase* nonnull %38) #8
  br label %43

43:                                               ; preds = %29, %33, %37
  ret void
}

; Function Attrs: nounwind
declare void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #5

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteI15GrTextBlobCacheEclEPS1_(%"struct.std::__1::default_delete.21"*, %class.GrTextBlobCache*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.GrTextBlobCache* %1, null
  br i1 %3, label %64, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrTextBlobCache, %class.GrTextBlobCache* %1, i64 0, i32 7
  tail call void @_ZN12SkMessageBusIN15GrTextBlobCache16PurgeBlobMessageEjLb1EE5InboxD2Ev(%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"* %5) #8
  %6 = getelementptr inbounds %class.GrTextBlobCache, %class.GrTextBlobCache* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"** %6, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"** %6, align 8
  %8 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %7, null
  br i1 %8, label %62, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %7, i64 -1, i32 1
  %11 = bitcast i32* %10 to i8*
  %12 = bitcast i32* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %61, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %7, i64 %13
  br label %17

17:                                               ; preds = %59, %15
  %18 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* [ %19, %59 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %18, i64 -1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i64 8
  %21 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %18, i64 -1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i64 16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 4294967294
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = bitcast i8* %20 to %class.sk_sp.102**
  br label %32

28:                                               ; preds = %50, %17
  %29 = phi i64 [ %23, %17 ], [ %52, %50 ]
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %59, label %56

32:                                               ; preds = %50, %26
  %33 = phi i64 [ 0, %26 ], [ %51, %50 ]
  %34 = load %class.sk_sp.102*, %class.sk_sp.102** %27, align 8
  %35 = getelementptr inbounds %class.sk_sp.102, %class.sk_sp.102* %34, i64 %33, i32 0
  %36 = load %class.GrTextBlob*, %class.GrTextBlob** %35, align 8
  %37 = icmp eq %class.GrTextBlob* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %36, i64 0, i32 1
  %40 = getelementptr inbounds %class.SkNVRefCnt.6, %class.SkNVRefCnt.6* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.6, %class.SkNVRefCnt.6* %39, i64 -2
  %45 = bitcast %class.SkNVRefCnt.6* %44 to %class.GrTextBlob*
  %46 = bitcast %class.SkNVRefCnt.6* %44 to void (%class.GrTextBlob*)***
  %47 = load void (%class.GrTextBlob*)**, void (%class.GrTextBlob*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %47, i64 1
  %49 = load void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %48, align 8
  tail call void %49(%class.GrTextBlob* nonnull %45) #8
  br label %50

50:                                               ; preds = %43, %38, %32
  %51 = add nuw nsw i64 %33, 1
  %52 = load i64, i64* %22, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %32, label %28

56:                                               ; preds = %28
  %57 = bitcast i8* %20 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %58) #8
  br label %59

59:                                               ; preds = %56, %28
  %60 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* %19, %7
  br i1 %60, label %61, label %17

61:                                               ; preds = %59, %9
  tail call void @_ZdaPv(i8* %11) #9
  br label %62

62:                                               ; preds = %4, %61
  %63 = getelementptr inbounds %class.GrTextBlobCache, %class.GrTextBlobCache* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusIN15GrTextBlobCache16PurgeBlobMessageEjLb1EE5InboxD2Ev(%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call %class.SkMessageBus* @_ZN12SkMessageBusIN15GrTextBlobCache16PurgeBlobMessageEjLb1EE3GetEv() #8
  %3 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %2, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %2, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %2, i64 0, i32 0, i32 0
  %15 = load %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*** %14, align 8
  %16 = sext i32 %11 to i64
  br label %17

17:                                               ; preds = %13, %34
  %18 = phi i64 [ 0, %13 ], [ %35, %34 ]
  %19 = getelementptr inbounds %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %15, i64 %18
  %20 = load %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %19, align 8
  %21 = icmp eq %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"* %20, %0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = trunc i64 %18 to i32
  %24 = add nsw i32 %11, -1
  store i32 %24, i32* %10, align 4
  %25 = icmp eq i32 %24, %23
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = and i64 %18, 4294967295
  %28 = getelementptr inbounds %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %15, i64 %27
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %15, i64 %29
  %31 = bitcast %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %30 to i64*
  %32 = bitcast %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"** %28 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  br label %37

34:                                               ; preds = %17
  %35 = add nuw nsw i64 %18, 1
  %36 = icmp slt i64 %35, %16
  br i1 %36, label %17, label %37

37:                                               ; preds = %34, %9, %26, %22
  %38 = atomicrmw add i32* %4, i32 1 release
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %41, i32 1) #8
  br label %42

42:                                               ; preds = %37, %40
  %43 = getelementptr inbounds %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %43) #8
  %44 = getelementptr inbounds %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox"* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @_Z7sk_freePv(i8* %50) #8
  br label %51

51:                                               ; preds = %42, %48
  ret void
}

declare %class.SkMessageBus* @_ZN12SkMessageBusIN15GrTextBlobCache16PurgeBlobMessageEjLb1EE3GetEv() local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN17GrThreadSafeCacheD1Ev(%class.GrThreadSafeCache*) unnamed_addr #5

declare void @_ZN15GrTextBlobCacheC1Ej(%class.GrTextBlobCache*, i32) unnamed_addr #2

declare void @_ZN17GrThreadSafeCacheC1Ev(%class.GrThreadSafeCache*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z9sk_ref_spI24GrContextThreadSafeProxyE5sk_spIT_EPS2_: argument 0"}
!5 = distinct !{!5, !"_Z9sk_ref_spI24GrContextThreadSafeProxyE5sk_spIT_EPS2_"}
