; ModuleID = '../../third_party/snappy/src/snappy.cc'
source_filename = "../../third_party/snappy/src/snappy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon.15 = type { %"struct.std::__1::array", [4 x i32], [48 x i8] }
%"struct.std::__1::array" = type { [256 x i16] }
%"struct.std::__1::array.17" = type { [16 x i8] }
%"class.snappy::internal::WorkingMemory" = type { i8*, i64, i16*, i8*, i8* }
%"class.snappy::SnappyDecompressor" = type <{ %"class.snappy::Source"*, i8*, i8*, i8*, i32, i8, [5 x i8], [6 x i8] }>
%"class.snappy::Source" = type { i32 (...)** }
%"class.snappy::Sink" = type { i32 (...)** }
%struct.iovec = type { i8*, i64 }
%"class.snappy::ByteArraySource" = type { %"class.snappy::Source", i8*, i64 }
%"class.snappy::SnappyIOVecWriter" = type { %struct.iovec*, %struct.iovec*, i8*, i64, i64, i64 }
%"class.snappy::SnappyArrayWriter" = type { i8*, i8*, i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.snappy::SnappyDecompressionValidator" = type { i64, i64 }
%"class.snappy::UncheckedByteArraySink" = type { %"class.snappy::Sink", i8* }
%"class.snappy::SnappyScatteredWriter" = type { %"class.snappy::SnappySinkAllocator", %"class.std::__1::vector.6", i64, i64, i8*, i8*, i8*, i8* }
%"class.snappy::SnappySinkAllocator" = type { %"class.snappy::Sink"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"*, %"class.std::__1::__compressed_pair.1" }
%"struct.snappy::SnappySinkAllocator::Datablock" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.snappy::SnappySinkAllocator::Datablock"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i8**, i8**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyIOVecWriterEEEvPT_ = comdat any

$_ZN6snappy20DecompressBranchlessIPcEENSt3__14pairIPKhlEES5_S5_lT_l = comdat any

$_ZN6snappy17SnappyIOVecWriter14AppendFromSelfEmmPPc = comdat any

$_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_28SnappyDecompressionValidatorEEEvPT_ = comdat any

$_ZN6snappy20DecompressBranchlessImEENSt3__14pairIPKhlEES4_S4_lT_l = comdat any

$_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyArrayWriterEEEvPT_ = comdat any

$_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_21SnappyScatteredWriterINS_19SnappySinkAllocatorEEEEEvPT_ = comdat any

$_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm = comdat any

$_ZN6snappy19SnappySinkAllocator7DeleterEPvPKcm = comdat any

@_ZZN6snappyL18LeftShiftOverflowsEhjE5masks = internal unnamed_addr constant [32 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\C0\E0\F0\F8\FC\FE", align 16
@_ZTVN6snappy15ByteArraySourceE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN6snappy22UncheckedByteArraySinkE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZN6snappy12_GLOBAL__N_15tableE = internal unnamed_addr constant %struct.anon.15 { %"struct.std::__1::array" { [256 x i16] [i16 -255, i16 4, i16 1, i16 255, i16 -254, i16 5, i16 2, i16 255, i16 -253, i16 6, i16 3, i16 255, i16 -252, i16 7, i16 4, i16 255, i16 -251, i16 8, i16 5, i16 255, i16 -250, i16 9, i16 6, i16 255, i16 -249, i16 10, i16 7, i16 255, i16 -248, i16 11, i16 8, i16 255, i16 -247, i16 -252, i16 9, i16 255, i16 -246, i16 -251, i16 10, i16 255, i16 -245, i16 -250, i16 11, i16 255, i16 -244, i16 -249, i16 12, i16 255, i16 -243, i16 -248, i16 13, i16 255, i16 -242, i16 -247, i16 14, i16 255, i16 -241, i16 -246, i16 15, i16 255, i16 -240, i16 -245, i16 16, i16 255, i16 -239, i16 -508, i16 17, i16 255, i16 -238, i16 -507, i16 18, i16 255, i16 -237, i16 -506, i16 19, i16 255, i16 -236, i16 -505, i16 20, i16 255, i16 -235, i16 -504, i16 21, i16 255, i16 -234, i16 -503, i16 22, i16 255, i16 -233, i16 -502, i16 23, i16 255, i16 -232, i16 -501, i16 24, i16 255, i16 -231, i16 -764, i16 25, i16 255, i16 -230, i16 -763, i16 26, i16 255, i16 -229, i16 -762, i16 27, i16 255, i16 -228, i16 -761, i16 28, i16 255, i16 -227, i16 -760, i16 29, i16 255, i16 -226, i16 -759, i16 30, i16 255, i16 -225, i16 -758, i16 31, i16 255, i16 -224, i16 -757, i16 32, i16 255, i16 -223, i16 -1020, i16 33, i16 255, i16 -222, i16 -1019, i16 34, i16 255, i16 -221, i16 -1018, i16 35, i16 255, i16 -220, i16 -1017, i16 36, i16 255, i16 -219, i16 -1016, i16 37, i16 255, i16 -218, i16 -1015, i16 38, i16 255, i16 -217, i16 -1014, i16 39, i16 255, i16 -216, i16 -1013, i16 40, i16 255, i16 -215, i16 -1276, i16 41, i16 255, i16 -214, i16 -1275, i16 42, i16 255, i16 -213, i16 -1274, i16 43, i16 255, i16 -212, i16 -1273, i16 44, i16 255, i16 -211, i16 -1272, i16 45, i16 255, i16 -210, i16 -1271, i16 46, i16 255, i16 -209, i16 -1270, i16 47, i16 255, i16 -208, i16 -1269, i16 48, i16 255, i16 -207, i16 -1532, i16 49, i16 255, i16 -206, i16 -1531, i16 50, i16 255, i16 -205, i16 -1530, i16 51, i16 255, i16 -204, i16 -1529, i16 52, i16 255, i16 -203, i16 -1528, i16 53, i16 255, i16 -202, i16 -1527, i16 54, i16 255, i16 -201, i16 -1526, i16 55, i16 255, i16 -200, i16 -1525, i16 56, i16 255, i16 -199, i16 -1788, i16 57, i16 255, i16 -198, i16 -1787, i16 58, i16 255, i16 -197, i16 -1786, i16 59, i16 255, i16 -196, i16 -1785, i16 60, i16 255, i16 255, i16 -1784, i16 61, i16 255, i16 255, i16 -1783, i16 62, i16 255, i16 255, i16 -1782, i16 63, i16 255, i16 255, i16 -1781, i16 64, i16 255] }, [4 x i32] [i32 0, i32 255, i32 65535, i32 0], [48 x i8] undef }, align 64
@_ZZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes = internal unnamed_addr global %"struct.std::__1::array.17" zeroinitializer, align 16
@_ZGVZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes = internal global i64 0, align 8

@_ZN6snappy8internal13WorkingMemoryC1Em = hidden unnamed_addr alias void (%"class.snappy::internal::WorkingMemory"*, i64), void (%"class.snappy::internal::WorkingMemory"*, i64)* @_ZN6snappy8internal13WorkingMemoryC2Em
@_ZN6snappy8internal13WorkingMemoryD1Ev = hidden unnamed_addr alias void (%"class.snappy::internal::WorkingMemory"*), void (%"class.snappy::internal::WorkingMemory"*)* @_ZN6snappy8internal13WorkingMemoryD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6snappy19MaxCompressedLengthEm(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, 32
  %3 = udiv i64 %0, 6
  %4 = add i64 %2, %3
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy21GetUncompressedLengthEPKcmPm(i8* readonly, i64, i64* nocapture) local_unnamed_addr #1 {
  %4 = icmp sgt i64 %1, 0
  br i1 %4, label %5, label %56

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = load i8, i8* %0, align 1
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i8 %7, -1
  br i1 %10, label %50, label %11

11:                                               ; preds = %5
  %12 = icmp sgt i64 %1, 1
  br i1 %12, label %13, label %56

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  %15 = load i8, i8* %6, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 7
  %18 = and i32 %17, 16256
  %19 = or i32 %18, %9
  %20 = icmp sgt i8 %15, -1
  br i1 %20, label %50, label %21

21:                                               ; preds = %13
  %22 = icmp sgt i64 %1, 2
  br i1 %22, label %23, label %56

23:                                               ; preds = %21
  %24 = getelementptr inbounds i8, i8* %0, i64 3
  %25 = load i8, i8* %14, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 14
  %28 = and i32 %27, 2080768
  %29 = or i32 %28, %19
  %30 = icmp sgt i8 %25, -1
  br i1 %30, label %50, label %31

31:                                               ; preds = %23
  %32 = icmp sgt i64 %1, 3
  br i1 %32, label %33, label %56

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %0, i64 4
  %35 = load i8, i8* %24, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 21
  %38 = and i32 %37, 266338304
  %39 = or i32 %38, %29
  %40 = icmp sgt i8 %35, -1
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = icmp sgt i64 %1, 4
  br i1 %42, label %43, label %56

43:                                               ; preds = %41
  %44 = getelementptr inbounds i8, i8* %0, i64 5
  %45 = load i8, i8* %34, align 1
  %46 = zext i8 %45 to i32
  %47 = shl i32 %46, 28
  %48 = or i32 %47, %39
  %49 = icmp ult i8 %45, 16
  br i1 %49, label %50, label %56

50:                                               ; preds = %5, %13, %23, %33, %43
  %51 = phi i8* [ %6, %5 ], [ %14, %13 ], [ %24, %23 ], [ %34, %33 ], [ %44, %43 ]
  %52 = phi i32 [ %9, %5 ], [ %19, %13 ], [ %29, %23 ], [ %39, %33 ], [ %48, %43 ]
  %53 = icmp eq i8* %51, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = zext i32 %52 to i64
  store i64 %55, i64* %2, align 8
  br label %56

56:                                               ; preds = %43, %41, %31, %21, %11, %3, %50, %54
  %57 = phi i1 [ true, %54 ], [ false, %50 ], [ false, %3 ], [ false, %11 ], [ false, %21 ], [ false, %31 ], [ false, %41 ], [ false, %43 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy8internal13WorkingMemoryC2Em(%"class.snappy::internal::WorkingMemory"* nocapture, i64) unnamed_addr #1 align 2 {
  %3 = icmp ult i64 %1, 65536
  %4 = select i1 %3, i64 %1, i64 65536
  %5 = trunc i64 %4 to i32
  %6 = icmp ugt i32 %5, 16384
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = icmp ult i32 %5, 256
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = add nsw i32 %5, -1
  %11 = tail call i32 @llvm.ctlz.i32(i32 %10, i1 true) #14, !range !2
  %12 = xor i32 %11, 31
  %13 = shl i32 2, %12
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 1
  br label %16

16:                                               ; preds = %2, %7, %9
  %17 = phi i64 [ %15, %9 ], [ 32768, %2 ], [ 512, %7 ]
  %18 = udiv i64 %4, 6
  %19 = shl nuw nsw i64 %4, 1
  %20 = add nuw nsw i64 %18, 32
  %21 = add nuw nsw i64 %20, %19
  %22 = add nsw i64 %21, %17
  %23 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 1
  store i64 %22, i64* %23, align 8
  %24 = tail call i8* @_Znwm(i64 %22) #15
  %25 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 2
  %28 = bitcast i16** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 %17
  %30 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 3
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %4
  %32 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 4
  store i8* %31, i8** %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy8internal13WorkingMemoryD2Ev(%"class.snappy::internal::WorkingMemory"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6snappy8internal13WorkingMemory12GetHashTableEmPi(%"class.snappy::internal::WorkingMemory"* nocapture readonly, i64, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = trunc i64 %1 to i32
  %5 = icmp ugt i32 %4, 16384
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = icmp ult i32 %4, 256
  br i1 %7, label %13, label %8

8:                                                ; preds = %6
  %9 = add nsw i32 %4, -1
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 true) #14, !range !2
  %11 = xor i32 %10, 31
  %12 = shl i32 2, %11
  br label %13

13:                                               ; preds = %3, %6, %8
  %14 = phi i32 [ %12, %8 ], [ 16384, %3 ], [ 256, %6 ]
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.snappy::internal::WorkingMemory", %"class.snappy::internal::WorkingMemory"* %0, i64 0, i32 2
  %17 = bitcast i16** %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = shl nuw nsw i64 %15, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %18, i8 0, i64 %19, i1 false)
  store i32 %14, i32* %2, align 4
  %20 = load i16*, i16** %16, align 8
  ret i16* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6snappy8internal16CompressFragmentEPKcmPcPti(i8*, i64, i8*, i16* nocapture, i32) local_unnamed_addr #1 {
  %6 = add nsw i32 %4, -1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = icmp ugt i64 %1, 14
  br i1 %8, label %9, label %666, !prof !3

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %7, i64 -15
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %17, %13
  %19 = getelementptr inbounds i8, i8* %0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %18, %22
  %24 = getelementptr inbounds i8, i8* %0, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = or i32 %23, %27
  %29 = ptrtoint i8* %10 to i64
  %30 = ptrtoint i8* %0 to i64
  %31 = getelementptr inbounds i8, i8* %7, i64 -16
  %32 = getelementptr inbounds i8, i8* %7, i64 -8
  br label %33

33:                                               ; preds = %655, %9
  %34 = phi i8 [ %25, %9 ], [ %665, %655 ]
  %35 = phi i8 [ %20, %9 ], [ %663, %655 ]
  %36 = phi i8 [ %15, %9 ], [ %661, %655 ]
  %37 = phi i8 [ %12, %9 ], [ %659, %655 ]
  %38 = phi i32 [ %28, %9 ], [ %657, %655 ]
  %39 = phi i8* [ %0, %9 ], [ %597, %655 ]
  %40 = phi i8* [ %2, %9 ], [ %599, %655 ]
  %41 = getelementptr inbounds i8, i8* %39, i64 1
  %42 = zext i8 %37 to i64
  %43 = getelementptr inbounds i8, i8* %39, i64 2
  %44 = zext i8 %36 to i64
  %45 = shl nuw nsw i64 %44, 8
  %46 = or i64 %45, %42
  %47 = getelementptr inbounds i8, i8* %39, i64 3
  %48 = zext i8 %35 to i64
  %49 = shl nuw nsw i64 %48, 16
  %50 = or i64 %46, %49
  %51 = getelementptr inbounds i8, i8* %39, i64 4
  %52 = zext i8 %34 to i64
  %53 = shl nuw nsw i64 %52, 24
  %54 = or i64 %50, %53
  %55 = getelementptr inbounds i8, i8* %39, i64 5
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = shl nuw nsw i64 %57, 32
  %59 = or i64 %54, %58
  %60 = getelementptr inbounds i8, i8* %39, i64 6
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 40
  %64 = or i64 %59, %63
  %65 = getelementptr inbounds i8, i8* %39, i64 7
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 48
  %69 = or i64 %64, %68
  %70 = getelementptr inbounds i8, i8* %39, i64 8
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw i64 %72, 56
  %74 = or i64 %69, %73
  %75 = ptrtoint i8* %41 to i64
  %76 = sub i64 %29, %75
  %77 = icmp sgt i64 %76, 15
  br i1 %77, label %78, label %197

78:                                               ; preds = %33
  %79 = sub i64 %75, %30
  br label %80

80:                                               ; preds = %777, %78
  %81 = phi i64 [ 0, %78 ], [ %816, %777 ]
  %82 = phi i64 [ %74, %78 ], [ %815, %777 ]
  %83 = shl nsw i64 %81, 2
  %84 = icmp eq i64 %81, 0
  %85 = trunc i64 %82 to i32
  %86 = select i1 %84, i32 %38, i32 %85
  %87 = mul i32 %86, 506832829
  %88 = lshr i32 %87, 18
  %89 = and i32 %88, %6
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %3, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i64
  %94 = getelementptr inbounds i8, i8* %0, i64 %93
  %95 = add nsw i64 %79, %83
  %96 = trunc i64 %95 to i16
  store i16 %96, i16* %91, align 2
  %97 = load i8, i8* %94, align 1
  %98 = zext i8 %97 to i32
  %99 = getelementptr inbounds i8, i8* %94, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 8
  %103 = or i32 %102, %98
  %104 = getelementptr inbounds i8, i8* %94, i64 2
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw nsw i32 %106, 16
  %108 = or i32 %103, %107
  %109 = getelementptr inbounds i8, i8* %94, i64 3
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = shl nuw i32 %111, 24
  %113 = or i32 %108, %112
  %114 = icmp eq i32 %113, %86
  br i1 %114, label %149, label %117, !prof !4

115:                                              ; preds = %777
  %116 = getelementptr inbounds i8, i8* %39, i64 17
  br label %197

117:                                              ; preds = %80
  %118 = lshr i64 %82, 8
  %119 = or i64 %83, 1
  %120 = trunc i64 %118 to i32
  %121 = mul i32 %120, 506832829
  %122 = lshr i32 %121, 18
  %123 = and i32 %122, %6
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i16, i16* %3, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds i8, i8* %0, i64 %127
  %129 = add nsw i64 %79, %119
  %130 = trunc i64 %129 to i16
  store i16 %130, i16* %125, align 2
  %131 = load i8, i8* %128, align 1
  %132 = zext i8 %131 to i32
  %133 = getelementptr inbounds i8, i8* %128, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 8
  %137 = or i32 %136, %132
  %138 = getelementptr inbounds i8, i8* %128, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = shl nuw nsw i32 %140, 16
  %142 = or i32 %137, %141
  %143 = getelementptr inbounds i8, i8* %128, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = shl nuw i32 %145, 24
  %147 = or i32 %142, %146
  %148 = icmp eq i32 %147, %120
  br i1 %148, label %149, label %713, !prof !4

149:                                              ; preds = %745, %713, %117, %80
  %150 = phi i64 [ %82, %80 ], [ %118, %117 ], [ %714, %713 ], [ %746, %745 ]
  %151 = phi i64 [ %83, %80 ], [ %119, %117 ], [ %715, %713 ], [ %747, %745 ]
  %152 = phi i8* [ %94, %80 ], [ %128, %117 ], [ %724, %713 ], [ %756, %745 ]
  %153 = and i64 %151, 4294967295
  %154 = trunc i64 %151 to i8
  %155 = shl i8 %154, 2
  store i8 %155, i8* %40, align 1
  %156 = getelementptr inbounds i8, i8* %40, i64 1
  %157 = load i8, i8* %39, align 1
  %158 = load i8, i8* %41, align 1
  %159 = load i8, i8* %43, align 1
  %160 = load i8, i8* %47, align 1
  %161 = load i8, i8* %51, align 1
  %162 = load i8, i8* %55, align 1
  %163 = load i8, i8* %60, align 1
  %164 = load i8, i8* %65, align 1
  %165 = load i8, i8* %70, align 1
  %166 = getelementptr inbounds i8, i8* %39, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = getelementptr inbounds i8, i8* %39, i64 10
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %39, i64 11
  %171 = load i8, i8* %170, align 1
  %172 = getelementptr inbounds i8, i8* %39, i64 12
  %173 = load i8, i8* %172, align 1
  %174 = getelementptr inbounds i8, i8* %39, i64 13
  %175 = load i8, i8* %174, align 1
  %176 = getelementptr inbounds i8, i8* %39, i64 14
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds i8, i8* %39, i64 15
  %179 = load i8, i8* %178, align 1
  store i8 %157, i8* %156, align 1
  %180 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 %158, i8* %180, align 1
  %181 = getelementptr inbounds i8, i8* %40, i64 3
  store i8 %159, i8* %181, align 1
  %182 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 %160, i8* %182, align 1
  %183 = getelementptr inbounds i8, i8* %40, i64 5
  store i8 %161, i8* %183, align 1
  %184 = getelementptr inbounds i8, i8* %40, i64 6
  store i8 %162, i8* %184, align 1
  %185 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 %163, i8* %185, align 1
  %186 = getelementptr inbounds i8, i8* %40, i64 8
  store i8 %164, i8* %186, align 1
  %187 = getelementptr inbounds i8, i8* %40, i64 9
  store i8 %165, i8* %187, align 1
  %188 = getelementptr inbounds i8, i8* %40, i64 10
  store i8 %167, i8* %188, align 1
  %189 = getelementptr inbounds i8, i8* %40, i64 11
  store i8 %169, i8* %189, align 1
  %190 = getelementptr inbounds i8, i8* %40, i64 12
  store i8 %171, i8* %190, align 1
  %191 = getelementptr inbounds i8, i8* %40, i64 13
  store i8 %173, i8* %191, align 1
  %192 = getelementptr inbounds i8, i8* %40, i64 14
  store i8 %175, i8* %192, align 1
  %193 = getelementptr inbounds i8, i8* %40, i64 15
  store i8 %177, i8* %193, align 1
  %194 = getelementptr inbounds i8, i8* %40, i64 16
  store i8 %179, i8* %194, align 1
  %195 = getelementptr inbounds i8, i8* %41, i64 %153
  %196 = getelementptr inbounds i8, i8* %180, i64 %153
  br label %349

197:                                              ; preds = %115, %33
  %198 = phi i64 [ %74, %33 ], [ %815, %115 ]
  %199 = phi i32 [ 33, %33 ], [ 49, %115 ]
  %200 = phi i8* [ %41, %33 ], [ %116, %115 ]
  %201 = getelementptr inbounds i8, i8* %200, i64 1
  %202 = icmp ugt i8* %201, %10
  br i1 %202, label %666, label %203, !prof !4

203:                                              ; preds = %197, %238
  %204 = phi i8* [ %259, %238 ], [ %201, %197 ]
  %205 = phi i32 [ %257, %238 ], [ %199, %197 ]
  %206 = phi i64 [ %255, %238 ], [ %198, %197 ]
  %207 = phi i8* [ %204, %238 ], [ %200, %197 ]
  %208 = trunc i64 %206 to i32
  %209 = mul i32 %208, 506832829
  %210 = lshr i32 %209, 18
  %211 = and i32 %210, %6
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds i16, i16* %3, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i64
  %216 = getelementptr inbounds i8, i8* %0, i64 %215
  %217 = ptrtoint i8* %207 to i64
  %218 = sub i64 %217, %30
  %219 = trunc i64 %218 to i16
  store i16 %219, i16* %213, align 2
  %220 = load i8, i8* %216, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds i8, i8* %216, i64 1
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = shl nuw nsw i32 %224, 8
  %226 = or i32 %225, %221
  %227 = getelementptr inbounds i8, i8* %216, i64 2
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = shl nuw nsw i32 %229, 16
  %231 = or i32 %226, %230
  %232 = getelementptr inbounds i8, i8* %216, i64 3
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = shl nuw i32 %234, 24
  %236 = or i32 %231, %235
  %237 = icmp eq i32 %236, %208
  br i1 %237, label %261, label %238, !prof !4

238:                                              ; preds = %203
  %239 = load i8, i8* %204, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds i8, i8* %204, i64 1
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i64
  %244 = shl nuw nsw i64 %243, 8
  %245 = or i64 %244, %240
  %246 = getelementptr inbounds i8, i8* %204, i64 2
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = shl nuw nsw i64 %248, 16
  %250 = or i64 %245, %249
  %251 = getelementptr inbounds i8, i8* %204, i64 3
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = shl nuw nsw i64 %253, 24
  %255 = or i64 %250, %254
  %256 = lshr i32 %205, 5
  %257 = add i32 %256, %205
  %258 = zext i32 %256 to i64
  %259 = getelementptr inbounds i8, i8* %204, i64 %258
  %260 = icmp ugt i8* %259, %10
  br i1 %260, label %666, label %203, !prof !4

261:                                              ; preds = %203
  %262 = ptrtoint i8* %207 to i64
  %263 = ptrtoint i8* %39 to i64
  %264 = sub i64 %262, %263
  %265 = trunc i64 %264 to i32
  %266 = add nsw i32 %265, -1
  %267 = icmp slt i32 %265, 17
  br i1 %267, label %268, label %313

268:                                              ; preds = %261
  %269 = trunc i32 %266 to i8
  %270 = shl i8 %269, 2
  %271 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %270, i8* %40, align 1
  %272 = load i8, i8* %39, align 1
  %273 = load i8, i8* %41, align 1
  %274 = load i8, i8* %43, align 1
  %275 = load i8, i8* %47, align 1
  %276 = load i8, i8* %51, align 1
  %277 = load i8, i8* %55, align 1
  %278 = load i8, i8* %60, align 1
  %279 = load i8, i8* %65, align 1
  %280 = load i8, i8* %70, align 1
  %281 = getelementptr inbounds i8, i8* %39, i64 9
  %282 = load i8, i8* %281, align 1
  %283 = getelementptr inbounds i8, i8* %39, i64 10
  %284 = load i8, i8* %283, align 1
  %285 = getelementptr inbounds i8, i8* %39, i64 11
  %286 = load i8, i8* %285, align 1
  %287 = getelementptr inbounds i8, i8* %39, i64 12
  %288 = load i8, i8* %287, align 1
  %289 = getelementptr inbounds i8, i8* %39, i64 13
  %290 = load i8, i8* %289, align 1
  %291 = getelementptr inbounds i8, i8* %39, i64 14
  %292 = load i8, i8* %291, align 1
  %293 = getelementptr inbounds i8, i8* %39, i64 15
  %294 = load i8, i8* %293, align 1
  store i8 %272, i8* %271, align 1
  %295 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 %273, i8* %295, align 1
  %296 = getelementptr inbounds i8, i8* %40, i64 3
  store i8 %274, i8* %296, align 1
  %297 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 %275, i8* %297, align 1
  %298 = getelementptr inbounds i8, i8* %40, i64 5
  store i8 %276, i8* %298, align 1
  %299 = getelementptr inbounds i8, i8* %40, i64 6
  store i8 %277, i8* %299, align 1
  %300 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 %278, i8* %300, align 1
  %301 = getelementptr inbounds i8, i8* %40, i64 8
  store i8 %279, i8* %301, align 1
  %302 = getelementptr inbounds i8, i8* %40, i64 9
  store i8 %280, i8* %302, align 1
  %303 = getelementptr inbounds i8, i8* %40, i64 10
  store i8 %282, i8* %303, align 1
  %304 = getelementptr inbounds i8, i8* %40, i64 11
  store i8 %284, i8* %304, align 1
  %305 = getelementptr inbounds i8, i8* %40, i64 12
  store i8 %286, i8* %305, align 1
  %306 = getelementptr inbounds i8, i8* %40, i64 13
  store i8 %288, i8* %306, align 1
  %307 = getelementptr inbounds i8, i8* %40, i64 14
  store i8 %290, i8* %307, align 1
  %308 = getelementptr inbounds i8, i8* %40, i64 15
  store i8 %292, i8* %308, align 1
  %309 = getelementptr inbounds i8, i8* %40, i64 16
  store i8 %294, i8* %309, align 1
  %310 = shl i64 %264, 32
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i8, i8* %271, i64 %311
  br label %349

313:                                              ; preds = %261
  %314 = icmp slt i32 %265, 61
  br i1 %314, label %315, label %319

315:                                              ; preds = %313
  %316 = trunc i32 %266 to i8
  %317 = shl i8 %316, 2
  %318 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %317, i8* %40, align 1
  br label %344

319:                                              ; preds = %313
  %320 = icmp eq i32 %266, 0
  br i1 %320, label %325, label %321

321:                                              ; preds = %319
  %322 = tail call i32 @llvm.ctlz.i32(i32 %266, i1 true) #14, !range !2
  %323 = lshr i32 %322, 3
  %324 = xor i32 %323, 3
  br label %325

325:                                              ; preds = %321, %319
  %326 = phi i32 [ %324, %321 ], [ -1, %319 ]
  %327 = add nsw i32 %326, 1
  %328 = trunc i32 %326 to i8
  %329 = shl i8 %328, 2
  %330 = add i8 %329, -16
  %331 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %330, i8* %40, align 1
  %332 = trunc i32 %266 to i8
  store i8 %332, i8* %331, align 1
  %333 = lshr i32 %266, 8
  %334 = trunc i32 %333 to i8
  %335 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 %334, i8* %335, align 1
  %336 = lshr i32 %266, 16
  %337 = trunc i32 %336 to i8
  %338 = getelementptr inbounds i8, i8* %40, i64 3
  store i8 %337, i8* %338, align 1
  %339 = lshr i32 %266, 24
  %340 = trunc i32 %339 to i8
  %341 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 %340, i8* %341, align 1
  %342 = sext i32 %327 to i64
  %343 = getelementptr inbounds i8, i8* %331, i64 %342
  br label %344

344:                                              ; preds = %325, %315
  %345 = phi i8* [ %318, %315 ], [ %343, %325 ]
  %346 = shl i64 %264, 32
  %347 = ashr exact i64 %346, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %345, i8* align 1 %39, i64 %347, i1 false) #14
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  br label %349

349:                                              ; preds = %344, %268, %149
  %350 = phi i64 [ %206, %344 ], [ %206, %268 ], [ %150, %149 ]
  %351 = phi i8* [ %216, %344 ], [ %216, %268 ], [ %152, %149 ]
  %352 = phi i8* [ %207, %344 ], [ %207, %268 ], [ %195, %149 ]
  %353 = phi i8* [ %348, %344 ], [ %312, %268 ], [ %196, %149 ]
  br label %354

354:                                              ; preds = %349, %601
  %355 = phi i64 [ %598, %601 ], [ %350, %349 ]
  %356 = phi i8* [ %636, %601 ], [ %351, %349 ]
  %357 = phi i8* [ %597, %601 ], [ %352, %349 ]
  %358 = phi i8* [ %599, %601 ], [ %353, %349 ]
  %359 = getelementptr inbounds i8, i8* %356, i64 4
  %360 = getelementptr inbounds i8, i8* %357, i64 4
  %361 = icmp ult i8* %31, %360
  br i1 %361, label %385, label %362, !prof !4

362:                                              ; preds = %354
  %363 = bitcast i8* %359 to i64*
  %364 = load i64, i64* %363, align 1
  %365 = bitcast i8* %360 to i64*
  %366 = load i64, i64* %365, align 1
  %367 = icmp eq i64 %364, %366
  br i1 %367, label %368, label %370, !prof !4

368:                                              ; preds = %362
  %369 = getelementptr inbounds i8, i8* %357, i64 12
  br label %385

370:                                              ; preds = %362
  %371 = xor i64 %366, %364
  %372 = tail call i64 @llvm.cttz.i64(i64 %371, i1 true) #14, !range !5
  %373 = lshr i64 %372, 3
  %374 = getelementptr inbounds i8, i8* %357, i64 8
  %375 = bitcast i8* %374 to i64*
  %376 = load i64, i64* %375, align 1
  %377 = tail call i64 asm "testl ${2:k}, ${2:k}\0A\09cmovzq $1, $0\0A\09", "=r,r,r,0,~{dirflag},~{fpsr},~{flags}"(i64 %376, i64 %371, i64 %366) #16, !srcloc !6
  %378 = and i64 %372, 24
  %379 = lshr i64 %377, %378
  %380 = add nuw nsw i64 %373, 4
  %381 = getelementptr inbounds i8, i8* %357, i64 %380
  %382 = ptrtoint i8* %357 to i64
  %383 = ptrtoint i8* %356 to i64
  %384 = sub i64 %382, %383
  br label %454

385:                                              ; preds = %368, %354
  %386 = phi i64 [ 0, %354 ], [ 8, %368 ]
  %387 = phi i8* [ %360, %354 ], [ %369, %368 ]
  %388 = icmp ugt i8* %387, %31
  br i1 %388, label %389, label %393, !prof !4

389:                                              ; preds = %418, %385
  %390 = phi i64 [ %386, %385 ], [ %420, %418 ]
  %391 = phi i8* [ %387, %385 ], [ %419, %418 ]
  %392 = icmp ult i8* %391, %7
  br i1 %392, label %422, label %438, !prof !3

393:                                              ; preds = %385, %418
  %394 = phi i8* [ %419, %418 ], [ %387, %385 ]
  %395 = phi i64 [ %420, %418 ], [ %386, %385 ]
  %396 = getelementptr inbounds i8, i8* %359, i64 %395
  %397 = bitcast i8* %396 to i64*
  %398 = load i64, i64* %397, align 1
  %399 = bitcast i8* %394 to i64*
  %400 = load i64, i64* %399, align 1
  %401 = icmp eq i64 %398, %400
  br i1 %401, label %418, label %402

402:                                              ; preds = %393
  %403 = xor i64 %400, %398
  %404 = tail call i64 @llvm.cttz.i64(i64 %403, i1 true) #14, !range !5
  %405 = lshr i64 %404, 3
  %406 = getelementptr inbounds i8, i8* %394, i64 4
  %407 = bitcast i8* %406 to i64*
  %408 = load i64, i64* %407, align 1
  %409 = tail call i64 asm "testl ${2:k}, ${2:k}\0A\09cmovzq $1, $0\0A\09", "=r,r,r,0,~{dirflag},~{fpsr},~{flags}"(i64 %408, i64 %403, i64 %400) #16, !srcloc !7
  %410 = and i64 %404, 24
  %411 = lshr i64 %409, %410
  %412 = or i64 %405, %395
  %413 = add i64 %412, 4
  %414 = getelementptr inbounds i8, i8* %357, i64 %413
  %415 = ptrtoint i8* %357 to i64
  %416 = ptrtoint i8* %356 to i64
  %417 = sub i64 %415, %416
  br label %482

418:                                              ; preds = %393
  %419 = getelementptr inbounds i8, i8* %394, i64 8
  %420 = add i64 %395, 8
  %421 = icmp ugt i8* %419, %31
  br i1 %421, label %389, label %393, !prof !4

422:                                              ; preds = %389, %429
  %423 = phi i8* [ %430, %429 ], [ %391, %389 ]
  %424 = phi i64 [ %431, %429 ], [ %390, %389 ]
  %425 = getelementptr inbounds i8, i8* %359, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = load i8, i8* %423, align 1
  %428 = icmp eq i8 %426, %427
  br i1 %428, label %429, label %433

429:                                              ; preds = %422
  %430 = getelementptr inbounds i8, i8* %423, i64 1
  %431 = add i64 %424, 1
  %432 = icmp eq i8* %430, %7
  br i1 %432, label %438, label %422, !prof !4

433:                                              ; preds = %422
  %434 = icmp ugt i8* %423, %32
  br i1 %434, label %446, label %435

435:                                              ; preds = %433
  %436 = bitcast i8* %423 to i64*
  %437 = load i64, i64* %436, align 1
  br label %446

438:                                              ; preds = %429, %389
  %439 = phi i64 [ %390, %389 ], [ %431, %429 ]
  %440 = icmp ult i64 %439, 8
  %441 = add i64 %439, 4
  %442 = getelementptr inbounds i8, i8* %357, i64 %441
  %443 = ptrtoint i8* %357 to i64
  %444 = ptrtoint i8* %356 to i64
  %445 = sub i64 %443, %444
  br i1 %440, label %454, label %482

446:                                              ; preds = %433, %435
  %447 = phi i64 [ %355, %433 ], [ %437, %435 ]
  %448 = icmp ult i64 %424, 8
  %449 = add i64 %424, 4
  %450 = getelementptr inbounds i8, i8* %357, i64 %449
  %451 = ptrtoint i8* %357 to i64
  %452 = ptrtoint i8* %356 to i64
  %453 = sub i64 %451, %452
  br i1 %448, label %454, label %482

454:                                              ; preds = %438, %370, %446
  %455 = phi i64 [ %384, %370 ], [ %453, %446 ], [ %445, %438 ]
  %456 = phi i8* [ %381, %370 ], [ %450, %446 ], [ %442, %438 ]
  %457 = phi i64 [ %380, %370 ], [ %449, %446 ], [ %441, %438 ]
  %458 = phi i64 [ %379, %370 ], [ %447, %446 ], [ %355, %438 ]
  %459 = shl i64 %457, 2
  %460 = shl i64 %455, 8
  %461 = add i64 %459, %460
  %462 = trunc i64 %461 to i32
  %463 = lshr i64 %455, 3
  %464 = trunc i64 %463 to i32
  %465 = and i32 %464, 224
  %466 = add nsw i32 %465, -15
  %467 = icmp ult i64 %455, 2048
  %468 = select i1 %467, i32 %466, i32 -2
  %469 = add i32 %468, %462
  %470 = trunc i32 %469 to i8
  store i8 %470, i8* %358, align 1
  %471 = lshr i32 %469, 8
  %472 = trunc i32 %471 to i8
  %473 = getelementptr inbounds i8, i8* %358, i64 1
  store i8 %472, i8* %473, align 1
  %474 = lshr i32 %469, 16
  %475 = trunc i32 %474 to i8
  %476 = getelementptr inbounds i8, i8* %358, i64 2
  store i8 %475, i8* %476, align 1
  %477 = lshr i32 %469, 24
  %478 = trunc i32 %477 to i8
  %479 = getelementptr inbounds i8, i8* %358, i64 3
  store i8 %478, i8* %479, align 1
  %480 = select i1 %467, i64 2, i64 3
  %481 = getelementptr inbounds i8, i8* %358, i64 %480
  br label %596

482:                                              ; preds = %438, %402, %446
  %483 = phi i64 [ %417, %402 ], [ %453, %446 ], [ %445, %438 ]
  %484 = phi i8* [ %414, %402 ], [ %450, %446 ], [ %442, %438 ]
  %485 = phi i64 [ %413, %402 ], [ %449, %446 ], [ %441, %438 ]
  %486 = phi i64 [ %412, %402 ], [ %424, %446 ], [ %439, %438 ]
  %487 = phi i64 [ %411, %402 ], [ %447, %446 ], [ %355, %438 ]
  %488 = icmp ugt i64 %485, 67
  br i1 %488, label %489, label %538, !prof !4

489:                                              ; preds = %482
  %490 = trunc i64 %483 to i8
  %491 = lshr i64 %483, 8
  %492 = trunc i64 %491 to i8
  %493 = lshr i64 %483, 16
  %494 = trunc i64 %493 to i8
  %495 = add i64 %486, -64
  %496 = add i64 %485, -68
  %497 = lshr i64 %496, 6
  %498 = add nuw nsw i64 %497, 1
  %499 = and i64 %498, 3
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %511, label %501

501:                                              ; preds = %489, %501
  %502 = phi i64 [ %508, %501 ], [ %485, %489 ]
  %503 = phi i8* [ %507, %501 ], [ %358, %489 ]
  %504 = phi i64 [ %509, %501 ], [ %499, %489 ]
  store i8 -2, i8* %503, align 1
  %505 = getelementptr inbounds i8, i8* %503, i64 1
  store i8 %490, i8* %505, align 1
  %506 = getelementptr inbounds i8, i8* %503, i64 2
  store i8 %492, i8* %506, align 1
  %507 = getelementptr inbounds i8, i8* %503, i64 3
  store i8 %494, i8* %507, align 1
  %508 = add i64 %502, -64
  %509 = add i64 %504, -1
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %501, !llvm.loop !8

511:                                              ; preds = %501, %489
  %512 = phi i64 [ %485, %489 ], [ %508, %501 ]
  %513 = phi i8* [ %358, %489 ], [ %507, %501 ]
  %514 = phi i8* [ undef, %489 ], [ %507, %501 ]
  %515 = icmp ult i64 %496, 192
  br i1 %515, label %533, label %516

516:                                              ; preds = %511, %516
  %517 = phi i64 [ %531, %516 ], [ %512, %511 ]
  %518 = phi i8* [ %530, %516 ], [ %513, %511 ]
  store i8 -2, i8* %518, align 1
  %519 = getelementptr inbounds i8, i8* %518, i64 1
  store i8 %490, i8* %519, align 1
  %520 = getelementptr inbounds i8, i8* %518, i64 2
  store i8 %492, i8* %520, align 1
  %521 = getelementptr inbounds i8, i8* %518, i64 3
  store i8 -2, i8* %521, align 1
  %522 = getelementptr inbounds i8, i8* %518, i64 4
  store i8 %490, i8* %522, align 1
  %523 = getelementptr inbounds i8, i8* %518, i64 5
  store i8 %492, i8* %523, align 1
  %524 = getelementptr inbounds i8, i8* %518, i64 6
  store i8 -2, i8* %524, align 1
  %525 = getelementptr inbounds i8, i8* %518, i64 7
  store i8 %490, i8* %525, align 1
  %526 = getelementptr inbounds i8, i8* %518, i64 8
  store i8 %492, i8* %526, align 1
  %527 = getelementptr inbounds i8, i8* %518, i64 9
  store i8 -2, i8* %527, align 1
  %528 = getelementptr inbounds i8, i8* %518, i64 10
  store i8 %490, i8* %528, align 1
  %529 = getelementptr inbounds i8, i8* %518, i64 11
  store i8 %492, i8* %529, align 1
  %530 = getelementptr inbounds i8, i8* %518, i64 12
  store i8 %494, i8* %530, align 1
  %531 = add i64 %517, -256
  %532 = icmp ugt i64 %531, 67
  br i1 %532, label %516, label %533, !prof !4

533:                                              ; preds = %516, %511
  %534 = phi i8* [ %514, %511 ], [ %530, %516 ]
  %535 = and i64 %495, -64
  %536 = add i64 %486, -60
  %537 = sub i64 %536, %535
  br label %538

538:                                              ; preds = %533, %482
  %539 = phi i8* [ %358, %482 ], [ %534, %533 ]
  %540 = phi i64 [ %485, %482 ], [ %537, %533 ]
  %541 = icmp ugt i64 %540, 64
  br i1 %541, label %542, label %552

542:                                              ; preds = %538
  store i8 -18, i8* %539, align 1
  %543 = trunc i64 %483 to i8
  %544 = getelementptr inbounds i8, i8* %539, i64 1
  store i8 %543, i8* %544, align 1
  %545 = lshr i64 %483, 8
  %546 = trunc i64 %545 to i8
  %547 = getelementptr inbounds i8, i8* %539, i64 2
  store i8 %546, i8* %547, align 1
  %548 = lshr i64 %483, 16
  %549 = trunc i64 %548 to i8
  %550 = getelementptr inbounds i8, i8* %539, i64 3
  store i8 %549, i8* %550, align 1
  %551 = add nsw i64 %540, -60
  br label %554

552:                                              ; preds = %538
  %553 = icmp ult i64 %540, 12
  br i1 %553, label %554, label %580

554:                                              ; preds = %552, %542
  %555 = phi i64 [ %551, %542 ], [ %540, %552 ]
  %556 = phi i8* [ %550, %542 ], [ %539, %552 ]
  %557 = shl i64 %555, 2
  %558 = shl i64 %483, 8
  %559 = add i64 %557, %558
  %560 = trunc i64 %559 to i32
  %561 = lshr i64 %483, 3
  %562 = trunc i64 %561 to i32
  %563 = and i32 %562, 224
  %564 = add nsw i32 %563, -15
  %565 = icmp ult i64 %483, 2048
  %566 = select i1 %565, i32 %564, i32 -2
  %567 = add i32 %566, %560
  %568 = trunc i32 %567 to i8
  store i8 %568, i8* %556, align 1
  %569 = lshr i32 %567, 8
  %570 = trunc i32 %569 to i8
  %571 = getelementptr inbounds i8, i8* %556, i64 1
  store i8 %570, i8* %571, align 1
  %572 = lshr i32 %567, 16
  %573 = trunc i32 %572 to i8
  %574 = getelementptr inbounds i8, i8* %556, i64 2
  store i8 %573, i8* %574, align 1
  %575 = lshr i32 %567, 24
  %576 = trunc i32 %575 to i8
  %577 = getelementptr inbounds i8, i8* %556, i64 3
  store i8 %576, i8* %577, align 1
  %578 = select i1 %565, i64 2, i64 3
  %579 = getelementptr inbounds i8, i8* %556, i64 %578
  br label %596

580:                                              ; preds = %552
  %581 = shl i64 %540, 2
  %582 = shl i64 %483, 8
  %583 = add i64 %582, 4294967294
  %584 = add i64 %583, %581
  %585 = trunc i64 %584 to i32
  %586 = trunc i64 %584 to i8
  store i8 %586, i8* %539, align 1
  %587 = lshr i32 %585, 8
  %588 = trunc i32 %587 to i8
  %589 = getelementptr inbounds i8, i8* %539, i64 1
  store i8 %588, i8* %589, align 1
  %590 = lshr i32 %585, 16
  %591 = trunc i32 %590 to i8
  %592 = getelementptr inbounds i8, i8* %539, i64 2
  store i8 %591, i8* %592, align 1
  %593 = lshr i32 %585, 24
  %594 = trunc i32 %593 to i8
  %595 = getelementptr inbounds i8, i8* %539, i64 3
  store i8 %594, i8* %595, align 1
  br label %596

596:                                              ; preds = %580, %554, %454
  %597 = phi i8* [ %456, %454 ], [ %484, %554 ], [ %484, %580 ]
  %598 = phi i64 [ %458, %454 ], [ %487, %554 ], [ %487, %580 ]
  %599 = phi i8* [ %481, %454 ], [ %579, %554 ], [ %595, %580 ]
  %600 = icmp ult i8* %597, %10
  br i1 %600, label %601, label %666, !prof !3

601:                                              ; preds = %596
  %602 = ptrtoint i8* %597 to i64
  %603 = sub i64 %602, %30
  %604 = trunc i64 %603 to i16
  %605 = add i16 %604, -1
  %606 = getelementptr inbounds i8, i8* %597, i64 -1
  %607 = load i8, i8* %606, align 1
  %608 = zext i8 %607 to i32
  %609 = load i8, i8* %597, align 1
  %610 = zext i8 %609 to i32
  %611 = shl nuw nsw i32 %610, 8
  %612 = or i32 %611, %608
  %613 = getelementptr inbounds i8, i8* %597, i64 1
  %614 = load i8, i8* %613, align 1
  %615 = zext i8 %614 to i32
  %616 = shl nuw nsw i32 %615, 16
  %617 = or i32 %612, %616
  %618 = getelementptr inbounds i8, i8* %597, i64 2
  %619 = load i8, i8* %618, align 1
  %620 = zext i8 %619 to i32
  %621 = shl nuw i32 %620, 24
  %622 = or i32 %617, %621
  %623 = mul i32 %622, 506832829
  %624 = lshr i32 %623, 18
  %625 = and i32 %624, %6
  %626 = zext i32 %625 to i64
  %627 = getelementptr inbounds i16, i16* %3, i64 %626
  store i16 %605, i16* %627, align 2
  %628 = trunc i64 %598 to i32
  %629 = mul i32 %628, 506832829
  %630 = lshr i32 %629, 18
  %631 = and i32 %630, %6
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds i16, i16* %3, i64 %632
  %634 = load i16, i16* %633, align 2
  %635 = zext i16 %634 to i64
  %636 = getelementptr inbounds i8, i8* %0, i64 %635
  store i16 %604, i16* %633, align 2
  %637 = load i8, i8* %636, align 1
  %638 = zext i8 %637 to i32
  %639 = getelementptr inbounds i8, i8* %636, i64 1
  %640 = load i8, i8* %639, align 1
  %641 = zext i8 %640 to i32
  %642 = shl nuw nsw i32 %641, 8
  %643 = or i32 %642, %638
  %644 = getelementptr inbounds i8, i8* %636, i64 2
  %645 = load i8, i8* %644, align 1
  %646 = zext i8 %645 to i32
  %647 = shl nuw nsw i32 %646, 16
  %648 = or i32 %643, %647
  %649 = getelementptr inbounds i8, i8* %636, i64 3
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  %652 = shl nuw i32 %651, 24
  %653 = or i32 %648, %652
  %654 = icmp eq i32 %653, %628
  br i1 %654, label %354, label %655

655:                                              ; preds = %601
  %656 = lshr i64 %598, 8
  %657 = trunc i64 %656 to i32
  %658 = getelementptr inbounds i8, i8* %597, i64 1
  %659 = load i8, i8* %658, align 1
  %660 = getelementptr inbounds i8, i8* %597, i64 2
  %661 = load i8, i8* %660, align 1
  %662 = getelementptr inbounds i8, i8* %597, i64 3
  %663 = load i8, i8* %662, align 1
  %664 = getelementptr inbounds i8, i8* %597, i64 4
  %665 = load i8, i8* %664, align 1
  br label %33

666:                                              ; preds = %197, %238, %596, %5
  %667 = phi i8* [ %0, %5 ], [ %597, %596 ], [ %39, %238 ], [ %39, %197 ]
  %668 = phi i8* [ %2, %5 ], [ %599, %596 ], [ %40, %238 ], [ %40, %197 ]
  %669 = icmp ult i8* %667, %7
  br i1 %669, label %670, label %711

670:                                              ; preds = %666
  %671 = ptrtoint i8* %7 to i64
  %672 = ptrtoint i8* %667 to i64
  %673 = sub i64 %671, %672
  %674 = trunc i64 %673 to i32
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %674, 61
  br i1 %676, label %677, label %681

677:                                              ; preds = %670
  %678 = trunc i32 %675 to i8
  %679 = shl i8 %678, 2
  %680 = getelementptr inbounds i8, i8* %668, i64 1
  store i8 %679, i8* %668, align 1
  br label %706

681:                                              ; preds = %670
  %682 = icmp eq i32 %675, 0
  br i1 %682, label %687, label %683

683:                                              ; preds = %681
  %684 = tail call i32 @llvm.ctlz.i32(i32 %675, i1 true) #14, !range !2
  %685 = lshr i32 %684, 3
  %686 = xor i32 %685, 3
  br label %687

687:                                              ; preds = %683, %681
  %688 = phi i32 [ %686, %683 ], [ -1, %681 ]
  %689 = add nsw i32 %688, 1
  %690 = trunc i32 %688 to i8
  %691 = shl i8 %690, 2
  %692 = add i8 %691, -16
  %693 = getelementptr inbounds i8, i8* %668, i64 1
  store i8 %692, i8* %668, align 1
  %694 = trunc i32 %675 to i8
  store i8 %694, i8* %693, align 1
  %695 = lshr i32 %675, 8
  %696 = trunc i32 %695 to i8
  %697 = getelementptr inbounds i8, i8* %668, i64 2
  store i8 %696, i8* %697, align 1
  %698 = lshr i32 %675, 16
  %699 = trunc i32 %698 to i8
  %700 = getelementptr inbounds i8, i8* %668, i64 3
  store i8 %699, i8* %700, align 1
  %701 = lshr i32 %675, 24
  %702 = trunc i32 %701 to i8
  %703 = getelementptr inbounds i8, i8* %668, i64 4
  store i8 %702, i8* %703, align 1
  %704 = sext i32 %689 to i64
  %705 = getelementptr inbounds i8, i8* %693, i64 %704
  br label %706

706:                                              ; preds = %677, %687
  %707 = phi i8* [ %680, %677 ], [ %705, %687 ]
  %708 = shl i64 %673, 32
  %709 = ashr exact i64 %708, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %707, i8* align 1 %667, i64 %709, i1 false) #14
  %710 = getelementptr inbounds i8, i8* %707, i64 %709
  br label %711

711:                                              ; preds = %666, %706
  %712 = phi i8* [ %710, %706 ], [ %668, %666 ]
  ret i8* %712

713:                                              ; preds = %117
  %714 = lshr i64 %82, 16
  %715 = or i64 %83, 2
  %716 = trunc i64 %714 to i32
  %717 = mul i32 %716, 506832829
  %718 = lshr i32 %717, 18
  %719 = and i32 %718, %6
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds i16, i16* %3, i64 %720
  %722 = load i16, i16* %721, align 2
  %723 = zext i16 %722 to i64
  %724 = getelementptr inbounds i8, i8* %0, i64 %723
  %725 = add nsw i64 %79, %715
  %726 = trunc i64 %725 to i16
  store i16 %726, i16* %721, align 2
  %727 = load i8, i8* %724, align 1
  %728 = zext i8 %727 to i32
  %729 = getelementptr inbounds i8, i8* %724, i64 1
  %730 = load i8, i8* %729, align 1
  %731 = zext i8 %730 to i32
  %732 = shl nuw nsw i32 %731, 8
  %733 = or i32 %732, %728
  %734 = getelementptr inbounds i8, i8* %724, i64 2
  %735 = load i8, i8* %734, align 1
  %736 = zext i8 %735 to i32
  %737 = shl nuw nsw i32 %736, 16
  %738 = or i32 %733, %737
  %739 = getelementptr inbounds i8, i8* %724, i64 3
  %740 = load i8, i8* %739, align 1
  %741 = zext i8 %740 to i32
  %742 = shl nuw i32 %741, 24
  %743 = or i32 %738, %742
  %744 = icmp eq i32 %743, %716
  br i1 %744, label %149, label %745, !prof !4

745:                                              ; preds = %713
  %746 = lshr i64 %82, 24
  %747 = or i64 %83, 3
  %748 = trunc i64 %746 to i32
  %749 = mul i32 %748, 506832829
  %750 = lshr i32 %749, 18
  %751 = and i32 %750, %6
  %752 = zext i32 %751 to i64
  %753 = getelementptr inbounds i16, i16* %3, i64 %752
  %754 = load i16, i16* %753, align 2
  %755 = zext i16 %754 to i64
  %756 = getelementptr inbounds i8, i8* %0, i64 %755
  %757 = add nsw i64 %79, %747
  %758 = trunc i64 %757 to i16
  store i16 %758, i16* %753, align 2
  %759 = load i8, i8* %756, align 1
  %760 = zext i8 %759 to i32
  %761 = getelementptr inbounds i8, i8* %756, i64 1
  %762 = load i8, i8* %761, align 1
  %763 = zext i8 %762 to i32
  %764 = shl nuw nsw i32 %763, 8
  %765 = or i32 %764, %760
  %766 = getelementptr inbounds i8, i8* %756, i64 2
  %767 = load i8, i8* %766, align 1
  %768 = zext i8 %767 to i32
  %769 = shl nuw nsw i32 %768, 16
  %770 = or i32 %765, %769
  %771 = getelementptr inbounds i8, i8* %756, i64 3
  %772 = load i8, i8* %771, align 1
  %773 = zext i8 %772 to i32
  %774 = shl nuw i32 %773, 24
  %775 = or i32 %770, %774
  %776 = icmp eq i32 %775, %748
  br i1 %776, label %149, label %777, !prof !4

777:                                              ; preds = %745
  %778 = getelementptr inbounds i8, i8* %55, i64 %83
  %779 = load i8, i8* %778, align 1
  %780 = zext i8 %779 to i64
  %781 = getelementptr inbounds i8, i8* %778, i64 1
  %782 = load i8, i8* %781, align 1
  %783 = zext i8 %782 to i64
  %784 = shl nuw nsw i64 %783, 8
  %785 = or i64 %784, %780
  %786 = getelementptr inbounds i8, i8* %778, i64 2
  %787 = load i8, i8* %786, align 1
  %788 = zext i8 %787 to i64
  %789 = shl nuw nsw i64 %788, 16
  %790 = or i64 %785, %789
  %791 = getelementptr inbounds i8, i8* %778, i64 3
  %792 = load i8, i8* %791, align 1
  %793 = zext i8 %792 to i64
  %794 = shl nuw nsw i64 %793, 24
  %795 = or i64 %790, %794
  %796 = getelementptr inbounds i8, i8* %778, i64 4
  %797 = load i8, i8* %796, align 1
  %798 = zext i8 %797 to i64
  %799 = shl nuw nsw i64 %798, 32
  %800 = or i64 %795, %799
  %801 = getelementptr inbounds i8, i8* %778, i64 5
  %802 = load i8, i8* %801, align 1
  %803 = zext i8 %802 to i64
  %804 = shl nuw nsw i64 %803, 40
  %805 = or i64 %800, %804
  %806 = getelementptr inbounds i8, i8* %778, i64 6
  %807 = load i8, i8* %806, align 1
  %808 = zext i8 %807 to i64
  %809 = shl nuw nsw i64 %808, 48
  %810 = or i64 %805, %809
  %811 = getelementptr inbounds i8, i8* %778, i64 7
  %812 = load i8, i8* %811, align 1
  %813 = zext i8 %812 to i64
  %814 = shl nuw i64 %813, 56
  %815 = or i64 %810, %814
  %816 = add nuw nsw i64 %81, 1
  %817 = icmp eq i64 %816, 4
  br i1 %817, label %115, label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy7MemCopyEPcPKhm(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6snappy7MemCopyElPKhm(i64, i8* nocapture, i64) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy7MemMoveEPcPKvm(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6snappy7MemMoveElPKvm(i64, i8* nocapture, i64) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define hidden i64 @_ZN6snappy16AdvanceToNextTagEPPKhPm(i8** nocapture, i64* nocapture) local_unnamed_addr #3 {
  %3 = load i64, i64* %1, align 8
  %4 = lshr i64 %3, 2
  %5 = tail call { i64, i8 } asm "and $$3, ${0:k}\0A\09", "=r,={@ccz},0,~{dirflag},~{fpsr},~{flags}"(i64 %3) #16, !srcloc !10
  %6 = extractvalue { i64, i8 } %5, 0
  %7 = extractvalue { i64, i8 } %5, 1
  %8 = load i8*, i8** %0, align 8
  %9 = add nuw nsw i64 %4, 1
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load volatile i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds i8, i8* %8, i64 %6
  %14 = load volatile i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = and i8 %7, 1
  %17 = icmp ne i8 %16, 0
  %18 = select i1 %17, i64 %12, i64 %15
  store i64 %18, i64* %1, align 8
  %19 = load i8*, i8** %0, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = getelementptr inbounds i8, i8* %20, i64 %6
  %22 = getelementptr inbounds i8, i8* %19, i64 2
  %23 = getelementptr inbounds i8, i8* %22, i64 %4
  %24 = select i1 %17, i8* %23, i8* %21
  store i8* %24, i8** %0, align 8
  tail call void asm sideeffect "", "r,~{dirflag},~{fpsr},~{flags}"(i64 %15) #14, !srcloc !11
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %9, label %34

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %11 = load %"class.snappy::Source"*, %"class.snappy::Source"** %10, align 8
  %12 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = bitcast %"class.snappy::Source"* %11 to void (%"class.snappy::Source"*, i64)***
  %16 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %16, i64 4
  %18 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %17, align 8
  tail call void %18(%"class.snappy::Source"* %11, i64 %14) #14
  %19 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  store i64 -6148914691236517206, i64* %2, align 8
  %20 = load %"class.snappy::Source"*, %"class.snappy::Source"** %10, align 8
  %21 = bitcast %"class.snappy::Source"* %20 to i8* (%"class.snappy::Source"*, i64*)***
  %22 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %21, align 8
  %23 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %22, i64 3
  %24 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %23, align 8
  %25 = call i8* %24(%"class.snappy::Source"* %20, i64* nonnull %2) #14
  %26 = load i64, i64* %2, align 8
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %12, align 8
  %28 = icmp eq i64 %26, 0
  %29 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 5
  %30 = zext i1 %28 to i8
  store i8 %30, i8* %29, align 4
  br i1 %28, label %33, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8* %32, i8** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %34

33:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %116

34:                                               ; preds = %31, %1
  %35 = phi i8* [ %7, %1 ], [ %32, %31 ]
  %36 = phi i8* [ %5, %1 ], [ %25, %31 ]
  %37 = ptrtoint i8* %35 to i64
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 %39, 3
  %41 = icmp eq i32 %40, 0
  %42 = icmp ugt i8 %38, -17
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %47

44:                                               ; preds = %34
  %45 = lshr i32 %39, 2
  %46 = add nsw i32 %45, -58
  br label %52

47:                                               ; preds = %34
  %48 = shl nuw nsw i32 %39, 3
  %49 = and i32 %48, 24
  %50 = lshr i32 84083201, %49
  %51 = and i32 %50, 255
  br label %52

52:                                               ; preds = %44, %47
  %53 = phi i32 [ %46, %44 ], [ %51, %47 ]
  %54 = ptrtoint i8* %36 to i64
  %55 = sub i64 %37, %54
  %56 = trunc i64 %55 to i32
  %57 = icmp ugt i32 %53, %56
  br i1 %57, label %58, label %100

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 6, i64 0
  %60 = and i64 %55, 4294967295
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %36, i64 %60, i1 false)
  %61 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %62 = load %"class.snappy::Source"*, %"class.snappy::Source"** %61, align 8
  %63 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  %66 = bitcast %"class.snappy::Source"* %62 to void (%"class.snappy::Source"*, i64)***
  %67 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %67, i64 4
  %69 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %68, align 8
  call void %69(%"class.snappy::Source"* %62, i64 %65) #14
  store i32 0, i32* %63, align 8
  %70 = bitcast i64* %3 to i8*
  br label %71

71:                                               ; preds = %58, %82
  %72 = phi i32 [ %56, %58 ], [ %90, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %73 = load %"class.snappy::Source"*, %"class.snappy::Source"** %61, align 8
  %74 = bitcast %"class.snappy::Source"* %73 to i8* (%"class.snappy::Source"*, i64*)***
  %75 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %74, align 8
  %76 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %75, i64 3
  %77 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %76, align 8
  %78 = call i8* %77(%"class.snappy::Source"* %73, i64* nonnull %3) #14
  %79 = load i64, i64* %3, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #14
  br label %116

82:                                               ; preds = %71
  %83 = sub i32 %53, %72
  %84 = trunc i64 %79 to i32
  %85 = icmp ugt i32 %83, %84
  %86 = select i1 %85, i32 %84, i32 %83
  %87 = zext i32 %72 to i64
  %88 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 6, i64 %87
  %89 = zext i32 %86 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %78, i64 %89, i1 false)
  %90 = add i32 %86, %72
  %91 = load %"class.snappy::Source"*, %"class.snappy::Source"** %61, align 8
  %92 = bitcast %"class.snappy::Source"* %91 to void (%"class.snappy::Source"*, i64)***
  %93 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %93, i64 4
  %95 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %94, align 8
  call void %95(%"class.snappy::Source"* %91, i64 %89) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #14
  %96 = icmp ugt i32 %53, %90
  br i1 %96, label %71, label %97

97:                                               ; preds = %82
  store i8* %59, i8** %4, align 8
  %98 = zext i32 %53 to i64
  %99 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 6, i64 %98
  store i8* %99, i8** %6, align 8
  br label %116

100:                                              ; preds = %52
  %101 = icmp ult i32 %56, 5
  br i1 %101, label %102, label %115

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 6, i64 0
  %104 = and i64 %55, 4294967295
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %36, i64 %104, i1 false)
  %105 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %106 = load %"class.snappy::Source"*, %"class.snappy::Source"** %105, align 8
  %107 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %108 = load i32, i32* %107, align 8
  %109 = zext i32 %108 to i64
  %110 = bitcast %"class.snappy::Source"* %106 to void (%"class.snappy::Source"*, i64)***
  %111 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %111, i64 4
  %113 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %112, align 8
  call void %113(%"class.snappy::Source"* %106, i64 %109) #14
  store i32 0, i32* %107, align 8
  store i8* %103, i8** %4, align 8
  %114 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 6, i64 %104
  store i8* %114, i8** %6, align 8
  br label %116

115:                                              ; preds = %100
  store i8* %36, i8** %4, align 8
  br label %116

116:                                              ; preds = %81, %102, %115, %97, %33
  %117 = phi i1 [ false, %33 ], [ true, %102 ], [ true, %115 ], [ true, %97 ], [ false, %81 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy21GetUncompressedLengthEPNS_6SourceEPj(%"class.snappy::Source"*, i32* nocapture) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %4 = bitcast i64* %3 to i8*
  %5 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %6 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %7

7:                                                ; preds = %27, %2
  %8 = phi i64 [ %34, %27 ], [ 0, %2 ]
  %9 = icmp ugt i64 %8, 31
  br i1 %9, label %36, label %10

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %11 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %5, align 8
  %12 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %11, i64 3
  %13 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %12, align 8
  %14 = call i8* %13(%"class.snappy::Source"* %0, i64* nonnull %3) #14
  %15 = load i64, i64* %3, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %10
  %18 = load i8, i8* %14, align 1
  %19 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %6, align 8
  %20 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %19, i64 4
  %21 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %20, align 8
  call void %21(%"class.snappy::Source"* %0, i64 1) #14
  %22 = and i8 %18, 127
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %8
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, %22
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %17
  %28 = zext i8 %22 to i32
  %29 = trunc i64 %8 to i32
  %30 = shl i32 %28, %29
  %31 = load i32, i32* %1, align 4
  %32 = or i32 %31, %30
  store i32 %32, i32* %1, align 4
  %33 = icmp sgt i8 %18, -1
  %34 = add nuw nsw i64 %8, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  br i1 %33, label %36, label %7

35:                                               ; preds = %17, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  br label %36

36:                                               ; preds = %7, %27, %35
  %37 = phi i1 [ false, %35 ], [ false, %7 ], [ true, %27 ]
  %38 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %6, align 8
  %39 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %38, i64 4
  %40 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %39, align 8
  call void %40(%"class.snappy::Source"* %0, i64 0) #14
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6snappy8CompressEPNS_6SourceEPNS_4SinkE(%"class.snappy::Source"*, %"class.snappy::Sink"*) local_unnamed_addr #1 {
  %3 = alloca [5 x i8], align 1
  %4 = alloca i64, align 8
  %5 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %6 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %6, i64 2
  %8 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %7, align 8
  %9 = tail call i64 %8(%"class.snappy::Source"* %0) #14
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %10) #14
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2
  %13 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  %15 = trunc i64 %9 to i32
  %16 = icmp ult i32 %15, 128
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 -86, i64 5, i1 false)
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = trunc i64 %9 to i8
  store i8 %18, i8* %10, align 1
  br label %54

19:                                               ; preds = %2
  %20 = icmp ult i32 %15, 16384
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  %22 = trunc i64 %9 to i8
  %23 = or i8 %22, -128
  store i8 %23, i8* %10, align 1
  %24 = lshr i32 %15, 7
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %11, align 1
  br label %54

26:                                               ; preds = %19
  %27 = icmp ult i32 %15, 2097152
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = trunc i64 %9 to i8
  %30 = or i8 %29, -128
  store i8 %30, i8* %10, align 1
  %31 = lshr i32 %15, 7
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, -128
  store i8 %33, i8* %11, align 1
  %34 = lshr i32 %15, 14
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %12, align 1
  br label %54

36:                                               ; preds = %26
  %37 = icmp ult i32 %15, 268435456
  %38 = trunc i64 %9 to i8
  %39 = or i8 %38, -128
  store i8 %39, i8* %10, align 1
  %40 = lshr i32 %15, 7
  %41 = trunc i32 %40 to i8
  %42 = or i8 %41, -128
  store i8 %42, i8* %11, align 1
  %43 = lshr i32 %15, 14
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, -128
  store i8 %45, i8* %12, align 1
  %46 = lshr i32 %15, 21
  %47 = trunc i32 %46 to i8
  br i1 %37, label %48, label %49

48:                                               ; preds = %36
  store i8 %47, i8* %13, align 1
  br label %54

49:                                               ; preds = %36
  %50 = or i8 %47, -128
  store i8 %50, i8* %13, align 1
  %51 = lshr i32 %15, 28
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 5
  store i8 %52, i8* %14, align 1
  br label %54

54:                                               ; preds = %17, %21, %28, %48, %49
  %55 = phi i8* [ %11, %17 ], [ %12, %21 ], [ %13, %28 ], [ %14, %48 ], [ %53, %49 ]
  %56 = ptrtoint i8* %55 to i64
  %57 = ptrtoint [5 x i8]* %3 to i64
  %58 = sub i64 %56, %57
  %59 = bitcast %"class.snappy::Sink"* %1 to void (%"class.snappy::Sink"*, i8*, i64)***
  %60 = load void (%"class.snappy::Sink"*, i8*, i64)**, void (%"class.snappy::Sink"*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %60, i64 2
  %62 = load void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %61, align 8
  call void %62(%"class.snappy::Sink"* %1, i8* nonnull %10, i64 %58) #14
  %63 = icmp ult i64 %9, 65536
  %64 = select i1 %63, i64 %9, i64 65536
  %65 = trunc i64 %64 to i32
  %66 = icmp ugt i32 %65, 16384
  br i1 %66, label %76, label %67

67:                                               ; preds = %54
  %68 = icmp ult i32 %65, 256
  br i1 %68, label %76, label %69

69:                                               ; preds = %67
  %70 = add nsw i32 %65, -1
  %71 = call i32 @llvm.ctlz.i32(i32 %70, i1 true) #14, !range !2
  %72 = xor i32 %71, 31
  %73 = shl i32 2, %72
  %74 = zext i32 %73 to i64
  %75 = shl nuw nsw i64 %74, 1
  br label %76

76:                                               ; preds = %54, %67, %69
  %77 = phi i64 [ %75, %69 ], [ 32768, %54 ], [ 512, %67 ]
  %78 = udiv i64 %64, 6
  %79 = shl nuw nsw i64 %64, 1
  %80 = add nuw nsw i64 %78, 32
  %81 = add nuw nsw i64 %80, %79
  %82 = add nsw i64 %81, %77
  %83 = call i8* @_Znwm(i64 %82) #15
  %84 = getelementptr inbounds i8, i8* %83, i64 %77
  %85 = getelementptr inbounds i8, i8* %84, i64 %64
  %86 = icmp eq i64 %9, 0
  br i1 %86, label %161, label %87

87:                                               ; preds = %76
  %88 = bitcast i64* %4 to i8*
  %89 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %90 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  %91 = bitcast i8* %83 to i16*
  %92 = bitcast %"class.snappy::Sink"* %1 to i8* (%"class.snappy::Sink"*, i64, i8*)***
  br label %93

93:                                               ; preds = %87, %136
  %94 = phi i64 [ %58, %87 ], [ %155, %136 ]
  %95 = phi i64 [ %9, %87 ], [ %156, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #14
  store i64 -6148914691236517206, i64* %4, align 8
  %96 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %89, align 8
  %97 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %96, i64 3
  %98 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %97, align 8
  %99 = call i8* %98(%"class.snappy::Source"* %0, i64* nonnull %4) #14
  %100 = icmp ult i64 %95, 65536
  %101 = select i1 %100, i64 %95, i64 65536
  %102 = load i64, i64* %4, align 8
  %103 = icmp ult i64 %102, %101
  br i1 %103, label %104, label %124

104:                                              ; preds = %93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %99, i64 %102, i1 false)
  %105 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %90, align 8
  %106 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %105, i64 4
  %107 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %106, align 8
  call void %107(%"class.snappy::Source"* %0, i64 %102) #14
  br label %108

108:                                              ; preds = %104, %108
  %109 = phi i64 [ %102, %104 ], [ %119, %108 ]
  %110 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %89, align 8
  %111 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %110, i64 3
  %112 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %111, align 8
  %113 = call i8* %112(%"class.snappy::Source"* %0, i64* nonnull %4) #14
  %114 = sub i64 %101, %109
  %115 = load i64, i64* %4, align 8
  %116 = icmp ult i64 %114, %115
  %117 = select i1 %116, i64 %114, i64 %115
  %118 = getelementptr inbounds i8, i8* %84, i64 %109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %113, i64 %117, i1 false)
  %119 = add i64 %117, %109
  %120 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %90, align 8
  %121 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %120, i64 4
  %122 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %121, align 8
  call void %122(%"class.snappy::Source"* %0, i64 %117) #14
  %123 = icmp ugt i64 %101, %119
  br i1 %123, label %108, label %124

124:                                              ; preds = %108, %93
  %125 = phi i64 [ %101, %93 ], [ 0, %108 ]
  %126 = phi i8* [ %99, %93 ], [ %84, %108 ]
  store i64 %101, i64* %4, align 8
  %127 = trunc i64 %101 to i32
  %128 = icmp ugt i32 %127, 16384
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = icmp ult i32 %127, 256
  br i1 %130, label %136, label %131

131:                                              ; preds = %129
  %132 = add nsw i32 %127, -1
  %133 = call i32 @llvm.ctlz.i32(i32 %132, i1 true) #14, !range !2
  %134 = xor i32 %133, 31
  %135 = shl i32 2, %134
  br label %136

136:                                              ; preds = %124, %129, %131
  %137 = phi i32 [ %135, %131 ], [ 16384, %124 ], [ 256, %129 ]
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %83, i8 0, i64 %139, i1 false) #14
  %140 = add nuw nsw i64 %101, 32
  %141 = udiv i64 %101, 6
  %142 = add nuw nsw i64 %140, %141
  %143 = load i8* (%"class.snappy::Sink"*, i64, i8*)**, i8* (%"class.snappy::Sink"*, i64, i8*)*** %92, align 8
  %144 = getelementptr inbounds i8* (%"class.snappy::Sink"*, i64, i8*)*, i8* (%"class.snappy::Sink"*, i64, i8*)** %143, i64 3
  %145 = load i8* (%"class.snappy::Sink"*, i64, i8*)*, i8* (%"class.snappy::Sink"*, i64, i8*)** %144, align 8
  %146 = call i8* %145(%"class.snappy::Sink"* %1, i64 %142, i8* %85) #14
  %147 = load i64, i64* %4, align 8
  %148 = call i8* @_ZN6snappy8internal16CompressFragmentEPKcmPcPti(i8* %126, i64 %147, i8* %146, i16* nonnull %91, i32 %137)
  %149 = ptrtoint i8* %148 to i64
  %150 = ptrtoint i8* %146 to i64
  %151 = sub i64 %149, %150
  %152 = load void (%"class.snappy::Sink"*, i8*, i64)**, void (%"class.snappy::Sink"*, i8*, i64)*** %59, align 8
  %153 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %152, i64 2
  %154 = load void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %153, align 8
  call void %154(%"class.snappy::Sink"* %1, i8* %146, i64 %151) #14
  %155 = add i64 %151, %94
  %156 = sub i64 %95, %101
  %157 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %90, align 8
  %158 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %157, i64 4
  %159 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %158, align 8
  call void %159(%"class.snappy::Source"* %0, i64 %125) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #14
  %160 = icmp eq i64 %156, 0
  br i1 %160, label %161, label %93

161:                                              ; preds = %136, %76
  %162 = phi i64 [ %58, %76 ], [ %155, %136 ]
  call void @_ZdlPv(i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %10) #14
  ret i64 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy20RawUncompressToIOVecEPKcmPK5iovecm(i8*, i64, %struct.iovec*, i64) local_unnamed_addr #1 {
  %5 = alloca %"class.snappy::ByteArraySource", align 8
  %6 = bitcast %"class.snappy::ByteArraySource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0
  %11 = call zeroext i1 @_ZN6snappy20RawUncompressToIOVecEPNS_6SourceEPK5iovecm(%"class.snappy::Source"* nonnull %10, %struct.iovec* %2, i64 %3)
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy20RawUncompressToIOVecEPNS_6SourceEPK5iovecm(%"class.snappy::Source"*, %struct.iovec*, i64) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.snappy::SnappyDecompressor", align 8
  %6 = alloca %"class.snappy::SnappyIOVecWriter", align 8
  %7 = bitcast %"class.snappy::SnappyIOVecWriter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 3
  %12 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 4
  %13 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 5
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 %2
  %15 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %6, i64 0, i32 2
  %16 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  store %struct.iovec* %14, %struct.iovec** %8, align 8
  store %struct.iovec* %1, %struct.iovec** %9, align 8
  %17 = icmp eq i64 %2, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  store i8* null, i8** %10, align 8
  br label %25

19:                                               ; preds = %3
  %20 = bitcast %struct.iovec* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8** %10 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %18, %19
  %26 = phi i64 [ %24, %19 ], [ 0, %18 ]
  store i64 %26, i64* %11, align 8
  %27 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %27, align 8
  %28 = bitcast %"class.snappy::SnappyDecompressor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %5, i64 0, i32 3
  %30 = bitcast i8** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #14
  %31 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %5, i64 0, i32 0
  store %"class.snappy::Source"* %0, %"class.snappy::Source"** %31, align 8
  %32 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %5, i64 0, i32 1
  %33 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %5, i64 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %5, i64 0, i32 5
  store i8 0, i8* %34, align 4
  %35 = bitcast i8** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #14
  %36 = bitcast i64* %4 to i8*
  %37 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %38 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %39

39:                                               ; preds = %60, %25
  %40 = phi i32 [ 0, %25 ], [ %64, %60 ]
  %41 = phi i64 [ 0, %25 ], [ %66, %60 ]
  %42 = icmp ugt i64 %41, 31
  br i1 %42, label %81, label %43

43:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  store i64 -6148914691236517206, i64* %4, align 8
  %44 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %37, align 8
  %45 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %44, i64 3
  %46 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %45, align 8
  %47 = call i8* %46(%"class.snappy::Source"* %0, i64* nonnull %4) #14
  %48 = load i64, i64* %4, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %43
  %51 = load i8, i8* %47, align 1
  %52 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %38, align 8
  %53 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %52, i64 4
  %54 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %53, align 8
  call void %54(%"class.snappy::Source"* %0, i64 1) #14
  %55 = and i8 %51, 127
  %56 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %41
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, %55
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %50
  %61 = zext i8 %55 to i32
  %62 = trunc i64 %41 to i32
  %63 = shl i32 %61, %62
  %64 = or i32 %63, %40
  %65 = icmp sgt i8 %51, -1
  %66 = add nuw nsw i64 %41, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br i1 %65, label %68, label %39

67:                                               ; preds = %50, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %81

68:                                               ; preds = %60
  %69 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %70 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %69, align 8
  %71 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %70, i64 2
  %72 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %71, align 8
  %73 = call i64 %72(%"class.snappy::Source"* %0) #14
  %74 = zext i32 %64 to i64
  store i64 %74, i64* %13, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyIOVecWriterEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %5, %"class.snappy::SnappyIOVecWriter"* nonnull %6) #14
  %75 = load i8, i8* %34, align 4, !range !12
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %68
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %13, align 8
  %80 = icmp eq i64 %78, %79
  br label %81

81:                                               ; preds = %39, %67, %68, %77
  %82 = phi i1 [ false, %68 ], [ %80, %77 ], [ false, %67 ], [ false, %39 ]
  %83 = load %"class.snappy::Source"*, %"class.snappy::Source"** %31, align 8
  %84 = load i32, i32* %33, align 8
  %85 = zext i32 %84 to i64
  %86 = bitcast %"class.snappy::Source"* %83 to void (%"class.snappy::Source"*, i64)***
  %87 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %87, i64 4
  %89 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %88, align 8
  call void %89(%"class.snappy::Source"* %83, i64 %85) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #14
  ret i1 %82
}

; Function Attrs: nounwind
declare void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy13RawUncompressEPKcmPc(i8*, i64, i8*) local_unnamed_addr #1 {
  %4 = alloca %"class.snappy::ByteArraySource", align 8
  %5 = bitcast %"class.snappy::ByteArraySource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0
  %10 = call zeroext i1 @_ZN6snappy13RawUncompressEPNS_6SourceEPc(%"class.snappy::Source"* nonnull %9, i8* %2)
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy13RawUncompressEPNS_6SourceEPc(%"class.snappy::Source"*, i8*) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.snappy::SnappyDecompressor", align 8
  %5 = alloca %"class.snappy::SnappyArrayWriter", align 8
  %6 = bitcast %"class.snappy::SnappyArrayWriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %5, i64 0, i32 3
  store i8* %1, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8* %1, i8** %10, align 8
  %11 = bitcast %"class.snappy::SnappyDecompressor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 3
  %13 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 0
  store %"class.snappy::Source"* %0, %"class.snappy::Source"** %14, align 8
  %15 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 4
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 5
  store i8 0, i8* %17, align 4
  %18 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #14
  %19 = bitcast i64* %3 to i8*
  %20 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %21 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %22

22:                                               ; preds = %43, %2
  %23 = phi i32 [ 0, %2 ], [ %47, %43 ]
  %24 = phi i64 [ 0, %2 ], [ %49, %43 ]
  %25 = icmp ugt i64 %24, 31
  br i1 %25, label %69, label %26

26:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %27 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %20, align 8
  %28 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %27, i64 3
  %29 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %28, align 8
  %30 = call i8* %29(%"class.snappy::Source"* %0, i64* nonnull %3) #14
  %31 = load i64, i64* %3, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %26
  %34 = load i8, i8* %30, align 1
  %35 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %21, align 8
  %36 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %35, i64 4
  %37 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %36, align 8
  call void %37(%"class.snappy::Source"* %0, i64 1) #14
  %38 = and i8 %34, 127
  %39 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %24
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, %38
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %33
  %44 = zext i8 %38 to i32
  %45 = trunc i64 %24 to i32
  %46 = shl i32 %44, %45
  %47 = or i32 %46, %23
  %48 = icmp sgt i8 %34, -1
  %49 = add nuw nsw i64 %24, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br i1 %48, label %51, label %22

50:                                               ; preds = %33, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %69

51:                                               ; preds = %43
  %52 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %53 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %53, i64 2
  %55 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %54, align 8
  %56 = call i64 %55(%"class.snappy::Source"* %0) #14
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds i8, i8* %1, i64 %57
  store i8* %58, i8** %9, align 8
  %59 = icmp ult i64 %57, 63
  %60 = select i1 %59, i64 %57, i64 63
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  store i8* %62, i8** %10, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyArrayWriterEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %4, %"class.snappy::SnappyArrayWriter"* nonnull %5) #14
  %63 = load i8, i8* %17, align 4, !range !12
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %51
  %66 = load i8*, i8** %8, align 8
  %67 = load i8*, i8** %9, align 8
  %68 = icmp eq i8* %66, %67
  br label %69

69:                                               ; preds = %22, %50, %51, %65
  %70 = phi i1 [ false, %51 ], [ %68, %65 ], [ false, %50 ], [ false, %22 ]
  %71 = load %"class.snappy::Source"*, %"class.snappy::Source"** %14, align 8
  %72 = load i32, i32* %16, align 8
  %73 = zext i32 %72 to i64
  %74 = bitcast %"class.snappy::Source"* %71 to void (%"class.snappy::Source"*, i64)***
  %75 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %75, i64 4
  %77 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %76, align 8
  call void %77(%"class.snappy::Source"* %71, i64 %73) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy10UncompressEPKcmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 {
  %4 = alloca %"class.snappy::ByteArraySource", align 8
  %5 = icmp sgt i64 %1, 0
  br i1 %5, label %6, label %83

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %0, align 1
  %9 = and i8 %8, 127
  %10 = zext i8 %9 to i32
  %11 = icmp sgt i8 %8, -1
  br i1 %11, label %51, label %12

12:                                               ; preds = %6
  %13 = icmp sgt i64 %1, 1
  br i1 %13, label %14, label %83

14:                                               ; preds = %12
  %15 = getelementptr inbounds i8, i8* %0, i64 2
  %16 = load i8, i8* %7, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 7
  %19 = and i32 %18, 16256
  %20 = or i32 %19, %10
  %21 = icmp sgt i8 %16, -1
  br i1 %21, label %51, label %22

22:                                               ; preds = %14
  %23 = icmp sgt i64 %1, 2
  br i1 %23, label %24, label %83

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %0, i64 3
  %26 = load i8, i8* %15, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 14
  %29 = and i32 %28, 2080768
  %30 = or i32 %29, %20
  %31 = icmp sgt i8 %26, -1
  br i1 %31, label %51, label %32

32:                                               ; preds = %24
  %33 = icmp sgt i64 %1, 3
  br i1 %33, label %34, label %83

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %0, i64 4
  %36 = load i8, i8* %25, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 21
  %39 = and i32 %38, 266338304
  %40 = or i32 %39, %30
  %41 = icmp sgt i8 %36, -1
  br i1 %41, label %51, label %42

42:                                               ; preds = %34
  %43 = icmp sgt i64 %1, 4
  br i1 %43, label %44, label %83

44:                                               ; preds = %42
  %45 = getelementptr inbounds i8, i8* %0, i64 5
  %46 = load i8, i8* %35, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 28
  %49 = or i32 %48, %40
  %50 = icmp ult i8 %46, 16
  br i1 %50, label %51, label %83

51:                                               ; preds = %44, %34, %24, %14, %6
  %52 = phi i8* [ %7, %6 ], [ %15, %14 ], [ %25, %24 ], [ %35, %34 ], [ %45, %44 ]
  %53 = phi i32 [ %10, %6 ], [ %20, %14 ], [ %30, %24 ], [ %40, %34 ], [ %49, %44 ]
  %54 = icmp eq i8* %52, null
  br i1 %54, label %83, label %55

55:                                               ; preds = %51
  %56 = zext i32 %53 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %56, i8 signext 0) #14
  %57 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  br label %66

64:                                               ; preds = %55
  %65 = zext i8 %59 to i64
  br label %66

66:                                               ; preds = %64, %61
  %67 = phi i64 [ %63, %61 ], [ %65, %64 ]
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  br i1 %60, label %70, label %73

70:                                               ; preds = %69
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  br label %75

73:                                               ; preds = %69
  %74 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %75

75:                                               ; preds = %66, %70, %73
  %76 = phi i8* [ null, %66 ], [ %72, %70 ], [ %74, %73 ]
  %77 = bitcast %"class.snappy::ByteArraySource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #14
  %78 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 1
  %80 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  store i8* %0, i8** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0
  %82 = call zeroext i1 @_ZN6snappy13RawUncompressEPNS_6SourceEPc(%"class.snappy::Source"* nonnull %81, i8* %76) #14
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #14
  br label %83

83:                                               ; preds = %44, %42, %32, %22, %12, %3, %51, %75
  %84 = phi i1 [ %82, %75 ], [ false, %51 ], [ false, %3 ], [ false, %12 ], [ false, %22 ], [ false, %32 ], [ false, %42 ], [ false, %44 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy23IsValidCompressedBufferEPKcm(i8*, i64) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.snappy::SnappyDecompressor", align 8
  %5 = alloca %"class.snappy::ByteArraySource", align 8
  %6 = alloca %"class.snappy::SnappyDecompressionValidator", align 8
  %7 = bitcast %"class.snappy::ByteArraySource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i8* %0, i8** %9, align 8
  store i64 %1, i64* %10, align 8
  %11 = bitcast %"class.snappy::SnappyDecompressionValidator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #14
  %14 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0
  %15 = bitcast %"class.snappy::SnappyDecompressor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 3
  %17 = bitcast i8** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #14
  %18 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 0
  store %"class.snappy::Source"* %14, %"class.snappy::Source"** %18, align 8
  %19 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 5
  store i8 0, i8* %21, align 4
  %22 = bitcast i8** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #14
  %23 = bitcast i64* %3 to i8*
  %24 = bitcast %"class.snappy::ByteArraySource"* %5 to i8* (%"class.snappy::Source"*, i64*)***
  %25 = bitcast %"class.snappy::ByteArraySource"* %5 to void (%"class.snappy::Source"*, i64)***
  br label %26

26:                                               ; preds = %47, %2
  %27 = phi i32 [ 0, %2 ], [ %51, %47 ]
  %28 = phi i64 [ 0, %2 ], [ %53, %47 ]
  %29 = icmp ugt i64 %28, 31
  br i1 %29, label %68, label %30

30:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %31 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %24, align 8
  %32 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %31, i64 3
  %33 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %32, align 8
  %34 = call i8* %33(%"class.snappy::Source"* nonnull %14, i64* nonnull %3) #14
  %35 = load i64, i64* %3, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = load i8, i8* %34, align 1
  %39 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %25, align 8
  %40 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %39, i64 4
  %41 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %40, align 8
  call void %41(%"class.snappy::Source"* nonnull %14, i64 1) #14
  %42 = and i8 %38, 127
  %43 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %28
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, %42
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %37
  %48 = zext i8 %42 to i32
  %49 = trunc i64 %28 to i32
  %50 = shl i32 %48, %49
  %51 = or i32 %50, %27
  %52 = icmp sgt i8 %38, -1
  %53 = add nuw nsw i64 %28, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  br i1 %52, label %55, label %26

54:                                               ; preds = %37, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  br label %68

55:                                               ; preds = %47
  %56 = bitcast %"class.snappy::ByteArraySource"* %5 to i64 (%"class.snappy::Source"*)***
  %57 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %57, i64 2
  %59 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %58, align 8
  %60 = call i64 %59(%"class.snappy::Source"* nonnull %14) #14
  %61 = zext i32 %51 to i64
  store i64 %61, i64* %12, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_28SnappyDecompressionValidatorEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %4, %"class.snappy::SnappyDecompressionValidator"* nonnull %6) #14
  %62 = load i8, i8* %21, align 4, !range !12
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %55
  %65 = load i64, i64* %12, align 8
  %66 = load i64, i64* %13, align 8
  %67 = icmp eq i64 %65, %66
  br label %68

68:                                               ; preds = %26, %54, %55, %64
  %69 = phi i1 [ false, %55 ], [ %67, %64 ], [ false, %54 ], [ false, %26 ]
  %70 = load %"class.snappy::Source"*, %"class.snappy::Source"** %18, align 8
  %71 = load i32, i32* %20, align 8
  %72 = zext i32 %71 to i64
  %73 = bitcast %"class.snappy::Source"* %70 to void (%"class.snappy::Source"*, i64)***
  %74 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %74, i64 4
  %76 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %75, align 8
  call void %76(%"class.snappy::Source"* %70, i64 %72) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy17IsValidCompressedEPNS_6SourceE(%"class.snappy::Source"*) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.snappy::SnappyDecompressor", align 8
  %4 = alloca %"class.snappy::SnappyDecompressionValidator", align 8
  %5 = bitcast %"class.snappy::SnappyDecompressionValidator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #14
  %8 = bitcast %"class.snappy::SnappyDecompressor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %3, i64 0, i32 3
  %10 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #14
  %11 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %3, i64 0, i32 0
  store %"class.snappy::Source"* %0, %"class.snappy::Source"** %11, align 8
  %12 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %3, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %3, i64 0, i32 5
  store i8 0, i8* %14, align 4
  %15 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #14
  %16 = bitcast i64* %2 to i8*
  %17 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %18 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %19

19:                                               ; preds = %40, %1
  %20 = phi i32 [ 0, %1 ], [ %44, %40 ]
  %21 = phi i64 [ 0, %1 ], [ %46, %40 ]
  %22 = icmp ugt i64 %21, 31
  br i1 %22, label %61, label %23

23:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  store i64 -6148914691236517206, i64* %2, align 8
  %24 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %17, align 8
  %25 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %24, i64 3
  %26 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %25, align 8
  %27 = call i8* %26(%"class.snappy::Source"* %0, i64* nonnull %2) #14
  %28 = load i64, i64* %2, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = load i8, i8* %27, align 1
  %32 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %18, align 8
  %33 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %32, i64 4
  %34 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %33, align 8
  call void %34(%"class.snappy::Source"* %0, i64 1) #14
  %35 = and i8 %31, 127
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %21
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, %35
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %30
  %41 = zext i8 %35 to i32
  %42 = trunc i64 %21 to i32
  %43 = shl i32 %41, %42
  %44 = or i32 %43, %20
  %45 = icmp sgt i8 %31, -1
  %46 = add nuw nsw i64 %21, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br i1 %45, label %48, label %19

47:                                               ; preds = %30, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %61

48:                                               ; preds = %40
  %49 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %50 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %49, align 8
  %51 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %50, i64 2
  %52 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %51, align 8
  %53 = call i64 %52(%"class.snappy::Source"* %0) #14
  %54 = zext i32 %44 to i64
  store i64 %54, i64* %6, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_28SnappyDecompressionValidatorEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %3, %"class.snappy::SnappyDecompressionValidator"* nonnull %4) #14
  %55 = load i8, i8* %14, align 4, !range !12
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = load i64, i64* %6, align 8
  %59 = load i64, i64* %7, align 8
  %60 = icmp eq i64 %58, %59
  br label %61

61:                                               ; preds = %19, %47, %48, %57
  %62 = phi i1 [ false, %48 ], [ %60, %57 ], [ false, %47 ], [ false, %19 ]
  %63 = load %"class.snappy::Source"*, %"class.snappy::Source"** %11, align 8
  %64 = load i32, i32* %13, align 8
  %65 = zext i32 %64 to i64
  %66 = bitcast %"class.snappy::Source"* %63 to void (%"class.snappy::Source"*, i64)***
  %67 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %67, i64 4
  %69 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %68, align 8
  call void %69(%"class.snappy::Source"* %63, i64 %65) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy11RawCompressEPKcmPcPm(i8*, i64, i8*, i64* nocapture) local_unnamed_addr #1 {
  %5 = alloca %"class.snappy::ByteArraySource", align 8
  %6 = alloca %"class.snappy::UncheckedByteArraySink", align 8
  %7 = bitcast %"class.snappy::ByteArraySource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i8* %0, i8** %9, align 8
  store i64 %1, i64* %10, align 8
  %11 = bitcast %"class.snappy::UncheckedByteArraySink"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6snappy22UncheckedByteArraySinkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %5, i64 0, i32 0
  %15 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %6, i64 0, i32 0
  %16 = call i64 @_ZN6snappy8CompressEPNS_6SourceEPNS_4SinkE(%"class.snappy::Source"* nonnull %14, %"class.snappy::Sink"* nonnull %15)
  %17 = bitcast i8** %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %2 to i64
  %20 = sub i64 %18, %19
  store i64 %20, i64* %3, align 8
  call void @_ZN6snappy22UncheckedByteArraySinkD1Ev(%"class.snappy::UncheckedByteArraySink"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6snappy22UncheckedByteArraySinkD1Ev(%"class.snappy::UncheckedByteArraySink"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6snappy8CompressEPKcmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 {
  %4 = alloca %"class.snappy::ByteArraySource", align 8
  %5 = alloca %"class.snappy::UncheckedByteArraySink", align 8
  %6 = add i64 %1, 32
  %7 = udiv i64 %1, 6
  %8 = add i64 %6, %7
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %8, i8 signext 0) #14
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %3
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  br i1 %12, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %27

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %27

27:                                               ; preds = %18, %22, %25
  %28 = phi i8* [ null, %18 ], [ %24, %22 ], [ %26, %25 ]
  %29 = bitcast %"class.snappy::ByteArraySource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 1
  %32 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6snappy15ByteArraySourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  store i8* %0, i8** %31, align 8
  store i64 %1, i64* %32, align 8
  %33 = bitcast %"class.snappy::UncheckedByteArraySink"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %5, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6snappy22UncheckedByteArraySinkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  store i8* %28, i8** %35, align 8
  %36 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %5, i64 0, i32 0
  %38 = call i64 @_ZN6snappy8CompressEPNS_6SourceEPNS_4SinkE(%"class.snappy::Source"* nonnull %36, %"class.snappy::Sink"* nonnull %37) #14
  %39 = bitcast i8** %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint i8* %28 to i64
  %42 = sub i64 %40, %41
  call void @_ZN6snappy22UncheckedByteArraySinkD1Ev(%"class.snappy::UncheckedByteArraySink"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  call void @_ZN6snappy15ByteArraySourceD1Ev(%"class.snappy::ByteArraySource"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %42, i8 signext 0) #14
  ret i64 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6snappy26UncompressAsMuchAsPossibleEPNS_6SourceEPNS_4SinkE(%"class.snappy::Source"*, %"class.snappy::Sink"*) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.snappy::SnappyDecompressor", align 8
  %5 = alloca %"class.snappy::SnappyScatteredWriter", align 8
  %6 = ptrtoint %"class.snappy::Sink"* %1 to i64
  %7 = bitcast %"class.snappy::SnappyScatteredWriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 2
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = bitcast %"class.snappy::SnappyScatteredWriter"* %5 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 3
  %12 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false) #14
  %13 = bitcast %"class.snappy::SnappyDecompressor"* %4 to i8*
  %14 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %15 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 3
  %16 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false) #14
  %17 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 0
  store %"class.snappy::Source"* %0, %"class.snappy::Source"** %17, align 8
  %18 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 5
  store i8 0, i8* %20, align 4
  %21 = bitcast i8** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #14
  %22 = bitcast i64* %3 to i8*
  %23 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %24 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %25

25:                                               ; preds = %46, %2
  %26 = phi i32 [ 0, %2 ], [ %50, %46 ]
  %27 = phi i64 [ 0, %2 ], [ %52, %46 ]
  %28 = icmp ugt i64 %27, 31
  br i1 %28, label %108, label %29

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %30 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %23, align 8
  %31 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %30, i64 3
  %32 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %31, align 8
  %33 = call i8* %32(%"class.snappy::Source"* %0, i64* nonnull %3) #14
  %34 = load i64, i64* %3, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = load i8, i8* %33, align 1
  %38 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %24, align 8
  %39 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %38, i64 4
  %40 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %39, align 8
  call void %40(%"class.snappy::Source"* %0, i64 1) #14
  %41 = and i8 %37, 127
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %27
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, %41
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %36
  %47 = zext i8 %41 to i32
  %48 = trunc i64 %27 to i32
  %49 = shl i32 %47, %48
  %50 = or i32 %49, %26
  %51 = icmp sgt i8 %37, -1
  %52 = add nuw nsw i64 %27, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  br i1 %51, label %54, label %25

53:                                               ; preds = %36, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  br label %108

54:                                               ; preds = %46
  %55 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %56 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %56, i64 2
  %58 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %57, align 8
  %59 = call i64 %58(%"class.snappy::Source"* %0) #14
  %60 = zext i32 %50 to i64
  %61 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 2
  store i64 %60, i64* %61, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_21SnappyScatteredWriterINS_19SnappySinkAllocatorEEEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %4, %"class.snappy::SnappyScatteredWriter"* nonnull %5) #14
  %62 = load i64, i64* %11, align 8
  %63 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 5
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 4
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %65, %62
  %70 = sub i64 %69, %68
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %72 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %71, align 8
  %73 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %74 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %73, align 8
  %75 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %54
  %77 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %72 to i64
  br label %101

78:                                               ; preds = %54
  %79 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 0, i32 0
  br label %83

80:                                               ; preds = %83
  %81 = bitcast %"class.std::__1::vector"* %10 to i64*
  %82 = load i64, i64* %81, align 8
  br label %101

83:                                               ; preds = %83, %78
  %84 = phi i64 [ 0, %78 ], [ %98, %83 ]
  %85 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %72, %78 ], [ %99, %83 ]
  %86 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %85, i64 0, i32 1
  %87 = sub i64 %70, %84
  %88 = load i64, i64* %86, align 8
  %89 = icmp ult i64 %87, %88
  %90 = select i1 %89, i64 %87, i64 %88
  %91 = load %"class.snappy::Sink"*, %"class.snappy::Sink"** %79, align 8
  %92 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %85, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.snappy::Sink"* %91 to void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)***
  %95 = load void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)**, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)** %95, i64 4
  %97 = load void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)** %96, align 8
  call void %97(%"class.snappy::Sink"* %91, i8* %93, i64 %90, void (i8*, i8*, i64)* nonnull @_ZN6snappy19SnappySinkAllocator7DeleterEPvPKcm, i8* null) #14
  %98 = add i64 %90, %84
  %99 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %85, i64 1
  %100 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %99, %74
  br i1 %100, label %80, label %83

101:                                              ; preds = %80, %76
  %102 = phi i64 [ %82, %80 ], [ %77, %76 ]
  %103 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"** %73 to i64*
  store i64 %102, i64* %103, align 8
  %104 = load %"class.snappy::Source"*, %"class.snappy::Source"** %17, align 8
  %105 = load i32, i32* %19, align 8
  %106 = zext i32 %105 to i64
  %107 = bitcast %"class.snappy::Source"* %104 to void (%"class.snappy::Source"*, i64)***
  br label %108

108:                                              ; preds = %25, %53, %101
  %109 = phi void (%"class.snappy::Source"*, i64)*** [ %24, %53 ], [ %107, %101 ], [ %24, %25 ]
  %110 = phi i64 [ 0, %53 ], [ %106, %101 ], [ 0, %25 ]
  %111 = phi %"class.snappy::Source"* [ %0, %53 ], [ %104, %101 ], [ %0, %25 ]
  %112 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %109, align 8
  %113 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %112, i64 4
  %114 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %113, align 8
  call void %114(%"class.snappy::Source"* %111, i64 %110) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  %115 = load i64, i64* %11, align 8
  %116 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 5
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 4
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %118, %115
  %123 = sub i64 %122, %121
  %124 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 1, i32 0, i32 0
  %125 = load i8**, i8*** %124, align 8
  %126 = icmp eq i8** %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %108
  %128 = ptrtoint i8** %125 to i64
  %129 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 1, i32 0, i32 1
  %130 = bitcast i8*** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast i8** %125 to i8*
  call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %127, %108
  %133 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %134 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %133, align 8
  %135 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %134 to i64
  %138 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %139 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"* %134 to i8*
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %136, %132
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %7) #14
  ret i64 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6snappy10UncompressEPNS_6SourceEPNS_4SinkE(%"class.snappy::Source"*, %"class.snappy::Sink"*) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.snappy::SnappyDecompressor", align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.snappy::SnappyArrayWriter", align 8
  %8 = alloca %"class.snappy::SnappyScatteredWriter", align 8
  %9 = bitcast %"class.snappy::SnappyDecompressor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 3
  %11 = bitcast i8** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 0
  store %"class.snappy::Source"* %0, %"class.snappy::Source"** %12, align 8
  %13 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 4
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %4, i64 0, i32 5
  store i8 0, i8* %15, align 4
  %16 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14
  %17 = bitcast i64* %3 to i8*
  %18 = bitcast %"class.snappy::Source"* %0 to i8* (%"class.snappy::Source"*, i64*)***
  %19 = bitcast %"class.snappy::Source"* %0 to void (%"class.snappy::Source"*, i64)***
  br label %20

20:                                               ; preds = %41, %2
  %21 = phi i32 [ 0, %2 ], [ %45, %41 ]
  %22 = phi i64 [ 0, %2 ], [ %47, %41 ]
  %23 = icmp ugt i64 %22, 31
  br i1 %23, label %182, label %24

24:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %25 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %18, align 8
  %26 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %25, i64 3
  %27 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %26, align 8
  %28 = call i8* %27(%"class.snappy::Source"* %0, i64* nonnull %3) #14
  %29 = load i64, i64* %3, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %24
  %32 = load i8, i8* %28, align 1
  %33 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %19, align 8
  %34 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %33, i64 4
  %35 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %34, align 8
  call void %35(%"class.snappy::Source"* %0, i64 1) #14
  %36 = and i8 %32, 127
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZZN6snappyL18LeftShiftOverflowsEhjE5masks, i64 0, i64 %22
  %38 = load i8, i8* %37, align 1
  %39 = and i8 %38, %36
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %31
  %42 = zext i8 %36 to i32
  %43 = trunc i64 %22 to i32
  %44 = shl i32 %42, %43
  %45 = or i32 %44, %21
  %46 = icmp sgt i8 %32, -1
  %47 = add nuw nsw i64 %22, 7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br i1 %46, label %49, label %20

48:                                               ; preds = %31, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %182

49:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 -86, i8* %5, align 1
  %50 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  store i64 -6148914691236517206, i64* %6, align 8
  %51 = zext i32 %45 to i64
  %52 = bitcast %"class.snappy::Sink"* %1 to i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)***
  %53 = load i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)**, i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)*** %52, align 8
  %54 = getelementptr inbounds i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)*, i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)** %53, i64 5
  %55 = load i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)*, i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)** %54, align 8
  %56 = call i8* %55(%"class.snappy::Sink"* %1, i64 1, i64 %51, i8* nonnull %5, i64 1, i64* nonnull %6) #14
  %57 = bitcast %"class.snappy::Source"* %0 to i64 (%"class.snappy::Source"*)***
  %58 = load i64 (%"class.snappy::Source"*)**, i64 (%"class.snappy::Source"*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %58, i64 2
  %60 = load i64 (%"class.snappy::Source"*)*, i64 (%"class.snappy::Source"*)** %59, align 8
  %61 = call i64 %60(%"class.snappy::Source"* %0) #14
  %62 = load i64, i64* %6, align 8
  %63 = icmp ult i64 %62, %51
  br i1 %63, label %95, label %64

64:                                               ; preds = %49
  %65 = bitcast %"class.snappy::SnappyArrayWriter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #14
  %66 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %7, i64 0, i32 0
  %67 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %7, i64 0, i32 1
  %68 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %7, i64 0, i32 2
  %69 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %7, i64 0, i32 3
  store i8* %56, i8** %66, align 8
  store i8* %56, i8** %67, align 8
  %70 = getelementptr inbounds i8, i8* %56, i64 %51
  store i8* %70, i8** %68, align 8
  %71 = icmp ult i64 %51, 63
  %72 = select i1 %71, i64 %51, i64 63
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  store i8* %74, i8** %69, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyArrayWriterEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %4, %"class.snappy::SnappyArrayWriter"* nonnull %7) #14
  %75 = load i8, i8* %15, align 4, !range !12
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %64
  %78 = bitcast i8** %67 to i64*
  %79 = load i64, i64* %78, align 8
  br label %85

80:                                               ; preds = %64
  %81 = load i8*, i8** %67, align 8
  %82 = load i8*, i8** %68, align 8
  %83 = icmp eq i8* %81, %82
  %84 = ptrtoint i8* %81 to i64
  br label %85

85:                                               ; preds = %77, %80
  %86 = phi i64 [ %79, %77 ], [ %84, %80 ]
  %87 = phi i1 [ false, %77 ], [ %83, %80 ]
  %88 = bitcast %"class.snappy::SnappyArrayWriter"* %7 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = bitcast %"class.snappy::Sink"* %1 to void (%"class.snappy::Sink"*, i8*, i64)***
  %92 = load void (%"class.snappy::Sink"*, i8*, i64)**, void (%"class.snappy::Sink"*, i8*, i64)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %92, i64 2
  %94 = load void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %93, align 8
  call void %94(%"class.snappy::Sink"* %1, i8* %56, i64 %90) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #14
  br label %177

95:                                               ; preds = %49
  %96 = ptrtoint %"class.snappy::Sink"* %1 to i64
  %97 = bitcast %"class.snappy::SnappyScatteredWriter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %97) #14
  %98 = bitcast %"class.snappy::SnappyScatteredWriter"* %8 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 3
  %101 = bitcast i64* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 40, i1 false) #14
  %102 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 2
  %103 = bitcast %"class.std::__1::vector"* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 48, i1 false)
  store i64 %51, i64* %102, align 8
  call void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_21SnappyScatteredWriterINS_19SnappySinkAllocatorEEEEEvPT_(%"class.snappy::SnappyDecompressor"* nonnull %4, %"class.snappy::SnappyScatteredWriter"* nonnull %8) #14
  %104 = load i64, i64* %100, align 8
  %105 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 5
  %106 = bitcast i8** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 4
  %109 = bitcast i8** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %107, %104
  %112 = sub i64 %111, %110
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %99, i64 0, i32 0, i32 0
  %114 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %113, align 8
  %115 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 0, i32 1, i32 0, i32 1
  %116 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %115, align 8
  %117 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %114, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %95
  %119 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %114 to i64
  br label %144

120:                                              ; preds = %95
  %121 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 0, i32 0
  br label %126

122:                                              ; preds = %126
  %123 = bitcast %"class.std::__1::vector"* %99 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %124 to %"struct.snappy::SnappySinkAllocator::Datablock"*
  br label %144

126:                                              ; preds = %126, %120
  %127 = phi i64 [ 0, %120 ], [ %141, %126 ]
  %128 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %114, %120 ], [ %142, %126 ]
  %129 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %128, i64 0, i32 1
  %130 = sub i64 %112, %127
  %131 = load i64, i64* %129, align 8
  %132 = icmp ult i64 %130, %131
  %133 = select i1 %132, i64 %130, i64 %131
  %134 = load %"class.snappy::Sink"*, %"class.snappy::Sink"** %121, align 8
  %135 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %128, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = bitcast %"class.snappy::Sink"* %134 to void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)***
  %138 = load void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)**, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)** %138, i64 4
  %140 = load void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)*, void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)** %139, align 8
  call void %140(%"class.snappy::Sink"* %134, i8* %136, i64 %133, void (i8*, i8*, i64)* nonnull @_ZN6snappy19SnappySinkAllocator7DeleterEPvPKcm, i8* null) #14
  %141 = add i64 %133, %127
  %142 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %128, i64 1
  %143 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %142, %116
  br i1 %143, label %122, label %126

144:                                              ; preds = %122, %118
  %145 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %125, %122 ], [ %114, %118 ]
  %146 = phi i64 [ %124, %122 ], [ %119, %118 ]
  %147 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"** %115 to i64*
  store i64 %146, i64* %147, align 8
  %148 = load i8, i8* %15, align 4, !range !12
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %144
  %151 = load i64, i64* %100, align 8
  %152 = load i64, i64* %106, align 8
  %153 = load i64, i64* %109, align 8
  %154 = add i64 %152, %151
  %155 = sub i64 %154, %153
  %156 = load i64, i64* %102, align 8
  %157 = icmp eq i64 %155, %156
  br label %158

158:                                              ; preds = %144, %150
  %159 = phi i1 [ false, %144 ], [ %157, %150 ]
  %160 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 1, i32 0, i32 0
  %161 = load i8**, i8*** %160, align 8
  %162 = icmp eq i8** %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %158
  %164 = ptrtoint i8** %161 to i64
  %165 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 1, i32 0, i32 1
  %166 = bitcast i8*** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast i8** %161 to i8*
  call void @_ZdlPv(i8* %167) #15
  %168 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %169 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %168, align 8
  br label %170

170:                                              ; preds = %163, %158
  %171 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %169, %163 ], [ %145, %158 ]
  %172 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %171, null
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %171 to i64
  store i64 %174, i64* %147, align 8
  %175 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"* %171 to i8*
  call void @_ZdlPv(i8* %175) #15
  br label %176

176:                                              ; preds = %173, %170
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %97) #14
  br label %177

177:                                              ; preds = %176, %85
  %178 = phi i1 [ %87, %85 ], [ %159, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %179 = load %"class.snappy::Source"*, %"class.snappy::Source"** %12, align 8
  %180 = load i32, i32* %14, align 8
  %181 = zext i32 %180 to i64
  br label %182

182:                                              ; preds = %20, %48, %177
  %183 = phi i64 [ %181, %177 ], [ 0, %48 ], [ 0, %20 ]
  %184 = phi %"class.snappy::Source"* [ %179, %177 ], [ %0, %48 ], [ %0, %20 ]
  %185 = phi i1 [ %178, %177 ], [ false, %48 ], [ false, %20 ]
  %186 = bitcast %"class.snappy::Source"* %184 to void (%"class.snappy::Source"*, i64)***
  %187 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %187, i64 4
  %189 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %188, align 8
  call void %189(%"class.snappy::Source"* %184, i64 %183) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #14
  ret i1 %185
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyIOVecWriterEEEvPT_(%"class.snappy::SnappyDecompressor"*, %"class.snappy::SnappyIOVecWriter"*) local_unnamed_addr #1 comdat align 32 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp slt i64 %11, 4
  %13 = select i1 %12, i64 %11, i64 4
  %14 = sub i64 0, %13
  %15 = getelementptr inbounds i8, i8* %8, i64 %14
  %16 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 3
  store i8* %15, i8** %16, align 8
  %17 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  store i8* null, i8** %3, align 8
  %18 = icmp ult i8* %6, %15
  br i1 %18, label %31, label %19, !prof !3

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %20, label %21, label %339, !prof !3

21:                                               ; preds = %19
  %22 = load i8*, i8** %5, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = ptrtoint i8* %23 to i64
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %24, %25
  %27 = icmp slt i64 %26, 4
  %28 = select i1 %27, i64 %26, i64 4
  %29 = sub i64 0, %28
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  store i8* %30, i8** %16, align 8
  br label %31

31:                                               ; preds = %2, %21
  %32 = phi i8* [ %22, %21 ], [ %6, %2 ]
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = bitcast i8** %7 to i64*
  %36 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 5
  %37 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 4
  %38 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 3
  %39 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 1
  %40 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 0
  %41 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %1, i64 0, i32 2
  %42 = bitcast i8** %41 to i64*
  %43 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %44 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %45 = bitcast i64* %4 to i8*
  %46 = bitcast i8** %41 to <16 x i8>**
  br label %47

47:                                               ; preds = %336, %31
  %48 = phi i32 [ %34, %31 ], [ %337, %336 ]
  %49 = phi i8* [ %32, %31 ], [ %338, %336 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = and i32 %48, 255
  %52 = and i32 %48, 3
  switch i32 %52, label %275 [
    i32 0, label %53
    i32 3, label %250
  ], !prof !13

53:                                               ; preds = %47
  %54 = lshr i32 %51, 2
  %55 = add nuw nsw i32 %54, 1
  %56 = zext i32 %55 to i64
  %57 = load i64, i64* %35, align 8
  %58 = ptrtoint i8* %50 to i64
  %59 = sub i64 %57, %58
  %60 = load i64, i64* %36, align 8
  %61 = load i64, i64* %37, align 8
  %62 = sub i64 %60, %61
  %63 = icmp ult i32 %55, 17
  %64 = icmp ugt i64 %59, 20
  %65 = and i1 %63, %64
  %66 = icmp ugt i64 %62, 15
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %82

68:                                               ; preds = %53
  %69 = load i64, i64* %38, align 8
  %70 = icmp ugt i64 %69, 15
  br i1 %70, label %71, label %82

71:                                               ; preds = %68
  %72 = load <16 x i8>*, <16 x i8>** %46, align 8
  %73 = bitcast i8* %50 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  store <16 x i8> %74, <16 x i8>* %72, align 1
  %75 = load i8*, i8** %41, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %56
  store i8* %76, i8** %41, align 8
  %77 = load i64, i64* %38, align 8
  %78 = sub i64 %77, %56
  store i64 %78, i64* %38, align 8
  %79 = load i64, i64* %37, align 8
  %80 = add i64 %79, %56
  store i64 %80, i64* %37, align 8
  %81 = getelementptr inbounds i8, i8* %50, i64 %56
  br label %332

82:                                               ; preds = %68, %53
  %83 = icmp ugt i32 %51, 239
  br i1 %83, label %84, label %113, !prof !4

84:                                               ; preds = %82
  %85 = add nsw i64 %56, -60
  %86 = load i8, i8* %50, align 1
  %87 = zext i8 %86 to i64
  %88 = getelementptr inbounds i8, i8* %49, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = shl nuw nsw i64 %90, 8
  %92 = or i64 %91, %87
  %93 = getelementptr inbounds i8, i8* %49, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = shl nuw nsw i64 %95, 16
  %97 = or i64 %92, %96
  %98 = getelementptr inbounds i8, i8* %49, i64 4
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = shl nuw nsw i64 %100, 24
  %102 = or i64 %97, %101
  %103 = shl nsw i64 %85, 3
  %104 = and i64 %103, 4294967288
  %105 = shl i64 4294967295, %104
  %106 = xor i64 %105, 4294967295
  %107 = and i64 %102, %106
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 4294967295
  %110 = getelementptr inbounds i8, i8* %50, i64 %85
  %111 = ptrtoint i8* %110 to i64
  %112 = sub i64 %57, %111
  br label %113

113:                                              ; preds = %84, %82
  %114 = phi i64 [ %112, %84 ], [ %59, %82 ]
  %115 = phi i64 [ %109, %84 ], [ %56, %82 ]
  %116 = phi i8* [ %110, %84 ], [ %50, %82 ]
  %117 = icmp ugt i64 %115, %114
  br i1 %117, label %118, label %191

118:                                              ; preds = %113
  %119 = add i64 %61, %114
  %120 = icmp ugt i64 %119, %60
  br i1 %120, label %339, label %121

121:                                              ; preds = %118, %188
  %122 = phi i64 [ %174, %188 ], [ %114, %118 ]
  %123 = phi i64 [ %179, %188 ], [ %115, %118 ]
  %124 = phi i8* [ %173, %188 ], [ %116, %118 ]
  %125 = icmp eq i64 %122, 0
  br i1 %125, label %160, label %126

126:                                              ; preds = %121
  %127 = load i64, i64* %38, align 8
  br label %128

128:                                              ; preds = %146, %126
  %129 = phi i64 [ %127, %126 ], [ %154, %146 ]
  %130 = phi i8* [ %124, %126 ], [ %157, %146 ]
  %131 = phi i64 [ %122, %126 ], [ %158, %146 ]
  %132 = icmp eq i64 %129, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = load i8*, i8** %41, align 8
  br label %146

135:                                              ; preds = %128
  %136 = load %struct.iovec*, %struct.iovec** %39, align 8
  %137 = getelementptr inbounds %struct.iovec, %struct.iovec* %136, i64 1
  %138 = load %struct.iovec*, %struct.iovec** %40, align 8
  %139 = icmp ult %struct.iovec* %137, %138
  br i1 %139, label %140, label %339

140:                                              ; preds = %135
  store %struct.iovec* %137, %struct.iovec** %39, align 8
  %141 = bitcast %struct.iovec* %137 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %42, align 8
  %143 = getelementptr inbounds %struct.iovec, %struct.iovec* %136, i64 1, i32 1
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %38, align 8
  %145 = inttoptr i64 %142 to i8*
  br label %146

146:                                              ; preds = %140, %133
  %147 = phi i8* [ %145, %140 ], [ %134, %133 ]
  %148 = phi i64 [ %144, %140 ], [ %129, %133 ]
  %149 = icmp ult i64 %148, %131
  %150 = select i1 %149, i64 %148, i64 %131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 1 %130, i64 %150, i1 false) #14
  %151 = load i8*, i8** %41, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 %150
  store i8* %152, i8** %41, align 8
  %153 = load i64, i64* %38, align 8
  %154 = sub i64 %153, %150
  store i64 %154, i64* %38, align 8
  %155 = load i64, i64* %37, align 8
  %156 = add i64 %155, %150
  store i64 %156, i64* %37, align 8
  %157 = getelementptr inbounds i8, i8* %130, i64 %150
  %158 = sub i64 %131, %150
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %128

160:                                              ; preds = %146, %121
  %161 = load %"class.snappy::Source"*, %"class.snappy::Source"** %43, align 8
  %162 = load i32, i32* %44, align 8
  %163 = zext i32 %162 to i64
  %164 = bitcast %"class.snappy::Source"* %161 to void (%"class.snappy::Source"*, i64)***
  %165 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %165, i64 4
  %167 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %166, align 8
  call void %167(%"class.snappy::Source"* %161, i64 %163) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  store i64 -6148914691236517206, i64* %4, align 8
  %168 = load %"class.snappy::Source"*, %"class.snappy::Source"** %43, align 8
  %169 = bitcast %"class.snappy::Source"* %168 to i8* (%"class.snappy::Source"*, i64*)***
  %170 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %169, align 8
  %171 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %170, i64 3
  %172 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %171, align 8
  %173 = call i8* %172(%"class.snappy::Source"* %168, i64* nonnull %4) #14
  %174 = load i64, i64* %4, align 8
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %44, align 8
  %176 = icmp eq i64 %174, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  br label %339

178:                                              ; preds = %160
  %179 = sub i64 %123, %122
  %180 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8* %180, i8** %7, align 8
  %181 = icmp slt i64 %174, 4
  %182 = select i1 %181, i64 %174, i64 4
  %183 = sub i64 0, %182
  %184 = getelementptr inbounds i8, i8* %180, i64 %183
  store i8* %184, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  %185 = icmp ugt i64 %179, %174
  %186 = load i64, i64* %37, align 8
  %187 = load i64, i64* %36, align 8
  br i1 %185, label %188, label %191

188:                                              ; preds = %178
  %189 = add i64 %186, %174
  %190 = icmp ugt i64 %189, %187
  br i1 %190, label %339, label %121

191:                                              ; preds = %178, %113
  %192 = phi i64 [ %60, %113 ], [ %187, %178 ]
  %193 = phi i64 [ %115, %113 ], [ %179, %178 ]
  %194 = phi i8* [ %116, %113 ], [ %173, %178 ]
  %195 = phi i64 [ %61, %113 ], [ %186, %178 ]
  %196 = add i64 %195, %193
  %197 = icmp ugt i64 %196, %192
  br i1 %197, label %339, label %198

198:                                              ; preds = %191
  %199 = icmp eq i64 %193, 0
  br i1 %199, label %234, label %200

200:                                              ; preds = %198
  %201 = load i64, i64* %38, align 8
  br label %202

202:                                              ; preds = %220, %200
  %203 = phi i64 [ %201, %200 ], [ %228, %220 ]
  %204 = phi i8* [ %194, %200 ], [ %231, %220 ]
  %205 = phi i64 [ %193, %200 ], [ %232, %220 ]
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %202
  %208 = load i8*, i8** %41, align 8
  br label %220

209:                                              ; preds = %202
  %210 = load %struct.iovec*, %struct.iovec** %39, align 8
  %211 = getelementptr inbounds %struct.iovec, %struct.iovec* %210, i64 1
  %212 = load %struct.iovec*, %struct.iovec** %40, align 8
  %213 = icmp ult %struct.iovec* %211, %212
  br i1 %213, label %214, label %339

214:                                              ; preds = %209
  store %struct.iovec* %211, %struct.iovec** %39, align 8
  %215 = bitcast %struct.iovec* %211 to i64*
  %216 = load i64, i64* %215, align 8
  store i64 %216, i64* %42, align 8
  %217 = getelementptr inbounds %struct.iovec, %struct.iovec* %210, i64 1, i32 1
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %38, align 8
  %219 = inttoptr i64 %216 to i8*
  br label %220

220:                                              ; preds = %214, %207
  %221 = phi i8* [ %219, %214 ], [ %208, %207 ]
  %222 = phi i64 [ %218, %214 ], [ %203, %207 ]
  %223 = icmp ult i64 %222, %205
  %224 = select i1 %223, i64 %222, i64 %205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 %204, i64 %224, i1 false) #14
  %225 = load i8*, i8** %41, align 8
  %226 = getelementptr inbounds i8, i8* %225, i64 %224
  store i8* %226, i8** %41, align 8
  %227 = load i64, i64* %38, align 8
  %228 = sub i64 %227, %224
  store i64 %228, i64* %38, align 8
  %229 = load i64, i64* %37, align 8
  %230 = add i64 %229, %224
  store i64 %230, i64* %37, align 8
  %231 = getelementptr inbounds i8, i8* %204, i64 %224
  %232 = sub i64 %205, %224
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %202

234:                                              ; preds = %220, %198
  %235 = getelementptr inbounds i8, i8* %194, i64 %193
  %236 = load i8*, i8** %16, align 8
  %237 = icmp ult i8* %235, %236
  br i1 %237, label %332, label %238, !prof !3

238:                                              ; preds = %234
  store i8* %235, i8** %5, align 8
  %239 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %239, label %240, label %339, !prof !3

240:                                              ; preds = %238
  %241 = load i8*, i8** %5, align 8
  %242 = load i8*, i8** %7, align 8
  %243 = ptrtoint i8* %242 to i64
  %244 = ptrtoint i8* %241 to i64
  %245 = sub i64 %243, %244
  %246 = icmp slt i64 %245, 4
  %247 = select i1 %246, i64 %245, i64 4
  %248 = sub i64 0, %247
  %249 = getelementptr inbounds i8, i8* %242, i64 %248
  store i8* %249, i8** %16, align 8
  br label %332

250:                                              ; preds = %47
  %251 = load i8, i8* %50, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds i8, i8* %49, i64 2
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i64
  %256 = shl nuw nsw i64 %255, 8
  %257 = or i64 %256, %252
  %258 = getelementptr inbounds i8, i8* %49, i64 3
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = shl nuw nsw i64 %260, 16
  %262 = or i64 %257, %261
  %263 = getelementptr inbounds i8, i8* %49, i64 4
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i64
  %266 = shl nuw nsw i64 %265, 24
  %267 = or i64 %262, %266
  %268 = lshr i32 %51, 2
  %269 = add nuw nsw i32 %268, 1
  %270 = zext i32 %269 to i64
  %271 = call zeroext i1 @_ZN6snappy17SnappyIOVecWriter14AppendFromSelfEmmPPc(%"class.snappy::SnappyIOVecWriter"* %1, i64 %267, i64 %270, i8** nonnull %3)
  br i1 %271, label %272, label %339

272:                                              ; preds = %250
  %273 = getelementptr inbounds i8, i8* %49, i64 5
  %274 = load i8*, i8** %16, align 8
  br label %316

275:                                              ; preds = %47
  %276 = zext i32 %51 to i64
  %277 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %276
  %278 = load i16, i16* %277, align 2
  %279 = sext i16 %278 to i64
  %280 = load i8, i8* %50, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds i8, i8* %49, i64 2
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = shl nuw nsw i32 %284, 8
  %286 = or i32 %285, %281
  %287 = getelementptr inbounds i8, i8* %49, i64 3
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = shl nuw nsw i32 %289, 16
  %291 = or i32 %286, %290
  %292 = getelementptr inbounds i8, i8* %49, i64 4
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i32
  %295 = shl nuw i32 %294, 24
  %296 = or i32 %291, %295
  %297 = shl nuw nsw i32 %52, 3
  %298 = zext i32 %297 to i64
  %299 = shl i64 4294967295, %298
  %300 = trunc i64 %299 to i32
  %301 = xor i32 %300, -1
  %302 = and i32 %296, %301
  %303 = and i16 %278, 255
  %304 = zext i32 %302 to i64
  %305 = zext i16 %303 to i64
  %306 = sub nsw i64 %305, %279
  %307 = add nsw i64 %306, %304
  %308 = and i64 %307, 4294967295
  %309 = call zeroext i1 @_ZN6snappy17SnappyIOVecWriter14AppendFromSelfEmmPPc(%"class.snappy::SnappyIOVecWriter"* %1, i64 %308, i64 %305, i8** nonnull %3)
  br i1 %309, label %310, label %339

310:                                              ; preds = %275
  %311 = zext i32 %52 to i64
  %312 = getelementptr inbounds i8, i8* %50, i64 %311
  %313 = lshr i32 %296, %297
  %314 = load i8*, i8** %16, align 8
  %315 = icmp ult i8* %312, %314
  br i1 %315, label %336, label %316

316:                                              ; preds = %272, %310
  %317 = phi i8* [ %274, %272 ], [ %314, %310 ]
  %318 = phi i8* [ %273, %272 ], [ %312, %310 ]
  %319 = icmp ult i8* %318, %317
  br i1 %319, label %332, label %320, !prof !3

320:                                              ; preds = %316
  store i8* %318, i8** %5, align 8
  %321 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %321, label %322, label %339, !prof !3

322:                                              ; preds = %320
  %323 = load i8*, i8** %5, align 8
  %324 = load i8*, i8** %7, align 8
  %325 = ptrtoint i8* %324 to i64
  %326 = ptrtoint i8* %323 to i64
  %327 = sub i64 %325, %326
  %328 = icmp slt i64 %327, 4
  %329 = select i1 %328, i64 %327, i64 4
  %330 = sub i64 0, %329
  %331 = getelementptr inbounds i8, i8* %324, i64 %330
  store i8* %331, i8** %16, align 8
  br label %332

332:                                              ; preds = %322, %316, %234, %240, %71
  %333 = phi i8* [ %81, %71 ], [ %241, %240 ], [ %235, %234 ], [ %323, %322 ], [ %318, %316 ]
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i32
  br label %336

336:                                              ; preds = %332, %310
  %337 = phi i32 [ %313, %310 ], [ %335, %332 ]
  %338 = phi i8* [ %312, %310 ], [ %333, %332 ]
  br label %47

339:                                              ; preds = %250, %275, %238, %191, %320, %118, %188, %209, %135, %177, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZN6snappy20DecompressBranchlessIPcEENSt3__14pairIPKhlEES5_S5_lT_l(i8*, i8*, i64, i8*, i64) local_unnamed_addr #1 comdat {
  %6 = alloca <2 x i64>, align 16
  %7 = ptrtoint i8* %0 to i64
  %8 = add nsw i64 %4, -64
  %9 = ptrtoint i8* %1 to i64
  %10 = sub i64 %9, %7
  %11 = icmp sgt i64 %10, 130
  %12 = icmp sgt i64 %8, %2
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %213

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %1, i64 -129
  %16 = getelementptr inbounds i8, i8* %0, i64 1
  %17 = load i8, i8* %0, align 1
  %18 = zext i8 %17 to i64
  %19 = bitcast <2 x i64>* %6 to i8*
  %20 = bitcast <2 x i64>* %6 to %"struct.std::__1::array.17"*
  br label %21

21:                                               ; preds = %202, %14
  %22 = phi i8* [ %16, %14 ], [ %47, %202 ]
  %23 = phi i32 [ 0, %14 ], [ %203, %202 ]
  %24 = phi i64 [ %18, %14 ], [ %42, %202 ]
  %25 = phi i64 [ %2, %14 ], [ %199, %202 ]
  %26 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %24
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i64
  %29 = lshr i64 %24, 2
  %30 = tail call { i64, i8 } asm "and $$3, ${0:k}\0A\09", "=r,={@ccz},0,~{dirflag},~{fpsr},~{flags}"(i64 %24) #16, !srcloc !10
  %31 = extractvalue { i64, i8 } %30, 0
  %32 = extractvalue { i64, i8 } %30, 1
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i8, i8* %22, i64 %33
  %35 = load volatile i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds i8, i8* %22, i64 %31
  %38 = load volatile i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = and i8 %32, 1
  %41 = icmp ne i8 %40, 0
  %42 = select i1 %41, i64 %36, i64 %39
  %43 = getelementptr inbounds i8, i8* %22, i64 1
  %44 = getelementptr inbounds i8, i8* %43, i64 %31
  %45 = getelementptr inbounds i8, i8* %22, i64 2
  %46 = getelementptr inbounds i8, i8* %45, i64 %29
  %47 = select i1 %41, i8* %46, i8* %44
  tail call void asm sideeffect "", "r,~{dirflag},~{fpsr},~{flags}"(i64 %39) #14, !srcloc !11
  %48 = load i8, i8* %22, align 1
  %49 = zext i8 %48 to i32
  %50 = load i8, i8* %43, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %52, %49
  %54 = load i8, i8* %45, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 16
  %57 = or i32 %53, %56
  %58 = getelementptr inbounds i8, i8* %22, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw i32 %60, 24
  %62 = or i32 %57, %61
  %63 = and i64 %28, 255
  %64 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 1, i64 %31
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %62, %65
  %67 = zext i32 %66 to i64
  %68 = sub nsw i64 %28, %67
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %185, !prof !4

70:                                               ; preds = %21
  %71 = trunc i16 %27 to i8
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %208, label %73, !prof !4

73:                                               ; preds = %70
  %74 = add nsw i64 %68, %25
  %75 = sub i64 %74, %63
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %208, label %77, !prof !4

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %3, i64 %25
  %79 = sub nsw i64 %63, %68
  %80 = icmp ult i64 %79, 16
  br i1 %80, label %90, label %81, !prof !3

81:                                               ; preds = %77
  %82 = sub nsw i64 0, %79
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %83, i64 16, i1 false) #14
  %84 = getelementptr inbounds i8, i8* %78, i64 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 16, i1 false) #14
  %86 = getelementptr inbounds i8, i8* %78, i64 32
  %87 = getelementptr inbounds i8, i8* %86, i64 %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 16, i1 false) #14
  %88 = getelementptr inbounds i8, i8* %78, i64 48
  %89 = getelementptr inbounds i8, i8* %88, i64 %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 16, i1 false) #14
  br label %198

90:                                               ; preds = %77
  %91 = icmp eq i64 %79, 0
  br i1 %91, label %208, label %92, !prof !4

92:                                               ; preds = %90
  %93 = sub nsw i64 0, %79
  %94 = getelementptr inbounds i8, i8* %78, i64 %93
  %95 = load i8, i8* %94, align 1
  store i8 %95, i8* %78, align 1
  %96 = sub nsw i64 1, %79
  %97 = getelementptr inbounds i8, i8* %78, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 %98, i8* %99, align 1
  %100 = sub nsw i64 2, %79
  %101 = getelementptr inbounds i8, i8* %78, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = getelementptr inbounds i8, i8* %78, i64 2
  store i8 %102, i8* %103, align 1
  %104 = sub nsw i64 3, %79
  %105 = getelementptr inbounds i8, i8* %78, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = getelementptr inbounds i8, i8* %78, i64 3
  store i8 %106, i8* %107, align 1
  %108 = sub nsw i64 4, %79
  %109 = getelementptr inbounds i8, i8* %78, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %78, i64 4
  store i8 %110, i8* %111, align 1
  %112 = sub nsw i64 5, %79
  %113 = getelementptr inbounds i8, i8* %78, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = getelementptr inbounds i8, i8* %78, i64 5
  store i8 %114, i8* %115, align 1
  %116 = sub nsw i64 6, %79
  %117 = getelementptr inbounds i8, i8* %78, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = getelementptr inbounds i8, i8* %78, i64 6
  store i8 %118, i8* %119, align 1
  %120 = sub nsw i64 7, %79
  %121 = getelementptr inbounds i8, i8* %78, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds i8, i8* %78, i64 7
  store i8 %122, i8* %123, align 1
  %124 = sub nsw i64 8, %79
  %125 = getelementptr inbounds i8, i8* %78, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = getelementptr inbounds i8, i8* %78, i64 8
  store i8 %126, i8* %127, align 1
  %128 = sub nsw i64 9, %79
  %129 = getelementptr inbounds i8, i8* %78, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds i8, i8* %78, i64 9
  store i8 %130, i8* %131, align 1
  %132 = sub nsw i64 10, %79
  %133 = getelementptr inbounds i8, i8* %78, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds i8, i8* %78, i64 10
  store i8 %134, i8* %135, align 1
  %136 = sub nsw i64 11, %79
  %137 = getelementptr inbounds i8, i8* %78, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds i8, i8* %78, i64 11
  store i8 %138, i8* %139, align 1
  %140 = sub nsw i64 12, %79
  %141 = getelementptr inbounds i8, i8* %78, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = getelementptr inbounds i8, i8* %78, i64 12
  store i8 %142, i8* %143, align 1
  %144 = sub nsw i64 13, %79
  %145 = getelementptr inbounds i8, i8* %78, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = getelementptr inbounds i8, i8* %78, i64 13
  store i8 %146, i8* %147, align 1
  %148 = sub nsw i64 14, %79
  %149 = getelementptr inbounds i8, i8* %78, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = getelementptr inbounds i8, i8* %78, i64 14
  store i8 %150, i8* %151, align 1
  %152 = sub nuw nsw i64 15, %79
  %153 = getelementptr inbounds i8, i8* %78, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = getelementptr inbounds i8, i8* %78, i64 15
  store i8 %154, i8* %155, align 1
  %156 = load atomic i8, i8* bitcast (i64* @_ZGVZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes to i8*) acquire, align 8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %174, !prof !14

158:                                              ; preds = %92
  %159 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes) #14
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 16, i1 false) #14
  br label %162

162:                                              ; preds = %219, %161
  %163 = phi i64 [ 1, %161 ], [ %226, %219 ]
  %164 = phi i32 [ 1, %161 ], [ %227, %219 ]
  %165 = trunc i32 %164 to i8
  %166 = udiv i8 16, %165
  %167 = add nuw nsw i8 %166, 1
  %168 = mul i8 %167, %165
  %169 = getelementptr inbounds %"struct.std::__1::array.17", %"struct.std::__1::array.17"* %20, i64 0, i32 0, i64 %163
  store i8 %168, i8* %169, align 1
  %170 = add nuw nsw i64 %163, 1
  %171 = icmp eq i64 %170, 16
  br i1 %171, label %172, label %219

172:                                              ; preds = %162
  %173 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  store <2 x i64> %173, <2 x i64>* bitcast (%"struct.std::__1::array.17"* @_ZZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes to <2 x i64>*), align 16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes) #14
  br label %174

174:                                              ; preds = %172, %158, %92
  %175 = getelementptr inbounds %"struct.std::__1::array.17", %"struct.std::__1::array.17"* @_ZZN6snappy12_GLOBAL__N_131Copy64BytesWithPatternExtensionEPcmE13pattern_sizes, i64 0, i32 0, i64 %79
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i64
  %178 = sub nsw i64 0, %177
  %179 = getelementptr inbounds i8, i8* %78, i64 16
  %180 = getelementptr inbounds i8, i8* %179, i64 %178
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %179, i8* align 1 %180, i64 16, i1 false) #14
  %181 = getelementptr inbounds i8, i8* %78, i64 32
  %182 = getelementptr inbounds i8, i8* %181, i64 %178
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 %182, i64 16, i1 false) #14
  %183 = getelementptr inbounds i8, i8* %78, i64 48
  %184 = getelementptr inbounds i8, i8* %183, i64 %178
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 16, i1 false) #14
  br label %198

185:                                              ; preds = %21
  %186 = add nsw i64 %68, %25
  %187 = sub i64 %186, %63
  %188 = icmp slt i64 %187, 0
  br i1 %188, label %189, label %193, !prof !4

189:                                              ; preds = %185
  tail call void asm sideeffect "", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !15
  %190 = icmp eq i64 %31, 0
  br i1 %190, label %191, label %208

191:                                              ; preds = %189
  %192 = getelementptr inbounds i8, i8* %3, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %22, i64 64, i1 false) #14
  br label %198

193:                                              ; preds = %185
  %194 = icmp eq i64 %31, 0
  %195 = getelementptr inbounds i8, i8* %3, i64 %187
  %196 = select i1 %194, i8* %22, i8* %195
  %197 = getelementptr inbounds i8, i8* %3, i64 %25
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %196, i64 64, i1 false) #14
  br label %198

198:                                              ; preds = %81, %174, %193, %191
  %199 = add i64 %63, %25
  %200 = add nuw nsw i32 %23, 1
  %201 = icmp eq i32 %200, 2
  br i1 %201, label %204, label %202

202:                                              ; preds = %198, %204
  %203 = phi i32 [ %200, %198 ], [ 0, %204 ]
  br label %21

204:                                              ; preds = %198
  %205 = icmp ugt i8* %15, %47
  %206 = icmp slt i64 %199, %8
  %207 = and i1 %205, %206
  br i1 %207, label %202, label %208

208:                                              ; preds = %204, %70, %189, %73, %90
  %209 = phi i64 [ %25, %90 ], [ %25, %73 ], [ %25, %189 ], [ %25, %70 ], [ %199, %204 ]
  %210 = phi i8* [ %22, %90 ], [ %22, %73 ], [ %22, %189 ], [ %22, %70 ], [ %47, %204 ]
  %211 = getelementptr inbounds i8, i8* %210, i64 -1
  %212 = ptrtoint i8* %211 to i64
  br label %213

213:                                              ; preds = %208, %5
  %214 = phi i64 [ %212, %208 ], [ %7, %5 ]
  %215 = phi i64 [ %209, %208 ], [ %2, %5 ]
  %216 = inttoptr i64 %214 to i8*
  %217 = insertvalue { i8*, i64 } undef, i8* %216, 0
  %218 = insertvalue { i8*, i64 } %217, i64 %215, 1
  ret { i8*, i64 } %218

219:                                              ; preds = %162
  %220 = trunc i32 %164 to i8
  %221 = add i8 %220, 1
  %222 = udiv i8 16, %221
  %223 = add nuw nsw i8 %222, 1
  %224 = mul i8 %223, %221
  %225 = getelementptr inbounds %"struct.std::__1::array.17", %"struct.std::__1::array.17"* %20, i64 0, i32 0, i64 %170
  store i8 %224, i8* %225, align 1
  %226 = add nuw nsw i64 %163, 2
  %227 = add nuw nsw i32 %164, 2
  br label %162
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6snappy17SnappyIOVecWriter14AppendFromSelfEmmPPc(%"class.snappy::SnappyIOVecWriter"*, i64, i64, i8**) local_unnamed_addr #10 comdat align 2 {
  %5 = add i64 %1, -1
  %6 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %138

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %7
  %13 = icmp ult i64 %12, %2
  br i1 %13, label %138, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 1
  %16 = load %struct.iovec*, %struct.iovec** %15, align 8
  %17 = getelementptr inbounds %struct.iovec, %struct.iovec* %16, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  br label %22

22:                                               ; preds = %14, %29
  %23 = phi i64 [ %33, %29 ], [ %21, %14 ]
  %24 = phi %struct.iovec* [ %31, %29 ], [ %16, %14 ]
  %25 = phi i64 [ %30, %29 ], [ %1, %14 ]
  %26 = icmp ugt i64 %25, %23
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = sub i64 %23, %25
  br label %35

29:                                               ; preds = %22
  %30 = sub i64 %25, %23
  %31 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i64 -1
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i64 -1, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %30, 0
  br i1 %34, label %35, label %22

35:                                               ; preds = %29, %27
  %36 = phi %struct.iovec* [ %24, %27 ], [ %31, %29 ]
  %37 = phi i64 [ %28, %27 ], [ %33, %29 ]
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %138, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.snappy::SnappyIOVecWriter", %"class.snappy::SnappyIOVecWriter"* %0, i64 0, i32 2
  %42 = bitcast i8** %41 to i64*
  br label %43

43:                                               ; preds = %136, %39
  %44 = phi %struct.iovec* [ %16, %39 ], [ %137, %136 ]
  %45 = phi i64 [ %20, %39 ], [ %131, %136 ]
  %46 = phi i64 [ %37, %39 ], [ %134, %136 ]
  %47 = phi %struct.iovec* [ %36, %39 ], [ %133, %136 ]
  %48 = phi i64 [ %2, %39 ], [ %132, %136 ]
  %49 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 1
  %50 = bitcast %struct.iovec* %49 to i64*
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 1, i32 1
  %52 = icmp eq %struct.iovec* %47, %44
  br i1 %52, label %104, label %53

53:                                               ; preds = %127, %43
  %54 = phi i64 [ %129, %127 ], [ %45, %43 ]
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %56, %46
  %58 = icmp ult i64 %48, %57
  %59 = select i1 %58, i64 %48, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %97, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %46
  br label %65

65:                                               ; preds = %83, %61
  %66 = phi i64 [ %54, %61 ], [ %91, %83 ]
  %67 = phi i8* [ %64, %61 ], [ %94, %83 ]
  %68 = phi i64 [ %59, %61 ], [ %95, %83 ]
  %69 = icmp eq i64 %66, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = load i8*, i8** %41, align 8
  br label %83

72:                                               ; preds = %65
  %73 = load %struct.iovec*, %struct.iovec** %15, align 8
  %74 = getelementptr inbounds %struct.iovec, %struct.iovec* %73, i64 1
  %75 = load %struct.iovec*, %struct.iovec** %40, align 8
  %76 = icmp ult %struct.iovec* %74, %75
  br i1 %76, label %77, label %97

77:                                               ; preds = %72
  store %struct.iovec* %74, %struct.iovec** %15, align 8
  %78 = bitcast %struct.iovec* %74 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %42, align 8
  %80 = getelementptr inbounds %struct.iovec, %struct.iovec* %73, i64 1, i32 1
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %19, align 8
  %82 = inttoptr i64 %79 to i8*
  br label %83

83:                                               ; preds = %77, %70
  %84 = phi i8* [ %82, %77 ], [ %71, %70 ]
  %85 = phi i64 [ %81, %77 ], [ %66, %70 ]
  %86 = icmp ult i64 %85, %68
  %87 = select i1 %86, i64 %85, i64 %68
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %67, i64 %87, i1 false) #14
  %88 = load i8*, i8** %41, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %87
  store i8* %89, i8** %41, align 8
  %90 = load i64, i64* %19, align 8
  %91 = sub i64 %90, %87
  store i64 %91, i64* %19, align 8
  %92 = load i64, i64* %6, align 8
  %93 = add i64 %92, %87
  store i64 %93, i64* %6, align 8
  %94 = getelementptr inbounds i8, i8* %67, i64 %87
  %95 = sub i64 %68, %87
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %65

97:                                               ; preds = %72, %83, %53
  %98 = phi i64 [ %54, %53 ], [ %66, %72 ], [ %91, %83 ]
  %99 = sub i64 %48, %59
  %100 = icmp eq i64 %99, 0
  %101 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 1
  %102 = select i1 %100, %struct.iovec* %47, %struct.iovec* %101
  %103 = select i1 %100, i64 %46, i64 0
  br label %130

104:                                              ; preds = %43
  %105 = icmp eq i64 %45, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %104
  %107 = load %struct.iovec*, %struct.iovec** %40, align 8
  %108 = icmp ult %struct.iovec* %49, %107
  br i1 %108, label %127, label %138

109:                                              ; preds = %104
  %110 = icmp ugt i64 %45, %48
  %111 = select i1 %110, i64 %48, i64 %45
  %112 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %46
  %115 = load i8*, i8** %41, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %111
  %117 = getelementptr inbounds i8, i8* %115, i64 %45
  %118 = tail call fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8* %114, i8* %115, i8* %116, i8* %117)
  %119 = load i8*, i8** %41, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %111
  store i8* %120, i8** %41, align 8
  %121 = load i64, i64* %19, align 8
  %122 = sub i64 %121, %111
  store i64 %122, i64* %19, align 8
  %123 = add i64 %111, %46
  %124 = load i64, i64* %6, align 8
  %125 = add i64 %124, %111
  store i64 %125, i64* %6, align 8
  %126 = sub i64 %48, %111
  br label %130

127:                                              ; preds = %106
  store %struct.iovec* %49, %struct.iovec** %15, align 8
  %128 = load i64, i64* %50, align 8
  store i64 %128, i64* %42, align 8
  %129 = load i64, i64* %51, align 8
  store i64 %129, i64* %19, align 8
  br label %53

130:                                              ; preds = %109, %97
  %131 = phi i64 [ %98, %97 ], [ %122, %109 ]
  %132 = phi i64 [ %99, %97 ], [ %126, %109 ]
  %133 = phi %struct.iovec* [ %102, %97 ], [ %47, %109 ]
  %134 = phi i64 [ %103, %97 ], [ %123, %109 ]
  %135 = icmp eq i64 %132, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  %137 = load %struct.iovec*, %struct.iovec** %15, align 8
  br label %43

138:                                              ; preds = %130, %106, %35, %9, %4
  %139 = phi i1 [ false, %4 ], [ false, %9 ], [ true, %35 ], [ true, %130 ], [ false, %106 ]
  ret i1 %139
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8*, i8*, i8* readnone, i8* readnone) unnamed_addr #12 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %0 to i64
  %7 = sub i64 %5, %6
  %8 = icmp ult i64 %7, 8
  br i1 %8, label %9, label %86

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %3, i64 -11
  %11 = icmp ult i8* %10, %1
  br i1 %11, label %43, label %12, !prof !4

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  %15 = getelementptr inbounds i8, i8* %0, i64 3
  %16 = getelementptr inbounds i8, i8* %0, i64 4
  %17 = getelementptr inbounds i8, i8* %0, i64 5
  %18 = getelementptr inbounds i8, i8* %0, i64 6
  %19 = getelementptr inbounds i8, i8* %0, i64 7
  br label %20

20:                                               ; preds = %12, %20
  %21 = phi i64 [ %7, %12 ], [ %39, %20 ]
  %22 = phi i8* [ %1, %12 ], [ %38, %20 ]
  %23 = load i8, i8* %0, align 1
  %24 = load i8, i8* %13, align 1
  %25 = load i8, i8* %14, align 1
  %26 = load i8, i8* %15, align 1
  %27 = load i8, i8* %16, align 1
  %28 = load i8, i8* %17, align 1
  %29 = load i8, i8* %18, align 1
  %30 = load i8, i8* %19, align 1
  store i8 %23, i8* %22, align 1
  %31 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %24, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %22, i64 2
  store i8 %25, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %22, i64 3
  store i8 %26, i8* %33, align 1
  %34 = getelementptr inbounds i8, i8* %22, i64 4
  store i8 %27, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %22, i64 5
  store i8 %28, i8* %35, align 1
  %36 = getelementptr inbounds i8, i8* %22, i64 6
  store i8 %29, i8* %36, align 1
  %37 = getelementptr inbounds i8, i8* %22, i64 7
  store i8 %30, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %22, i64 %21
  %39 = shl i64 %21, 1
  %40 = icmp ult i64 %39, 8
  br i1 %40, label %20, label %41

41:                                               ; preds = %20
  %42 = icmp ult i8* %38, %2
  br i1 %42, label %86, label %422, !prof !4

43:                                               ; preds = %9
  %44 = icmp ult i8* %1, %2
  br i1 %44, label %45, label %422

45:                                               ; preds = %43
  %46 = ptrtoint i8* %2 to i64
  %47 = sub i64 %46, %5
  %48 = icmp ult i64 %47, 32
  br i1 %48, label %76, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i8* %0 to i64
  %51 = sub i64 %50, %5
  %52 = getelementptr i8, i8* %2, i64 %51
  %53 = icmp ugt i8* %52, %1
  %54 = icmp ult i8* %0, %2
  %55 = and i1 %53, %54
  br i1 %55, label %76, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -32
  %58 = getelementptr i8, i8* %0, i64 %57
  %59 = getelementptr i8, i8* %1, i64 %57
  br label %60

60:                                               ; preds = %60, %56
  %61 = phi i64 [ 0, %56 ], [ %72, %60 ]
  %62 = getelementptr i8, i8* %0, i64 %61
  %63 = getelementptr i8, i8* %1, i64 %61
  %64 = bitcast i8* %62 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !16
  %66 = getelementptr i8, i8* %62, i64 16
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1, !alias.scope !16
  %69 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %69, align 1, !alias.scope !19, !noalias !16
  %70 = getelementptr i8, i8* %63, i64 16
  %71 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %68, <16 x i8>* %71, align 1, !alias.scope !19, !noalias !16
  %72 = add i64 %61, 32
  %73 = icmp eq i64 %72, %57
  br i1 %73, label %74, label %60, !llvm.loop !21

74:                                               ; preds = %60
  %75 = icmp eq i64 %47, %57
  br i1 %75, label %422, label %76

76:                                               ; preds = %74, %49, %45
  %77 = phi i8* [ %0, %49 ], [ %0, %45 ], [ %58, %74 ]
  %78 = phi i8* [ %1, %49 ], [ %1, %45 ], [ %59, %74 ]
  br label %79

79:                                               ; preds = %76, %79
  %80 = phi i8* [ %82, %79 ], [ %77, %76 ]
  %81 = phi i8* [ %84, %79 ], [ %78, %76 ]
  %82 = getelementptr inbounds i8, i8* %80, i64 1
  %83 = load i8, i8* %80, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 1
  store i8 %83, i8* %81, align 1
  %85 = icmp eq i8* %84, %2
  br i1 %85, label %422, label %79, !llvm.loop !23

86:                                               ; preds = %41, %4
  %87 = phi i8* [ %38, %41 ], [ %1, %4 ]
  %88 = getelementptr inbounds i8, i8* %3, i64 -15
  %89 = icmp ult i8* %88, %2
  br i1 %89, label %289, label %90, !prof !4

90:                                               ; preds = %86
  %91 = load i8, i8* %0, align 1
  %92 = getelementptr inbounds i8, i8* %0, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = getelementptr inbounds i8, i8* %0, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %0, i64 3
  %97 = load i8, i8* %96, align 1
  %98 = getelementptr inbounds i8, i8* %0, i64 4
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %0, i64 5
  %101 = load i8, i8* %100, align 1
  %102 = getelementptr inbounds i8, i8* %0, i64 6
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds i8, i8* %0, i64 7
  %105 = load i8, i8* %104, align 1
  store i8 %91, i8* %87, align 1
  %106 = getelementptr inbounds i8, i8* %87, i64 1
  store i8 %93, i8* %106, align 1
  %107 = getelementptr inbounds i8, i8* %87, i64 2
  store i8 %95, i8* %107, align 1
  %108 = getelementptr inbounds i8, i8* %87, i64 3
  store i8 %97, i8* %108, align 1
  %109 = getelementptr inbounds i8, i8* %87, i64 4
  store i8 %99, i8* %109, align 1
  %110 = getelementptr inbounds i8, i8* %87, i64 5
  store i8 %101, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %87, i64 6
  store i8 %103, i8* %111, align 1
  %112 = getelementptr inbounds i8, i8* %87, i64 7
  store i8 %105, i8* %112, align 1
  %113 = getelementptr inbounds i8, i8* %0, i64 8
  %114 = getelementptr inbounds i8, i8* %87, i64 8
  %115 = load i8, i8* %113, align 1
  %116 = getelementptr inbounds i8, i8* %0, i64 9
  %117 = load i8, i8* %116, align 1
  %118 = getelementptr inbounds i8, i8* %0, i64 10
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds i8, i8* %0, i64 11
  %121 = load i8, i8* %120, align 1
  %122 = getelementptr inbounds i8, i8* %0, i64 12
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds i8, i8* %0, i64 13
  %125 = load i8, i8* %124, align 1
  %126 = getelementptr inbounds i8, i8* %0, i64 14
  %127 = load i8, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %0, i64 15
  %129 = load i8, i8* %128, align 1
  store i8 %115, i8* %114, align 1
  %130 = getelementptr inbounds i8, i8* %87, i64 9
  store i8 %117, i8* %130, align 1
  %131 = getelementptr inbounds i8, i8* %87, i64 10
  store i8 %119, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %87, i64 11
  store i8 %121, i8* %132, align 1
  %133 = getelementptr inbounds i8, i8* %87, i64 12
  store i8 %123, i8* %133, align 1
  %134 = getelementptr inbounds i8, i8* %87, i64 13
  store i8 %125, i8* %134, align 1
  %135 = getelementptr inbounds i8, i8* %87, i64 14
  store i8 %127, i8* %135, align 1
  %136 = getelementptr inbounds i8, i8* %87, i64 15
  store i8 %129, i8* %136, align 1
  %137 = getelementptr inbounds i8, i8* %87, i64 16
  %138 = icmp ult i8* %137, %2
  br i1 %138, label %139, label %187

139:                                              ; preds = %90
  %140 = getelementptr inbounds i8, i8* %0, i64 16
  %141 = load i8, i8* %140, align 1
  %142 = getelementptr inbounds i8, i8* %0, i64 17
  %143 = load i8, i8* %142, align 1
  %144 = getelementptr inbounds i8, i8* %0, i64 18
  %145 = load i8, i8* %144, align 1
  %146 = getelementptr inbounds i8, i8* %0, i64 19
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds i8, i8* %0, i64 20
  %149 = load i8, i8* %148, align 1
  %150 = getelementptr inbounds i8, i8* %0, i64 21
  %151 = load i8, i8* %150, align 1
  %152 = getelementptr inbounds i8, i8* %0, i64 22
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds i8, i8* %0, i64 23
  %155 = load i8, i8* %154, align 1
  store i8 %141, i8* %137, align 1
  %156 = getelementptr inbounds i8, i8* %87, i64 17
  store i8 %143, i8* %156, align 1
  %157 = getelementptr inbounds i8, i8* %87, i64 18
  store i8 %145, i8* %157, align 1
  %158 = getelementptr inbounds i8, i8* %87, i64 19
  store i8 %147, i8* %158, align 1
  %159 = getelementptr inbounds i8, i8* %87, i64 20
  store i8 %149, i8* %159, align 1
  %160 = getelementptr inbounds i8, i8* %87, i64 21
  store i8 %151, i8* %160, align 1
  %161 = getelementptr inbounds i8, i8* %87, i64 22
  store i8 %153, i8* %161, align 1
  %162 = getelementptr inbounds i8, i8* %87, i64 23
  store i8 %155, i8* %162, align 1
  %163 = getelementptr inbounds i8, i8* %0, i64 24
  %164 = getelementptr inbounds i8, i8* %87, i64 24
  %165 = load i8, i8* %163, align 1
  %166 = getelementptr inbounds i8, i8* %0, i64 25
  %167 = load i8, i8* %166, align 1
  %168 = getelementptr inbounds i8, i8* %0, i64 26
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %0, i64 27
  %171 = load i8, i8* %170, align 1
  %172 = getelementptr inbounds i8, i8* %0, i64 28
  %173 = load i8, i8* %172, align 1
  %174 = getelementptr inbounds i8, i8* %0, i64 29
  %175 = load i8, i8* %174, align 1
  %176 = getelementptr inbounds i8, i8* %0, i64 30
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds i8, i8* %0, i64 31
  %179 = load i8, i8* %178, align 1
  store i8 %165, i8* %164, align 1
  %180 = getelementptr inbounds i8, i8* %87, i64 25
  store i8 %167, i8* %180, align 1
  %181 = getelementptr inbounds i8, i8* %87, i64 26
  store i8 %169, i8* %181, align 1
  %182 = getelementptr inbounds i8, i8* %87, i64 27
  store i8 %171, i8* %182, align 1
  %183 = getelementptr inbounds i8, i8* %87, i64 28
  store i8 %173, i8* %183, align 1
  %184 = getelementptr inbounds i8, i8* %87, i64 29
  store i8 %175, i8* %184, align 1
  %185 = getelementptr inbounds i8, i8* %87, i64 30
  store i8 %177, i8* %185, align 1
  %186 = getelementptr inbounds i8, i8* %87, i64 31
  store i8 %179, i8* %186, align 1
  br label %187

187:                                              ; preds = %139, %90
  %188 = getelementptr inbounds i8, i8* %87, i64 32
  %189 = icmp ult i8* %188, %2
  br i1 %189, label %190, label %238

190:                                              ; preds = %187
  %191 = getelementptr inbounds i8, i8* %0, i64 32
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 33
  %194 = load i8, i8* %193, align 1
  %195 = getelementptr inbounds i8, i8* %0, i64 34
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds i8, i8* %0, i64 35
  %198 = load i8, i8* %197, align 1
  %199 = getelementptr inbounds i8, i8* %0, i64 36
  %200 = load i8, i8* %199, align 1
  %201 = getelementptr inbounds i8, i8* %0, i64 37
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds i8, i8* %0, i64 38
  %204 = load i8, i8* %203, align 1
  %205 = getelementptr inbounds i8, i8* %0, i64 39
  %206 = load i8, i8* %205, align 1
  store i8 %192, i8* %188, align 1
  %207 = getelementptr inbounds i8, i8* %87, i64 33
  store i8 %194, i8* %207, align 1
  %208 = getelementptr inbounds i8, i8* %87, i64 34
  store i8 %196, i8* %208, align 1
  %209 = getelementptr inbounds i8, i8* %87, i64 35
  store i8 %198, i8* %209, align 1
  %210 = getelementptr inbounds i8, i8* %87, i64 36
  store i8 %200, i8* %210, align 1
  %211 = getelementptr inbounds i8, i8* %87, i64 37
  store i8 %202, i8* %211, align 1
  %212 = getelementptr inbounds i8, i8* %87, i64 38
  store i8 %204, i8* %212, align 1
  %213 = getelementptr inbounds i8, i8* %87, i64 39
  store i8 %206, i8* %213, align 1
  %214 = getelementptr inbounds i8, i8* %0, i64 40
  %215 = getelementptr inbounds i8, i8* %87, i64 40
  %216 = load i8, i8* %214, align 1
  %217 = getelementptr inbounds i8, i8* %0, i64 41
  %218 = load i8, i8* %217, align 1
  %219 = getelementptr inbounds i8, i8* %0, i64 42
  %220 = load i8, i8* %219, align 1
  %221 = getelementptr inbounds i8, i8* %0, i64 43
  %222 = load i8, i8* %221, align 1
  %223 = getelementptr inbounds i8, i8* %0, i64 44
  %224 = load i8, i8* %223, align 1
  %225 = getelementptr inbounds i8, i8* %0, i64 45
  %226 = load i8, i8* %225, align 1
  %227 = getelementptr inbounds i8, i8* %0, i64 46
  %228 = load i8, i8* %227, align 1
  %229 = getelementptr inbounds i8, i8* %0, i64 47
  %230 = load i8, i8* %229, align 1
  store i8 %216, i8* %215, align 1
  %231 = getelementptr inbounds i8, i8* %87, i64 41
  store i8 %218, i8* %231, align 1
  %232 = getelementptr inbounds i8, i8* %87, i64 42
  store i8 %220, i8* %232, align 1
  %233 = getelementptr inbounds i8, i8* %87, i64 43
  store i8 %222, i8* %233, align 1
  %234 = getelementptr inbounds i8, i8* %87, i64 44
  store i8 %224, i8* %234, align 1
  %235 = getelementptr inbounds i8, i8* %87, i64 45
  store i8 %226, i8* %235, align 1
  %236 = getelementptr inbounds i8, i8* %87, i64 46
  store i8 %228, i8* %236, align 1
  %237 = getelementptr inbounds i8, i8* %87, i64 47
  store i8 %230, i8* %237, align 1
  br label %238

238:                                              ; preds = %190, %187
  %239 = getelementptr inbounds i8, i8* %87, i64 48
  %240 = icmp ult i8* %239, %2
  br i1 %240, label %241, label %422

241:                                              ; preds = %238
  %242 = getelementptr inbounds i8, i8* %0, i64 48
  %243 = load i8, i8* %242, align 1
  %244 = getelementptr inbounds i8, i8* %0, i64 49
  %245 = load i8, i8* %244, align 1
  %246 = getelementptr inbounds i8, i8* %0, i64 50
  %247 = load i8, i8* %246, align 1
  %248 = getelementptr inbounds i8, i8* %0, i64 51
  %249 = load i8, i8* %248, align 1
  %250 = getelementptr inbounds i8, i8* %0, i64 52
  %251 = load i8, i8* %250, align 1
  %252 = getelementptr inbounds i8, i8* %0, i64 53
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %0, i64 54
  %255 = load i8, i8* %254, align 1
  %256 = getelementptr inbounds i8, i8* %0, i64 55
  %257 = load i8, i8* %256, align 1
  store i8 %243, i8* %239, align 1
  %258 = getelementptr inbounds i8, i8* %87, i64 49
  store i8 %245, i8* %258, align 1
  %259 = getelementptr inbounds i8, i8* %87, i64 50
  store i8 %247, i8* %259, align 1
  %260 = getelementptr inbounds i8, i8* %87, i64 51
  store i8 %249, i8* %260, align 1
  %261 = getelementptr inbounds i8, i8* %87, i64 52
  store i8 %251, i8* %261, align 1
  %262 = getelementptr inbounds i8, i8* %87, i64 53
  store i8 %253, i8* %262, align 1
  %263 = getelementptr inbounds i8, i8* %87, i64 54
  store i8 %255, i8* %263, align 1
  %264 = getelementptr inbounds i8, i8* %87, i64 55
  store i8 %257, i8* %264, align 1
  %265 = getelementptr inbounds i8, i8* %0, i64 56
  %266 = getelementptr inbounds i8, i8* %87, i64 56
  %267 = load i8, i8* %265, align 1
  %268 = getelementptr inbounds i8, i8* %0, i64 57
  %269 = load i8, i8* %268, align 1
  %270 = getelementptr inbounds i8, i8* %0, i64 58
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %0, i64 59
  %273 = load i8, i8* %272, align 1
  %274 = getelementptr inbounds i8, i8* %0, i64 60
  %275 = load i8, i8* %274, align 1
  %276 = getelementptr inbounds i8, i8* %0, i64 61
  %277 = load i8, i8* %276, align 1
  %278 = getelementptr inbounds i8, i8* %0, i64 62
  %279 = load i8, i8* %278, align 1
  %280 = getelementptr inbounds i8, i8* %0, i64 63
  %281 = load i8, i8* %280, align 1
  store i8 %267, i8* %266, align 1
  %282 = getelementptr inbounds i8, i8* %87, i64 57
  store i8 %269, i8* %282, align 1
  %283 = getelementptr inbounds i8, i8* %87, i64 58
  store i8 %271, i8* %283, align 1
  %284 = getelementptr inbounds i8, i8* %87, i64 59
  store i8 %273, i8* %284, align 1
  %285 = getelementptr inbounds i8, i8* %87, i64 60
  store i8 %275, i8* %285, align 1
  %286 = getelementptr inbounds i8, i8* %87, i64 61
  store i8 %277, i8* %286, align 1
  %287 = getelementptr inbounds i8, i8* %87, i64 62
  store i8 %279, i8* %287, align 1
  %288 = getelementptr inbounds i8, i8* %87, i64 63
  store i8 %281, i8* %288, align 1
  br label %422

289:                                              ; preds = %86
  %290 = getelementptr inbounds i8, i8* %3, i64 -16
  %291 = icmp ult i8* %87, %290
  br i1 %291, label %296, label %292

292:                                              ; preds = %296, %289
  %293 = phi i8* [ %87, %289 ], [ %345, %296 ]
  %294 = phi i8* [ %0, %289 ], [ %346, %296 ]
  %295 = icmp ult i8* %293, %2
  br i1 %295, label %348, label %422

296:                                              ; preds = %289, %296
  %297 = phi i8* [ %346, %296 ], [ %0, %289 ]
  %298 = phi i8* [ %345, %296 ], [ %87, %289 ]
  %299 = load i8, i8* %297, align 1
  %300 = getelementptr inbounds i8, i8* %297, i64 1
  %301 = load i8, i8* %300, align 1
  %302 = getelementptr inbounds i8, i8* %297, i64 2
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds i8, i8* %297, i64 3
  %305 = load i8, i8* %304, align 1
  %306 = getelementptr inbounds i8, i8* %297, i64 4
  %307 = load i8, i8* %306, align 1
  %308 = getelementptr inbounds i8, i8* %297, i64 5
  %309 = load i8, i8* %308, align 1
  %310 = getelementptr inbounds i8, i8* %297, i64 6
  %311 = load i8, i8* %310, align 1
  %312 = getelementptr inbounds i8, i8* %297, i64 7
  %313 = load i8, i8* %312, align 1
  store i8 %299, i8* %298, align 1
  %314 = getelementptr inbounds i8, i8* %298, i64 1
  store i8 %301, i8* %314, align 1
  %315 = getelementptr inbounds i8, i8* %298, i64 2
  store i8 %303, i8* %315, align 1
  %316 = getelementptr inbounds i8, i8* %298, i64 3
  store i8 %305, i8* %316, align 1
  %317 = getelementptr inbounds i8, i8* %298, i64 4
  store i8 %307, i8* %317, align 1
  %318 = getelementptr inbounds i8, i8* %298, i64 5
  store i8 %309, i8* %318, align 1
  %319 = getelementptr inbounds i8, i8* %298, i64 6
  store i8 %311, i8* %319, align 1
  %320 = getelementptr inbounds i8, i8* %298, i64 7
  store i8 %313, i8* %320, align 1
  %321 = getelementptr inbounds i8, i8* %297, i64 8
  %322 = getelementptr inbounds i8, i8* %298, i64 8
  %323 = load i8, i8* %321, align 1
  %324 = getelementptr inbounds i8, i8* %297, i64 9
  %325 = load i8, i8* %324, align 1
  %326 = getelementptr inbounds i8, i8* %297, i64 10
  %327 = load i8, i8* %326, align 1
  %328 = getelementptr inbounds i8, i8* %297, i64 11
  %329 = load i8, i8* %328, align 1
  %330 = getelementptr inbounds i8, i8* %297, i64 12
  %331 = load i8, i8* %330, align 1
  %332 = getelementptr inbounds i8, i8* %297, i64 13
  %333 = load i8, i8* %332, align 1
  %334 = getelementptr inbounds i8, i8* %297, i64 14
  %335 = load i8, i8* %334, align 1
  %336 = getelementptr inbounds i8, i8* %297, i64 15
  %337 = load i8, i8* %336, align 1
  store i8 %323, i8* %322, align 1
  %338 = getelementptr inbounds i8, i8* %298, i64 9
  store i8 %325, i8* %338, align 1
  %339 = getelementptr inbounds i8, i8* %298, i64 10
  store i8 %327, i8* %339, align 1
  %340 = getelementptr inbounds i8, i8* %298, i64 11
  store i8 %329, i8* %340, align 1
  %341 = getelementptr inbounds i8, i8* %298, i64 12
  store i8 %331, i8* %341, align 1
  %342 = getelementptr inbounds i8, i8* %298, i64 13
  store i8 %333, i8* %342, align 1
  %343 = getelementptr inbounds i8, i8* %298, i64 14
  store i8 %335, i8* %343, align 1
  %344 = getelementptr inbounds i8, i8* %298, i64 15
  store i8 %337, i8* %344, align 1
  %345 = getelementptr inbounds i8, i8* %298, i64 16
  %346 = getelementptr inbounds i8, i8* %297, i64 16
  %347 = icmp ult i8* %345, %290
  br i1 %347, label %296, label %292, !llvm.loop !24

348:                                              ; preds = %292
  %349 = getelementptr inbounds i8, i8* %3, i64 -8
  %350 = icmp ugt i8* %293, %349
  br i1 %350, label %376, label %351, !prof !3

351:                                              ; preds = %348
  %352 = load i8, i8* %294, align 1
  %353 = getelementptr inbounds i8, i8* %294, i64 1
  %354 = load i8, i8* %353, align 1
  %355 = getelementptr inbounds i8, i8* %294, i64 2
  %356 = load i8, i8* %355, align 1
  %357 = getelementptr inbounds i8, i8* %294, i64 3
  %358 = load i8, i8* %357, align 1
  %359 = getelementptr inbounds i8, i8* %294, i64 4
  %360 = load i8, i8* %359, align 1
  %361 = getelementptr inbounds i8, i8* %294, i64 5
  %362 = load i8, i8* %361, align 1
  %363 = getelementptr inbounds i8, i8* %294, i64 6
  %364 = load i8, i8* %363, align 1
  %365 = getelementptr inbounds i8, i8* %294, i64 7
  %366 = load i8, i8* %365, align 1
  store i8 %352, i8* %293, align 1
  %367 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %354, i8* %367, align 1
  %368 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %356, i8* %368, align 1
  %369 = getelementptr inbounds i8, i8* %293, i64 3
  store i8 %358, i8* %369, align 1
  %370 = getelementptr inbounds i8, i8* %293, i64 4
  store i8 %360, i8* %370, align 1
  %371 = getelementptr inbounds i8, i8* %293, i64 5
  store i8 %362, i8* %371, align 1
  %372 = getelementptr inbounds i8, i8* %293, i64 6
  store i8 %364, i8* %372, align 1
  %373 = getelementptr inbounds i8, i8* %293, i64 7
  store i8 %366, i8* %373, align 1
  %374 = getelementptr inbounds i8, i8* %294, i64 8
  %375 = getelementptr inbounds i8, i8* %293, i64 8
  br label %376

376:                                              ; preds = %348, %351
  %377 = phi i8* [ %375, %351 ], [ %293, %348 ]
  %378 = phi i8* [ %374, %351 ], [ %294, %348 ]
  %379 = ptrtoint i8* %377 to i64
  %380 = icmp ult i8* %377, %2
  br i1 %380, label %381, label %422

381:                                              ; preds = %376
  %382 = ptrtoint i8* %2 to i64
  %383 = sub i64 %382, %379
  %384 = icmp ult i64 %383, 32
  br i1 %384, label %412, label %385

385:                                              ; preds = %381
  %386 = ptrtoint i8* %2 to i64
  %387 = sub i64 %386, %379
  %388 = getelementptr i8, i8* %378, i64 %387
  %389 = icmp ult i8* %377, %388
  %390 = icmp ult i8* %378, %2
  %391 = and i1 %389, %390
  br i1 %391, label %412, label %392

392:                                              ; preds = %385
  %393 = and i64 %383, -32
  %394 = getelementptr i8, i8* %378, i64 %393
  %395 = getelementptr i8, i8* %377, i64 %393
  br label %396

396:                                              ; preds = %396, %392
  %397 = phi i64 [ 0, %392 ], [ %408, %396 ]
  %398 = getelementptr i8, i8* %378, i64 %397
  %399 = getelementptr i8, i8* %377, i64 %397
  %400 = bitcast i8* %398 to <16 x i8>*
  %401 = load <16 x i8>, <16 x i8>* %400, align 1, !alias.scope !25
  %402 = getelementptr i8, i8* %398, i64 16
  %403 = bitcast i8* %402 to <16 x i8>*
  %404 = load <16 x i8>, <16 x i8>* %403, align 1, !alias.scope !25
  %405 = bitcast i8* %399 to <16 x i8>*
  store <16 x i8> %401, <16 x i8>* %405, align 1, !alias.scope !28, !noalias !25
  %406 = getelementptr i8, i8* %399, i64 16
  %407 = bitcast i8* %406 to <16 x i8>*
  store <16 x i8> %404, <16 x i8>* %407, align 1, !alias.scope !28, !noalias !25
  %408 = add i64 %397, 32
  %409 = icmp eq i64 %408, %393
  br i1 %409, label %410, label %396, !llvm.loop !30

410:                                              ; preds = %396
  %411 = icmp eq i64 %383, %393
  br i1 %411, label %422, label %412

412:                                              ; preds = %410, %385, %381
  %413 = phi i8* [ %378, %385 ], [ %378, %381 ], [ %394, %410 ]
  %414 = phi i8* [ %377, %385 ], [ %377, %381 ], [ %395, %410 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i8* [ %418, %415 ], [ %413, %412 ]
  %417 = phi i8* [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i8, i8* %416, i64 1
  %419 = load i8, i8* %416, align 1
  %420 = getelementptr inbounds i8, i8* %417, i64 1
  store i8 %419, i8* %417, align 1
  %421 = icmp eq i8* %420, %2
  br i1 %421, label %422, label %415, !llvm.loop !31

422:                                              ; preds = %415, %79, %410, %74, %376, %43, %241, %238, %292, %41
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_28SnappyDecompressionValidatorEEEvPT_(%"class.snappy::SnappyDecompressor"*, %"class.snappy::SnappyDecompressionValidator"*) local_unnamed_addr #1 comdat align 32 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = ptrtoint i8* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 4
  %12 = select i1 %11, i64 %10, i64 4
  %13 = sub i64 0, %12
  %14 = getelementptr inbounds i8, i8* %7, i64 %13
  %15 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 3
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %1, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i8* %5, %14
  br i1 %18, label %31, label %19, !prof !3

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %20, label %21, label %251, !prof !3

21:                                               ; preds = %19
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = ptrtoint i8* %23 to i64
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %24, %25
  %27 = icmp slt i64 %26, 4
  %28 = select i1 %27, i64 %26, i64 4
  %29 = sub i64 0, %28
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  store i8* %30, i8** %15, align 8
  br label %31

31:                                               ; preds = %2, %21
  %32 = phi i8* [ %23, %21 ], [ %7, %2 ]
  %33 = phi i8* [ %22, %21 ], [ %5, %2 ]
  %34 = getelementptr inbounds %"class.snappy::SnappyDecompressionValidator", %"class.snappy::SnappyDecompressionValidator"* %1, i64 0, i32 0
  %35 = bitcast i8** %6 to i64*
  %36 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %37 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %38 = bitcast i64* %3 to i8*
  br label %39

39:                                               ; preds = %247, %31
  %40 = phi i8* [ %32, %31 ], [ %250, %247 ]
  %41 = phi i64 [ %17, %31 ], [ %248, %247 ]
  %42 = phi i8* [ %33, %31 ], [ %249, %247 ]
  %43 = add i64 %41, -1
  %44 = call { i8*, i64 } @_ZN6snappy20DecompressBranchlessImEENSt3__14pairIPKhlEES4_S4_lT_l(i8* %42, i8* %40, i64 %43, i64 1, i64 9223372036854775744)
  %45 = extractvalue { i8*, i64 } %44, 0
  %46 = extractvalue { i8*, i64 } %44, 1
  %47 = add i64 %46, 1
  %48 = load i8*, i8** %15, align 8
  %49 = icmp ult i8* %45, %48
  br i1 %49, label %62, label %50, !prof !3

50:                                               ; preds = %39
  store i8* %45, i8** %4, align 8
  %51 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %51, label %52, label %251, !prof !3

52:                                               ; preds = %50
  %53 = load i8*, i8** %4, align 8
  %54 = load i8*, i8** %6, align 8
  %55 = ptrtoint i8* %54 to i64
  %56 = ptrtoint i8* %53 to i64
  %57 = sub i64 %55, %56
  %58 = icmp slt i64 %57, 4
  %59 = select i1 %58, i64 %57, i64 4
  %60 = sub i64 0, %59
  %61 = getelementptr inbounds i8, i8* %54, i64 %60
  store i8* %61, i8** %15, align 8
  br label %62

62:                                               ; preds = %39, %52
  %63 = phi i8* [ %61, %52 ], [ %48, %39 ]
  %64 = phi i8* [ %53, %52 ], [ %45, %39 ]
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %64, i64 1
  %68 = and i32 %66, 3
  switch i32 %68, label %194 [
    i32 0, label %69
    i32 3, label %166
  ], !prof !13

69:                                               ; preds = %62
  %70 = lshr i32 %66, 2
  %71 = add nuw nsw i32 %70, 1
  %72 = zext i32 %71 to i64
  %73 = load i64, i64* %35, align 8
  %74 = icmp ugt i8 %65, -17
  br i1 %74, label %75, label %102, !prof !4

75:                                               ; preds = %69
  %76 = add nsw i64 %72, -60
  %77 = load i8, i8* %67, align 1
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds i8, i8* %64, i64 2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = shl nuw nsw i64 %81, 8
  %83 = or i64 %82, %78
  %84 = getelementptr inbounds i8, i8* %64, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 16
  %88 = or i64 %83, %87
  %89 = getelementptr inbounds i8, i8* %64, i64 4
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = shl nuw nsw i64 %91, 24
  %93 = or i64 %88, %92
  %94 = shl nsw i64 %76, 3
  %95 = and i64 %94, 4294967288
  %96 = shl i64 4294967295, %95
  %97 = xor i64 %96, 4294967295
  %98 = and i64 %93, %97
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 4294967295
  %101 = getelementptr inbounds i8, i8* %67, i64 %76
  br label %102

102:                                              ; preds = %75, %69
  %103 = phi i64 [ %100, %75 ], [ %72, %69 ]
  %104 = phi i8* [ %101, %75 ], [ %67, %69 ]
  %105 = ptrtoint i8* %104 to i64
  %106 = sub i64 %73, %105
  %107 = icmp ugt i64 %103, %106
  br i1 %107, label %108, label %143

108:                                              ; preds = %102, %133
  %109 = phi i64 [ %134, %133 ], [ %103, %102 ]
  %110 = phi i64 [ %129, %133 ], [ %106, %102 ]
  %111 = phi i64 [ %112, %133 ], [ %47, %102 ]
  %112 = add i64 %110, %111
  %113 = load i64, i64* %34, align 8
  %114 = icmp ugt i64 %112, %113
  br i1 %114, label %251, label %115

115:                                              ; preds = %108
  %116 = load %"class.snappy::Source"*, %"class.snappy::Source"** %36, align 8
  %117 = load i32, i32* %37, align 8
  %118 = zext i32 %117 to i64
  %119 = bitcast %"class.snappy::Source"* %116 to void (%"class.snappy::Source"*, i64)***
  %120 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %120, i64 4
  %122 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %121, align 8
  call void %122(%"class.snappy::Source"* %116, i64 %118) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %123 = load %"class.snappy::Source"*, %"class.snappy::Source"** %36, align 8
  %124 = bitcast %"class.snappy::Source"* %123 to i8* (%"class.snappy::Source"*, i64*)***
  %125 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %124, align 8
  %126 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %125, i64 3
  %127 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %126, align 8
  %128 = call i8* %127(%"class.snappy::Source"* %123, i64* nonnull %3) #14
  %129 = load i64, i64* %3, align 8
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %37, align 8
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  br label %251

133:                                              ; preds = %115
  %134 = sub i64 %109, %110
  %135 = getelementptr inbounds i8, i8* %128, i64 %129
  store i8* %135, i8** %6, align 8
  %136 = icmp slt i64 %129, 4
  %137 = select i1 %136, i64 %129, i64 4
  %138 = sub i64 0, %137
  %139 = getelementptr inbounds i8, i8* %135, i64 %138
  store i8* %139, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  %140 = icmp ugt i64 %134, %129
  br i1 %140, label %108, label %141

141:                                              ; preds = %133
  %142 = getelementptr inbounds i8, i8* %135, i64 %138
  br label %143

143:                                              ; preds = %141, %102
  %144 = phi i8* [ %63, %102 ], [ %142, %141 ]
  %145 = phi i64 [ %47, %102 ], [ %112, %141 ]
  %146 = phi i64 [ %103, %102 ], [ %134, %141 ]
  %147 = phi i8* [ %104, %102 ], [ %128, %141 ]
  %148 = add i64 %146, %145
  %149 = load i64, i64* %34, align 8
  %150 = icmp ugt i64 %148, %149
  br i1 %150, label %251, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds i8, i8* %147, i64 %146
  %153 = icmp ult i8* %152, %144
  br i1 %153, label %247, label %154, !prof !3

154:                                              ; preds = %151
  store i8* %152, i8** %4, align 8
  %155 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %155, label %156, label %251, !prof !3

156:                                              ; preds = %154
  %157 = load i8*, i8** %4, align 8
  %158 = load i8*, i8** %6, align 8
  %159 = ptrtoint i8* %158 to i64
  %160 = ptrtoint i8* %157 to i64
  %161 = sub i64 %159, %160
  %162 = icmp slt i64 %161, 4
  %163 = select i1 %162, i64 %161, i64 4
  %164 = sub i64 0, %163
  %165 = getelementptr inbounds i8, i8* %158, i64 %164
  store i8* %165, i8** %15, align 8
  br label %247

166:                                              ; preds = %62
  %167 = load i8, i8* %67, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds i8, i8* %64, i64 2
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = shl nuw nsw i64 %171, 8
  %173 = or i64 %172, %168
  %174 = getelementptr inbounds i8, i8* %64, i64 3
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = shl nuw nsw i64 %176, 16
  %178 = or i64 %173, %177
  %179 = getelementptr inbounds i8, i8* %64, i64 4
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  %182 = shl nuw nsw i64 %181, 24
  %183 = or i64 %178, %182
  %184 = add nsw i64 %183, -1
  %185 = icmp ugt i64 %47, %184
  br i1 %185, label %186, label %251

186:                                              ; preds = %166
  %187 = getelementptr inbounds i8, i8* %64, i64 5
  %188 = lshr i32 %66, 2
  %189 = add nuw nsw i32 %188, 1
  %190 = zext i32 %189 to i64
  %191 = add i64 %47, %190
  %192 = load i64, i64* %34, align 8
  %193 = icmp ugt i64 %191, %192
  br i1 %193, label %251, label %231

194:                                              ; preds = %62
  %195 = zext i8 %65 to i64
  %196 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %195
  %197 = load i16, i16* %196, align 2
  %198 = sext i16 %197 to i64
  %199 = load i8, i8* %67, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds i8, i8* %64, i64 2
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = shl nuw nsw i64 %203, 8
  %205 = or i64 %204, %200
  %206 = getelementptr inbounds i8, i8* %64, i64 3
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = shl nuw nsw i64 %208, 16
  %210 = or i64 %205, %209
  %211 = shl nuw nsw i32 %68, 3
  %212 = zext i32 %211 to i64
  %213 = shl i64 4294967295, %212
  %214 = xor i64 %213, 4294967295
  %215 = and i64 %210, %214
  %216 = and i16 %197, 255
  %217 = zext i16 %216 to i64
  %218 = sub nsw i64 %217, %198
  %219 = add nsw i64 %218, %215
  %220 = and i64 %219, 4294967295
  %221 = add nsw i64 %220, -1
  %222 = icmp ugt i64 %47, %221
  br i1 %222, label %223, label %251

223:                                              ; preds = %194
  %224 = add i64 %47, %217
  %225 = load i64, i64* %34, align 8
  %226 = icmp ugt i64 %224, %225
  br i1 %226, label %251, label %227

227:                                              ; preds = %223
  %228 = zext i32 %68 to i64
  %229 = getelementptr inbounds i8, i8* %67, i64 %228
  %230 = icmp ult i8* %229, %63
  br i1 %230, label %247, label %231

231:                                              ; preds = %186, %227
  %232 = phi i64 [ %191, %186 ], [ %224, %227 ]
  %233 = phi i8* [ %187, %186 ], [ %229, %227 ]
  %234 = icmp ult i8* %233, %63
  br i1 %234, label %247, label %235, !prof !3

235:                                              ; preds = %231
  store i8* %233, i8** %4, align 8
  %236 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %236, label %237, label %251, !prof !3

237:                                              ; preds = %235
  %238 = load i8*, i8** %4, align 8
  %239 = load i8*, i8** %6, align 8
  %240 = ptrtoint i8* %239 to i64
  %241 = ptrtoint i8* %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp slt i64 %242, 4
  %244 = select i1 %243, i64 %242, i64 4
  %245 = sub i64 0, %244
  %246 = getelementptr inbounds i8, i8* %239, i64 %245
  store i8* %246, i8** %15, align 8
  br label %247

247:                                              ; preds = %237, %231, %151, %156, %227
  %248 = phi i64 [ %224, %227 ], [ %148, %156 ], [ %148, %151 ], [ %232, %231 ], [ %232, %237 ]
  %249 = phi i8* [ %229, %227 ], [ %157, %156 ], [ %152, %151 ], [ %233, %231 ], [ %238, %237 ]
  %250 = load i8*, i8** %6, align 8
  br label %39

251:                                              ; preds = %223, %143, %186, %194, %166, %154, %235, %50, %108, %132, %19
  %252 = phi i64 [ %17, %19 ], [ %112, %132 ], [ %112, %108 ], [ %224, %223 ], [ %47, %194 ], [ %47, %166 ], [ %191, %186 ], [ %148, %154 ], [ %148, %143 ], [ %232, %235 ], [ %47, %50 ]
  store i64 %252, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZN6snappy20DecompressBranchlessImEENSt3__14pairIPKhlEES4_S4_lT_l(i8*, i8*, i64, i64, i64) local_unnamed_addr #1 comdat {
  %6 = ptrtoint i8* %0 to i64
  %7 = add nsw i64 %4, -64
  %8 = ptrtoint i8* %1 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 130
  %11 = icmp sgt i64 %7, %2
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %132

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %1, i64 -129
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %0, align 1
  %17 = zext i8 %16 to i64
  br label %18

18:                                               ; preds = %153, %13
  %19 = phi i8* [ %15, %13 ], [ %104, %153 ]
  %20 = phi i64 [ %2, %13 ], [ %154, %153 ]
  %21 = phi i64 [ %17, %13 ], [ %99, %153 ]
  %22 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i64
  %25 = lshr i64 %21, 2
  %26 = tail call { i64, i8 } asm "and $$3, ${0:k}\0A\09", "=r,={@ccz},0,~{dirflag},~{fpsr},~{flags}"(i64 %21) #16, !srcloc !10
  %27 = extractvalue { i64, i8 } %26, 0
  %28 = extractvalue { i64, i8 } %26, 1
  %29 = add nuw nsw i64 %25, 1
  %30 = getelementptr inbounds i8, i8* %19, i64 %29
  %31 = load volatile i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i8, i8* %19, i64 %27
  %34 = load volatile i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = and i8 %28, 1
  %37 = icmp ne i8 %36, 0
  %38 = select i1 %37, i64 %32, i64 %35
  %39 = getelementptr inbounds i8, i8* %19, i64 1
  %40 = getelementptr inbounds i8, i8* %39, i64 %27
  %41 = getelementptr inbounds i8, i8* %19, i64 2
  %42 = getelementptr inbounds i8, i8* %41, i64 %25
  %43 = select i1 %37, i8* %42, i8* %40
  tail call void asm sideeffect "", "r,~{dirflag},~{fpsr},~{flags}"(i64 %35) #14, !srcloc !11
  %44 = load i8, i8* %19, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8, i8* %39, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 8
  %49 = or i32 %48, %45
  %50 = load i8, i8* %41, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 16
  %53 = or i32 %49, %52
  %54 = getelementptr inbounds i8, i8* %19, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw i32 %56, 24
  %58 = or i32 %53, %57
  %59 = and i64 %24, 255
  %60 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 1, i64 %27
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %58, %61
  %63 = zext i32 %62 to i64
  %64 = sub nsw i64 %24, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %75, !prof !4

66:                                               ; preds = %18
  %67 = trunc i16 %23 to i8
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %127, label %69, !prof !4

69:                                               ; preds = %66
  %70 = add nsw i64 %64, %20
  %71 = sub i64 %70, %59
  %72 = icmp slt i64 %71, 0
  %73 = icmp eq i64 %59, %64
  %74 = or i1 %73, %72
  br i1 %74, label %127, label %81, !prof !32

75:                                               ; preds = %18
  %76 = add nsw i64 %64, %20
  %77 = sub i64 %76, %59
  %78 = icmp slt i64 %77, 0
  br i1 %78, label %79, label %81, !prof !4

79:                                               ; preds = %75
  tail call void asm sideeffect "", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !15
  %80 = icmp eq i64 %27, 0
  br i1 %80, label %81, label %127

81:                                               ; preds = %75, %79, %69
  %82 = add i64 %59, %20
  %83 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %38
  %84 = load i16, i16* %83, align 2
  %85 = sext i16 %84 to i64
  %86 = lshr i64 %38, 2
  %87 = tail call { i64, i8 } asm "and $$3, ${0:k}\0A\09", "=r,={@ccz},0,~{dirflag},~{fpsr},~{flags}"(i64 %38) #16, !srcloc !10
  %88 = extractvalue { i64, i8 } %87, 0
  %89 = extractvalue { i64, i8 } %87, 1
  %90 = add nuw nsw i64 %86, 1
  %91 = getelementptr inbounds i8, i8* %43, i64 %90
  %92 = load volatile i8, i8* %91, align 1
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds i8, i8* %43, i64 %88
  %95 = load volatile i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = and i8 %89, 1
  %98 = icmp ne i8 %97, 0
  %99 = select i1 %98, i64 %93, i64 %96
  %100 = getelementptr inbounds i8, i8* %43, i64 1
  %101 = getelementptr inbounds i8, i8* %100, i64 %88
  %102 = getelementptr inbounds i8, i8* %43, i64 2
  %103 = getelementptr inbounds i8, i8* %102, i64 %86
  %104 = select i1 %98, i8* %103, i8* %101
  tail call void asm sideeffect "", "r,~{dirflag},~{fpsr},~{flags}"(i64 %96) #14, !srcloc !11
  %105 = load i8, i8* %43, align 1
  %106 = zext i8 %105 to i32
  %107 = load i8, i8* %100, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %109, %106
  %111 = load i8, i8* %102, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw nsw i32 %112, 16
  %114 = or i32 %110, %113
  %115 = getelementptr inbounds i8, i8* %43, i64 3
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw i32 %117, 24
  %119 = or i32 %114, %118
  %120 = and i64 %85, 255
  %121 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 1, i64 %88
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %119, %122
  %124 = zext i32 %123 to i64
  %125 = sub nsw i64 %85, %124
  %126 = icmp sgt i64 %125, 0
  br i1 %126, label %144, label %138, !prof !4

127:                                              ; preds = %153, %66, %79, %69, %142, %144, %147
  %128 = phi i64 [ %20, %69 ], [ %20, %79 ], [ %20, %66 ], [ %82, %142 ], [ %82, %144 ], [ %82, %147 ], [ %154, %153 ]
  %129 = phi i8* [ %19, %69 ], [ %19, %79 ], [ %19, %66 ], [ %43, %142 ], [ %43, %144 ], [ %43, %147 ], [ %104, %153 ]
  %130 = getelementptr inbounds i8, i8* %129, i64 -1
  %131 = ptrtoint i8* %130 to i64
  br label %132

132:                                              ; preds = %127, %5
  %133 = phi i64 [ %131, %127 ], [ %6, %5 ]
  %134 = phi i64 [ %128, %127 ], [ %2, %5 ]
  %135 = inttoptr i64 %133 to i8*
  %136 = insertvalue { i8*, i64 } undef, i8* %135, 0
  %137 = insertvalue { i8*, i64 } %136, i64 %134, 1
  ret { i8*, i64 } %137

138:                                              ; preds = %81
  %139 = add nsw i64 %125, %82
  %140 = sub i64 %139, %120
  %141 = icmp slt i64 %140, 0
  br i1 %141, label %142, label %153, !prof !4

142:                                              ; preds = %138
  tail call void asm sideeffect "", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !15
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %153, label %127

144:                                              ; preds = %81
  %145 = trunc i16 %84 to i8
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %127, label %147, !prof !4

147:                                              ; preds = %144
  %148 = add nsw i64 %125, %82
  %149 = sub i64 %148, %120
  %150 = icmp slt i64 %149, 0
  %151 = icmp eq i64 %120, %125
  %152 = or i1 %151, %150
  br i1 %152, label %127, label %153, !prof !32

153:                                              ; preds = %147, %142, %138
  %154 = add i64 %120, %82
  %155 = icmp ugt i8* %14, %104
  %156 = icmp slt i64 %154, %7
  %157 = and i1 %155, %156
  br i1 %157, label %18, label %127
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_17SnappyArrayWriterEEEvPT_(%"class.snappy::SnappyDecompressor"*, %"class.snappy::SnappyArrayWriter"*) local_unnamed_addr #1 comdat align 32 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = ptrtoint i8* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 4
  %12 = select i1 %11, i64 %10, i64 4
  %13 = sub i64 0, %12
  %14 = getelementptr inbounds i8, i8* %7, i64 %13
  %15 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 3
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %1, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i8* %5, %14
  br i1 %19, label %32, label %20, !prof !3

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %21, label %22, label %354, !prof !3

22:                                               ; preds = %20
  %23 = load i8*, i8** %4, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = ptrtoint i8* %24 to i64
  %26 = ptrtoint i8* %23 to i64
  %27 = sub i64 %25, %26
  %28 = icmp slt i64 %27, 4
  %29 = select i1 %28, i64 %27, i64 4
  %30 = sub i64 0, %29
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  store i8* %31, i8** %15, align 8
  br label %32

32:                                               ; preds = %2, %22
  %33 = phi i8* [ %23, %22 ], [ %5, %2 ]
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %1, i64 0, i32 3
  %37 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %1, i64 0, i32 0
  %38 = bitcast %"class.snappy::SnappyArrayWriter"* %1 to i64*
  %39 = bitcast i8** %36 to i64*
  %40 = getelementptr inbounds %"class.snappy::SnappyArrayWriter", %"class.snappy::SnappyArrayWriter"* %1, i64 0, i32 2
  %41 = bitcast i8** %6 to i64*
  %42 = bitcast i8** %40 to i64*
  %43 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %44 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %45 = bitcast i64* %3 to i8*
  br label %46

46:                                               ; preds = %344, %32
  %47 = phi i64 [ %18, %32 ], [ %345, %344 ]
  %48 = phi i32 [ %35, %32 ], [ %346, %344 ]
  %49 = phi i8* [ %33, %32 ], [ %347, %344 ]
  %50 = load i8*, i8** %37, align 8
  %51 = icmp eq i8* %50, null
  %52 = ptrtoint i8* %50 to i64
  br i1 %51, label %81, label %53

53:                                               ; preds = %46
  %54 = load i64, i64* %39, align 8
  %55 = sub i64 %54, %52
  %56 = load i8*, i8** %6, align 8
  %57 = sub i64 %47, %52
  %58 = call { i8*, i64 } @_ZN6snappy20DecompressBranchlessIPcEENSt3__14pairIPKhlEES5_S5_lT_l(i8* %49, i8* %56, i64 %57, i8* nonnull %50, i64 %55)
  %59 = extractvalue { i8*, i64 } %58, 0
  %60 = extractvalue { i8*, i64 } %58, 1
  %61 = getelementptr inbounds i8, i8* %50, i64 %60
  %62 = ptrtoint i8* %61 to i64
  %63 = load i8*, i8** %15, align 8
  %64 = icmp ult i8* %59, %63
  br i1 %64, label %77, label %65, !prof !3

65:                                               ; preds = %53
  store i8* %59, i8** %4, align 8
  %66 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %66, label %67, label %348, !prof !3

67:                                               ; preds = %65
  %68 = load i8*, i8** %4, align 8
  %69 = load i8*, i8** %6, align 8
  %70 = ptrtoint i8* %69 to i64
  %71 = ptrtoint i8* %68 to i64
  %72 = sub i64 %70, %71
  %73 = icmp slt i64 %72, 4
  %74 = select i1 %73, i64 %72, i64 4
  %75 = sub i64 0, %74
  %76 = getelementptr inbounds i8, i8* %69, i64 %75
  store i8* %76, i8** %15, align 8
  br label %77

77:                                               ; preds = %67, %53
  %78 = phi i8* [ %68, %67 ], [ %59, %53 ]
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  br label %81

81:                                               ; preds = %77, %46
  %82 = phi i64 [ %62, %77 ], [ %47, %46 ]
  %83 = phi i32 [ %80, %77 ], [ %48, %46 ]
  %84 = phi i8* [ %78, %77 ], [ %49, %46 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = and i32 %83, 255
  %87 = and i32 %83, 3
  switch i32 %87, label %258 [
    i32 0, label %88
    i32 3, label %212
  ], !prof !13

88:                                               ; preds = %81
  %89 = lshr i32 %86, 2
  %90 = add nuw nsw i32 %89, 1
  %91 = zext i32 %90 to i64
  %92 = load i64, i64* %41, align 8
  %93 = ptrtoint i8* %85 to i64
  %94 = sub i64 %92, %93
  %95 = inttoptr i64 %82 to i8*
  %96 = load i64, i64* %42, align 8
  %97 = sub i64 %96, %82
  %98 = icmp ult i32 %90, 17
  %99 = icmp ugt i64 %94, 20
  %100 = and i1 %98, %99
  %101 = icmp ugt i64 %97, 15
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %88
  %104 = bitcast i8* %85 to <16 x i8>*
  %105 = load <16 x i8>, <16 x i8>* %104, align 1
  %106 = inttoptr i64 %82 to <16 x i8>*
  store <16 x i8> %105, <16 x i8>* %106, align 1
  %107 = getelementptr inbounds i8, i8* %95, i64 %91
  %108 = ptrtoint i8* %107 to i64
  %109 = getelementptr inbounds i8, i8* %85, i64 %91
  br label %339

110:                                              ; preds = %88
  %111 = icmp ugt i32 %86, 239
  br i1 %111, label %112, label %141, !prof !4

112:                                              ; preds = %110
  %113 = add nsw i64 %91, -60
  %114 = load i8, i8* %85, align 1
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds i8, i8* %84, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = shl nuw nsw i64 %118, 8
  %120 = or i64 %119, %115
  %121 = getelementptr inbounds i8, i8* %84, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 16
  %125 = or i64 %120, %124
  %126 = getelementptr inbounds i8, i8* %84, i64 4
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = shl nuw nsw i64 %128, 24
  %130 = or i64 %125, %129
  %131 = shl nsw i64 %113, 3
  %132 = and i64 %131, 4294967288
  %133 = shl i64 4294967295, %132
  %134 = xor i64 %133, 4294967295
  %135 = and i64 %130, %134
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 4294967295
  %138 = getelementptr inbounds i8, i8* %85, i64 %113
  %139 = ptrtoint i8* %138 to i64
  %140 = sub i64 %92, %139
  br label %141

141:                                              ; preds = %112, %110
  %142 = phi i64 [ %140, %112 ], [ %94, %110 ]
  %143 = phi i64 [ %137, %112 ], [ %91, %110 ]
  %144 = phi i8* [ %138, %112 ], [ %85, %110 ]
  %145 = icmp ugt i64 %143, %142
  br i1 %145, label %146, label %187

146:                                              ; preds = %141
  %147 = icmp ult i64 %97, %142
  br i1 %147, label %354, label %150

148:                                              ; preds = %175
  %149 = icmp ult i64 %184, %170
  br i1 %149, label %352, label %150

150:                                              ; preds = %146, %148
  %151 = phi i64 [ %170, %148 ], [ %142, %146 ]
  %152 = phi i64 [ %176, %148 ], [ %143, %146 ]
  %153 = phi i8* [ %169, %148 ], [ %144, %146 ]
  %154 = phi i8* [ %155, %148 ], [ %95, %146 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %153, i64 %151, i1 false) #14
  %155 = getelementptr inbounds i8, i8* %154, i64 %151
  %156 = ptrtoint i8* %155 to i64
  %157 = load %"class.snappy::Source"*, %"class.snappy::Source"** %43, align 8
  %158 = load i32, i32* %44, align 8
  %159 = zext i32 %158 to i64
  %160 = bitcast %"class.snappy::Source"* %157 to void (%"class.snappy::Source"*, i64)***
  %161 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %161, i64 4
  %163 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %162, align 8
  call void %163(%"class.snappy::Source"* %157, i64 %159) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  store i64 -6148914691236517206, i64* %3, align 8
  %164 = load %"class.snappy::Source"*, %"class.snappy::Source"** %43, align 8
  %165 = bitcast %"class.snappy::Source"* %164 to i8* (%"class.snappy::Source"*, i64*)***
  %166 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %165, align 8
  %167 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %166, i64 3
  %168 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %167, align 8
  %169 = call i8* %168(%"class.snappy::Source"* %164, i64* nonnull %3) #14
  %170 = load i64, i64* %3, align 8
  %171 = trunc i64 %170 to i32
  store i32 %171, i32* %44, align 8
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %150
  %174 = ptrtoint i8* %155 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  br label %354

175:                                              ; preds = %150
  %176 = sub i64 %152, %151
  %177 = getelementptr inbounds i8, i8* %169, i64 %170
  store i8* %177, i8** %6, align 8
  %178 = icmp slt i64 %170, 4
  %179 = select i1 %178, i64 %170, i64 4
  %180 = sub i64 0, %179
  %181 = getelementptr inbounds i8, i8* %177, i64 %180
  store i8* %181, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  %182 = icmp ugt i64 %176, %170
  %183 = load i64, i64* %42, align 8
  %184 = sub i64 %183, %156
  br i1 %182, label %148, label %185

185:                                              ; preds = %175
  %186 = ptrtoint i8* %155 to i64
  br label %187

187:                                              ; preds = %185, %141
  %188 = phi i64 [ %82, %141 ], [ %186, %185 ]
  %189 = phi i64 [ %143, %141 ], [ %176, %185 ]
  %190 = phi i8* [ %144, %141 ], [ %169, %185 ]
  %191 = phi i8* [ %95, %141 ], [ %155, %185 ]
  %192 = phi i64 [ %97, %141 ], [ %184, %185 ]
  %193 = icmp ult i64 %192, %189
  br i1 %193, label %354, label %194

194:                                              ; preds = %187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %191, i8* align 1 %190, i64 %189, i1 false) #14
  %195 = getelementptr inbounds i8, i8* %191, i64 %189
  %196 = ptrtoint i8* %195 to i64
  %197 = getelementptr inbounds i8, i8* %190, i64 %189
  %198 = load i8*, i8** %15, align 8
  %199 = icmp ult i8* %197, %198
  br i1 %199, label %339, label %200, !prof !3

200:                                              ; preds = %194
  store i8* %197, i8** %4, align 8
  %201 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %201, label %202, label %350, !prof !3

202:                                              ; preds = %200
  %203 = load i8*, i8** %4, align 8
  %204 = load i8*, i8** %6, align 8
  %205 = ptrtoint i8* %204 to i64
  %206 = ptrtoint i8* %203 to i64
  %207 = sub i64 %205, %206
  %208 = icmp slt i64 %207, 4
  %209 = select i1 %208, i64 %207, i64 4
  %210 = sub i64 0, %209
  %211 = getelementptr inbounds i8, i8* %204, i64 %210
  store i8* %211, i8** %15, align 8
  br label %339

212:                                              ; preds = %81
  %213 = load i8, i8* %85, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds i8, i8* %84, i64 2
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = shl nuw nsw i64 %217, 8
  %219 = or i64 %218, %214
  %220 = getelementptr inbounds i8, i8* %84, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = shl nuw nsw i64 %222, 16
  %224 = or i64 %219, %223
  %225 = getelementptr inbounds i8, i8* %84, i64 4
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i64
  %228 = shl nuw nsw i64 %227, 24
  %229 = or i64 %224, %228
  %230 = lshr i32 %86, 2
  %231 = add nuw nsw i32 %230, 1
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %84, i64 5
  %234 = inttoptr i64 %82 to i8*
  %235 = getelementptr inbounds i8, i8* %234, i64 %232
  %236 = load i64, i64* %38, align 8
  %237 = sub i64 %82, %236
  %238 = icmp ult i64 %237, %229
  br i1 %238, label %354, label %239, !prof !4

239:                                              ; preds = %212
  %240 = load i8*, i8** %36, align 8
  %241 = icmp ule i8* %240, %234
  %242 = icmp ult i64 %229, %232
  %243 = or i1 %242, %241
  br i1 %243, label %244, label %254, !prof !4

244:                                              ; preds = %239
  %245 = load i8*, i8** %40, align 8
  %246 = icmp ugt i8* %235, %245
  %247 = icmp eq i64 %229, 0
  %248 = or i1 %247, %246
  br i1 %248, label %354, label %249

249:                                              ; preds = %244
  %250 = sub nsw i64 0, %229
  %251 = getelementptr inbounds i8, i8* %234, i64 %250
  %252 = call fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8* %251, i8* %234, i8* %235, i8* %245) #14
  %253 = ptrtoint i8* %252 to i64
  br label %322

254:                                              ; preds = %239
  %255 = sub nsw i64 0, %229
  %256 = getelementptr inbounds i8, i8* %234, i64 %255
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %234, i8* align 1 %256, i64 64, i1 false) #14
  %257 = ptrtoint i8* %235 to i64
  br label %322

258:                                              ; preds = %81
  %259 = zext i32 %86 to i64
  %260 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %259
  %261 = load i16, i16* %260, align 2
  %262 = sext i16 %261 to i64
  %263 = load i8, i8* %85, align 1
  %264 = zext i8 %263 to i32
  %265 = getelementptr inbounds i8, i8* %84, i64 2
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = shl nuw nsw i32 %267, 8
  %269 = or i32 %268, %264
  %270 = getelementptr inbounds i8, i8* %84, i64 3
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = shl nuw nsw i32 %272, 16
  %274 = or i32 %269, %273
  %275 = getelementptr inbounds i8, i8* %84, i64 4
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = shl nuw i32 %277, 24
  %279 = or i32 %274, %278
  %280 = shl nuw nsw i32 %87, 3
  %281 = zext i32 %280 to i64
  %282 = shl i64 4294967295, %281
  %283 = trunc i64 %282 to i32
  %284 = xor i32 %283, -1
  %285 = and i32 %279, %284
  %286 = and i16 %261, 255
  %287 = zext i32 %285 to i64
  %288 = zext i16 %286 to i64
  %289 = sub nsw i64 %288, %262
  %290 = add nsw i64 %289, %287
  %291 = and i64 %290, 4294967295
  %292 = inttoptr i64 %82 to i8*
  %293 = getelementptr inbounds i8, i8* %292, i64 %288
  %294 = load i64, i64* %38, align 8
  %295 = sub i64 %82, %294
  %296 = icmp ult i64 %295, %291
  br i1 %296, label %354, label %297, !prof !4

297:                                              ; preds = %258
  %298 = load i8*, i8** %36, align 8
  %299 = icmp ule i8* %298, %292
  %300 = icmp ult i64 %291, %288
  %301 = or i1 %300, %299
  br i1 %301, label %302, label %311, !prof !4

302:                                              ; preds = %297
  %303 = load i8*, i8** %40, align 8
  %304 = icmp ugt i8* %293, %303
  %305 = icmp eq i64 %291, 0
  %306 = or i1 %305, %304
  br i1 %306, label %354, label %307

307:                                              ; preds = %302
  %308 = sub nsw i64 0, %291
  %309 = getelementptr inbounds i8, i8* %292, i64 %308
  %310 = call fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8* %309, i8* %292, i8* %293, i8* %303) #14
  br label %314

311:                                              ; preds = %297
  %312 = sub nsw i64 0, %291
  %313 = getelementptr inbounds i8, i8* %292, i64 %312
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %292, i8* align 1 %313, i64 64, i1 false) #14
  br label %314

314:                                              ; preds = %307, %311
  %315 = phi i8* [ %293, %311 ], [ %310, %307 ]
  %316 = ptrtoint i8* %315 to i64
  %317 = zext i32 %87 to i64
  %318 = getelementptr inbounds i8, i8* %85, i64 %317
  %319 = lshr i32 %279, %280
  %320 = load i8*, i8** %15, align 8
  %321 = icmp ult i8* %318, %320
  br i1 %321, label %344, label %322

322:                                              ; preds = %254, %249, %314
  %323 = phi i64 [ %316, %314 ], [ %253, %249 ], [ %257, %254 ]
  %324 = phi i8* [ %318, %314 ], [ %233, %249 ], [ %233, %254 ]
  %325 = load i8*, i8** %15, align 8
  %326 = icmp ult i8* %324, %325
  br i1 %326, label %339, label %327, !prof !3

327:                                              ; preds = %322
  store i8* %324, i8** %4, align 8
  %328 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %328, label %329, label %354, !prof !3

329:                                              ; preds = %327
  %330 = load i8*, i8** %4, align 8
  %331 = load i8*, i8** %6, align 8
  %332 = ptrtoint i8* %331 to i64
  %333 = ptrtoint i8* %330 to i64
  %334 = sub i64 %332, %333
  %335 = icmp slt i64 %334, 4
  %336 = select i1 %335, i64 %334, i64 4
  %337 = sub i64 0, %336
  %338 = getelementptr inbounds i8, i8* %331, i64 %337
  store i8* %338, i8** %15, align 8
  br label %339

339:                                              ; preds = %329, %322, %194, %202, %103
  %340 = phi i8* [ %109, %103 ], [ %203, %202 ], [ %197, %194 ], [ %330, %329 ], [ %324, %322 ]
  %341 = phi i64 [ %108, %103 ], [ %196, %202 ], [ %196, %194 ], [ %323, %329 ], [ %323, %322 ]
  %342 = load i8, i8* %340, align 1
  %343 = zext i8 %342 to i32
  br label %344

344:                                              ; preds = %339, %314
  %345 = phi i64 [ %316, %314 ], [ %341, %339 ]
  %346 = phi i32 [ %319, %314 ], [ %343, %339 ]
  %347 = phi i8* [ %318, %314 ], [ %340, %339 ]
  br label %46

348:                                              ; preds = %65
  %349 = ptrtoint i8* %61 to i64
  br label %354

350:                                              ; preds = %200
  %351 = ptrtoint i8* %195 to i64
  br label %354

352:                                              ; preds = %148
  %353 = ptrtoint i8* %155 to i64
  br label %354

354:                                              ; preds = %258, %302, %187, %244, %212, %327, %146, %352, %348, %350, %173, %20
  %355 = phi i64 [ %18, %20 ], [ %174, %173 ], [ %349, %348 ], [ %351, %350 ], [ %353, %352 ], [ %82, %258 ], [ %82, %302 ], [ %188, %187 ], [ %82, %244 ], [ %82, %212 ], [ %323, %327 ], [ %82, %146 ]
  %356 = inttoptr i64 %355 to i8*
  store i8* %356, i8** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6snappy18SnappyDecompressor17DecompressAllTagsINS_21SnappyScatteredWriterINS_19SnappySinkAllocatorEEEEEvPT_(%"class.snappy::SnappyDecompressor"*, %"class.snappy::SnappyScatteredWriter"*) local_unnamed_addr #1 comdat align 32 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = ptrtoint i8* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp slt i64 %12, 4
  %14 = select i1 %13, i64 %12, i64 4
  %15 = sub i64 0, %14
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 3
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 5
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i8* %7, %16
  br i1 %21, label %34, label %22, !prof !3

22:                                               ; preds = %2
  %23 = tail call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %23, label %24, label %446, !prof !3

24:                                               ; preds = %22
  %25 = load i8*, i8** %6, align 8
  %26 = load i8*, i8** %8, align 8
  %27 = ptrtoint i8* %26 to i64
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %27, %28
  %30 = icmp slt i64 %29, 4
  %31 = select i1 %30, i64 %29, i64 4
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  store i8* %33, i8** %17, align 8
  br label %34

34:                                               ; preds = %2, %24
  %35 = phi i8* [ %25, %24 ], [ %7, %2 ]
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 7
  %39 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 4
  %40 = bitcast i8** %39 to i64*
  %41 = bitcast i8** %38 to i64*
  %42 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 6
  %43 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 3
  %44 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 2
  %45 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %1, i64 0, i32 1, i32 0, i32 0
  %46 = bitcast i8** %42 to i64*
  %47 = bitcast i8** %8 to i64*
  %48 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 0
  %49 = getelementptr inbounds %"class.snappy::SnappyDecompressor", %"class.snappy::SnappyDecompressor"* %0, i64 0, i32 4
  %50 = bitcast i64* %5 to i8*
  br label %51

51:                                               ; preds = %440, %34
  %52 = phi i64 [ %20, %34 ], [ %441, %440 ]
  %53 = phi i32 [ %37, %34 ], [ %442, %440 ]
  %54 = phi i8* [ %35, %34 ], [ %443, %440 ]
  %55 = load i8*, i8** %39, align 8
  %56 = icmp eq i8* %55, null
  %57 = ptrtoint i8* %55 to i64
  br i1 %56, label %86, label %58

58:                                               ; preds = %51
  %59 = load i64, i64* %41, align 8
  %60 = sub i64 %59, %57
  %61 = load i8*, i8** %8, align 8
  %62 = sub i64 %52, %57
  %63 = call { i8*, i64 } @_ZN6snappy20DecompressBranchlessIPcEENSt3__14pairIPKhlEES5_S5_lT_l(i8* %54, i8* %61, i64 %62, i8* nonnull %55, i64 %60)
  %64 = extractvalue { i8*, i64 } %63, 0
  %65 = extractvalue { i8*, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %55, i64 %65
  %67 = ptrtoint i8* %66 to i64
  %68 = load i8*, i8** %17, align 8
  %69 = icmp ult i8* %64, %68
  br i1 %69, label %82, label %70, !prof !3

70:                                               ; preds = %58
  store i8* %64, i8** %6, align 8
  %71 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %71, label %72, label %444, !prof !3

72:                                               ; preds = %70
  %73 = load i8*, i8** %6, align 8
  %74 = load i8*, i8** %8, align 8
  %75 = ptrtoint i8* %74 to i64
  %76 = ptrtoint i8* %73 to i64
  %77 = sub i64 %75, %76
  %78 = icmp slt i64 %77, 4
  %79 = select i1 %78, i64 %77, i64 4
  %80 = sub i64 0, %79
  %81 = getelementptr inbounds i8, i8* %74, i64 %80
  store i8* %81, i8** %17, align 8
  br label %82

82:                                               ; preds = %72, %58
  %83 = phi i8* [ %73, %72 ], [ %64, %58 ]
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  br label %86

86:                                               ; preds = %82, %51
  %87 = phi i64 [ %67, %82 ], [ %52, %51 ]
  %88 = phi i32 [ %85, %82 ], [ %53, %51 ]
  %89 = phi i8* [ %83, %82 ], [ %54, %51 ]
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  %91 = and i32 %88, 255
  %92 = and i32 %88, 3
  switch i32 %92, label %311 [
    i32 0, label %93
    i32 3, label %226
  ], !prof !13

93:                                               ; preds = %86
  %94 = lshr i32 %91, 2
  %95 = add nuw nsw i32 %94, 1
  %96 = zext i32 %95 to i64
  %97 = load i64, i64* %47, align 8
  %98 = ptrtoint i8* %90 to i64
  %99 = sub i64 %97, %98
  %100 = inttoptr i64 %87 to i8*
  %101 = load i64, i64* %46, align 8
  %102 = sub i64 %101, %87
  %103 = trunc i64 %102 to i32
  %104 = icmp ult i32 %95, 17
  %105 = icmp ugt i64 %99, 20
  %106 = and i1 %104, %105
  %107 = icmp sgt i32 %103, 15
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %116

109:                                              ; preds = %93
  %110 = bitcast i8* %90 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1
  %112 = inttoptr i64 %87 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %112, align 1
  %113 = getelementptr inbounds i8, i8* %100, i64 %96
  %114 = ptrtoint i8* %113 to i64
  %115 = getelementptr inbounds i8, i8* %90, i64 %96
  br label %435

116:                                              ; preds = %93
  %117 = icmp ugt i32 %91, 239
  br i1 %117, label %118, label %147, !prof !4

118:                                              ; preds = %116
  %119 = add nsw i64 %96, -60
  %120 = load i8, i8* %90, align 1
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds i8, i8* %89, i64 2
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = shl nuw nsw i64 %124, 8
  %126 = or i64 %125, %121
  %127 = getelementptr inbounds i8, i8* %89, i64 3
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = shl nuw nsw i64 %129, 16
  %131 = or i64 %126, %130
  %132 = getelementptr inbounds i8, i8* %89, i64 4
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = shl nuw nsw i64 %134, 24
  %136 = or i64 %131, %135
  %137 = shl nsw i64 %119, 3
  %138 = and i64 %137, 4294967288
  %139 = shl i64 4294967295, %138
  %140 = xor i64 %139, 4294967295
  %141 = and i64 %136, %140
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 4294967295
  %144 = getelementptr inbounds i8, i8* %90, i64 %119
  %145 = ptrtoint i8* %144 to i64
  %146 = sub i64 %97, %145
  br label %147

147:                                              ; preds = %118, %116
  %148 = phi i64 [ %146, %118 ], [ %99, %116 ]
  %149 = phi i64 [ %143, %118 ], [ %96, %116 ]
  %150 = phi i8* [ %144, %118 ], [ %90, %116 ]
  %151 = icmp ugt i64 %149, %148
  br i1 %151, label %152, label %197

152:                                              ; preds = %147, %184
  %153 = phi i64 [ %194, %184 ], [ %102, %147 ]
  %154 = phi i8* [ %192, %184 ], [ %100, %147 ]
  %155 = phi i8* [ %179, %184 ], [ %150, %147 ]
  %156 = phi i64 [ %185, %184 ], [ %149, %147 ]
  %157 = phi i64 [ %180, %184 ], [ %148, %147 ]
  %158 = icmp ult i64 %153, %157
  br i1 %158, label %162, label %159

159:                                              ; preds = %152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %157, i1 false) #14
  %160 = getelementptr inbounds i8, i8* %154, i64 %157
  %161 = ptrtoint i8* %160 to i64
  br label %165

162:                                              ; preds = %152
  store i8* %154, i8** %18, align 8
  %163 = call zeroext i1 @_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm(%"class.snappy::SnappyScatteredWriter"* %1, i8* %155, i64 %157) #14
  %164 = load i64, i64* %19, align 8
  br i1 %163, label %165, label %446

165:                                              ; preds = %159, %162
  %166 = phi i64 [ %161, %159 ], [ %164, %162 ]
  %167 = load %"class.snappy::Source"*, %"class.snappy::Source"** %48, align 8
  %168 = load i32, i32* %49, align 8
  %169 = zext i32 %168 to i64
  %170 = bitcast %"class.snappy::Source"* %167 to void (%"class.snappy::Source"*, i64)***
  %171 = load void (%"class.snappy::Source"*, i64)**, void (%"class.snappy::Source"*, i64)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %171, i64 4
  %173 = load void (%"class.snappy::Source"*, i64)*, void (%"class.snappy::Source"*, i64)** %172, align 8
  call void %173(%"class.snappy::Source"* %167, i64 %169) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  store i64 -6148914691236517206, i64* %5, align 8
  %174 = load %"class.snappy::Source"*, %"class.snappy::Source"** %48, align 8
  %175 = bitcast %"class.snappy::Source"* %174 to i8* (%"class.snappy::Source"*, i64*)***
  %176 = load i8* (%"class.snappy::Source"*, i64*)**, i8* (%"class.snappy::Source"*, i64*)*** %175, align 8
  %177 = getelementptr inbounds i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %176, i64 3
  %178 = load i8* (%"class.snappy::Source"*, i64*)*, i8* (%"class.snappy::Source"*, i64*)** %177, align 8
  %179 = call i8* %178(%"class.snappy::Source"* %174, i64* nonnull %5) #14
  %180 = load i64, i64* %5, align 8
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %49, align 8
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  br label %446

184:                                              ; preds = %165
  %185 = sub i64 %156, %157
  %186 = getelementptr inbounds i8, i8* %179, i64 %180
  store i8* %186, i8** %8, align 8
  %187 = icmp slt i64 %180, 4
  %188 = select i1 %187, i64 %180, i64 4
  %189 = sub i64 0, %188
  %190 = getelementptr inbounds i8, i8* %186, i64 %189
  store i8* %190, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  %191 = icmp ugt i64 %185, %180
  %192 = inttoptr i64 %166 to i8*
  %193 = load i64, i64* %46, align 8
  %194 = sub i64 %193, %166
  br i1 %191, label %152, label %195

195:                                              ; preds = %184
  %196 = inttoptr i64 %166 to i8*
  br label %197

197:                                              ; preds = %195, %147
  %198 = phi i64 [ %149, %147 ], [ %185, %195 ]
  %199 = phi i8* [ %150, %147 ], [ %179, %195 ]
  %200 = phi i8* [ %100, %147 ], [ %196, %195 ]
  %201 = phi i64 [ %102, %147 ], [ %194, %195 ]
  %202 = icmp ult i64 %201, %198
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %199, i64 %198, i1 false) #14
  %204 = getelementptr inbounds i8, i8* %200, i64 %198
  %205 = ptrtoint i8* %204 to i64
  br label %209

206:                                              ; preds = %197
  store i8* %200, i8** %18, align 8
  %207 = call zeroext i1 @_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm(%"class.snappy::SnappyScatteredWriter"* %1, i8* %199, i64 %198) #14
  %208 = load i64, i64* %19, align 8
  br i1 %207, label %209, label %446

209:                                              ; preds = %203, %206
  %210 = phi i64 [ %205, %203 ], [ %208, %206 ]
  %211 = getelementptr inbounds i8, i8* %199, i64 %198
  %212 = load i8*, i8** %17, align 8
  %213 = icmp ult i8* %211, %212
  br i1 %213, label %435, label %214, !prof !3

214:                                              ; preds = %209
  store i8* %211, i8** %6, align 8
  %215 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %215, label %216, label %446, !prof !3

216:                                              ; preds = %214
  %217 = load i8*, i8** %6, align 8
  %218 = load i8*, i8** %8, align 8
  %219 = ptrtoint i8* %218 to i64
  %220 = ptrtoint i8* %217 to i64
  %221 = sub i64 %219, %220
  %222 = icmp slt i64 %221, 4
  %223 = select i1 %222, i64 %221, i64 4
  %224 = sub i64 0, %223
  %225 = getelementptr inbounds i8, i8* %218, i64 %224
  store i8* %225, i8** %17, align 8
  br label %435

226:                                              ; preds = %86
  %227 = load i8, i8* %90, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds i8, i8* %89, i64 2
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = shl nuw nsw i64 %231, 8
  %233 = or i64 %232, %228
  %234 = getelementptr inbounds i8, i8* %89, i64 3
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = shl nuw nsw i64 %236, 16
  %238 = or i64 %233, %237
  %239 = getelementptr inbounds i8, i8* %89, i64 4
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i64
  %242 = shl nuw nsw i64 %241, 24
  %243 = or i64 %238, %242
  %244 = lshr i32 %91, 2
  %245 = add nuw nsw i32 %244, 1
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %89, i64 5
  %248 = inttoptr i64 %87 to i8*
  %249 = load i64, i64* %40, align 8
  %250 = sub i64 %87, %249
  %251 = icmp ult i64 %250, %243
  br i1 %251, label %263, label %252, !prof !4

252:                                              ; preds = %226
  %253 = load i8*, i8** %38, align 8
  %254 = icmp ule i8* %253, %248
  %255 = icmp ult i64 %243, %246
  %256 = or i1 %255, %254
  br i1 %256, label %257, label %306, !prof !4

257:                                              ; preds = %252
  %258 = icmp eq i64 %243, 0
  br i1 %258, label %446, label %259

259:                                              ; preds = %257
  %260 = getelementptr inbounds i8, i8* %248, i64 %246
  %261 = load i8*, i8** %42, align 8
  %262 = icmp ugt i8* %260, %261
  br i1 %262, label %263, label %301, !prof !4

263:                                              ; preds = %259, %226
  store i8* %248, i8** %18, align 8
  %264 = load i64, i64* %43, align 8
  %265 = add i64 %264, %250
  %266 = add nsw i64 %243, -1
  %267 = icmp ult i64 %266, %265
  br i1 %267, label %268, label %446

268:                                              ; preds = %263
  %269 = load i64, i64* %44, align 8
  %270 = sub i64 %269, %265
  %271 = icmp ult i64 %270, %246
  br i1 %271, label %446, label %272

272:                                              ; preds = %268
  %273 = sub i64 %265, %243
  br label %274

274:                                              ; preds = %296, %272
  %275 = phi i64 [ %246, %272 ], [ %278, %296 ]
  %276 = phi i64 [ %273, %272 ], [ %298, %296 ]
  %277 = phi i64 [ %87, %272 ], [ %297, %296 ]
  %278 = add nsw i64 %275, -1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  store i8 -86, i8* %3, align 1
  %279 = lshr i64 %276, 16
  %280 = load i8**, i8*** %45, align 8
  %281 = getelementptr inbounds i8*, i8** %280, i64 %279
  %282 = load i8*, i8** %281, align 8
  %283 = and i64 %276, 65535
  %284 = getelementptr inbounds i8, i8* %282, i64 %283
  %285 = load i8, i8* %284, align 1
  store i8 %285, i8* %3, align 1
  %286 = inttoptr i64 %277 to i8*
  %287 = load i64, i64* %46, align 8
  %288 = icmp eq i64 %287, %277
  br i1 %288, label %292, label %289

289:                                              ; preds = %274
  store i8 %285, i8* %286, align 1
  %290 = getelementptr inbounds i8, i8* %286, i64 1
  %291 = ptrtoint i8* %290 to i64
  br label %296

292:                                              ; preds = %274
  store i8* %286, i8** %18, align 8
  %293 = call zeroext i1 @_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm(%"class.snappy::SnappyScatteredWriter"* %1, i8* nonnull %3, i64 1) #14
  %294 = load i64, i64* %19, align 8
  br i1 %293, label %296, label %295

295:                                              ; preds = %292
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  br label %446

296:                                              ; preds = %292, %289
  %297 = phi i64 [ %291, %289 ], [ %294, %292 ]
  %298 = add i64 %276, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  %299 = icmp eq i64 %278, 0
  br i1 %299, label %300, label %274

300:                                              ; preds = %296
  store i64 %297, i64* %19, align 8
  br label %418

301:                                              ; preds = %259
  %302 = sub nsw i64 0, %243
  %303 = getelementptr inbounds i8, i8* %248, i64 %302
  %304 = call fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8* %303, i8* %248, i8* %260, i8* %261) #14
  %305 = ptrtoint i8* %304 to i64
  br label %418

306:                                              ; preds = %252
  %307 = getelementptr inbounds i8, i8* %248, i64 %246
  %308 = sub nsw i64 0, %243
  %309 = getelementptr inbounds i8, i8* %248, i64 %308
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %248, i8* align 1 %309, i64 64, i1 false) #14
  %310 = ptrtoint i8* %307 to i64
  br label %418

311:                                              ; preds = %86
  %312 = zext i32 %91 to i64
  %313 = getelementptr inbounds %struct.anon.15, %struct.anon.15* @_ZN6snappy12_GLOBAL__N_15tableE, i64 0, i32 0, i32 0, i64 %312
  %314 = load i16, i16* %313, align 2
  %315 = sext i16 %314 to i64
  %316 = load i8, i8* %90, align 1
  %317 = zext i8 %316 to i32
  %318 = getelementptr inbounds i8, i8* %89, i64 2
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = shl nuw nsw i32 %320, 8
  %322 = or i32 %321, %317
  %323 = getelementptr inbounds i8, i8* %89, i64 3
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = shl nuw nsw i32 %325, 16
  %327 = or i32 %322, %326
  %328 = getelementptr inbounds i8, i8* %89, i64 4
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = shl nuw i32 %330, 24
  %332 = or i32 %327, %331
  %333 = shl nuw nsw i32 %92, 3
  %334 = zext i32 %333 to i64
  %335 = shl i64 4294967295, %334
  %336 = trunc i64 %335 to i32
  %337 = xor i32 %336, -1
  %338 = and i32 %332, %337
  %339 = and i16 %314, 255
  %340 = zext i32 %338 to i64
  %341 = zext i16 %339 to i64
  %342 = sub nsw i64 %341, %315
  %343 = add nsw i64 %342, %340
  %344 = and i64 %343, 4294967295
  %345 = inttoptr i64 %87 to i8*
  %346 = load i64, i64* %40, align 8
  %347 = sub i64 %87, %346
  %348 = icmp ult i64 %347, %344
  br i1 %348, label %360, label %349, !prof !4

349:                                              ; preds = %311
  %350 = load i8*, i8** %38, align 8
  %351 = icmp ule i8* %350, %345
  %352 = icmp ult i64 %344, %341
  %353 = or i1 %352, %351
  br i1 %353, label %354, label %406, !prof !4

354:                                              ; preds = %349
  %355 = icmp eq i64 %344, 0
  br i1 %355, label %446, label %356

356:                                              ; preds = %354
  %357 = getelementptr inbounds i8, i8* %345, i64 %341
  %358 = load i8*, i8** %42, align 8
  %359 = icmp ugt i8* %357, %358
  br i1 %359, label %360, label %401, !prof !4

360:                                              ; preds = %356, %311
  store i8* %345, i8** %18, align 8
  %361 = load i64, i64* %43, align 8
  %362 = add i64 %361, %347
  %363 = add nsw i64 %344, -1
  %364 = icmp ult i64 %363, %362
  br i1 %364, label %365, label %446

365:                                              ; preds = %360
  %366 = load i64, i64* %44, align 8
  %367 = sub i64 %366, %362
  %368 = icmp ult i64 %367, %341
  br i1 %368, label %446, label %369

369:                                              ; preds = %365
  %370 = icmp eq i16 %339, 0
  br i1 %370, label %399, label %371

371:                                              ; preds = %369
  %372 = sub i64 %362, %344
  br label %373

373:                                              ; preds = %395, %371
  %374 = phi i64 [ %341, %371 ], [ %377, %395 ]
  %375 = phi i64 [ %372, %371 ], [ %397, %395 ]
  %376 = phi i64 [ %87, %371 ], [ %396, %395 ]
  %377 = add nsw i64 %374, -1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %378 = lshr i64 %375, 16
  %379 = load i8**, i8*** %45, align 8
  %380 = getelementptr inbounds i8*, i8** %379, i64 %378
  %381 = load i8*, i8** %380, align 8
  %382 = and i64 %375, 65535
  %383 = getelementptr inbounds i8, i8* %381, i64 %382
  %384 = load i8, i8* %383, align 1
  store i8 %384, i8* %4, align 1
  %385 = inttoptr i64 %376 to i8*
  %386 = load i64, i64* %46, align 8
  %387 = icmp eq i64 %386, %376
  br i1 %387, label %391, label %388

388:                                              ; preds = %373
  store i8 %384, i8* %385, align 1
  %389 = getelementptr inbounds i8, i8* %385, i64 1
  %390 = ptrtoint i8* %389 to i64
  br label %395

391:                                              ; preds = %373
  store i8* %385, i8** %18, align 8
  %392 = call zeroext i1 @_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm(%"class.snappy::SnappyScatteredWriter"* %1, i8* nonnull %4, i64 1) #14
  %393 = load i64, i64* %19, align 8
  br i1 %392, label %395, label %394

394:                                              ; preds = %391
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br label %446

395:                                              ; preds = %391, %388
  %396 = phi i64 [ %390, %388 ], [ %393, %391 ]
  %397 = add i64 %375, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  %398 = icmp eq i64 %377, 0
  br i1 %398, label %399, label %373

399:                                              ; preds = %395, %369
  %400 = phi i64 [ %87, %369 ], [ %396, %395 ]
  store i64 %400, i64* %19, align 8
  br label %411

401:                                              ; preds = %356
  %402 = sub nsw i64 0, %344
  %403 = getelementptr inbounds i8, i8* %345, i64 %402
  %404 = call fastcc i8* @_ZN6snappy12_GLOBAL__N_115IncrementalCopyEPKcPcS3_S3_(i8* %403, i8* %345, i8* %357, i8* %358) #14
  %405 = ptrtoint i8* %404 to i64
  br label %411

406:                                              ; preds = %349
  %407 = getelementptr inbounds i8, i8* %345, i64 %341
  %408 = sub nsw i64 0, %344
  %409 = getelementptr inbounds i8, i8* %345, i64 %408
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %345, i8* align 1 %409, i64 64, i1 false) #14
  %410 = ptrtoint i8* %407 to i64
  br label %411

411:                                              ; preds = %406, %401, %399
  %412 = phi i64 [ %405, %401 ], [ %410, %406 ], [ %400, %399 ]
  %413 = zext i32 %92 to i64
  %414 = getelementptr inbounds i8, i8* %90, i64 %413
  %415 = lshr i32 %332, %333
  %416 = load i8*, i8** %17, align 8
  %417 = icmp ult i8* %414, %416
  br i1 %417, label %440, label %418

418:                                              ; preds = %300, %301, %306, %411
  %419 = phi i64 [ %412, %411 ], [ %297, %300 ], [ %310, %306 ], [ %305, %301 ]
  %420 = phi i8* [ %414, %411 ], [ %247, %300 ], [ %247, %306 ], [ %247, %301 ]
  %421 = load i8*, i8** %17, align 8
  %422 = icmp ult i8* %420, %421
  br i1 %422, label %435, label %423, !prof !3

423:                                              ; preds = %418
  store i8* %420, i8** %6, align 8
  %424 = call zeroext i1 @_ZN6snappy18SnappyDecompressor9RefillTagEv(%"class.snappy::SnappyDecompressor"* %0)
  br i1 %424, label %425, label %446, !prof !3

425:                                              ; preds = %423
  %426 = load i8*, i8** %6, align 8
  %427 = load i8*, i8** %8, align 8
  %428 = ptrtoint i8* %427 to i64
  %429 = ptrtoint i8* %426 to i64
  %430 = sub i64 %428, %429
  %431 = icmp slt i64 %430, 4
  %432 = select i1 %431, i64 %430, i64 4
  %433 = sub i64 0, %432
  %434 = getelementptr inbounds i8, i8* %427, i64 %433
  store i8* %434, i8** %17, align 8
  br label %435

435:                                              ; preds = %425, %418, %209, %216, %109
  %436 = phi i8* [ %115, %109 ], [ %217, %216 ], [ %211, %209 ], [ %426, %425 ], [ %420, %418 ]
  %437 = phi i64 [ %114, %109 ], [ %210, %216 ], [ %210, %209 ], [ %419, %425 ], [ %419, %418 ]
  %438 = load i8, i8* %436, align 1
  %439 = zext i8 %438 to i32
  br label %440

440:                                              ; preds = %435, %411
  %441 = phi i64 [ %412, %411 ], [ %437, %435 ]
  %442 = phi i32 [ %415, %411 ], [ %439, %435 ]
  %443 = phi i8* [ %414, %411 ], [ %436, %435 ]
  br label %51

444:                                              ; preds = %70
  %445 = ptrtoint i8* %66 to i64
  br label %446

446:                                              ; preds = %365, %360, %354, %206, %214, %268, %263, %257, %423, %162, %444, %394, %183, %295, %22
  %447 = phi i64 [ %20, %22 ], [ %294, %295 ], [ %393, %394 ], [ %166, %183 ], [ %445, %444 ], [ %164, %162 ], [ %87, %365 ], [ %87, %360 ], [ %87, %354 ], [ %208, %206 ], [ %210, %214 ], [ %87, %268 ], [ %87, %263 ], [ %87, %257 ], [ %419, %423 ]
  %448 = inttoptr i64 %447 to i8*
  store i8* %448, i8** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE10SlowAppendEPKcm(%"class.snappy::SnappyScatteredWriter"*, i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 6
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 5
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  %12 = inttoptr i64 %9 to i8*
  br i1 %11, label %13, label %189

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 4
  %15 = bitcast i8** %14 to i64*
  %16 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"** %19 to i64*
  %22 = bitcast %"class.std::__1::vector"* %18 to i64*
  %23 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.snappy::SnappyScatteredWriter", %"class.snappy::SnappyScatteredWriter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8*** %27 to i64*
  %30 = bitcast %"class.std::__1::vector.6"* %26 to i64*
  %31 = bitcast i8*** %28 to i64*
  %32 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %26, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %13, %186
  %34 = phi i8* [ %12, %13 ], [ %188, %186 ]
  %35 = phi i64 [ %10, %13 ], [ %53, %186 ]
  %36 = phi i64 [ %2, %13 ], [ %45, %186 ]
  %37 = phi i8* [ %1, %13 ], [ %50, %186 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %37, i64 %35, i1 false)
  %38 = load i8*, i8** %7, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %35
  store i8* %39, i8** %7, align 8
  %40 = load i64, i64* %15, align 8
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %41, %40
  %43 = load i64, i64* %16, align 8
  %44 = add i64 %43, %42
  store i64 %44, i64* %16, align 8
  %45 = sub i64 %36, %35
  %46 = add i64 %44, %45
  %47 = load i64, i64* %17, align 8
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %195, label %49

49:                                               ; preds = %33
  %50 = getelementptr inbounds i8, i8* %37, i64 %35
  %51 = sub i64 %47, %44
  %52 = icmp ult i64 %51, 65536
  %53 = select i1 %52, i64 %51, i64 65536
  %54 = tail call i8* @_Znam(i64 %53) #15
  %55 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %19, align 8
  %56 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %20, align 8
  %57 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %55, %56
  %58 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %56 to i64
  br i1 %57, label %64, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %55, i64 0, i32 0
  store i8* %54, i8** %60, align 8
  %61 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %55, i64 0, i32 1
  store i64 %53, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %55, i64 1
  %63 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %62 to i64
  store i64 %63, i64* %21, align 8
  br label %118

64:                                               ; preds = %49
  %65 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %55 to i64
  %66 = load i64, i64* %22, align 8
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 4
  %69 = add nsw i64 %68, 1
  %70 = icmp ugt i64 %69, 1152921504606846975
  br i1 %70, label %71, label %73

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %72) #17
  unreachable

73:                                               ; preds = %64
  %74 = sub i64 %58, %66
  %75 = ashr exact i64 %74, 4
  %76 = icmp ult i64 %75, 576460752303423487
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = ashr exact i64 %74, 3
  %79 = icmp ult i64 %78, %69
  %80 = select i1 %79, i64 %69, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 1152921504606846975
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @abort() #17
  unreachable

85:                                               ; preds = %82, %73
  %86 = phi i64 [ %80, %82 ], [ 1152921504606846975, %73 ]
  %87 = shl i64 %86, 4
  %88 = tail call i8* @_Znwm(i64 %87) #15
  %89 = bitcast i8* %88 to %"struct.snappy::SnappySinkAllocator::Datablock"*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %92, i64 %68
  %94 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %92, i64 %91
  %95 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %94 to i64
  %96 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %93, i64 0, i32 0
  store i8* %54, i8** %96, align 8
  %97 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %92, i64 %68, i32 1
  store i64 %53, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %93, i64 1
  %99 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %98 to i64
  %100 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %24, align 8
  %101 = load i64, i64* %21, align 8
  %102 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %100 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 4
  %105 = sub nsw i64 0, %104
  %106 = getelementptr inbounds %"struct.snappy::SnappySinkAllocator::Datablock", %"struct.snappy::SnappySinkAllocator::Datablock"* %93, i64 %105
  %107 = ptrtoint %"struct.snappy::SnappySinkAllocator::Datablock"* %106 to i64
  %108 = icmp sgt i64 %103, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %90
  %110 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"* %106 to i8*
  %111 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 %103, i1 false) #14
  %112 = load %"struct.snappy::SnappySinkAllocator::Datablock"*, %"struct.snappy::SnappySinkAllocator::Datablock"** %24, align 8
  br label %113

113:                                              ; preds = %109, %90
  %114 = phi %"struct.snappy::SnappySinkAllocator::Datablock"* [ %100, %90 ], [ %112, %109 ]
  store i64 %107, i64* %22, align 8
  store i64 %99, i64* %21, align 8
  store i64 %95, i64* %23, align 8
  %115 = icmp eq %"struct.snappy::SnappySinkAllocator::Datablock"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = bitcast %"struct.snappy::SnappySinkAllocator::Datablock"* %114 to i8*
  tail call void @_ZdlPv(i8* %117) #15
  br label %118

118:                                              ; preds = %59, %113, %116
  store i8* %54, i8** %14, align 8
  store i8* %54, i8** %7, align 8
  %119 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8* %119, i8** %4, align 8
  %120 = icmp ult i64 %53, 63
  %121 = sub i64 0, %51
  %122 = select i1 %120, i64 %121, i64 -63
  %123 = getelementptr inbounds i8, i8* %119, i64 %122
  store i8* %123, i8** %25, align 8
  %124 = load i8**, i8*** %27, align 8
  %125 = load i8**, i8*** %28, align 8
  %126 = icmp eq i8** %124, %125
  %127 = ptrtoint i8** %125 to i64
  %128 = ptrtoint i8* %54 to i64
  br i1 %126, label %133, label %129

129:                                              ; preds = %118
  %130 = bitcast i8** %124 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds i8*, i8** %124, i64 1
  %132 = ptrtoint i8** %131 to i64
  store i64 %132, i64* %29, align 8
  br label %186

133:                                              ; preds = %118
  %134 = ptrtoint i8** %124 to i64
  %135 = load i64, i64* %30, align 8
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 3
  %138 = add nsw i64 %137, 1
  %139 = icmp ugt i64 %138, 2305843009213693951
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = bitcast %"class.std::__1::vector.6"* %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %141) #17
  unreachable

142:                                              ; preds = %133
  %143 = sub i64 %127, %135
  %144 = ashr exact i64 %143, 3
  %145 = icmp ult i64 %144, 1152921504606846975
  br i1 %145, label %146, label %154

146:                                              ; preds = %142
  %147 = ashr exact i64 %143, 2
  %148 = icmp ult i64 %147, %138
  %149 = select i1 %148, i64 %138, i64 %147
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %146
  %152 = icmp ugt i64 %149, 2305843009213693951
  br i1 %152, label %153, label %154

153:                                              ; preds = %151
  tail call void @abort() #17
  unreachable

154:                                              ; preds = %151, %142
  %155 = phi i64 [ %149, %151 ], [ 2305843009213693951, %142 ]
  %156 = shl i64 %155, 3
  %157 = tail call i8* @_Znwm(i64 %156) #15
  %158 = bitcast i8* %157 to i8**
  br label %159

159:                                              ; preds = %154, %146
  %160 = phi i64 [ %155, %154 ], [ 0, %146 ]
  %161 = phi i8** [ %158, %154 ], [ null, %146 ]
  %162 = getelementptr inbounds i8*, i8** %161, i64 %137
  %163 = getelementptr inbounds i8*, i8** %161, i64 %160
  %164 = ptrtoint i8** %163 to i64
  %165 = bitcast i8** %162 to i64*
  store i64 %128, i64* %165, align 8
  %166 = getelementptr inbounds i8*, i8** %162, i64 1
  %167 = ptrtoint i8** %166 to i64
  %168 = load i8**, i8*** %32, align 8
  %169 = load i64, i64* %29, align 8
  %170 = ptrtoint i8** %168 to i64
  %171 = sub i64 %169, %170
  %172 = ashr exact i64 %171, 3
  %173 = sub nsw i64 0, %172
  %174 = getelementptr inbounds i8*, i8** %162, i64 %173
  %175 = ptrtoint i8** %174 to i64
  %176 = icmp sgt i64 %171, 0
  br i1 %176, label %177, label %181

177:                                              ; preds = %159
  %178 = bitcast i8** %174 to i8*
  %179 = bitcast i8** %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 %171, i1 false) #14
  %180 = load i8**, i8*** %32, align 8
  br label %181

181:                                              ; preds = %177, %159
  %182 = phi i8** [ %168, %159 ], [ %180, %177 ]
  store i64 %175, i64* %30, align 8
  store i64 %167, i64* %29, align 8
  store i64 %164, i64* %31, align 8
  %183 = icmp eq i8** %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = bitcast i8** %182 to i8*
  tail call void @_ZdlPv(i8* %185) #15
  br label %186

186:                                              ; preds = %129, %181, %184
  %187 = icmp ugt i64 %45, %53
  %188 = load i8*, i8** %7, align 8
  br i1 %187, label %33, label %189

189:                                              ; preds = %186, %3
  %190 = phi i8* [ %1, %3 ], [ %50, %186 ]
  %191 = phi i64 [ %2, %3 ], [ %45, %186 ]
  %192 = phi i8* [ %12, %3 ], [ %188, %186 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %190, i64 %191, i1 false)
  %193 = load i8*, i8** %7, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 %191
  store i8* %194, i8** %7, align 8
  br label %195

195:                                              ; preds = %33, %189
  %196 = phi i1 [ true, %189 ], [ false, %33 ]
  ret i1 %196
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6snappy19SnappySinkAllocator7DeleterEPvPKcm(i8*, i8*, i64) #1 comdat align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZdaPv(i8* nonnull %1) #15
  br label %6

6:                                                ; preds = %5, %3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i64 0, i64 65}
!6 = !{i32 103337, i32 103354, i32 103384}
!7 = !{i32 104316, i32 104333, i32 104363}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = !{i32 41382, i32 41405}
!11 = !{i32 42570}
!12 = !{i8 0, i8 2}
!13 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!14 = !{!"branch_weights", i32 1, i32 1048575}
!15 = !{i32 46474}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !9, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !9, !22}
!24 = distinct !{!24, !9}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !9, !22}
!31 = distinct !{!31, !9, !22}
!32 = !{!"branch_weights", i32 4001, i32 4000000}
