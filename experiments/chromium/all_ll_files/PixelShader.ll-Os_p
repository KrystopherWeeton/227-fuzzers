; ModuleID = '../../third_party/swiftshader/src/Shader/PixelShader.cpp'
source_filename = "../../third_party/swiftshader/src/Shader/PixelShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.0, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.7, [4 x i8] }>
%union.anon.0 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.5, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.2, i8 }>
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.5 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.7 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::Shader" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8, [3 x i8] }>
%struct.anon = type { i8, i8 }

@_ZTVN2sw11PixelShaderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sw::PixelShader"*)* @_ZN2sw11PixelShaderD2Ev to i8*), i8* bitcast (void (%"class.sw::PixelShader"*)* @_ZN2sw11PixelShaderD0Ev to i8*)] }, align 8
@_ZTVN2sw6Shader11InstructionE = external unnamed_addr constant { [4 x i8*] }, align 8

@_ZN2sw11PixelShaderC1EPKS0_ = hidden unnamed_addr alias void (%"class.sw::PixelShader"*, %"class.sw::PixelShader"*), void (%"class.sw::PixelShader"*, %"class.sw::PixelShader"*)* @_ZN2sw11PixelShaderC2EPKS0_
@_ZN2sw11PixelShaderC1EPKm = hidden unnamed_addr alias void (%"class.sw::PixelShader"*, i64*), void (%"class.sw::PixelShader"*, i64*)* @_ZN2sw11PixelShaderC2EPKm
@_ZN2sw11PixelShaderD1Ev = hidden unnamed_addr alias void (%"class.sw::PixelShader"*), void (%"class.sw::PixelShader"*)* @_ZN2sw11PixelShaderD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShaderC2EPKS0_(%"class.sw::PixelShader"*, %"class.sw::PixelShader"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sw::PixelShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"* %3) #9
  %4 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw11PixelShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1
  %6 = getelementptr inbounds [32 x [4 x %"struct.sw::Shader::Semantic"]], [32 x [4 x %"struct.sw::Shader::Semantic"]]* %5, i64 0, i64 0, i64 0
  %7 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 0, i64 128
  br label %8

8:                                                ; preds = %8, %2
  %9 = phi %"struct.sw::Shader::Semantic"* [ %6, %2 ], [ %14, %8 ]
  %10 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 0
  store i8 -1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 1
  store i8 -1, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 2
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 3
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 1
  %15 = icmp eq %"struct.sw::Shader::Semantic"* %14, %7
  br i1 %15, label %16, label %8

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 10, i32 0
  store i16 768, i16* %17, align 4
  %18 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 2
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 3
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 1
  %21 = icmp eq %"class.sw::PixelShader"* %1, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.sw::PixelShader"* %1 to %"class.sw::Shader"*
  %24 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %23) #9
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %36, %22
  %27 = getelementptr inbounds [32 x [4 x %"struct.sw::Shader::Semantic"]], [32 x [4 x %"struct.sw::Shader::Semantic"]]* %5, i64 0, i64 0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %1, i64 0, i32 1, i64 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 512, i1 false)
  %29 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %1, i64 0, i32 2
  %30 = load i8, i8* %29, align 1, !range !2
  store i8 %30, i8* %18, align 1
  %31 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %1, i64 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !2
  store i8 %32, i8* %19, align 2
  %33 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %1, i64 0, i32 0, i32 13
  %34 = load i16, i16* %33, align 8
  %35 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 13
  store i16 %34, i16* %35, align 8
  tail call void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"* %3) #9
  tail call void @_ZN2sw11PixelShader7analyzeEv(%"class.sw::PixelShader"* %0) #10
  br label %48

36:                                               ; preds = %22, %36
  %37 = phi i64 [ %45, %36 ], [ 0, %22 ]
  %38 = tail call i8* @_Znwm(i64 208) #11
  %39 = bitcast i8* %38 to %"struct.sw::Shader::Instruction"*
  %40 = tail call %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"* nonnull %23, i64 %37) #9
  %41 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw6Shader11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds i8, i8* %38, i64 8
  %43 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %40, i64 0, i32 1
  %44 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %44, i64 196, i1 false) #12
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %3, %"struct.sw::Shader::Instruction"* nonnull %39) #9
  %45 = add nuw i64 %37, 1
  %46 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %23) #9
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %36, label %26

48:                                               ; preds = %16, %26
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: optsize
declare i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"*, %"struct.sw::Shader::Instruction"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: optsize
declare %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: optsize
declare void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShader7analyzeEv(%"class.sw::PixelShader"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2sw11PixelShader16analyzeZOverrideEv(%"class.sw::PixelShader"* %0) #10
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 5
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %4 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %6 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %7 = icmp eq %"struct.sw::Shader::Instruction"** %4, %6
  br i1 %7, label %17, label %8

8:                                                ; preds = %1, %14
  %9 = phi %"struct.sw::Shader::Instruction"** [ %15, %14 ], [ %4, %1 ]
  %10 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %14 [
    i32 65, label %13
    i32 268435558, label %13
  ]

13:                                               ; preds = %8, %8
  store i8 1, i8* %2, align 8
  br label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %9, i64 1
  %16 = icmp eq %"struct.sw::Shader::Instruction"** %15, %6
  br i1 %16, label %17, label %8

17:                                               ; preds = %14, %1, %13
  tail call void @_ZN2sw11PixelShader19analyzeInterpolantsEv(%"class.sw::PixelShader"* %0) #10
  %18 = bitcast %"class.sw::PixelShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6Shader21analyzeDirtyConstantsEv(%"class.sw::Shader"* %18) #9
  tail call void @_ZN2sw6Shader23analyzeDynamicBranchingEv(%"class.sw::Shader"* %18) #9
  tail call void @_ZN2sw6Shader15analyzeSamplersEv(%"class.sw::Shader"* %18) #9
  tail call void @_ZN2sw6Shader16analyzeCallSitesEv(%"class.sw::Shader"* %18) #9
  tail call void @_ZN2sw6Shader25analyzeIndirectAddressingEv(%"class.sw::Shader"* %18) #9
  tail call void @_ZN2sw6Shader13analyzeLimitsEv(%"class.sw::Shader"* %18) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShaderC2EPKm(%"class.sw::PixelShader"*, i64*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sw::PixelShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"* %3) #9
  %4 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw11PixelShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 0, i64 0
  %6 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 0, i64 128
  br label %7

7:                                                ; preds = %7, %2
  %8 = phi %"struct.sw::Shader::Semantic"* [ %5, %2 ], [ %13, %7 ]
  %9 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 0
  store i8 -1, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 1
  store i8 -1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 2
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 3
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 1
  %14 = icmp eq %"struct.sw::Shader::Semantic"* %13, %6
  br i1 %14, label %15, label %7

15:                                               ; preds = %7
  tail call void @_ZN2sw6Shader5parseEPKm(%"class.sw::Shader"* %3, i64* %1) #9
  %16 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 2
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 3
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 6
  store i8 0, i8* %18, align 1
  tail call void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"* %3) #9
  tail call void @_ZN2sw11PixelShader7analyzeEv(%"class.sw::PixelShader"* %0) #10
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader5parseEPKm(%"class.sw::Shader"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShaderD2Ev(%"class.sw::PixelShader"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sw::PixelShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"* %2) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShaderD0Ev(%"class.sw::PixelShader"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sw::PixelShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"* %2) #9
  %3 = bitcast %"class.sw::PixelShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw11PixelShader8validateEPKm(i64* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = load i64, i64* %0, align 8
  %5 = trunc i64 %4 to i16
  %6 = and i64 %4, 4294966272
  %7 = icmp eq i64 %6, 4294901760
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = icmp eq i64 %4, 65535
  br i1 %9, label %34, label %10

10:                                               ; preds = %8, %25
  %11 = phi i64 [ %32, %25 ], [ %4, %8 ]
  %12 = phi i32 [ %29, %25 ], [ 0, %8 ]
  %13 = phi i32 [ %26, %25 ], [ 1, %8 ]
  %14 = and i64 %11, 65535
  %15 = icmp eq i64 %14, 65534
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = lshr i64 %11, 16
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 32767
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %11 to i16
  switch i16 %21, label %22 [
    i16 75, label %34
    i16 46, label %34
  ]

22:                                               ; preds = %20
  %23 = add nsw i32 %13, 1
  %24 = tail call i32 @_ZN2sw6Shader4sizeEmt(i64 %11, i16 zeroext %5) #9
  br label %25

25:                                               ; preds = %22, %16
  %26 = phi i32 [ %13, %16 ], [ %23, %22 ]
  %27 = phi i32 [ %19, %16 ], [ %24, %22 ]
  %28 = add i32 %12, 1
  %29 = add i32 %28, %27
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i64, i64* %0, i64 %30
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 65535
  br i1 %33, label %34, label %10

34:                                               ; preds = %25, %20, %20, %8, %3, %1
  %35 = phi i32 [ 0, %1 ], [ 0, %3 ], [ 1, %8 ], [ %26, %25 ], [ 0, %20 ], [ 0, %20 ]
  ret i32 %35
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader4sizeEmt(i64, i16 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader13depthOverrideEv(%"class.sw::PixelShader"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader12containsKillEv(%"class.sw::PixelShader"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader16containsCentroidEv(%"class.sw::PixelShader"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader11usesDiffuseEi(%"class.sw::PixelShader"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 0, i64 %3, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, -1
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader12usesSpecularEi(%"class.sw::PixelShader"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 1, i64 %3, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, -1
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw11PixelShader11usesTextureEii(%"class.sw::PixelShader"* nocapture readonly, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = add nsw i32 %1, 2
  %5 = sext i32 %4 to i64
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %5, i64 %6, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, -1
  ret i1 %9
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShader8setInputEiiRKNS_6Shader8SemanticE(%"class.sw::PixelShader"* nocapture, i32, i32, %"struct.sw::Shader::Semantic"* nocapture readonly dereferenceable(4)) local_unnamed_addr #7 align 2 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = sext i32 %1 to i64
  %8 = bitcast %"struct.sw::Shader::Semantic"* %3 to i32*
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %6
  %12 = phi i64 [ 0, %6 ], [ %16, %11 ]
  %13 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %7, i64 %12, i32 0
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %8, align 1
  store i32 %15, i32* %14, align 1
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, %9
  br i1 %17, label %10, label %11
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw11PixelShader8getInputEii(%"class.sw::PixelShader"* readnone, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = sext i32 %1 to i64
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %4, i64 %5
  ret %"struct.sw::Shader::Semantic"* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShader16analyzeZOverrideEv(%"class.sw::PixelShader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 4
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %4 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %6 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %7 = icmp eq %"struct.sw::Shader::Instruction"** %4, %6
  br i1 %7, label %21, label %10

8:                                                ; preds = %15
  %9 = icmp eq %"struct.sw::Shader::Instruction"** %19, %6
  br i1 %9, label %21, label %10

10:                                               ; preds = %1, %8
  %11 = phi %"struct.sw::Shader::Instruction"** [ %19, %8 ], [ %4, %1 ]
  %12 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %11, align 8
  %13 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %15 [
    i32 84, label %20
    i32 87, label %20
  ]

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %12, i64 0, i32 11, i32 0, i32 1
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 9
  %19 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %11, i64 1
  br i1 %18, label %20, label %8

20:                                               ; preds = %10, %10, %15
  store i8 1, i8* %2, align 1
  br label %21

21:                                               ; preds = %8, %1, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShader11analyzeKillEv(%"class.sw::PixelShader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 5
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %4 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %6 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %7 = icmp eq %"struct.sw::Shader::Instruction"** %4, %6
  br i1 %7, label %17, label %8

8:                                                ; preds = %1, %14
  %9 = phi %"struct.sw::Shader::Instruction"** [ %15, %14 ], [ %4, %1 ]
  %10 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %14 [
    i32 65, label %13
    i32 268435558, label %13
  ]

13:                                               ; preds = %8, %8
  store i8 1, i8* %2, align 8
  br label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %9, i64 1
  %16 = icmp eq %"struct.sw::Shader::Instruction"** %15, %6
  br i1 %16, label %17, label %8

17:                                               ; preds = %14, %1, %13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11PixelShader19analyzeInterpolantsEv(%"class.sw::PixelShader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [16 x i32], align 16
  %3 = bitcast [16 x i32]* %2 to i8*
  %4 = alloca [32 x [4 x i8]], align 16
  %5 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 10
  %6 = getelementptr inbounds %union.anon, %union.anon* %5, i64 0, i32 0
  %7 = load i16, i16* %6, align 4
  %8 = icmp ult i16 %7, 768
  br i1 %8, label %9, label %906

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1
  %11 = bitcast [32 x [4 x %"struct.sw::Shader::Semantic"]]* %10 to <4 x i32>*
  store <4 x i32> <i32 10, i32 10, i32 10, i32 10>, <4 x i32>* %11, align 1
  %12 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 1
  %13 = bitcast [4 x %"struct.sw::Shader::Semantic"]* %12 to <4 x i32>*
  store <4 x i32> <i32 266, i32 266, i32 266, i32 266>, <4 x i32>* %13, align 1
  br label %22

14:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 0, i64 64, i1 false)
  %15 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %16 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %15, align 8
  %17 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %18 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %17, align 8
  %19 = icmp eq %"struct.sw::Shader::Instruction"** %16, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %14
  %21 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 0, i64 128, i1 false)
  br label %55

22:                                               ; preds = %22, %9
  %23 = phi i64 [ 0, %9 ], [ %32, %22 ]
  %24 = add nuw nsw i64 %23, 2
  %25 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %24
  %26 = trunc i64 %23 to i32
  %27 = shl i32 %26, 8
  %28 = or i32 %27, 5
  %29 = insertelement <4 x i32> undef, i32 %28, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = bitcast [4 x %"struct.sw::Shader::Semantic"]* %25 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %31, align 1
  %32 = add nuw nsw i64 %23, 1
  %33 = icmp eq i64 %32, 8
  br i1 %33, label %14, label %22

34:                                               ; preds = %52
  %35 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 0, i64 128, i1 false)
  br i1 %19, label %55, label %36

36:                                               ; preds = %34
  %37 = bitcast %union.anon* %5 to %struct.anon*
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %37, i64 0, i32 1
  br label %57

39:                                               ; preds = %14, %52
  %40 = phi %"struct.sw::Shader::Instruction"** [ %53, %52 ], [ %16, %14 ]
  %41 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %40, align 8
  %42 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %41, i64 0, i32 11, i32 0, i32 1
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 10
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %41, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %41, i64 0, i32 7
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds [16 x i32], [16 x i32]* %2, i64 0, i64 %50
  store i32 %49, i32* %51, align 4
  br label %52

52:                                               ; preds = %45, %39
  %53 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %40, i64 1
  %54 = icmp eq %"struct.sw::Shader::Instruction"** %53, %18
  br i1 %54, label %34, label %39

55:                                               ; preds = %95, %20, %34
  %56 = phi i8* [ %21, %20 ], [ %35, %34 ], [ %35, %95 ]
  br label %876

57:                                               ; preds = %36, %95
  %58 = phi %"struct.sw::Shader::Instruction"** [ %16, %36 ], [ %96, %95 ]
  %59 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %60 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %59, i64 0, i32 11, i32 0, i32 1
  %61 = load i8, i8* %60, align 8
  %62 = icmp eq i8 %61, 3
  br i1 %62, label %64, label %63

63:                                               ; preds = %70, %84, %75, %82, %64, %57
  br label %98

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %59, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 2
  %68 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %59, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  switch i32 %69, label %63 [
    i32 66, label %70
    i32 67, label %70
    i32 68, label %70
    i32 64, label %70
    i32 85, label %70
    i32 83, label %70
    i32 84, label %70
    i32 71, label %70
    i32 72, label %70
    i32 86, label %70
    i32 73, label %70
    i32 74, label %70
    i32 65, label %75
    i32 77, label %84
  ]

70:                                               ; preds = %64, %64, %64, %64, %64, %64, %64, %64, %64, %64, %64, %64
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %71, i64 0
  store i8 1, i8* %72, align 4
  %73 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %71, i64 1
  store i8 1, i8* %73, align 1
  %74 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %71, i64 2
  store i8 1, i8* %74, align 2
  br label %63

75:                                               ; preds = %64
  %76 = load i8, i8* %38, align 1
  %77 = icmp ult i8 %76, 2
  %78 = sext i32 %67 to i64
  %79 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %78, i64 0
  store i8 1, i8* %79, align 4
  %80 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %78, i64 1
  store i8 1, i8* %80, align 1
  %81 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %78, i64 2
  store i8 1, i8* %81, align 2
  br i1 %77, label %63, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %78, i64 3
  store i8 1, i8* %83, align 1
  br label %63

84:                                               ; preds = %64
  %85 = sext i32 %67 to i64
  %86 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %85, i64 0
  store i8 1, i8* %86, align 4
  %87 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %85, i64 1
  store i8 1, i8* %87, align 1
  %88 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %85, i64 2
  store i8 1, i8* %88, align 2
  %89 = sext i32 %66 to i64
  %90 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %89, i64 3
  store i8 1, i8* %90, align 1
  %91 = add i32 %66, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %92, i64 3
  store i8 1, i8* %93, align 1
  %94 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %85, i64 3
  store i8 1, i8* %94, align 1
  br label %63

95:                                               ; preds = %873
  %96 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, i64 1
  %97 = icmp eq %"struct.sw::Shader::Instruction"** %96, %18
  br i1 %97, label %55, label %57

98:                                               ; preds = %63, %873
  %99 = phi i64 [ %874, %873 ], [ 0, %63 ]
  %100 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %101 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 12, i64 %99, i32 0, i32 1
  %102 = load i8, i8* %101, align 4
  switch i8 %102, label %873 [
    i8 1, label %103
    i8 3, label %103
  ]

103:                                              ; preds = %98, %98
  %104 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 12, i64 %99, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 12, i64 %99, i32 1
  %107 = bitcast [3 x i8]* %106 to i24*
  %108 = load i24, i24* %107, align 1
  %109 = and i24 %108, 255
  %110 = zext i24 %109 to i32
  %111 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 11, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i8 %102, 3
  %115 = add nsw i32 %105, 2
  %116 = select i1 %114, i32 %115, i32 %105
  %117 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  switch i32 %118, label %869 [
    i32 66, label %119
    i32 93, label %119
    i32 95, label %119
    i32 268435528, label %119
    i32 268435527, label %119
    i32 268435521, label %119
    i32 268435529, label %119
    i32 268435522, label %119
    i32 268435523, label %119
    i32 268435524, label %119
    i32 268435525, label %119
    i32 268435526, label %119
    i32 24, label %207
    i32 23, label %260
    i32 22, label %339
    i32 21, label %444
    i32 20, label %523
    i32 33, label %628
    i32 90, label %703
    i32 8, label %749
    i32 9, label %771
    i32 37, label %793
    i32 14, label %793
    i32 15, label %793
    i32 32, label %793
    i32 6, label %793
    i32 7, label %793
    i32 36, label %815
    i32 1, label %838
    i32 2, label %838
    i32 3, label %838
    i32 5, label %838
    i32 4, label %838
    i32 35, label %838
    i32 88, label %838
    i32 80, label %838
    i32 19, label %838
    i32 18, label %838
    i32 11, label %838
    i32 10, label %838
    i32 94, label %838
    i32 45, label %838
    i32 91, label %838
    i32 92, label %838
    i32 64, label %860
    i32 85, label %864
    i32 83, label %864
    i32 71, label %864
    i32 73, label %864
    i32 72, label %864
    i32 76, label %864
    i32 77, label %864
    i32 67, label %864
    i32 68, label %864
    i32 84, label %864
    i32 86, label %864
    i32 74, label %864
    i32 69, label %873
    i32 70, label %873
    i32 82, label %873
  ]

119:                                              ; preds = %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103
  %120 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 12, i64 1, i32 0, i32 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [16 x i32], [16 x i32]* %2, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4
  switch i32 %124, label %158 [
    i32 0, label %125
    i32 1, label %141
    i32 2, label %144
    i32 3, label %148
    i32 4, label %153
  ]

125:                                              ; preds = %119
  %126 = load i16, i16* %6, align 4
  %127 = icmp eq i16 %126, 260
  br i1 %127, label %128, label %158

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %100, i64 0, i32 12, i64 0, i32 1
  %130 = bitcast [3 x i8]* %129 to i24*
  %131 = load i24, i24* %130, align 1
  %132 = and i24 %131, 48
  %133 = icmp eq i24 %132, 32
  %134 = sext i32 %116 to i64
  %135 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %134, i64 0
  store i8 1, i8* %135, align 4
  %136 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %134, i64 1
  store i8 1, i8* %136, align 1
  br i1 %133, label %137, label %139

137:                                              ; preds = %128
  %138 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %134, i64 2
  store i8 1, i8* %138, align 2
  br label %158

139:                                              ; preds = %128
  %140 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %134, i64 3
  store i8 1, i8* %140, align 1
  br label %158

141:                                              ; preds = %119
  %142 = sext i32 %116 to i64
  %143 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %142, i64 0
  store i8 1, i8* %143, align 4
  br label %158

144:                                              ; preds = %119
  %145 = sext i32 %116 to i64
  %146 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %145, i64 0
  store i8 1, i8* %146, align 4
  %147 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %145, i64 1
  store i8 1, i8* %147, align 1
  br label %158

148:                                              ; preds = %119
  %149 = sext i32 %116 to i64
  %150 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %149, i64 0
  store i8 1, i8* %150, align 4
  %151 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %149, i64 1
  store i8 1, i8* %151, align 1
  %152 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %149, i64 2
  store i8 1, i8* %152, align 2
  br label %158

153:                                              ; preds = %119
  %154 = sext i32 %116 to i64
  %155 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %154, i64 0
  store i8 1, i8* %155, align 4
  %156 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %154, i64 1
  store i8 1, i8* %156, align 1
  %157 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %154, i64 2
  store i8 1, i8* %157, align 2
  br label %158

158:                                              ; preds = %119, %139, %137, %125, %153, %148, %144, %141
  %159 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %160 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %159, i64 0, i32 2
  %161 = bitcast %union.anon.0* %160 to i8*
  %162 = load i8, i8* %161, align 4
  %163 = and i8 %162, 2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %172, label %165

165:                                              ; preds = %158
  %166 = sext i32 %116 to i64
  %167 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %166, i64 3
  store i8 1, i8* %167, align 1
  %168 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %169 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %168, i64 0, i32 2
  %170 = bitcast %union.anon.0* %169 to i8*
  %171 = load i8, i8* %170, align 4
  br label %172

172:                                              ; preds = %158, %165
  %173 = phi i8 [ %162, %158 ], [ %171, %165 ]
  %174 = and i8 %173, 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %172
  %177 = sext i32 %116 to i64
  %178 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %177, i64 3
  store i8 1, i8* %178, align 1
  br label %179

179:                                              ; preds = %172, %176
  %180 = load i16, i16* %6, align 4
  %181 = icmp eq i16 %180, 260
  br i1 %181, label %182, label %873

182:                                              ; preds = %179
  %183 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %184 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %183, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, 66
  br i1 %186, label %187, label %873

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %183, i64 0, i32 12, i64 0, i32 1
  %189 = bitcast [3 x i8]* %188 to i24*
  %190 = load i24, i24* %189, align 1
  %191 = and i24 %190, 65280
  %192 = icmp eq i24 %191, 2304
  br i1 %192, label %193, label %200

193:                                              ; preds = %187
  %194 = sext i32 %116 to i64
  %195 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %194, i64 2
  store i8 1, i8* %195, align 2
  %196 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %58, align 8
  %197 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %196, i64 0, i32 12, i64 0, i32 1
  %198 = bitcast [3 x i8]* %197 to i24*
  %199 = load i24, i24* %198, align 1
  br label %200

200:                                              ; preds = %193, %187
  %201 = phi i24 [ %199, %193 ], [ %190, %187 ]
  %202 = and i24 %201, 65280
  %203 = icmp eq i24 %202, 2560
  br i1 %203, label %204, label %873

204:                                              ; preds = %200
  %205 = sext i32 %116 to i64
  %206 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %205, i64 3
  store i8 1, i8* %206, align 1
  br label %873

207:                                              ; preds = %103
  %208 = and i32 %113, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %232, label %210

210:                                              ; preds = %207
  %211 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %212 = zext i1 %211 to i8
  %213 = sext i32 %116 to i64
  %214 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %213, i64 0
  %215 = load i8, i8* %214, align 4, !range !2
  %216 = or i8 %215, %212
  store i8 %216, i8* %214, align 4
  %217 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %218 = zext i1 %217 to i8
  %219 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %213, i64 1
  %220 = load i8, i8* %219, align 1, !range !2
  %221 = or i8 %220, %218
  store i8 %221, i8* %219, align 1
  %222 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %223 = zext i1 %222 to i8
  %224 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %213, i64 2
  %225 = load i8, i8* %224, align 2, !range !2
  %226 = or i8 %225, %223
  store i8 %226, i8* %224, align 2
  %227 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %228 = zext i1 %227 to i8
  %229 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %213, i64 3
  %230 = load i8, i8* %229, align 1, !range !2
  %231 = or i8 %230, %228
  store i8 %231, i8* %229, align 1
  br label %232

232:                                              ; preds = %207, %210
  %233 = icmp ne i64 %99, 1
  %234 = and i32 %113, 2
  %235 = icmp eq i32 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %873, label %237

237:                                              ; preds = %232
  %238 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %239 = zext i1 %238 to i8
  %240 = add nsw i32 %116, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %241, i64 0
  %243 = load i8, i8* %242, align 4, !range !2
  %244 = or i8 %243, %239
  store i8 %244, i8* %242, align 4
  %245 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %246 = zext i1 %245 to i8
  %247 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %241, i64 1
  %248 = load i8, i8* %247, align 1, !range !2
  %249 = or i8 %248, %246
  store i8 %249, i8* %247, align 1
  %250 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %251 = zext i1 %250 to i8
  %252 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %241, i64 2
  %253 = load i8, i8* %252, align 2, !range !2
  %254 = or i8 %253, %251
  store i8 %254, i8* %252, align 2
  %255 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %256 = zext i1 %255 to i8
  %257 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %241, i64 3
  %258 = load i8, i8* %257, align 1, !range !2
  %259 = or i8 %258, %256
  store i8 %259, i8* %257, align 1
  br label %873

260:                                              ; preds = %103
  %261 = and i32 %113, 1
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %285, label %263

263:                                              ; preds = %260
  %264 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %265 = zext i1 %264 to i8
  %266 = sext i32 %116 to i64
  %267 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %266, i64 0
  %268 = load i8, i8* %267, align 4, !range !2
  %269 = or i8 %268, %265
  store i8 %269, i8* %267, align 4
  %270 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %271 = zext i1 %270 to i8
  %272 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %266, i64 1
  %273 = load i8, i8* %272, align 1, !range !2
  %274 = or i8 %273, %271
  store i8 %274, i8* %272, align 1
  %275 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %276 = zext i1 %275 to i8
  %277 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %266, i64 2
  %278 = load i8, i8* %277, align 2, !range !2
  %279 = or i8 %278, %276
  store i8 %279, i8* %277, align 2
  %280 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %281 = zext i1 %280 to i8
  %282 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %266, i64 3
  %283 = load i8, i8* %282, align 1, !range !2
  %284 = or i8 %283, %281
  store i8 %284, i8* %282, align 1
  br label %285

285:                                              ; preds = %260, %263
  %286 = icmp eq i64 %99, 1
  br i1 %286, label %287, label %873

287:                                              ; preds = %285
  %288 = and i32 %113, 2
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %313, label %290

290:                                              ; preds = %287
  %291 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %292 = zext i1 %291 to i8
  %293 = add nsw i32 %116, 1
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %294, i64 0
  %296 = load i8, i8* %295, align 4, !range !2
  %297 = or i8 %296, %292
  store i8 %297, i8* %295, align 4
  %298 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %294, i64 1
  %301 = load i8, i8* %300, align 1, !range !2
  %302 = or i8 %301, %299
  store i8 %302, i8* %300, align 1
  %303 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %304 = zext i1 %303 to i8
  %305 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %294, i64 2
  %306 = load i8, i8* %305, align 2, !range !2
  %307 = or i8 %306, %304
  store i8 %307, i8* %305, align 2
  %308 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %309 = zext i1 %308 to i8
  %310 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %294, i64 3
  %311 = load i8, i8* %310, align 1, !range !2
  %312 = or i8 %311, %309
  store i8 %312, i8* %310, align 1
  br label %313

313:                                              ; preds = %287, %290
  %314 = and i32 %113, 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %873, label %316

316:                                              ; preds = %313
  %317 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %318 = zext i1 %317 to i8
  %319 = add nsw i32 %116, 2
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %320, i64 0
  %322 = load i8, i8* %321, align 4, !range !2
  %323 = or i8 %322, %318
  store i8 %323, i8* %321, align 4
  %324 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %325 = zext i1 %324 to i8
  %326 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %320, i64 1
  %327 = load i8, i8* %326, align 1, !range !2
  %328 = or i8 %327, %325
  store i8 %328, i8* %326, align 1
  %329 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %330 = zext i1 %329 to i8
  %331 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %320, i64 2
  %332 = load i8, i8* %331, align 2, !range !2
  %333 = or i8 %332, %330
  store i8 %333, i8* %331, align 2
  %334 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %335 = zext i1 %334 to i8
  %336 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %320, i64 3
  %337 = load i8, i8* %336, align 1, !range !2
  %338 = or i8 %337, %335
  store i8 %338, i8* %336, align 1
  br label %873

339:                                              ; preds = %103
  %340 = and i32 %113, 1
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %364, label %342

342:                                              ; preds = %339
  %343 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %344 = zext i1 %343 to i8
  %345 = sext i32 %116 to i64
  %346 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %345, i64 0
  %347 = load i8, i8* %346, align 4, !range !2
  %348 = or i8 %347, %344
  store i8 %348, i8* %346, align 4
  %349 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %350 = zext i1 %349 to i8
  %351 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %345, i64 1
  %352 = load i8, i8* %351, align 1, !range !2
  %353 = or i8 %352, %350
  store i8 %353, i8* %351, align 1
  %354 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %355 = zext i1 %354 to i8
  %356 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %345, i64 2
  %357 = load i8, i8* %356, align 2, !range !2
  %358 = or i8 %357, %355
  store i8 %358, i8* %356, align 2
  %359 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %360 = zext i1 %359 to i8
  %361 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %345, i64 3
  %362 = load i8, i8* %361, align 1, !range !2
  %363 = or i8 %362, %360
  store i8 %363, i8* %361, align 1
  br label %364

364:                                              ; preds = %339, %342
  %365 = icmp eq i64 %99, 1
  br i1 %365, label %366, label %873

366:                                              ; preds = %364
  %367 = and i32 %113, 2
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %392, label %369

369:                                              ; preds = %366
  %370 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %371 = zext i1 %370 to i8
  %372 = add nsw i32 %116, 1
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %373, i64 0
  %375 = load i8, i8* %374, align 4, !range !2
  %376 = or i8 %375, %371
  store i8 %376, i8* %374, align 4
  %377 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %378 = zext i1 %377 to i8
  %379 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %373, i64 1
  %380 = load i8, i8* %379, align 1, !range !2
  %381 = or i8 %380, %378
  store i8 %381, i8* %379, align 1
  %382 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %383 = zext i1 %382 to i8
  %384 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %373, i64 2
  %385 = load i8, i8* %384, align 2, !range !2
  %386 = or i8 %385, %383
  store i8 %386, i8* %384, align 2
  %387 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %388 = zext i1 %387 to i8
  %389 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %373, i64 3
  %390 = load i8, i8* %389, align 1, !range !2
  %391 = or i8 %390, %388
  store i8 %391, i8* %389, align 1
  br label %392

392:                                              ; preds = %366, %369
  %393 = and i32 %113, 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %418, label %395

395:                                              ; preds = %392
  %396 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %397 = zext i1 %396 to i8
  %398 = add nsw i32 %116, 2
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %399, i64 0
  %401 = load i8, i8* %400, align 4, !range !2
  %402 = or i8 %401, %397
  store i8 %402, i8* %400, align 4
  %403 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %404 = zext i1 %403 to i8
  %405 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %399, i64 1
  %406 = load i8, i8* %405, align 1, !range !2
  %407 = or i8 %406, %404
  store i8 %407, i8* %405, align 1
  %408 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %409 = zext i1 %408 to i8
  %410 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %399, i64 2
  %411 = load i8, i8* %410, align 2, !range !2
  %412 = or i8 %411, %409
  store i8 %412, i8* %410, align 2
  %413 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %414 = zext i1 %413 to i8
  %415 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %399, i64 3
  %416 = load i8, i8* %415, align 1, !range !2
  %417 = or i8 %416, %414
  store i8 %417, i8* %415, align 1
  br label %418

418:                                              ; preds = %392, %395
  %419 = and i32 %113, 8
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %873, label %421

421:                                              ; preds = %418
  %422 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %423 = zext i1 %422 to i8
  %424 = add nsw i32 %116, 3
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %425, i64 0
  %427 = load i8, i8* %426, align 4, !range !2
  %428 = or i8 %427, %423
  store i8 %428, i8* %426, align 4
  %429 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %430 = zext i1 %429 to i8
  %431 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %425, i64 1
  %432 = load i8, i8* %431, align 1, !range !2
  %433 = or i8 %432, %430
  store i8 %433, i8* %431, align 1
  %434 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %435 = zext i1 %434 to i8
  %436 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %425, i64 2
  %437 = load i8, i8* %436, align 2, !range !2
  %438 = or i8 %437, %435
  store i8 %438, i8* %436, align 2
  %439 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %440 = zext i1 %439 to i8
  %441 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %425, i64 3
  %442 = load i8, i8* %441, align 1, !range !2
  %443 = or i8 %442, %440
  store i8 %443, i8* %441, align 1
  br label %873

444:                                              ; preds = %103
  %445 = and i32 %113, 1
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %469, label %447

447:                                              ; preds = %444
  %448 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %449 = zext i1 %448 to i8
  %450 = sext i32 %116 to i64
  %451 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %450, i64 0
  %452 = load i8, i8* %451, align 4, !range !2
  %453 = or i8 %452, %449
  store i8 %453, i8* %451, align 4
  %454 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %450, i64 1
  %457 = load i8, i8* %456, align 1, !range !2
  %458 = or i8 %457, %455
  store i8 %458, i8* %456, align 1
  %459 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %460 = zext i1 %459 to i8
  %461 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %450, i64 2
  %462 = load i8, i8* %461, align 2, !range !2
  %463 = or i8 %462, %460
  store i8 %463, i8* %461, align 2
  %464 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %465 = zext i1 %464 to i8
  %466 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %450, i64 3
  %467 = load i8, i8* %466, align 1, !range !2
  %468 = or i8 %467, %465
  store i8 %468, i8* %466, align 1
  br label %469

469:                                              ; preds = %444, %447
  %470 = icmp eq i64 %99, 1
  br i1 %470, label %471, label %873

471:                                              ; preds = %469
  %472 = and i32 %113, 2
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %497, label %474

474:                                              ; preds = %471
  %475 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %476 = zext i1 %475 to i8
  %477 = add nsw i32 %116, 1
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %478, i64 0
  %480 = load i8, i8* %479, align 4, !range !2
  %481 = or i8 %480, %476
  store i8 %481, i8* %479, align 4
  %482 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %483 = zext i1 %482 to i8
  %484 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %478, i64 1
  %485 = load i8, i8* %484, align 1, !range !2
  %486 = or i8 %485, %483
  store i8 %486, i8* %484, align 1
  %487 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %488 = zext i1 %487 to i8
  %489 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %478, i64 2
  %490 = load i8, i8* %489, align 2, !range !2
  %491 = or i8 %490, %488
  store i8 %491, i8* %489, align 2
  %492 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %493 = zext i1 %492 to i8
  %494 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %478, i64 3
  %495 = load i8, i8* %494, align 1, !range !2
  %496 = or i8 %495, %493
  store i8 %496, i8* %494, align 1
  br label %497

497:                                              ; preds = %471, %474
  %498 = and i32 %113, 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %873, label %500

500:                                              ; preds = %497
  %501 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %502 = zext i1 %501 to i8
  %503 = add nsw i32 %116, 2
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %504, i64 0
  %506 = load i8, i8* %505, align 4, !range !2
  %507 = or i8 %506, %502
  store i8 %507, i8* %505, align 4
  %508 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %509 = zext i1 %508 to i8
  %510 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %504, i64 1
  %511 = load i8, i8* %510, align 1, !range !2
  %512 = or i8 %511, %509
  store i8 %512, i8* %510, align 1
  %513 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %514 = zext i1 %513 to i8
  %515 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %504, i64 2
  %516 = load i8, i8* %515, align 2, !range !2
  %517 = or i8 %516, %514
  store i8 %517, i8* %515, align 2
  %518 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %519 = zext i1 %518 to i8
  %520 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %504, i64 3
  %521 = load i8, i8* %520, align 1, !range !2
  %522 = or i8 %521, %519
  store i8 %522, i8* %520, align 1
  br label %873

523:                                              ; preds = %103
  %524 = and i32 %113, 1
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %548, label %526

526:                                              ; preds = %523
  %527 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %528 = zext i1 %527 to i8
  %529 = sext i32 %116 to i64
  %530 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %529, i64 0
  %531 = load i8, i8* %530, align 4, !range !2
  %532 = or i8 %531, %528
  store i8 %532, i8* %530, align 4
  %533 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %534 = zext i1 %533 to i8
  %535 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %529, i64 1
  %536 = load i8, i8* %535, align 1, !range !2
  %537 = or i8 %536, %534
  store i8 %537, i8* %535, align 1
  %538 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %529, i64 2
  %541 = load i8, i8* %540, align 2, !range !2
  %542 = or i8 %541, %539
  store i8 %542, i8* %540, align 2
  %543 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %544 = zext i1 %543 to i8
  %545 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %529, i64 3
  %546 = load i8, i8* %545, align 1, !range !2
  %547 = or i8 %546, %544
  store i8 %547, i8* %545, align 1
  br label %548

548:                                              ; preds = %523, %526
  %549 = icmp eq i64 %99, 1
  br i1 %549, label %550, label %873

550:                                              ; preds = %548
  %551 = and i32 %113, 2
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %576, label %553

553:                                              ; preds = %550
  %554 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %555 = zext i1 %554 to i8
  %556 = add nsw i32 %116, 1
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %557, i64 0
  %559 = load i8, i8* %558, align 4, !range !2
  %560 = or i8 %559, %555
  store i8 %560, i8* %558, align 4
  %561 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %562 = zext i1 %561 to i8
  %563 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %557, i64 1
  %564 = load i8, i8* %563, align 1, !range !2
  %565 = or i8 %564, %562
  store i8 %565, i8* %563, align 1
  %566 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %567 = zext i1 %566 to i8
  %568 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %557, i64 2
  %569 = load i8, i8* %568, align 2, !range !2
  %570 = or i8 %569, %567
  store i8 %570, i8* %568, align 2
  %571 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %572 = zext i1 %571 to i8
  %573 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %557, i64 3
  %574 = load i8, i8* %573, align 1, !range !2
  %575 = or i8 %574, %572
  store i8 %575, i8* %573, align 1
  br label %576

576:                                              ; preds = %550, %553
  %577 = and i32 %113, 4
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %602, label %579

579:                                              ; preds = %576
  %580 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %581 = zext i1 %580 to i8
  %582 = add nsw i32 %116, 2
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %583, i64 0
  %585 = load i8, i8* %584, align 4, !range !2
  %586 = or i8 %585, %581
  store i8 %586, i8* %584, align 4
  %587 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %588 = zext i1 %587 to i8
  %589 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %583, i64 1
  %590 = load i8, i8* %589, align 1, !range !2
  %591 = or i8 %590, %588
  store i8 %591, i8* %589, align 1
  %592 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %593 = zext i1 %592 to i8
  %594 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %583, i64 2
  %595 = load i8, i8* %594, align 2, !range !2
  %596 = or i8 %595, %593
  store i8 %596, i8* %594, align 2
  %597 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %598 = zext i1 %597 to i8
  %599 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %583, i64 3
  %600 = load i8, i8* %599, align 1, !range !2
  %601 = or i8 %600, %598
  store i8 %601, i8* %599, align 1
  br label %602

602:                                              ; preds = %576, %579
  %603 = and i32 %113, 8
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %873, label %605

605:                                              ; preds = %602
  %606 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %607 = zext i1 %606 to i8
  %608 = add nsw i32 %116, 3
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %609, i64 0
  %611 = load i8, i8* %610, align 4, !range !2
  %612 = or i8 %611, %607
  store i8 %612, i8* %610, align 4
  %613 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %614 = zext i1 %613 to i8
  %615 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %609, i64 1
  %616 = load i8, i8* %615, align 1, !range !2
  %617 = or i8 %616, %614
  store i8 %617, i8* %615, align 1
  %618 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %619 = zext i1 %618 to i8
  %620 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %609, i64 2
  %621 = load i8, i8* %620, align 2, !range !2
  %622 = or i8 %621, %619
  store i8 %622, i8* %620, align 2
  %623 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %609, i64 3
  %626 = load i8, i8* %625, align 1, !range !2
  %627 = or i8 %626, %624
  store i8 %627, i8* %625, align 1
  br label %873

628:                                              ; preds = %103
  %629 = and i32 %113, 1
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %653, label %631

631:                                              ; preds = %628
  %632 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 6) #9
  %633 = zext i1 %632 to i8
  %634 = sext i32 %116 to i64
  %635 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %634, i64 0
  %636 = load i8, i8* %635, align 4, !range !2
  %637 = or i8 %636, %633
  store i8 %637, i8* %635, align 4
  %638 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 6) #9
  %639 = zext i1 %638 to i8
  %640 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %634, i64 1
  %641 = load i8, i8* %640, align 1, !range !2
  %642 = or i8 %641, %639
  store i8 %642, i8* %640, align 1
  %643 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 6) #9
  %644 = zext i1 %643 to i8
  %645 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %634, i64 2
  %646 = load i8, i8* %645, align 2, !range !2
  %647 = or i8 %646, %644
  store i8 %647, i8* %645, align 2
  %648 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 6) #9
  %649 = zext i1 %648 to i8
  %650 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %634, i64 3
  %651 = load i8, i8* %650, align 1, !range !2
  %652 = or i8 %651, %649
  store i8 %652, i8* %650, align 1
  br label %653

653:                                              ; preds = %628, %631
  %654 = and i32 %113, 2
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %678, label %656

656:                                              ; preds = %653
  %657 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 5) #9
  %658 = zext i1 %657 to i8
  %659 = sext i32 %116 to i64
  %660 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %659, i64 0
  %661 = load i8, i8* %660, align 4, !range !2
  %662 = or i8 %661, %658
  store i8 %662, i8* %660, align 4
  %663 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 5) #9
  %664 = zext i1 %663 to i8
  %665 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %659, i64 1
  %666 = load i8, i8* %665, align 1, !range !2
  %667 = or i8 %666, %664
  store i8 %667, i8* %665, align 1
  %668 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 5) #9
  %669 = zext i1 %668 to i8
  %670 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %659, i64 2
  %671 = load i8, i8* %670, align 2, !range !2
  %672 = or i8 %671, %669
  store i8 %672, i8* %670, align 2
  %673 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 5) #9
  %674 = zext i1 %673 to i8
  %675 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %659, i64 3
  %676 = load i8, i8* %675, align 1, !range !2
  %677 = or i8 %676, %674
  store i8 %677, i8* %675, align 1
  br label %678

678:                                              ; preds = %653, %656
  %679 = and i32 %113, 4
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %873, label %681

681:                                              ; preds = %678
  %682 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 3) #9
  %683 = zext i1 %682 to i8
  %684 = sext i32 %116 to i64
  %685 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %684, i64 0
  %686 = load i8, i8* %685, align 4, !range !2
  %687 = or i8 %686, %683
  store i8 %687, i8* %685, align 4
  %688 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 3) #9
  %689 = zext i1 %688 to i8
  %690 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %684, i64 1
  %691 = load i8, i8* %690, align 1, !range !2
  %692 = or i8 %691, %689
  store i8 %692, i8* %690, align 1
  %693 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 3) #9
  %694 = zext i1 %693 to i8
  %695 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %684, i64 2
  %696 = load i8, i8* %695, align 2, !range !2
  %697 = or i8 %696, %694
  store i8 %697, i8* %695, align 2
  %698 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 3) #9
  %699 = zext i1 %698 to i8
  %700 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %684, i64 3
  %701 = load i8, i8* %700, align 1, !range !2
  %702 = or i8 %701, %699
  store i8 %702, i8* %700, align 1
  br label %873

703:                                              ; preds = %103
  %704 = icmp ult i64 %99, 2
  br i1 %704, label %705, label %727

705:                                              ; preds = %703
  %706 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 3) #9
  %707 = zext i1 %706 to i8
  %708 = sext i32 %116 to i64
  %709 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %708, i64 0
  %710 = load i8, i8* %709, align 4, !range !2
  %711 = or i8 %710, %707
  store i8 %711, i8* %709, align 4
  %712 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 3) #9
  %713 = zext i1 %712 to i8
  %714 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %708, i64 1
  %715 = load i8, i8* %714, align 1, !range !2
  %716 = or i8 %715, %713
  store i8 %716, i8* %714, align 1
  %717 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 3) #9
  %718 = zext i1 %717 to i8
  %719 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %708, i64 2
  %720 = load i8, i8* %719, align 2, !range !2
  %721 = or i8 %720, %718
  store i8 %721, i8* %719, align 2
  %722 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 3) #9
  %723 = zext i1 %722 to i8
  %724 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %708, i64 3
  %725 = load i8, i8* %724, align 1, !range !2
  %726 = or i8 %725, %723
  store i8 %726, i8* %724, align 1
  br label %873

727:                                              ; preds = %703
  %728 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %729 = zext i1 %728 to i8
  %730 = sext i32 %116 to i64
  %731 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %730, i64 0
  %732 = load i8, i8* %731, align 4, !range !2
  %733 = or i8 %732, %729
  store i8 %733, i8* %731, align 4
  %734 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %735 = zext i1 %734 to i8
  %736 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %730, i64 1
  %737 = load i8, i8* %736, align 1, !range !2
  %738 = or i8 %737, %735
  store i8 %738, i8* %736, align 1
  %739 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %740 = zext i1 %739 to i8
  %741 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %730, i64 2
  %742 = load i8, i8* %741, align 2, !range !2
  %743 = or i8 %742, %740
  store i8 %743, i8* %741, align 2
  %744 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %745 = zext i1 %744 to i8
  %746 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %730, i64 3
  %747 = load i8, i8* %746, align 1, !range !2
  %748 = or i8 %747, %745
  store i8 %748, i8* %746, align 1
  br label %873

749:                                              ; preds = %103
  %750 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 7) #9
  %751 = zext i1 %750 to i8
  %752 = sext i32 %116 to i64
  %753 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %752, i64 0
  %754 = load i8, i8* %753, align 4, !range !2
  %755 = or i8 %754, %751
  store i8 %755, i8* %753, align 4
  %756 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 7) #9
  %757 = zext i1 %756 to i8
  %758 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %752, i64 1
  %759 = load i8, i8* %758, align 1, !range !2
  %760 = or i8 %759, %757
  store i8 %760, i8* %758, align 1
  %761 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 7) #9
  %762 = zext i1 %761 to i8
  %763 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %752, i64 2
  %764 = load i8, i8* %763, align 2, !range !2
  %765 = or i8 %764, %762
  store i8 %765, i8* %763, align 2
  %766 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 7) #9
  %767 = zext i1 %766 to i8
  %768 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %752, i64 3
  %769 = load i8, i8* %768, align 1, !range !2
  %770 = or i8 %769, %767
  store i8 %770, i8* %768, align 1
  br label %873

771:                                              ; preds = %103
  %772 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %773 = zext i1 %772 to i8
  %774 = sext i32 %116 to i64
  %775 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %774, i64 0
  %776 = load i8, i8* %775, align 4, !range !2
  %777 = or i8 %776, %773
  store i8 %777, i8* %775, align 4
  %778 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %779 = zext i1 %778 to i8
  %780 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %774, i64 1
  %781 = load i8, i8* %780, align 1, !range !2
  %782 = or i8 %781, %779
  store i8 %782, i8* %780, align 1
  %783 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %784 = zext i1 %783 to i8
  %785 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %774, i64 2
  %786 = load i8, i8* %785, align 2, !range !2
  %787 = or i8 %786, %784
  store i8 %787, i8* %785, align 2
  %788 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %789 = zext i1 %788 to i8
  %790 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %774, i64 3
  %791 = load i8, i8* %790, align 1, !range !2
  %792 = or i8 %791, %789
  store i8 %792, i8* %790, align 1
  br label %873

793:                                              ; preds = %103, %103, %103, %103, %103, %103
  %794 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 0) #9
  %795 = zext i1 %794 to i8
  %796 = sext i32 %116 to i64
  %797 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %796, i64 0
  %798 = load i8, i8* %797, align 4, !range !2
  %799 = or i8 %798, %795
  store i8 %799, i8* %797, align 4
  %800 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 1) #9
  %801 = zext i1 %800 to i8
  %802 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %796, i64 1
  %803 = load i8, i8* %802, align 1, !range !2
  %804 = or i8 %803, %801
  store i8 %804, i8* %802, align 1
  %805 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 2) #9
  %806 = zext i1 %805 to i8
  %807 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %796, i64 2
  %808 = load i8, i8* %807, align 2, !range !2
  %809 = or i8 %808, %806
  store i8 %809, i8* %807, align 2
  %810 = tail call zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32 %110, i32 3) #9
  %811 = zext i1 %810 to i8
  %812 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %796, i64 3
  %813 = load i8, i8* %812, align 1, !range !2
  %814 = or i8 %813, %811
  store i8 %814, i8* %812, align 1
  br label %873

815:                                              ; preds = %103
  %816 = or i32 %113, 7
  %817 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 %816) #9
  %818 = zext i1 %817 to i8
  %819 = sext i32 %116 to i64
  %820 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %819, i64 0
  %821 = load i8, i8* %820, align 4, !range !2
  %822 = or i8 %821, %818
  store i8 %822, i8* %820, align 4
  %823 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 %816) #9
  %824 = zext i1 %823 to i8
  %825 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %819, i64 1
  %826 = load i8, i8* %825, align 1, !range !2
  %827 = or i8 %826, %824
  store i8 %827, i8* %825, align 1
  %828 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 %816) #9
  %829 = zext i1 %828 to i8
  %830 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %819, i64 2
  %831 = load i8, i8* %830, align 2, !range !2
  %832 = or i8 %831, %829
  store i8 %832, i8* %830, align 2
  %833 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 %816) #9
  %834 = zext i1 %833 to i8
  %835 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %819, i64 3
  %836 = load i8, i8* %835, align 1, !range !2
  %837 = or i8 %836, %834
  store i8 %837, i8* %835, align 1
  br label %873

838:                                              ; preds = %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103
  %839 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 0, i32 %113) #9
  %840 = zext i1 %839 to i8
  %841 = sext i32 %116 to i64
  %842 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %841, i64 0
  %843 = load i8, i8* %842, align 4, !range !2
  %844 = or i8 %843, %840
  store i8 %844, i8* %842, align 4
  %845 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 1, i32 %113) #9
  %846 = zext i1 %845 to i8
  %847 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %841, i64 1
  %848 = load i8, i8* %847, align 1, !range !2
  %849 = or i8 %848, %846
  store i8 %849, i8* %847, align 1
  %850 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 2, i32 %113) #9
  %851 = zext i1 %850 to i8
  %852 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %841, i64 2
  %853 = load i8, i8* %852, align 2, !range !2
  %854 = or i8 %853, %851
  store i8 %854, i8* %852, align 2
  %855 = tail call zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32 %110, i32 3, i32 %113) #9
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %841, i64 3
  %858 = load i8, i8* %857, align 1, !range !2
  %859 = or i8 %858, %856
  store i8 %859, i8* %857, align 1
  br label %873

860:                                              ; preds = %103
  %861 = sext i32 %116 to i64
  %862 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %861, i64 0
  %863 = bitcast i8* %862 to i32*
  store i32 16843009, i32* %863, align 4
  br label %873

864:                                              ; preds = %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103
  %865 = sext i32 %116 to i64
  %866 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %865, i64 0
  store i8 1, i8* %866, align 4
  %867 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %865, i64 1
  store i8 1, i8* %867, align 1
  %868 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %865, i64 2
  store i8 1, i8* %868, align 2
  br label %873

869:                                              ; preds = %103
  %870 = sext i32 %116 to i64
  %871 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %870, i64 0
  %872 = bitcast i8* %871 to i32*
  store i32 16843009, i32* %872, align 4
  br label %873

873:                                              ; preds = %749, %771, %793, %815, %838, %860, %864, %869, %237, %316, %285, %421, %364, %500, %469, %605, %548, %681, %727, %705, %103, %103, %103, %678, %602, %497, %418, %313, %200, %204, %182, %179, %232, %98
  %874 = add nuw nsw i64 %99, 1
  %875 = icmp eq i64 %874, 4
  br i1 %875, label %95, label %98

876:                                              ; preds = %55, %901
  %877 = phi i64 [ 0, %55 ], [ %902, %901 ]
  %878 = getelementptr inbounds [32 x [4 x i8]], [32 x [4 x i8]]* %4, i64 0, i64 %877, i64 0
  %879 = bitcast i8* %878 to <4 x i8>*
  %880 = load <4 x i8>, <4 x i8>* %879, align 4
  %881 = icmp eq <4 x i8> %880, zeroinitializer
  %882 = extractelement <4 x i1> %881, i32 0
  br i1 %882, label %883, label %886

883:                                              ; preds = %876
  %884 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %877, i64 0, i32 0
  %885 = bitcast i8* %884 to i32*
  store i32 65535, i32* %885, align 1
  br label %886

886:                                              ; preds = %883, %876
  %887 = extractelement <4 x i1> %881, i32 1
  br i1 %887, label %888, label %891

888:                                              ; preds = %886
  %889 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %877, i64 1, i32 0
  %890 = bitcast i8* %889 to i32*
  store i32 65535, i32* %890, align 1
  br label %891

891:                                              ; preds = %888, %886
  %892 = extractelement <4 x i1> %881, i32 2
  br i1 %892, label %893, label %896

893:                                              ; preds = %891
  %894 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %877, i64 2, i32 0
  %895 = bitcast i8* %894 to i32*
  store i32 65535, i32* %895, align 1
  br label %896

896:                                              ; preds = %893, %891
  %897 = extractelement <4 x i1> %881, i32 3
  br i1 %897, label %898, label %901

898:                                              ; preds = %896
  %899 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %877, i64 3, i32 0
  %900 = bitcast i8* %899 to i32*
  store i32 65535, i32* %900, align 1
  br label %901

901:                                              ; preds = %898, %896
  %902 = add nuw nsw i64 %877, 1
  %903 = icmp eq i64 %902, 32
  br i1 %903, label %904, label %876

904:                                              ; preds = %901
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #12
  %905 = load i16, i16* %6, align 4
  br label %991

906:                                              ; preds = %1
  %907 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %908 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %907, align 8
  %909 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %910 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %909, align 8
  %911 = icmp eq %"struct.sw::Shader::Instruction"** %908, %910
  br i1 %911, label %994, label %912

912:                                              ; preds = %906
  %913 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 3
  %914 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 2
  br label %915

915:                                              ; preds = %912, %988
  %916 = phi %"struct.sw::Shader::Instruction"** [ %908, %912 ], [ %989, %988 ]
  %917 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %916, align 8
  %918 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 1
  %919 = load i32, i32* %918, align 8
  %920 = icmp eq i32 %919, 31
  br i1 %920, label %921, label %988

921:                                              ; preds = %915
  %922 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 11
  %923 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 11, i32 0, i32 1
  %924 = load i8, i8* %923, align 8
  switch i8 %924, label %988 [
    i8 1, label %925
    i8 17, label %982
  ]

925:                                              ; preds = %921
  %926 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 8
  %927 = load i32, i32* %926, align 8
  %928 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 9
  %929 = load i8, i8* %928, align 4
  %930 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %917, i64 0, i32 11, i32 1, i32 0
  %931 = load i8, i8* %930, align 1
  %932 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %922, i64 0, i32 0, i32 0, i32 0, i32 0
  %933 = load i32, i32* %932, align 8
  %934 = zext i8 %931 to i32
  %935 = and i32 %934, 1
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %946, label %937

937:                                              ; preds = %925
  %938 = and i32 %933, 255
  %939 = zext i32 %938 to i64
  %940 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %939, i64 0, i32 0
  %941 = bitcast i8* %940 to i32*
  %942 = zext i8 %929 to i32
  %943 = shl nuw nsw i32 %942, 8
  %944 = and i32 %927, 255
  %945 = or i32 %943, %944
  store i32 %945, i32* %941, align 1
  br label %946

946:                                              ; preds = %925, %937
  %947 = and i32 %934, 2
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %958, label %949

949:                                              ; preds = %946
  %950 = and i32 %933, 255
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %951, i64 1, i32 0
  %953 = bitcast i8* %952 to i32*
  %954 = zext i8 %929 to i32
  %955 = shl nuw nsw i32 %954, 8
  %956 = and i32 %927, 255
  %957 = or i32 %955, %956
  store i32 %957, i32* %953, align 1
  br label %958

958:                                              ; preds = %946, %949
  %959 = and i32 %934, 4
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %970, label %961

961:                                              ; preds = %958
  %962 = and i32 %933, 255
  %963 = zext i32 %962 to i64
  %964 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %963, i64 2, i32 0
  %965 = bitcast i8* %964 to i32*
  %966 = zext i8 %929 to i32
  %967 = shl nuw nsw i32 %966, 8
  %968 = and i32 %927, 255
  %969 = or i32 %967, %968
  store i32 %969, i32* %965, align 1
  br label %970

970:                                              ; preds = %958, %961
  %971 = and i32 %934, 8
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %988, label %973

973:                                              ; preds = %970
  %974 = and i32 %933, 255
  %975 = zext i32 %974 to i64
  %976 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %975, i64 3, i32 0
  %977 = bitcast i8* %976 to i32*
  %978 = zext i8 %929 to i32
  %979 = shl nuw nsw i32 %978, 8
  %980 = and i32 %927, 255
  %981 = or i32 %979, %980
  store i32 %981, i32* %977, align 1
  br label %988

982:                                              ; preds = %921
  %983 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %922, i64 0, i32 0, i32 0, i32 0, i32 0
  %984 = load i32, i32* %983, align 8
  %985 = trunc i32 %984 to i8
  switch i8 %985, label %988 [
    i8 0, label %986
    i8 1, label %987
  ]

986:                                              ; preds = %982
  store i8 1, i8* %914, align 1
  br label %988

987:                                              ; preds = %982
  store i8 1, i8* %913, align 2
  br label %988

988:                                              ; preds = %986, %987, %982, %921, %973, %970, %915
  %989 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %916, i64 1
  %990 = icmp eq %"struct.sw::Shader::Instruction"** %989, %910
  br i1 %990, label %991, label %915

991:                                              ; preds = %988, %904
  %992 = phi i16 [ %905, %904 ], [ %7, %988 ]
  %993 = icmp ugt i16 %992, 511
  br i1 %993, label %994, label %1034

994:                                              ; preds = %906, %991
  %995 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %996 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %995, align 8
  %997 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %998 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %997, align 8
  %999 = icmp eq %"struct.sw::Shader::Instruction"** %996, %998
  br i1 %999, label %1034, label %1000

1000:                                             ; preds = %994
  %1001 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 6
  br label %1002

1002:                                             ; preds = %1000, %1031
  %1003 = phi %"struct.sw::Shader::Instruction"** [ %996, %1000 ], [ %1032, %1031 ]
  %1004 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %1003, align 8
  %1005 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %1004, i64 0, i32 1
  %1006 = load i32, i32* %1005, align 8
  %1007 = icmp eq i32 %1006, 31
  br i1 %1007, label %1008, label %1031

1008:                                             ; preds = %1002
  %1009 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %1004, i64 0, i32 11, i32 2
  %1010 = load i8, i8* %1009, align 2
  %1011 = and i8 %1010, 4
  %1012 = lshr exact i8 %1011, 2
  %1013 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %1004, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %1014 = load i32, i32* %1013, align 8
  %1015 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %1004, i64 0, i32 11, i32 0, i32 1
  %1016 = load i8, i8* %1015, align 8
  switch i8 %1016, label %1026 [
    i8 1, label %1017
    i8 3, label %1019
  ]

1017:                                             ; preds = %1008
  %1018 = and i32 %1014, 255
  br label %1022

1019:                                             ; preds = %1008
  %1020 = and i32 %1014, 255
  %1021 = add nuw nsw i32 %1020, 2
  br label %1022

1022:                                             ; preds = %1017, %1019
  %1023 = phi i32 [ %1021, %1019 ], [ %1018, %1017 ]
  %1024 = zext i32 %1023 to i64
  %1025 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %0, i64 0, i32 1, i64 %1024, i64 0, i32 2
  store i8 %1012, i8* %1025, align 1
  br label %1026

1026:                                             ; preds = %1022, %1008
  %1027 = load i8, i8* %1001, align 1, !range !2
  %1028 = or i8 %1027, %1011
  %1029 = icmp ne i8 %1028, 0
  %1030 = zext i1 %1029 to i8
  store i8 %1030, i8* %1001, align 1
  br label %1031

1031:                                             ; preds = %1026, %1002
  %1032 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %1003, i64 1
  %1033 = icmp eq %"struct.sw::Shader::Instruction"** %1032, %998
  br i1 %1033, label %1034, label %1002

1034:                                             ; preds = %1031, %994, %991
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader21analyzeDirtyConstantsEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader23analyzeDynamicBranchingEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader15analyzeSamplersEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader16analyzeCallSitesEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader25analyzeIndirectAddressingEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader13analyzeLimitsEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw6Shader30swizzleContainsComponentMaskedEiii(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw6Shader24swizzleContainsComponentEii(i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind optsize }
attributes #10 = { optsize }
attributes #11 = { builtin nounwind optsize }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
