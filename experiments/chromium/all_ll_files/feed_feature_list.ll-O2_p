; ModuleID = '../../components/feed/feed_feature_list.cc'
source_filename = "../../components/feed/feed_feature_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [31 x i8] c"InterestFeedContentSuggestions\00", align 1
@_ZN4feed31kInterestFeedContentSuggestionsE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"InterestFeedV2\00", align 1
@_ZN4feed15kInterestFeedV2E = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 1 }, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"InterestFeedV2Autoplay\00", align 1
@_ZN4feed23kInterestFeedV2AutoplayE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 0 }, align 8
@.str.3 = private unnamed_addr constant [21 x i8] c"InterestFeedV2Hearts\00", align 1
@_ZN4feed21kInterestFeedV2HeartsE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0), i32 0 }, align 8
@.str.4 = private unnamed_addr constant [24 x i8] c"InterestFeedV2Scrolling\00", align 1
@_ZN4feed24kInterestFeedV2ScrollingE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i32 0, i32 0), i32 1 }, align 8
@.str.5 = private unnamed_addr constant [22 x i8] c"disable_trigger_types\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN4feed20kDisableTriggerTypesE = hidden local_unnamed_addr constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, align 8
@.str.7 = private unnamed_addr constant [34 x i8] c"suppress_refresh_duration_minutes\00", align 1
@_ZN4feed31kSuppressRefreshDurationMinutesE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0), i32 30 }, align 8
@.str.8 = private unnamed_addr constant [25 x i8] c"timeout_duration_seconds\00", align 1
@_ZN4feed23kTimeoutDurationSecondsE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i32 0, i32 0), i32 30 }, align 8
@.str.9 = private unnamed_addr constant [28 x i8] c"throttle_background_fetches\00", align 1
@_ZN4feed26kThrottleBackgroundFetchesE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i8 } { %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i32 0, i32 0), i8 1 }, align 8
@.str.10 = private unnamed_addr constant [41 x i8] c"only_set_last_refresh_attempt_on_success\00", align 1
@_ZN4feed35kOnlySetLastRefreshAttemptOnSuccessE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i8 } { %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i32 0, i32 0), i8 1 }, align 8
@.str.11 = private unnamed_addr constant [51 x i8] c"InterestFeedV1ClickAndViewActionsConditionalUpload\00", align 1
@_ZN4feed46kInterestFeedV1ClicksAndViewsConditionalUploadE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i32 0, i32 0), i32 0 }, align 8
@.str.12 = private unnamed_addr constant [51 x i8] c"InterestFeedV2ClickAndViewActionsConditionalUpload\00", align 1
@_ZN4feed46kInterestFeedV2ClicksAndViewsConditionalUploadE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i32 0, i32 0), i32 0 }, align 8
@.str.13 = private unnamed_addr constant [34 x i8] c"InterestFeedNoticeCardAutoDismiss\00", align 1
@_ZN4feed34kInterestFeedNoticeCardAutoDismissE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0), i32 0 }, align 8
@.str.14 = private unnamed_addr constant [33 x i8] c"InterestFeedSpinnerAlwaysAnimate\00", align 1
@_ZN4feed33kInterestFeedSpinnerAlwaysAnimateE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i32 0, i32 0), i32 0 }, align 8
@.str.15 = private unnamed_addr constant [10 x i8] c"FeedShare\00", align 1
@_ZN4feed10kFeedShareE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i32 0 }, align 8
@.str.16 = private unnamed_addr constant [8 x i8] c"WebFeed\00", align 1
@_ZN4feed8kWebFeedE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i32 0 }, align 8
@.str.17 = private unnamed_addr constant [18 x i8] c"DiscoFeedEndpoint\00", align 1
@_ZN4feed18kDiscoFeedEndpointE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i32 0 }, align 8
@.str.18 = private unnamed_addr constant [25 x i8] c"XsurfaceMetricsReporting\00", align 1
@_ZN4feed25kXsurfaceMetricsReportingE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i32 0, i32 0), i32 0 }, align 8
@.str.19 = private unnamed_addr constant [13 x i8] c"referrer_url\00", align 1
@_ZN4feedL19kDefaultReferrerUrlE = internal unnamed_addr constant [24 x i8] c"https://www.google.com/\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4feed18GetFeedReferrerUrlEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4feed15kInterestFeedV2E) #5
  %5 = select i1 %4, %"struct.base::Feature"* @_ZN4feed15kInterestFeedV2E, %"struct.base::Feature"* @_ZN4feed31kInterestFeedContentSuggestionsE
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 12, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i64 12, i1 false) #5
  %13 = getelementptr inbounds i8, i8* %9, i64 12
  store i8 0, i8* %13, align 4
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #5
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i64, i64* %8, align 8
  %25 = zext i8 %22 to i64
  %26 = select i1 %23, i64 %24, i64 %25
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %19
  %29 = call i8* @_Znwm(i64 32) #6
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN4feedL19kDefaultReferrerUrlE, i64 0, i64 0), i64 23, i1 false) #5
  %33 = getelementptr inbounds i8, i8* %29, i64 23
  store i8 0, i8* %33, align 1
  br label %40

34:                                               ; preds = %19
  br i1 %23, label %37, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %6, i64 24, i1 false) #5
  br label %45

37:                                               ; preds = %34
  %38 = load i8*, i8** %7, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %38, i64 %24) #5
  %39 = load i8, i8* %21, align 1
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i8 [ %39, %37 ], [ %22, %28 ]
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %44) #6
  br label %45

45:                                               ; preds = %35, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
