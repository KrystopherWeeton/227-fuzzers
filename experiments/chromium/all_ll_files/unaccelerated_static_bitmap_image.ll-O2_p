; ModuleID = '../../third_party/blink/renderer/platform/graphics/unaccelerated_static_bitmap_image.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/unaccelerated_static_bitmap_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::UnacceleratedStaticBitmapImage" = type { %"class.blink::StaticBitmapImage.base", %"class.cc::PaintImage", %class.sk_sp, %class.scoped_refptr.210 }
%"class.blink::StaticBitmapImage.base" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8 }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.1, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.184" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.2" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.212", i64 }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.214" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.196, %"class.gfx::Rect", i32, %class.sk_sp.201, %class.sk_sp.207, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.208 }
%class.sk_sp.196 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.197", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.201 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.190, i32, i32 }
%class.sk_sp.190 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.202" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.207 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.208 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.209", [4 x i8] }>
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.210 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.211" }>
%"class.base::RefCountedThreadSafe.211" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.225", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.225" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.211", [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.cc::PaintFlags" = type <{ %class.sk_sp.226, %class.sk_sp.227, %class.sk_sp.249, %class.sk_sp.250, %class.sk_sp.251, %class.sk_sp.252, i32, float, float, i32, %union.anon.253, [4 x i8] }>
%class.sk_sp.226 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.227 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.196, i32, %"class.absl::optional.229", %"class.std::__1::vector.234", %"class.std::__1::vector.241", %class.sk_sp.248, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.228 }
%union.anon.228 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { i32*, i32*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i32* }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { float*, float*, %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { float* }
%class.sk_sp.248 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.180", [7 x i8] }>
%class.sk_sp.249 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.250 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.251 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.252 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.253 = type { i32 }
%"class.blink::FloatRect" = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%class.GrDirectContext = type opaque
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.257, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.259", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.294", i8, i32, i32, i32, %"class.WTF::Vector.316", i8, i8, i64, i64, %"class.base::RepeatingCallback.322", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.343" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.256", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.191" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.257 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.259" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.285", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.269, [384 x i64], %class.sk_sp.270, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.271", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.277" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.269 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.270 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.283, %class.SkPixmap, %class.sk_sp.284 }
%class.sk_sp.283 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.284 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.297, %"class.std::__1::unique_ptr.298" }
%class.scoped_refptr.297 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.301", %struct.SkRect }
%"class.absl::optional.301" = type { %"class.absl::optional_internal::optional_data.302" }
%"class.absl::optional_internal::optional_data.302" = type { %"class.absl::optional_internal::optional_data_base.303" }
%"class.absl::optional_internal::optional_data_base.303" = type { %"class.absl::optional_internal::optional_data_dtor_base.304" }
%"class.absl::optional_internal::optional_data_dtor_base.304" = type { i8, %union.anon.305 }
%union.anon.305 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %class.scoped_refptr.319*, i32, i32 }
%class.scoped_refptr.319 = type opaque
%"class.base::RepeatingCallback.322" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.323" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.337" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"struct.std::__1::pair.339"*, %"struct.std::__1::pair.339"*, %"class.std::__1::__compressed_pair.340" }
%"struct.std::__1::pair.339" = type { i32, i32 }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::pair.339"* }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.190, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.343" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { i8*, i8*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { i8* }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.352" }
%"struct.std::__1::atomic.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__atomic_base.354" }
%"struct.std::__1::__atomic_base.354" = type { %"struct.std::__1::__cxx_atomic_impl.355" }
%"struct.std::__1::__cxx_atomic_impl.355" = type { %"struct.std::__1::__cxx_atomic_base_impl.356" }
%"struct.std::__1::__cxx_atomic_base_impl.356" = type { i32 }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.blink::GraphicsContext" = type opaque
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK5blink5Image10IsSVGImageEv = comdat any

$_ZNK5blink5Image13IsBitmapImageEv = comdat any

$_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv = comdat any

$_ZNK5blink5Image18IsPlaceholderImageEv = comdat any

$_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv = comdat any

$_ZN5blink5Image25CurrentFrameIsLazyDecodedEv = comdat any

$_ZN5blink5Image10FrameCountEv = comdat any

$_ZNK5blink5Image15IsTextureBackedEv = comdat any

$_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv = comdat any

$_ZNK5blink5Image16HasIntrinsicSizeEv = comdat any

$_ZNK5blink5Image20DensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE = comdat any

$_ZNK5blink5Image10GetHotSpotERNS_8IntPointE = comdat any

$_ZN5blink5Image11DataChangedEb = comdat any

$_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv = comdat any

$_ZN5blink5Image4DataEv = comdat any

$_ZN5blink5Image14StartAnimationEv = comdat any

$_ZN5blink5Image14ResetAnimationEv = comdat any

$_ZN5blink5Image13MaybeAnimatedEv = comdat any

$_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE = comdat any

$_ZN5blink5Image15AnimationPolicyEv = comdat any

$_ZN5blink5Image26AdvanceAnimationForTestingEv = comdat any

$_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv = comdat any

$_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv = comdat any

$_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image15ContextProviderEv = comdat any

$_ZNK5blink5Image22ContextProviderWrapperEv = comdat any

$_ZN5blink5Image15IsSizeAvailableEv = comdat any

$_ZNK5blink17StaticBitmapImage7IsValidEv = comdat any

$_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv = comdat any

$_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv = comdat any

$_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE = comdat any

$_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv = comdat any

$_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv = comdat any

$_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN5blink30UnacceleratedStaticBitmapImageE = hidden unnamed_addr constant { [53 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImageD2Ev to i8*), i8* bitcast (void (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImageD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image10IsSVGImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image13IsBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image18IsPlaceholderImageEv to i8*), i8* bitcast (i1 (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImage27CurrentFrameKnownToBeOpaqueEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZN5blink5Image10FrameCountEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image15IsTextureBackedEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image16HasIntrinsicSizeEv to i8*), i8* bitcast (i64 (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZNK5blink30UnacceleratedStaticBitmapImage4SizeEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20DensityCorrectedSizeEv to i8*), i8* bitcast (i64 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage20PreferredDisplaySizeEv to i8*), i8* bitcast (<2 x float> (%"class.blink::Image"*, i32)* @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.blink::IntPoint"*)* @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE to i8*), i8* bitcast (i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)* @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb to i8*), i8* bitcast (i32 (%"class.blink::Image"*, i1)* @_ZN5blink5Image11DataChangedEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Image"*)* @_ZNK5blink5Image17FilenameExtensionEv to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv to i8*), i8* bitcast (%"class.WTF::SharedBuffer"* (%"class.blink::Image"*)* @_ZN5blink5Image4DataEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14StartAnimationEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14ResetAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image13MaybeAnimatedEv to i8*), i8* bitcast (void (%"class.blink::Image"*, i32)* @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i32 (%"class.blink::Image"*)* @_ZN5blink5Image15AnimationPolicyEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image26AdvanceAnimationForTestingEv to i8*), i8* bitcast (void ()* @_ZN5blink5Image20ImageForDefaultFrameEv to i8*), i8* bitcast (void (%"class.cc::PaintImage"*, %"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImage25PaintImageForCurrentFrameEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv to i8*), i8* bitcast (i8 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv to i8*), i8* bitcast (void (%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"*, %"class.blink::FloatRect"*, %"class.blink::FloatRect"*, %struct.SkSamplingOptions*, i32, i32, i32)* @_ZN5blink30UnacceleratedStaticBitmapImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.cc::PaintFlags"*, %class.SkMatrix*)* @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix to i8*), i8* bitcast (%"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Image"*)* @_ZNK5blink5Image15ContextProviderEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.blink::Image"*)* @_ZNK5blink5Image22ContextProviderWrapperEv to i8*), i8* bitcast (void (%"class.blink::Image"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, %"class.blink::FloatPoint"*, i32, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, i32)* @_ZN5blink5Image11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image15IsSizeAvailableEv to i8*), i8* bitcast (%"class.blink::StaticBitmapImage"* (%"class.blink::UnacceleratedStaticBitmapImage"*, %class.sk_sp.190*, i32)* @_ZN5blink30UnacceleratedStaticBitmapImage19ConvertToColorSpaceE5sk_spI12SkColorSpaceE11SkColorType to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage7IsValidEv to i8*), i8* bitcast (void (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImage8TransferEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv to i8*), i8* bitcast (%"class.blink::StaticBitmapImage"* (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv to i8*), i8* bitcast (i1 (%"class.blink::StaticBitmapImage"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i1, i1, %"class.blink::IntPoint"*, %"class.blink::IntRect"*)* @_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE to i8*), i8* bitcast (i1 (%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.blink::CanvasResourceProvider"*)* @_ZN5blink30UnacceleratedStaticBitmapImage22CopyToResourceProviderEPNS_22CanvasResourceProviderE to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*)* @_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv to i8*), i8* bitcast (void (%"struct.gpu::MailboxHolder"*, %"class.blink::StaticBitmapImage"*)* @_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv to i8*), i8* bitcast (void (%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"*)* @_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE to i8*), i8* bitcast (i1 (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZNK5blink30UnacceleratedStaticBitmapImage15IsPremultipliedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [88 x i8] c"../../third_party/blink/renderer/platform/graphics/unaccelerated_static_bitmap_image.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"~UnacceleratedStaticBitmapImage\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink30UnacceleratedStaticBitmapImageC1E5sk_spI7SkImageENS_16ImageOrientationE = hidden unnamed_addr alias void (%"class.blink::UnacceleratedStaticBitmapImage"*, %class.sk_sp*, i8), void (%"class.blink::UnacceleratedStaticBitmapImage"*, %class.sk_sp*, i8)* @_ZN5blink30UnacceleratedStaticBitmapImageC2E5sk_spI7SkImageENS_16ImageOrientationE
@_ZN5blink30UnacceleratedStaticBitmapImageC1EN2cc10PaintImageENS_16ImageOrientationE = hidden unnamed_addr alias void (%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.cc::PaintImage"*, i8), void (%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.cc::PaintImage"*, i8)* @_ZN5blink30UnacceleratedStaticBitmapImageC2EN2cc10PaintImageENS_16ImageOrientationE
@_ZN5blink30UnacceleratedStaticBitmapImageD1Ev = hidden unnamed_addr alias void (%"class.blink::UnacceleratedStaticBitmapImage"*), void (%"class.blink::UnacceleratedStaticBitmapImage"*)* @_ZN5blink30UnacceleratedStaticBitmapImageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp* nocapture, i8) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = tail call noalias i8* @malloc(i64 184) #9
  %5 = bitcast i8* %4 to %"class.blink::UnacceleratedStaticBitmapImage"*
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %9 = bitcast %class.sk_sp* %3 to i64*
  store i64 %8, i64* %9, align 8
  call void @_ZN5blink30UnacceleratedStaticBitmapImageC2E5sk_spI7SkImageENS_16ImageOrientationE(%"class.blink::UnacceleratedStaticBitmapImage"* %5, %class.sk_sp* nonnull %3, i8 %1)
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %11 = load %class.SkImage*, %class.SkImage** %10, align 8
  %12 = icmp eq %class.SkImage* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkImage, %class.SkImage* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = bitcast %class.SkImage* %11 to %class.SkRefCntBase*
  %19 = bitcast %class.SkImage* %11 to void (%class.SkRefCntBase*)***
  %20 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, i64 2
  %22 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, align 8
  tail call void %22(%class.SkRefCntBase* nonnull %18) #9
  br label %23

23:                                               ; preds = %2, %13, %17
  ret %"class.blink::UnacceleratedStaticBitmapImage"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImageC2E5sk_spI7SkImageENS_16ImageOrientationE(%"class.blink::UnacceleratedStaticBitmapImage"*, %class.sk_sp* nocapture, i8) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.cc::PaintImage", align 8
  %6 = alloca %"class.cc::PaintImageBuilder", align 8
  %7 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %7, %"class.blink::ImageObserver"* null, i1 zeroext false) #9
  %8 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 1, i32 0
  store i8 %2, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %10, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTVN5blink30UnacceleratedStaticBitmapImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %11) #9
  %12 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %14 = bitcast %class.SkImage** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = load %class.SkImage*, %class.SkImage** %13, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %3, %17
  %21 = bitcast %"class.cc::PaintImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %21) #9
  %22 = bitcast %"class.cc::PaintImageBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %22) #9
  call void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* nonnull sret %6, %"class.blink::Image"* %7) #9
  %23 = bitcast %class.sk_sp* %1 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.SkImage* null, %class.SkImage** %13, align 8
  %25 = call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #9
  %26 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.SkImage*, %class.SkImage** %26, align 8
  %28 = bitcast %"class.cc::PaintImageBuilder"* %6 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %class.SkImage* %27, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkImage* %27 to %class.SkRefCntBase*
  %36 = bitcast %class.SkImage* %27 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %34, %30, %20
  %41 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %6, i64 0, i32 0, i32 3
  store i32 %25, i32* %41, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* nonnull sret %5, %"class.cc::PaintImageBuilder"* nonnull %6) #9
  %42 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* %11, %"class.cc::PaintImage"* nonnull dereferenceable(104) %5) #9
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %5) #9
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %21) #9
  ret void
}

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* sret, %"class.blink::Image"*) local_unnamed_addr #2

declare i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #2

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateEN2cc10PaintImageENS_16ImageOrientationE(%"class.cc::PaintImage"*, i8) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImage", align 8
  %4 = tail call noalias i8* @malloc(i64 184) #9
  %5 = bitcast i8* %4 to %"class.blink::UnacceleratedStaticBitmapImage"*
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %3, %"class.cc::PaintImage"* dereferenceable(104) %0) #9
  %6 = bitcast i8* %4 to %"class.blink::Image"*
  call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %6, %"class.blink::ImageObserver"* null, i1 zeroext false) #9
  %7 = bitcast i8* %4 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %4, i64 56
  store i8 %1, i8* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 57
  store i8 1, i8* %9, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTVN5blink30UnacceleratedStaticBitmapImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 64
  %11 = bitcast i8* %10 to %"class.cc::PaintImage"*
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %11, %"class.cc::PaintImage"* nonnull dereferenceable(104) %3) #9
  %12 = getelementptr inbounds i8, i8* %4, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %3) #9
  ret %"class.blink::UnacceleratedStaticBitmapImage"* %5
}

declare void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImageC2EN2cc10PaintImageENS_16ImageOrientationE(%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.cc::PaintImage"*, i8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %4, %"class.blink::ImageObserver"* null, i1 zeroext false) #9
  %5 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 1, i32 0
  store i8 %2, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %7, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTVN5blink30UnacceleratedStaticBitmapImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %8, %"class.cc::PaintImage"* dereferenceable(104) %1) #9
  %9 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 2, i32 0
  %10 = bitcast %class.SkImage** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImageD2Ev(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %8 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTVN5blink30UnacceleratedStaticBitmapImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 2, i32 0
  %10 = load %class.SkImage*, %class.SkImage** %9, align 8
  %11 = icmp eq %class.SkImage* %10, null
  br i1 %11, label %69, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to %"class.base::SequencedTaskRunner"*
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to i1 (%"class.base::SequencedTaskRunner"*)***
  %17 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %17, i64 5
  %19 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.base::SequencedTaskRunner"* %15) #9
  br i1 %20, label %56, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.base::SingleThreadTaskRunner"** %13 to %"class.base::SequencedTaskRunner"**
  %23 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str, i64 0, i64 0), i32 61) #9
  %25 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = load %class.SkImage*, %class.SkImage** %9, align 8, !noalias !2
  %27 = icmp eq %class.SkImage* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.SkImage, %class.SkImage* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !2
  br label %31

31:                                               ; preds = %21, %28
  %32 = ptrtoint %class.SkImage* %26 to i64
  %33 = call i8* @_Znwm(i64 48) #10, !noalias !7
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !7
  %35 = getelementptr inbounds i8, i8* %33, i64 40
  %36 = bitcast i8* %35 to i64*
  store i64 %32, i64* %36, align 8, !noalias !7
  %37 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9, !noalias !12
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = ptrtoint i8* %33 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !13
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8, !noalias !13
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #9, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9, !noalias !12
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #9, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %43 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.base::SequencedTaskRunner"* %23 to %"class.base::TaskRunner"*
  %46 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %39, i64* %48, align 8, !alias.scope !16
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8, !noalias !16
  %49 = bitcast %"class.base::SequencedTaskRunner"* %23 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %50 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %49, align 8
  %51 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %50, align 8
  %52 = call zeroext i1 %51(%"class.base::TaskRunner"* %45, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %2, i64 0) #9
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #9
  %54 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #9
  br label %69

56:                                               ; preds = %12
  %57 = load %class.SkImage*, %class.SkImage** %9, align 8
  store %class.SkImage* null, %class.SkImage** %9, align 8
  %58 = icmp eq %class.SkImage* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkImage, %class.SkImage* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkImage* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkImage* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  tail call void %68(%class.SkRefCntBase* nonnull %64) #9
  br label %69

69:                                               ; preds = %1, %63, %59, %56, %31
  %70 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 3, i32 0
  %71 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %70, align 8
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %71, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %71, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.211", %"class.base::RefCountedThreadSafe.211"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.211", %"class.base::RefCountedThreadSafe.211"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe.211"* %79 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %80) #9
  br label %81

81:                                               ; preds = %69, %73, %78
  %82 = load %class.SkImage*, %class.SkImage** %9, align 8
  %83 = icmp eq %class.SkImage* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.SkImage, %class.SkImage* %82, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.SkImage* %82 to %class.SkRefCntBase*
  %90 = bitcast %class.SkImage* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8
  call void %93(%class.SkRefCntBase* nonnull %89) #9
  br label %94

94:                                               ; preds = %81, %84, %88
  %95 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %95) #9
  %96 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink5ImageD2Ev(%"class.blink::Image"* %96) #9
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5ImageD2Ev(%"class.blink::Image"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImageD0Ev(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink30UnacceleratedStaticBitmapImageD2Ev(%"class.blink::UnacceleratedStaticBitmapImage"* %0) #9
  %2 = bitcast %"class.blink::UnacceleratedStaticBitmapImage"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink30UnacceleratedStaticBitmapImage4SizeEv(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %2) #9
  %4 = tail call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %2) #9
  %5 = zext i32 %4 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %3 to i64
  %8 = or i64 %6, %7
  ret i64 %8
}

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink30UnacceleratedStaticBitmapImage15IsPremultipliedEv(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK2cc10PaintImage12GetAlphaTypeEv(%"class.cc::PaintImage"* %2) #9
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

declare i32 @_ZNK2cc10PaintImage12GetAlphaTypeEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink30UnacceleratedStaticBitmapImage27CurrentFrameKnownToBeOpaqueEv(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.SkImageInfo, align 8
  %3 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  %4 = bitcast %struct.SkImageInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  call void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* nonnull sret %2, %"class.cc::PaintImage"* %3) #9
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %10) #9
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi i1 [ true, %1 ], [ %11, %8 ]
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImage4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE(%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"*, %"class.blink::FloatRect"*, %struct.SkSamplingOptions* dereferenceable(20), i32, i32, i32) unnamed_addr #0 align 2 {
  %10 = alloca %"class.cc::PaintImage", align 8
  %11 = bitcast %"class.blink::UnacceleratedStaticBitmapImage"* %0 to %"class.blink::StaticBitmapImage"*
  %12 = bitcast %"class.cc::PaintImage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %10, %"class.cc::PaintImage"* dereferenceable(104) %13) #9
  call void @_ZN5blink17StaticBitmapImage10DrawHelperEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_5Image17ImageClampingModeENS_27RespectImageOrientationEnumERKNS1_10PaintImageE(%"class.blink::StaticBitmapImage"* %11, %"class.cc::PaintCanvas"* %1, %"class.cc::PaintFlags"* dereferenceable(72) %2, %"class.blink::FloatRect"* %3, %"class.blink::FloatRect"* %4, %struct.SkSamplingOptions* dereferenceable(20) %5, i32 %7, i32 %6, %"class.cc::PaintImage"* nonnull dereferenceable(104) %10) #9
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #9
  ret void
}

declare void @_ZN5blink17StaticBitmapImage10DrawHelperEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_5Image17ImageClampingModeENS_27RespectImageOrientationEnumERKNS1_10PaintImageE(%"class.blink::StaticBitmapImage"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"*, %"class.blink::FloatRect"*, %struct.SkSamplingOptions* dereferenceable(20), i32, i32, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImage25PaintImageForCurrentFrameEv(%"class.cc::PaintImage"* noalias sret, %"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %1, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* %0, %"class.cc::PaintImage"* dereferenceable(104) %3) #9
  ret void
}

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30UnacceleratedStaticBitmapImage8TransferEv(%"class.blink::UnacceleratedStaticBitmapImage"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp* nonnull sret %2, %"class.cc::PaintImage"* %4) #9
  %5 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %2 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %10 = load %class.SkImage*, %class.SkImage** %9, align 8
  %11 = bitcast %class.sk_sp* %5 to i64*
  store i64 %8, i64* %11, align 8
  %12 = icmp eq %class.SkImage* %10, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.SkImage, %class.SkImage* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = bitcast %class.SkImage* %10 to %class.SkRefCntBase*
  %19 = bitcast %class.SkImage* %10 to void (%class.SkRefCntBase*)***
  %20 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, i64 2
  %22 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, align 8
  call void %22(%class.SkRefCntBase* nonnull %18) #9
  br label %23

23:                                               ; preds = %1, %13, %17
  %24 = load %class.SkImage*, %class.SkImage** %6, align 8
  %25 = icmp eq %class.SkImage* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkImage, %class.SkImage* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkImage* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkImage* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #9
  br label %36

36:                                               ; preds = %23, %26, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  %37 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %38 = bitcast %"class.blink::Thread"* %37 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %39 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %39, i64 3
  %41 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %40, align 8
  %42 = call %"class.base::SingleThreadTaskRunner"* %41(%"class.blink::Thread"* %37) #9
  %43 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 3
  %44 = ptrtoint %"class.base::SingleThreadTaskRunner"* %42 to i64
  %45 = bitcast %class.scoped_refptr.210* %43 to i64*
  %46 = getelementptr inbounds %class.scoped_refptr.210, %class.scoped_refptr.210* %43, i64 0, i32 0
  %47 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.base::SingleThreadTaskRunner"* %47, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %47, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.211", %"class.base::RefCountedThreadSafe.211"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.211", %"class.base::RefCountedThreadSafe.211"* %50, i64 -2
  %56 = bitcast %"class.base::RefCountedThreadSafe.211"* %55 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %56) #9
  br label %57

57:                                               ; preds = %36, %49, %54
  ret void
}

declare void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp* sret, %"class.cc::PaintImage"*) local_unnamed_addr #2

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage19ConvertToColorSpaceE5sk_spI12SkColorSpaceE11SkColorType(%"class.blink::UnacceleratedStaticBitmapImage"*, %class.sk_sp.190* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp.190, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %class.sk_sp.190, align 8
  %11 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %12, align 8
  %13 = bitcast %"class.cc::PaintImage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %6, %"class.cc::PaintImage"* dereferenceable(104) %14) #9
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp* nonnull sret %5, %"class.cc::PaintImage"* nonnull %6) #9
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %13) #9
  %15 = load %class.SkImage*, %class.SkImage** %12, align 8
  %16 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %15) #9
  %17 = icmp eq i32 %16, %2
  br i1 %17, label %18, label %67

18:                                               ; preds = %3
  %19 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = load %class.SkImage*, %class.SkImage** %12, align 8
  %21 = getelementptr inbounds %class.sk_sp.190, %class.sk_sp.190* %8, i64 0, i32 0
  %22 = getelementptr inbounds %class.sk_sp.190, %class.sk_sp.190* %1, i64 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %18, %25
  store %class.SkColorSpace* %23, %class.SkColorSpace** %21, align 8
  call void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* nonnull sret %7, %class.SkImage* %20, %class.sk_sp.190* nonnull %8, %class.GrDirectContext* null) #9
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %30 = bitcast %class.sk_sp* %7 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkImage* null, %class.SkImage** %29, align 8
  %32 = load %class.SkImage*, %class.SkImage** %12, align 8
  %33 = bitcast %class.sk_sp* %5 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq %class.SkImage* %32, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkImage* %32 to %class.SkRefCntBase*
  %41 = bitcast %class.SkImage* %32 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  call void %44(%class.SkRefCntBase* nonnull %40) #9
  br label %45

45:                                               ; preds = %35, %39
  %46 = load %class.SkImage*, %class.SkImage** %29, align 8
  %47 = icmp eq %class.SkImage* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.SkImage, %class.SkImage* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkImage* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkImage* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #9
  br label %58

58:                                               ; preds = %28, %45, %48, %52
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %60 = icmp eq %class.SkColorSpace* %59, null
  br i1 %60, label %116, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %116

65:                                               ; preds = %61
  %66 = bitcast %class.SkColorSpace* %59 to i8*
  call void @_ZdlPv(i8* %66) #10
  br label %116

67:                                               ; preds = %3
  %68 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = load %class.SkImage*, %class.SkImage** %12, align 8
  %70 = getelementptr inbounds %class.sk_sp.190, %class.sk_sp.190* %10, i64 0, i32 0
  %71 = getelementptr inbounds %class.sk_sp.190, %class.sk_sp.190* %1, i64 0, i32 0
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic
  br label %77

77:                                               ; preds = %67, %74
  store %class.SkColorSpace* %72, %class.SkColorSpace** %70, align 8
  call void @_ZNK7SkImage26makeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* nonnull sret %9, %class.SkImage* %69, i32 %2, %class.sk_sp.190* nonnull %10, %class.GrDirectContext* null) #9
  %78 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %79 = bitcast %class.sk_sp* %9 to i64*
  %80 = load i64, i64* %79, align 8
  store %class.SkImage* null, %class.SkImage** %78, align 8
  %81 = load %class.SkImage*, %class.SkImage** %12, align 8
  %82 = bitcast %class.sk_sp* %5 to i64*
  store i64 %80, i64* %82, align 8
  %83 = icmp eq %class.SkImage* %81, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %class.SkImage, %class.SkImage* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.SkImage* %81 to %class.SkRefCntBase*
  %90 = bitcast %class.SkImage* %81 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8
  call void %93(%class.SkRefCntBase* nonnull %89) #9
  br label %94

94:                                               ; preds = %84, %88
  %95 = load %class.SkImage*, %class.SkImage** %78, align 8
  %96 = icmp eq %class.SkImage* %95, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %class.SkImage, %class.SkImage* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkImage* %95 to %class.SkRefCntBase*
  %103 = bitcast %class.SkImage* %95 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #9
  br label %107

107:                                              ; preds = %77, %94, %97, %101
  %108 = load %class.SkColorSpace*, %class.SkColorSpace** %70, align 8
  %109 = icmp eq %class.SkColorSpace* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = bitcast %class.SkColorSpace* %108 to i8*
  call void @_ZdlPv(i8* %115) #10
  br label %116

116:                                              ; preds = %114, %110, %107, %65, %61, %58
  %117 = phi i8* [ %19, %58 ], [ %19, %61 ], [ %19, %65 ], [ %68, %107 ], [ %68, %110 ], [ %68, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  %118 = load %class.SkImage*, %class.SkImage** %12, align 8
  %119 = icmp eq %class.SkImage* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %class.SkImage, %class.SkImage* %118, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 1 monotonic
  br label %123

123:                                              ; preds = %116, %120
  %124 = ptrtoint %class.SkImage* %118 to i64
  %125 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 8
  %127 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127)
  %128 = call noalias i8* @malloc(i64 184) #9
  %129 = bitcast i8* %128 to %"class.blink::UnacceleratedStaticBitmapImage"*
  %130 = bitcast %class.sk_sp* %4 to i64*
  store i64 %124, i64* %130, align 8
  call void @_ZN5blink30UnacceleratedStaticBitmapImageC2E5sk_spI7SkImageENS_16ImageOrientationE(%"class.blink::UnacceleratedStaticBitmapImage"* %129, %class.sk_sp* nonnull %4, i8 %126) #9
  %131 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %132 = load %class.SkImage*, %class.SkImage** %131, align 8
  %133 = icmp eq %class.SkImage* %132, null
  br i1 %133, label %144, label %134

134:                                              ; preds = %123
  %135 = getelementptr inbounds %class.SkImage, %class.SkImage* %132, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 -1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = bitcast %class.SkImage* %132 to %class.SkRefCntBase*
  %140 = bitcast %class.SkImage* %132 to void (%class.SkRefCntBase*)***
  %141 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %140, align 8
  %142 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %141, i64 2
  %143 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, align 8
  call void %143(%class.SkRefCntBase* nonnull %139) #9
  br label %144

144:                                              ; preds = %123, %134, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127)
  %145 = load %class.SkImage*, %class.SkImage** %12, align 8
  %146 = icmp eq %class.SkImage* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %class.SkImage, %class.SkImage* %145, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = bitcast %class.SkImage* %145 to %class.SkRefCntBase*
  %153 = bitcast %class.SkImage* %145 to void (%class.SkRefCntBase*)***
  %154 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, i64 2
  %156 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, align 8
  call void %156(%class.SkRefCntBase* nonnull %152) #9
  br label %157

157:                                              ; preds = %144, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %158 = bitcast i8* %128 to %"class.blink::StaticBitmapImage"*
  ret %"class.blink::StaticBitmapImage"* %158
}

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #2

declare void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* sret, %class.SkImage*, %class.sk_sp.190*, %class.GrDirectContext*) local_unnamed_addr #2

declare void @_ZNK7SkImage26makeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* sret, %class.SkImage*, i32, %class.sk_sp.190*, %class.GrDirectContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink30UnacceleratedStaticBitmapImage22CopyToResourceProviderEPNS_22CanvasResourceProviderE(%"class.blink::UnacceleratedStaticBitmapImage"*, %"class.blink::CanvasResourceProvider"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %"class.std::__1::vector.344", align 8
  %6 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %7, align 8
  %8 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %0, i64 0, i32 1
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp* nonnull sret %3, %"class.cc::PaintImage"* %8) #9
  %9 = load %class.SkImage*, %class.SkImage** %7, align 8
  %10 = icmp eq %class.SkImage* %9, null
  br i1 %10, label %121, label %11

11:                                               ; preds = %2
  %12 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #9
  %13 = call zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage* nonnull %9, %class.SkPixmap* nonnull %4) #9
  br i1 %13, label %14, label %97

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.344"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %22 = getelementptr inbounds %"class.blink::CanvasResourceProvider", %"class.blink::CanvasResourceProvider"* %1, i64 0, i32 11
  %23 = load i8, i8* %22, align 8, !range !19
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %83

25:                                               ; preds = %14
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = mul i64 %18, %28
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.344"* nonnull %5, i64 %29) #9
  %32 = load i8*, i8** %20, align 8
  br label %33

33:                                               ; preds = %25, %31
  %34 = phi i8* [ %32, %31 ], [ null, %25 ]
  %35 = icmp sgt i32 %27, 0
  br i1 %35, label %36, label %83

36:                                               ; preds = %33
  %37 = zext i32 %27 to i64
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %27, 1
  br i1 %39, label %68, label %40

40:                                               ; preds = %36
  %41 = sub nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %64, %42 ]
  %44 = phi i8* [ %34, %40 ], [ %65, %42 ]
  %45 = phi i64 [ %41, %40 ], [ %66, %42 ]
  %46 = mul i64 %18, %43
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = trunc i64 %43 to i32
  %49 = xor i32 %48, -1
  %50 = add i32 %27, %49
  %51 = sext i32 %50 to i64
  %52 = mul i64 %18, %51
  %53 = getelementptr inbounds i8, i8* %16, i64 %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %53, i64 %18, i1 false)
  %54 = or i64 %43, 1
  %55 = load i8*, i8** %20, align 8
  %56 = mul i64 %18, %54
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = trunc i64 %54 to i32
  %59 = xor i32 %58, -1
  %60 = add i32 %27, %59
  %61 = sext i32 %60 to i64
  %62 = mul i64 %18, %61
  %63 = getelementptr inbounds i8, i8* %16, i64 %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %63, i64 %18, i1 false)
  %64 = add nuw nsw i64 %43, 2
  %65 = load i8*, i8** %20, align 8
  %66 = add i64 %45, -2
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %42

68:                                               ; preds = %42, %36
  %69 = phi i8* [ undef, %36 ], [ %65, %42 ]
  %70 = phi i64 [ 0, %36 ], [ %64, %42 ]
  %71 = phi i8* [ %34, %36 ], [ %65, %42 ]
  %72 = icmp eq i64 %38, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %68
  %74 = mul i64 %18, %70
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = trunc i64 %70 to i32
  %77 = xor i32 %76, -1
  %78 = add i32 %27, %77
  %79 = sext i32 %78 to i64
  %80 = mul i64 %18, %79
  %81 = getelementptr inbounds i8, i8* %16, i64 %80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %81, i64 %18, i1 false)
  %82 = load i8*, i8** %20, align 8
  br label %83

83:                                               ; preds = %73, %68, %33, %14
  %84 = phi i8* [ %16, %14 ], [ %34, %33 ], [ %69, %68 ], [ %82, %73 ]
  %85 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %86 = bitcast %"class.blink::CanvasResourceProvider"* %1 to i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)***
  %87 = load i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)**, i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*** %86, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*, i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)** %87, i64 9
  %89 = load i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*, i1 (%"class.blink::CanvasResourceProvider"*, %struct.SkImageInfo*, i8*, i64, i32, i32)** %88, align 8
  %90 = call zeroext i1 %89(%"class.blink::CanvasResourceProvider"* %1, %struct.SkImageInfo* dereferenceable(24) %85, i8* %84, i64 %18, i32 0, i32 0) #9
  %91 = load i8*, i8** %20, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %83
  %94 = ptrtoint i8* %91 to i64
  %95 = bitcast i8** %21 to i64*
  store i64 %94, i64* %95, align 8
  call void @_ZdlPv(i8* nonnull %91) #10
  br label %96

96:                                               ; preds = %83, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #9
  br label %97

97:                                               ; preds = %11, %96
  %98 = phi i1 [ %90, %96 ], [ false, %11 ]
  %99 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %100 = load %class.SkColorSpace*, %class.SkColorSpace** %99, align 8
  %101 = icmp eq %class.SkColorSpace* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = bitcast %class.SkColorSpace* %100 to i8*
  call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %106, %102, %97
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  %109 = load %class.SkImage*, %class.SkImage** %7, align 8
  %110 = icmp eq %class.SkImage* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %class.SkImage, %class.SkImage* %109, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %class.SkImage* %109 to %class.SkRefCntBase*
  %117 = bitcast %class.SkImage* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8
  call void %120(%class.SkRefCntBase* nonnull %116) #9
  br label %121

121:                                              ; preds = %2, %108, %111, %115
  %122 = phi i1 [ %98, %108 ], [ %98, %111 ], [ %98, %115 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage*, %class.SkPixmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10IsSVGImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image13IsBitmapImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage19IsStaticBitmapImageEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image18IsPlaceholderImageEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17StaticBitmapImage22CurrentFrameIsCompleteEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink5Image10FrameCountEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image15IsTextureBackedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image16HasIntrinsicSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20DensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #9
  ret i64 %6
}

declare i64 @_ZNK5blink17StaticBitmapImage20PreferredDisplaySizeEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden <2 x float> @_ZNK5blink5Image11SizeAsFloatENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = tail call i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"* %0, i32 %1) #9
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = sitofp i32 %4 to float
  %8 = sitofp i32 %6 to float
  %9 = insertelement <2 x float> undef, float %7, i32 0
  %10 = insertelement <2 x float> %9, float %8, i32 1
  ret <2 x float> %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE(%"class.blink::Image"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image11DataChangedEb(%"class.blink::Image"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink5Image17FilenameExtensionEv(%"class.blink::Image"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage18DestroyDecodedDataEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::SharedBuffer"* @_ZN5blink5Image4DataEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.WTF::SharedBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14StartAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14ResetAnimationEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image13MaybeAnimatedEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE(%"class.blink::Image"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image15AnimationPolicyEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image26AdvanceAnimationForTestingEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink5Image20ImageForDefaultFrameEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage21HasDefaultOrientationEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink17StaticBitmapImage23CurrentFrameOrientationEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 1, i32 0
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare zeroext i1 @_ZN5blink5Image11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Image"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebGraphicsContext3DProvider"* @_ZNK5blink5Image15ContextProviderEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WebGraphicsContext3DProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink5Image22ContextProviderWrapperEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %3) #9
  ret void
}

declare void @_ZN5blink5Image11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE(%"class.blink::Image"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), i32, %"class.blink::FloatRect"*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image15IsSizeAvailableEv(%"class.blink::Image"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage7IsValidEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17StaticBitmapImage15IsOriginTopLeftEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StaticBitmapImage"* @_ZN5blink17StaticBitmapImage17MakeUnacceleratedEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = icmp eq %"class.blink::StaticBitmapImage"* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #9
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %11

11:                                               ; preds = %1, %4, %8
  ret %"class.blink::StaticBitmapImage"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17StaticBitmapImage13CopyToTextureEPN3gpu5gles214GLES2InterfaceEjjibbRKNS_8IntPointERKNS_7IntRectE(%"class.blink::StaticBitmapImage"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i1 zeroext, i1 zeroext, %"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage23EnsureSyncTokenVerifiedEv(%"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17StaticBitmapImage16GetMailboxHolderEv(%"struct.gpu::MailboxHolder"* noalias sret, %"class.blink::StaticBitmapImage"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3gpu13MailboxHolderC1Ev(%"struct.gpu::MailboxHolder"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17StaticBitmapImage15UpdateSyncTokenERKN3gpu9SyncTokenE(%"class.blink::StaticBitmapImage"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %class.SkImage**
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.SkImage**
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast %class.SkImage* %6 to %class.SkRefCntBase*
  %14 = bitcast %class.SkImage* %6 to void (%class.SkRefCntBase*)***
  %15 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, i64 2
  %17 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, align 8
  tail call void %17(%class.SkRefCntBase* nonnull %13) #9
  br label %18

18:                                               ; preds = %3, %8, %12
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* sret, %"class.cc::PaintImage"*) local_unnamed_addr #2

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

declare i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN3gpu13MailboxHolderC1Ev(%"struct.gpu::MailboxHolder"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.344"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.344"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.344"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_"}
!5 = distinct !{!5, !6, !"_ZN3WTF19CrossThreadBindOnceIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEDaOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF19CrossThreadBindOnceIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEDaOT_DpOT0_"}
!7 = !{!8, !10, !5}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink30UnacceleratedStaticBitmapImageD1EvE3$_0J5sk_spI7SkImageEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = !{!5}
!13 = !{!14, !5}
!14 = distinct !{!14, !15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!19 = !{i8 0, i8 2}
