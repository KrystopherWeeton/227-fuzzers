; ModuleID = '../../base/profiler/stack_copier_signal.cc'
source_filename = "../../base/profiler/stack_copier_signal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { %"struct.base::(anonymous namespace)::HandlerParams"* }
%"struct.base::(anonymous namespace)::HandlerParams" = type { i64, %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"*, i8*, %struct.mcontext_t*, %"class.base::StackBuffer"*, i8**, %"class.absl::optional"*, %"class.base::StackCopier::Delegate"* }
%"class.base::(anonymous namespace)::AsyncSafeWaitableEvent" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"class.base::StackBuffer" = type { %"class.std::__1::unique_ptr.1", i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StackCopier::Delegate" = type { i32 (...)** }
%"class.base::StackCopierSignal" = type { %"class.base::StackCopier", %"class.std::__1::unique_ptr" }
%"class.base::StackCopier" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ThreadDelegate"* }
%"class.base::ThreadDelegate" = type { i32 (...)** }
%struct.sigaction = type { %union.anon.8, %struct.__sigset_t, i32, void ()* }
%union.anon.8 = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64**, i64**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64** }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.9 }
%union.anon.9 = type { %struct.anon.12, [80 x i8] }
%struct.anon.12 = type { i32, i32, i32, i64, i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }

@_ZTVN4base17StackCopierSignalE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackCopierSignal"*)* @_ZN4base17StackCopierSignalD2Ev to i8*), i8* bitcast (void (%"class.base::StackCopierSignal"*)* @_ZN4base17StackCopierSignalD0Ev to i8*), i8* bitcast (i1 (%"class.base::StackCopierSignal"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)* @_ZN4base17StackCopierSignal9CopyStackEPNS_11StackBufferEPmPNS_9TimeTicksEP10mcontext_tPNS_11StackCopier8DelegateE to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [29 x i8] c"StackCopierSignal copy stack\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Fallback on TimeTicks::Now()\00", align 1
@_ZN4base12_GLOBAL__N_116g_handler_paramsE = internal unnamed_addr global %"struct.std::__1::atomic.21" zeroinitializer, align 8

@_ZN4base17StackCopierSignalC1ENSt3__110unique_ptrINS_14ThreadDelegateENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.base::StackCopierSignal"*, %"class.base::ThreadDelegate"*), void (%"class.base::StackCopierSignal"*, %"class.base::ThreadDelegate"*)* @_ZN4base17StackCopierSignalC2ENSt3__110unique_ptrINS_14ThreadDelegateENS1_14default_deleteIS3_EEEE
@_ZN4base17StackCopierSignalD1Ev = hidden unnamed_addr alias void (%"class.base::StackCopierSignal"*), void (%"class.base::StackCopierSignal"*)* @_ZN4base17StackCopierSignalD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17StackCopierSignalC2ENSt3__110unique_ptrINS_14ThreadDelegateENS1_14default_deleteIS3_EEEE(%"class.base::StackCopierSignal"* nocapture, %"class.base::ThreadDelegate"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::ThreadDelegate"* %1 to i64
  %4 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base17StackCopierSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17StackCopierSignalD2Ev(%"class.base::StackCopierSignal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base17StackCopierSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::ThreadDelegate"*, %"class.base::ThreadDelegate"** %3, align 8
  store %"class.base::ThreadDelegate"* null, %"class.base::ThreadDelegate"** %3, align 8
  %5 = icmp eq %"class.base::ThreadDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::ThreadDelegate"* %4 to void (%"class.base::ThreadDelegate"*)***
  %8 = load void (%"class.base::ThreadDelegate"*)**, void (%"class.base::ThreadDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::ThreadDelegate"*)*, void (%"class.base::ThreadDelegate"*)** %8, i64 1
  %10 = load void (%"class.base::ThreadDelegate"*)*, void (%"class.base::ThreadDelegate"*)** %9, align 8
  tail call void %10(%"class.base::ThreadDelegate"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 0
  tail call void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"* %12) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17StackCopierSignalD0Ev(%"class.base::StackCopierSignal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base17StackCopierSignalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::ThreadDelegate"*, %"class.base::ThreadDelegate"** %3, align 8
  store %"class.base::ThreadDelegate"* null, %"class.base::ThreadDelegate"** %3, align 8
  %5 = icmp eq %"class.base::ThreadDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::ThreadDelegate"* %4 to void (%"class.base::ThreadDelegate"*)***
  %8 = load void (%"class.base::ThreadDelegate"*)**, void (%"class.base::ThreadDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::ThreadDelegate"*)*, void (%"class.base::ThreadDelegate"*)** %8, i64 1
  %10 = load void (%"class.base::ThreadDelegate"*)*, void (%"class.base::ThreadDelegate"*)** %9, align 8
  tail call void %10(%"class.base::ThreadDelegate"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 0
  tail call void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"* %12) #5
  %13 = bitcast %"class.base::StackCopierSignal"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base17StackCopierSignal9CopyStackEPNS_11StackBufferEPmPNS_9TimeTicksEP10mcontext_tPNS_11StackCopier8DelegateE(%"class.base::StackCopierSignal"* nocapture readonly, %"class.base::StackBuffer"*, i64* nocapture, %"class.base::TimeTicks"* nocapture, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent", align 4
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  %13 = alloca %"class.absl::optional", align 8
  %14 = alloca %"struct.base::(anonymous namespace)::HandlerParams", align 8
  %15 = alloca %struct.sigaction, align 8
  %16 = alloca %struct.sigaction, align 8
  %17 = alloca %"class.std::__1::vector", align 8
  %18 = bitcast %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent", %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %19, align 4
  store atomic i32 0, i32* %19 release, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #5
  store i8 0, i8* %11, align 1
  %20 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  store i8* null, i8** %12, align 8
  %21 = getelementptr inbounds %"class.base::StackCopierSignal", %"class.base::StackCopierSignal"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.base::ThreadDelegate"*, %"class.base::ThreadDelegate"** %21, align 8
  %23 = bitcast %"class.base::ThreadDelegate"* %22 to i64 (%"class.base::ThreadDelegate"*)***
  %24 = load i64 (%"class.base::ThreadDelegate"*)**, i64 (%"class.base::ThreadDelegate"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.base::ThreadDelegate"*)*, i64 (%"class.base::ThreadDelegate"*)** %24, i64 3
  %26 = load i64 (%"class.base::ThreadDelegate"*)*, i64 (%"class.base::ThreadDelegate"*)** %25, align 8
  %27 = tail call i64 %26(%"class.base::ThreadDelegate"* %22) #5
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  store i8 0, i8* %28, align 8
  %29 = bitcast %"struct.base::(anonymous namespace)::HandlerParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #5
  %30 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 0
  store i64 %27, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 1
  store %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"* %10, %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"** %31, align 8
  %32 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 2
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 3
  store %struct.mcontext_t* %4, %struct.mcontext_t** %33, align 8
  %34 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 4
  store %"class.base::StackBuffer"* %1, %"class.base::StackBuffer"** %34, align 8
  %35 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 5
  store i8** %12, i8*** %35, align 8
  %36 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 6
  store %"class.absl::optional"* %13, %"class.absl::optional"** %36, align 8
  %37 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %14, i64 0, i32 7
  store %"class.base::StackCopier::Delegate"* %5, %"class.base::StackCopier::Delegate"** %37, align 8
  %38 = ptrtoint %"struct.base::(anonymous namespace)::HandlerParams"* %14 to i64
  store atomic i64 %38, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) release, align 8
  %39 = bitcast %struct.sigaction* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %39) #5
  %40 = bitcast %struct.sigaction* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %40) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 152, i1 false)
  %41 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %15, i64 0, i32 1
  %42 = bitcast %struct.__sigset_t* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 144, i1 false)
  %43 = bitcast %struct.sigaction* %15 to void (i32, %struct.siginfo_t*, i8*)**
  store void (i32, %struct.siginfo_t*, i8*)* @_ZN4base12_GLOBAL__N_122CopyStackSignalHandlerEiP9siginfo_tPv, void (i32, %struct.siginfo_t*, i8*)** %43, align 8
  %44 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %15, i64 0, i32 2
  store i32 268435460, i32* %44, align 8
  %45 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %15, i64 0, i32 1
  %46 = call i32 @sigemptyset(%struct.__sigset_t* %45) #5
  %47 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), align 16
  %48 = and i8 %47, 25
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %56, label %50, !prof !2

50:                                               ; preds = %6
  %51 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #5
  %52 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #5
  %53 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %54 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #5
  store i64 %54, i64* %53, align 8
  %55 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %51, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #5
  br label %56

56:                                               ; preds = %6, %50
  %57 = call i32 @sigaction(i32 23, %struct.sigaction* nonnull %15, %struct.sigaction* nonnull %16) #5
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %39) #5
  store atomic i64 0, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) release, align 8
  br label %164

60:                                               ; preds = %56
  %61 = call i32 @getpid() #5
  %62 = load %"class.base::ThreadDelegate"*, %"class.base::ThreadDelegate"** %21, align 8
  %63 = bitcast %"class.base::ThreadDelegate"* %62 to i32 (%"class.base::ThreadDelegate"*)***
  %64 = load i32 (%"class.base::ThreadDelegate"*)**, i32 (%"class.base::ThreadDelegate"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.base::ThreadDelegate"*)*, i32 (%"class.base::ThreadDelegate"*)** %64, i64 2
  %66 = load i32 (%"class.base::ThreadDelegate"*)*, i32 (%"class.base::ThreadDelegate"*)** %65, align 8
  %67 = call i32 %66(%"class.base::ThreadDelegate"* %62) #5
  %68 = call i64 (i64, ...) @syscall(i64 234, i32 %61, i32 %67, i32 23) #5
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %160

70:                                               ; preds = %60, %74
  %71 = call i64 (i64, ...) @syscall(i64 202, i32* nonnull %19, i32 128, i32 0, i8* null, i8* null, i32 0) #5
  %72 = load atomic i32, i32* %19 acquire, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = trunc i64 %71 to i32
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %74
  %78 = phi i1 [ false, %74 ], [ true, %70 ]
  %79 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), align 16
  %80 = and i8 %79, 25
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %88, label %82, !prof !2

82:                                               ; preds = %77
  %83 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #5
  %84 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #5
  %85 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %86 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #5
  store i64 %86, i64* %85, align 8
  %87 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %83, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #5
  br label %88

88:                                               ; preds = %77, %82
  br i1 %78, label %89, label %162

89:                                               ; preds = %88
  %90 = load i8, i8* %28, align 8, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  br label %117

96:                                               ; preds = %89
  %97 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), align 16
  %98 = and i8 %97, 25
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100, !prof !2

100:                                              ; preds = %96
  %101 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #5
  %102 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #5
  %103 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %104 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #5
  store i64 %104, i64* %103, align 8
  %105 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %101, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #5
  br label %106

106:                                              ; preds = %96, %100
  %107 = phi i64 [ -6148914691236517206, %96 ], [ %105, %100 ]
  %108 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %96 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), %100 ]
  %109 = phi i8* [ null, %96 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 166, i32 0), %100 ]
  %110 = call i64 @_ZN4base9TimeTicks3NowEv() #5
  %111 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = icmp eq i8* %109, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %106
  %114 = load i8, i8* %109, align 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %113
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %109, i8* %108, i64 %107) #5
  br label %117

117:                                              ; preds = %116, %113, %106, %92
  %118 = call i32 @sigaction(i32 23, %struct.sigaction* nonnull %16, %struct.sigaction* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %39) #5
  store atomic i64 0, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) release, align 8
  %119 = load %struct.mcontext_t*, %struct.mcontext_t** %33, align 8
  %120 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %119, i64 0, i32 0, i64 15
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #5
  %123 = load %"class.base::ThreadDelegate"*, %"class.base::ThreadDelegate"** %21, align 8
  %124 = bitcast %"class.base::ThreadDelegate"* %123 to void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)***
  %125 = load void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)**, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)** %125, i64 4
  %127 = load void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)** %126, align 8
  call void %127(%"class.std::__1::vector"* nonnull sret %17, %"class.base::ThreadDelegate"* %123, %struct.mcontext_t* %4) #5
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %129 = load i64**, i64*** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %131 = load i64**, i64*** %130, align 8
  %132 = icmp eq i64** %129, %131
  br i1 %132, label %138, label %133

133:                                              ; preds = %117
  %134 = inttoptr i64 %121 to i8*
  %135 = inttoptr i64 %27 to i64*
  br label %152

136:                                              ; preds = %152
  %137 = load i64**, i64*** %128, align 8
  br label %138

138:                                              ; preds = %136, %117
  %139 = phi i64** [ %137, %136 ], [ %129, %117 ]
  %140 = icmp eq i64** %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = ptrtoint i64** %139 to i64
  %143 = bitcast i64*** %130 to i64*
  store i64 %142, i64* %143, align 8
  %144 = bitcast i64** %139 to i8*
  call void @_ZdlPv(i8* %144) #6
  br label %145

145:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #5
  %146 = bitcast i8** %12 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %27, %121
  %149 = add i64 %148, %147
  store i64 %149, i64* %2, align 8
  %150 = load i8, i8* %11, align 1, !range !3
  %151 = icmp ne i8 %150, 0
  br label %164

152:                                              ; preds = %133, %152
  %153 = phi i64** [ %129, %133 ], [ %158, %152 ]
  %154 = load i64*, i64** %153, align 8
  %155 = load i8*, i8** %12, align 8
  %156 = load i64, i64* %154, align 8
  %157 = call i64 @_ZN4base11StackCopier31RewritePointerIfInOriginalStackEPKhPKmS2_m(i8* %134, i64* %135, i8* %155, i64 %156) #5
  store i64 %157, i64* %154, align 8
  %158 = getelementptr inbounds i64*, i64** %153, i64 1
  %159 = icmp eq i64** %158, %131
  br i1 %159, label %136, label %152

160:                                              ; preds = %60
  %161 = call i32 @sigaction(i32 23, %struct.sigaction* nonnull %16, %struct.sigaction* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %39) #5
  store atomic i64 0, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) release, align 8
  br label %164

162:                                              ; preds = %88
  %163 = call i32 @sigaction(i32 23, %struct.sigaction* nonnull %16, %struct.sigaction* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %39) #5
  store atomic i64 0, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) release, align 8
  br label %164

164:                                              ; preds = %162, %160, %59, %145
  %165 = phi i1 [ %151, %145 ], [ false, %59 ], [ false, %160 ], [ false, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  ret i1 %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_122CopyStackSignalHandlerEiP9siginfo_tPv(i32, %struct.siginfo_t* nocapture readnone, i8* nocapture readonly) #0 {
  %4 = load atomic i64, i64* bitcast (%"struct.std::__1::atomic.21"* @_ZN4base12_GLOBAL__N_116g_handler_paramsE to i64*) acquire, align 8
  %5 = inttoptr i64 %4 to %"struct.base::(anonymous namespace)::HandlerParams"*
  %6 = tail call { i8, i64 } @_ZN4base6subtle33MaybeTimeTicksNowIgnoringOverrideEv() #5
  %7 = extractvalue { i8, i64 } %6, 0
  %8 = extractvalue { i8, i64 } %6, 1
  %9 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 6
  %10 = load %"class.absl::optional"*, %"class.absl::optional"** %9, align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %7, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 1
  %14 = load %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"*, %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"** %13, align 8
  %15 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 3
  %18 = bitcast %struct.mcontext_t** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 256, i1 false)
  %21 = load %struct.mcontext_t*, %struct.mcontext_t** %17, align 8
  %22 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %21, i64 0, i32 0, i64 15
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 4
  %28 = load %"class.base::StackBuffer"*, %"class.base::StackBuffer"** %27, align 8
  %29 = getelementptr inbounds %"class.base::StackBuffer", %"class.base::StackBuffer"* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %26, %30
  br i1 %31, label %51, label %32

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 7
  %34 = load %"class.base::StackCopier::Delegate"*, %"class.base::StackCopier::Delegate"** %33, align 8
  %35 = bitcast %"class.base::StackCopier::Delegate"* %34 to void (%"class.base::StackCopier::Delegate"*)***
  %36 = load void (%"class.base::StackCopier::Delegate"*)**, void (%"class.base::StackCopier::Delegate"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::StackCopier::Delegate"*)*, void (%"class.base::StackCopier::Delegate"*)** %36, i64 2
  %38 = load void (%"class.base::StackCopier::Delegate"*)*, void (%"class.base::StackCopier::Delegate"*)** %37, align 8
  tail call void %38(%"class.base::StackCopier::Delegate"* %34) #5
  %39 = inttoptr i64 %23 to i8*
  %40 = inttoptr i64 %25 to i64*
  %41 = bitcast %"class.base::StackBuffer"** %27 to i64**
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 15
  %45 = and i64 %44, -16
  %46 = inttoptr i64 %45 to i64*
  %47 = tail call i8* @_ZN4base11StackCopier35CopyStackContentsAndRewritePointersEPKhPKmiPm(i8* %39, i64* %40, i32 16, i64* %46) #5
  %48 = getelementptr inbounds %"struct.base::(anonymous namespace)::HandlerParams", %"struct.base::(anonymous namespace)::HandlerParams"* %5, i64 0, i32 5
  %49 = load i8**, i8*** %48, align 8
  store i8* %47, i8** %49, align 8
  %50 = load i8*, i8** %15, align 8
  store i8 1, i8* %50, align 1
  br label %51

51:                                               ; preds = %3, %32
  %52 = getelementptr inbounds %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent", %"class.base::(anonymous namespace)::AsyncSafeWaitableEvent"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 1, i32* %52 release, align 4
  %53 = tail call i64 (i64, ...) @syscall(i64 202, i32* %52, i32 129, i32 1, i8* null, i8* null, i32 0) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @getpid() local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

declare i64 @_ZN4base11StackCopier31RewritePointerIfInOriginalStackEPKhPKmS2_m(i8*, i64*, i8*, i64) local_unnamed_addr #4

declare { i8, i64 } @_ZN4base6subtle33MaybeTimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i8* @_ZN4base11StackCopier35CopyStackContentsAndRewritePointersEPKhPKmiPm(i8*, i64*, i32, i64*) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
