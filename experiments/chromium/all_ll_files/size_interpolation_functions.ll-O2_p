; ModuleID = '../../third_party/blink/renderer/core/animation/size_interpolation_functions.cc'
source_filename = "../../third_party/blink/renderer/core/animation/size_interpolation_functions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::FillSize" = type { i32, %"class.blink::LengthSize" }
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector", %"class.std::__1::bitset" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [80 x i8] }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.4", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.128" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.184" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"class.blink::CSSSizeNonInterpolableValue" = type { %"class.blink::NonInterpolableValue.base", i32, %class.scoped_refptr }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>

$_ZN5blink27CSSSizeNonInterpolableValueD2Ev = comdat any

$_ZN5blink27CSSSizeNonInterpolableValueD0Ev = comdat any

$_ZNK5blink27CSSSizeNonInterpolableValue7GetTypeEv = comdat any

$_ZTVN5blink27CSSSizeNonInterpolableValueE = comdat any

@_ZN5blink27CSSSizeNonInterpolableValue12static_type_E = hidden global i8* bitcast (i8** @_ZN5blink27CSSSizeNonInterpolableValue12static_type_E to i8*), align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZTVN5blink27CSSSizeNonInterpolableValueE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSSizeNonInterpolableValue"*)* @_ZN5blink27CSSSizeNonInterpolableValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSSizeNonInterpolableValue"*)* @_ZN5blink27CSSSizeNonInterpolableValueD0Ev to i8*), i8* bitcast (i8* (%"class.blink::CSSSizeNonInterpolableValue"*)* @_ZNK5blink27CSSSizeNonInterpolableValue7GetTypeEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions19ConvertFillSizeSideERKNS_8FillSizeEfb(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"struct.blink::FillSize"* dereferenceable(20), float, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %84 [
    i32 2, label %7
    i32 0, label %50
    i32 1, label %67
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %1, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %1, i64 0, i32 1, i32 1
  %10 = select i1 %3, %"class.blink::Length"* %8, %"class.blink::Length"* %9
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %7
  %15 = tail call noalias i8* @malloc(i64 24) #7, !noalias !2
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = ptrtoint i8* %15 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #7, !noalias !2
  %19 = tail call noalias i8* @malloc(i64 24) #7, !noalias !2
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4, !noalias !2
  %22 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8, !noalias !2
  %23 = getelementptr inbounds i8, i8* %19, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 405, i32* %24, align 4, !noalias !2
  %25 = getelementptr inbounds i8, i8* %19, i64 16
  %26 = bitcast i8* %25 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %26, align 8, !noalias !2
  %27 = ptrtoint i8* %19 to i64
  %28 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %18, i64* %28, align 8, !alias.scope !2
  %29 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %30 = bitcast %class.scoped_refptr* %29 to i64*
  store i64 %27, i64* %30, align 8, !alias.scope !2
  br label %86

31:                                               ; preds = %7
  %32 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %10, float %2) #7
  %33 = icmp eq %"class.blink::InterpolableLength"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %31
  %35 = ptrtoint %"class.blink::InterpolableLength"* %32 to i64
  %36 = tail call noalias i8* @malloc(i64 24) #7, !noalias !5
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 1, i32* %38, align 4, !noalias !5
  %39 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !noalias !5
  %40 = getelementptr inbounds i8, i8* %36, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4, !noalias !5
  %42 = getelementptr inbounds i8, i8* %36, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 8, !noalias !5
  %44 = ptrtoint i8* %36 to i64
  %45 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %35, i64* %45, align 8, !alias.scope !5
  %46 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %47 = bitcast %class.scoped_refptr* %46 to i64*
  store i64 %44, i64* %47, align 8, !alias.scope !5
  br label %86

48:                                               ; preds = %31
  %49 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #7, !alias.scope !5
  br label %86

50:                                               ; preds = %4
  %51 = tail call noalias i8* @malloc(i64 24) #7, !noalias !8
  %52 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8, !noalias !8
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  %54 = ptrtoint i8* %51 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #7, !noalias !8
  %55 = tail call noalias i8* @malloc(i64 24) #7, !noalias !8
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 1, i32* %57, align 4, !noalias !8
  %58 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8, !noalias !8
  %59 = getelementptr inbounds i8, i8* %55, i64 12
  %60 = bitcast i8* %59 to i32*
  store i32 585, i32* %60, align 4, !noalias !8
  %61 = getelementptr inbounds i8, i8* %55, i64 16
  %62 = bitcast i8* %61 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %62, align 8, !noalias !8
  %63 = ptrtoint i8* %55 to i64
  %64 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %54, i64* %64, align 8, !alias.scope !8
  %65 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %66 = bitcast %class.scoped_refptr* %65 to i64*
  store i64 %63, i64* %66, align 8, !alias.scope !8
  br label %86

67:                                               ; preds = %4
  %68 = tail call noalias i8* @malloc(i64 24) #7, !noalias !11
  %69 = bitcast i8* %68 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8, !noalias !11
  %70 = getelementptr inbounds i8, i8* %68, i64 8
  %71 = ptrtoint i8* %68 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #7, !noalias !11
  %72 = tail call noalias i8* @malloc(i64 24) #7, !noalias !11
  %73 = getelementptr inbounds i8, i8* %72, i64 8
  %74 = bitcast i8* %73 to i32*
  store i32 1, i32* %74, align 4, !noalias !11
  %75 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8, !noalias !11
  %76 = getelementptr inbounds i8, i8* %72, i64 12
  %77 = bitcast i8* %76 to i32*
  store i32 586, i32* %77, align 4, !noalias !11
  %78 = getelementptr inbounds i8, i8* %72, i64 16
  %79 = bitcast i8* %78 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %79, align 8, !noalias !11
  %80 = ptrtoint i8* %72 to i64
  %81 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %71, i64* %81, align 8, !alias.scope !11
  %82 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %83 = bitcast %class.scoped_refptr* %82 to i64*
  store i64 %80, i64* %83, align 8, !alias.scope !11
  br label %86

84:                                               ; preds = %4
  %85 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #7
  br label %86

86:                                               ; preds = %48, %34, %14, %84, %67, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions23MaybeConvertCSSSizeSideERKNS_8CSSValueEb(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 9
  %7 = icmp eq %"class.blink::CSSValue"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %61, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %12 = select i1 %2, i8* %10, i8* %11
  %13 = bitcast i8* %12 to %"class.blink::CSSValue"**
  %14 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 2
  %18 = icmp eq %"class.blink::CSSValue"* %14, null
  %19 = or i1 %18, %17
  br i1 %19, label %42, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %14, i64 1, i32 1
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 405
  br i1 %24, label %25, label %42

25:                                               ; preds = %20
  %26 = tail call noalias i8* @malloc(i64 24) #7, !noalias !14
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !noalias !14
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = ptrtoint i8* %26 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #7, !noalias !14
  %30 = tail call noalias i8* @malloc(i64 24) #7, !noalias !14
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 4, !noalias !14
  %33 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8, !noalias !14
  %34 = getelementptr inbounds i8, i8* %30, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 405, i32* %35, align 4, !noalias !14
  %36 = getelementptr inbounds i8, i8* %30, i64 16
  %37 = bitcast i8* %36 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %37, align 8, !noalias !14
  %38 = ptrtoint i8* %30 to i64
  %39 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %29, i64* %39, align 8, !alias.scope !14
  %40 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %41 = bitcast %class.scoped_refptr* %40 to i64*
  store i64 %38, i64* %41, align 8, !alias.scope !14
  br label %125

42:                                               ; preds = %9, %20
  %43 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %14) #7
  %44 = icmp eq %"class.blink::InterpolableLength"* %43, null
  br i1 %44, label %59, label %45

45:                                               ; preds = %42
  %46 = ptrtoint %"class.blink::InterpolableLength"* %43 to i64
  %47 = tail call noalias i8* @malloc(i64 24) #7, !noalias !17
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 4, !noalias !17
  %50 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8, !noalias !17
  %51 = getelementptr inbounds i8, i8* %47, i64 12
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4, !noalias !17
  %53 = getelementptr inbounds i8, i8* %47, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8, !noalias !17
  %55 = ptrtoint i8* %47 to i64
  %56 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %46, i64* %56, align 8, !alias.scope !17
  %57 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %58 = bitcast %class.scoped_refptr* %57 to i64*
  store i64 %55, i64* %58, align 8, !alias.scope !17
  br label %125

59:                                               ; preds = %42
  %60 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #7, !alias.scope !17
  br label %125

61:                                               ; preds = %3
  %62 = icmp ne i8 %5, 2
  %63 = or i1 %7, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = icmp ult i8 %5, 2
  br i1 %65, label %88, label %66

66:                                               ; preds = %64
  %67 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #7
  br label %125

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = tail call noalias i8* @malloc(i64 24) #7, !noalias !20
  %73 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8, !noalias !20
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  %75 = ptrtoint i8* %72 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #7, !noalias !20
  %76 = tail call noalias i8* @malloc(i64 24) #7, !noalias !20
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = bitcast i8* %77 to i32*
  store i32 1, i32* %78, align 4, !noalias !20
  %79 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8, !noalias !20
  %80 = getelementptr inbounds i8, i8* %76, i64 12
  %81 = bitcast i8* %80 to i32*
  store i32 %71, i32* %81, align 4, !noalias !20
  %82 = getelementptr inbounds i8, i8* %76, i64 16
  %83 = bitcast i8* %82 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %83, align 8, !noalias !20
  %84 = ptrtoint i8* %76 to i64
  %85 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %75, i64* %85, align 8, !alias.scope !20
  %86 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %87 = bitcast %class.scoped_refptr* %86 to i64*
  store i64 %84, i64* %87, align 8, !alias.scope !20
  br label %125

88:                                               ; preds = %64
  br i1 %2, label %89, label %108

89:                                               ; preds = %88
  %90 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %1) #7
  %91 = icmp eq %"class.blink::InterpolableLength"* %90, null
  br i1 %91, label %106, label %92

92:                                               ; preds = %89
  %93 = ptrtoint %"class.blink::InterpolableLength"* %90 to i64
  %94 = tail call noalias i8* @malloc(i64 24) #7, !noalias !23
  %95 = getelementptr inbounds i8, i8* %94, i64 8
  %96 = bitcast i8* %95 to i32*
  store i32 1, i32* %96, align 4, !noalias !23
  %97 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8, !noalias !23
  %98 = getelementptr inbounds i8, i8* %94, i64 12
  %99 = bitcast i8* %98 to i32*
  store i32 0, i32* %99, align 4, !noalias !23
  %100 = getelementptr inbounds i8, i8* %94, i64 16
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8, !noalias !23
  %102 = ptrtoint i8* %94 to i64
  %103 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %93, i64* %103, align 8, !alias.scope !23
  %104 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %105 = bitcast %class.scoped_refptr* %104 to i64*
  store i64 %102, i64* %105, align 8, !alias.scope !23
  br label %125

106:                                              ; preds = %89
  %107 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #7, !alias.scope !23
  br label %125

108:                                              ; preds = %88
  %109 = tail call noalias i8* @malloc(i64 24) #7, !noalias !26
  %110 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8, !noalias !26
  %111 = getelementptr inbounds i8, i8* %109, i64 8
  %112 = ptrtoint i8* %109 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #7, !noalias !26
  %113 = tail call noalias i8* @malloc(i64 24) #7, !noalias !26
  %114 = getelementptr inbounds i8, i8* %113, i64 8
  %115 = bitcast i8* %114 to i32*
  store i32 1, i32* %115, align 4, !noalias !26
  %116 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8, !noalias !26
  %117 = getelementptr inbounds i8, i8* %113, i64 12
  %118 = bitcast i8* %117 to i32*
  store i32 405, i32* %118, align 4, !noalias !26
  %119 = getelementptr inbounds i8, i8* %113, i64 16
  %120 = bitcast i8* %119 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %120, align 8, !noalias !26
  %121 = ptrtoint i8* %113 to i64
  %122 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %112, i64* %122, align 8, !alias.scope !26
  %123 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %124 = bitcast %class.scoped_refptr* %123 to i64*
  store i64 %121, i64* %124, align 8, !alias.scope !26
  br label %125

125:                                              ; preds = %106, %59, %92, %45, %66, %68, %108, %25
  ret void
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %6, i64 0, i32 2
  %10 = bitcast [4 x i8]* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 2
  %14 = bitcast [4 x i8]* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  %17 = xor i1 %12, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %3
  %19 = icmp eq i32 %11, %15
  %20 = xor i1 %12, true
  %21 = or i1 %19, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %3, %18
  %23 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #7
  br label %38

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %25, align 8
  %28 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %28, align 8
  %31 = bitcast %class.scoped_refptr* %4 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %5, align 8
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %27, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  store i64 %30, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %37 = bitcast %class.scoped_refptr* %36 to i64*
  store i64 %32, i64* %37, align 8
  br label %38

38:                                               ; preds = %24, %22
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink26SizeInterpolationFunctions34NonInterpolableValuesAreCompatibleEPKNS_20NonInterpolableValueES3_(%"class.blink::NonInterpolableValue"* nocapture readonly, %"class.blink::NonInterpolableValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %0, i64 0, i32 2
  %4 = bitcast [4 x i8]* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 0, i32 2
  %8 = bitcast [4 x i8]* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %6, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %5, %9
  %14 = xor i1 %6, true
  %15 = or i1 %13, %14
  ret i1 %15

16:                                               ; preds = %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions18CreateNeutralValueEPKNS_20NonInterpolableValueE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::NonInterpolableValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 0, i32 2
  %4 = bitcast [4 x i8]* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = tail call noalias i8* @malloc(i64 24) #7, !noalias !29
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8, !noalias !29
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = ptrtoint i8* %8 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #7, !noalias !29
  %12 = tail call noalias i8* @malloc(i64 24) #7, !noalias !29
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4, !noalias !29
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !noalias !29
  %16 = getelementptr inbounds i8, i8* %12, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 %5, i32* %17, align 4, !noalias !29
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %19, align 8, !noalias !29
  %20 = ptrtoint i8* %12 to i64
  %21 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %11, i64* %21, align 8, !alias.scope !29
  %22 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %23 = bitcast %class.scoped_refptr* %22 to i64*
  store i64 %20, i64* %23, align 8, !alias.scope !29
  br label %43

24:                                               ; preds = %2
  %25 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #7
  %26 = icmp eq %"class.blink::InterpolableLength"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %24
  %28 = ptrtoint %"class.blink::InterpolableLength"* %25 to i64
  %29 = tail call noalias i8* @malloc(i64 24) #7, !noalias !32
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 1, i32* %31, align 4, !noalias !32
  %32 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !noalias !32
  %33 = getelementptr inbounds i8, i8* %29, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 4, !noalias !32
  %35 = getelementptr inbounds i8, i8* %29, i64 16
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8, !noalias !32
  %37 = ptrtoint i8* %29 to i64
  %38 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %28, i64* %38, align 8, !alias.scope !32
  %39 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %40 = bitcast %class.scoped_refptr* %39 to i64*
  store i64 %37, i64* %40, align 8, !alias.scope !32
  br label %43

41:                                               ; preds = %24
  %42 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #7, !alias.scope !32
  br label %43

43:                                               ; preds = %41, %27, %7
  ret void
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions9CompositeERNS_15UnderlyingValueEdRKNS_17InterpolableValueEPKNS_20NonInterpolableValueE(%"class.blink::UnderlyingValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %3, i64 0, i32 2
  %6 = bitcast [4 x i8]* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::UnderlyingValue"* %0 to %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)***
  %11 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*** %10, align 8
  %12 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)** %11, align 8
  %13 = tail call dereferenceable(8) %"class.blink::InterpolableValue"* %12(%"class.blink::UnderlyingValue"* %0) #7
  %14 = bitcast %"class.blink::InterpolableValue"* %13 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %15 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %15, i64 14
  %17 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %16, align 8
  tail call void %17(%"class.blink::InterpolableValue"* %13, double %1, %"class.blink::InterpolableValue"* dereferenceable(8) %2) #7
  br label %18

18:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SizeInterpolationFunctions14CreateFillSizeERKNS_17InterpolableValueEPKNS_20NonInterpolableValueES3_S6_RKNS_25CSSToLengthConversionDataE(%"struct.blink::FillSize"* noalias sret, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readonly, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::LengthSize", align 8
  %8 = alloca %"class.blink::LengthSize", align 8
  %9 = alloca %"class.blink::LengthSize", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::Length"*
  %14 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2
  %15 = bitcast [4 x i8]* %14 to i32*
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %63 [
    i32 0, label %17
    i32 586, label %21
    i32 585, label %42
  ]

17:                                               ; preds = %6
  %18 = bitcast %"class.blink::LengthSize"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %11, %"class.blink::InterpolableLength"* %20, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %5, i32 1) #7
  br label %66

21:                                               ; preds = %6
  %22 = bitcast %"class.blink::LengthSize"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %7, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 0
  %25 = bitcast %"class.blink::LengthSize"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false)
  store i32 1, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1
  %27 = bitcast %"class.blink::LengthSize"* %7 to i64*
  %28 = bitcast %"class.blink::LengthSize"* %26 to i64*
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %28, align 4
  %30 = and i64 %29, 280375465082880
  %31 = icmp eq i64 %30, 8796093022208
  br i1 %31, label %32, label %34

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %26, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %33) #7
  br label %34

34:                                               ; preds = %32, %21
  %35 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1, i32 1
  %36 = bitcast %"class.blink::Length"* %23 to i64*
  %37 = bitcast %"class.blink::Length"* %35 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 4
  %39 = and i64 %38, 280375465082880
  %40 = icmp eq i64 %39, 8796093022208
  br i1 %40, label %41, label %129

41:                                               ; preds = %34
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %35) #7
  br label %129

42:                                               ; preds = %6
  %43 = bitcast %"class.blink::LengthSize"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %8, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 0
  %46 = bitcast %"class.blink::LengthSize"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false)
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1
  %48 = bitcast %"class.blink::LengthSize"* %8 to i64*
  %49 = bitcast %"class.blink::LengthSize"* %47 to i64*
  %50 = load i64, i64* %48, align 8
  store i64 %50, i64* %49, align 4
  %51 = and i64 %50, 280375465082880
  %52 = icmp eq i64 %51, 8796093022208
  br i1 %52, label %53, label %55

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %47, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %54) #7
  br label %55

55:                                               ; preds = %53, %42
  %56 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1, i32 1
  %57 = bitcast %"class.blink::Length"* %44 to i64*
  %58 = bitcast %"class.blink::Length"* %56 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 4
  %60 = and i64 %59, 280375465082880
  %61 = icmp eq i64 %60, 8796093022208
  br i1 %61, label %62, label %129

62:                                               ; preds = %55
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %56) #7
  br label %129

63:                                               ; preds = %6
  %64 = bitcast %"class.blink::LengthSize"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #7
  %65 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 7, i1 false) #7, !alias.scope !35
  br label %66

66:                                               ; preds = %63, %17
  %67 = phi i8* [ %65, %63 ], [ %19, %17 ]
  %68 = phi i8* [ %64, %63 ], [ %18, %17 ]
  %69 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 2
  %71 = bitcast [4 x i8]* %70 to i32*
  %72 = load i32, i32* %71, align 4, !noalias !40
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 7, i1 false) #7, !alias.scope !43
  br label %77

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::InterpolableValue"* %3 to %"class.blink::InterpolableLength"*
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %13, %"class.blink::InterpolableLength"* %76, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %5, i32 1) #7
  br label %77

77:                                               ; preds = %74, %75
  %78 = bitcast %"class.blink::LengthSize"* %9 to i64*
  %79 = load i64, i64* %10, align 8
  store i64 %79, i64* %78, align 8
  %80 = and i64 %79, 280375465082880
  %81 = icmp eq i64 %80, 8796093022208
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %9, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %83) #7
  br label %84

84:                                               ; preds = %82, %77
  %85 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %9, i64 0, i32 1
  %86 = bitcast %"class.blink::Length"* %85 to i64*
  %87 = load i64, i64* %12, align 8
  store i64 %87, i64* %86, align 8
  %88 = and i64 %87, 280375465082880
  %89 = icmp eq i64 %88, 8796093022208
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %85) #7
  br label %91

91:                                               ; preds = %84, %90
  %92 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 0
  store i32 2, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1
  %94 = bitcast %"class.blink::LengthSize"* %93 to i64*
  %95 = load i64, i64* %78, align 8
  store i64 %95, i64* %94, align 4
  %96 = and i64 %95, 280375465082880
  %97 = icmp eq i64 %96, 8796093022208
  br i1 %97, label %98, label %100

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %93, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %99) #7
  br label %100

100:                                              ; preds = %98, %91
  %101 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %0, i64 0, i32 1, i32 1
  %102 = bitcast %"class.blink::Length"* %101 to i64*
  %103 = load i64, i64* %86, align 8
  store i64 %103, i64* %102, align 4
  %104 = and i64 %103, 280375465082880
  %105 = icmp eq i64 %104, 8796093022208
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %101) #7
  br label %107

107:                                              ; preds = %100, %106
  %108 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %9, i64 0, i32 1, i32 2
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 8
  br i1 %110, label %111, label %112

111:                                              ; preds = %107
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #7
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %9, i64 0, i32 0, i32 2
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 8
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %9, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %117) #7
  br label %118

118:                                              ; preds = %112, %116
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 8
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %13) #7
  br label %123

123:                                              ; preds = %118, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 8
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #7
  br label %128

128:                                              ; preds = %123, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #7
  br label %129

129:                                              ; preds = %62, %55, %41, %34, %128
  %130 = phi i8* [ %68, %128 ], [ %22, %34 ], [ %22, %41 ], [ %43, %55 ], [ %43, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSSizeNonInterpolableValueD2Ev(%"class.blink::CSSSizeNonInterpolableValue"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSizeNonInterpolableValue", %"class.blink::CSSSizeNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSSizeNonInterpolableValue", %"class.blink::CSSSizeNonInterpolableValue"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #7
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #7
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSSizeNonInterpolableValueD0Ev(%"class.blink::CSSSizeNonInterpolableValue"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSizeNonInterpolableValue", %"class.blink::CSSSizeNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSSizeNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSSizeNonInterpolableValue", %"class.blink::CSSSizeNonInterpolableValue"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #7
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #7
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.blink::CSSSizeNonInterpolableValue"* %0 to i8*
  tail call void @free(i8* %20) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink27CSSSizeNonInterpolableValue7GetTypeEv(%"class.blink::CSSSizeNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink27CSSSizeNonInterpolableValue12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!4 = distinct !{!4, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE: argument 0"}
!7 = distinct !{!7, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!10 = distinct !{!10, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!13 = distinct !{!13, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!16 = distinct !{!16, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE: argument 0"}
!19 = distinct !{!19, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!22 = distinct !{!22, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE: argument 0"}
!25 = distinct !{!25, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!28 = distinct !{!28, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE: argument 0"}
!31 = distinct !{!31, !"_ZN5blinkL14ConvertKeywordENS_10CSSValueIDE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE: argument 0"}
!34 = distinct !{!34, !"_ZN5blinkL19WrapConvertedLengthEONS_18InterpolationValueE"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN5blink6Length4AutoEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink6Length4AutoEv"}
!38 = distinct !{!38, !39, !"_ZN5blinkL12CreateLengthERKNS_17InterpolableValueERKNS_27CSSSizeNonInterpolableValueERKNS_25CSSToLengthConversionDataE: argument 0"}
!39 = distinct !{!39, !"_ZN5blinkL12CreateLengthERKNS_17InterpolableValueERKNS_27CSSSizeNonInterpolableValueERKNS_25CSSToLengthConversionDataE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blinkL12CreateLengthERKNS_17InterpolableValueERKNS_27CSSSizeNonInterpolableValueERKNS_25CSSToLengthConversionDataE: argument 0"}
!42 = distinct !{!42, !"_ZN5blinkL12CreateLengthERKNS_17InterpolableValueERKNS_27CSSSizeNonInterpolableValueERKNS_25CSSToLengthConversionDataE"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZN5blink6Length4AutoEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink6Length4AutoEv"}
