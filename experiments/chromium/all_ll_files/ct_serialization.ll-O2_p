; ModuleID = '../../net/cert/ct_serialization.cc'
source_filename = "../../net/cert/ct_serialization.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.bssl::internal::StackAllocated" = type { %struct.cbb_st }
%struct.cbs_st = type { i8*, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.net::ct::SignedEntryData" = type { i32, %"class.std::__1::basic_string", %"struct.net::SHA256HashValue", %"class.std::__1::basic_string" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"struct.net::ct::MerkleTreeLeaf" = type { %"struct.net::ct::SignedEntryData", %"class.base::Time", %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.net::ct::SignedTreeHead" = type { i32, %"class.base::Time", i64, [32 x i8], %"struct.net::ct::DigitallySigned", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.scoped_refptr = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct21EncodeDigitallySignedERKNS0_15DigitallySignedEP6cbb_st(%"struct.net::ct::DigitallySigned"* dereferenceable(32), %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i8
  %8 = tail call i32 @CBB_add_u8(%struct.cbb_st* %1, i8 zeroext %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = tail call i32 @CBB_add_u8(%struct.cbb_st* %1, i8 zeroext %13) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %10
  %17 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %30 = zext i8 %23 to i64
  %31 = select i1 %24, i8* %26, i8* %29
  %32 = select i1 %24, i64 %28, i64 %30
  %33 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %31, i64 %32) #10
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %19
  %36 = call i32 @CBB_flush(%struct.cbb_st* %1) #10
  %37 = icmp ne i32 %36, 0
  br label %38

38:                                               ; preds = %19, %16, %10, %2, %35
  %39 = phi i1 [ false, %19 ], [ false, %16 ], [ false, %10 ], [ false, %2 ], [ %37, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @CBB_add_u16_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct21EncodeDigitallySignedERKNS0_15DigitallySignedEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::DigitallySigned"* dereferenceable(32), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.bssl::internal::StackAllocated", align 8
  %4 = bitcast %"class.bssl::internal::StackAllocated"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %3, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %5) #10
  %6 = call i32 @CBB_init(%struct.cbb_st* nonnull %5, i64 64) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = call zeroext i1 @_ZN3net2ct21EncodeDigitallySignedERKNS0_15DigitallySignedEP6cbb_st(%"struct.net::ct::DigitallySigned"* dereferenceable(32) %0, %struct.cbb_st* nonnull %5)
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = call i32 @CBB_flush(%struct.cbb_st* nonnull %5) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = call i8* @CBB_data(%struct.cbb_st* nonnull %5) #10
  %15 = call i64 @CBB_len(%struct.cbb_st* nonnull %5) #10
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %14, i64 %15) #10
  br label %17

17:                                               ; preds = %8, %2, %10, %13
  %18 = phi i1 [ true, %13 ], [ false, %10 ], [ false, %2 ], [ false, %8 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret i1 %18
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEP6cbs_stPNS0_15DigitallySignedE(%struct.cbs_st*, %"struct.net::ct::DigitallySigned"*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %"struct.net::ct::DigitallySigned", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_u8(%struct.cbs_st* %0, i8* nonnull %3) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %89, label %11

11:                                               ; preds = %2
  %12 = call i32 @CBS_get_u8(%struct.cbs_st* %0, i8* nonnull %4) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %89, label %14

14:                                               ; preds = %11
  %15 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %89, label %17

17:                                               ; preds = %14
  %18 = bitcast %"struct.net::ct::DigitallySigned"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %6, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %6, i64 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.net::ct::DigitallySigned"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  call void @_ZN3net2ct15DigitallySignedC1Ev(%"struct.net::ct::DigitallySigned"* nonnull %6) #10
  %24 = load i8, i8* %3, align 1
  %25 = icmp ult i8 %24, 7
  br i1 %25, label %26, label %87

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %6, i64 0, i32 0
  %28 = zext i8 %24 to i32
  store i32 %28, i32* %27, align 8
  %29 = load i8, i8* %4, align 1
  %30 = icmp ult i8 %29, 4
  br i1 %30, label %31, label %87

31:                                               ; preds = %26
  %32 = zext i8 %29 to i32
  store i32 %32, i32* %19, align 4
  %33 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #10
  %34 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #10
  %35 = call i1 @llvm.is.constant.i64(i64 %34) #10
  %36 = icmp ult i64 %34, 23
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %54

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  store i64 %34, i64* %22, align 8
  %44 = load i8*, i8** %21, align 8
  br label %48

45:                                               ; preds = %38
  %46 = trunc i64 %34 to i8
  store i8 %46, i8* %40, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i8* [ %44, %43 ], [ %47, %45 ]
  %50 = icmp eq i64 %34, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %33, i64 %34, i1 false) #10
  br label %52

52:                                               ; preds = %51, %48
  %53 = getelementptr inbounds i8, i8* %49, i64 %34
  store i8 0, i8* %53, align 1
  br label %56

54:                                               ; preds = %31
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %33, i64 %34) #10
  br label %56

56:                                               ; preds = %52, %54
  %57 = bitcast %"struct.net::ct::DigitallySigned"* %6 to i64*
  %58 = bitcast %"struct.net::ct::DigitallySigned"* %1 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %1, i64 0, i32 2
  %61 = icmp eq %"struct.net::ct::DigitallySigned"* %6, %1
  br i1 %61, label %87, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %66, label %79, label %71

71:                                               ; preds = %62
  br i1 %70, label %75, label %72

72:                                               ; preds = %71
  %73 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #10
  br label %87

75:                                               ; preds = %71
  %76 = load i8*, i8** %21, align 8
  %77 = load i64, i64* %22, align 8
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %60, i8* %76, i64 %77) #10
  br label %87

79:                                               ; preds = %62
  %80 = load i8*, i8** %21, align 8
  %81 = load i64, i64* %22, align 8
  %82 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %83 = zext i8 %69 to i64
  %84 = select i1 %70, i8* %80, i8* %82
  %85 = select i1 %70, i64 %81, i64 %83
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %60, i8* %84, i64 %85) #10
  br label %87

87:                                               ; preds = %79, %75, %72, %56, %26, %17
  %88 = phi i1 [ false, %17 ], [ false, %26 ], [ true, %56 ], [ true, %72 ], [ true, %75 ], [ true, %79 ]
  call void @_ZN3net2ct15DigitallySignedD1Ev(%"struct.net::ct::DigitallySigned"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  br label %89

89:                                               ; preds = %2, %11, %14, %87
  %90 = phi i1 [ %88, %87 ], [ false, %14 ], [ false, %11 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret i1 %90
}

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare i32 @CBS_get_u16_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare void @_ZN3net2ct15DigitallySignedC1Ev(%"struct.net::ct::DigitallySigned"*) unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net2ct15DigitallySignedD1Ev(%"struct.net::ct::DigitallySigned"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_15DigitallySignedE(%"class.base::BasicStringPiece"*, %"struct.net::ct::DigitallySigned"*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %6 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load i8*, i8** %5, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %3, i8* %7, i64 %9) #10
  %10 = call zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEP6cbs_stPNS0_15DigitallySignedE(%struct.cbs_st* nonnull %3, %"struct.net::ct::DigitallySigned"* %1)
  %11 = load i64, i64* %8, align 8
  %12 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #10
  %13 = sub i64 %11, %12
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* %0, i64 %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %10
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct17EncodeSignedEntryERKNS0_15SignedEntryDataEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedEntryData"* dereferenceable(88), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.bssl::internal::StackAllocated", align 8
  %4 = bitcast %"class.bssl::internal::StackAllocated"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %3, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %5) #10
  %6 = call i32 @CBB_init(%struct.cbb_st* nonnull %5, i64 64) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = call fastcc zeroext i1 @_ZN3net2ctL17EncodeSignedEntryERKNS0_15SignedEntryDataEP6cbb_st(%"struct.net::ct::SignedEntryData"* dereferenceable(88) %0, %struct.cbb_st* nonnull %5)
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = call i32 @CBB_flush(%struct.cbb_st* nonnull %5) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = call i8* @CBB_data(%struct.cbb_st* nonnull %5) #10
  %15 = call i64 @CBB_len(%struct.cbb_st* nonnull %5) #10
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %14, i64 %15) #10
  br label %17

17:                                               ; preds = %8, %2, %10, %13
  %18 = phi i1 [ true, %13 ], [ false, %10 ], [ false, %2 ], [ false, %8 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net2ctL17EncodeSignedEntryERKNS0_15SignedEntryDataEP6cbb_st(%"struct.net::ct::SignedEntryData"* dereferenceable(88), %struct.cbb_st*) unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i16
  %8 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %66, label %10

10:                                               ; preds = %2
  %11 = load i32, i32* %5, align 8
  switch i32 %11, label %66 [
    i32 0, label %12
    i32 1, label %37
  ]

12:                                               ; preds = %10
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #10
  %14 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i8* %23, i8* %26
  %29 = select i1 %21, i64 %25, i64 %27
  %30 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %28, i64 %29) #10
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %16
  %33 = call i32 @CBB_flush(%struct.cbb_st* %1) #10
  %34 = icmp ne i32 %33, 0
  br label %35

35:                                               ; preds = %12, %16, %32
  %36 = phi i1 [ false, %16 ], [ false, %12 ], [ %34, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #10
  br label %66

37:                                               ; preds = %10
  %38 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false) #10
  %39 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 2, i32 0, i64 0
  %40 = tail call i32 @CBB_add_bytes(%struct.cbb_st* %1, i8* %39, i64 32) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %64, label %42

42:                                               ; preds = %37
  %43 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #10
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %56 = zext i8 %49 to i64
  %57 = select i1 %50, i8* %52, i8* %55
  %58 = select i1 %50, i64 %54, i64 %56
  %59 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %57, i64 %58) #10
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %45
  %62 = call i32 @CBB_flush(%struct.cbb_st* %1) #10
  %63 = icmp ne i32 %62, 0
  br label %64

64:                                               ; preds = %37, %42, %45, %61
  %65 = phi i1 [ false, %45 ], [ false, %42 ], [ false, %37 ], [ %63, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  br label %66

66:                                               ; preds = %10, %2, %64, %35
  %67 = phi i1 [ %65, %64 ], [ %36, %35 ], [ false, %2 ], [ false, %10 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct14EncodeTreeLeafERKNS0_14MerkleTreeLeafEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::MerkleTreeLeaf"* dereferenceable(120), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.bssl::internal::StackAllocated", align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = bitcast %"class.bssl::internal::StackAllocated"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %7) #10
  %8 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_init(%struct.cbb_st* nonnull %7, i64 64) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %56, label %11

11:                                               ; preds = %2
  %12 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %7, i8 zeroext 0) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %11
  %15 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %7, i8 zeroext 0) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %56, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %20 = call i64 @_ZN4base4Time9UnixEpochEv() #10
  %21 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sub nsw i64 %22, %20
  store i64 %23, i64* %19, align 8
  %24 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #10
  %25 = call i32 @CBB_add_u64(%struct.cbb_st* nonnull %7, i64 %24) #10
  %26 = icmp eq i32 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br i1 %26, label %56, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0
  %29 = call fastcc zeroext i1 @_ZN3net2ctL17EncodeSignedEntryERKNS0_15SignedEntryDataEP6cbb_st(%"struct.net::ct::SignedEntryData"* dereferenceable(88) %28, %struct.cbb_st* nonnull %7)
  br i1 %29, label %30, label %56

30:                                               ; preds = %27
  %31 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %5) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %44 = zext i8 %37 to i64
  %45 = select i1 %38, i8* %40, i8* %43
  %46 = select i1 %38, i64 %42, i64 %44
  %47 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %45, i64 %46) #10
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %33
  %50 = call i32 @CBB_flush(%struct.cbb_st* nonnull %7) #10
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = call i8* @CBB_data(%struct.cbb_st* nonnull %7) #10
  %54 = call i64 @CBB_len(%struct.cbb_st* nonnull %7) #10
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %53, i64 %54) #10
  br label %56

56:                                               ; preds = %17, %27, %2, %11, %14, %30, %33, %49, %52
  %57 = phi i1 [ true, %52 ], [ false, %49 ], [ false, %33 ], [ false, %30 ], [ false, %14 ], [ false, %11 ], [ false, %2 ], [ false, %27 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct21EncodeV1SCTSignedDataERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_PSB_(%"class.base::Time"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.bssl::internal::StackAllocated", align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = bitcast %"class.bssl::internal::StackAllocated"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %6, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %9) #10
  %10 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = call i32 @CBB_init(%struct.cbb_st* nonnull %9, i64 64) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %69, label %13

13:                                               ; preds = %4
  %14 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %9, i8 zeroext 0) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %69, label %16

16:                                               ; preds = %13
  %17 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %9, i8 zeroext 0) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %69, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %22 = call i64 @_ZN4base4Time9UnixEpochEv() #10
  %23 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = sub nsw i64 %24, %22
  store i64 %25, i64* %21, align 8
  %26 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #10
  %27 = call i32 @CBB_add_u64(%struct.cbb_st* nonnull %9, i64 %26) #10
  %28 = icmp eq i32 %27, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br i1 %28, label %69, label %29

29:                                               ; preds = %19
  %30 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i8* %35, i8* %38
  %41 = select i1 %33, i64 %37, i64 %39
  %42 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %9, i8* %40, i64 %41) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %69, label %44

44:                                               ; preds = %29
  %45 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %7) #10
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %57 = zext i8 %50 to i64
  %58 = select i1 %51, i8* %53, i8* %56
  %59 = select i1 %51, i64 %55, i64 %57
  %60 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* %58, i64 %59) #10
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = call i32 @CBB_flush(%struct.cbb_st* nonnull %9) #10
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = call i8* @CBB_data(%struct.cbb_st* nonnull %9) #10
  %67 = call i64 @CBB_len(%struct.cbb_st* nonnull %9) #10
  %68 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %3, i8* %66, i64 %67) #10
  br label %69

69:                                               ; preds = %19, %4, %13, %16, %29, %44, %47, %62, %65
  %70 = phi i1 [ true, %65 ], [ false, %62 ], [ false, %47 ], [ false, %44 ], [ false, %29 ], [ false, %16 ], [ false, %13 ], [ false, %4 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct23EncodeTreeHeadSignatureERKNS0_14SignedTreeHeadEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedTreeHead"* dereferenceable(112), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.bssl::internal::StackAllocated", align 8
  %5 = bitcast %"class.bssl::internal::StackAllocated"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %6) #10
  %7 = call i32 @CBB_init(%struct.cbb_st* nonnull %6, i64 64) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = trunc i32 %11 to i8
  %13 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %6, i8 zeroext %12) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %9
  %16 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %6, i8 zeroext 1) #10
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %21 = call i64 @_ZN4base4Time9UnixEpochEv() #10
  %22 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %23, %21
  store i64 %24, i64* %20, align 8
  %25 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #10
  %26 = call i32 @CBB_add_u64(%struct.cbb_st* nonnull %6, i64 %25) #10
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br i1 %27, label %41, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = call i32 @CBB_add_u64(%struct.cbb_st* nonnull %6, i64 %30) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %0, i64 0, i32 3, i64 0
  %35 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %34, i64 32) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = call i8* @CBB_data(%struct.cbb_st* nonnull %6) #10
  %39 = call i64 @CBB_len(%struct.cbb_st* nonnull %6) #10
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %38, i64 %39) #10
  br label %41

41:                                               ; preds = %18, %2, %9, %15, %28, %33, %37
  %42 = phi i1 [ true, %37 ], [ false, %33 ], [ false, %28 ], [ false, %15 ], [ false, %9 ], [ false, %2 ], [ false, %18 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret i1 %42
}

declare i32 @CBB_add_u64(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct13DecodeSCTListEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_6vectorIS6_NS3_9allocatorIS6_EEEE(i8*, i64, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %7, i8* %0, i64 %1) #10
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #10
  %14 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #10
  %15 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %5) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %106

18:                                               ; preds = %3
  %19 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #10
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  %23 = bitcast %"class.base::BasicStringPiece"** %13 to i64*
  br label %107

24:                                               ; preds = %18
  %25 = bitcast %struct.cbs_st* %6 to i8*
  %26 = bitcast %"class.base::BasicStringPiece"** %12 to i64*
  %27 = bitcast %"class.std::__1::vector"* %4 to i64*
  %28 = bitcast %"class.base::BasicStringPiece"** %13 to i64*
  br label %29

29:                                               ; preds = %93, %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #10
  %30 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6) #10
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %100, label %32

32:                                               ; preds = %29
  %33 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #10
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %100, label %35

35:                                               ; preds = %32
  %36 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #10
  %37 = ptrtoint i8* %36 to i64
  %38 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #10
  %39 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %12, align 8
  %40 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  %41 = icmp ult %"class.base::BasicStringPiece"* %39, %40
  %42 = ptrtoint %"class.base::BasicStringPiece"* %40 to i64
  br i1 %41, label %43, label %48

43:                                               ; preds = %35
  %44 = bitcast %"class.base::BasicStringPiece"* %39 to i64*
  store i64 %37, i64* %44, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 0, i32 1
  store i64 %38, i64* %45, align 8
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 1
  %47 = ptrtoint %"class.base::BasicStringPiece"* %46 to i64
  store i64 %47, i64* %26, align 8
  br label %93

48:                                               ; preds = %35
  %49 = ptrtoint %"class.base::BasicStringPiece"* %39 to i64
  %50 = load i64, i64* %27, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 4
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 1152921504606846975
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %56) #11
  unreachable

57:                                               ; preds = %48
  %58 = sub i64 %42, %50
  %59 = ashr exact i64 %58, 4
  %60 = icmp ult i64 %59, 576460752303423487
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = ashr exact i64 %58, 3
  %63 = icmp ult i64 %62, %53
  %64 = select i1 %63, i64 %53, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %61
  %67 = icmp ugt i64 %64, 1152921504606846975
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  call void @abort() #11
  unreachable

69:                                               ; preds = %66, %57
  %70 = phi i64 [ %64, %66 ], [ 1152921504606846975, %57 ]
  %71 = shl i64 %70, 4
  %72 = call i8* @_Znwm(i64 %71) #12
  %73 = bitcast i8* %72 to %"class.base::BasicStringPiece"*
  br label %74

74:                                               ; preds = %69, %61
  %75 = phi i64 [ %70, %69 ], [ 0, %61 ]
  %76 = phi i8* [ %72, %69 ], [ null, %61 ]
  %77 = phi %"class.base::BasicStringPiece"* [ %73, %69 ], [ null, %61 ]
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %77, i64 %52
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %77, i64 %75
  %80 = ptrtoint %"class.base::BasicStringPiece"* %79 to i64
  %81 = bitcast %"class.base::BasicStringPiece"* %78 to i64*
  store i64 %37, i64* %81, align 8
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %77, i64 %52, i32 1
  store i64 %38, i64* %82, align 8
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %78, i64 1
  %84 = ptrtoint %"class.base::BasicStringPiece"* %83 to i64
  %85 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  %86 = icmp sgt i64 %51, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %74
  %88 = inttoptr i64 %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %88, i64 %51, i1 false) #10
  br label %89

89:                                               ; preds = %87, %74
  store i64 %85, i64* %27, align 8
  store i64 %84, i64* %26, align 8
  store i64 %80, i64* %28, align 8
  %90 = icmp eq i64 %50, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %50 to i8*
  call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %91, %89, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  %94 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #10
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %29

96:                                               ; preds = %93
  %97 = load i64, i64* %27, align 8
  %98 = bitcast %"class.base::BasicStringPiece"** %12 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8
  br label %107

100:                                              ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  %101 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  %102 = icmp eq %"class.base::BasicStringPiece"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = ptrtoint %"class.base::BasicStringPiece"* %101 to i64
  store i64 %104, i64* %26, align 8
  %105 = bitcast %"class.base::BasicStringPiece"* %101 to i8*
  call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %103, %100, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  br label %130

107:                                              ; preds = %96, %21
  %108 = phi i64* [ %23, %21 ], [ %28, %96 ]
  %109 = phi i64* [ %22, %21 ], [ %26, %96 ]
  %110 = phi i64 [ 0, %21 ], [ %97, %96 ]
  %111 = phi <2 x i64> [ zeroinitializer, %21 ], [ %99, %96 ]
  store i64 0, i64* %109, align 8
  store i64 0, i64* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %112 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #10
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %107
  %115 = inttoptr i64 %110 to %"class.base::BasicStringPiece"*
  %116 = extractelement <2 x i64> %111, i32 0
  %117 = inttoptr i64 %116 to %"class.base::BasicStringPiece"*
  %118 = icmp eq %"class.base::BasicStringPiece"* %115, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.std::__1::vector"* %2 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %110, i64* %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %123 = bitcast %"class.base::BasicStringPiece"** %122 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %123, align 8
  br label %124

124:                                              ; preds = %114, %107, %119
  %125 = phi i64 [ %110, %114 ], [ %121, %119 ], [ %110, %107 ]
  %126 = phi i1 [ false, %114 ], [ true, %119 ], [ false, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %125 to i8*
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %106, %124, %128
  %131 = phi i1 [ false, %106 ], [ %126, %124 ], [ %126, %128 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct32DecodeSignedCertificateTimestampEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEP13scoped_refptrINS0_26SignedCertificateTimestampEE(%"class.base::BasicStringPiece"*, %class.scoped_refptr* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = tail call i8* @_Znwm(i64 128) #12
  %10 = bitcast i8* %9 to %"struct.net::ct::SignedCertificateTimestamp"*
  tail call void @_ZN3net2ct26SignedCertificateTimestampC1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %10) #10
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast i8* %9 to i32*
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 -86, i8* %5, align 1
  %14 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %16 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load i8*, i8** %15, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %6, i8* %17, i64 %19) #10
  %20 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %6, i8* nonnull %5) #10
  %21 = icmp ne i32 %20, 0
  %22 = load i8, i8* %5, align 1
  %23 = icmp eq i8 %22, 0
  %24 = and i1 %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %26 = bitcast i8* %9 to %"struct.net::ct::SignedCertificateTimestamp"*
  br label %142

27:                                               ; preds = %2
  %28 = getelementptr inbounds i8, i8* %9, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = bitcast %struct.cbs_st* %8 to i8*
  %32 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %33 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %34 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i64 32) #10
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %137, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds i8, i8* %9, i64 32
  %38 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  store i64 0, i64* %4, align 8
  %39 = call i32 @CBS_get_u64(%struct.cbs_st* nonnull %6, i64* nonnull %4) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %67, label %41

41:                                               ; preds = %36
  %42 = load i64, i64* %4, align 8
  %43 = icmp sgt i64 %42, -1
  br i1 %43, label %44, label %67

44:                                               ; preds = %41
  %45 = call i64 @_ZN4base4Time9UnixEpochEv() #10
  %46 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %42, i64 1000) #10
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 9223372036854775807, i64 %48, !prof !2
  %50 = add i64 %49, -9223372036854775807
  %51 = icmp ult i64 %50, 2
  br i1 %51, label %59, label %52

52:                                               ; preds = %44
  %53 = icmp slt i64 %49, 0
  %54 = select i1 %53, i64 -9223372036854775808, i64 9223372036854775807
  %55 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %45, i64 %49) #10
  %56 = extractvalue { i64, i1 } %55, 1
  %57 = extractvalue { i64, i1 } %55, 0
  %58 = select i1 %56, i64 %54, i64 %57, !prof !2
  br label %68

59:                                               ; preds = %44
  %60 = add i64 %45, -9223372036854775807
  %61 = icmp ugt i64 %60, 1
  %62 = icmp eq i64 %45, %49
  %63 = or i1 %62, %61
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #10
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  br label %68

67:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  br label %137

68:                                               ; preds = %64, %59, %52
  %69 = phi i64 [ %58, %52 ], [ %49, %59 ], [ %49, %64 ]
  %70 = bitcast i8* %37 to i64*
  store i64 %69, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  %71 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %8) #10
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %137, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds i8, i8* %9, i64 64
  %75 = bitcast i8* %74 to %"struct.net::ct::DigitallySigned"*
  %76 = call zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEP6cbs_stPNS0_15DigitallySignedE(%struct.cbs_st* nonnull %6, %"struct.net::ct::DigitallySigned"* %75)
  br i1 %76, label %77, label %137

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %9, i64 8
  %79 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #10
  %80 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #10
  %81 = call i1 @llvm.is.constant.i64(i64 %80) #10
  %82 = icmp ult i64 %80, 23
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %101

84:                                               ; preds = %77
  %85 = getelementptr inbounds i8, i8* %9, i64 31
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %9, i64 16
  %90 = bitcast i8* %89 to i64*
  store i64 %80, i64* %90, align 8
  %91 = bitcast i8* %78 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %95

93:                                               ; preds = %84
  %94 = trunc i64 %80 to i8
  store i8 %94, i8* %85, align 1
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i8* [ %92, %88 ], [ %78, %93 ]
  %97 = icmp eq i64 %80, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %79, i64 %80, i1 false) #10
  br label %99

99:                                               ; preds = %98, %95
  %100 = getelementptr inbounds i8, i8* %96, i64 %80
  store i8 0, i8* %100, align 1
  br label %104

101:                                              ; preds = %77
  %102 = bitcast i8* %78 to %"class.std::__1::basic_string"*
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %102, i8* %79, i64 %80) #10
  br label %104

104:                                              ; preds = %99, %101
  %105 = getelementptr inbounds i8, i8* %9, i64 40
  %106 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #10
  %107 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #10
  %108 = call i1 @llvm.is.constant.i64(i64 %107) #10
  %109 = icmp ult i64 %107, 23
  %110 = and i1 %109, %108
  br i1 %110, label %111, label %128

111:                                              ; preds = %104
  %112 = getelementptr inbounds i8, i8* %9, i64 63
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %111
  %116 = getelementptr inbounds i8, i8* %9, i64 48
  %117 = bitcast i8* %116 to i64*
  store i64 %107, i64* %117, align 8
  %118 = bitcast i8* %105 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %122

120:                                              ; preds = %111
  %121 = trunc i64 %107 to i8
  store i8 %121, i8* %112, align 1
  br label %122

122:                                              ; preds = %120, %115
  %123 = phi i8* [ %119, %115 ], [ %105, %120 ]
  %124 = icmp eq i64 %107, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %106, i64 %107, i1 false) #10
  br label %126

126:                                              ; preds = %125, %122
  %127 = getelementptr inbounds i8, i8* %123, i64 %107
  store i8 0, i8* %127, align 1
  br label %131

128:                                              ; preds = %104
  %129 = bitcast i8* %105 to %"class.std::__1::basic_string"*
  %130 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %129, i8* %106, i64 %107) #10
  br label %131

131:                                              ; preds = %126, %128
  %132 = bitcast %class.scoped_refptr* %1 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %11, i64* %132, align 8
  %134 = load i64, i64* %18, align 8
  %135 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #10
  %136 = sub i64 %134, %135
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* %0, i64 %136)
  br label %137

137:                                              ; preds = %131, %68, %27, %73, %67
  %138 = phi i64 [ %11, %27 ], [ %11, %68 ], [ %133, %131 ], [ %11, %73 ], [ %11, %67 ]
  %139 = phi i1 [ false, %27 ], [ false, %68 ], [ true, %131 ], [ false, %73 ], [ false, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %140 = inttoptr i64 %138 to %"struct.net::ct::SignedCertificateTimestamp"*
  %141 = icmp eq i64 %138, 0
  br i1 %141, label %151, label %142

142:                                              ; preds = %25, %137
  %143 = phi %"struct.net::ct::SignedCertificateTimestamp"* [ %26, %25 ], [ %140, %137 ]
  %144 = phi i1 [ false, %25 ], [ %139, %137 ]
  %145 = phi i64 [ %11, %25 ], [ %138, %137 ]
  %146 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw sub i32* %146, i32 1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  call void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %143) #10
  %150 = inttoptr i64 %145 to i8*
  call void @_ZdlPv(i8* %150) #12
  br label %151

151:                                              ; preds = %137, %142, %149
  %152 = phi i1 [ %139, %137 ], [ %144, %142 ], [ %144, %149 ]
  ret i1 %152
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3net2ct26SignedCertificateTimestampC1Ev(%"struct.net::ct::SignedCertificateTimestamp"*) unnamed_addr #2

declare i32 @CBS_get_bytes(%struct.cbs_st*, %struct.cbs_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct32EncodeSignedCertificateTimestampERK13scoped_refptrINS0_26SignedCertificateTimestampEEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%class.scoped_refptr* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.bssl::internal::StackAllocated", align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = bitcast %"class.bssl::internal::StackAllocated"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %7) #10
  %8 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_init(%struct.cbb_st* nonnull %7, i64 64) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %80, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %13 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %12, align 8
  %14 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %7, i8 zeroext %16) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %80, label %19

19:                                               ; preds = %11
  %20 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %12, align 8
  %21 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %20, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  br label %31

29:                                               ; preds = %19
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i8* [ %28, %26 ], [ %30, %29 ]
  %33 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* %32, i64 32) #10
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %80, label %35

35:                                               ; preds = %31
  %36 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %12, align 8
  %37 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %39 = call i64 @_ZN4base4Time9UnixEpochEv() #10
  %40 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %36, i64 0, i32 3, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = sub nsw i64 %41, %39
  store i64 %42, i64* %38, align 8
  %43 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #10
  %44 = call i32 @CBB_add_u64(%struct.cbb_st* nonnull %7, i64 %43) #10
  %45 = icmp eq i32 %44, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br i1 %45, label %80, label %46

46:                                               ; preds = %35
  %47 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %5) #10
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %80, label %49

49:                                               ; preds = %46
  %50 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %12, align 8
  %51 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %50, i64 0, i32 4
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %50, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  br label %64

61:                                               ; preds = %49
  %62 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %63 = zext i8 %54 to i64
  br label %64

64:                                               ; preds = %56, %61
  %65 = phi i8* [ %58, %56 ], [ %62, %61 ]
  %66 = phi i64 [ %60, %56 ], [ %63, %61 ]
  %67 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %65, i64 %66) #10
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %64
  %70 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %12, align 8
  %71 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %70, i64 0, i32 5
  %72 = call zeroext i1 @_ZN3net2ct21EncodeDigitallySignedERKNS0_15DigitallySignedEP6cbb_st(%"struct.net::ct::DigitallySigned"* dereferenceable(32) %71, %struct.cbb_st* nonnull %7)
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = call i32 @CBB_flush(%struct.cbb_st* nonnull %7) #10
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = call i8* @CBB_data(%struct.cbb_st* nonnull %7) #10
  %78 = call i64 @CBB_len(%struct.cbb_st* nonnull %7) #10
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %77, i64 %78) #10
  br label %80

80:                                               ; preds = %35, %69, %2, %11, %31, %46, %64, %73, %76
  %81 = phi i1 [ true, %76 ], [ false, %73 ], [ false, %64 ], [ false, %46 ], [ false, %31 ], [ false, %11 ], [ false, %2 ], [ false, %69 ], [ false, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct23EncodeSCTListForTestingERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.bssl::internal::StackAllocated", align 8
  %4 = alloca %"class.bssl::internal::StackAllocated", align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = bitcast %"class.bssl::internal::StackAllocated"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %3, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %8) #10
  %9 = bitcast %"class.bssl::internal::StackAllocated"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %10) #10
  %11 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %8, i64 64) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %46, label %15

15:                                               ; preds = %2
  %16 = call i32 @CBB_init(%struct.cbb_st* nonnull %10, i64 64) #10
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %15
  %19 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %5) #10
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %23, i64 %25) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %21
  %29 = call i32 @CBB_flush(%struct.cbb_st* nonnull %8) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %28
  %32 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %10, %struct.cbb_st* nonnull %6) #10
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %31
  %35 = call i8* @CBB_data(%struct.cbb_st* nonnull %8) #10
  %36 = call i64 @CBB_len(%struct.cbb_st* nonnull %8) #10
  %37 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %35, i64 %36) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = call i32 @CBB_flush(%struct.cbb_st* nonnull %10) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = call i8* @CBB_data(%struct.cbb_st* nonnull %10) #10
  %44 = call i64 @CBB_len(%struct.cbb_st* nonnull %10) #10
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %43, i64 %44) #10
  br label %46

46:                                               ; preds = %2, %15, %18, %21, %28, %31, %34, %39, %42
  %47 = phi i1 [ true, %42 ], [ false, %39 ], [ false, %34 ], [ false, %31 ], [ false, %28 ], [ false, %21 ], [ false, %18 ], [ false, %15 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret i1 %47
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

declare i32 @CBB_add_u24_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #2

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @CBS_get_u64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #8

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
