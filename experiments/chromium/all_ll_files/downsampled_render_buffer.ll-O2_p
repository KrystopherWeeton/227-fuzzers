; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/downsampled_render_buffer.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/downsampled_render_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::DownsampledRenderBuffer" = type { i32, %"class.std::__1::vector", i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN6webrtc23DownsampledRenderBufferC1Em = hidden unnamed_addr alias void (%"struct.webrtc::DownsampledRenderBuffer"*, i64), void (%"struct.webrtc::DownsampledRenderBuffer"*, i64)* @_ZN6webrtc23DownsampledRenderBufferC2Em
@_ZN6webrtc23DownsampledRenderBufferD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::DownsampledRenderBuffer"*), void (%"struct.webrtc::DownsampledRenderBuffer"*)* @_ZN6webrtc23DownsampledRenderBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23DownsampledRenderBufferC2Em(%"struct.webrtc::DownsampledRenderBuffer"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 0
  %4 = trunc i64 %1 to i32
  store i32 %4, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i64 %1, 4611686018427387903
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %11) #6
  unreachable

12:                                               ; preds = %8
  %13 = shl i64 %1, 2
  %14 = tail call i8* @_Znwm(i64 %13) #7
  %15 = bitcast i8* %14 to float*
  %16 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds float, float* %15, i64 %1
  %19 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store float* %18, float** %19, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %13, i1 false)
  %20 = bitcast float** %16 to i64*
  %21 = ptrtoint float* %18 to i64
  store i64 %21, i64* %20, align 8
  %22 = ptrtoint i8* %14 to i64
  br label %23

23:                                               ; preds = %2, %12
  %24 = phi i64 [ %21, %12 ], [ 0, %2 ]
  %25 = phi i8* [ %14, %12 ], [ null, %2 ]
  %26 = phi i64 [ %22, %12 ], [ 0, %2 ]
  %27 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 3
  store i32 0, i32* %28, align 4
  %29 = sub i64 %24, %26
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %23
  %32 = and i64 %29, -4
  %33 = icmp ult i64 %29, 4
  %34 = sext i1 %33 to i64
  %35 = shl nsw i64 %34, 2
  %36 = sub i64 %32, %35
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 %36, i1 false)
  br label %37

37:                                               ; preds = %31, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23DownsampledRenderBufferD2Ev(%"struct.webrtc::DownsampledRenderBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
