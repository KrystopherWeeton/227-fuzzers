; ModuleID = '../../third_party/skia/src/core/SkGlyphRun.cpp'
source_filename = "../../third_party/skia/src/core/SkGlyphRun.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%struct.SkRect = type { float, float, float, float }
%"struct.SkTextBlobBuilder::RunBuffer" = type { i16*, float*, i8*, i32* }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.12, %class.sk_sp.10, %class.sk_sp, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.sk_sp.12 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.10 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.1, %class.SkSpan.2, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.0" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.0" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.1 = type { i32*, i64 }
%class.SkSpan.2 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%struct.SkPoint = type { float, float }
%class.SkGlyphRunList = type { %class.SkSpan.72, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.72 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.73, %struct.SkRect, i32, %"struct.std::__1::atomic.74" }
%class.SkNVRefCnt.73 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i32 }
%class.SkPaint = type <{ %class.sk_sp.10, %class.sk_sp.11, %class.sk_sp.12, %class.sk_sp.13, %class.sk_sp.14, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.11 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.13 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.14 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkBulkGlyphMetrics = type { %class.SkAutoSTArray, %class.sk_sp.23 }
%class.SkAutoSTArray = type { i32, %class.SkGlyph**, [160 x i8] }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.15, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.15 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.16, %class.SkTDArray.17, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.16 = type { i8*, i32, i32 }
%class.SkTDArray.17 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.18 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.18 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.19", [3 x i8] }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.sk_sp.23 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.43", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable, i64, i64, i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.25", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.10, %class.sk_sp.12, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.28, i8*, i8*, i8* }
%class.sk_sp.28 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable.32 }
%class.SkTHashTable.32 = type { i32, i32, %class.SkAutoTArray.33 }
%class.SkAutoTArray.33 = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRSXform = type { float, float, float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.79 = type { %class.SkTextBlob* }
%class.SkTextBlobBuilder = type { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, i64, %"struct.SkTextBlobBuilder::RunBuffer" }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc.93, i32, %class.SkAutoTMalloc.93, %"class.std::__1::vector.97", %class.SkGlyphRunList, %"class.std::__1::vector.104" }
%class.SkAutoTMalloc.93 = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %struct.SkPoint* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.SkGlyphRun* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i16*, i16*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i16* }
%class.SkSpan.9 = type { i16*, i64 }
%class.SkTextBlobRunIterator = type { %"class.SkTextBlob::RunRecord"* }
%"class.SkTextBlob::RunRecord" = type { %class.SkFont, i32, %struct.SkPoint, i32 }
%"class.std::__1::tuple.114" = type { %"struct.std::__1::__tuple_impl.115" }
%"struct.std::__1::__tuple_impl.115" = type { %"class.std::__1::__tuple_leaf.116", %"class.std::__1::__tuple_leaf.117" }
%"class.std::__1::__tuple_leaf.116" = type { %class.SkSpan.2 }
%"class.std::__1::__tuple_leaf.117" = type { %class.SkSpan.2 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm = comdat any

$_ZNSt3__16vectorI10SkGlyphRunNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRK6SkFontR6SkSpanIK7SkPointERS9_IKtERS9_IKcERS9_IKjESD_EEEvDpOT_ = comdat any

@__const._ZNK14SkGlyphRunList8makeBlobEv.builder = private unnamed_addr constant { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" } { %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.80" { %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, %"struct.SkTextBlobBuilder::RunBuffer" { i16* inttoptr (i64 -6148914691236517206 to i16*), float* inttoptr (i64 -6148914691236517206 to float*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32* inttoptr (i64 -6148914691236517206 to i32*) } }, align 8
@__const._ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_.strikeSpec = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.12 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.10 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_ = hidden unnamed_addr alias void (%class.SkGlyphRun*, %class.SkFont*, %struct.SkPoint*, i64, i16*, i64, %class.SkSpan*, %class.SkSpan.1*, %class.SkSpan.2*), void (%class.SkGlyphRun*, %class.SkFont*, %struct.SkPoint*, i64, i16*, i64, %class.SkSpan*, %class.SkSpan.1*, %class.SkSpan.2*)* @_ZN10SkGlyphRunC2ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_
@_ZN10SkGlyphRunC1ERKS_RK6SkFont = hidden unnamed_addr alias void (%class.SkGlyphRun*, %class.SkGlyphRun*, %class.SkFont*), void (%class.SkGlyphRun*, %class.SkGlyphRun*, %class.SkFont*)* @_ZN10SkGlyphRunC2ERKS_RK6SkFont
@_ZN14SkGlyphRunListC1Ev = hidden unnamed_addr alias void (%class.SkGlyphRunList*), void (%class.SkGlyphRunList*)* @_ZN14SkGlyphRunListC2Ev
@_ZN14SkGlyphRunListC1EPK10SkTextBlob6SkRect7SkPoint6SkSpanIK10SkGlyphRunE = hidden unnamed_addr alias void (%class.SkGlyphRunList*, %class.SkTextBlob*, <2 x float>, <2 x float>, <2 x float>, %class.SkGlyphRun*, i64), void (%class.SkGlyphRunList*, %class.SkTextBlob*, <2 x float>, <2 x float>, <2 x float>, %class.SkGlyphRun*, i64)* @_ZN14SkGlyphRunListC2EPK10SkTextBlob6SkRect7SkPoint6SkSpanIK10SkGlyphRunE
@_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint = hidden unnamed_addr alias void (%class.SkGlyphRunList*, %class.SkGlyphRun*, %struct.SkRect*, <2 x float>), void (%class.SkGlyphRunList*, %class.SkGlyphRun*, %struct.SkRect*, <2 x float>)* @_ZN14SkGlyphRunListC2ERK10SkGlyphRunRK6SkRect7SkPoint

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkGlyphRunC2ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nocapture, %class.SkFont* nocapture readonly dereferenceable(24), %struct.SkPoint*, i64, i16*, i64, %class.SkSpan* nocapture readonly byval(%class.SkSpan) align 8, %class.SkSpan.1* nocapture readonly byval(%class.SkSpan.1) align 8, %class.SkSpan.2* nocapture readonly byval(%class.SkSpan.2) align 8) unnamed_addr #0 align 2 {
  %10 = ptrtoint %struct.SkPoint* %2 to i64
  %11 = ptrtoint i16* %4 to i64
  %12 = bitcast %class.SkGlyphRun* %0 to i64*
  store i64 %11, i64* %12, align 8, !alias.scope !2
  %13 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tuple_leaf.0"* %13 to i64*
  store i64 %10, i64* %14, align 8, !alias.scope !2
  %15 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 1
  store i64 %5, i64* %15, align 8, !alias.scope !2
  %16 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 1
  %17 = bitcast %class.SkSpan* %16 to i8*
  %18 = bitcast %class.SkSpan* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 2
  %20 = bitcast %class.SkSpan.1* %19 to i8*
  %21 = bitcast %class.SkSpan.1* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3
  %23 = bitcast %class.SkSpan.2* %22 to i8*
  %24 = bitcast %class.SkSpan.2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 0, i32 0
  %26 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %27 = load %class.SkTypeface*, %class.SkTypeface** %26, align 8
  %28 = icmp eq %class.SkTypeface* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %9, %29
  store %class.SkTypeface* %27, %class.SkTypeface** %25, align 8
  %33 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 1
  %34 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %35 = bitcast float* %33 to i8*
  %36 = bitcast float* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 15, i1 false) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkGlyphRunC2ERKS_RK6SkFont(%class.SkGlyphRun* nocapture, %class.SkGlyphRun* nocapture readonly dereferenceable(96), %class.SkFont* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkGlyphRun* %0 to i8*
  %5 = bitcast %class.SkGlyphRun* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 1
  %8 = bitcast %class.SkSpan* %6 to i8*
  %9 = bitcast %class.SkSpan* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 2
  %12 = bitcast %class.SkSpan.1* %10 to i8*
  %13 = bitcast %class.SkSpan.1* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3
  %15 = bitcast %class.SkSpan.2* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  %16 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 0, i32 0
  %18 = load %class.SkTypeface*, %class.SkTypeface** %17, align 8
  %19 = icmp eq %class.SkTypeface* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %3, %20
  store %class.SkTypeface* %18, %class.SkTypeface** %16, align 8
  %24 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 1
  %25 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 1
  %26 = bitcast float* %24 to i8*
  %27 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 15, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <4 x float>, align 16
  %6 = bitcast <4 x float>* %5 to { <2 x float>, <2 x float> }*
  %7 = bitcast <4 x float>* %5 to %struct.SkRect*
  %8 = alloca <4 x float>, align 16
  %9 = bitcast <4 x float>* %8 to { <2 x float>, <2 x float> }*
  %10 = bitcast <4 x float>* %8 to %struct.SkRect*
  %11 = alloca %class.SkStrikeSpec, align 8
  %12 = alloca %class.SkBulkGlyphMetrics, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = alloca %class.SkMatrix, align 4
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca %struct.SkRSXform, align 4
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %struct.SkRect*
  %20 = alloca { <2 x float>, <2 x float> }, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %20 to %struct.SkRect*
  %22 = alloca %struct.SkRSXform, align 4
  %23 = alloca <2 x i64>, align 16
  %24 = bitcast <2 x i64>* %23 to %struct.SkRect*
  %25 = alloca %class.SkMatrix, align 16
  %26 = bitcast <4 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4
  %28 = tail call { <2 x float>, <2 x float> } @_ZN10SkFontPriv13GetFontBoundsERK6SkFont(%class.SkFont* dereferenceable(24) %27) #13
  %29 = bitcast <4 x float>* %8 to <2 x float>*
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 0
  store <2 x float> %30, <2 x float>* %29, align 16
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %32 = extractvalue { <2 x float>, <2 x float> } %28, 1
  store <2 x float> %32, <2 x float>* %31, align 8
  %33 = extractelement <2 x float> %30, i32 0
  %34 = extractelement <2 x float> %32, i32 0
  %35 = fcmp olt float %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %2
  %37 = extractelement <2 x float> %32, i32 1
  %38 = extractelement <2 x float> %30, i32 1
  %39 = fcmp uge float %38, %37
  br i1 %39, label %40, label %259

40:                                               ; preds = %2, %36
  %41 = bitcast %class.SkStrikeSpec* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %41) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_.strikeSpec to i8*), i64 160, i1 false)
  call void @_ZN12SkStrikeSpec17MakeCanonicalizedERK6SkFontPK7SkPaint(%class.SkStrikeSpec* nonnull sret %11, %class.SkFont* dereferenceable(24) %27, %class.SkPaint* %1) #13
  %42 = bitcast %class.SkBulkGlyphMetrics* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %42) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 184, i1 false)
  call void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics* nonnull %12, %class.SkStrikeSpec* nonnull dereferenceable(160) %11) #13
  %43 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics* nonnull %12, i16* %44, i64 %46) #13
  %48 = extractvalue { %class.SkGlyph**, i64 } %47, 0
  %49 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  %52 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 4
  %53 = load float, float* %52, align 8
  %54 = bitcast <4 x float>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 16, i1 false)
  %55 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = load %struct.SkPoint*, %struct.SkPoint** %55, align 8
  %57 = load i64, i64* %45, align 8
  br i1 %51, label %58, label %105

58:                                               ; preds = %40
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %183, label %60

60:                                               ; preds = %58
  %61 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  br label %64

64:                                               ; preds = %60, %102
  %65 = phi i64 [ 0, %60 ], [ %103, %102 ]
  %66 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %48, i64 %65
  %67 = load %class.SkGlyph*, %class.SkGlyph** %66, align 8
  %68 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %67, i64 0, i32 3
  %69 = load i16, i16* %68, align 2
  %70 = sitofp i16 %69 to float
  %71 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %67, i64 0, i32 2
  %72 = load i16, i16* %71, align 4
  %73 = sitofp i16 %72 to float
  %74 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %67, i64 0, i32 0
  %75 = load i16, i16* %74, align 8
  %76 = uitofp i16 %75 to float
  %77 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %67, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  %79 = uitofp i16 %78 to float
  %80 = fadd float %70, %76
  %81 = fadd float %73, %79
  %82 = fcmp ule float %80, %70
  %83 = fcmp ule float %81, %73
  %84 = or i1 %82, %83
  br i1 %84, label %102, label %85

85:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #13
  %86 = fmul float %53, %70
  %87 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 %65, i32 0
  %88 = load float, float* %87, align 4
  %89 = fadd float %86, %88
  %90 = fmul float %53, %73
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 %65, i32 1
  %92 = load float, float* %91, align 4
  %93 = fadd float %90, %92
  %94 = fmul float %53, %80
  %95 = fadd float %94, %88
  %96 = fmul float %53, %81
  %97 = fadd float %96, %92
  %98 = insertelement <2 x float> undef, float %89, i32 0
  %99 = insertelement <2 x float> %98, float %93, i32 1
  %100 = insertelement <2 x float> undef, float %95, i32 0
  %101 = insertelement <2 x float> %100, float %97, i32 1
  store <2 x float> %99, <2 x float>* %62, align 8
  store <2 x float> %101, <2 x float>* %63, align 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #13
  br label %102

102:                                              ; preds = %64, %85
  %103 = add nuw i64 %65, 1
  %104 = icmp eq i64 %103, %57
  br i1 %104, label %183, label %64

105:                                              ; preds = %40
  %106 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3, i32 0
  %107 = load %struct.SkPoint*, %struct.SkPoint** %106, align 8, !noalias !7
  %108 = icmp eq i64 %57, 0
  br i1 %108, label %183, label %109

109:                                              ; preds = %105
  %110 = bitcast %class.SkMatrix* %15 to i8*
  %111 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %112 = bitcast %class.SkMatrix* %16 to i8*
  %113 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %114 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %116 = bitcast %struct.SkRSXform* %17 to i8*
  %117 = bitcast %struct.SkRSXform* %17 to i32*
  %118 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %17, i64 0, i32 1
  %119 = bitcast float* %118 to i32*
  %120 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %17, i64 0, i32 2
  %121 = bitcast float* %120 to i32*
  %122 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %17, i64 0, i32 3
  %123 = bitcast float* %122 to i32*
  %124 = bitcast <2 x i64>* %18 to i8*
  %125 = bitcast { <2 x float>, <2 x float> }* %20 to i8*
  %126 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 0
  %127 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 1
  %128 = bitcast <2 x i64>* %3 to i8*
  %129 = bitcast <2 x i64>* %3 to %struct.SkRect*
  %130 = bitcast %class.SkMatrix* %16 to <4 x float>*
  %131 = bitcast float* %113 to <4 x float>*
  br label %132

132:                                              ; preds = %109, %180
  %133 = phi i64 [ 0, %109 ], [ %181, %180 ]
  %134 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %48, i64 %133
  %135 = load %class.SkGlyph*, %class.SkGlyph** %134, align 8
  %136 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %135, i64 0, i32 0
  %137 = load i16, i16* %136, align 8
  %138 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %135, i64 0, i32 1
  %139 = load i16, i16* %138, align 2
  %140 = icmp eq i16 %137, 0
  %141 = icmp eq i16 %139, 0
  %142 = or i1 %140, %141
  br i1 %142, label %180, label %143

143:                                              ; preds = %132
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %107, i64 %133
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 %133
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %110, i8 -1, i64 36, i1 false)
  store i32 -1431655766, i32* %111, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %112) #13
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %130, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %131, align 16
  store float 1.000000e+00, float* %114, align 16
  store i32 16, i32* %115, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  %146 = bitcast %struct.SkPoint* %145 to i32*
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %117, align 4
  %148 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 %133, i32 1
  %149 = bitcast float* %148 to i32*
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %119, align 4
  %151 = bitcast %struct.SkPoint* %144 to i32*
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %121, align 4
  %153 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %107, i64 %133, i32 1
  %154 = bitcast float* %153 to i32*
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %123, align 4
  %156 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %16, %struct.SkRSXform* nonnull dereferenceable(16) %17) #13
  %157 = bitcast %class.SkMatrix* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %110, i8* align 4 %157, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %112) #13
  %158 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %15, float %53, float %53) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #13
  %159 = load %class.SkGlyph*, %class.SkGlyph** %134, align 8
  %160 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %159, i64 0, i32 3
  %161 = load i16, i16* %160, align 2
  %162 = sitofp i16 %161 to float
  %163 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %159, i64 0, i32 2
  %164 = load i16, i16* %163, align 4
  %165 = sitofp i16 %164 to float
  %166 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %159, i64 0, i32 0
  %167 = load i16, i16* %166, align 8
  %168 = uitofp i16 %167 to float
  %169 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %159, i64 0, i32 1
  %170 = load i16, i16* %169, align 2
  %171 = uitofp i16 %170 to float
  %172 = insertelement <2 x float> undef, float %162, i32 0
  %173 = insertelement <2 x float> %172, float %165, i32 1
  %174 = fadd float %162, %168
  %175 = insertelement <2 x float> undef, float %174, i32 0
  %176 = fadd float %165, %171
  %177 = insertelement <2 x float> %175, float %176, i32 1
  store <2 x float> %173, <2 x float>* %126, align 8
  store <2 x float> %177, <2 x float>* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %128, i8 -1, i64 16, i1 false) #13
  %178 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %15, %struct.SkRect* nonnull %129, %struct.SkRect* nonnull dereferenceable(16) %21, i32 1) #13
  %179 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128)
  store <2 x i64> %179, <2 x i64>* %18, align 16
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #13
  br label %180

180:                                              ; preds = %132, %143
  %181 = add nuw i64 %133, 1
  %182 = icmp eq i64 %181, %57
  br i1 %182, label %183, label %132

183:                                              ; preds = %180, %102, %105, %58
  %184 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %12, i64 0, i32 1, i32 0
  %185 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %184, align 8
  %186 = icmp eq %"class.SkStrikeCache::Strike"* %185, null
  br i1 %186, label %197, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %185, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 -1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %197

191:                                              ; preds = %187
  %192 = bitcast %"class.SkStrikeCache::Strike"* %185 to %class.SkRefCntBase*
  %193 = bitcast %"class.SkStrikeCache::Strike"* %185 to void (%class.SkRefCntBase*)***
  %194 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %193, align 8
  %195 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %194, i64 2
  %196 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %195, align 8
  call void %196(%class.SkRefCntBase* nonnull %192) #13
  br label %197

197:                                              ; preds = %191, %187, %183
  %198 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %12, i64 0, i32 0, i32 1
  %199 = load %class.SkGlyph**, %class.SkGlyph*** %198, align 8
  %200 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %12, i64 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %199, i64 %202
  br label %204

204:                                              ; preds = %204, %197
  %205 = phi %class.SkGlyph** [ %203, %197 ], [ %207, %204 ]
  %206 = icmp ugt %class.SkGlyph** %205, %199
  %207 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %205, i64 -1
  br i1 %206, label %204, label %208

208:                                              ; preds = %204
  %209 = bitcast %class.SkGlyph** %199 to i8*
  %210 = icmp eq i32 %201, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %208
  %212 = icmp sgt i32 %201, 20
  br i1 %212, label %213, label %214

213:                                              ; preds = %211
  call void @_Z7sk_freePv(i8* %209) #13
  br label %214

214:                                              ; preds = %213, %211
  store %class.SkGlyph** null, %class.SkGlyph*** %198, align 8
  store i32 0, i32* %200, align 8
  br label %215

215:                                              ; preds = %208, %214
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %42) #13
  %216 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 3, i32 0
  %217 = load %class.SkTypeface*, %class.SkTypeface** %216, align 8
  %218 = icmp eq %class.SkTypeface* %217, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %217, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw add i32* %220, i32 -1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = bitcast %class.SkTypeface* %217 to %class.SkRefCntBase*
  %225 = bitcast %class.SkTypeface* %217 to void (%class.SkRefCntBase*)***
  %226 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %225, align 8
  %227 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %226, i64 2
  %228 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %227, align 8
  call void %228(%class.SkRefCntBase* nonnull %224) #13
  br label %229

229:                                              ; preds = %223, %219, %215
  %230 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 2, i32 0
  %231 = load %class.SkPathEffect*, %class.SkPathEffect** %230, align 8
  %232 = icmp eq %class.SkPathEffect* %231, null
  br i1 %232, label %243, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %231, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw add i32* %234, i32 -1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %243

237:                                              ; preds = %233
  %238 = bitcast %class.SkPathEffect* %231 to %class.SkRefCntBase*
  %239 = bitcast %class.SkPathEffect* %231 to void (%class.SkRefCntBase*)***
  %240 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, i64 2
  %242 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, align 8
  call void %242(%class.SkRefCntBase* nonnull %238) #13
  br label %243

243:                                              ; preds = %237, %233, %229
  %244 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 1, i32 0
  %245 = load %class.SkMaskFilter*, %class.SkMaskFilter** %244, align 8
  %246 = icmp eq %class.SkMaskFilter* %245, null
  br i1 %246, label %257, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %245, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = atomicrmw add i32* %248, i32 -1 acq_rel
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %257

251:                                              ; preds = %247
  %252 = bitcast %class.SkMaskFilter* %245 to %class.SkRefCntBase*
  %253 = bitcast %class.SkMaskFilter* %245 to void (%class.SkRefCntBase*)***
  %254 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %253, align 8
  %255 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %254, i64 2
  %256 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %255, align 8
  call void %256(%class.SkRefCntBase* nonnull %252) #13
  br label %257

257:                                              ; preds = %243, %247, %251
  %258 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %258) #13
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %41) #13
  br label %321

259:                                              ; preds = %36
  %260 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = icmp eq i64 %261, 0
  %263 = bitcast <4 x float>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %263, i8 -1, i64 16, i1 false)
  br i1 %262, label %264, label %274

264:                                              ; preds = %259
  %265 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %266 = load %struct.SkPoint*, %struct.SkPoint** %265, align 8
  %267 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i32
  %270 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %7, %struct.SkPoint* %266, i32 %269) #13
  %271 = load <4 x float>, <4 x float>* %8, align 16
  %272 = load <4 x float>, <4 x float>* %5, align 16
  %273 = fadd <4 x float> %271, %272
  store <4 x float> %273, <4 x float>* %5, align 16
  br label %321

274:                                              ; preds = %259
  %275 = bitcast <4 x float>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %275, i8 0, i64 16, i1 false) #13
  %276 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %277 = load %struct.SkPoint*, %struct.SkPoint** %276, align 8
  %278 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 3, i32 0
  %281 = load %struct.SkPoint*, %struct.SkPoint** %280, align 8, !noalias !12
  %282 = icmp eq i64 %279, 0
  br i1 %282, label %321, label %283

283:                                              ; preds = %274
  %284 = bitcast %struct.SkRSXform* %22 to i8*
  %285 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %22, i64 0, i32 1
  %286 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %22, i64 0, i32 2
  %287 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %22, i64 0, i32 3
  %288 = bitcast %struct.SkRSXform* %22 to i32*
  %289 = bitcast float* %285 to i32*
  %290 = bitcast float* %286 to i32*
  %291 = bitcast float* %287 to i32*
  %292 = bitcast <2 x i64>* %23 to i8*
  %293 = bitcast %class.SkMatrix* %25 to i8*
  %294 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 0, i64 4
  %295 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 0, i64 8
  %296 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 1
  %297 = bitcast <2 x i64>* %4 to i8*
  %298 = bitcast <2 x i64>* %4 to %struct.SkRect*
  %299 = bitcast %struct.SkRSXform* %22 to i8*
  %300 = bitcast %class.SkMatrix* %25 to <4 x float>*
  %301 = bitcast float* %294 to <4 x float>*
  br label %302

302:                                              ; preds = %283, %302
  %303 = phi i64 [ 0, %283 ], [ %319, %302 ]
  %304 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %277, i64 %303
  %305 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %281, i64 %303
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %284) #13
  %306 = bitcast %struct.SkPoint* %304 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %299, i8 -1, i64 16, i1 false)
  %307 = load i32, i32* %306, align 4
  store i32 %307, i32* %288, align 4
  %308 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %277, i64 %303, i32 1
  %309 = bitcast float* %308 to i32*
  %310 = load i32, i32* %309, align 4
  store i32 %310, i32* %289, align 4
  %311 = bitcast %struct.SkPoint* %305 to i32*
  %312 = load i32, i32* %311, align 4
  store i32 %312, i32* %290, align 4
  %313 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %281, i64 %303, i32 1
  %314 = bitcast float* %313 to i32*
  %315 = load i32, i32* %314, align 4
  store i32 %315, i32* %291, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %292) #13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %293) #13
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %300, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %301, align 16
  store float 1.000000e+00, float* %295, align 16
  store i32 16, i32* %296, align 4
  %316 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %25, %struct.SkRSXform* nonnull dereferenceable(16) %22) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %297, i8 -1, i64 16, i1 false) #13
  %317 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %316, %struct.SkRect* nonnull %298, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #13
  %318 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297)
  store <2 x i64> %318, <2 x i64>* %23, align 16
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %24) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %293) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %292) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %284) #13
  %319 = add nuw i64 %303, 1
  %320 = icmp eq i64 %319, %279
  br i1 %320, label %321, label %302

321:                                              ; preds = %302, %274, %264, %257
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %322 = bitcast <4 x float>* %5 to <2 x float>*
  %323 = load <2 x float>, <2 x float>* %322, align 16
  %324 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %323, 0
  %325 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %326 = load <2 x float>, <2 x float>* %325, align 8
  %327 = insertvalue { <2 x float>, <2 x float> } %324, <2 x float> %326, 1
  ret { <2 x float>, <2 x float> } %327
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { <2 x float>, <2 x float> } @_ZN10SkFontPriv13GetFontBoundsERK6SkFont(%class.SkFont* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN12SkStrikeSpec17MakeCanonicalizedERK6SkFontPK7SkPaint(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #2

declare { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics*, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix*, %struct.SkRSXform* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkGlyphRunListC2Ev(%class.SkGlyphRunList* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkGlyphRunList* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14SkGlyphRunListC2EPK10SkTextBlob6SkRect7SkPoint6SkSpanIK10SkGlyphRunE(%class.SkGlyphRunList* nocapture, %class.SkTextBlob*, <2 x float>, <2 x float>, <2 x float>, %class.SkGlyphRun*, i64) unnamed_addr #3 align 2 {
  %8 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 0
  store %class.SkGlyphRun* %5, %class.SkGlyphRun** %8, align 8
  %9 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 1
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 1
  store %class.SkTextBlob* %1, %class.SkTextBlob** %10, align 8
  %11 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 2
  %12 = bitcast %struct.SkRect* %11 to <2 x float>*
  store <2 x float> %2, <2 x float>* %12, align 8
  %13 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 2, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  store <2 x float> %3, <2 x float>* %14, align 8
  %15 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 3
  %16 = bitcast %struct.SkPoint* %15 to <2 x float>*
  store <2 x float> %4, <2 x float>* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkGlyphRunListC2ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nocapture, %class.SkGlyphRun* dereferenceable(96), %struct.SkRect* nocapture readonly dereferenceable(16), <2 x float>) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 0
  store %class.SkGlyphRun* %1, %class.SkGlyphRun** %5, align 8
  %6 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 1
  store i64 1, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 1
  store %class.SkTextBlob* null, %class.SkTextBlob** %7, align 8
  %8 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 2
  %9 = bitcast %struct.SkRect* %8 to i8*
  %10 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 3
  %12 = bitcast %struct.SkPoint* %11 to <2 x float>*
  store <2 x float> %3, <2 x float>* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK14SkGlyphRunList8uniqueIDEv(%class.SkGlyphRunList* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 1
  %3 = load %class.SkTextBlob*, %class.SkTextBlob** %2, align 8
  %4 = icmp eq %class.SkTextBlob* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %3, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i64 [ %8, %5 ], [ 0, %1 ]
  ret i64 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14SkGlyphRunList10anyRunsLCDEv(%class.SkGlyphRunList* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkGlyphRun*, %class.SkGlyphRun** %2, align 8
  %4 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %3, i64 %5
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %class.SkGlyphRun* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %1, %8
  %11 = phi %class.SkGlyphRun* [ %15, %8 ], [ %3, %1 ]
  %12 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %11, i64 0, i32 4, i32 5
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 2
  %15 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %11, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %10, %1
  %17 = phi i1 [ false, %1 ], [ true, %10 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK14SkGlyphRunList36temporaryShuntBlobNotifyAddedToCacheEj(%class.SkGlyphRunList* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %0, i64 0, i32 1
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %5 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkGlyphRunList8makeBlobEv(%class.sk_sp.79* noalias sret, %class.SkGlyphRunList* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkTextBlobBuilder, align 8
  %4 = bitcast %class.SkTextBlobBuilder* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZNK14SkGlyphRunList8makeBlobEv.builder to i8*), i64 88, i1 false)
  call void @_ZN17SkTextBlobBuilderC1Ev(%class.SkTextBlobBuilder* nonnull %3) #13
  %5 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkGlyphRun*, %class.SkGlyphRun** %5, align 8
  %7 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %6, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %125, %2
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.79* sret %0, %class.SkTextBlobBuilder* nonnull %3) #13
  call void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #13
  ret void

12:                                               ; preds = %2, %125
  %13 = phi %class.SkGlyphRun* [ %132, %125 ], [ %6, %2 ]
  %14 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 3, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %62

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 4
  %22 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  br i1 %20, label %25, label %32

25:                                               ; preds = %17
  %26 = call dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder11allocRunPosERK6SkFontiPK6SkRect(%class.SkTextBlobBuilder* nonnull %3, %class.SkFont* dereferenceable(24) %21, i32 %24, %struct.SkRect* null) #13
  %27 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %26, i64 0, i32 1
  %30 = bitcast float** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %54

32:                                               ; preds = %17
  %33 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 1, i32 0
  %34 = trunc i64 %19 to i32
  %35 = call dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunTextPosERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder* nonnull %3, %class.SkFont* dereferenceable(24) %21, i32 %24, i32 %34, %struct.SkRect* null) #13
  %36 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %35, i64 0, i32 1
  %39 = bitcast float** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %35, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %35, i64 0, i32 3
  %44 = bitcast i32** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = load i8*, i8** %33, align 8
  %47 = load i64, i64* %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 2, i32 0
  %49 = bitcast i32** %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 2, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = shl i64 %52, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %50, i64 %53, i1 false)
  br label %54

54:                                               ; preds = %32, %25
  %55 = phi i8* [ %28, %25 ], [ %37, %32 ]
  %56 = phi i8* [ %31, %25 ], [ %40, %32 ]
  %57 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = bitcast %struct.SkPoint** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i64, i64* %22, align 8
  %61 = shl i64 %60, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %59, i64 %61, i1 false)
  br label %125

62:                                               ; preds = %12
  %63 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 3, i32 0
  %64 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 4
  %65 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = call dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunRSXformERK6SkFonti(%class.SkTextBlobBuilder* nonnull %3, %class.SkFont* dereferenceable(24) %64, i32 %67) #13
  %69 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %68, i64 0, i32 1
  %72 = bitcast float** %71 to %struct.SkRSXform**
  %73 = load %struct.SkRSXform*, %struct.SkRSXform** %72, align 8
  %74 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = load %struct.SkPoint*, %struct.SkPoint** %74, align 8
  %76 = load i64, i64* %65, align 8
  %77 = load %struct.SkPoint*, %struct.SkPoint** %63, align 8
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %125, label %79

79:                                               ; preds = %62
  %80 = and i64 %76, 1
  %81 = icmp eq i64 %76, 1
  br i1 %81, label %111, label %82

82:                                               ; preds = %79
  %83 = sub i64 %76, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %108, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %109, %84 ]
  %87 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %85
  %88 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 %85, i32 0
  %89 = bitcast float* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %75, i64 %85, i32 0
  %92 = bitcast float* %91 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = bitcast %struct.SkRSXform* %87 to i64*
  store i64 %90, i64* %94, align 4
  %95 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %85, i32 2
  %96 = bitcast float* %95 to i64*
  store i64 %93, i64* %96, align 4
  %97 = or i64 %85, 1
  %98 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %97
  %99 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 %97, i32 0
  %100 = bitcast float* %99 to i64*
  %101 = load i64, i64* %100, align 4
  %102 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %75, i64 %97, i32 0
  %103 = bitcast float* %102 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = bitcast %struct.SkRSXform* %98 to i64*
  store i64 %101, i64* %105, align 4
  %106 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %97, i32 2
  %107 = bitcast float* %106 to i64*
  store i64 %104, i64* %107, align 4
  %108 = add nuw i64 %85, 2
  %109 = add i64 %86, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %84

111:                                              ; preds = %84, %79
  %112 = phi i64 [ 0, %79 ], [ %108, %84 ]
  %113 = icmp eq i64 %80, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %112
  %116 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 %112, i32 0
  %117 = bitcast float* %116 to i64*
  %118 = load i64, i64* %117, align 4
  %119 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %75, i64 %112, i32 0
  %120 = bitcast float* %119 to i64*
  %121 = load i64, i64* %120, align 4
  %122 = bitcast %struct.SkRSXform* %115 to i64*
  store i64 %118, i64* %122, align 4
  %123 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %73, i64 %112, i32 2
  %124 = bitcast float* %123 to i64*
  store i64 %121, i64* %124, align 4
  br label %125

125:                                              ; preds = %114, %111, %62, %54
  %126 = phi i8* [ %55, %54 ], [ %70, %62 ], [ %70, %111 ], [ %70, %114 ]
  %127 = bitcast %class.SkGlyphRun* %13 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = shl i64 %130, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %126, i8* align 2 %128, i64 %131, i1 false)
  %132 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %13, i64 1
  %133 = icmp eq %class.SkGlyphRun* %132, %9
  br i1 %133, label %11, label %12
}

declare void @_ZN17SkTextBlobBuilderC1Ev(%class.SkTextBlobBuilder*) unnamed_addr #2

declare dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder11allocRunPosERK6SkFontiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, %struct.SkRect*) local_unnamed_addr #2

declare dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunTextPosERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, i32, %struct.SkRect*) local_unnamed_addr #2

declare dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunRSXformERK6SkFonti(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.79* sret, %class.SkTextBlobBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18textToGlyphRunListERK6SkFontRK7SkPaintPKvm7SkPoint14SkTextEncoding(%class.SkGlyphRunBuilder*, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), i8*, i64, <2 x float>, i32) local_unnamed_addr #4 align 2 {
  %8 = alloca %class.SkSpan.2, align 8
  %9 = alloca %class.SkSpan, align 8
  %10 = alloca %class.SkSpan.1, align 8
  %11 = alloca %class.SkSpan.9, align 8
  %12 = alloca %class.SkSpan.2, align 8
  %13 = alloca %class.SkSpan.2, align 8
  %14 = alloca %class.SkSpan.1, align 8
  %15 = alloca %class.SkSpan, align 8
  %16 = icmp eq i32 %6, 3
  br i1 %16, label %47, label %17

17:                                               ; preds = %7
  %18 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %1, i8* %3, i64 %4, i32 %6, i16* null, i32 0) #13
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %50

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 6
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 6, i32 0, i32 1
  %24 = bitcast i16** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.104"* %21 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 1
  %30 = icmp ult i64 %29, %22
  %31 = inttoptr i64 %27 to i16*
  br i1 %30, label %32, label %36

32:                                               ; preds = %20
  %33 = sub nsw i64 %22, %29
  tail call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector.104"* %21, i64 %33) #13
  %34 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %21, i64 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  br label %40

36:                                               ; preds = %20
  %37 = icmp ugt i64 %29, %22
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = getelementptr inbounds i16, i16* %31, i64 %22
  store i16* %39, i16** %23, align 8
  br label %40

40:                                               ; preds = %38, %36, %32
  %41 = phi i16* [ %35, %32 ], [ %31, %36 ], [ %31, %38 ]
  %42 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %1, i8* %3, i64 %4, i32 %6, i16* %41, i32 %18) #13
  %43 = load i64, i64* %26, align 8
  %44 = load i64, i64* %24, align 8
  %45 = sub i64 %44, %43
  %46 = ashr exact i64 %45, 1
  br label %50

47:                                               ; preds = %7
  %48 = lshr i64 %4, 1
  %49 = ptrtoint i8* %3 to i64
  br label %50

50:                                               ; preds = %17, %40, %47
  %51 = phi i64 [ %48, %47 ], [ %46, %40 ], [ 0, %17 ]
  %52 = phi i64 [ %49, %47 ], [ %43, %40 ], [ 0, %17 ]
  %53 = inttoptr i64 %52 to i16*
  %54 = trunc i64 %51 to i32
  tail call void @_ZN17SkGlyphRunBuilder14prepareBuffersEii(%class.SkGlyphRunBuilder* %0, i32 %54, i32 0)
  %55 = icmp eq i64 %51, 0
  br i1 %55, label %114, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %58 = load %struct.SkPoint*, %struct.SkPoint** %57, align 8
  %59 = tail call fastcc { %struct.SkPoint*, i64 } @_ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_(%class.SkFont* dereferenceable(24) %1, i16* %53, i64 %51, <2 x float> zeroinitializer, %struct.SkPoint* %58)
  %60 = extractvalue { %struct.SkPoint*, i64 } %59, 0
  %61 = extractvalue { %struct.SkPoint*, i64 } %59, 1
  %62 = bitcast %class.SkSpan* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast %class.SkSpan.1* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63)
  %64 = bitcast %class.SkSpan.2* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  %65 = bitcast %class.SkSpan.9* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  %66 = bitcast %class.SkSpan.2* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 16, i1 false)
  %67 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %11, i64 0, i32 0
  store i16* %53, i16** %67, align 8
  %68 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %11, i64 0, i32 1
  store i64 %51, i64* %68, align 8
  %69 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %12, i64 0, i32 0
  store %struct.SkPoint* %60, %struct.SkPoint** %69, align 8
  %70 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %12, i64 0, i32 1
  store i64 %61, i64* %70, align 8
  %71 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %72 = load %class.SkGlyphRun*, %class.SkGlyphRun** %71, align 8
  %73 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %74 = load %class.SkGlyphRun*, %class.SkGlyphRun** %73, align 8
  %75 = icmp ult %class.SkGlyphRun* %72, %74
  br i1 %75, label %76, label %106

76:                                               ; preds = %56
  %77 = ptrtoint %struct.SkPoint* %60 to i64
  %78 = bitcast %class.SkSpan* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78)
  %79 = bitcast %class.SkSpan.1* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %62, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* nonnull align 8 %63, i64 16, i1 false) #13
  %80 = bitcast %class.SkSpan.2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* nonnull align 8 %64, i64 16, i1 false) #13
  %81 = bitcast %class.SkGlyphRun* %72 to i64*
  store i64 %52, i64* %81, align 8, !alias.scope !17
  %82 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 0, i32 0, i32 0, i32 1
  %83 = bitcast %"class.std::__1::__tuple_leaf.0"* %82 to i64*
  store i64 %77, i64* %83, align 8, !alias.scope !17
  %84 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 0, i32 1
  store i64 %51, i64* %84, align 8, !alias.scope !17
  %85 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 1
  %86 = bitcast %class.SkSpan* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %78, i64 16, i1 false) #13
  %87 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 2
  %88 = bitcast %class.SkSpan.1* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %79, i64 16, i1 false) #13
  %89 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 3
  %90 = bitcast %class.SkSpan.2* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %80, i64 16, i1 false) #13
  %91 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 4, i32 0, i32 0
  %92 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %93 = load %class.SkTypeface*, %class.SkTypeface** %92, align 8
  %94 = icmp eq %class.SkTypeface* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %76
  %96 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 1 monotonic
  br label %98

98:                                               ; preds = %95, %76
  store %class.SkTypeface* %93, %class.SkTypeface** %91, align 8
  %99 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 0, i32 4, i32 1
  %100 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %101 = bitcast float* %99 to i8*
  %102 = bitcast float* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 15, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79)
  %103 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %72, i64 1
  %104 = ptrtoint %class.SkGlyphRun* %103 to i64
  %105 = bitcast %class.SkGlyphRun** %71 to i64*
  store i64 %104, i64* %105, align 8
  br label %108

106:                                              ; preds = %56
  %107 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorI10SkGlyphRunNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRK6SkFontR6SkSpanIK7SkPointERS9_IKtERS9_IKcERS9_IKjESD_EEEvDpOT_(%"class.std::__1::vector.97"* %107, %class.SkFont* dereferenceable(24) %1, %class.SkSpan.2* nonnull dereferenceable(16) %12, %class.SkSpan.9* nonnull dereferenceable(16) %11, %class.SkSpan* nonnull dereferenceable(16) %15, %class.SkSpan.1* nonnull dereferenceable(16) %14, %class.SkSpan.2* nonnull dereferenceable(16) %13) #13
  br label %108

108:                                              ; preds = %98, %106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66)
  %109 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %110 = load %class.SkGlyphRun*, %class.SkGlyphRun** %109, align 8
  %111 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* %110, %class.SkPaint* dereferenceable(72) %2)
  %112 = extractvalue { <2 x float>, <2 x float> } %111, 0
  %113 = extractvalue { <2 x float>, <2 x float> } %111, 1
  br label %114

114:                                              ; preds = %108, %50
  %115 = phi <2 x float> [ zeroinitializer, %50 ], [ %113, %108 ]
  %116 = phi <2 x float> [ zeroinitializer, %50 ], [ %112, %108 ]
  %117 = fadd <2 x float> %116, %5
  %118 = fadd <2 x float> %115, %5
  %119 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5
  %120 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %121 = load %class.SkGlyphRun*, %class.SkGlyphRun** %120, align 8
  %122 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %123 = bitcast %class.SkGlyphRun** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = ptrtoint %class.SkGlyphRun* %121 to i64
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, 96
  %128 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %119, i64 0, i32 0, i32 0
  store %class.SkGlyphRun* %121, %class.SkGlyphRun** %128, align 8
  %129 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 0, i32 1
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 1
  store %class.SkTextBlob* null, %class.SkTextBlob** %130, align 8
  %131 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 2
  %132 = bitcast %struct.SkRect* %131 to <2 x float>*
  store <2 x float> %117, <2 x float>* %132, align 8
  %133 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 2, i32 2
  %134 = bitcast float* %133 to <2 x float>*
  store <2 x float> %118, <2 x float>* %134, align 8
  %135 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 3
  %136 = bitcast %struct.SkPoint* %135 to <2 x float>*
  store <2 x float> %5, <2 x float>* %136, align 8
  ret %class.SkGlyphRunList* %119
}

; Function Attrs: nounwind ssp uwtable
define hidden { i16*, i64 } @_ZN17SkGlyphRunBuilder14textToGlyphIDsERK6SkFontPKvm14SkTextEncoding(%class.SkGlyphRunBuilder*, %class.SkFont* dereferenceable(24), i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 3
  br i1 %6, label %37, label %7

7:                                                ; preds = %5
  %8 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %1, i8* %2, i64 %3, i32 %4, i16* null, i32 0) #13
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 6
  %12 = sext i32 %8 to i64
  %13 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast i16** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.104"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 1
  %20 = icmp ult i64 %19, %12
  %21 = inttoptr i64 %17 to i16*
  br i1 %20, label %22, label %26

22:                                               ; preds = %10
  %23 = sub nsw i64 %12, %19
  tail call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector.104"* %11, i64 %23) #13
  %24 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %11, i64 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  br label %30

26:                                               ; preds = %10
  %27 = icmp ugt i64 %19, %12
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds i16, i16* %21, i64 %12
  store i16* %29, i16** %13, align 8
  br label %30

30:                                               ; preds = %22, %26, %28
  %31 = phi i16* [ %25, %22 ], [ %21, %26 ], [ %21, %28 ]
  %32 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %1, i8* %2, i64 %3, i32 %4, i16* %31, i32 %8) #13
  %33 = load i64, i64* %16, align 8
  %34 = load i64, i64* %14, align 8
  %35 = sub i64 %34, %33
  %36 = ashr exact i64 %35, 1
  br label %40

37:                                               ; preds = %5
  %38 = lshr i64 %3, 1
  %39 = ptrtoint i8* %2 to i64
  br label %40

40:                                               ; preds = %7, %30, %37
  %41 = phi i64 [ %38, %37 ], [ %36, %30 ], [ 0, %7 ]
  %42 = phi i64 [ %39, %37 ], [ %33, %30 ], [ 0, %7 ]
  %43 = inttoptr i64 %42 to i16*
  %44 = insertvalue { i16*, i64 } undef, i16* %43, 0
  %45 = insertvalue { i16*, i64 } %44, i64 %41, 1
  ret { i16*, i64 } %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkGlyphRunBuilder14prepareBuffersEii(%class.SkGlyphRunBuilder* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %1
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  store i32 %1, i32* %4, align 8
  %8 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 1
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = sext i32 %1 to i64
  %12 = tail call i8* @_Z15sk_malloc_throwmm(i64 %11, i64 8) #13
  %13 = bitcast i8* %12 to %struct.SkPoint*
  br label %14

14:                                               ; preds = %10, %7
  %15 = phi %struct.SkPoint* [ %13, %10 ], [ null, %7 ]
  %16 = getelementptr inbounds %class.SkAutoTMalloc.93, %class.SkAutoTMalloc.93* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %class.SkAutoTMalloc.93* %8 to i64*
  %18 = load i64, i64* %17, align 8
  store %struct.SkPoint* %15, %struct.SkPoint** %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = inttoptr i64 %18 to i8*
  tail call void @_Z7sk_freePv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %14, %3
  %23 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, %2
  br i1 %25, label %26, label %41

26:                                               ; preds = %22
  store i32 %2, i32* %23, align 8
  %27 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 3
  %28 = icmp eq i32 %2, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = sext i32 %2 to i64
  %31 = tail call i8* @_Z15sk_malloc_throwmm(i64 %30, i64 8) #13
  %32 = bitcast i8* %31 to %struct.SkPoint*
  br label %33

33:                                               ; preds = %29, %26
  %34 = phi %struct.SkPoint* [ %32, %29 ], [ null, %26 ]
  %35 = getelementptr inbounds %class.SkAutoTMalloc.93, %class.SkAutoTMalloc.93* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %class.SkAutoTMalloc.93* %27 to i64*
  %37 = load i64, i64* %36, align 8
  store %struct.SkPoint* %34, %struct.SkPoint** %35, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = inttoptr i64 %37 to i8*
  tail call void @_Z7sk_freePv(i8* %40) #13
  br label %41

41:                                               ; preds = %39, %33, %22
  %42 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %43 = load %class.SkGlyphRun*, %class.SkGlyphRun** %42, align 8
  %44 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %45 = load %class.SkGlyphRun*, %class.SkGlyphRun** %44, align 8
  %46 = icmp eq %class.SkGlyphRun* %45, %43
  br i1 %46, label %65, label %47

47:                                               ; preds = %41, %63
  %48 = phi %class.SkGlyphRun* [ %49, %63 ], [ %45, %41 ]
  %49 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %48, i64 -1
  %50 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %48, i64 -1, i32 4, i32 0, i32 0
  %51 = load %class.SkTypeface*, %class.SkTypeface** %50, align 8
  %52 = icmp eq %class.SkTypeface* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkTypeface* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkTypeface* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #13
  br label %63

63:                                               ; preds = %57, %53, %47
  %64 = icmp eq %class.SkGlyphRun* %49, %43
  br i1 %64, label %65, label %47

65:                                               ; preds = %63, %41
  store %class.SkGlyphRun* %43, %class.SkGlyphRun** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { %struct.SkPoint*, i64 } @_ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_(%class.SkFont* dereferenceable(24), i16*, i64, <2 x float>, %struct.SkPoint*) unnamed_addr #4 {
  %6 = alloca %class.SkStrikeSpec, align 8
  %7 = alloca %class.SkBulkGlyphMetrics, align 8
  %8 = bitcast %class.SkStrikeSpec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %8) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_.strikeSpec to i8*), i64 160, i1 false)
  call void @_ZN12SkStrikeSpec16MakeWithNoDeviceERK6SkFontPK7SkPaint(%class.SkStrikeSpec* nonnull sret %6, %class.SkFont* dereferenceable(24) %0, %class.SkPaint* null) #13
  %9 = bitcast %class.SkBulkGlyphMetrics* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 184, i1 false)
  call void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics* nonnull %7, %class.SkStrikeSpec* nonnull dereferenceable(160) %6) #13
  %10 = call { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics* nonnull %7, i16* %1, i64 %2) #13
  %11 = extractvalue { %class.SkGlyph**, i64 } %10, 0
  %12 = extractvalue { %class.SkGlyph**, i64 } %10, 1
  %13 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %11, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %5
  %16 = shl nsw i64 %12, 3
  %17 = add i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %15, %22
  %23 = phi %struct.SkPoint* [ %28, %22 ], [ %4, %15 ]
  %24 = phi %class.SkGlyph** [ %34, %22 ], [ %11, %15 ]
  %25 = phi <2 x float> [ %33, %22 ], [ %3, %15 ]
  %26 = phi i64 [ %35, %22 ], [ %20, %15 ]
  %27 = load %class.SkGlyph*, %class.SkGlyph** %24, align 8
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 1
  %29 = bitcast %struct.SkPoint* %23 to <2 x float>*
  store <2 x float> %25, <2 x float>* %29, align 4
  %30 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %27, i64 0, i32 6
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 8
  %33 = fadd <2 x float> %25, %32
  %34 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %24, i64 1
  %35 = add i64 %26, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %22, !llvm.loop !22

37:                                               ; preds = %22, %15
  %38 = phi %struct.SkPoint* [ %4, %15 ], [ %28, %22 ]
  %39 = phi %class.SkGlyph** [ %11, %15 ], [ %34, %22 ]
  %40 = phi <2 x float> [ %3, %15 ], [ %33, %22 ]
  %41 = icmp ult i64 %17, 24
  br i1 %41, label %42, label %120

42:                                               ; preds = %37, %120, %5
  %43 = insertvalue { %struct.SkPoint*, i64 } undef, %struct.SkPoint* %4, 0
  %44 = insertvalue { %struct.SkPoint*, i64 } %43, i64 %2, 1
  %45 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %7, i64 0, i32 1, i32 0
  %46 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %45, align 8
  %47 = icmp eq %"class.SkStrikeCache::Strike"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.SkStrikeCache::Strike"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.SkStrikeCache::Strike"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #13
  br label %58

58:                                               ; preds = %52, %48, %42
  %59 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %7, i64 0, i32 0, i32 1
  %60 = load %class.SkGlyph**, %class.SkGlyph*** %59, align 8
  %61 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %7, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %60, i64 %63
  br label %65

65:                                               ; preds = %65, %58
  %66 = phi %class.SkGlyph** [ %64, %58 ], [ %68, %65 ]
  %67 = icmp ugt %class.SkGlyph** %66, %60
  %68 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %66, i64 -1
  br i1 %67, label %65, label %69

69:                                               ; preds = %65
  %70 = bitcast %class.SkGlyph** %60 to i8*
  %71 = icmp eq i32 %62, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = icmp sgt i32 %62, 20
  br i1 %73, label %74, label %75

74:                                               ; preds = %72
  call void @_Z7sk_freePv(i8* %70) #13
  br label %75

75:                                               ; preds = %74, %72
  store %class.SkGlyph** null, %class.SkGlyph*** %59, align 8
  store i32 0, i32* %61, align 8
  br label %76

76:                                               ; preds = %69, %75
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %9) #13
  %77 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 3, i32 0
  %78 = load %class.SkTypeface*, %class.SkTypeface** %77, align 8
  %79 = icmp eq %class.SkTypeface* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkTypeface* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.SkTypeface* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #13
  br label %90

90:                                               ; preds = %84, %80, %76
  %91 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 2, i32 0
  %92 = load %class.SkPathEffect*, %class.SkPathEffect** %91, align 8
  %93 = icmp eq %class.SkPathEffect* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %92, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %class.SkPathEffect* %92 to %class.SkRefCntBase*
  %100 = bitcast %class.SkPathEffect* %92 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #13
  br label %104

104:                                              ; preds = %98, %94, %90
  %105 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 1, i32 0
  %106 = load %class.SkMaskFilter*, %class.SkMaskFilter** %105, align 8
  %107 = icmp eq %class.SkMaskFilter* %106, null
  br i1 %107, label %118, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %106, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %118

112:                                              ; preds = %108
  %113 = bitcast %class.SkMaskFilter* %106 to %class.SkRefCntBase*
  %114 = bitcast %class.SkMaskFilter* %106 to void (%class.SkRefCntBase*)***
  %115 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, i64 2
  %117 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, align 8
  call void %117(%class.SkRefCntBase* nonnull %113) #13
  br label %118

118:                                              ; preds = %104, %108, %112
  %119 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %119) #13
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %8) #13
  ret { %struct.SkPoint*, i64 } %44

120:                                              ; preds = %37, %120
  %121 = phi %struct.SkPoint* [ %149, %120 ], [ %38, %37 ]
  %122 = phi %class.SkGlyph** [ %155, %120 ], [ %39, %37 ]
  %123 = phi <2 x float> [ %154, %120 ], [ %40, %37 ]
  %124 = load %class.SkGlyph*, %class.SkGlyph** %122, align 8
  %125 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 1
  %126 = bitcast %struct.SkPoint* %121 to <2 x float>*
  store <2 x float> %123, <2 x float>* %126, align 4
  %127 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %124, i64 0, i32 6
  %128 = bitcast float* %127 to <2 x float>*
  %129 = load <2 x float>, <2 x float>* %128, align 8
  %130 = fadd <2 x float> %123, %129
  %131 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %122, i64 1
  %132 = load %class.SkGlyph*, %class.SkGlyph** %131, align 8
  %133 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 2
  %134 = bitcast %struct.SkPoint* %125 to <2 x float>*
  store <2 x float> %130, <2 x float>* %134, align 4
  %135 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %132, i64 0, i32 6
  %136 = bitcast float* %135 to <2 x float>*
  %137 = load <2 x float>, <2 x float>* %136, align 8
  %138 = fadd <2 x float> %130, %137
  %139 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %122, i64 2
  %140 = load %class.SkGlyph*, %class.SkGlyph** %139, align 8
  %141 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 3
  %142 = bitcast %struct.SkPoint* %133 to <2 x float>*
  store <2 x float> %138, <2 x float>* %142, align 4
  %143 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %140, i64 0, i32 6
  %144 = bitcast float* %143 to <2 x float>*
  %145 = load <2 x float>, <2 x float>* %144, align 8
  %146 = fadd <2 x float> %138, %145
  %147 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %122, i64 3
  %148 = load %class.SkGlyph*, %class.SkGlyph** %147, align 8
  %149 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %121, i64 4
  %150 = bitcast %struct.SkPoint* %141 to <2 x float>*
  store <2 x float> %146, <2 x float>* %150, align 4
  %151 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %148, i64 0, i32 6
  %152 = bitcast float* %151 to <2 x float>*
  %153 = load <2 x float>, <2 x float>* %152, align 8
  %154 = fadd <2 x float> %146, %153
  %155 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %122, i64 4
  %156 = icmp eq %class.SkGlyph** %155, %13
  br i1 %156, label %42, label %120
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkGlyphRunBuilder12makeGlyphRunERK6SkFont6SkSpanIKtES3_IK7SkPointES3_IKcES3_IKjES8_(%class.SkGlyphRunBuilder*, %class.SkFont* dereferenceable(24), i16*, i64, %struct.SkPoint*, i64, %class.SkSpan* byval(%class.SkSpan) align 8, %class.SkSpan.1* byval(%class.SkSpan.1) align 8, %class.SkSpan.2* byval(%class.SkSpan.2) align 8) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.SkSpan.2, align 8
  %11 = alloca %class.SkSpan, align 8
  %12 = alloca %class.SkSpan.1, align 8
  %13 = alloca %class.SkSpan.9, align 8
  %14 = alloca %class.SkSpan.2, align 8
  %15 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %13, i64 0, i32 0
  store i16* %2, i16** %15, align 8
  %16 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %13, i64 0, i32 1
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %14, i64 0, i32 0
  store %struct.SkPoint* %4, %struct.SkPoint** %17, align 8
  %18 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %14, i64 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = icmp eq i64 %3, 0
  %20 = ptrtoint %struct.SkPoint* %4 to i64
  %21 = ptrtoint i16* %2 to i64
  br i1 %19, label %62, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %24 = load %class.SkGlyphRun*, %class.SkGlyphRun** %23, align 8
  %25 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %26 = load %class.SkGlyphRun*, %class.SkGlyphRun** %25, align 8
  %27 = icmp ult %class.SkGlyphRun* %24, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %22
  %29 = bitcast %class.SkSpan* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  %30 = bitcast %class.SkSpan.1* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %31 = bitcast %class.SkSpan* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %31, i64 16, i1 false) #13
  %32 = bitcast %class.SkSpan.1* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %32, i64 16, i1 false) #13
  %33 = bitcast %class.SkSpan.2* %8 to i8*
  %34 = bitcast %class.SkSpan.2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #13
  %35 = bitcast %class.SkGlyphRun* %24 to i64*
  store i64 %21, i64* %35, align 8, !alias.scope !24
  %36 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tuple_leaf.0"* %36 to i64*
  store i64 %20, i64* %37, align 8, !alias.scope !24
  %38 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 0, i32 1
  store i64 %3, i64* %38, align 8, !alias.scope !24
  %39 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 1
  %40 = bitcast %class.SkSpan* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %29, i64 16, i1 false) #13
  %41 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 2
  %42 = bitcast %class.SkSpan.1* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %30, i64 16, i1 false) #13
  %43 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 3
  %44 = bitcast %class.SkSpan.2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %34, i64 16, i1 false) #13
  %45 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 4, i32 0, i32 0
  %46 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %47 = load %class.SkTypeface*, %class.SkTypeface** %46, align 8
  %48 = icmp eq %class.SkTypeface* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %28
  %50 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %49, %28
  store %class.SkTypeface* %47, %class.SkTypeface** %45, align 8
  %53 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 0, i32 4, i32 1
  %54 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %55 = bitcast float* %53 to i8*
  %56 = bitcast float* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 15, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  %57 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 1
  %58 = ptrtoint %class.SkGlyphRun* %57 to i64
  %59 = bitcast %class.SkGlyphRun** %23 to i64*
  store i64 %58, i64* %59, align 8
  br label %62

60:                                               ; preds = %22
  %61 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorI10SkGlyphRunNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRK6SkFontR6SkSpanIK7SkPointERS9_IKtERS9_IKcERS9_IKjESD_EEEvDpOT_(%"class.std::__1::vector.97"* %61, %class.SkFont* dereferenceable(24) %1, %class.SkSpan.2* nonnull dereferenceable(16) %14, %class.SkSpan.9* nonnull dereferenceable(16) %13, %class.SkSpan* nonnull dereferenceable(16) %6, %class.SkSpan.1* nonnull dereferenceable(16) %7, %class.SkSpan.2* nonnull dereferenceable(16) %8) #13
  br label %62

62:                                               ; preds = %60, %52, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder16makeGlyphRunListEPK10SkTextBlobRK6SkRect7SkPoint(%class.SkGlyphRunBuilder*, %class.SkTextBlob*, %struct.SkRect* nocapture readonly dereferenceable(16), <2 x float>) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5
  %6 = bitcast %struct.SkRect* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 4
  %8 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %class.SkGlyphRun*, %class.SkGlyphRun** %8, align 8
  %10 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast %class.SkGlyphRun** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %class.SkGlyphRun* %9 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 96
  %16 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %5, i64 0, i32 0, i32 0
  store %class.SkGlyphRun* %9, %class.SkGlyphRun** %16, align 8
  %17 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 1
  store %class.SkTextBlob* %1, %class.SkTextBlob** %18, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 2
  %20 = bitcast %struct.SkRect* %19 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 3
  %22 = bitcast %struct.SkPoint* %21 to <2 x float>*
  store <2 x float> %3, <2 x float>* %22, align 8
  ret %class.SkGlyphRunList* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder*, %class.SkTextBlob* dereferenceable(28), <2 x float>) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkSpan.2, align 8
  %5 = alloca %class.SkSpan, align 8
  %6 = alloca %class.SkSpan.1, align 8
  %7 = alloca %class.SkSpan.9, align 8
  %8 = alloca %class.SkSpan.2, align 8
  %9 = alloca %class.SkSpan.2, align 8
  %10 = alloca %class.SkSpan.1, align 8
  %11 = alloca %class.SkSpan, align 8
  %12 = alloca %class.SkTextBlobRunIterator, align 8
  tail call void @_ZN17SkGlyphRunBuilder10initializeERK10SkTextBlob(%class.SkGlyphRunBuilder* %0, %class.SkTextBlob* dereferenceable(28) %1)
  %13 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  %15 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = bitcast %class.SkTextBlobRunIterator* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %12, i64 0, i32 0
  store %"class.SkTextBlob::RunRecord"* inttoptr (i64 -6148914691236517206 to %"class.SkTextBlob::RunRecord"*), %"class.SkTextBlob::RunRecord"** %18, align 8
  call void @_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob(%class.SkTextBlobRunIterator* nonnull %12, %class.SkTextBlob* %1) #13
  %19 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %20 = icmp eq %"class.SkTextBlob::RunRecord"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %3
  %22 = bitcast %class.SkSpan* %11 to i8*
  %23 = bitcast %class.SkSpan.1* %10 to i8*
  %24 = bitcast %class.SkSpan.2* %9 to i8*
  %25 = bitcast %class.SkSpan.9* %7 to i8*
  %26 = bitcast %class.SkSpan.2* %8 to i8*
  %27 = bitcast %class.SkSpan.2* %9 to i64*
  %28 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %9, i64 0, i32 1
  %29 = getelementptr inbounds %class.SkSpan.1, %class.SkSpan.1* %10, i64 0, i32 0
  %30 = getelementptr inbounds %class.SkSpan.1, %class.SkSpan.1* %10, i64 0, i32 1
  %31 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %11, i64 0, i32 0
  %32 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %11, i64 0, i32 1
  %33 = bitcast %class.SkSpan.9* %7 to %"class.SkTextBlob::RunRecord"**
  %34 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %7, i64 0, i32 1
  %35 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %8, i64 0, i32 0
  %36 = getelementptr inbounds %class.SkSpan.2, %class.SkSpan.2* %8, i64 0, i32 1
  %37 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %38 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4
  %40 = bitcast %class.SkSpan* %5 to i8*
  %41 = bitcast %class.SkSpan.1* %6 to i8*
  %42 = bitcast %class.SkSpan.2* %4 to i8*
  %43 = bitcast %class.SkGlyphRun** %37 to i64*
  br label %71

44:                                               ; preds = %384, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %45 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 1, i32 0
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = fadd <2 x float> %47, %2
  %49 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 1, i32 2
  %50 = bitcast float* %49 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = fadd <2 x float> %51, %2
  %53 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5
  %54 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %55 = load %class.SkGlyphRun*, %class.SkGlyphRun** %54, align 8
  %56 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 4, i32 0, i32 1
  %57 = bitcast %class.SkGlyphRun** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint %class.SkGlyphRun* %55 to i64
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, 96
  %62 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %53, i64 0, i32 0, i32 0
  store %class.SkGlyphRun* %55, %class.SkGlyphRun** %62, align 8
  %63 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 0, i32 1
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 1
  store %class.SkTextBlob* %1, %class.SkTextBlob** %64, align 8
  %65 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 2
  %66 = bitcast %struct.SkRect* %65 to <2 x float>*
  store <2 x float> %48, <2 x float>* %66, align 8
  %67 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 2, i32 2
  %68 = bitcast float* %67 to <2 x float>*
  store <2 x float> %52, <2 x float>* %68, align 8
  %69 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %0, i64 0, i32 5, i32 3
  %70 = bitcast %struct.SkPoint* %69 to <2 x float>*
  store <2 x float> %2, <2 x float>* %70, align 8
  ret %class.SkGlyphRunList* %53

71:                                               ; preds = %21, %384
  %72 = phi %"class.SkTextBlob::RunRecord"* [ %19, %21 ], [ %387, %384 ]
  %73 = phi %struct.SkPoint* [ %14, %21 ], [ %386, %384 ]
  %74 = phi %struct.SkPoint* [ %16, %21 ], [ %385, %384 ]
  %75 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = icmp eq i32 %76, 0
  br i1 %78, label %384, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 0
  %81 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 0, i32 1
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 2139095040
  %85 = icmp eq i32 %84, 2139095040
  br i1 %85, label %384, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 0, i32 2
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 2139095040
  %91 = icmp eq i32 %90, 2139095040
  br i1 %91, label %384, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 0, i32 3
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 2139095040
  %97 = icmp eq i32 %96, 2139095040
  br i1 %97, label %384, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 1
  %100 = call zeroext i8 @_ZNK21SkTextBlobRunIterator11positioningEv(%class.SkTextBlobRunIterator* nonnull %12) #13
  switch i8 %100, label %312 [
    i8 0, label %101
    i8 1, label %112
    i8 2, label %205
    i8 3, label %217
  ]

101:                                              ; preds = %98
  %102 = bitcast %"class.SkTextBlob::RunRecord"* %99 to i16*
  %103 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %104 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %103, i64 0, i32 2
  %105 = bitcast %struct.SkPoint* %104 to <2 x float>*
  %106 = load <2 x float>, <2 x float>* %105, align 4
  %107 = call fastcc { %struct.SkPoint*, i64 } @_ZL19draw_text_positionsRK6SkFont6SkSpanIKtE7SkPointPS5_(%class.SkFont* dereferenceable(24) %80, i16* %102, i64 %77, <2 x float> %106, %struct.SkPoint* %73)
  %108 = extractvalue { %struct.SkPoint*, i64 } %107, 0
  %109 = ptrtoint %struct.SkPoint* %108 to i64
  %110 = extractvalue { %struct.SkPoint*, i64 } %107, 1
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %73, i64 %110
  br label %312

112:                                              ; preds = %98
  %113 = ptrtoint %struct.SkPoint* %73 to i64
  %114 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %115 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %114, i64 1
  %116 = bitcast %"class.SkTextBlob::RunRecord"* %115 to i8*
  %117 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %114, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = zext i32 %118 to i64
  %120 = shl nuw nsw i64 %119, 1
  %121 = add nuw nsw i64 %120, 3
  %122 = and i64 %121, 17179869180
  %123 = getelementptr inbounds i8, i8* %116, i64 %122
  %124 = bitcast i8* %123 to float*
  %125 = getelementptr inbounds float, float* %124, i64 %77
  %126 = icmp eq float* %125, %124
  br i1 %126, label %312, label %127

127:                                              ; preds = %112
  %128 = load float, float* %124, align 4
  %129 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %114, i64 0, i32 2, i32 1
  %130 = load float, float* %129, align 4
  %131 = insertelement <2 x float> undef, float %128, i32 0
  %132 = insertelement <2 x float> %131, float %130, i32 1
  %133 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %73, i64 1
  %134 = bitcast %struct.SkPoint* %73 to <2 x float>*
  store <2 x float> %132, <2 x float>* %134, align 4
  %135 = getelementptr inbounds i8, i8* %123, i64 4
  %136 = bitcast i8* %135 to float*
  %137 = icmp eq float* %125, %136
  br i1 %137, label %312, label %138

138:                                              ; preds = %127
  %139 = shl nuw nsw i64 %77, 2
  %140 = add nsw i64 %139, -8
  %141 = lshr exact i64 %140, 2
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 3
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %160, label %145

145:                                              ; preds = %138, %145
  %146 = phi float* [ %157, %145 ], [ %136, %138 ]
  %147 = phi %struct.SkPoint* [ %155, %145 ], [ %133, %138 ]
  %148 = phi i64 [ %158, %145 ], [ %143, %138 ]
  %149 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %150 = load float, float* %146, align 4
  %151 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %149, i64 0, i32 2, i32 1
  %152 = load float, float* %151, align 4
  %153 = insertelement <2 x float> undef, float %150, i32 0
  %154 = insertelement <2 x float> %153, float %152, i32 1
  %155 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %147, i64 1
  %156 = bitcast %struct.SkPoint* %147 to <2 x float>*
  store <2 x float> %154, <2 x float>* %156, align 4
  %157 = getelementptr inbounds float, float* %146, i64 1
  %158 = add i64 %148, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %145, !llvm.loop !29

160:                                              ; preds = %145, %138
  %161 = phi %struct.SkPoint* [ undef, %138 ], [ %155, %145 ]
  %162 = phi float* [ %136, %138 ], [ %157, %145 ]
  %163 = phi %struct.SkPoint* [ %133, %138 ], [ %155, %145 ]
  %164 = icmp ult i64 %140, 12
  br i1 %164, label %312, label %165

165:                                              ; preds = %160, %165
  %166 = phi float* [ %203, %165 ], [ %162, %160 ]
  %167 = phi %struct.SkPoint* [ %201, %165 ], [ %163, %160 ]
  %168 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %169 = load float, float* %166, align 4
  %170 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %168, i64 0, i32 2, i32 1
  %171 = load float, float* %170, align 4
  %172 = insertelement <2 x float> undef, float %169, i32 0
  %173 = insertelement <2 x float> %172, float %171, i32 1
  %174 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %167, i64 1
  %175 = bitcast %struct.SkPoint* %167 to <2 x float>*
  store <2 x float> %173, <2 x float>* %175, align 4
  %176 = getelementptr inbounds float, float* %166, i64 1
  %177 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %178 = load float, float* %176, align 4
  %179 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %177, i64 0, i32 2, i32 1
  %180 = load float, float* %179, align 4
  %181 = insertelement <2 x float> undef, float %178, i32 0
  %182 = insertelement <2 x float> %181, float %180, i32 1
  %183 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %167, i64 2
  %184 = bitcast %struct.SkPoint* %174 to <2 x float>*
  store <2 x float> %182, <2 x float>* %184, align 4
  %185 = getelementptr inbounds float, float* %166, i64 2
  %186 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %187 = load float, float* %185, align 4
  %188 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %186, i64 0, i32 2, i32 1
  %189 = load float, float* %188, align 4
  %190 = insertelement <2 x float> undef, float %187, i32 0
  %191 = insertelement <2 x float> %190, float %189, i32 1
  %192 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %167, i64 3
  %193 = bitcast %struct.SkPoint* %183 to <2 x float>*
  store <2 x float> %191, <2 x float>* %193, align 4
  %194 = getelementptr inbounds float, float* %166, i64 3
  %195 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %196 = load float, float* %194, align 4
  %197 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %195, i64 0, i32 2, i32 1
  %198 = load float, float* %197, align 4
  %199 = insertelement <2 x float> undef, float %196, i32 0
  %200 = insertelement <2 x float> %199, float %198, i32 1
  %201 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %167, i64 4
  %202 = bitcast %struct.SkPoint* %192 to <2 x float>*
  store <2 x float> %200, <2 x float>* %202, align 4
  %203 = getelementptr inbounds float, float* %166, i64 4
  %204 = icmp eq float* %203, %125
  br i1 %204, label %312, label %165

205:                                              ; preds = %98
  %206 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %207 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %206, i64 1
  %208 = bitcast %"class.SkTextBlob::RunRecord"* %207 to i8*
  %209 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %206, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = zext i32 %210 to i64
  %212 = shl nuw nsw i64 %211, 1
  %213 = add nuw nsw i64 %212, 3
  %214 = and i64 %213, 17179869180
  %215 = getelementptr inbounds i8, i8* %208, i64 %214
  %216 = ptrtoint i8* %215 to i64
  br label %312

217:                                              ; preds = %98
  %218 = ptrtoint %struct.SkPoint* %73 to i64
  %219 = ptrtoint %struct.SkPoint* %74 to i64
  %220 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %221 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %220, i64 1
  %222 = bitcast %"class.SkTextBlob::RunRecord"* %221 to i8*
  %223 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %220, i64 0, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = zext i32 %224 to i64
  %226 = shl nuw nsw i64 %225, 1
  %227 = add nuw nsw i64 %226, 3
  %228 = and i64 %227, 17179869180
  %229 = getelementptr inbounds i8, i8* %222, i64 %228
  %230 = bitcast i8* %229 to %struct.SkRSXform*
  %231 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %230, i64 %77
  %232 = icmp eq %struct.SkRSXform* %231, %230
  br i1 %232, label %312, label %233

233:                                              ; preds = %217
  %234 = shl nuw nsw i64 %77, 4
  %235 = add nsw i64 %234, -16
  %236 = and i64 %235, 16
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %260

238:                                              ; preds = %233
  %239 = getelementptr inbounds i8, i8* %229, i64 8
  %240 = bitcast i8* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds i8, i8* %229, i64 12
  %243 = bitcast i8* %242 to i32*
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %73, i64 1
  %246 = bitcast %struct.SkPoint* %73 to i32*
  store i32 %241, i32* %246, align 4
  %247 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %73, i64 0, i32 1
  %248 = bitcast float* %247 to i32*
  store i32 %244, i32* %248, align 4
  %249 = bitcast i8* %229 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds i8, i8* %229, i64 4
  %252 = bitcast i8* %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 1
  %255 = bitcast %struct.SkPoint* %74 to i32*
  store i32 %250, i32* %255, align 4
  %256 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %74, i64 0, i32 1
  %257 = bitcast float* %256 to i32*
  store i32 %253, i32* %257, align 4
  %258 = getelementptr inbounds i8, i8* %229, i64 16
  %259 = bitcast i8* %258 to %struct.SkRSXform*
  br label %260

260:                                              ; preds = %238, %233
  %261 = phi %struct.SkPoint* [ %245, %238 ], [ undef, %233 ]
  %262 = phi %struct.SkPoint* [ %254, %238 ], [ undef, %233 ]
  %263 = phi %struct.SkPoint* [ %245, %238 ], [ %73, %233 ]
  %264 = phi %struct.SkPoint* [ %254, %238 ], [ %74, %233 ]
  %265 = phi %struct.SkRSXform* [ %259, %238 ], [ %230, %233 ]
  %266 = icmp eq i64 %235, 0
  br i1 %266, label %312, label %267

267:                                              ; preds = %260, %267
  %268 = phi %struct.SkPoint* [ %297, %267 ], [ %263, %260 ]
  %269 = phi %struct.SkPoint* [ %306, %267 ], [ %264, %260 ]
  %270 = phi %struct.SkRSXform* [ %310, %267 ], [ %265, %260 ]
  %271 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 0, i32 2
  %272 = bitcast float* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 0, i32 3
  %275 = bitcast float* %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 1
  %278 = bitcast %struct.SkPoint* %268 to i32*
  store i32 %273, i32* %278, align 4
  %279 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 0, i32 1
  %280 = bitcast float* %279 to i32*
  store i32 %276, i32* %280, align 4
  %281 = bitcast %struct.SkRSXform* %270 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 0, i32 1
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %269, i64 1
  %287 = bitcast %struct.SkPoint* %269 to i32*
  store i32 %282, i32* %287, align 4
  %288 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %269, i64 0, i32 1
  %289 = bitcast float* %288 to i32*
  store i32 %285, i32* %289, align 4
  %290 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 1
  %291 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 1, i32 2
  %292 = bitcast float* %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 1, i32 3
  %295 = bitcast float* %294 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 2
  %298 = bitcast %struct.SkPoint* %277 to i32*
  store i32 %293, i32* %298, align 4
  %299 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %268, i64 1, i32 1
  %300 = bitcast float* %299 to i32*
  store i32 %296, i32* %300, align 4
  %301 = bitcast %struct.SkRSXform* %290 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 1, i32 1
  %304 = bitcast float* %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %269, i64 2
  %307 = bitcast %struct.SkPoint* %286 to i32*
  store i32 %302, i32* %307, align 4
  %308 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %269, i64 1, i32 1
  %309 = bitcast float* %308 to i32*
  store i32 %305, i32* %309, align 4
  %310 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %270, i64 2
  %311 = icmp eq %struct.SkRSXform* %310, %231
  br i1 %311, label %312, label %267

312:                                              ; preds = %260, %267, %160, %165, %127, %217, %112, %98, %205, %101
  %313 = phi i64 [ 0, %98 ], [ 0, %205 ], [ 0, %101 ], [ 0, %112 ], [ %77, %217 ], [ 0, %127 ], [ 0, %165 ], [ 0, %160 ], [ %77, %267 ], [ %77, %260 ]
  %314 = phi i64 [ 0, %98 ], [ 0, %205 ], [ 0, %101 ], [ 0, %112 ], [ %219, %217 ], [ 0, %127 ], [ 0, %165 ], [ 0, %160 ], [ %219, %267 ], [ %219, %260 ]
  %315 = phi i64 [ 0, %98 ], [ %77, %205 ], [ %110, %101 ], [ %77, %112 ], [ %77, %217 ], [ %77, %127 ], [ %77, %165 ], [ %77, %160 ], [ %77, %267 ], [ %77, %260 ]
  %316 = phi i64 [ 0, %98 ], [ %216, %205 ], [ %109, %101 ], [ %113, %112 ], [ %218, %217 ], [ %113, %127 ], [ %113, %165 ], [ %113, %160 ], [ %218, %267 ], [ %218, %260 ]
  %317 = phi %struct.SkPoint* [ %74, %98 ], [ %74, %205 ], [ %74, %101 ], [ %74, %112 ], [ %74, %217 ], [ %74, %127 ], [ %74, %165 ], [ %74, %160 ], [ %262, %260 ], [ %306, %267 ]
  %318 = phi %struct.SkPoint* [ %73, %98 ], [ %73, %205 ], [ %111, %101 ], [ %73, %112 ], [ %73, %217 ], [ %133, %127 ], [ %161, %160 ], [ %201, %165 ], [ %261, %260 ], [ %297, %267 ]
  %319 = inttoptr i64 %316 to %struct.SkPoint*
  %320 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %321 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %320, i64 0, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = and i32 %322, 8
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %350, label %325

325:                                              ; preds = %312
  %326 = call i32* @_ZNK10SkTextBlob9RunRecord11textSizePtrEv(%"class.SkTextBlob::RunRecord"* %320) #13
  %327 = getelementptr inbounds i32, i32* %326, i64 1
  %328 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %320, i64 0, i32 1
  %329 = load i32, i32* %328, align 8
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds i32, i32* %327, i64 %330
  %332 = bitcast i32* %331 to i8*
  %333 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %334 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %333, i64 0, i32 3
  %335 = load i32, i32* %334, align 4
  %336 = and i32 %335, 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %350, label %338

338:                                              ; preds = %325
  %339 = call i32* @_ZNK10SkTextBlob9RunRecord11textSizePtrEv(%"class.SkTextBlob::RunRecord"* %333) #13
  %340 = load i32, i32* %339, align 4
  %341 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %342 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %341, i64 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = and i32 %343, 8
  %345 = zext i32 %340 to i64
  %346 = icmp eq i32 %344, 0
  br i1 %346, label %350, label %347

347:                                              ; preds = %338
  %348 = call i32* @_ZNK10SkTextBlob9RunRecord11textSizePtrEv(%"class.SkTextBlob::RunRecord"* %341) #13
  %349 = getelementptr inbounds i32, i32* %348, i64 1
  br label %350

350:                                              ; preds = %312, %325, %347, %338
  %351 = phi i64 [ %345, %347 ], [ %345, %338 ], [ 0, %325 ], [ 0, %312 ]
  %352 = phi i8* [ %332, %347 ], [ %332, %338 ], [ %332, %325 ], [ null, %312 ]
  %353 = phi i32* [ %349, %347 ], [ null, %338 ], [ null, %325 ], [ null, %312 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26)
  store i64 %314, i64* %27, align 8
  store i64 %313, i64* %28, align 8
  store i32* %353, i32** %29, align 8
  store i64 %77, i64* %30, align 8
  store i8* %352, i8** %31, align 8
  store i64 %351, i64* %32, align 8
  store %"class.SkTextBlob::RunRecord"* %99, %"class.SkTextBlob::RunRecord"** %33, align 8
  store i64 %77, i64* %34, align 8
  store %struct.SkPoint* %319, %struct.SkPoint** %35, align 8
  store i64 %315, i64* %36, align 8
  %354 = load %class.SkGlyphRun*, %class.SkGlyphRun** %37, align 8
  %355 = load %class.SkGlyphRun*, %class.SkGlyphRun** %38, align 8
  %356 = icmp ult %class.SkGlyphRun* %354, %355
  br i1 %356, label %357, label %382

357:                                              ; preds = %350
  %358 = ptrtoint %"class.SkTextBlob::RunRecord"* %99 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %22, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %23, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %24, i64 16, i1 false) #13
  %359 = bitcast %class.SkGlyphRun* %354 to i64*
  store i64 %358, i64* %359, align 8, !alias.scope !30
  %360 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 0, i32 0, i32 0, i32 1
  %361 = bitcast %"class.std::__1::__tuple_leaf.0"* %360 to i64*
  store i64 %316, i64* %361, align 8, !alias.scope !30
  %362 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 0, i32 1
  store i64 %77, i64* %362, align 8, !alias.scope !30
  %363 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 1
  %364 = bitcast %class.SkSpan* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* nonnull align 8 %40, i64 16, i1 false) #13
  %365 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 2
  %366 = bitcast %class.SkSpan.1* %365 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %366, i8* nonnull align 8 %41, i64 16, i1 false) #13
  %367 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 3
  %368 = bitcast %class.SkSpan.2* %367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %368, i8* nonnull align 8 %42, i64 16, i1 false) #13
  %369 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 4, i32 0, i32 0
  %370 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %72, i64 0, i32 0, i32 0, i32 0
  %371 = load %class.SkTypeface*, %class.SkTypeface** %370, align 8
  %372 = icmp eq %class.SkTypeface* %371, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %357
  %374 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %371, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = atomicrmw add i32* %374, i32 1 monotonic
  br label %376

376:                                              ; preds = %373, %357
  store %class.SkTypeface* %371, %class.SkTypeface** %369, align 8
  %377 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 0, i32 4, i32 1
  %378 = bitcast float* %377 to i8*
  %379 = bitcast float* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 15, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %380 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %354, i64 1
  %381 = ptrtoint %class.SkGlyphRun* %380 to i64
  store i64 %381, i64* %43, align 8
  br label %383

382:                                              ; preds = %350
  call void @_ZNSt3__16vectorI10SkGlyphRunNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRK6SkFontR6SkSpanIK7SkPointERS9_IKtERS9_IKcERS9_IKjESD_EEEvDpOT_(%"class.std::__1::vector.97"* %39, %class.SkFont* dereferenceable(24) %80, %class.SkSpan.2* nonnull dereferenceable(16) %8, %class.SkSpan.9* nonnull dereferenceable(16) %7, %class.SkSpan* nonnull dereferenceable(16) %11, %class.SkSpan.1* nonnull dereferenceable(16) %10, %class.SkSpan.2* nonnull dereferenceable(16) %9) #13
  br label %383

383:                                              ; preds = %376, %382
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  br label %384

384:                                              ; preds = %92, %79, %86, %71, %383
  %385 = phi %struct.SkPoint* [ %317, %383 ], [ %74, %92 ], [ %74, %71 ], [ %74, %86 ], [ %74, %79 ]
  %386 = phi %struct.SkPoint* [ %318, %383 ], [ %73, %92 ], [ %73, %71 ], [ %73, %86 ], [ %73, %79 ]
  call void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator* nonnull %12) #13
  %387 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %18, align 8
  %388 = icmp eq %"class.SkTextBlob::RunRecord"* %387, null
  br i1 %388, label %44, label %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkGlyphRunBuilder10initializeERK10SkTextBlob(%class.SkGlyphRunBuilder* nocapture, %class.SkTextBlob* dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkTextBlobRunIterator, align 8
  %4 = bitcast %class.SkTextBlobRunIterator* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %3, i64 0, i32 0
  store %"class.SkTextBlob::RunRecord"* inttoptr (i64 -6148914691236517206 to %"class.SkTextBlob::RunRecord"*), %"class.SkTextBlob::RunRecord"** %5, align 8
  call void @_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob(%class.SkTextBlobRunIterator* nonnull %3, %class.SkTextBlob* %1) #13
  %6 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %5, align 8
  %7 = icmp eq %"class.SkTextBlob::RunRecord"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %30, %2
  %9 = phi i32 [ 0, %2 ], [ %22, %30 ]
  %10 = phi i32 [ 0, %2 ], [ %31, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  call void @_ZN17SkGlyphRunBuilder14prepareBuffersEii(%class.SkGlyphRunBuilder* %0, i32 %9, i32 %10)
  ret void

11:                                               ; preds = %2, %30
  %12 = phi i32 [ %31, %30 ], [ 0, %2 ]
  %13 = phi i32 [ %22, %30 ], [ 0, %2 ]
  %14 = call zeroext i8 @_ZNK21SkTextBlobRunIterator11positioningEv(%class.SkTextBlobRunIterator* nonnull %3) #13
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %5, align 8
  %18 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, %13
  br label %21

21:                                               ; preds = %11, %16
  %22 = phi i32 [ %20, %16 ], [ %13, %11 ]
  %23 = call zeroext i8 @_ZNK21SkTextBlobRunIterator11positioningEv(%class.SkTextBlobRunIterator* nonnull %3) #13
  %24 = icmp eq i8 %23, 3
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %5, align 8
  %27 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, %12
  br label %30

30:                                               ; preds = %21, %25
  %31 = phi i32 [ %29, %25 ], [ %12, %21 ]
  call void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator* nonnull %3) #13
  %32 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %5, align 8
  %33 = icmp eq %"class.SkTextBlob::RunRecord"* %32, null
  br i1 %33, label %8, label %11
}

declare void @_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob(%class.SkTextBlobRunIterator*, %class.SkTextBlob*) unnamed_addr #2

declare zeroext i8 @_ZNK21SkTextBlobRunIterator11positioningEv(%class.SkTextBlobRunIterator*) local_unnamed_addr #2

declare void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkGlyphRunBuilder14convertRSXFormE6SkSpanIK9SkRSXformE(%"class.std::__1::tuple.114"* noalias nocapture sret, %class.SkGlyphRunBuilder* nocapture, %struct.SkRSXform*, i64) local_unnamed_addr #0 align 2 {
  %5 = trunc i64 %3 to i32
  tail call void @_ZN17SkGlyphRunBuilder14prepareBuffersEii(%class.SkGlyphRunBuilder* %1, i32 %5, i32 %5)
  %6 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.SkPoint*, %struct.SkPoint** %6, align 8
  %8 = shl i64 %3, 32
  %9 = ashr exact i64 %8, 32
  %10 = ptrtoint %struct.SkPoint* %7 to i64
  %11 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.SkPoint*, %struct.SkPoint** %11, align 8
  %13 = ptrtoint %struct.SkPoint* %12 to i64
  %14 = icmp eq i64 %8, 0
  br i1 %14, label %46, label %15

15:                                               ; preds = %4
  %16 = shl i64 %3, 32
  %17 = ashr exact i64 %16, 32
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %16, 4294967296
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = sub nsw i64 %17, %18
  br label %52

22:                                               ; preds = %52, %15
  %23 = phi i64 [ 0, %15 ], [ %96, %52 ]
  %24 = icmp eq i64 %18, 0
  br i1 %24, label %46, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %23
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %23
  %28 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %23
  %29 = bitcast %struct.SkRSXform* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %23, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %23, i32 2
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %23, i32 3
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %struct.SkPoint* %26 to i32*
  store i32 %36, i32* %40, align 4
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %23, i32 1
  %42 = bitcast float* %41 to i32*
  store i32 %39, i32* %42, align 4
  %43 = bitcast %struct.SkPoint* %27 to i32*
  store i32 %30, i32* %43, align 4
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %23, i32 1
  %45 = bitcast float* %44 to i32*
  store i32 %33, i32* %45, align 4
  br label %46

46:                                               ; preds = %25, %22, %4
  %47 = bitcast %"class.std::__1::tuple.114"* %0 to i64*
  store i64 %10, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::tuple.114", %"class.std::__1::tuple.114"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::tuple.114", %"class.std::__1::tuple.114"* %0, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tuple_leaf.117"* %49 to i64*
  store i64 %13, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::tuple.114", %"class.std::__1::tuple.114"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i64 %9, i64* %51, align 8
  ret void

52:                                               ; preds = %52, %20
  %53 = phi i64 [ 0, %20 ], [ %96, %52 ]
  %54 = phi i64 [ %21, %20 ], [ %97, %52 ]
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %53
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %53
  %57 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %53
  %58 = bitcast %struct.SkRSXform* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %53, i32 1
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %53, i32 2
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %53, i32 3
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = bitcast %struct.SkPoint* %55 to i32*
  store i32 %65, i32* %69, align 4
  %70 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %53, i32 1
  %71 = bitcast float* %70 to i32*
  store i32 %68, i32* %71, align 4
  %72 = bitcast %struct.SkPoint* %56 to i32*
  store i32 %59, i32* %72, align 4
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %53, i32 1
  %74 = bitcast float* %73 to i32*
  store i32 %62, i32* %74, align 4
  %75 = or i64 %53, 1
  %76 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %75
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %75
  %78 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %75
  %79 = bitcast %struct.SkRSXform* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %75, i32 1
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %75, i32 2
  %85 = bitcast float* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %75, i32 3
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = bitcast %struct.SkPoint* %76 to i32*
  store i32 %86, i32* %90, align 4
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 %75, i32 1
  %92 = bitcast float* %91 to i32*
  store i32 %89, i32* %92, align 4
  %93 = bitcast %struct.SkPoint* %77 to i32*
  store i32 %80, i32* %93, align 4
  %94 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %75, i32 1
  %95 = bitcast float* %94 to i32*
  store i32 %83, i32* %95, align 4
  %96 = add i64 %53, 2
  %97 = add i64 %54, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %22, label %52
}

declare i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont*, i8*, i64, i32, i16*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #7

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZN12SkStrikeSpec16MakeWithNoDeviceERK6SkFontPK7SkPaint(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint*) local_unnamed_addr #2

declare i32* @_ZNK10SkTextBlob9RunRecord11textSizePtrEv(%"class.SkTextBlob::RunRecord"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector.104"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i16, i16* %13, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 2
  %25 = and i64 %24, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i16* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.104"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.104"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 1
  %41 = icmp ult i64 %40, 4611686018427387903
  %42 = icmp ult i64 %39, %34
  %43 = select i1 %42, i64 %34, i64 %39
  %44 = select i1 %41, i64 %43, i64 9223372036854775807
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #14
  unreachable

49:                                               ; preds = %46
  %50 = shl i64 %44, 1
  %51 = tail call i8* @_Znwm(i64 %50) #15
  %52 = bitcast i8* %51 to i16*
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i16* [ %52, %49 ], [ null, %38 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %33
  %56 = getelementptr inbounds i16, i16* %54, i64 %44
  %57 = getelementptr inbounds i16, i16* %55, i64 %1
  %58 = bitcast i16* %55 to i8*
  %59 = shl i64 %1, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 %59, i1 false) #13
  %60 = ptrtoint i16* %56 to i64
  %61 = ptrtoint i16* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %0, i64 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = load i64, i64* %7, align 8
  %65 = ptrtoint i16* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i16, i16* %55, i64 %68
  %70 = ptrtoint i16* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast i16* %69 to i8*
  %74 = bitcast i16* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %66, i1 false) #13
  %75 = load i16*, i16** %62, align 8
  br label %76

76:                                               ; preds = %53, %72
  %77 = phi i16* [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %30, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  %78 = icmp eq i16* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i16* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %79, %76, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI10SkGlyphRunNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRK6SkFontR6SkSpanIK7SkPointERS9_IKtERS9_IKcERS9_IKjESD_EEEvDpOT_(%"class.std::__1::vector.97"*, %class.SkFont* dereferenceable(24), %class.SkSpan.2* dereferenceable(16), %class.SkSpan.9* dereferenceable(16), %class.SkSpan* dereferenceable(16), %class.SkSpan.1* dereferenceable(16), %class.SkSpan.2* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %8 = alloca %class.SkSpan.2, align 8
  %9 = alloca %class.SkSpan, align 8
  %10 = alloca %class.SkSpan.1, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %class.SkGlyphRun** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.97"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 96
  %18 = add nsw i64 %17, 1
  %19 = icmp ugt i64 %18, 192153584101141162
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"class.std::__1::vector.97"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #14
  unreachable

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %class.SkGlyphRun** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %15
  %27 = sdiv exact i64 %26, 96
  %28 = icmp ult i64 %27, 96076792050570581
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = shl nsw i64 %27, 1
  %31 = icmp ult i64 %30, %18
  %32 = select i1 %31, i64 %18, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %22, %29
  %35 = phi i64 [ %32, %29 ], [ 192153584101141162, %22 ]
  %36 = mul i64 %35, 96
  %37 = tail call i8* @_Znwm(i64 %36) #15
  %38 = bitcast i8* %37 to %class.SkGlyphRun*
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi i64 [ %35, %34 ], [ 0, %29 ]
  %41 = phi %class.SkGlyphRun* [ %38, %34 ], [ null, %29 ]
  %42 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17
  %43 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %40
  %44 = ptrtoint %class.SkGlyphRun* %43 to i64
  %45 = bitcast %class.SkSpan* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %46 = bitcast %class.SkSpan.1* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46)
  %47 = bitcast %class.SkSpan.2* %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.SkSpan.9* %3 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %class.SkSpan.9, %class.SkSpan.9* %3, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.SkSpan* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %53, i64 16, i1 false) #13
  %54 = bitcast %class.SkSpan.1* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 %54, i64 16, i1 false) #13
  %55 = bitcast %class.SkSpan.2* %6 to i8*
  %56 = bitcast %class.SkSpan.2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %55, i64 16, i1 false) #13
  %57 = bitcast %class.SkGlyphRun* %42 to i64*
  store i64 %50, i64* %57, align 8, !alias.scope !35
  %58 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::__tuple_leaf.0"* %58 to i64*
  store i64 %48, i64* %59, align 8, !alias.scope !35
  %60 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 0, i32 1
  store i64 %52, i64* %60, align 8, !alias.scope !35
  %61 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 1
  %62 = bitcast %class.SkSpan* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %45, i64 16, i1 false) #13
  %63 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 2
  %64 = bitcast %class.SkSpan.1* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %46, i64 16, i1 false) #13
  %65 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 3
  %66 = bitcast %class.SkSpan.2* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %56, i64 16, i1 false) #13
  %67 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 4, i32 0, i32 0
  %68 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %69 = load %class.SkTypeface*, %class.SkTypeface** %68, align 8
  %70 = icmp eq %class.SkTypeface* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %39
  %72 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 1 monotonic
  br label %74

74:                                               ; preds = %39, %71
  store %class.SkTypeface* %69, %class.SkTypeface** %67, align 8
  %75 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %41, i64 %17, i32 4, i32 1
  %76 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %77 = bitcast float* %75 to i8*
  %78 = bitcast float* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 15, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46)
  %79 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %42, i64 1
  %80 = ptrtoint %class.SkGlyphRun* %79 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 0
  %82 = load %class.SkGlyphRun*, %class.SkGlyphRun** %81, align 8
  %83 = load %class.SkGlyphRun*, %class.SkGlyphRun** %11, align 8
  %84 = icmp eq %class.SkGlyphRun* %83, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %74
  %86 = ptrtoint %class.SkGlyphRun* %82 to i64
  br label %108

87:                                               ; preds = %74, %87
  %88 = phi %class.SkGlyphRun* [ %90, %87 ], [ %42, %74 ]
  %89 = phi %class.SkGlyphRun* [ %91, %87 ], [ %83, %74 ]
  %90 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %88, i64 -1
  %91 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %89, i64 -1
  %92 = bitcast %class.SkGlyphRun* %90 to i8*
  %93 = bitcast %class.SkGlyphRun* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 72, i1 false) #13
  %94 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %88, i64 -1, i32 4
  %95 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %89, i64 -1, i32 4
  %96 = getelementptr inbounds %class.SkFont, %class.SkFont* %95, i64 0, i32 0, i32 0
  %97 = bitcast %class.SkFont* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %96, align 8
  %99 = bitcast %class.SkFont* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %88, i64 -1, i32 4, i32 1
  %101 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %89, i64 -1, i32 4, i32 1
  %102 = bitcast float* %100 to i8*
  %103 = bitcast float* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 15, i1 false) #13
  %104 = icmp eq %class.SkGlyphRun* %91, %82
  br i1 %104, label %105, label %87

105:                                              ; preds = %87
  %106 = load i64, i64* %14, align 8
  %107 = load %class.SkGlyphRun*, %class.SkGlyphRun** %11, align 8
  br label %108

108:                                              ; preds = %85, %105
  %109 = phi %class.SkGlyphRun* [ %82, %85 ], [ %107, %105 ]
  %110 = phi %class.SkGlyphRun* [ %42, %85 ], [ %90, %105 ]
  %111 = phi i64 [ %86, %85 ], [ %106, %105 ]
  %112 = ptrtoint %class.SkGlyphRun* %110 to i64
  store i64 %112, i64* %14, align 8
  store i64 %80, i64* %12, align 8
  store i64 %44, i64* %24, align 8
  %113 = inttoptr i64 %111 to %class.SkGlyphRun*
  %114 = icmp eq %class.SkGlyphRun* %109, %113
  br i1 %114, label %133, label %115

115:                                              ; preds = %108, %131
  %116 = phi %class.SkGlyphRun* [ %117, %131 ], [ %109, %108 ]
  %117 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %116, i64 -1
  %118 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %116, i64 -1, i32 4, i32 0, i32 0
  %119 = load %class.SkTypeface*, %class.SkTypeface** %118, align 8
  %120 = icmp eq %class.SkTypeface* %119, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = bitcast %class.SkTypeface* %119 to %class.SkRefCntBase*
  %127 = bitcast %class.SkTypeface* %119 to void (%class.SkRefCntBase*)***
  %128 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, i64 2
  %130 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, align 8
  tail call void %130(%class.SkRefCntBase* nonnull %126) #13
  br label %131

131:                                              ; preds = %125, %121, %115
  %132 = icmp eq %class.SkGlyphRun* %117, %113
  br i1 %132, label %133, label %115

133:                                              ; preds = %131, %108
  %134 = icmp eq i64 %111, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %136) #15
  br label %137

137:                                              ; preds = %133, %135
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_"}
!5 = distinct !{!5, !6, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_: argument 0"}
!6 = distinct !{!6, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN15SkMakeZipDetail7MakeZipIJ6SkSpanIK7SkPointERKS4_RS1_IPK7SkGlyphEEEEDaDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN15SkMakeZipDetail7MakeZipIJ6SkSpanIK7SkPointERKS4_RS1_IPK7SkGlyphEEEEDaDpOT_"}
!10 = distinct !{!10, !11, !"_Z9SkMakeZipIJ6SkSpanIK7SkPointERKS3_RS0_IPK7SkGlyphEEEDaDpOT_: argument 0"}
!11 = distinct !{!11, !"_Z9SkMakeZipIJ6SkSpanIK7SkPointERKS3_RS0_IPK7SkGlyphEEEDaDpOT_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN15SkMakeZipDetail7MakeZipIJ6SkSpanIK7SkPointERKS4_EEEDaDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZN15SkMakeZipDetail7MakeZipIJ6SkSpanIK7SkPointERKS4_EEEDaDpOT_"}
!15 = distinct !{!15, !16, !"_Z9SkMakeZipIJ6SkSpanIK7SkPointERKS3_EEDaDpOT_: argument 0"}
!16 = distinct !{!16, !"_Z9SkMakeZipIJ6SkSpanIK7SkPointERKS3_EEDaDpOT_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_"}
!20 = distinct !{!20, !21, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_: argument 0"}
!21 = distinct !{!21, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_"}
!27 = distinct !{!27, !28, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_: argument 0"}
!28 = distinct !{!28, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_"}
!29 = distinct !{!29, !23}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_"}
!33 = distinct !{!33, !34, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_: argument 0"}
!34 = distinct !{!34, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanIKtERS1_IK7SkPointEEEEDaDpOT_"}
!38 = distinct !{!38, !39, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_: argument 0"}
!39 = distinct !{!39, !"_Z9SkMakeZipIJR6SkSpanIKtERS0_IK7SkPointEEEDaDpOT_"}
