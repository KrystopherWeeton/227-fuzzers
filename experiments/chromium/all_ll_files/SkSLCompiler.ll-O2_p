; ModuleID = '../../third_party/skia/src/sksl/SkSLCompiler.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLCompiler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::CodeGenerator" = type { i32 (...)**, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*, %"class.SkSL::OutputStream"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.37", %"class.std::__1::unique_ptr.234", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.130", %"class.std::__1::vector.143", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.SkSL::String"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.37" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.166", i8, %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.SkSL::Symbol"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::unique_ptr.168"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::unique_ptr.176"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.627" }
%"struct.std::__1::pair.627" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.237" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::unique_ptr.132"* }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap.255, %class.SkTHashMap.264 }
%class.SkTHashMap.255 = type { %class.SkTHashTable.256 }
%class.SkTHashTable.256 = type { i32, i32, %class.SkAutoTArray.257 }
%class.SkAutoTArray.257 = type { %"class.std::__1::unique_ptr.258" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.150" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.264 = type { %class.SkTHashTable.265 }
%class.SkTHashTable.265 = type { i32, i32, %class.SkAutoTArray.266 }
%class.SkAutoTArray.266 = type { %"class.std::__1::unique_ptr.267" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.629", [4 x i8] }
%"struct.std::__1::pair.base.629" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.206", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.213", %"class.std::__1::unordered_set.79", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.79" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.69"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.SkSL::Variable"** }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::MemoryLayout" = type { i32 }
%"class.std::__1::unordered_map.300" = type { %"class.std::__1::__hash_table.301" }
%"class.std::__1::__hash_table.301" = type <{ %"class.std::__1::unique_ptr.302", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", [4 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304", %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.305"** }
%"struct.std::__1::__hash_node_base.305" = type { %"struct.std::__1::__hash_node_base.305"* }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.std::__1::__bucket_list_deallocator.307" }
%"class.std::__1::__bucket_list_deallocator.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base.305" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.374", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.404" = type { %"class.std::__1::__hash_table.405" }
%"class.std::__1::__hash_table.405" = type <{ %"class.std::__1::unique_ptr.406", %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408", %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.409"** }
%"struct.std::__1::__hash_node_base.409" = type { %"struct.std::__1::__hash_node_base.409"* }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.std::__1::__bucket_list_deallocator.411" }
%"class.std::__1::__bucket_list_deallocator.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.409" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.std::__1::unordered_map.428" = type { %"class.std::__1::__hash_table.429" }
%"class.std::__1::__hash_table.429" = type <{ %"class.std::__1::unique_ptr.430", %"class.std::__1::__compressed_pair.440", %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449", [4 x i8] }>
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432", %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::__hash_node_base.433"** }
%"struct.std::__1::__hash_node_base.433" = type { %"struct.std::__1::__hash_node_base.433"* }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.std::__1::__bucket_list_deallocator.435" }
%"class.std::__1::__bucket_list_deallocator.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.std::__1::__hash_node_base.433" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.455" = type { %"class.std::__1::__hash_table.456" }
%"class.std::__1::__hash_table.456" = type <{ %"class.std::__1::unique_ptr.457", %"class.std::__1::__compressed_pair.467", %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.476", [4 x i8] }>
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459", %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.std::__1::__hash_node_base.460"** }
%"struct.std::__1::__hash_node_base.460" = type { %"struct.std::__1::__hash_node_base.460"* }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.std::__1::__bucket_list_deallocator.462" }
%"class.std::__1::__bucket_list_deallocator.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.std::__1::__hash_node_base.460" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::stack.482" = type { %"class.std::__1::deque.483" }
%"class.std::__1::deque.483" = type { %"class.std::__1::__deque_base.484" }
%"class.std::__1::__deque_base.484" = type { %"struct.std::__1::__split_buffer.485", i64, %"class.std::__1::__compressed_pair.491" }
%"struct.std::__1::__split_buffer.485" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { i32** }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.SkSL::SPIRVCodeGenerator::UniformBuffer" = type { %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.SkSL::InterfaceBlock"* }
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr.37" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.SkSL::Variable"* }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"**, %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.SkSL::VarDeclaration"** }
%"class.std::__1::unordered_map.380" = type { %"class.std::__1::__hash_table.381" }
%"class.std::__1::__hash_table.381" = type <{ %"class.std::__1::unique_ptr.382", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384", %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.385"** }
%"struct.std::__1::__hash_node_base.385" = type { %"struct.std::__1::__hash_node_base.385"* }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.std::__1::__bucket_list_deallocator.387" }
%"class.std::__1::__bucket_list_deallocator.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base.385" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.SkSL::MetalCodeGenerator" = type <{ %"class.SkSL::CodeGenerator", %"class.std::__1::unordered_set.515", %"class.std::__1::unordered_map.537", %"class.std::__1::unordered_map.565", i32, i32, i8*, %"class.SkSL::Context"*, %"class.SkSL::String", %"class.SkSL::StringStream", i32, i32, i8, [7 x i8], %"class.std::__1::set", i8, [7 x i8], %"class.std::__1::unordered_map.593", i8, i8, [6 x i8], %"class.std::__1::unordered_set.515", i32, [4 x i8], %"class.SkSL::String", %"class.SkSL::FunctionDeclaration"*, i32, i8, [3 x i8] }>
%"class.std::__1::unordered_map.537" = type { %"class.std::__1::__hash_table.538" }
%"class.std::__1::__hash_table.538" = type <{ %"class.std::__1::unique_ptr.539", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.559", [4 x i8] }>
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541", %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.std::__1::__hash_node_base.542"** }
%"struct.std::__1::__hash_node_base.542" = type { %"struct.std::__1::__hash_node_base.542"* }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.std::__1::__bucket_list_deallocator.544" }
%"class.std::__1::__bucket_list_deallocator.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.542" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_map.565" = type { %"class.std::__1::__hash_table.566" }
%"class.std::__1::__hash_table.566" = type <{ %"class.std::__1::unique_ptr.567", %"class.std::__1::__compressed_pair.577", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.587", [4 x i8] }>
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569", %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.570"** }
%"struct.std::__1::__hash_node_base.570" = type { %"struct.std::__1::__hash_node_base.570"* }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.std::__1::__bucket_list_deallocator.572" }
%"class.std::__1::__bucket_list_deallocator.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::__hash_node_base.570" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.613", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_set.515" = type { %"class.std::__1::__hash_table.516" }
%"class.std::__1::__hash_table.516" = type <{ %"class.std::__1::unique_ptr.517", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.534", [4 x i8] }>
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519", %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.520"** }
%"struct.std::__1::__hash_node_base.520" = type { %"struct.std::__1::__hash_node_base.520"* }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.std::__1::__bucket_list_deallocator.522" }
%"class.std::__1::__bucket_list_deallocator.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.std::__1::__hash_node_base.520" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.63", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.159" }
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.38" }
%"class.std::__1::shared_ptr.38" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.39" }
%"class.std::__1::__hash_table.39" = type <{ %"class.std::__1::unique_ptr.40", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base.43"** }
%"struct.std::__1::__hash_node_base.43" = type { %"struct.std::__1::__hash_node_base.43"* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__bucket_list_deallocator.45" }
%"class.std::__1::__bucket_list_deallocator.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base.43" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.66", %"class.std::__1::shared_ptr.37", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set.79", i32, [4 x i8], %"class.std::__1::unordered_set.104", %"class.std::__1::vector.130"*, %"class.std::__1::vector.143"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.69", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::unordered_set.104" = type { %"class.std::__1::__hash_table.105" }
%"class.std::__1::__hash_table.105" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base.109"** }
%"struct.std::__1::__hash_node_base.109" = type { %"struct.std::__1::__hash_node_base.109"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator.111" }
%"class.std::__1::__bucket_list_deallocator.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.109" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { i64*, i64*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i64* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.SkSL::Compiler::ModuleData" = type { i8*, i8*, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.SkSL::String"* }
%"class.std::__1::tuple.641" = type { i8 }
%"struct.SkSL::LoadedModule" = type { i8, %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.130" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::Rehydrator" = type { %"class.SkSL::Context"*, %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.199", i8*, i8* }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"**, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.SkSL::Symbol"** }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"struct.SkSL::IRGenerator::IRBundle" = type <{ %"class.std::__1::vector.130", %"class.std::__1::vector.143", %"class.std::__1::shared_ptr.37", %"struct.SkSL::Program::Inputs", [6 x i8] }>
%class.SkEventTracer = type { i32 (...)** }
%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.246", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.234", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.130", %"class.std::__1::vector.143", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack.655" }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"class.std::__1::stack.655" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.656" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%class.StaticTestVerifier = type { %"class.SkSL::ProgramVisitor", %"class.SkSL::ErrorReporter"* }
%"class.SkSL::ProgramVisitor" = type { %"class.SkSL::TProgramVisitor" }
%"class.SkSL::TProgramVisitor" = type { i32 (...)** }
%class.DeadLocalVariableEliminator = type { %"class.SkSL::ProgramWriter", i8, %"class.SkSL::Context"*, %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramWriter" = type { %"class.SkSL::TProgramVisitor.290" }
%"class.SkSL::TProgramVisitor.290" = type { i32 (...)** }
%class.UnreachableCodeEliminator = type { %"class.SkSL::ProgramWriter", %"class.SkSL::Context"*, %"class.SkSL::ProgramUsage"*, %"class.std::__1::stack", %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.296" }
%"struct.std::__1::__split_buffer" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { i8** }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.SkSL::SPIRVCodeGenerator" = type <{ %"class.SkSL::CodeGenerator", %"class.SkSL::Context"*, %"class.SkSL::MemoryLayout", [4 x i8], i64, i32, i32, %"class.std::__1::unordered_map.300", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.380", %"class.std::__1::unordered_map.404", %"class.std::__1::unordered_map.404", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", i32, i32, %"class.std::__1::unordered_map.428", %"class.std::__1::unordered_map.455", i8, [3 x i8], i32, %"class.std::__1::stack.482", %"class.std::__1::stack.482", i32, i32, i32, [4 x i8], %"class.SkSL::SymbolTable", i32, [4 x i8], %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer", %"class.std::__1::vector.501", %"class.std::__1::unordered_map.380", i32, [4 x i8] }>
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.SkSL::GLSLCodeGenerator" = type { %"class.SkSL::CodeGenerator", i8*, %"class.SkSL::Context"*, %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::String", i32, i32, i8, %"class.std::__1::set", i8, i8, i8, i8, i8, i8, i8, %"class.SkSL::String" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.SkSL::String" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.SkSL::Nop" = type { %"class.SkSL::Statement" }
%"struct.std::__1::__split_buffer.666" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.std::__1::allocator.294"* }
%"class.std::__1::allocator.294" = type { i8 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::Context, std::__1::allocator<SkSL::Context> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::Context, std::__1::allocator<SkSL::Context> >::_Storage" = type { [744 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::__shared_ptr_emplace.743" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%"struct.std::__1::__shared_ptr_emplace.755" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::IRIntrinsicMap, std::__1::allocator<SkSL::IRIntrinsicMap> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::IRIntrinsicMap, std::__1::allocator<SkSL::IRIntrinsicMap> >::_Storage" = type { [48 x i8] }

$_ZNSt3__111make_uniqueIN4SkSL7ProgramEJNS_10unique_ptrINS1_6StringENS_14default_deleteIS4_EEEENS3_INS1_13ProgramConfigENS5_IS8_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISG_EEEENS_9allocatorISI_EEEENSF_IPKSG_NSJ_ISN_EEEENS3_INS1_13ModifiersPoolENS5_ISQ_EEEENSB_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISV_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev = comdat any

$_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEED2Ev = comdat any

$_ZN4SkSL18SPIRVCodeGeneratorD2Ev = comdat any

$_ZNK4SkSL12StringStream3strEv = comdat any

$_ZN4SkSL12StringStreamD2Ev = comdat any

$_ZN4SkSL17GLSLCodeGeneratorD2Ev = comdat any

$_ZN4SkSL18MetalCodeGeneratorC2EPKNS_7ContextEPKNS_7ProgramEPNS_13ErrorReporterEPNS_12OutputStreamE = comdat any

$_ZN4SkSL18MetalCodeGeneratorD2Ev = comdat any

$_ZN4SkSL8Compiler10errorCountEv = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZN4SkSL3NopD0Ev = comdat any

$_ZNK4SkSL3Nop11descriptionEv = comdat any

$_ZNK4SkSL3Nop7isEmptyEv = comdat any

$_ZNK4SkSL3Nop5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev = comdat any

$_ZNK4SkSL12OutputStream7isValidEv = comdat any

$_ZN4SkSL12StringStream6write8Eh = comdat any

$_ZN4SkSL12StringStream9writeTextEPKc = comdat any

$_ZN4SkSL12StringStream5writeEPKvm = comdat any

$_ZN4SkSL12StringStreamD0Ev = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL12BuiltinTypesD2Ev = comdat any

$_ZN4SkSL11IRGeneratorD2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE = comdat any

$_ZN4SkSL7ProgramD2Ev = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm = comdat any

$_ZTVN4SkSL3NopE = comdat any

$_ZTVN4SkSL12StringStreamE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEEE = comdat any

@_ZN4SkSL8Compiler10sOptimizerE = hidden local_unnamed_addr global i32 0, align 4
@_ZN4SkSL8Compiler8sInlinerE = hidden local_unnamed_addr global i32 0, align 4
@_ZTVN4SkSL8CompilerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Compiler"*)* @_ZN4SkSL8CompilerD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Compiler"*)* @_ZN4SkSL8CompilerD0Ev to i8*), i8* bitcast (void (%"class.SkSL::Compiler"*, i32, %"class.SkSL::String"*)* @_ZN4SkSL8Compiler5errorEiNS_6StringE to i8*), i8* bitcast (i32 (%"class.SkSL::Compiler"*)* @_ZN4SkSL8Compiler10errorCountEv to i8*), i8* bitcast (void (%"class.SkSL::Compiler"*, i32)* @_ZN4SkSL8Compiler13setErrorCountEi to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"sk_Caps\00", align 1
@_ZL21SKSL_INCLUDE_sksl_gpu = internal global [22266 x i8] c"\08\0A\0BSkBlendMode\07degrees\08$genType\07radians\05angle\03sin\03cos\03tan\01x\04asin\04acos\01y\04atan\08y_over_x\04sinh\04cosh\04tanh\05asinh\05acosh\05atanh\03pow\03exp\03log\04exp2\04log2\04sqrt\09$genHType\0Binversesqrt\03abs\09$genIType\04sign\05floor\05trunc\05round\09roundEven\04ceil\05fract\05float\03mod\04half\01i\04modf\03min\03int\03max\06minVal\06maxVal\05clamp\08saturate\01a\03mix\09$genBType\04edge\04step\05edge0\05edge1\0Asmoothstep\05isnan\05isinf\05value\0EfloatBitsToInt\0FfloatBitsToUint\09$genUType\0EintBitsToFloat\0FuintBitsToFloat\01b\01c\03fma\05frexp\05ldexp\01v\06float2\0DpackUnorm2x16\04uint\0DpackSnorm2x16\06float4\0CpackUnorm4x8\0CpackSnorm4x8\01p\0FunpackUnorm2x16\0FunpackSnorm2x16\0EunpackUnorm4x8\0EunpackSnorm4x8\0CpackHalf2x16\0EunpackHalf2x16\06length\02p0\02p1\08distance\03dot\06float3\05cross\05half3\09normalize\01N\01I\04Nref\0Bfaceforward\07reflect\03eta\07refract\04$mat\0EmatrixCompMult\05$hmat\01r\0CouterProduct\08float2x2\08float3x3\08float4x4\08float2x3\08float3x2\08float2x4\08float4x2\08float3x4\08float4x3\05half2\07half2x2\07half3x3\05half4\07half4x4\07half2x3\07half3x2\07half2x4\07half4x2\07half3x4\07half4x3\01m\09transpose\0A$squareMat\0Bdeterminant\0B$squareHMat\07inverse\04$vec\08lessThan\05$bvec\05$hvec\05$ivec\05$svec\06$usvec\05$uvec\0DlessThanEqual\0BgreaterThan\10greaterThanEqual\05equal\08notEqual\03any\04bool\03all\03not\08bitCount\07findLSB\07findMSB\07texture\09texture2D\01s\07sampler\0DmakeSampler2D\09sampler2D\0Dsampler2DRect\0BtextureSize\04int2\09sampler1D\01P\06sample\04bias\0Aisampler2D\04int4\12samplerExternalOES\07subpass\0CsubpassInput\0BsubpassLoad\0EsubpassInputMS\04dFdx\04dFdy\06fwidth\0Binterpolant\13interpolateAtSample\06offset\13interpolateAtOffset\03src\03dst\0Bblend_clear\09blend_src\09blend_dst\0Eblend_src_over\0Eblend_dst_over\0Cblend_src_in\0Cblend_dst_in\0Dblend_src_out\0Dblend_dst_out\0Eblend_src_atop\0Eblend_dst_atop\09blend_xor\0Ablend_plus\0Eblend_modulate\0Cblend_screen\01d\18_blend_overlay_component\0Dblend_overlay\0Cblend_darken\0Dblend_lighten\01n\0F_guarded_divide\16_color_dodge_component\11blend_color_dodge\15_color_burn_component\10blend_color_burn\10blend_hard_light\15_soft_light_component\10blend_soft_light\10blend_difference\0Fblend_exclusion\0Eblend_multiply\05color\16_blend_color_luminance\0BhueSatColor\05alpha\08lumColor\1A_blend_set_color_luminance\17_blend_color_saturation\09minMidMax\03sat\22_blend_set_color_saturation_helper\0BhueLumColor\08satColor\1B_blend_set_color_saturation\09blend_hue\10blend_saturation\0Bblend_color\10blend_luminosity\04mode\05blend\08unpremul\04proj%inBlendModesFailRandomlyForAllZeroVec\06result+mustGuardDivisionEvenAfterExplicitZeroCheck\05delta\04DSqd\04DCub\05DaSqd\05DaCub\03lum\07minComp\07maxComp\03sda\03dsa\06kClear\04kSrc\04kDst\08kSrcOver\08kDstOver\06kSrcIn\06kDstIn\07kSrcOut\07kDstOut\08kSrcATop\08kDstATop\04kXor\05kPlus\09kModulate\07kScreen\08kOverlay\07kDarken\08kLighten\0BkColorDodge\0AkColorBurn\0AkHardLight\0AkSoftLight\0BkDifference\0AkExclusion\09kMultiply\04kHue\0BkSaturation\06kColor\0BkLuminosity\19builtinDeterminantSupport1\EA\03\16\01\00\02\005\02\00\10\0E\002\03\00\16\00\03\1E\04\00\10\1F\00\01\02\00/\03\005\05\00\10\1F\00/\03\00\03\1E\06\00\10\0E\00\01\05\00/\03\005\07\00\10'\00/\03\00\03\1E\08\00\10-\00\01\07\00/\03\005\09\00\10'\00/\03\00\03\1E\0A\00\101\00\01\09\00/\03\005\0B\00\10'\00/\03\00\03\1E\0C\00\105\00\01\0B\00/\03\005\0D\00\109\00/\03\00\03\1E\0E\00\10;\00\01\0D\00/\03\005\0F\00\109\00/\03\00\03\1E\10\00\10@\00\01\0F\00/\03\005\11\00\10E\00/\03\00\035\12\00\109\00/\03\00\03\1E\13\00\10G\00\02\11\00\12\00/\03\005\14\00\10L\00/\03\00\034\15\00\02/\13\00\1E\16\00\10G\00\01\14\00/\03\00/\16\005\17\00\109\00/\03\00\03\1E\18\00\10U\00\01\17\00/\03\005\19\00\109\00/\03\00\03\1E\1A\00\10Z\00\01\19\00/\03\005\1B\00\109\00/\03\00\03\1E\1C\00\10_\00\01\1B\00/\03\005\1D\00\109\00/\03\00\03\1E\1E\00\10d\00\01\1D\00/\03\005\1F\00\109\00/\03\00\03\1E \00\10j\00\01\1F\00/\03\005!\00\109\00/\03\00\03\1E\22\00\10p\00\01!\00/\03\005#\00\109\00/\03\00\035$\00\10E\00/\03\00\03\1E%\00\10v\00\02#\00$\00/\03\005&\00\109\00/\03\00\03\1E'\00\10z\00\01&\00/\03\005(\00\109\00/\03\00\03\1E)\00\10~\00\01(\00/\03\005*\00\109\00/\03\00\03\1E+\00\10\82\00\01*\00/\03\005,\00\109\00/\03\00\03\1E-\00\10\87\00\01,\00/\03\005.\00\109\00/\03\00\03\1E/\00\10\8C\00\01.\00/\03\0050\00\10\0E\0021\00\91\00\0342\00\02/\04\00\1E3\00\10\1F\00\010\00/1\00/3\0054\00\10\1F\00/1\00\0345\00\02/\06\00\1E6\00\10\0E\00\014\00/1\00/6\0057\00\10'\00/1\00\0348\00\02/\08\00\1E9\00\10-\00\017\00/1\00/9\005:\00\10'\00/1\00\034;\00\02/\0A\00\1E<\00\101\00\01:\00/1\00/<\005=\00\10'\00/1\00\034>\00\02/\0C\00\1E?\00\105\00\01=\00/1\00/?\005@\00\109\00/1\00\034A\00\02/\0E\00\1EB\00\10;\00\01@\00/1\00/B\005C\00\109\00/1\00\034D\00\02/\10\00\1EE\00\10@\00\01C\00/1\00/E\005F\00\10E\00/1\00\035G\00\109\00/1\00\034H\00\03/\13\00/\16\00\1EI\00\10G\00\02F\00G\00/1\00/I\005J\00\10L\00/1\00\034K\00\04/\13\00/\16\00/I\00\1EL\00\10G\00\01J\00/1\00/L\005M\00\109\00/1\00\034N\00\02/\18\00\1EO\00\10U\00\01M\00/1\00/O\005P\00\109\00/1\00\034Q\00\02/\1A\00\1ER\00\10Z\00\01P\00/1\00/R\005S\00\109\00/1\00\034T\00\02/\1C\00\1EU\00\10_\00\01S\00/1\00/U\005V\00\109\00/1\00\034W\00\02/\1E\00\1EX\00\10d\00\01V\00/1\00/X\005Y\00\109\00/1\00\034Z\00\02/ \00\1E[\00\10j\00\01Y\00/1\00/[\005\5C\00\109\00/1\00\034]\00\02/\22\00\1E^\00\10p\00\01\5C\00/1\00/^\005_\00\109\00/1\00\035`\00\10E\00/1\00\034a\00\02/%\00\1Eb\00\10v\00\02_\00`\00/1\00/b\005c\00\109\00/1\00\034d\00\02/'\00\1Ee\00\10z\00\01c\00/1\00/e\005f\00\109\00/1\00\034g\00\02/)\00\1Eh\00\10~\00\01f\00/1\00/h\005i\00\109\00/1\00\034j\00\02/+\00\1Ek\00\10\82\00\01i\00/1\00/k\005l\00\109\00/1\00\034m\00\02/-\00\1En\00\10\87\00\01l\00/1\00/n\005o\00\109\00/1\00\034p\00\02//\00\1Eq\00\10\8C\00\01o\00/1\00/q\005r\00\109\00/\03\00\03\1Es\00\10\9B\00\01r\00/\03\005t\00\109\00/1\00\034u\00\02/s\00\1Ev\00\10\9B\00\01t\00/1\00/v\005w\00\109\00/\03\00\03\1Ex\00\10\A7\00\01w\00/\03\005y\00\109\00/1\00\034z\00\02/x\00\1E{\00\10\A7\00\01y\00/1\00/{\005|\00\109\002}\00\AB\00\034~\00\03/x\00/{\00\1E\7F\00\10\A7\00\01|\00/}\00/\7F\005\80\00\109\00/\03\00\03\1E\81\00\10\B5\00\01\80\00/\03\005\82\00\109\00/1\00\034\83\00\02/\81\00\1E\84\00\10\B5\00\01\82\00/1\00/\84\005\85\00\109\00/}\00\034\86\00\03/\81\00/\84\00\1E\87\00\10\B5\00\01\85\00/}\00/\87\005\88\00\109\00/\03\00\03\1E\89\00\10\BA\00\01\88\00/\03\005\8A\00\109\00/1\00\034\8B\00\02/\89\00\1E\8C\00\10\BA\00\01\8A\00/1\00/\8C\005\8D\00\109\00/\03\00\03\1E\8E\00\10\C0\00\01\8D\00/\03\005\8F\00\109\00/1\00\034\90\00\02/\8E\00\1E\91\00\10\C0\00\01\8F\00/1\00/\91\005\92\00\109\00/\03\00\03\1E\93\00\10\C6\00\01\92\00/\03\005\94\00\109\00/1\00\034\95\00\02/\93\00\1E\96\00\10\C6\00\01\94\00/1\00/\96\005\97\00\109\00/\03\00\03\1E\98\00\10\CC\00\01\97\00/\03\005\99\00\109\00/1\00\034\9A\00\02/\98\00\1E\9B\00\10\CC\00\01\99\00/1\00/\9B\005\9C\00\109\00/\03\00\03\1E\9D\00\10\D6\00\01\9C\00/\03\005\9E\00\109\00/1\00\034\9F\00\02/\9D\00\1E\A0\00\10\D6\00\01\9E\00/1\00/\A0\005\A1\00\109\00/\03\00\03\1E\A2\00\10\DB\00\01\A1\00/\03\005\A3\00\109\00/1\00\034\A4\00\02/\A2\00\1E\A5\00\10\DB\00\01\A3\00/1\00/\A5\005\A6\00\109\00/\03\00\035\A7\00\10E\002\A8\00\E1\00\03\1E\A9\00\10\E7\00\02\A6\00\A7\00/\03\005\AA\00\109\00/\03\00\035\AB\00\10E\00/\03\00\034\AC\00\02/\A9\00\1E\AD\00\10\E7\00\02\AA\00\AB\00/\03\00/\AD\005\AE\00\109\00/1\00\035\AF\00\10E\002\B0\00\EB\00\034\B1\00\03/\A9\00/\AD\00\1E\B2\00\10\E7\00\02\AE\00\AF\00/1\00/\B2\005\B3\00\109\00/1\00\035\B4\00\10E\00/1\00\034\B5\00\04/\A9\00/\AD\00/\B2\00\1E\B6\00\10\E7\00\02\B3\00\B4\00/1\00/\B6\005\B7\00\109\00/\03\00\035\B8\00%\0F\04\F0\00/\03\00\03\1E\B9\00\10\F2\00\02\B7\00\B8\00/\03\005\BA\00\109\00/1\00\035\BB\00%\0F\04\F0\00/1\00\034\BC\00\02/\B9\00\1E\BD\00\10\F2\00\02\BA\00\BB\00/1\00/\BD\005\BE\00\109\00/\03\00\035\BF\00\10E\00/\03\00\03\1E\C0\00\10\F7\00\02\BE\00\BF\00/\03\005\C1\00\109\00/\03\00\035\C2\00\10E\00/\A8\00\034\C3\00\02/\C0\00\1E\C4\00\10\F7\00\02\C1\00\C2\00/\03\00/\C4\005\C5\00\109\00/1\00\035\C6\00\10E\00/1\00\034\C7\00\03/\C0\00/\C4\00\1E\C8\00\10\F7\00\02\C5\00\C6\00/1\00/\C8\005\C9\00\109\00/1\00\035\CA\00\10E\00/\B0\00\034\CB\00\04/\C0\00/\C4\00/\C8\00\1E\CC\00\10\F7\00\02\C9\00\CA\00/1\00/\CC\005\CD\00\109\00/}\00\035\CE\00\10E\00/}\00\034\CF\00\05/\C0\00/\C4\00/\C8\00/\CC\00\1E\D0\00\10\F7\00\02\CD\00\CE\00/}\00/\D0\005\D1\00\109\00/}\00\035\D2\00\10E\002\D3\00\FB\00\034\D4\00\06/\C0\00/\C4\00/\C8\00/\CC\00/\D0\00\1E\D5\00\10\F7\00\02\D1\00\D2\00/}\00/\D5\005\D6\00\109\00/\03\00\035\D7\00\10E\00/\03\00\03\1E\D8\00\10\FF\00\02\D6\00\D7\00/\03\005\D9\00\109\00/\03\00\035\DA\00\10E\00/\A8\00\034\DB\00\02/\D8\00\1E\DC\00\10\FF\00\02\D9\00\DA\00/\03\00/\DC\005\DD\00\109\00/1\00\035\DE\00\10E\00/1\00\034\DF\00\03/\D8\00/\DC\00\1E\E0\00\10\FF\00\02\DD\00\DE\00/1\00/\E0\005\E1\00\109\00/1\00\035\E2\00\10E\00/\B0\00\034\E3\00\04/\D8\00/\DC\00/\E0\00\1E\E4\00\10\FF\00\02\E1\00\E2\00/1\00/\E4\005\E5\00\109\00/}\00\035\E6\00\10E\00/}\00\034\E7\00\05/\D8\00/\DC\00/\E0\00/\E4\00\1E\E8\00\10\FF\00\02\E5\00\E6\00/}\00/\E8\005\E9\00\109\00/}\00\035\EA\00\10E\00/\D3\00\034\EB\00\06/\D8\00/\DC\00/\E0\00/\E4\00/\E8\00\1E\EC\00\10\FF\00\02\E9\00\EA\00/}\00/\EC\005\ED\00\109\00/\03\00\035\EE\00\10\03\01/\03\00\035\EF\00\10\0A\01/\03\00\03\1E\F0\00\10\11\01\03\ED\00\EE\00\EF\00/\03\005\F1\00\109\00/\03\00\035\F2\00\10\03\01/\A8\00\035\F3\00\10\0A\01/\A8\00\034\F4\00\02/\F0\00\1E\F5\00\10\11\01\03\F1\00\F2\00\F3\00/\03\00/\F5\005\F6\00\109\00/1\00\035\F7\00\10\03\01/1\00\035\F8\00\10\0A\01/1\00\034\F9\00\03/\F0\00/\F5\00\1E\FA\00\10\11\01\03\F6\00\F7\00\F8\00/1\00/\FA\005\FB\00\109\00/1\00\035\FC\00\10\03\01/\B0\00\035\FD\00\10\0A\01/\B0\00\034\FE\00\04/\F0\00/\F5\00/\FA\00\1E\FF\00\10\11\01\03\FB\00\FC\00\FD\00/1\00/\FF\005\00\01\109\00/}\00\035\01\01\10\03\01/}\00\035\02\01\10\0A\01/}\00\034\03\01\05/\F0\00/\F5\00/\FA\00/\FF\00\1E\04\01\10\11\01\03\00\01\01\01\02\01/}\00/\04\015\05\01\109\00/}\00\035\06\01\10\03\01/\D3\00\035\07\01\10\0A\01/\D3\00\034\08\01\06/\F0\00/\F5\00/\FA\00/\FF\00/\04\01\1E\09\01\10\11\01\03\05\01\06\01\07\01/}}\00\035.\01\10E\00/}\00\035/\01\10 \01/%\01\0340\01\07/\12\01/\17\01/\1C\01/!\01/'\01/,\01\1E1\01\10\22\01\03-\01.\01/\01/}\00/1\0152\01\109\00/%\01\0353\01\10E\00/%\01\0354\01\10 \01/%\01\0345\01\08/\12\01/\17\01/\1C\01/!\01/'\01/,\01/1\01\1E6\01\10\22\01\032\013\014\01/%\01/6\0157\01\100\01/\03\00\0358\01\109\00/\03\00\03\1E9\01\105\01\027\018\01/\03\005:\01\100\01/\A8\00\035;\01\109\00/\03\00\034<\01\02/9\01\1E=\01\105\01\02:\01;\01/\03\00/=\015>\01\100\01/1\00\035?\01\109\00/1\00\034@\01\03/9\01/=\01\1EA\01\105\01\02>\01?\01/1\00/A\015B\01\100\01/\B0\00\035C\01\109\00/1\00\034D\01\04/9\01/=\01/A\01\1EE\01\105\01\02B\01C\01/1\00/E\015F\01\10:\01/\03\00\035G\01\10@\01/\03\00\035H\01\109\00/\03\00\03\1EI\01\10F\01\03F\01G\01H\01/\03\005J\01\10:\01/\A8\00\035K\01\10@\01/\A8\00\035L\01\109\00/\03\00\034M\01\02/I\01\1EN\01\10F\01\03J\01K\01L\01/\03\00/N\015O\01\10:\01/1\00\035P\01\10@\01/1\00\035Q\01\109\00/1\00\034R\01\03/I\01/N\01\1ES\01\10F\01\03O\01P\01Q\01/1\00/S\015T\01\10:\01/\B0\00\035U\01\10@\01/\B0\00\035V\01\109\00/1\00\034W\01\04/I\01/N\01/S\01\1EX\01\10F\01\03T\01U\01V\01/1\00/X\015Y\01\109\00/\03\00\03\1EZ\01\10Q\01\01Y\01/%\015[\01\109\00/\03\00\03\1E\5C\01\10W\01\01[\01/%\015]\01\10]\01/\03\00\03\1E^\01\10c\01\01]\01/}\005_\01\10]\01/\03\00\03\1E`\01\10r\01\01_\012a\01\82\015b\01\10]\01/}\00\03\1Ec\01\10\8C\01\01b\01/\03\005d\01\10]\01/a\01\03\1Ee\01\10\9B\01\01d\01/\03\005f\01\10 \01/\03\00\035g\01\10\AB\01/\03\00\035h\01\10\AD\01/\03\00\03\1Ei\01\10\AF\01\03f\01g\01h\01/\03\005j\01\10 \01/1\00\035k\01\10\AB\01/1\00\035l\01\10\AD\01/1\00\034m\01\02/i\01\1En\01\10\AF\01\03j\01k\01l\01/1\00/n\015o\01\109\00/\03\00\035p\01%\0F\04z\00/}\00\03\1Eq\01%\0F@\B3\01\02o\01p\01/\03\005r\01\109\00/1\00\035s\01%\0F\04z\00/}\00\034t\01\02/q\01\1Eu\01%\0F@\B3\01\02r\01s\01/1\00/u\015v\01\109\00/\03\00\035w\01%\0F\02z\00/}\00\03\1Ex\01\10\B9\01\02v\01w\01/\03\005y\01\109\00/1\00\035z\01%\0F\02z\00/}\00\034{\01\02/x\01\1E|\01\10\B9\01\02y\01z\01/1\00/|\015}\01\10\BF\012~\01\C1\01\03\1E\7F\01\10\C8\01\01}\012\80\01\D6\015\81\01\10\BF\01/~\01\03\1E\82\01\10\DB\01\01\81\01/\80\015\83\01\10\BF\012\84\01\E9\01\03\1E\85\01\10\F0\01\01\83\01/\80\015\86\01\10\BF\01/\84\01\03\1E\87\01\10\FD\01\01\86\01/\80\015\88\01\10\0A\02/\80\01\03\1E\89\01\10\0C\02\01\88\01/~\015\8A\01\10\0A\02/\80\01\03\1E\8B\01\10\1C\02\01\8A\01/~\015\8C\01\10\0A\02/\80\01\03\1E\8D\01\10,\02\01\8C\01/\84\015\8E\01\10\0A\02/\80\01\03\1E\8F\01\10;\02\01\8E\01/\84\015\90\01\10\BF\01/~\01\03\1E\91\01\10J\02\01\90\01/\80\015\92\01\10\BF\01/\80\01\03\1E\93\01\10W\02\01\92\01/~\015\94\01\109\00/\03\00\03\1E\95\01\10f\02\01\94\01/\A8\005\96\01\109\00/1\00\034\97\01\02/\95\01\1E\98\01\10f\02\01\96\01/\B0\00/\98\015\99\01\10m\02/\03\00\035\9A\01\10p\02/\03\00\03\1E\9B\01\10s\02\02\99\01\9A\01/\A8\005\9C\01\10m\02/1\00\035\9D\01\10p\02/1\00\034\9E\01\02/\9B\01\1E\9F\01\10s\02\02\9C\01\9D\01/\B0\00/\9F\015\A0\01\109\00/\03\00\035\A1\01\10E\00/\03\00\03\1E\A2\01\10|\02\02\A0\01\A1\01/\A8\005\A3\01\109\00/1\00\035\A4\01\10E\00/1\00\034\A5\01\02/\A2\01\1E\A6\01\10|\02\02\A3\01\A4\01/\B0\00/\A6\015\A7\01\109\002\A8\01\80\02\035\A9\01\10E\00/\A8\01\03\1E\AA\01\10\87\02\02\A7\01\A9\01/\A8\015\AB\01\109\002\AC\01\8D\02\035\AD\01\10E\00/\AC\01\034\AE\01\02/\AA\01\1E\AF\01\10\87\02\02\AB\01\AD\01/\AC\01/\AF\015\B0\01\109\00/\03\00\03\1E\B1\01\10\93\02\01\B0\01/\03\005\B2\01\109\00/1\00\034\B3\01\02/\B1\01\1E\B4\01\10\93\02\01\B2\01/1\00/\B4\015\B5\01\10\9D\02/\03\00\035\B6\01\10\9F\02/\03\00\035\B7\01\10\A1\02/\03\00\03\1E\B8\01\10\A6\02\03\B5\01\B6\01\B7\01/\03\005\B9\01\10\9D\02/1\00\035\BA\01\10\9F\02/1\00\035\BB\01\10\A1\02/1\00\034\BC\01\02/\B8\01\1E\BD\01\10\A6\02\03\B9\01\BA\01\BB\01/1\00/\BD\015\BE\01\10\9F\02/\03\00\035\BF\01\10\9D\02/\03\00\03\1E\C0\01\10\B2\02\02\BE\01\BF\01/\03\005\C1\01\10\9F\02/1\00\035\C2\01\10\9D\02/1\00\034\C3\01\02/\C0\01\1E\C4\01\10\B2\02\02\C1\01\C2\01/1\00/\C4\015\C5\01\10\9F\02/\03\00\035\C6\01\10\9D\02/\03\00\035\C7\01\10\BA\02/\A8\00\03\1E\C8\01\10\BE\02\03\C5\01\C6\01\C7\01/\03\005\C9\01\10\9F\02/1\00\035\CA\01\10\9D\02/1\00\035\CB\01\10\BA\02/\B0\00\034\CC\01\02/\C8\01\1E\CD\01\10\BE\02\03\C9\01\CA\01\CB\01/1\00/\CD\015\CE\01\109\002\CF\01\C6\02\035\D0\01\10E\00/\CF\01\03\1E\D1\01\10\CB\02\02\CE\01\D0\01/\CF\015\D2\01\109\002\D3\01\DA\02\035\D4\01\10E\00/\D3\01\034\D5\01\02/\D1\01\1E\D6\01\10\CB\02\02\D2\01\D4\01/\D3\01/\D6\015\D7\01\10\AD\01/~\01\035\D8\01\10\E0\02/~\01\03\1E\D9\01\10\E2\02\02\D7\01\D8\012\DA\01\EF\025\DB\01\10\AD\01/\A8\01\035\DC\01\10\E0\02/\A8\01\034\DD\01\02/\D9\01\1E\DE\01\10\E2\02\02\DB\01\DC\012\DF\01\F8\02/\DE\015\E0\01\10\AD\01/\84\01\035\E1\01\10\E0\02/\84\01\034\E2\01\03/\D9\01/\DE\01\1E\E3\01\10\E2\02\02\E0\01\E1\012\E4\01\01\03/\E3\015\E5\01\10\AD\01/\A8\01\035\E6\01\10\E0\02/~\01\034\E7\01\04/\D9\01/\DE\01/\E3\01\1E\E8\01\10\E2\02\02\E5\01\E6\012\E9\01\0A\03/\E8\015\EA\01\10\AD\01/~\01\035\EB\01\10\E0\02/\A8\01\034\EC\01\05/\D9\01/\DE\01/\E3\01/\E8\01\1E\ED\01\10\E2\02\02\EA\01\EB\012\EE\01\13\03/\ED\015\EF\01\10\AD\01/\84\01\035\F0\01\10\E0\02/~\01\034\F1\01\06/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01\1E\F2\01\10\E2\02\02\EF\01\F0\012\F3\01\1C\03/\F2\015\F4\01\10\AD\01/~\01\035\F5\01\10\E0\02/\84\01\034\F6\01\07/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01\1E\F7\01\10\E2\02\02\F4\01\F5\012\F8\01%\03/\F7\015\F9\01\10\AD\01/\84\01\035\FA\01\10\E0\02/\A8\01\034\FB\01\08/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01\1E\FC\01\10\E2\02\02\F9\01\FA\012\FD\01.\03/\FC\015\FE\01\10\AD\01/\A8\01\035\FF\01\10\E0\02/\84\01\034\00\02\09/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01\1E\01\02\10\E2\02\02\FE\01\FF\012\02\027\03/\01\025\03\02\10\AD\012\04\02@\03\035\05\02\10\E0\02/\04\02\034\06\02\0A/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02\1E\07\02\10\E2\02\02\03\02\05\022\08\02F\03/\07\025\09\02\10\AD\01/\AC\01\035\0A\02\10\E0\02/\AC\01\034\0B\02\0B/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02\1E\0C\02\10\E2\02\02\09\02\0A\022\0D\02N\03/\0C\025\0E\02\10\AD\012\0F\02V\03\035\10\02\10\E0\02/\0F\02\034\11\02\0C/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02\1E\12\02\10\E2\02\02\0E\02\10\022\13\02\5C\03/\12\025\14\02\10\AD\01/\AC\01\035\15\02\10\E0\02/\04\02\034\16\02\0D/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02\1E\17\02\10\E2\02\02\14\02\15\022\18\02d\03/\17\025\19\02\10\AD\01/\04\02\035\1A\02\10\E0\02/\AC\01\034\1B\02\0E/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02/\17\02\1E\1C\02\10\E2\02\02\19\02\1A\022\1D\02l\03/\1C\025\1E\02\10\AD\01/\0F\02\035\1F\02\10\E0\02/\04\02\034 \02\0F/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02/\17\02/\1C\02\1E!\02\10\E2\02\02\1E\02\1F\022\22\02t\03/!\025#\02\10\AD\01/\04\02\035$\02\10\E0\02/\0F\02\034%\02\10/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02/\17\02/\1C\02/!\02\1E&\02\10\E2\02\02#\02$\022'\02|\03/&\025(\02\10\AD\01/\0F\02\035)\02\10\E0\02/\AC\01\034*\02\11/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02/\17\02/\1C\02/!\02/&\02\1E+\02\10\E2\02\02(\02)\022,\02\84\03/+\025-\02\10\AD\01/\AC\01\035.\02\10\E0\02/\0F\02\034/\02\12/\D9\01/\DE\01/\E3\01/\E8\01/\ED\01/\F2\01/\F7\01/\FC\01/\01\02/\07\02/\0C\02/\12\02/\17\02/\1C\02/!\02/&\02/+\02\1E0\02\10\E2\02\02-\02.\0221\02\8C\03/0\0252\02\10\94\03/\DA\01\03\1E3\02\10\96\03\012\02/\DA\0154\02\10\94\03/\DF\01\0345\02\02/3\02\1E6\02\10\96\03\014\02/\DF\01/6\0257\02\10\94\03/\E4\01\0348\02\03/3\02/6\02\1E9\02\10\96\03\017\02/\E4\01/9\025:\02\10\94\03/\EE\01\034;\02\04/3\02/6\02/9\02\1E<\02\10\96\03\01:\02/\E9\01/<\025=\02\10\94\03/\E9\01\034>\02\05/3\02/6\02/9\02/<\02\1E?\02\10\96\03\01=\02/\EE\01/?\025@\02\10\94\03/\F8\01\034A\02\06/3\02/6\02/9\02/<\02/?\02\1EB\02\10\96\03\01@\02/\F3\01/B\025C\02\10\94\03/\F3\01\034D\02\07/3\02/6\02/9\02/<\02/?\02/B\02\1EE\02\10\96\03\01C\02/\F8\01/E\025F\02\10\94\03/\02\02\034G\02\08/3\02/6\02/9\02/<\02/?\02/B\02/E\02\1EH\02\10\96\03\01F\02/\FD\01/H\025I\02\10\94\03/\FD\01\034J\02\09/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02\1EK\02\10\96\03\01I\02/\02\02/K\025L\02\10\94\03/\08\02\034M\02\0A/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02\1EN\02\10\96\03\01L\02/\08\02/N\025O\02\10\94\03/\0D\02\034P\02\0B/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02\1EQ\02\10\96\03\01O\02/\0D\02/Q\025R\02\10\94\03/\13\02\034S\02\0C/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02\1ET\02\10\96\03\01R\02/\13\02/T\025U\02\10\94\03/\1D\02\034V\02\0D/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02\1EW\02\10\96\03\01U\02/\18\02/W\025X\02\10\94\03/\18\02\034Y\02\0E/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02/W\02\1EZ\02\10\96\03\01X\02/\1D\02/Z\025[\02\10\94\03/'\02\034\5C\02\0F/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02/W\02/Z\02\1E]\02\10\96\03\01[\02/\22\02/]\025^\02\10\94\03/\22\02\034_\02\10/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02/W\02/Z\02/]\02\1E`\02\10\96\03\01^\02/'\02/`\025a\02\10\94\03/1\02\034b\02\11/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02/W\02/Z\02/]\02/`\02\1Ec\02\10\96\03\01a\02/,\02/c\025d\02\10\94\03/,\02\034e\02\12/3\02/6\02/9\02/<\02/?\02/B\02/E\02/H\02/K\02/N\02/Q\02/T\02/W\02/Z\02/]\02/`\02/c\02\1Ef\02\10\96\03\01d\02/1\02/f\025g\02\10\94\032h\02\A0\03\03\1Ei\02\10\AB\03\01g\02/\A8\005j\02\10\94\032k\02\B7\03\034l\02\02/i\02\1Em\02\10\AB\03\01j\02/\B0\00/m\025n\02\10\94\03/h\02\03\1Eo\02\10\C3\03\01n\02/h\025p\02\10\94\03/k\02\034q\02\02/o\02\1Er\02\10\C3\03\01p\02/k\02/r\025s\02\109\002t\02\CB\03\035u\02\10E\00/t\02\03\1Ev\02\10\D0\03\02s\02u\022w\02\D9\035x\02\109\002y\02\DF\03\035z\02\10E\00/y\02\034{\02\02/v\02\1E|\02\10\D0\03\02x\02z\02/w\02/|\025}\02\109\002~\02\E5\03\035\7F\02\10E\00/~\02\034\80\02\03/v\02/|\02\1E\81\02\10\D0\03\02}\02\7F\02/w\02/\81\025\82\02\109\002\83\02\EB\03\035\84\02\10E\00/\83\02\034\85\02\04/v\02/|\02/\81\02\1E\86\02\10\D0\03\02\82\02\84\02/w\02/\86\025\87\02\109\002\88\02\F1\03\035\89\02\10E\00/\88\02\034\8A\02\05/v\02/|\02/\81\02/\86\02\1E\8B\02\10\D0\03\02\87\02\89\02/w\02/\8B\025\8C\02\109\002\8D\02\F8\03\035\8E\02\10E\00/\8D\02\034\8F\02\06/v\02/|\02/\81\02/\86\02/\8B\02\1E\90\02\10\D0\03\02\8C\02\8E\02/w\02/\90\025\91\02\109\00/t\02\035\92\02\10E\00/t\02\03\1E\93\02\10\FE\03\02\91\02\92\02/w\025\94\02\109\00/y\02\035\95\02\10E\00/y\02\034\96\02\02/\93\02\1E\97\02\10\FE\03\02\94\02\95\02/w\02/\97\025\98\02\109\00/~\02\035\99\02\10E\00/~\02\034\9A\02\03/\93\02/\97\02\1E\9B\02\10\FE\03\02\98\02\99\02/w\02/\9B\025\9C\02\109\00/\8D\02\035\9D\02\10E\00/\8D\02\034\9E\02\04/\93\02/\97\02/\9B\02\1E\9F\02\10\FE\03\02\9C\02\9D\02/w\02/\9F\025\A0\02\109\00/\83\02\035\A1\02\10E\00/\83\02\034\A2\02\05/\93\02/\97\02/\9B\02/\9F\02\1E\A3\02\10\FE\03\02\A0\02\A1\02/w\02/\A3\025\A4\02\109\00/\88\02\035\A5\02\10E\00/\88\02\034\A6\02\06/\93\02/\97\02/\9B\02/\9F\02/\A3\02\1E\A7\02\10\FE\03\02\A4\02\A5\02/w\02/\A7\025\A8\02\109\00/t\02\035\A9\02\10E\00/t\02\03\1E\AA\02\10\0C\04\02\A8\02\A9\02/w\025\AB\02\109\00/y\02\035\AC\02\10E\00/y\02\034\AD\02\02/\AA\02\1E\AE\02\10\0C\04\02\AB\02\AC\02/w\02/\AE\025\AF\02\109\00/~\02\035\B0\02\10E\00/~\02\034\B1\02\03/\AA\02/\AE\02\1E\B2\02\10\0C\04\02\AF\02\B0\02/w\02/\B2\025\B3\02\109\00/\8D\02\035\B4\02\10E\00/\8D\02\034\B5\02\04/\AA\02/\AE\02/\B2\02\1E\B6\02\10\0C\04\02\B3\02\B4\02/w\02/\B6\025\B7\02\109\00/\83\02\035\B8\02\10E\00/\83\02\034\B9\02\05/\AA\02/\AE\02/\B2\02/\B6\02\1E\BA\02\10\0C\04\02\B7\02\B8\02/w\02/\BA\025\BB\02\109\00/\88\02\035\BC\02\10E\00/\88\02\034\BD\02\06/\AA\02/\AE\02/\B2\02/\B6\02/\BA\02\1E\BE\02\10\0C\04\02\BB\02\BC\02/w\02/\BE\025\BF\02\109\00/t\02\035\C0\02\10E\00/t\02\03\1E\C1\02\10\18\04\02\BF\02\C0\02/w\025\C2\02\109\00/y\02\035\C3\02\10E\00/y\02\034\C4\02\02/\C1\02\1E\C5\02\10\18\04\02\C2\02\C3\02/w\02/\C5\025\C6\02\109\00/~\02\035\C7\02\10E\00/~\02\034\C8\02\03/\C1\02/\C5\02\1E\C9\02\10\18\04\02\C6\02\C7\02/w\02/\C9\025\CA\02\109\00/\8D\02\035\CB\02\10E\00/\8D\02\034\CC\02\04/\C1\02/\C5\02/\C9\02\1E\CD\02\10\18\04\02\CA\02\CB\02/w\02/\CD\025\CE\02\109\00/\83\02\035\CF\02\10E\00/\83\02\034\D0\02\05/\C1\02/\C5\02/\C9\02/\CD\02\1E\D1\02\10\18\04\02\CE\02\CF\02/w\02/\D1\025\D2\02\109\00/\88\02\035\D3\02\10E\00/\88\02\034\D4\02\06/\C1\02/\C5\02/\C9\02/\CD\02/\D1\02\1E\D5\02\10\18\04\02\D2\02\D3\02/w\02/\D5\025\D6\02\109\00/t\02\035\D7\02\10E\00/t\02\03\1E\D8\02\10)\04\02\D6\02\D7\02/w\025\D9\02\109\00/y\02\035\DA\02\10E\00/y\02\034\DB\02\02/\D8\02\1E\DC\02\10)\04\02\D9\02\DA\02/w\02/\DC\025\DD\02\109\00/~\02\035\DE\02\10E\00/~\02\034\DF\02\03/\D8\02/\DC\02\1E\E0\02\10)\04\02\DD\02\DE\02/w\02/\E0\025\E1\02\109\00/\8D\02\035\E2\02\10E\00/\8D\02\034\E3\02\04/\D8\02/\DC\02/\E0\02\1E\E4\02\10)\04\02\E1\02\E2\02/w\02/\E4\025\E5\02\109\00/\83\02\035\E6\02\10E\00/\83\02\034\E7\02\05/\D8\02/\DC\02/\E0\02/\E4\02\1E\E8\02\10)\04\02\E5\02\E6\02/w\02/\E8\025\E9\02\109\00/\88\02\035\EA\02\10E\00/\88\02\034\EB\02\06/\D8\02/\DC\02/\E0\02/\E4\02/\E8\02\1E\EC\02\10)\04\02\E9\02\EA\02/w\02/\EC\025\ED\02\109\00/w\02\035\EE\02\10E\00/w\02\034\EF\02\07/\D8\02/\DC\02/\E0\02/\E4\02/\E8\02/\EC\02\1E\F0\02\10)\04\02\ED\02\EE\02/w\02/\F0\025\F1\02\109\00/t\02\035\F2\02\10E\00/t\02\03\1E\F3\02\10/\04\02\F1\02\F2\02/w\025\F4\02\109\00/y\02\035\F5\02\10E\00/y\02\034\F6\02\02/\F3\02\1E\F7\02\10/\04\02\F4\02\F5\02/w\02/\F7\025\F8\02\109\00/~\02\035\F9\02\10E\00/~\02\034\FA\02\03/\F3\02/\F7\02\1E\FB\02\10/\04\02\F8\02\F9\02/w\02/\FB\025\FC\02\109\00/\8D\02\035\FD\02\10E\00/\8D\02\034\FE\02\04/\F3\02/\F7\02/\FB\02\1E\FF\02\10/\04\02\FC\02\FD\02/w\02/\FF\025\00\03\109\00/\83\02\035\01\03\10E\00/\83\02\034\02\03\05/\F3\02/\F7\02/\FB\02/\FF\02\1E\03\03\10/\04\02\00\03\01\03/w\02/\03\035\04\03\109\00/\88\02\035\05\03\10E\00/\88\02\034\06\03\06/\F3\02/\F7\02/\FB\02/\FF\02/\03\03\1E\07\03\10/\04\02\04\03\05\03/w\02/\07\035\08\03\109\00/w\02\035\09\03\10E\00/w\02\034\0A\03\07/\F3\02/\F7\02/\FB\02/\FF\02/\03\03/\07\03\1E\0B\03\10/\04\02\08\03\09\03/w\02/\0B\035\0C\03\109\00/w\02\03\1E\0D\03\108\04\01\0C\032\0E\03<\045\0F\03\109\00/w\02\03\1E\10\03\10A\04\01\0F\03/\0E\035\11\03\109\00/w\02\03\1E\12\03\10E\04\01\11\03/w\025\13\03\10]\01/}\00\03\1E\14\03\10I\04\01\13\03/}\005\15\03\10]\01/a\01\034\16\03\02/\14\03\1E\17\03\10I\04\01\15\03/}\00/\17\035\18\03\10]\01/}\00\03\1E\19\03\10R\04\01\18\03/}\005\1A\03\10]\01/a\01\034\1B\03\02/\19\03\1E\1C\03\10R\04\01\1A\03/}\00/\1C\035\1D\03\10]\01/}\00\03\1E\1E\03\10Z\04\01\1D\03/}\005\1F\03\10]\01/a\01\034 \03\02/\1E\03\1E!\03\10Z\04\01\1F\03/}\00/!\035\22\03\10b\042#\03j\04\035$\03\10t\042%\03v\04\03\1E&\03\10~\04\02\22\03$\032'\03\8C\045(\03\10t\042)\03\96\04\03\1E*\03\10\A4\04\01(\032+\03\B0\045,\03\10t\042-\03\B5\04\035.\03\10\BF\04/\A8\00\03\1E/\03\10\C1\04\02,\03.\03/\0F\0250\03\10t\04/-\03\0351\03\10\BF\04/\A8\00\0352\03\10\C8\04/\A8\00\0343\03\02//\03\1E4\03\10\C1\04\030\031\032\03/\0F\02/4\0355\03\10t\04/'\03\0356\03\10\BF\04/~\01\0347\03\03//\03/4\03\1E8\03\10\C1\04\025\036\03/\0F\02/8\0359\03\10t\042:\03\CD\04\035;\03\10\BF\04/~\01\034<\03\04//\03/4\03/8\03\1E=\03\10\C1\04\029\03;\032>\03\D8\04/=\035?\03\10t\042@\03\DD\04\035A\03\10\BF\04/~\01\035B\03\10\C8\04/\A8\00\034C\03\05//\03/4\03/8\03/=\03\1ED\03\10\C1\04\03?\03A\03B\03/\0F\02/D\035E\03\10t\04/@\03\035F\03\10\BF\04/~\01\034G\03\06//\03/4\03/8\03/=\03/D\03\1EH\03\10\C1\04\02E\03F\03/\0F\02/H\035I\03\10t\04/)\03\035J\03\10\BF\04/~\01\034K\03\07//\03/4\03/8\03/=\03/D\03/H\03\1EL\03\10\C1\04\02I\03J\03/\0F\02/L\035M\03\10t\04/)\03\035N\03\10\BF\04/\A8\01\034O\03\08//\03/4\03/8\03/=\03/D\03/H\03/L\03\1EP\03\10\C1\04\02M\03N\03/\0F\02/P\035Q\03\10\F0\042R\03\F8\04\03\1ES\03\10\05\05\01Q\03/\0F\025T\03\10\F0\042U\03\11\05\035V\03\10\C1\04/\D3\00\034W\03\02/S\03\1EX\03\10\05\05\02T\03V\03/\0F\02/X\035Y\03\10t\04/-\03\035Z\03\10\BF\04/~\01\034[\03\09//\03/4\03/8\03/=\03/D\03/H\03/L\03/P\03\1E\5C\03\10\C1\04\02Y\03Z\03/\0F\02/\5C\035]\03\10t\04/-\03\035^\03\10\BF\04/~\01\035_\03\10\C8\04/\A8\00\034`\03\0A//\03/4\03/8\03/=\03/D\03/H\03/L\03/P\03/\5C\03\1Ea\03\10\C1\04\03]\03^\03_\03/\0F\02/a\035b\03\10t\04/'\03\035c\03\10\BF\04/\A8\01\034d\03\0B//\03/4\03/8\03/=\03/D\03/H\03/L\03/P\03/\5C\03/a\03\1Ee\03\10\C1\04\02b\03c\03/\0F\02/e\035f\03\10t\04/'\03\035g\03\10\BF\04/\A8\01\035h\03\10\C8\04/\A8\00\034i\03\0C//\03/4\03/8\03/=\03/D\03/H\03/L\03/P\03/\5C\03/a\03/e\03\1Ej\03\10\C1\04\03f\03g\03h\03/\0F\02/j\035k\03\10\0A\02/\03\00\03\1El\03\10 \05\01k\03/\03\005m\03\10\0A\02/\03\00\03\1En\03\10%\05\01m\03/\03\005o\03\10\0A\02/1\00\034p\03\02/l\03\1Eq\03\10 \05\01o\03/1\00/q\035r\03\10\0A\02/1\00\034s\03\02/n\03\1Et\03\10%\05\01r\03/1\00/t\035u\03\10\0A\02/\03\00\03\1Ev\03\10*\05\01u\03/\03\005w\03\10\0A\02/1\00\034x\03\02/v\03\1Ey\03\10*\05\01w\03/1\00/y\035z\03\101\05/\A8\00\035{\03\10\C1\04/\D3\00\03\1E|\03\10=\05\02z\03{\03/\A8\005}\03\101\05/~\01\035~\03\10\C1\04/\D3\00\034\7F\03\02/|\03\1E\80\03\10=\05\02}\03~\03/~\01/\80\035\81\03\101\05/\A8\01\035\82\03\10\C1\04/\D3\00\034\83\03\03/|\03/\80\03\1E\84\03\10=\05\02\81\03\82\03/\A8\01/\84\035\85\03\101\05/\84\01\035\86\03\10\C1\04/\D3\00\034\87\03\04/|\03/\80\03/\84\03\1E\88\03\10=\05\02\85\03\86\03/\84\01/\88\035\89\03\101\05/\A8\00\035\8A\03\10Q\05/~\01\03\1E\8B\03\10X\05\02\89\03\8A\03/\A8\005\8C\03\101\05/~\01\035\8D\03\10Q\05/~\01\034\8E\03\02/\8B\03\1E\8F\03\10X\05\02\8C\03\8D\03/~\01/\8F\035\90\03\101\05/\A8\01\035\91\03\10Q\05/~\01\034\92\03\03/\8B\03/\8F\03\1E\93\03\10X\05\02\90\03\91\03/\A8\01/\93\035\94\03\101\05/\84\01\035\95\03\10Q\05/~\01\034\96\03\04/\8B\03/\8F\03/\93\03\1E\97\03\10X\05\02\94\03\95\03/\84\01/\97\035\98\03\10l\05/\0F\02\035\99\03\10p\05/\0F\02\03\1E\9A\03\10t\05\02\98\03\99\03/\0F\025\9B\03\10l\05/\0F\02\035\9C\03\10p\05/\0F\02\03\1E\9D\03\10\80\05\02\9B\03\9C\03/\0F\025\9E\03\10l\05/\0F\02\035\9F\03\10p\05/\0F\02\03\1E\A0\03\10\8A\05\02\9E\03\9F\03/\0F\025\A1\03\10l\05/\0F\02\035\A2\03\10p\05/\0F\02\03\1E\A3\03\10\94\05\02\A1\03\A2\03/\0F\025\A4\03\10l\05/\0F\02\035\A5\03\10p\05/\0F\02\03\1E\A6\03\10\A3\05\02\A4\03\A5\03/\0F\025\A7\03\10l\05/\0F\02\035\A8\03\10p\05/\0F\02\03\1E\A9\03\10\B2\05\02\A7\03\A8\03/\0F\025\AA\03\10l\05/\0F\02\035\AB\03\10p\05/\0F\02\03\1E\AC\03\10\BF\05\02\AA\03\AB\03/\0F\025\AD\03\10l\05/\0F\02\035\AE\03\10p\05/\0F\02\03\1E\AF\03\10\CC\05\02\AD\03\AE\03/\0F\025\B0\03\10l\05/\0F\02\035\B1\03\10p\05/\0F\02\03\1E\B2\03\10\DA\05\02\B0\03\B1\03/\0F\025\B3\03\10l\05/\0F\02\035\B4\03\10p\05/\0F\02\03\1E\B5\03\10\E8\05\02\B3\03\B4\03/\0F\025\B6\03\10l\05/\0F\02\035\B7\03\10p\05/\0F\02\03\1E\B8\03\10\F7\05\02\B6\03\B7\03/\0F\025\B9\03\10l\05/\0F\02\035\BA\03\10p\05/\0F\02\03\1E\BB\03\10\06\06\02\B9\03\BA\03/\0F\025\BC\03\10l\05/\0F\02\035\BD\03\10p\05/\0F\02\03\1E\BE\03\10\10\06\02\BC\03\BD\03/\0F\025\BF\03\10l\05/\0F\02\035\C0\03\10p\05/\0F\02\03\1E\C1\03\10\1B\06\02\BF\03\C0\03/\0F\025\C2\03\10l\05/\0F\02\035\C3\03\10p\05/\0F\02\03\1E\C4\03\10*\06\02\C2\03\C3\03/\0F\025\C5\03\10t\04/\04\02\035\C6\03\107\06/\04\02\03\1E\C7\03\109\06\02\C5\03\C6\03/\B0\005\C8\03\10l\05/\0F\02\035\C9\03\10p\05/\0F\02\03\1E\CA\03\10R\06\02\C8\03\C9\03/\0F\025\CB\03\10l\05/\0F\02\035\CC\03\10p\05/\0F\02\03\1E\CD\03\10`\06\02\CB\03\CC\03/\0F\025\CE\03\10l\05/\0F\02\035\CF\03\10p\05/\0F\02\03\1E\D0\03\10m\06\02\CE\03\CF\03/\0F\025\D1\03\10{\06/\B0\00\035\D2\03\107\06/\B0\00\03\1E\D3\03\10}\06\02\D1\03\D2\03/\B0\005\D4\03\10{\06/\AC\01\035\D5\03\107\06/\B0\00\034\D6\03\02/\D3\03\1E\D7\03\10}\06\02\D4\03\D5\03/\AC\01/\D7\035\D8\03\10t\04/\04\02\035\D9\03\107\06/\04\02\03\1E\DA\03\10\8D\06\02\D8\03\D9\03/\B0\005\DB\03\10l\05/\0F\02\035\DC\03\10p\05/\0F\02\03\1E\DD\03\10\A4\06\02\DB\03\DC\03/\0F\025\DE\03\10t\04/\04\02\035\DF\03\107\06/\04\02\03\1E\E0\03\10\B6\06\02\DE\03\DF\03/\B0\005\E1\03\10l\05/\0F\02\035\E2\03\10p\05/\0F\02\03\1E\E3\03\10\CC\06\02\E1\03\E2\03/\0F\025\E4\03\10l\05/\0F\02\035\E5\03\10p\05/\0F\02\03\1E\E6\03\10\DD\06\02\E4\03\E5\03/\0F\025\E7\03\10t\04/\04\02\035\E8\03\107\06/\04\02\03\1E\E9\03\10\EE\06\02\E7\03\E8\03/\B0\005\EA\03\10l\05/\0F\02\035\EB\03\10p\05/\0F\02\03\1E\EC\03\10\04\07\02\EA\03\EB\03/\0F\025\ED\03\10l\05/\0F\02\035\EE\03\10p\05/\0F\02\03\1E\EF\03\10\15\07\02\ED\03\EE\03/\0F\025\F0\03\10l\05/\0F\02\035\F1\03\10p\05/\0F\02\03\1E\F2\03\10&\07\02\F0\03\F1\03/\0F\025\F3\03\10l\05/\0F\02\035\F4\03\10p\05/\0F\02\03\1E\F5\03\106\07\02\F3\03\F4\03/\0F\025\F6\03\10E\07/\AC\01\03\1E\F7\03\10K\07\01\F6\03/\B0\005\F8\03\10b\07/\AC\01\035\F9\03\10n\07/\B0\00\035\FA\03\10t\07/\AC\01\03\1E\FB\03\10}\07\03\F8\03\F9\03\FA\03/\AC\015\FC\03\10E\07/\AC\01\03\1E\FD\03\10\98\07\01\FC\03/\B0\005\FE\03\10\B0\07/\AC\01\035\FF\03\10\BA\07/\B0\00\03\1E\00\04\10\BE\07\02\FE\03\FF\03/\AC\015\01\04\10\E1\07/\AC\01\035\02\04\10\ED\07/\AC\01\03\1E\03\04\10\F6\07\02\01\04\02\04/\AC\015\04\04\10l\05/\0F\02\035\05\04\10p\05/\0F\02\03\1E\06\04\10\12\08\02\04\04\05\04/\0F\025\07\04\10l\05/\0F\02\035\08\04\10p\05/\0F\02\03\1E\09\04\10\1C\08\02\07\04\08\04/\0F\025\0A\04\10l\05/\0F\02\035\0B\04\10p\05/\0F\02\03\1E\0C\04\10-\08\02\0A\04\0B\04/\0F\025\0D\04\10l\05/\0F\02\035\0E\04\10p\05/\0F\02\03\1E\0F\04\109\08\02\0D\04\0E\04/\0F\025\10\04\10J\08/\01\00\035\11\04\10l\05/\0F\02\035\12\04\10p\05/\0F\02\03\1E\13\04\10O\08\03\10\04\11\04\12\04/\0F\025\14\04\10E\07/\0F\02\03\1E\15\04\10U\08\01\14\04/\0F\025\16\04\10E\07/\84\01\034\17\04\02/\15\04\1E\18\04\10U\08\01\16\04/\84\01/\18\045\19\04\10\0A\02/\A8\01\03\1E\1A\04\10^\08\01\19\04/~\015\1B\04\10 \01/~\01\035\1C\04\10\AB\01/~\01\034\1D\04\03/\AA\01/\AF\01\1E\1E\04\10\87\02\02\1B\04\1C\04/\A8\00/\1E\045\1F\04\10 \01/\04\02\035 \04\10\AB\01/\04\02\034!\04\04/\AA\01/\AF\01/\1E\04\1E\22\04\10\87\02\02\1F\04 \04/\B0\00/\22\04\86\00\00\00\BE\03\C4\03\8E\03\C2\03\CA\03\C7\03\A7\03\A1\03\9D\03\B0\03z\00A\00W\00\E2\02\E0\02>\00T\00H\00Z\00\E8\02\DA\03a\03\D3\03\AA\03\A4\03\94\03\B6\03g\03\7F\03s\03y\03m\03\B9\03\AD\03\CD\03\97\03\D6\03\88\03\BC\03\91\03\85\03\D0\03\8B\03\B3\03d\03|\03p\03v\03j\03\82\03\9B\00\01\018\00N\00\E8\037\03:\032\00F\02\92\01\99\01\C2\02a\00g\00\AE\01\ED\02\F2\02V\01X\01\87\00d\01\A0\00k\01?\03\90\02\A7\02Z\01]\03N\03K\02r\00T\01R\01r\01\8B\01b\02y\02d\00j\00\F6\02\C5\01\E4\00\CD\00-\01\AF\00\B6\00\A5\01\E4\02\DD\02\0C\02\85\01w\01{\01u\01y\01^\00\E1\03/\00\B5\01\BE\01\91\00\96\000\03\06\01\82\005\00K\00O\01m\00<\01\1E\03;\00Q\00\F8\02A\02\8C\00\5C\01\87\01\7F\01\83\01}\01\81\01\DE\03\13\1D\9A\03\021\00\00\00\00\01)\0C/\0F\02\01\1A/\B0\00\00\00\00\00\01\00\1D\9D\03\021\00\00\00\00\01)8\9B\03\00\01\00\1D\A0\03\021\00\00\00\00\01)8\9F\03\00\01\00\1D\A3\03\021\00\00\00\00\01)\018\A1\03\00.\01\01\1A/\B0\00\00\00\80?/.8\A1\03\00\01\0308\A2\03\00\01\00\1D\A6\03\021\00\00\00\00\01)\01\01\01\1A/\B0\00\00\00\80?/.8\A5\03\00\01\0308\A4\03\00.8\A5\03\00\01\00\1D\A9\03\021\00\00\00\00\01)3*c\083\018\A7\03\00A\0C/\0F\02\01\1A/\B0\00\00\00\00\00\0C/\0F\02\01\1A/\B0\00\00\00\00\00\018\A7\03\000.8\A8\03\00\01\03\018\A7\03\000.8\A8\03\00\01\03\01\00\1D\AC\03\021\00\00\00\00\01)\1C/\0F\02\A9\03\028\AB\03\008\AA\03\00\01\01\A9\03\1D\AF\03\021\00\00\00\00\01)\01\01\1A/\B0\00\00\00\80?/.8\AE\03\00\01\0308\AD\03\00\01\00\1D\B2\03\021\00\00\00\00\01)\01\01\1A/\B0\00\00\00\80?/.8\B0\03\00\01\0308\B1\03\00\01\00\1D\B5\03\021\00\00\00\00\01)\01\01.8\B4\03\00\01\0308\B3\03\00.\01\01\1A/\B0\00\00\00\80?/.8\B3\03\00\01\0308\B4\03\00\01\00\1D\B8\03\021\00\00\00\00\01)\01\01\01\1A/\B0\00\00\00\80?/.8\B7\03\00\01\0308\B6\03\00.\01.8\B6\03\00\01\0308\B7\03\00\01\00\1D\BB\03\021\00\00\00\00\01)\01\01\01\1A/\B0\00\00\00\80?/.8\BA\03\00\01\0308\B9\03\00.\01\01\1A/\B0\00\00\00\80?/.8\B9\03\00\01\0308\BA\03\00\01\00\1D\BE\03\021\00\00\00\00\01)\1C/\0F\02\CC\00\02\018\BC\03\00.8\BD\03\00\1A/\B0\00\00\00\80?\01\00\1D\C1\03\021\00\00\00\00\01)\018\BF\03\0008\C0\03\00\01\00\1D\C4\03\021\00\00\00\00\01)\018\C2\03\00.\01\01\1A/\B0\00\00\00\80?/8\C2\03\0008\C3\03\00\01\00\1D\C7\03\021\00\00\00\00\01)3\01\01\1A/\B0\00\00\00\00@0.8\C6\03\00\01\00F.8\C6\03\00\01\01\01\01\1A/\B0\00\00\00\00@0.8\C5\03\00\01\000.8\C6\03\00\01\00\01\01.8\C5\03\00\01\010.8\C6\03\00\01\01/\01\01\1A/\B0\00\00\00\00@0\01.8\C6\03\00\01\01/.8\C6\03\00\01\000\01.8\C5\03\00\01\01/.8\C5\03\00\01\00\01\00\1D\CA\03\021\01\005#\04\10\89\08/\0F\02\02\01\00\00\00\036#\04/\0F\02\00\07/\0F\02\04\1C/\B0\00\C7\03\02.8\C8\03\00\02\00\03.8\C9\03\00\02\00\03\1C/\B0\00\C7\03\02.8\C8\03\00\02\01\03.8\C9\03\00\02\01\03\1C/\B0\00\C7\03\02.8\C8\03\00\02\02\03.8\C9\03\00\02\02\03\01.8\C8\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\C8\03\00\01\030.8\C9\03\00\01\03\17\01.8#\04\02\03\00\01\02G\01\01.8\C9\03\00\03\00\01\020\01\1A/\B0\00\00\00\80?/.8\C8\03\00\01\03.\01.8\C8\03\00\03\00\01\020\01\1A/\B0\00\00\00\80?/.8\C9\03\00\01\03)8#\04\00\01\01\C7\03\1D\CD\03\021\01\005$\04\10\89\08/\0F\02\02\01\00\00\00\036$\04/\0F\02\00\1C/\0F\02\A3\03\028\CB\03\008\CC\03\00\17\01.8$\04\01\03\00\01\02@\1C/\AC\01\C8\00\02.8$\04\00\03\00\01\02\01\01\01\1A/\B0\00\00\00\80?/.8\CC\03\00\01\030.8\CB\03\00\03\00\01\02..8\CC\03\00\03\00\01\02)8$\04\00\01\01\A3\03\1D\D0\03\021\01\005%\04\10\89\08/\0F\02\02\01\00\00\00\036%\04/\0F\02\00\1C/\0F\02\A3\03\028\CE\03\008\CF\03\00\17\01.8%\04\01\03\00\01\02@\1C/\AC\01\E0\00\02.8%\04\00\03\00\01\02\01\01\01\1A/\B0\00\00\00\80?/.8\CF\03\00\01\030.8\CE\03\00\03\00\01\02..8\CF\03\00\03\00\01\02)8%\04\00\01\01\A3\03\1D\D3\03\021\00\00\00\00\01)3*\90\08\018\D1\03\001\018\D2\03\00.\1A/\B0\00w\CC+2\018\D1\03\0018\D2\03\00\01\00\1D\D7\03\021\00\00\00\00\01)3*\90\08\018\D4\03\001\018\D5\03\00.\1A/\B0\00w\CC+2\018\D4\03\0018\D5\03\00\01\00\1D\DA\03\021\00\00\00\00\01\1F\00\01.8\D9\03\00\01\00A\1A/\B0\00\00\00\00\00\021\00\00\00\00\01)\01.8\D8\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\D9\03\00\01\01\01\021\01\005&\04\10\BC\08/\B0\00\02\01\00\00\00\026&\04/\B0\00\00\01.8\D8\03\00\01\01/.8\D8\03\00\01\00\1F\00\018&\04\00A\1A/\B0\00\00\00\00\00\021\00\00\00\00\01)\01\01\01.8\D8\03\00\01\010.8\D9\03\00\01\01.\01.8\D8\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\D9\03\00\01\01.\01.8\D9\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\D8\03\00\01\01\01\021\00\00\00\00\02\17\018&\04\01@\1C/\B0\00\C8\00\02.8\D9\03\00\01\01\1C/\B0\00\D3\03\02\01.8\D9\03\00\01\000.8\D8\03\00\01\018&\04\00)\01\01\018&\04\000.8\D8\03\00\01\01.\01.8\D8\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\D9\03\00\01\01.\01.8\D9\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\D8\03\00\01\01\01\01\01\01\D3\03\1D\DD\03\021\00\00\00\00\01)\07/\0F\02\04\1C/\B0\00\DA\03\02.8\DB\03\00\02\00\03.8\DC\03\00\02\00\03\1C/\B0\00\DA\03\02.8\DB\03\00\02\01\03.8\DC\03\00\02\01\03\1C/\B0\00\DA\03\02.8\DB\03\00\02\02\03.8\DC\03\00\02\02\03\01.8\DB\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\DB\03\00\01\030.8\DC\03\00\01\03\01\01\DA\03\1D\E0\03\021\00\00\00\00\01\1F\00\01.8\DF\03\00\01\01A.8\DF\03\00\01\00\021\00\00\00\00\01)\01\01\01.8\DE\03\00\01\010.8\DF\03\00\01\01.\01.8\DE\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\DF\03\00\01\01.\01.8\DF\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\DE\03\00\01\01\01\1F\00\01.8\DE\03\00\01\00A\1A/\B0\00\00\00\00\00\021\00\00\00\00\01)\01.8\DF\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\DE\03\00\01\01\01\021\01\005'\04\10\BC\08/\B0\00\02\01\00\00\00\026'\04/\B0\00\00\1C/\B0\00\E0\00\02\1A/\B0\00\00\00\00\00\01.8\DF\03\00\01\01/\1C/\B0\00\D3\03\02\01\01.8\DF\03\00\01\01/.8\DF\03\00\01\000.8\DE\03\00\01\01.8\DE\03\00\01\00)\01\01\018'\04\000.8\DE\03\00\01\01.\01.8\DE\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\DF\03\00\01\01.\01.8\DF\03\00\01\000\01\1A/\B0\00\00\00\80?/.8\DE\03\00\01\01\01\01\01\D3\03\1D\E3\03\021\00\00\00\00\01)\07/\0F\02\04\1C/\B0\00\E0\03\02.8\E1\03\00\02\00\03.8\E2\03\00\02\00\03\1C/\B0\00\E0\03\02.8\E1\03\00\02\01\03.8\E2\03\00\02\01\03\1C/\B0\00\E0\03\02.8\E1\03\00\02\02\03.8\E2\03\00\02\02\03\01.8\E1\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\E1\03\00\01\030.8\E2\03\00\01\03\01\01\E0\03\1D\E6\03\021\00\00\00\00\01)\1C/\0F\02\CA\03\028\E5\03\008\E4\03\00\01\01\CA\03\1D\E9\03\021\00\00\00\00\01\1F\00\01\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00F.8\E7\03\00\01\01\021\00\00\00\00\01)\01\01\1C/\B0\00\D3\03\02\01\01.8\E8\03\00\01\000.8\E8\03\00\01\000\01.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00.8\E8\03\00\01\01.\01\01\1A/\B0\00\00\00\80?/.8\E8\03\00\01\010.8\E7\03\00\01\00.\01.8\E8\03\00\01\000\01\01(/.8\E7\03\00\01\01.\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00.\1A/\B0\00\00\00\80?\01\1F\00\01\01\1A/\B0\00\00\00\80@0.8\E8\03\00\01\00F.8\E8\03\00\01\01\021\04\005(\04\10\C2\08/\B0\00\025)\04\10\C7\08/\B0\00\025*\04\10\CC\08/\B0\00\025+\04\10\D2\08/\B0\00\02\04\00\01\00\00\00\03\00\02\00\056(\04/\B0\00\00\01.8\E8\03\00\01\000.8\E8\03\00\01\006)\04/\B0\00\00\018(\04\000.8\E8\03\00\01\006*\04/\B0\00\00\01.8\E8\03\00\01\010.8\E8\03\00\01\016+\04/\B0\00\00\018*\04\000.8\E8\03\00\01\01)\1C/\B0\00\D3\03\02\01\01\01\018*\04\000\01.8\E7\03\00\01\00/\01.8\E8\03\00\01\000\01\01\01\1A/\B0\00\00\00@@0.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\C0@0.8\E7\03\00\01\00/\1A/\B0\00\00\00\80?.\01\01\01\1A/\B0\00\00\00@A0.8\E8\03\00\01\0108(\04\000\01.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00/\01\01\1A/\B0\00\00\00\80A08)\04\000\01.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00/\018+\04\000.8\E7\03\00\01\008*\04\00\01\021\00\00\00\00\01)\01\01\01\01.8\E8\03\00\01\000\01\01.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00.\1A/\B0\00\00\00\80?..8\E7\03\00\01\00/\01\1C/\B0\00q\00\01\01.8\E8\03\00\01\010.8\E8\03\00\01\000\01.8\E7\03\00\01\01/\01\1A/\B0\00\00\00\00@0.8\E7\03\00\01\00/\01.8\E8\03\00\01\010.8\E7\03\00\01\00\01\01\01\D3\03\1D\EC\03\021\00\00\00\00\01)3\01.8\EB\03\00\01\03A\1A/\B0\00\00\00\00\008\EA\03\00\07/\0F\02\04\1C/\B0\00\E9\03\02.8\EA\03\00\02\00\03.8\EB\03\00\02\00\03\1C/\B0\00\E9\03\02.8\EA\03\00\02\01\03.8\EB\03\00\02\01\03\1C/\B0\00\E9\03\02.8\EA\03\00\02\02\03.8\EB\03\00\02\02\03\01.8\EA\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\EA\03\00\01\030.8\EB\03\00\01\03\01\01\E9\03\1D\EF\03\021\00\00\00\00\01)\07/\0F\02\02\01\01.8\ED\03\00\03\00\01\02..8\EE\03\00\03\00\01\02/\01\1A/\B0\00\00\00\00@0\1C/\AC\01\C8\00\02\01.8\ED\03\00\03\00\01\020.8\EE\03\00\01\03\01.8\EE\03\00\03\00\01\020.8\ED\03\00\01\03\01.8\ED\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\ED\03\00\01\030.8\EE\03\00\01\03\01\00\1D\F2\03\021\00\00\00\00\01)\07/\0F\02\02\01\01.8\F1\03\00\03\00\01\02..8\F0\03\00\03\00\01\02/\01\01\1A/\B0\00\00\00\00@0.8\F1\03\00\03\00\01\020.8\F0\03\00\03\00\01\02\01.8\F0\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\F0\03\00\01\030.8\F1\03\00\01\03\01\00\1D\F5\03\021\00\00\00\00\01)\07/\0F\02\02\01\01\01\01\1A/\B0\00\00\00\80?/.8\F3\03\00\01\030.8\F4\03\00\03\00\01\02.\01\01\1A/\B0\00\00\00\80?/.8\F4\03\00\01\030.8\F3\03\00\03\00\01\02.\01.8\F3\03\00\03\00\01\020.8\F4\03\00\03\00\01\02\01.8\F3\03\00\01\03.\01\01\1A/\B0\00\00\00\80?/.8\F3\03\00\01\030.8\F4\03\00\01\03\01\00\1D\F7\03\021\00\00\00\00\01)\1C/\B0\00\A6\01\02\07/\AC\01\03\1A/\B0\00\9A\99\99>\1A/\B0\00=\0A\17?\1A/\B0\00\AEG\E1=8\F6\03\00\01\00\1D\FB\03\021\04\005,\04\10\D8\08/\B0\00\025-\04\10\89\08/\AC\01\025.\04\10\DC\08/\B0\00\025/\04\10\E4\08/\B0\00\02\04\00\00\00\03\00\02\00\01\00\066,\04/\B0\00\00\1C/\B0\00\F7\03\018\FA\03\006-\04/\AC\01\00\01\018,\04\00/\1C/\B0\00\F7\03\018\F8\03\00.8\F8\03\006.\04/\B0\00\00\1C/\B0\00\C8\00\02\1C/\B0\00\C8\00\02.8-\04\00\01\00.8-\04\00\01\01.8-\04\00\01\026/\04/\B0\00\00\1C/\B0\00\E0\00\02\1C/\B0\00\E0\00\02.8-\04\00\01\00.8-\04\00\01\01.8-\04\00\01\02\1F\00\01\018.\04\00D\1A/\B0\00\00\00\00\00;\018,\04\00B8.\04\00\021\00\00\00\00\01\17\018-\04\01@\018,\04\00.\01\018-\04\00/8,\04\000\1C/\B0\00\D3\03\028,\04\00\018,\04\00/8.\04\00\019\1F\00\01\018/\04\00C8\F9\03\00;\018/\04\00B8,\04\00\021\00\00\00\00\01)\018,\04\00.\1C/\AC\01\D7\03\02\01\018-\04\00/8,\04\000\018\F9\03\00/8,\04\00\018/\04\00/8,\04\00\01\021\00\00\00\00\01)8-\04\00\01\01\03\D3\03\D7\03\F7\03\1D\FD\03\021\00\00\00\00\01)\01\1C/\B0\00\E0\00\02\1C/\B0\00\E0\00\02.8\FC\03\00\01\00.8\FC\03\00\01\01.8\FC\03\00\01\02/\1C/\B0\00\C8\00\02\1C/\B0\00\C8\00\02.8\FC\03\00\01\00.8\FC\03\00\01\01.8\FC\03\00\01\02\01\00\1D\00\04\021\00\00\00\00\01\1F\00\01.8\FE\03\00\01\00D.8\FE\03\00\01\02\021\00\00\00\00\01)\07/\AC\01\03\1A/\B0\00\00\00\00\00\1C/\B0\00\D3\03\02\018\FF\03\000\01.8\FE\03\00\01\01/.8\FE\03\00\01\00\01.8\FE\03\00\01\02/.8\FE\03\00\01\008\FF\03\00\01\021\00\00\00\00\01)\0C/\AC\01\01\1A/\B0\00\00\00\00\00\01\01\01\D3\03\1D\03\04\021\01\0050\04\10\BA\07/\B0\00\02\01\00\00\00\0260\04/\B0\00\00\1C/\B0\00\FD\03\018\02\04\00\1F\00\01.8\01\04\00\01\00F.8\01\04\00\01\01\021\00\00\00\00\01\1F\00\01.8\01\04\00\01\01F.8\01\04\00\01\02\021\00\00\00\00\01)\1C/\AC\01\00\04\028\01\04\0080\04\00\01\1F\00\01.8\01\04\00\01\00F.8\01\04\00\01\02\021\00\00\00\00\01).\1C/\AC\01\00\04\02.8\01\04\00\03\00\02\0180\04\00\03\00\02\01\01\021\00\00\00\00\01).\1C/\AC\01\00\04\02.8\01\04\00\03\02\00\0180\04\00\03\01\02\00\01\01\1F\00\01.8\01\04\00\01\00F.8\01\04\00\01\02\021\00\00\00\00\01).\1C/\AC\01\00\04\02.8\01\04\00\03\01\00\0280\04\00\03\01\00\02\01\1F\00\01.8\01\04\00\01\01F.8\01\04\00\01\02\021\00\00\00\00\01).\1C/\AC\01\00\04\02.8\01\04\00\03\01\02\0080\04\00\03\02\00\01\01\021\00\00\00\00\01).\1C/\AC\01\00\04\02.8\01\04\00\03\02\01\0080\04\00\03\02\01\00\01\01\02\FD\03\00\04\1D\06\04\021\03\0051\04\10nnn\07/\B0\00\0258\04\10\EC\08/\AC\01\0259\04\10\F0\08/\AC\01\02\03\00\00\00\02\00\01\00\0467\04/\B0\00\00\01.8\0B\04\00\01\030.8\0A\04\00\01\0368\04/\AC\01\00\01.8\0A\04\00\03\00\01\020.8\0B\04\00\01\0369\04/\AC\01\00\01.8\0B\04\00\03\00\01\020.8\0A\04\00\01\03)\07/\0F\02\02\01\01\01\01\1C/\AC\01\FB\03\0388\04\0087\04\0089\04\00..8\0B\04\00\03\00\01\02/89\04\00..8\0A\04\00\03\00\01\02/88\04\00\01\01.8\0A\04\00\01\03..8\0B\04\00\01\03/87\04\00\01\01\FB\03\1D\0F\04\021\03\005:\04\10n\07/\B0\00\025;\04\10\EC\08/\AC\01\025<\04\10\F0\08/\AC\01\02\03\00\00\00\02\00\01\00\046:\04/\B0\00\00\01.8\0E\04\00\01\030.8\0D\04\00\01\036;\04/\AC\01\00\01.8\0D\04\00\03\00\01\020.8\0E\04\00\01\036<\04/\AC\01\00\01.8\0E\04\00\03\00\01\020.8\0D\04\00\01\03)\07/\0F\02\02\01\01\01\01\1C/\AC\01\FB\03\038<\04\008:\04\008;\04\00..8\0E\04\00\03\00\01\02/8<\04\00..8\0D\04\00\03\00\01\02/8;\04\00\01\01.8\0D\04\00\01\03..8\0E\04\00\01\03/8:\04\00\01\01\FB\03\15\02\001\1D\005=\04%\0F\01\F4\08/\01\00\005>\04%\0F\01\FB\08/\01\00\005?\04%\0F\01\00\09/\01\00\005@\04%\0F\01\05\09/\01\00\005A\04%\0F\01\0E\09/\01\00\005B\04%\0F\01\17\09/\01\00\005C\04%\0F\01\1E\09/\01\00\005D\04%\0F\01%\09/\01\00\005E\04%\0F\01-\09/\01\00\005F\04%\0F\015\09/\01\00\005G\04%\0F\01>\09/\01\00\005H\04%\0F\01G\09/\01\00\005I\04%\0F\01L\09/\01\00\005J\04%\0F\01R\09/\01\00\005K\04%\0F\01\5C\09/\01\00\005L\04%\0F\01d\09/\01\00\005M\04%\0F\01m\09/\01\00\005N\04%\0F\01u\09/\01\00\005O\04%\0F\01~\09/\01\00\005P\04%\0F\01\8A\09/\01\00\005Q\04%\0F\01\95\09/\01\00\005R\04%\0F\01\A0\09/\01\00\005S\04%\0F\01\AB\09/\01\00\005T\04%\0F\01\B7\09/\01\00\005U\04%\0F\01\C2\09/\01\00\005V\04%\0F\01\CC\09/\01\00\005W\04%\0F\01\D1\09/\01\00\005X\04%\0F\01\DD\09/\01\00\005Y\04%\0F\01\E4\09/\01\00\00\1D\00\00\00\1B\00\13\00\12\00\10\00\16\00\02\00\0A\00\06\00\08\00\04\00\17\00\14\00\19\00\11\00\1C\00\0D\00\18\00\0F\00\0C\00\1A\00\0E\00\15\00\01\00\09\00\05\00\07\00\03\00\0B\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\09\00\00\00\0A\00\00\00\0B\00\00\00\0C\00\00\00\0D\00\00\00\0E\00\00\00\0F\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00\1A\00\00\00\1B\00\00\00\1C\00\00\00\1D\13\04\021\00\00\00\00\01-\001\00\00\00\008\10\04\00\1E#/\01\00\00\00\00\00)\1C/\0F\02\9A\03\028\11\04\008\12\04\00#/\01\00\01\00\00\00)\1C/\0F\02\9D\03\028\11\04\008\12\04\00#/\01\00\02\00\00\00)\1C/\0F\02\A0\03\028\11\04\008\12\04\00#/\01\00\03\00\00\00)\1C/\0F\02\A3\03\028\11\04\008\12\04\00#/\01\00\04\00\00\00)\1C/\0F\02\A6\03\028\11\04\008\12\04\00#/\01\00\05\00\00\00)\1C/\0F\02\A9\03\028\11\04\008\12\04\00#/\01\00\06\00\00\00)\1C/\0F\02\AC\03\028\11\04\008\12\04\00#/\01\00\07\00\00\00)\1C/\0F\02\AF\03\028\11\04\008\12\04\00#/\01\00\08\00\00\00)\1C/\0F\02\B2\03\028\11\04\008\12\04\00#/\01\00\09\00\00\00)\1C/\0F\02\B5\03\028\11\04\008\12\04\00#/\01\00\0A\00\00\00)\1C/\0F\02\B8\03\028\11\04\008\12\04\00#/\01\00\0B\00\00\00)\1C/\0F\02\BB\03\028\11\04\008\12\04\00#/\01\00\0C\00\00\00)\1C/\0F\02\BE\03\028\11\04\008\12\04\00#/\01\00\0D\00\00\00)\1C/\0F\02\C1\03\028\11\04\008\12\04\00#/\01\00\0E\00\00\00)\1C/\0F\02\C4\03\028\11\04\008\12\04\00#/\01\00\0F\00\00\00)\1C/\0F\02\CA\03\028\11\04\008\12\04\00#/\01\00\10\00\00\00)\1C/\0F\02\CD\03\028\11\04\008\12\04\00#/\01\00\11\00\00\00)\1C/\0F\02\D0\03\028\11\04\008\12\04\00#/\01\00\12\00\00\00)\1C/\0F\02\DD\03\028\11\04\008\12\04\00#/\01\00\13\00\00\00)\1C/\0F\02\E3\03\028\11\04\008\12\04\00#/\01\00\14\00\00\00)\1C/\0F\02\E6\03\028\11\04\008\12\04\00#/\01\00\15\00\00\00)\1C/\0F\02\EC\03\028\11\04\008\12\04\00#/\01\00\16\00\00\00)\1C/\0F\02\EF\03\028\11\04\008\12\04\00#/\01\00\17\00\00\00)\1C/\0F\02\F2\03\028\11\04\008\12\04\00#/\01\00\18\00\00\00)\1C/\0F\02\F5\03\028\11\04\008\12\04\00#/\01\00\19\00\00\00)\1C/\0F\02\06\04\028\11\04\008\12\04\00#/\01\00\1A\00\00\00)\1C/\0F\02\09\04\028\11\04\008\12\04\00#/\01\00\1B\00\00\00)\1C/\0F\02\0C\04\028\11\04\008\12\04\00#/\01\00\1C\00\00\00)\1C/\0F\02\0F\04\028\11\04\008\12\04\009)\0C/\0F\02\01\1A/\B0\00\00\00\00\00\01\1D\9A\03\9D\03\A0\03\A3\03\A6\03\A9\03\AC\03\AF\03\B2\03\B5\03\B8\03\BB\03\BE\03\C1\03\C4\03\CA\03\CD\03\D0\03\DD\03\E3\03\E6\03\EC\03\EF\03\F2\03\F5\03\06\04\09\04\0C\04\0F\04\1D\15\04\021\00\00\00\00\01)\07/\0F\02\02\01.8\14\04\00\03\00\01\021\1C/\B0\00\E0\00\02.8\14\04\00\01\03\1A/\B0\00\17\B7\D18.8\14\04\00\01\03\01\00\1D\18\04\021\00\00\00\00\01)\07/\84\01\02\01.8\16\04\00\03\00\01\021\1C/\A8\00\D8\00\02.8\16\04\00\01\03\1A/\A8\00\17\B7\D18.8\16\04\00\01\03\01\00\1D\1A\04\021\00\00\00\00\01)\01.8\19\04\00\02\00\011.8\19\04\00\01\02\01\00\1D\1E\04\021\00\00\00\00\01)3*\F0\09\1C/\A8\00i\02\01\07/\DA\01\028\1B\04\008\1C\04\00\01\01.8\1B\04\00\01\000.8\1C\04\00\01\01/\01.8\1B\04\00\01\010.8\1C\04\00\01\00\01\00\1D\22\04\021\00\00\00\00\01)3*\F0\09\1C/\B0\00m\02\01\07/\08\02\028\1F\04\008 \04\00\01\01.8\1F\04\00\01\000.8 \04\00\01\01/\01.8\1F\04\00\01\010.8 \04\00\01\00\01\00\14", align 16
@_ZL22SKSL_INCLUDE_sksl_frag = internal global [320 x i8] c"d\00\00\0Csk_FragCoord\06float4\0Csk_Clockwise\04bool\18gl_SecondaryFragColorEXT\05half4\0Csk_FragColor\10sk_LastFragColor1\05\005\01\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F\00\FF\FF\FF\FF\02\00\00\02\03\002\02\00\10\00\005\03\00%$\00\04\00\00\FF\FF\FF\FF\FF\11\00\FF\FF\FF\FF\02\00\00\02\17\002\04\00$\00\005\05\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F'\FF\FF\FF\FF\02\00\00\04)\002\06\00B\00\005\07\00%$ \05\00\00\00\FF\FF\00\FF\11'\FF\FF\FF\FF\02\00\00\04H\00/\06\00\005\08\00%$\00\04\00\00\FF\FF\FF\FF\FF\18'\FF\FF\FF\FF\02\00\00\00U\00/\06\00\00\05\00\02\00\01\00\03\00\00\00\04\00\1376\01\00/\02\00\00976\03\00/\04\00\00976\05\00/\06\00\00976\07\00/\06\00\00976\08\00/\06\00\009\14", align 16
@_ZL22SKSL_INCLUDE_sksl_vert = internal global [270 x i8] c"R\00\0Csk_PerVertex\00\0Bsk_Position\06float4\0Csk_PointSize\05float\0Bsk_VertexID\03int\0Dsk_InstanceID1\06\00,\01\00\02\00\02%$\00\04\00\00\FF\FF\FF\FF\FF\00\00\FF\FF\FF\FF\0F\00\00\00\10\002\02\00\1C\00%$\00\04\00\00\FF\FF\FF\FF\FF\01\00\FF\FF\FF\FF\0F\00\00\00#\002\03\000\005\04\00%\0F\04\02\00/\01\00\00\18\04\00\00\18\04\00\015\05\00%$\00\04\00\00\FF\FF\FF\FF\FF*\00\FF\FF\FF\FF\0F\00\00\026\002\06\00B\00\005\07\00%$\00\04\00\00\FF\FF\FF\FF\FF+\00\FF\FF\FF\FF\0F\00\00\02F\00/\06\00\00\04\00\05\00\03\00\02\00\04\00\13\22/\04\00\02\00\0F\00\0076\05\00/\06\00\00976\07\00/\06\00\009\14", align 16
@_ZL22SKSL_INCLUDE_sksl_geom = internal global [443 x i8] c"\86\00\0Csk_PerVertex\00\0Bsk_Position\06float4\0Csk_PointSize\05float\05sk_in\06stream\03int\10EmitStreamVertex\04void\12EndStreamPrimitive\0AEmitVertex\0CEndPrimitive1\0C\00,\01\00\02\00\02%$\00\04\00\00\FF\FF\FF\FF\FF\00\00\FF\FF\FF\FF\0F\00\00\00\10\002\02\00\1C\00%$\00\04\00\00\FF\FF\FF\FF\FF\01\00\FF\FF\FF\FF\0F\00\00\00#\002\03\000\005\04\00%$\00\04\00\00\FF\FF\FF\FF\FF\12'\FF\FF\FF\FF\0F\00\00\026\00\00\05\00/\01\00\FF\00,\06\00\02\00\02%$\00\04\00\00\FF\FF\FF\FF\FF\00\00\FF\FF\FF\FF\0F\00\00\00\10\00/\02\00%$\00\04\00\00\FF\FF\FF\FF\FF\01\00\FF\FF\FF\FF\0F\00\00\00#\00/\03\005\07\00%$\00\04\00\00\FF\FF\FF\FF\FF\17'\FF\FF\FF\FF\0F\00\00\04\02\00/\06\00\00\18\07\00\00\18\07\00\015\08\00\10<\002\09\00C\00\03\1E\0A\00%\0F@G\00\01\08\002\0B\00X\005\0C\00\10<\00/\09\00\03\1E\0D\00%\0F@]\00\01\0C\00/\0B\00\1E\0E\00%\0F@p\00\00/\0B\00\1E\0F\00%\0F@{\00\00/\0B\00\07\00\07\00\0A\00\0B\00\09\00\05\00\04\00\01\00\13\22/\04\00\02\006\00\FF\22/\07\00\02\00\0F\00\00\14", align 16
@_ZL20SKSL_INCLUDE_sksl_fp = internal global [835 x i8] c"\FF\00\0EGrClipEdgeType\0CPMConversion\00\0Csk_FragCoord\06float4\0Fgl_LastFragData\10gl_LastFragColor\05half4\13gl_LastFragColorARM\18gl_SecondaryFragColorEXT\02fp\11fragmentProcessor\06sample\06coords\06float2\05input\07kFillBW\07kFillAA\0EkInverseFillBW\0EkInverseFillAA\05kLast\09kToPremul\0BkToUnpremul1\17\00\16\01\00\02\00\16\02\00\11\005\03\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F\00\FF\FF\FF\FF\1E\00\00\02\1F\002\04\00,\00\00\00\05\00/\04\00\015\06\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F'\FF\FF\FF\FF\1E\00\00\003\00/\05\00\005\07\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F'\FF\FF\FF\FF\1E\00\00\00C\002\08\00T\00\005\09\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F'\FF\FF\FF\FF\1E\00\00\00Z\00/\08\00\005\0A\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F'\FF\FF\FF\FF\1E\00\00\00n\00/\08\00\005\0B\00\10\87\002\0C\00\8A\00\03\1E\0D\00\10\9C\00\01\0B\00/\08\005\0E\00\10\87\00/\0C\00\035\0F\00\10\A3\002\10\00\AA\00\034\11\00\02/\0D\00\1E\12\00\10\9C\00\02\0E\00\0F\00/\08\00/\12\005\13\00\10\87\00/\0C\00\035\14\00\10\B1\00/\08\00\034\15\00\03/\0D\00/\12\00\1E\16\00\10\9C\00\02\13\00\14\00/\08\00/\16\005\17\00\10\87\00/\0C\00\035\18\00\10\A3\00/\10\00\035\19\00\10\B1\00/\08\00\034\1A\00\04/\0D\00/\12\00/\16\00\1E\1B\00\10\9C\00\03\17\00\18\00\19\00/\08\00/\1B\00\08\00\00\00\01\00\05\00\06\00\04\00\07\00\15\00\02\00\13\15\02\001\05\005\1C\00%\0F\01\B7\00/\01\00\005\1D\00%\0F\01\BF\00/\01\00\005\1E\00%\0F\01\C7\00/\01\00\005\1F\00%\0F\01\D6\00/\01\00\005 \00%\0F\01\E5\00/\01\00\00\05\00\01\00\00\00\03\00\02\00\04\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\15\11\001\03\005!\00%\0F\01\EB\00/\02\00\005\22\00%\0F\01\F5\00/\02\00\005#\00%\0F\01\E5\00/\02\00\00\03\00\02\00\00\00\01\00\00\00\00\00\01\00\00\00\01\00\00\0076\03\00/\04\00\00976\06\00/\04\00\01976\07\00/\08\00\00976\09\00/\08\00\00976\0A\00/\08\00\009\14", align 16
@_ZL24SKSL_INCLUDE_sksl_public = internal global [5117 x i8] c"\04\02\07degrees\08$genType\07radians\09$genHType\05angle\03sin\03cos\03tan\01x\04asin\04acos\01y\04atan\08y_over_x\03pow\03exp\03log\04exp2\04log2\04sqrt\0Binversesqrt\03abs\04sign\05floor\04ceil\05fract\05float\03mod\04half\03min\03max\06minVal\06maxVal\05clamp\08saturate\01a\03mix\04edge\04step\05edge0\05edge1\0Asmoothstep\06length\02p0\02p1\08distance\03dot\06float3\05cross\05half3\09normalize\01N\01I\04Nref\0Bfaceforward\07reflect\03eta\07refract\0A$squareMat\0EmatrixCompMult\0B$squareHMat\01m\07inverse\04$vec\08lessThan\05$bvec\05$hvec\05$ivec\0DlessThanEqual\0BgreaterThan\10greaterThanEqual\05equal\08notEqual\03any\04bool\03all\03not\05color\05half4\08unpremul\06float41\81\015\01\00\10\02\002\02\00\0A\00\03\1E\03\00\10\13\00\01\01\00/\02\005\04\00\10\02\002\05\00\1B\00\034\06\00\02/\03\00\1E\07\00\10\13\00\01\04\00/\05\00/\07\005\08\00\10\13\00/\02\00\03\1E\09\00\10\02\00\01\08\00/\02\005\0A\00\10\13\00/\05\00\034\0B\00\02/\09\00\1E\0C\00\10\02\00\01\0A\00/\05\00/\0C\005\0D\00\10%\00/\02\00\03\1E\0E\00\10+\00\01\0D\00/\02\005\0F\00\10%\00/\05\00\034\10\00\02/\0E\00\1E\11\00\10+\00\01\0F\00/\05\00/\11\005\12\00\10%\00/\02\00\03\1E\13\00\10/\00\01\12\00/\02\005\14\00\10%\00/\05\00\034\15\00\02/\13\00\1E\16\00\10/\00\01\14\00/\05\00/\16\005\17\00\10%\00/\02\00\03\1E\18\00\103\00\01\17\00/\02\005\19\00\10%\00/\05\00\034\1A\00\02/\18\00\1E\1B\00\103\00\01\19\00/\05\00/\1B\005\1C\00\107\00/\02\00\03\1E\1D\00\109\00\01\1C\00/\02\005\1E\00\107\00/\05\00\034\1F\00\02/\1D\00\1E \00\109\00\01\1E\00/\05\00/ \005!\00\107\00/\02\00\03\1E\22\00\10>\00\01!\00/\02\005#\00\107\00/\05\00\034$\00\02/\22\00\1E%\00\10>\00\01#\00/\05\00/%\005&\00\10C\00/\02\00\035'\00\107\00/\02\00\03\1E(\00\10E\00\02&\00'\00/\02\005)\00\10C\00/\05\00\035*\00\107\00/\05\00\034+\00\02/(\00\1E,\00\10E\00\02)\00*\00/\05\00/,\005-\00\10J\00/\02\00\034.\00\03/(\00/,\00\1E/\00\10E\00\01-\00/\02\00//\0050\00\10J\00/\05\00\0341\00\04/(\00/,\00//\00\1E2\00\10E\00\010\00/\05\00/2\0053\00\107\00/\02\00\0354\00\10C\00/\02\00\03\1E5\00\10S\00\023\004\00/\02\0056\00\107\00/\05\00\0357\00\10C\00/\05\00\0348\00\02/5\00\1E9\00\10S\00\026\007\00/\05\00/9\005:\00\107\00/\02\00\03\1E;\00\10W\00\01:\00/\02\005<\00\107\00/\05\00\034=\00\02/;\00\1E>\00\10W\00\01<\00/\05\00/>\005?\00\107\00/\02\00\03\1E@\00\10[\00\01?\00/\02\005A\00\107\00/\05\00\034B\00\02/@\00\1EC\00\10[\00\01A\00/\05\00/C\005D\00\107\00/\02\00\03\1EE\00\10_\00\01D\00/\02\005F\00\107\00/\05\00\034G\00\02/E\00\1EH\00\10_\00\01F\00/\05\00/H\005I\00\107\00/\02\00\03\1EJ\00\10d\00\01I\00/\02\005K\00\107\00/\05\00\034L\00\02/J\00\1EM\00\10d\00\01K\00/\05\00/M\005N\00\107\00/\02\00\03\1EO\00\10i\00\01N\00/\02\005P\00\107\00/\05\00\034Q\00\02/O\00\1ER\00\10i\00\01P\00/\05\00/R\005S\00\107\00/\02\00\03\1ET\00\10n\00\01S\00/\02\005U\00\107\00/\05\00\034V\00\02/T\00\1EW\00\10n\00\01U\00/\05\00/W\005X\00\107\00/\02\00\03\1EY\00\10z\00\01X\00/\02\005Z\00\107\00/\05\00\034[\00\02/Y\00\1E\5C\00\10z\00\01Z\00/\05\00/\5C\005]\00\107\00/\02\00\03\1E^\00\10~\00\01]\00/\02\005_\00\107\00/\05\00\034`\00\02/^\00\1Ea\00\10~\00\01_\00/\05\00/a\005b\00\107\00/\02\00\03\1Ec\00\10\83\00\01b\00/\02\005d\00\107\00/\05\00\034e\00\02/c\00\1Ef\00\10\83\00\01d\00/\05\00/f\005g\00\107\00/\02\00\03\1Eh\00\10\89\00\01g\00/\02\005i\00\107\00/\05\00\034j\00\02/h\00\1Ek\00\10\89\00\01i\00/\05\00/k\005l\00\107\00/\02\00\03\1Em\00\10\8E\00\01l\00/\02\005n\00\107\00/\05\00\034o\00\02/m\00\1Ep\00\10\8E\00\01n\00/\05\00/p\005q\00\107\00/\02\00\035r\00\10C\002s\00\94\00\03\1Et\00\10\9A\00\02q\00r\00/\02\005u\00\107\00/\02\00\035v\00\10C\00/\02\00\034w\00\02/t\00\1Ex\00\10\9A\00\02u\00v\00/\02\00/x\005y\00\107\00/\05\00\035z\00\10C\002{\00\9E\00\034|\00\03/t\00/x\00\1E}\00\10\9A\00\02y\00z\00/\05\00/}\005~\00\107\00/\05\00\035\7F\00\10C\00/\05\00\034\80\00\04/t\00/x\00/}\00\1E\81\00\10\9A\00\02~\00\7F\00/\05\00/\81\005\82\00\107\00/\02\00\035\83\00\10C\00/\02\00\03\1E\84\00\10\A3\00\02\82\00\83\00/\02\005\85\00\107\00/\02\00\035\86\00\10C\00/s\00\034\87\00\02/\84\00\1E\88\00\10\A3\00\02\85\00\86\00/\02\00/\88\005\89\00\107\00/\05\00\035\8A\00\10C\00/\05\00\034\8B\00\03/\84\00/\88\00\1E\8C\00\10\A3\00\02\89\00\8A\00/\05\00/\8C\005\8D\00\107\00/\05\00\035\8E\00\10C\00/{\00\034\8F\00\04/\84\00/\88\00/\8C\00\1E\90\00\10\A3\00\02\8D\00\8E\00/\05\00/\90\005\91\00\107\00/\02\00\035\92\00\10C\00/\02\00\03\1E\93\00\10\A7\00\02\91\00\92\00/\02\005\94\00\107\00/\02\00\035\95\00\10C\00/s\00\034\96\00\02/\93\00\1E\97\00\10\A7\00\02\94\00\95\00/\02\00/\97\005\98\00\107\00/\05\00\035\99\00\10C\00/\05\00\034\9A\00\03/\93\00/\97\00\1E\9B\00\10\A7\00\02\98\00\99\00/\05\00/\9B\005\9C\00\107\00/\05\00\035\9D\00\10C\00/{\00\034\9E\00\04/\93\00/\97\00/\9B\00\1E\9F\00\10\A7\00\02\9C\00\9D\00/\05\00/\9F\005\A0\00\107\00/\02\00\035\A1\00\10\AB\00/\02\00\035\A2\00\10\B2\00/\02\00\03\1E\A3\00\10\B9\00\03\A0\00\A1\00\A2\00/\02\005\A4\00\107\00/\02\00\035\A5\00\10\AB\00/s\00\035\A6\00\10\B2\00/s\00\034\A7\00\02/\A3\00\1E\A8\00\10\B9\00\03\A4\00\A5\00\A6\00/\02\00/\A8\005\A9\00\107\00/\05\00\035\AA\00\10\AB\00/\05\00\035\AB\00\10\B2\00/\05\00\034\AC\00\03/\A3\00/\A8\00\1E\AD\00\10\B9\00\03\A9\00\AA\00\AB\00/\05\00/\AD\005\AE\00\107\00/\05\00\035\AF\00\10\AB\00/{\00\035\B0\00\10\B2\00/{\00\034\B1\00\04/\A3\00/\A8\00/\AD\00\1E\B2\00\10\B9\00\03\AE\00\AF\00\B0\00/\05\00/\B2\005\B3\00\107\00/\02\00\03\1E\B4\00\10\BF\00\01\B3\00/\02\005\B5\00\107\00/\05\00\034\B6\00\02/\B4\00\1E\B7\00\10\BF\00\01\B5\00/\05\00/\B7\005\B8\00\107\00/\02\00\035\B9\00\10C\00/\02\00\035\BA\00\10\C8\00/\02\00\03\1E\BB\00\10\CA\00\03\B8\00\B9\00\BA\00/\02\005\BC\00\107\00/\02\00\035\BD\00\10C\00/\02\00\035\BE\00\10\C8\00/s\00\034\BF\00\02/\BB\00\1E\C0\00\10\CA\00\03\BC\00\BD\00\BE\00/\02\00/\C0\005\C1\00\107\00/\05\00\035\C2\00\10C\00/\05\00\035\C3\00\10\C8\00/\05\00\034\C4\00\03/\BB\00/\C0\00\1E\C5\00\10\CA\00\03\C1\00\C2\00\C3\00/\05\00/\C5\005\C6\00\107\00/\05\00\035\C7\00\10C\00/\05\00\035\C8\00\10\C8\00/{\00\034\C9\00\04/\BB\00/\C0\00/\C5\00\1E\CA\00\10\CA\00\03\C6\00\C7\00\C8\00/\05\00/\CA\005\CB\00\10\CE\00/\02\00\035\CC\00\107\00/\02\00\03\1E\CD\00\10\D3\00\02\CB\00\CC\00/\02\005\CE\00\10\CE\00/s\00\035\CF\00\107\00/\02\00\034\D0\00\02/\CD\00\1E\D1\00\10\D3\00\02\CE\00\CF\00/\02\00/\D1\005\D2\00\10\CE\00/\05\00\035\D3\00\107\00/\05\00\034\D4\00\03/\CD\00/\D1\00\1E\D5\00\10\D3\00\02\D2\00\D3\00/\05\00/\D5\005\D6\00\10\CE\00/{\00\035\D7\00\107\00/\05\00\034\D8\00\04/\CD\00/\D1\00/\D5\00\1E\D9\00\10\D3\00\02\D6\00\D7\00/\05\00/\D9\005\DA\00\10\D8\00/\02\00\035\DB\00\10\DE\00/\02\00\035\DC\00\107\00/\02\00\03\1E\DD\00\10\E4\00\03\DA\00\DB\00\DC\00/\02\005\DE\00\10\D8\00/s\00\035\DF\00\10\DE\00/s\00\035\E0\00\107\00/\02\00\034\E1\00\02/\DD\00\1E\E2\00\10\E4\00\03\DE\00\DF\00\E0\00/\02\00/\E2\005\E3\00\10\D8\00/\05\00\035\E4\00\10\DE\00/\05\00\035\E5\00\107\00/\05\00\034\E6\00\03/\DD\00/\E2\00\1E\E7\00\10\E4\00\03\E3\00\E4\00\E5\00/\05\00/\E7\005\E8\00\10\D8\00/{\00\035\E9\00\10\DE\00/{\00\035\EA\00\107\00/\05\00\034\EB\00\04/\DD\00/\E2\00/\E7\00\1E\EC\00\10\E4\00\03\E8\00\E9\00\EA\00/\05\00/\EC\005\ED\00\107\00/\02\00\03\1E\EE\00\10\EF\00\01\ED\00/s\005\EF\00\107\00/\05\00\034\F0\00\02/\EE\00\1E\F1\00\10\EF\00\01\EF\00/{\00/\F1\005\F2\00\10\F6\00/\02\00\035\F3\00\10\F9\00/\02\00\03\1E\F4\00\10\FC\00\02\F2\00\F3\00/s\005\F5\00\10\F6\00/\05\00\035\F6\00\10\F9\00/\05\00\034\F7\00\02/\F4\00\1E\F8\00\10\FC\00\02\F5\00\F6\00/{\00/\F8\005\F9\00\107\00/\02\00\035\FA\00\10C\00/\02\00\03\1E\FB\00\10\05\01\02\F9\00\FA\00/s\005\FC\00\107\00/\05\00\035\FD\00\10C\00/\05\00\034\FE\00\02/\FB\00\1E\FF\00\10\05\01\02\FC\00\FD\00/{\00/\FF\005\00\01\107\002\01\01\09\01\035\02\01\10C\00/\01\01\03\1E\03\01\10\10\01\02\00\01\02\01/\01\015\04\01\107\002\05\01\16\01\035\06\01\10C\00/\05\01\034\07\01\02/\03\01\1E\08\01\10\10\01\02\04\01\06\01/\05\01/\08\015\09\01\107\00/\02\00\03\1E\0A\01\10\1C\01\01\09\01/\02\005\0B\01\107\00/\05\00\034\0C\01\02/\0A\01\1E\0D\01\10\1C\01\01\0B\01/\05\00/\0D\015\0E\01\10&\01/\02\00\035\0F\01\10(\01/\02\00\035\10\01\10*\01/\02\00\03\1E\11\01\10/\01\03\0E\01\0F\01\10\01/\02\005\12\01\10&\01/\05\00\035\13\01\10(\01/\05\00\035\14\01\10*\01/\05\00\034\15\01\02/\11\01\1E\16\01\10/\01\03\12\01\13\01\14\01/\05\00/\16\015\17\01\10(\01/\02\00\035\18\01\10&\01/\02\00\03\1E\19\01\10;\01\02\17\01\18\01/\02\005\1A\01\10(\01/\05\00\035\1B\01\10&\01/\05\00\034\1C\01\02/\19\01\1E\1D\01\10;\01\02\1A\01\1B\01/\05\00/\1D\015\1E\01\10(\01/\02\00\035\1F\01\10&\01/\02\00\035 \01\10C\01/s\00\03\1E!\01\10G\01\03\1E\01\1F\01 \01/\02\005\22\01\10(\01/\05\00\035#\01\10&\01/\05\00\035$\01\10C\01/{\00\034%\01\02/!\01\1E&\01\10G\01\03\22\01#\01$\01/\05\00/&\015'\01\107\002(\01O\01\035)\01\10C\00/(\01\03\1E*\01\10Z\01\02'\01)\01/(\015+\01\107\002,\01i\01\035-\01\10C\00/,\01\034.\01\02/*\01\1E/\01\10Z\01\02+\01-\01/,\01//\0150\01\10u\01/(\01\03\1E1\01\10w\01\010\01/(\0152\01\10u\01/,\01\0343\01\02/1\01\1E4\01\10w\01\012\01/,\01/4\0155\01\107\0026\01\7F\01\0357\01\10C\00/6\01\03\1E8\01\10\84\01\025\017\0129\01\8D\015:\01\107\002;\01\93\01\035<\01\10C\00/;\01\034=\01\02/8\01\1E>\01\10\84\01\02:\01<\01/9\01/>\015?\01\107\002@\01\99\01\035A\01\10C\00/@\01\034B\01\03/8\01/>\01\1EC\01\10\84\01\02?\01A\01/9\01/C\015D\01\107\00/6\01\035E\01\10C\00/6\01\03\1EF\01\10\9F\01\02D\01E\01/9\015G\01\107\00/;\01\035H\01\10C\00/;\01\034I\01\02/F\01\1EJ\01\10\9F\01\02G\01H\01/9\01/J\015K\01\107\00/@\01\035L\01\10C\00/@\01\034M\01\03/F\01/J\01\1EN\01\10\9F\01\02K\01L\01/9\01/N\015O\01\107\00/6\01\035P\01\10C\00/6\01\03\1EQ\01\10\AD\01\02O\01P\01/9\015R\01\107\00/;\01\035S\01\10C\00/;\01\034T\01\02/Q\01\1EU\01\10\AD\01\02R\01S\01/9\01/U\015V\01\107\00/@\01\035W\01\10C\00/@\01\034X\01\03/Q\01/U\01\1EY\01\10\AD\01\02V\01W\01/9\01/Y\015Z\01\107\00/6\01\035[\01\10C\00/6\01\03\1E\5C\01\10\B9\01\02Z\01[\01/9\015]\01\107\00/;\01\035^\01\10C\00/;\01\034_\01\02/\5C\01\1E`\01\10\B9\01\02]\01^\01/9\01/`\015a\01\107\00/@\01\035b\01\10C\00/@\01\034c\01\03/\5C\01/`\01\1Ed\01\10\B9\01\02a\01b\01/9\01/d\015e\01\107\00/6\01\035f\01\10C\00/6\01\03\1Eg\01\10\CA\01\02e\01f\01/9\015h\01\107\00/;\01\035i\01\10C\00/;\01\034j\01\02/g\01\1Ek\01\10\CA\01\02h\01i\01/9\01/k\015l\01\107\00/@\01\035m\01\10C\00/@\01\034n\01\03/g\01/k\01\1Eo\01\10\CA\01\02l\01m\01/9\01/o\015p\01\107\00/9\01\035q\01\10C\00/9\01\034r\01\04/g\01/k\01/o\01\1Es\01\10\CA\01\02p\01q\01/9\01/s\015t\01\107\00/6\01\035u\01\10C\00/6\01\03\1Ev\01\10\D0\01\02t\01u\01/9\015w\01\107\00/;\01\035x\01\10C\00/;\01\034y\01\02/v\01\1Ez\01\10\D0\01\02w\01x\01/9\01/z\015{\01\107\00/@\01\035|\01\10C\00/@\01\034}\01\03/v\01/z\01\1E~\01\10\D0\01\02{\01|\01/9\01/~\015\7F\01\107\00/9\01\035\80\01\10C\00/9\01\034\81\01\04/v\01/z\01/~\01\1E\82\01\10\D0\01\02\7F\01\80\01/9\01/\82\015\83\01\107\00/9\01\03\1E\84\01\10\D9\01\01\83\012\85\01\DD\015\86\01\107\00/9\01\03\1E\87\01\10\E2\01\01\86\01/\85\015\88\01\107\00/9\01\03\1E\89\01\10\E6\01\01\88\01/9\015\8A\01\10\EA\012\8B\01\F0\01\03\1E\8C\01\10\F6\01\01\8A\01/\8B\015\8D\01\10\EA\012\8E\01\FF\01\034\8F\01\02/\8C\01\1E\90\01\10\F6\01\01\8D\01/\8E\01/\90\010\00X\00!\00y\01w\01\1C\00.\00g\00\AC\00\12\00\00\01\08\00\F2\00\F9\00e\01:\00D\00\0E\01b\00l\00K\01V\01*\01S\00\EB\005\01@\01?\00I\00%\01\99\00\8A\00\C4\00{\00\05\01{\01t\015\00\03\00\15\01\1E\01\B1\00]\00\0D\00\E6\00N\00\D3\00\17\00\7F\01\13\1D\8C\01\021\00\00\00\00\01)\07/\8B\01\02\01.8\8A\01\00\03\00\01\021\1C/{\00\9B\00\02.8\8A\01\00\01\03\1A/{\00\17\B7\D18.8\8A\01\00\01\03\01\00\1D\90\01\021\00\00\00\00\01)\07/\8E\01\02\01.8\8D\01\00\03\00\01\021\1C/s\00\93\00\02.8\8D\01\00\01\03\1A/s\00\17\B7\D18.8\8D\01\00\01\03\01\00\14", align 16
@_ZL32SKSL_INCLUDE_sksl_rt_colorfilter = internal global [153 x i8] c"8\00\01s\06shader\06coords\06float2\06sample\05half4\01f\0BcolorFilter\05color1\07\005\01\00\10\02\002\02\00\04\00\035\03\00\10\0B\002\04\00\12\00\03\1E\05\00\10\19\00\02\01\00\03\002\06\00 \005\07\00\10&\002\08\00(\00\035\09\00\104\00/\06\00\034\0A\00\02/\05\00\1E\0B\00\10\19\00\02\07\00\09\00/\06\00/\0B\00\01\00\05\00\13\14", align 16
@_ZL27SKSL_INCLUDE_sksl_rt_shader = internal global [217 x i8] c"M\00\00\0Csk_FragCoord\06float4\01s\06shader\06coords\06float2\06sample\05half4\01f\0BcolorFilter\05color1\08\005\01\00%$\00\04\00\00\FF\FF\FF\FF\FF\0F\00\FF\FF\FF\FF\02\00\00\00\03\002\02\00\10\00\005\03\00\10\17\002\04\00\19\00\035\05\00\10 \002\06\00'\00\03\1E\07\00\10.\00\02\03\00\05\002\08\005\005\09\00\10;\002\0A\00=\00\035\0B\00\10I\00/\08\00\034\0C\00\02/\07\00\1E\0D\00\10.\00\02\09\00\0B\00/\08\00/\0D\00\02\00\06\00\00\00\1376\01\00/\02\00\009\14", align 16
@.str.1 = private unnamed_addr constant [25 x i8] c"Unsupported element: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"disabled-by-default-skia.shaders\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"SkSL::Compiler::convertProgram\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"SkSL::Compiler::toSPIRV\00", align 1
@__const._ZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamE.cg = private unnamed_addr constant <{ %"class.SkSL::CodeGenerator", %"class.SkSL::Context"*, %"class.SkSL::MemoryLayout", [4 x i8], i64, i32, i32, %"class.std::__1::unordered_map.300", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.380", %"class.std::__1::unordered_map.404", %"class.std::__1::unordered_map.404", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", i32, i32, %"class.std::__1::unordered_map.428", %"class.std::__1::unordered_map.455", i8, [3 x i8], i32, %"class.std::__1::stack.482", %"class.std::__1::stack.482", i32, i32, i32, [4 x i8], { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.166", i8, [7 x i8], %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }, i32, [4 x i8], %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer", %"class.std::__1::vector.501", %"class.std::__1::unordered_map.380", i32, [4 x i8] }> <{ %"class.SkSL::CodeGenerator" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"struct.SkSL::Program"* inttoptr (i64 -6148914691236517206 to %"struct.SkSL::Program"*), %"class.SkSL::ErrorReporter"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::ErrorReporter"*), %"class.SkSL::OutputStream"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::OutputStream"*) }, %"class.SkSL::Context"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Context"*), %"class.SkSL::MemoryLayout" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, %"class.std::__1::unordered_map.300" { %"class.std::__1::__hash_table.301" <{ %"class.std::__1::unique_ptr.302" { %"class.std::__1::__compressed_pair.303" { %"struct.std::__1::__compressed_pair_elem.304" { %"struct.std::__1::__hash_node_base.305"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.305"**) }, %"struct.std::__1::__compressed_pair_elem.306" { %"class.std::__1::__bucket_list_deallocator.307" { %"class.std::__1::__compressed_pair.308" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.312" { %"struct.std::__1::__compressed_pair_elem.313" { %"struct.std::__1::__hash_node_base.305" { %"struct.std::__1::__hash_node_base.305"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.305"*) } } }, %"class.std::__1::__compressed_pair.317" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.322" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.352" { %"class.std::__1::__hash_table.353" <{ %"class.std::__1::unique_ptr.354" { %"class.std::__1::__compressed_pair.355" { %"struct.std::__1::__compressed_pair_elem.356" { %"struct.std::__1::__hash_node_base.357"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.357"**) }, %"struct.std::__1::__compressed_pair_elem.358" { %"class.std::__1::__bucket_list_deallocator.359" { %"class.std::__1::__compressed_pair.360" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.364" { %"struct.std::__1::__compressed_pair_elem.365" { %"struct.std::__1::__hash_node_base.357" { %"struct.std::__1::__hash_node_base.357"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.357"*) } } }, %"class.std::__1::__compressed_pair.369" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.374" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.380" { %"class.std::__1::__hash_table.381" <{ %"class.std::__1::unique_ptr.382" { %"class.std::__1::__compressed_pair.383" { %"struct.std::__1::__compressed_pair_elem.384" { %"struct.std::__1::__hash_node_base.385"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.385"**) }, %"struct.std::__1::__compressed_pair_elem.386" { %"class.std::__1::__bucket_list_deallocator.387" { %"class.std::__1::__compressed_pair.388" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.392" { %"struct.std::__1::__compressed_pair_elem.393" { %"struct.std::__1::__hash_node_base.385" { %"struct.std::__1::__hash_node_base.385"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.385"*) } } }, %"class.std::__1::__compressed_pair.397" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.400" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.404" { %"class.std::__1::__hash_table.405" <{ %"class.std::__1::unique_ptr.406" { %"class.std::__1::__compressed_pair.407" { %"struct.std::__1::__compressed_pair_elem.408" { %"struct.std::__1::__hash_node_base.409"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.409"**) }, %"struct.std::__1::__compressed_pair_elem.410" { %"class.std::__1::__bucket_list_deallocator.411" { %"class.std::__1::__compressed_pair.412" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.416" { %"struct.std::__1::__compressed_pair_elem.417" { %"struct.std::__1::__hash_node_base.409" { %"struct.std::__1::__hash_node_base.409"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.409"*) } } }, %"class.std::__1::__compressed_pair.421" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.424" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.404" { %"class.std::__1::__hash_table.405" <{ %"class.std::__1::unique_ptr.406" { %"class.std::__1::__compressed_pair.407" { %"struct.std::__1::__compressed_pair_elem.408" { %"struct.std::__1::__hash_node_base.409"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.409"**) }, %"struct.std::__1::__compressed_pair_elem.410" { %"class.std::__1::__bucket_list_deallocator.411" { %"class.std::__1::__compressed_pair.412" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.416" { %"struct.std::__1::__compressed_pair_elem.417" { %"struct.std::__1::__hash_node_base.409" { %"struct.std::__1::__hash_node_base.409"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.409"*) } } }, %"class.std::__1::__compressed_pair.421" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.424" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, i32 -1431655766, i32 -1431655766, %"class.std::__1::unordered_map.428" { %"class.std::__1::__hash_table.429" <{ %"class.std::__1::unique_ptr.430" { %"class.std::__1::__compressed_pair.431" { %"struct.std::__1::__compressed_pair_elem.432" { %"struct.std::__1::__hash_node_base.433"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.433"**) }, %"struct.std::__1::__compressed_pair_elem.434" { %"class.std::__1::__bucket_list_deallocator.435" { %"class.std::__1::__compressed_pair.436" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.440" { %"struct.std::__1::__compressed_pair_elem.441" { %"struct.std::__1::__hash_node_base.433" { %"struct.std::__1::__hash_node_base.433"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.433"*) } } }, %"class.std::__1::__compressed_pair.445" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.449" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.455" { %"class.std::__1::__hash_table.456" <{ %"class.std::__1::unique_ptr.457" { %"class.std::__1::__compressed_pair.458" { %"struct.std::__1::__compressed_pair_elem.459" { %"struct.std::__1::__hash_node_base.460"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.460"**) }, %"struct.std::__1::__compressed_pair_elem.461" { %"class.std::__1::__bucket_list_deallocator.462" { %"class.std::__1::__compressed_pair.463" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.467" { %"struct.std::__1::__compressed_pair_elem.468" { %"struct.std::__1::__hash_node_base.460" { %"struct.std::__1::__hash_node_base.460"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.460"*) } } }, %"class.std::__1::__compressed_pair.472" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.476" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.std::__1::stack.482" { %"class.std::__1::deque.483" { %"class.std::__1::__deque_base.484" { %"struct.std::__1::__split_buffer.485" { i32** inttoptr (i64 -6148914691236517206 to i32**), i32** inttoptr (i64 -6148914691236517206 to i32**), i32** inttoptr (i64 -6148914691236517206 to i32**), %"class.std::__1::__compressed_pair.486" { %"struct.std::__1::__compressed_pair_elem.487" { i32** inttoptr (i64 -6148914691236517206 to i32**) } } }, i64 -6148914691236517206, %"class.std::__1::__compressed_pair.491" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } }, %"class.std::__1::stack.482" { %"class.std::__1::deque.483" { %"class.std::__1::__deque_base.484" { %"struct.std::__1::__split_buffer.485" { i32** inttoptr (i64 -6148914691236517206 to i32**), i32** inttoptr (i64 -6148914691236517206 to i32**), i32** inttoptr (i64 -6148914691236517206 to i32**), %"class.std::__1::__compressed_pair.486" { %"struct.std::__1::__compressed_pair_elem.487" { i32** inttoptr (i64 -6148914691236517206 to i32**) } } }, i64 -6148914691236517206, %"class.std::__1::__compressed_pair.491" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.166", i8, [7 x i8], %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* } { %"class.std::__1::shared_ptr.37" { %"class.SkSL::SymbolTable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::SymbolTable"*), %"class.std::__1::__shared_weak_count"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__shared_weak_count"*) }, %"class.std::__1::vector.166" { %"class.std::__1::__vector_base.167" { %"class.std::__1::unique_ptr.168"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.168"*), %"class.std::__1::unique_ptr.168"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.168"*), %"class.std::__1::__compressed_pair.169" { %"struct.std::__1::__compressed_pair_elem.170" { %"class.std::__1::unique_ptr.168"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.168"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.174" { %"class.std::__1::__vector_base.175" { %"class.std::__1::unique_ptr.176"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.176"*), %"class.std::__1::unique_ptr.176"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.176"*), %"class.std::__1::__compressed_pair.177" { %"struct.std::__1::__compressed_pair_elem.178" { %"class.std::__1::unique_ptr.176"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.176"*) } } } }, %"class.std::__1::forward_list" { %"class.std::__1::__forward_list_base" { %"class.std::__1::__compressed_pair.182" { %"struct.std::__1::__compressed_pair_elem.183" { %"struct.std::__1::__forward_begin_node" { %"struct.std::__1::__forward_list_node"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__forward_list_node"*) } } } } }, %class.SkTHashMap { %class.SkTHashTable { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray { %"class.std::__1::unique_ptr.187" { %"class.std::__1::__compressed_pair.188" { %"struct.std::__1::__compressed_pair_elem.189" { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*) } } } } } }, %"class.SkSL::ErrorReporter"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::ErrorReporter"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer" { %"class.std::__1::unique_ptr.495" { %"class.std::__1::__compressed_pair.496" { %"struct.std::__1::__compressed_pair_elem.497" { %"class.SkSL::InterfaceBlock"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::InterfaceBlock"*) } } }, %"class.std::__1::unique_ptr.193" { %"class.std::__1::__compressed_pair.194" { %"struct.std::__1::__compressed_pair_elem.195" { %"class.SkSL::Variable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Variable"*) } } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.SkSL::Type"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Type"*) } } } }, %"class.std::__1::vector.501" { %"class.std::__1::__vector_base.502" { %"class.SkSL::VarDeclaration"** inttoptr (i64 -6148914691236517206 to %"class.SkSL::VarDeclaration"**), %"class.SkSL::VarDeclaration"** inttoptr (i64 -6148914691236517206 to %"class.SkSL::VarDeclaration"**), %"class.std::__1::__compressed_pair.503" { %"struct.std::__1::__compressed_pair_elem.504" { %"class.SkSL::VarDeclaration"** inttoptr (i64 -6148914691236517206 to %"class.SkSL::VarDeclaration"**) } } } }, %"class.std::__1::unordered_map.380" { %"class.std::__1::__hash_table.381" <{ %"class.std::__1::unique_ptr.382" { %"class.std::__1::__compressed_pair.383" { %"struct.std::__1::__compressed_pair_elem.384" { %"struct.std::__1::__hash_node_base.385"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.385"**) }, %"struct.std::__1::__compressed_pair_elem.386" { %"class.std::__1::__bucket_list_deallocator.387" { %"class.std::__1::__compressed_pair.388" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.392" { %"struct.std::__1::__compressed_pair_elem.393" { %"struct.std::__1::__hash_node_base.385" { %"struct.std::__1::__hash_node_base.385"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.385"*) } } }, %"class.std::__1::__compressed_pair.397" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.400" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"SkSL::Compiler::toGLSL\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"SkSL::Compiler::toMetal\00", align 1
@__const._ZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamE.cg = private unnamed_addr constant %"class.SkSL::MetalCodeGenerator" <{ %"class.SkSL::CodeGenerator" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"struct.SkSL::Program"* inttoptr (i64 -6148914691236517206 to %"struct.SkSL::Program"*), %"class.SkSL::ErrorReporter"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::ErrorReporter"*), %"class.SkSL::OutputStream"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::OutputStream"*) }, %"class.std::__1::unordered_set.515" { %"class.std::__1::__hash_table.516" <{ %"class.std::__1::unique_ptr.517" { %"class.std::__1::__compressed_pair.518" { %"struct.std::__1::__compressed_pair_elem.519" { %"struct.std::__1::__hash_node_base.520"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.520"**) }, %"struct.std::__1::__compressed_pair_elem.521" { %"class.std::__1::__bucket_list_deallocator.522" { %"class.std::__1::__compressed_pair.523" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.527" { %"struct.std::__1::__compressed_pair_elem.528" { %"struct.std::__1::__hash_node_base.520" { %"struct.std::__1::__hash_node_base.520"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.520"*) } } }, %"class.std::__1::__compressed_pair.532" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.534" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.537" { %"class.std::__1::__hash_table.538" <{ %"class.std::__1::unique_ptr.539" { %"class.std::__1::__compressed_pair.540" { %"struct.std::__1::__compressed_pair_elem.541" { %"struct.std::__1::__hash_node_base.542"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.542"**) }, %"struct.std::__1::__compressed_pair_elem.543" { %"class.std::__1::__bucket_list_deallocator.544" { %"class.std::__1::__compressed_pair.545" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.550" { %"struct.std::__1::__hash_node_base.542" { %"struct.std::__1::__hash_node_base.542"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.542"*) } } }, %"class.std::__1::__compressed_pair.554" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.559" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.565" { %"class.std::__1::__hash_table.566" <{ %"class.std::__1::unique_ptr.567" { %"class.std::__1::__compressed_pair.568" { %"struct.std::__1::__compressed_pair_elem.569" { %"struct.std::__1::__hash_node_base.570"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.570"**) }, %"struct.std::__1::__compressed_pair_elem.571" { %"class.std::__1::__bucket_list_deallocator.572" { %"class.std::__1::__compressed_pair.573" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.577" { %"struct.std::__1::__compressed_pair_elem.578" { %"struct.std::__1::__hash_node_base.570" { %"struct.std::__1::__hash_node_base.570"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.570"*) } } }, %"class.std::__1::__compressed_pair.582" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.587" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.SkSL::Context"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Context"*), %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, %"class.SkSL::StringStream" { %"class.SkSL::OutputStream" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::set" { %"class.std::__1::__tree" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.508" { %"struct.std::__1::__compressed_pair_elem.509" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.513" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_map.593" { %"class.std::__1::__hash_table.594" <{ %"class.std::__1::unique_ptr.595" { %"class.std::__1::__compressed_pair.596" { %"struct.std::__1::__compressed_pair_elem.597" { %"struct.std::__1::__hash_node_base.598"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.598"**) }, %"struct.std::__1::__compressed_pair_elem.599" { %"class.std::__1::__bucket_list_deallocator.600" { %"class.std::__1::__compressed_pair.601" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.605" { %"struct.std::__1::__compressed_pair_elem.606" { %"struct.std::__1::__hash_node_base.598" { %"struct.std::__1::__hash_node_base.598"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.598"*) } } }, %"class.std::__1::__compressed_pair.610" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.613" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_set.515" { %"class.std::__1::__hash_table.516" <{ %"class.std::__1::unique_ptr.517" { %"class.std::__1::__compressed_pair.518" { %"struct.std::__1::__compressed_pair_elem.519" { %"struct.std::__1::__hash_node_base.520"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.520"**) }, %"struct.std::__1::__compressed_pair_elem.521" { %"class.std::__1::__bucket_list_deallocator.522" { %"class.std::__1::__compressed_pair.523" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.527" { %"struct.std::__1::__compressed_pair_elem.528" { %"struct.std::__1::__hash_node_base.520" { %"struct.std::__1::__hash_node_base.520"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.520"*) } } }, %"class.std::__1::__compressed_pair.532" { %"struct.std::__1::__compressed_pair_elem.22" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.534" { %"struct.std::__1::__compressed_pair_elem.34" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.SkSL::String" { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.0" { %"struct.std::__1::__compressed_pair_elem.1" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, %"class.SkSL::FunctionDeclaration"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::FunctionDeclaration"*), i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"error: \00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c" error\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"vec2\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"vec3\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"vec4\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"ivec2\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"ivec3\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"ivec4\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"bvec2\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"bvec3\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"bvec4\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"mat2\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"mat3\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"mat4\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEE18StaticTestVerifier = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev to i8*), i8* bitcast (void (%class.StaticTestVerifier*)* @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifierD0Ev to i8*), i8* bitcast (i1 (%class.StaticTestVerifier*, %"class.SkSL::Expression"*)* @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifier15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%class.StaticTestVerifier*, %"class.SkSL::Statement"*)* @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifier14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.150"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.213"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@.str.26 = private unnamed_addr constant [30 x i8] c"static if has non-static test\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"static switch has non-static test\00", align 1
@_ZTVZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEE27DeadLocalVariableEliminator = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor.290"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEED2Ev to i8*), i8* bitcast (void (%class.DeadLocalVariableEliminator*)* @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminatorD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Expression"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE15visitExpressionERNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE to i8*), i8* bitcast (i1 (%class.DeadLocalVariableEliminator*, %"class.std::__1::unique_ptr.150"*)* @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminator18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE to i8*), i8* bitcast (i1 (%class.DeadLocalVariableEliminator*, %"class.std::__1::unique_ptr.213"*)* @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminator17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS6_14default_deleteIS8_EEEE to i8*)] }, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZTVN4SkSL3NopE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Nop"*)* @_ZN4SkSL3NopD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop5cloneEv to i8*)] }, comdat, align 8
@_ZTVZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEE25UnreachableCodeEliminator = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.UnreachableCodeEliminator*)* @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminatorD2Ev to i8*), i8* bitcast (void (%class.UnreachableCodeEliminator*)* @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminatorD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Expression"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE15visitExpressionERNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE to i8*), i8* bitcast (i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.150"*)* @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminator18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE to i8*), i8* bitcast (i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)* @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminator17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS6_14default_deleteIS8_EEEE to i8*)] }, align 8
@_ZTVN4SkSL18SPIRVCodeGeneratorE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4SkSL12StringStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.SkSL::OutputStream"*)* @_ZNK4SkSL12OutputStream7isValidEv to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8)* @_ZN4SkSL12StringStream6write8Eh to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*)* @_ZN4SkSL12StringStream9writeTextEPKc to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*, i64)* @_ZN4SkSL12StringStream5writeEPKvm to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD0Ev to i8*)] }, comdat, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN4SkSL17GLSLCodeGeneratorE = external unnamed_addr constant { [27 x i8*] }, align 8
@_ZTVN4SkSL18MetalCodeGeneratorE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.29 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"rsqrt\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"vertex\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.743"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.743"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.743"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.743"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL8VariableE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.755"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.755"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.755"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.755"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsEE28trace_event_unique_atomic431.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic885.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4SkSL8Compiler6toGLSLERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic938.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic964.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN4SkSL8CompilerC1EPK12GrShaderCaps = hidden unnamed_addr alias void (%"class.SkSL::Compiler"*, %class.GrShaderCaps*), void (%"class.SkSL::Compiler"*, %class.GrShaderCaps*)* @_ZN4SkSL8CompilerC2EPK12GrShaderCaps
@_ZN4SkSL8CompilerD1Ev = hidden unnamed_addr alias void (%"class.SkSL::Compiler"*), void (%"class.SkSL::Compiler"*)* @_ZN4SkSL8CompilerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8CompilerC2EPK12GrShaderCaps(%"class.SkSL::Compiler"*, %class.GrShaderCaps*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.168", align 8
  %4 = alloca [35 x %"class.SkSL::Symbol"*], align 16
  %5 = alloca [41 x %"class.SkSL::Symbol"*], align 16
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL8CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = tail call i8* @_Znwm(i64 768) #15
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to %"class.SkSL::Context"*
  tail call void @_ZN4SkSL7ContextC1ERNS_13ErrorReporterERK12GrShaderCaps(%"class.SkSL::Context"* %13, %"class.SkSL::ErrorReporter"* dereferenceable(8) %7, %class.GrShaderCaps* dereferenceable(144) %1) #16
  %14 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %15 = bitcast %"class.SkSL::Context"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 1
  %17 = bitcast %"class.std::__1::__shared_weak_count"** %16 to i8**
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 14, i32 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.33"* %22 to i32*
  %24 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %18, i64 1
  %25 = bitcast %"class.std::__1::shared_ptr.37"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 368, i1 false)
  store i32 1065353216, i32* %23, align 4
  %26 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 15
  %27 = bitcast %"class.SkSL::Inliner"* %26 to i8**
  store i8* %12, i8** %27, align 8
  %28 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 15, i32 1, i32 0
  %29 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 16
  %30 = bitcast %"class.std::__1::unique_ptr.63"* %29 to i64*
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19
  %32 = ptrtoint %"class.SkSL::Compiler"* %0 to i64
  %33 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 28, i1 false)
  %34 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 48, i1 false)
  %35 = tail call i8* @_Znwm(i64 128) #15
  %36 = bitcast i8* %35 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 64
  %39 = getelementptr inbounds i8, i8* %35, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 40, i1 false) #16
  store i8 1, i8* %38, align 8
  %40 = getelementptr inbounds i8, i8* %35, i64 72
  %41 = getelementptr inbounds i8, i8* %35, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 48, i1 false) #16
  %42 = bitcast i8* %41 to i64*
  store i64 %32, i64* %42, align 8
  %43 = ptrtoint i8* %39 to i64
  %44 = ptrtoint i8* %35 to i64
  %45 = bitcast %"class.std::__1::shared_ptr.37"* %18 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 2, i32 1
  %47 = bitcast %"class.std::__1::__shared_weak_count"** %46 to i64*
  store i64 %44, i64* %47, align 8
  %48 = tail call i8* @_Znwm(i64 128) #15
  %49 = bitcast i8* %48 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %51 = getelementptr inbounds i8, i8* %48, i64 24
  %52 = getelementptr inbounds i8, i8* %35, i64 8
  %53 = bitcast i8* %52 to i64*
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  %55 = bitcast i8* %51 to i64*
  store i64 %43, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 32
  %57 = bitcast i8* %56 to i8**
  store i8* %35, i8** %57, align 8
  %58 = atomicrmw add i64* %53, i64 1 monotonic
  %59 = getelementptr inbounds i8, i8* %48, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  %60 = getelementptr inbounds i8, i8* %48, i64 64
  store i8 1, i8* %60, align 8
  %61 = getelementptr inbounds i8, i8* %48, i64 72
  %62 = getelementptr inbounds i8, i8* %48, i64 120
  %63 = getelementptr inbounds i8, i8* %35, i64 120
  %64 = bitcast i8* %63 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 48, i1 false) #16
  %65 = load i64, i64* %64, align 8
  %66 = bitcast i8* %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %35, i64 8
  %68 = bitcast i8* %67 to i64*
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %2
  %72 = bitcast i8* %35 to %"class.std::__1::__shared_weak_count"*
  %73 = bitcast i8* %35 to %"class.std::__1::__shared_count"*
  %74 = bitcast i8* %35 to void (%"class.std::__1::__shared_count"*)***
  %75 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, i64 2
  %77 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, align 8
  tail call void %77(%"class.std::__1::__shared_count"* nonnull %73) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %72) #16
  br label %78

78:                                               ; preds = %2, %71
  %79 = ptrtoint i8* %51 to i64
  %80 = ptrtoint i8* %48 to i64
  %81 = bitcast %"class.std::__1::shared_ptr.37"* %19 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 3, i32 1
  %83 = bitcast %"class.std::__1::__shared_weak_count"** %82 to i64*
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %82, align 8
  store i64 %80, i64* %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #16
  br label %96

96:                                               ; preds = %90, %86, %78
  %97 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %98 = tail call i8* @_Znwm(i64 176) #15
  %99 = bitcast i8* %98 to %"class.SkSL::IRGenerator"*
  tail call void @_ZN4SkSL11IRGeneratorC1EPKNS_7ContextE(%"class.SkSL::IRGenerator"* nonnull %99, %"class.SkSL::Context"* %97) #16
  %100 = ptrtoint i8* %98 to i64
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63"* %29, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %101, align 8
  store i64 %100, i64* %30, align 8
  %103 = icmp eq %"class.SkSL::IRGenerator"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %96
  tail call void @_ZN4SkSL11IRGeneratorD2Ev(%"class.SkSL::IRGenerator"* nonnull %102) #16
  %105 = bitcast %"class.SkSL::IRGenerator"* %102 to i8*
  tail call void @_ZdlPv(i8* %105) #15
  br label %106

106:                                              ; preds = %104, %96
  %107 = bitcast [35 x %"class.SkSL::Symbol"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %107) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %107, i8 -86, i64 280, i1 false)
  %108 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 0
  %109 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %110 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %111 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %110, align 8
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 0
  store %"class.SkSL::Symbol"* %112, %"class.SkSL::Symbol"** %108, align 16
  %113 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 1
  %114 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %114, align 8
  %116 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %115, i64 0, i32 0
  store %"class.SkSL::Symbol"* %116, %"class.SkSL::Symbol"** %113, align 8
  %117 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 2
  %118 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %118, align 8
  %120 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %119, i64 0, i32 0
  store %"class.SkSL::Symbol"* %120, %"class.SkSL::Symbol"** %117, align 16
  %121 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 3
  %122 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %122, align 8
  %124 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %123, i64 0, i32 0
  store %"class.SkSL::Symbol"* %124, %"class.SkSL::Symbol"** %121, align 8
  %125 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 4
  %126 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %126, align 8
  %128 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %127, i64 0, i32 0
  store %"class.SkSL::Symbol"* %128, %"class.SkSL::Symbol"** %125, align 16
  %129 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 5
  %130 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %130, align 8
  %132 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %131, i64 0, i32 0
  store %"class.SkSL::Symbol"* %132, %"class.SkSL::Symbol"** %129, align 8
  %133 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 6
  %134 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %135 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %134, align 8
  %136 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %135, i64 0, i32 0
  store %"class.SkSL::Symbol"* %136, %"class.SkSL::Symbol"** %133, align 16
  %137 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 7
  %138 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %139 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %138, align 8
  %140 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %139, i64 0, i32 0
  store %"class.SkSL::Symbol"* %140, %"class.SkSL::Symbol"** %137, align 8
  %141 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 8
  %142 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %142, align 8
  %144 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %143, i64 0, i32 0
  store %"class.SkSL::Symbol"* %144, %"class.SkSL::Symbol"** %141, align 16
  %145 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 9
  %146 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %147 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %147, i64 0, i32 0
  store %"class.SkSL::Symbol"* %148, %"class.SkSL::Symbol"** %145, align 8
  %149 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 10
  %150 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %151 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %150, align 8
  %152 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %151, i64 0, i32 0
  store %"class.SkSL::Symbol"* %152, %"class.SkSL::Symbol"** %149, align 16
  %153 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 11
  %154 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %155 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %154, align 8
  %156 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %155, i64 0, i32 0
  store %"class.SkSL::Symbol"* %156, %"class.SkSL::Symbol"** %153, align 8
  %157 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 12
  %158 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %159 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %158, align 8
  %160 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %159, i64 0, i32 0
  store %"class.SkSL::Symbol"* %160, %"class.SkSL::Symbol"** %157, align 16
  %161 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 13
  %162 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %163 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %162, align 8
  %164 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %163, i64 0, i32 0
  store %"class.SkSL::Symbol"* %164, %"class.SkSL::Symbol"** %161, align 8
  %165 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 14
  %166 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0
  %167 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %166, align 8
  %168 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %167, i64 0, i32 0
  store %"class.SkSL::Symbol"* %168, %"class.SkSL::Symbol"** %165, align 16
  %169 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 15
  %170 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 26, i32 0, i32 0, i32 0
  %171 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %170, align 8
  %172 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %171, i64 0, i32 0
  store %"class.SkSL::Symbol"* %172, %"class.SkSL::Symbol"** %169, align 8
  %173 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 16
  %174 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0
  %175 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %174, align 8
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 0
  store %"class.SkSL::Symbol"* %176, %"class.SkSL::Symbol"** %173, align 16
  %177 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 17
  %178 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %179 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %178, align 8
  %180 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 0
  store %"class.SkSL::Symbol"* %180, %"class.SkSL::Symbol"** %177, align 8
  %181 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 18
  %182 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %184 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %183, i64 0, i32 0
  store %"class.SkSL::Symbol"* %184, %"class.SkSL::Symbol"** %181, align 16
  %185 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 19
  %186 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %187 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %186, align 8
  %188 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %187, i64 0, i32 0
  store %"class.SkSL::Symbol"* %188, %"class.SkSL::Symbol"** %185, align 8
  %189 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 20
  %190 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %191 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %190, align 8
  %192 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %191, i64 0, i32 0
  store %"class.SkSL::Symbol"* %192, %"class.SkSL::Symbol"** %189, align 16
  %193 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 21
  %194 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %195 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %194, align 8
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %195, i64 0, i32 0
  store %"class.SkSL::Symbol"* %196, %"class.SkSL::Symbol"** %193, align 8
  %197 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 22
  %198 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %199 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %198, align 8
  %200 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %199, i64 0, i32 0
  store %"class.SkSL::Symbol"* %200, %"class.SkSL::Symbol"** %197, align 16
  %201 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 23
  %202 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 73, i32 0, i32 0, i32 0
  %203 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %202, align 8
  %204 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %203, i64 0, i32 0
  store %"class.SkSL::Symbol"* %204, %"class.SkSL::Symbol"** %201, align 8
  %205 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 24
  %206 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 74, i32 0, i32 0, i32 0
  %207 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %206, align 8
  %208 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %207, i64 0, i32 0
  store %"class.SkSL::Symbol"* %208, %"class.SkSL::Symbol"** %205, align 16
  %209 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 25
  %210 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 66, i32 0, i32 0, i32 0
  %211 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %210, align 8
  %212 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %211, i64 0, i32 0
  store %"class.SkSL::Symbol"* %212, %"class.SkSL::Symbol"** %209, align 8
  %213 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 26
  %214 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 67, i32 0, i32 0, i32 0
  %215 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %214, align 8
  %216 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %215, i64 0, i32 0
  store %"class.SkSL::Symbol"* %216, %"class.SkSL::Symbol"** %213, align 16
  %217 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 27
  %218 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 68, i32 0, i32 0, i32 0
  %219 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %218, align 8
  %220 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %219, i64 0, i32 0
  store %"class.SkSL::Symbol"* %220, %"class.SkSL::Symbol"** %217, align 8
  %221 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 28
  %222 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 70, i32 0, i32 0, i32 0
  %223 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %222, align 8
  %224 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %223, i64 0, i32 0
  store %"class.SkSL::Symbol"* %224, %"class.SkSL::Symbol"** %221, align 16
  %225 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 29
  %226 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 75, i32 0, i32 0, i32 0
  %227 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %226, align 8
  %228 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %227, i64 0, i32 0
  store %"class.SkSL::Symbol"* %228, %"class.SkSL::Symbol"** %225, align 8
  %229 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 30
  %230 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 76, i32 0, i32 0, i32 0
  %231 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %230, align 8
  %232 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %231, i64 0, i32 0
  store %"class.SkSL::Symbol"* %232, %"class.SkSL::Symbol"** %229, align 16
  %233 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 31
  %234 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 78, i32 0, i32 0, i32 0
  %235 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %234, align 8
  %236 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %235, i64 0, i32 0
  store %"class.SkSL::Symbol"* %236, %"class.SkSL::Symbol"** %233, align 8
  %237 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 32
  %238 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 84, i32 0, i32 0, i32 0
  %239 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %238, align 8
  %240 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %239, i64 0, i32 0
  store %"class.SkSL::Symbol"* %240, %"class.SkSL::Symbol"** %237, align 16
  %241 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 33
  %242 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 87, i32 0, i32 0, i32 0
  %243 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %242, align 8
  %244 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %243, i64 0, i32 0
  store %"class.SkSL::Symbol"* %244, %"class.SkSL::Symbol"** %241, align 8
  %245 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 34
  %246 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 88, i32 0, i32 0, i32 0
  %247 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %246, align 8
  %248 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %247, i64 0, i32 0
  store %"class.SkSL::Symbol"* %248, %"class.SkSL::Symbol"** %245, align 16
  %249 = bitcast [41 x %"class.SkSL::Symbol"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %249) #16
  %250 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 12
  %251 = bitcast %"class.SkSL::Symbol"** %250 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %251, i8 -86, i64 232, i1 false)
  %252 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 0
  %253 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %254 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %253, align 8
  %255 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %254, i64 0, i32 0
  store %"class.SkSL::Symbol"* %255, %"class.SkSL::Symbol"** %252, align 16
  %256 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 1
  %257 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %258 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %257, align 8
  %259 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %258, i64 0, i32 0
  store %"class.SkSL::Symbol"* %259, %"class.SkSL::Symbol"** %256, align 8
  %260 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 2
  %261 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %262 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %261, align 8
  %263 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %262, i64 0, i32 0
  store %"class.SkSL::Symbol"* %263, %"class.SkSL::Symbol"** %260, align 16
  %264 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 3
  %265 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 15, i32 0, i32 0, i32 0
  %266 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %265, align 8
  %267 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %266, i64 0, i32 0
  store %"class.SkSL::Symbol"* %267, %"class.SkSL::Symbol"** %264, align 8
  %268 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 4
  %269 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %270 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %269, align 8
  %271 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %270, i64 0, i32 0
  store %"class.SkSL::Symbol"* %271, %"class.SkSL::Symbol"** %268, align 16
  %272 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 5
  %273 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 17, i32 0, i32 0, i32 0
  %274 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %273, align 8
  %275 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %274, i64 0, i32 0
  store %"class.SkSL::Symbol"* %275, %"class.SkSL::Symbol"** %272, align 8
  %276 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 6
  %277 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 18, i32 0, i32 0, i32 0
  %278 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %277, align 8
  %279 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %278, i64 0, i32 0
  store %"class.SkSL::Symbol"* %279, %"class.SkSL::Symbol"** %276, align 16
  %280 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 7
  %281 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %282 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %281, align 8
  %283 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %282, i64 0, i32 0
  store %"class.SkSL::Symbol"* %283, %"class.SkSL::Symbol"** %280, align 8
  %284 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 8
  %285 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %286 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %285, align 8
  %287 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %286, i64 0, i32 0
  store %"class.SkSL::Symbol"* %287, %"class.SkSL::Symbol"** %284, align 16
  %288 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 9
  %289 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %290 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %289, align 8
  %291 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %290, i64 0, i32 0
  store %"class.SkSL::Symbol"* %291, %"class.SkSL::Symbol"** %288, align 8
  %292 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 10
  %293 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 22, i32 0, i32 0, i32 0
  %294 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %293, align 8
  %295 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %294, i64 0, i32 0
  store %"class.SkSL::Symbol"* %295, %"class.SkSL::Symbol"** %292, align 16
  %296 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 11
  %297 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0
  %298 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %297, align 8
  %299 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %298, i64 0, i32 0
  store %"class.SkSL::Symbol"* %299, %"class.SkSL::Symbol"** %296, align 8
  %300 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 12
  %301 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 69, i32 0, i32 0, i32 0
  %302 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %301, align 8
  %303 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %302, i64 0, i32 0
  store %"class.SkSL::Symbol"* %303, %"class.SkSL::Symbol"** %300, align 16
  %304 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 13
  %305 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 79, i32 0, i32 0, i32 0
  %306 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %305, align 8
  %307 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %306, i64 0, i32 0
  store %"class.SkSL::Symbol"* %307, %"class.SkSL::Symbol"** %304, align 8
  %308 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 14
  %309 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 80, i32 0, i32 0, i32 0
  %310 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %309, align 8
  %311 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %310, i64 0, i32 0
  store %"class.SkSL::Symbol"* %311, %"class.SkSL::Symbol"** %308, align 16
  %312 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 15
  %313 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 81, i32 0, i32 0, i32 0
  %314 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %313, align 8
  %315 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %314, i64 0, i32 0
  store %"class.SkSL::Symbol"* %315, %"class.SkSL::Symbol"** %312, align 8
  %316 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 16
  %317 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 33, i32 0, i32 0, i32 0
  %318 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %317, align 8
  %319 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %318, i64 0, i32 0
  store %"class.SkSL::Symbol"* %319, %"class.SkSL::Symbol"** %316, align 16
  %320 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 17
  %321 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0
  %322 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %321, align 8
  %323 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %322, i64 0, i32 0
  store %"class.SkSL::Symbol"* %323, %"class.SkSL::Symbol"** %320, align 8
  %324 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 18
  %325 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 35, i32 0, i32 0, i32 0
  %326 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %325, align 8
  %327 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %326, i64 0, i32 0
  store %"class.SkSL::Symbol"* %327, %"class.SkSL::Symbol"** %324, align 16
  %328 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 19
  %329 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 37, i32 0, i32 0, i32 0
  %330 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %329, align 8
  %331 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %330, i64 0, i32 0
  store %"class.SkSL::Symbol"* %331, %"class.SkSL::Symbol"** %328, align 8
  %332 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 20
  %333 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 38, i32 0, i32 0, i32 0
  %334 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %333, align 8
  %335 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %334, i64 0, i32 0
  store %"class.SkSL::Symbol"* %335, %"class.SkSL::Symbol"** %332, align 16
  %336 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 21
  %337 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0
  %338 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %337, align 8
  %339 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %338, i64 0, i32 0
  store %"class.SkSL::Symbol"* %339, %"class.SkSL::Symbol"** %336, align 8
  %340 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 22
  %341 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 42, i32 0, i32 0, i32 0
  %342 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %341, align 8
  %343 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %342, i64 0, i32 0
  store %"class.SkSL::Symbol"* %343, %"class.SkSL::Symbol"** %340, align 16
  %344 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 23
  %345 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 43, i32 0, i32 0, i32 0
  %346 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %345, align 8
  %347 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %346, i64 0, i32 0
  store %"class.SkSL::Symbol"* %347, %"class.SkSL::Symbol"** %344, align 8
  %348 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 24
  %349 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 44, i32 0, i32 0, i32 0
  %350 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %349, align 8
  %351 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %350, i64 0, i32 0
  store %"class.SkSL::Symbol"* %351, %"class.SkSL::Symbol"** %348, align 16
  %352 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 25
  %353 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 46, i32 0, i32 0, i32 0
  %354 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %353, align 8
  %355 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %354, i64 0, i32 0
  store %"class.SkSL::Symbol"* %355, %"class.SkSL::Symbol"** %352, align 8
  %356 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 26
  %357 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 47, i32 0, i32 0, i32 0
  %358 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %357, align 8
  %359 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %358, i64 0, i32 0
  store %"class.SkSL::Symbol"* %359, %"class.SkSL::Symbol"** %356, align 16
  %360 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 27
  %361 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 48, i32 0, i32 0, i32 0
  %362 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %361, align 8
  %363 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %362, i64 0, i32 0
  store %"class.SkSL::Symbol"* %363, %"class.SkSL::Symbol"** %360, align 8
  %364 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 28
  %365 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 71, i32 0, i32 0, i32 0
  %366 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %365, align 8
  %367 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %366, i64 0, i32 0
  store %"class.SkSL::Symbol"* %367, %"class.SkSL::Symbol"** %364, align 16
  %368 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 29
  %369 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 72, i32 0, i32 0, i32 0
  %370 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %369, align 8
  %371 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %370, i64 0, i32 0
  store %"class.SkSL::Symbol"* %371, %"class.SkSL::Symbol"** %368, align 8
  %372 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 30
  %373 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 57, i32 0, i32 0, i32 0
  %374 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %373, align 8
  %375 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %374, i64 0, i32 0
  store %"class.SkSL::Symbol"* %375, %"class.SkSL::Symbol"** %372, align 16
  %376 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 31
  %377 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 58, i32 0, i32 0, i32 0
  %378 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %377, align 8
  %379 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %378, i64 0, i32 0
  store %"class.SkSL::Symbol"* %379, %"class.SkSL::Symbol"** %376, align 8
  %380 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 32
  %381 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 59, i32 0, i32 0, i32 0
  %382 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %381, align 8
  %383 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %382, i64 0, i32 0
  store %"class.SkSL::Symbol"* %383, %"class.SkSL::Symbol"** %380, align 16
  %384 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 33
  %385 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 60, i32 0, i32 0, i32 0
  %386 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %385, align 8
  %387 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %386, i64 0, i32 0
  store %"class.SkSL::Symbol"* %387, %"class.SkSL::Symbol"** %384, align 8
  %388 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 34
  %389 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 61, i32 0, i32 0, i32 0
  %390 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %389, align 8
  %391 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %390, i64 0, i32 0
  store %"class.SkSL::Symbol"* %391, %"class.SkSL::Symbol"** %388, align 16
  %392 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 35
  %393 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 62, i32 0, i32 0, i32 0
  %394 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %393, align 8
  %395 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %394, i64 0, i32 0
  store %"class.SkSL::Symbol"* %395, %"class.SkSL::Symbol"** %392, align 8
  %396 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 36
  %397 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 64, i32 0, i32 0, i32 0
  %398 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %397, align 8
  %399 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %398, i64 0, i32 0
  store %"class.SkSL::Symbol"* %399, %"class.SkSL::Symbol"** %396, align 16
  %400 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 37
  %401 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 65, i32 0, i32 0, i32 0
  %402 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %401, align 8
  %403 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %402, i64 0, i32 0
  store %"class.SkSL::Symbol"* %403, %"class.SkSL::Symbol"** %400, align 8
  %404 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 38
  %405 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 63, i32 0, i32 0, i32 0
  %406 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %405, align 8
  %407 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %406, i64 0, i32 0
  store %"class.SkSL::Symbol"* %407, %"class.SkSL::Symbol"** %404, align 16
  %408 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 39
  %409 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 51, i32 0, i32 0, i32 0
  %410 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %409, align 8
  %411 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %410, i64 0, i32 0
  store %"class.SkSL::Symbol"* %411, %"class.SkSL::Symbol"** %408, align 8
  %412 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 40
  %413 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 0, i32 86, i32 0, i32 0, i32 0
  %414 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %413, align 8
  %415 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %414, i64 0, i32 0
  store %"class.SkSL::Symbol"* %415, %"class.SkSL::Symbol"** %412, align 16
  %416 = getelementptr inbounds [35 x %"class.SkSL::Symbol"*], [35 x %"class.SkSL::Symbol"*]* %4, i64 0, i64 35
  %417 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %18, i64 0, i32 0
  br label %421

418:                                              ; preds = %421
  %419 = getelementptr inbounds [41 x %"class.SkSL::Symbol"*], [41 x %"class.SkSL::Symbol"*]* %5, i64 0, i64 41
  %420 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %19, i64 0, i32 0
  br label %571

421:                                              ; preds = %106, %421
  %422 = phi %"class.SkSL::Symbol"** [ %108, %106 ], [ %425, %421 ]
  %423 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %422, align 8
  %424 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %417, align 8
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %424, %"class.SkSL::Symbol"* %423) #16
  %425 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %422, i64 1
  %426 = icmp eq %"class.SkSL::Symbol"** %425, %416
  br i1 %426, label %418, label %421

427:                                              ; preds = %571
  %428 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %420, align 8
  %429 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %429) #16
  %430 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %430, align 8
  %431 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 1
  %432 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 12, i32 0
  %433 = bitcast i32* %431 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %433, i8 -1, i64 40, i1 false) #16
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8** %432, align 8
  %434 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %434, align 8
  %435 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 13
  store i32 0, i32* %435, align 8
  %436 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 1
  store i32 0, i32* %436, align 8
  %437 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 14, i32 0, i32 0
  %438 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %437, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %6, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %6) #16
  %439 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %438, 0
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %439, i64 2
  %441 = ptrtoint %"struct.std::__1::__hash_node_base"* %440 to i64
  %442 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %443 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %442, i64 0, i32 0, i32 85, i32 0, i32 0, i32 0
  %444 = bitcast %"class.SkSL::Type"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #16
  %447 = bitcast i8* %446 to i32 (...)***
  %448 = getelementptr inbounds i8, i8* %446, i64 8
  %449 = bitcast i8* %448 to i32*
  store i32 -1, i32* %449, align 8
  %450 = getelementptr inbounds i8, i8* %446, i64 12
  %451 = bitcast i8* %450 to i32*
  store i32 15, i32* %451, align 4
  %452 = getelementptr inbounds i8, i8* %446, i64 16
  %453 = bitcast i8* %452 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %453, align 8
  %454 = getelementptr inbounds i8, i8* %446, i64 24
  %455 = bitcast i8* %454 to i64*
  store i64 7, i64* %455, align 8
  %456 = getelementptr inbounds i8, i8* %446, i64 32
  %457 = bitcast i8* %456 to i64*
  store i64 %445, i64* %457, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %447, align 8
  %458 = getelementptr inbounds i8, i8* %446, i64 40
  %459 = bitcast i8* %458 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %459, align 8
  %460 = getelementptr inbounds i8, i8* %446, i64 48
  %461 = bitcast i8* %460 to i64*
  store i64 %441, i64* %461, align 8
  %462 = getelementptr inbounds i8, i8* %446, i64 56
  store i8 0, i8* %462, align 8
  %463 = getelementptr inbounds i8, i8* %446, i64 57
  store i8 0, i8* %463, align 1
  %464 = ptrtoint i8* %446 to i64
  %465 = bitcast i8* %446 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %428, %"class.SkSL::Symbol"* %465) #16
  %466 = bitcast %"class.std::__1::unique_ptr.168"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466) #16
  %467 = bitcast %"class.std::__1::unique_ptr.168"* %3 to i64*
  store i64 %464, i64* %467, align 8
  %468 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %428, i64 0, i32 1, i32 0, i32 1
  %469 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %468, align 8
  %470 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %428, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %471 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %470, align 8
  %472 = icmp ult %"class.std::__1::unique_ptr.168"* %469, %471
  br i1 %472, label %473, label %479

473:                                              ; preds = %427
  %474 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %474, align 8
  %475 = bitcast %"class.std::__1::unique_ptr.168"* %469 to i64*
  store i64 %464, i64* %475, align 8
  %476 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %469, i64 1
  %477 = ptrtoint %"class.std::__1::unique_ptr.168"* %476 to i64
  %478 = bitcast %"class.std::__1::unique_ptr.168"** %468 to i64*
  store i64 %477, i64* %478, align 8
  br label %481

479:                                              ; preds = %427
  %480 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %428, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.166"* %480, %"class.std::__1::unique_ptr.168"* nonnull dereferenceable(8) %3) #16
  br label %481

481:                                              ; preds = %479, %473
  %482 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %3, i64 0, i32 0, i32 0, i32 0
  %483 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %482, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %482, align 8
  %484 = icmp eq %"class.SkSL::Symbol"* %483, null
  br i1 %484, label %490, label %485

485:                                              ; preds = %481
  %486 = bitcast %"class.SkSL::Symbol"* %483 to void (%"class.SkSL::Symbol"*)***
  %487 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %486, align 8
  %488 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %487, i64 1
  %489 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %488, align 8
  call void %489(%"class.SkSL::Symbol"* nonnull %483) #16
  br label %490

490:                                              ; preds = %481, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %429) #16
  %491 = load i64, i64* %45, align 8
  %492 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  %493 = ptrtoint %"class.std::__1::__shared_weak_count"* %492 to i64
  %494 = icmp eq %"class.std::__1::__shared_weak_count"* %492, null
  br i1 %494, label %498, label %495

495:                                              ; preds = %490
  %496 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %492, i64 0, i32 0, i32 1
  %497 = atomicrmw add i64* %496, i64 1 monotonic
  br label %498

498:                                              ; preds = %490, %495
  %499 = bitcast %"struct.SkSL::ParsedModule"* %20 to i64*
  store i64 %491, i64* %499, align 8
  %500 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4, i32 0, i32 1
  %501 = bitcast %"class.std::__1::__shared_weak_count"** %500 to i64*
  %502 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %500, align 8
  store i64 %493, i64* %501, align 8
  %503 = icmp eq %"class.std::__1::__shared_weak_count"* %502, null
  br i1 %503, label %514, label %504

504:                                              ; preds = %498
  %505 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %502, i64 0, i32 0, i32 1
  %506 = atomicrmw add i64* %505, i64 -1 acq_rel
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %514

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %502, i64 0, i32 0
  %510 = bitcast %"class.std::__1::__shared_weak_count"* %502 to void (%"class.std::__1::__shared_count"*)***
  %511 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %510, align 8
  %512 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %511, i64 2
  %513 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %512, align 8
  call void %513(%"class.std::__1::__shared_count"* %509) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %502) #16
  br label %514

514:                                              ; preds = %508, %504, %498
  %515 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4, i32 1
  %516 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4, i32 1, i32 1
  %517 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %516, align 8
  %518 = bitcast %"class.std::__1::shared_ptr.38"* %515 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %518, align 8
  %519 = icmp eq %"class.std::__1::__shared_weak_count"* %517, null
  br i1 %519, label %530, label %520

520:                                              ; preds = %514
  %521 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %517, i64 0, i32 0, i32 1
  %522 = atomicrmw add i64* %521, i64 -1 acq_rel
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %530

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %517, i64 0, i32 0
  %526 = bitcast %"class.std::__1::__shared_weak_count"* %517 to void (%"class.std::__1::__shared_count"*)***
  %527 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %526, align 8
  %528 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %527, i64 2
  %529 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %528, align 8
  call void %529(%"class.std::__1::__shared_count"* %525) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %517) #16
  br label %530

530:                                              ; preds = %514, %520, %524
  %531 = load i64, i64* %81, align 8
  %532 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %82, align 8
  %533 = ptrtoint %"class.std::__1::__shared_weak_count"* %532 to i64
  %534 = icmp eq %"class.std::__1::__shared_weak_count"* %532, null
  br i1 %534, label %538, label %535

535:                                              ; preds = %530
  %536 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %532, i64 0, i32 0, i32 1
  %537 = atomicrmw add i64* %536, i64 1 monotonic
  br label %538

538:                                              ; preds = %530, %535
  %539 = bitcast %"struct.SkSL::ParsedModule"* %21 to i64*
  store i64 %531, i64* %539, align 8
  %540 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5, i32 0, i32 1
  %541 = bitcast %"class.std::__1::__shared_weak_count"** %540 to i64*
  %542 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %540, align 8
  store i64 %533, i64* %541, align 8
  %543 = icmp eq %"class.std::__1::__shared_weak_count"* %542, null
  br i1 %543, label %554, label %544

544:                                              ; preds = %538
  %545 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %542, i64 0, i32 0, i32 1
  %546 = atomicrmw add i64* %545, i64 -1 acq_rel
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %548, label %554

548:                                              ; preds = %544
  %549 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %542, i64 0, i32 0
  %550 = bitcast %"class.std::__1::__shared_weak_count"* %542 to void (%"class.std::__1::__shared_count"*)***
  %551 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %550, align 8
  %552 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %551, i64 2
  %553 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %552, align 8
  call void %553(%"class.std::__1::__shared_count"* %549) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %542) #16
  br label %554

554:                                              ; preds = %548, %544, %538
  %555 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5, i32 1
  %556 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5, i32 1, i32 1
  %557 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %556, align 8
  %558 = bitcast %"class.std::__1::shared_ptr.38"* %555 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %558, align 8
  %559 = icmp eq %"class.std::__1::__shared_weak_count"* %557, null
  br i1 %559, label %570, label %560

560:                                              ; preds = %554
  %561 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %557, i64 0, i32 0, i32 1
  %562 = atomicrmw add i64* %561, i64 -1 acq_rel
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %564, label %570

564:                                              ; preds = %560
  %565 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %557, i64 0, i32 0
  %566 = bitcast %"class.std::__1::__shared_weak_count"* %557 to void (%"class.std::__1::__shared_count"*)***
  %567 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %566, align 8
  %568 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %567, i64 2
  %569 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %568, align 8
  call void %569(%"class.std::__1::__shared_count"* %565) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %557) #16
  br label %570

570:                                              ; preds = %554, %560, %564
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %249) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %107) #16
  ret void

571:                                              ; preds = %418, %571
  %572 = phi %"class.SkSL::Symbol"** [ %252, %418 ], [ %575, %571 ]
  %573 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %572, align 8
  %574 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %420, align 8
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %574, %"class.SkSL::Symbol"* %573) #16
  %575 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %572, i64 1
  %576 = icmp eq %"class.SkSL::Symbol"** %575, %419
  br i1 %576, label %427, label %571
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8CompilerD2Ev(%"class.SkSL::Compiler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL8CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %21, align 8
  store %"class.SkSL::IRGenerator"* null, %"class.SkSL::IRGenerator"** %21, align 8
  %23 = icmp eq %"class.SkSL::IRGenerator"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN4SkSL11IRGeneratorD2Ev(%"class.SkSL::IRGenerator"* nonnull %22) #16
  %25 = bitcast %"class.SkSL::IRGenerator"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #15
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13, i32 1, i32 1
  %44 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %44, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %44, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %44 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %44) #16
  br label %56

56:                                               ; preds = %50, %46, %42
  %57 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13, i32 0, i32 1
  %58 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %57, align 8
  %59 = icmp eq %"class.std::__1::__shared_weak_count"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %58, i64 0, i32 0, i32 1
  %62 = atomicrmw add i64* %61, i64 -1 acq_rel
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %58, i64 0, i32 0
  %66 = bitcast %"class.std::__1::__shared_weak_count"* %58 to void (%"class.std::__1::__shared_count"*)***
  %67 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %67, i64 2
  %69 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %68, align 8
  tail call void %69(%"class.std::__1::__shared_count"* %65) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %58) #16
  br label %70

70:                                               ; preds = %56, %60, %64
  %71 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12, i32 1, i32 1
  %72 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %71, align 8
  %73 = icmp eq %"class.std::__1::__shared_weak_count"* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %72, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 -1 acq_rel
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %72, i64 0, i32 0
  %80 = bitcast %"class.std::__1::__shared_weak_count"* %72 to void (%"class.std::__1::__shared_count"*)***
  %81 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %81, i64 2
  %83 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %82, align 8
  tail call void %83(%"class.std::__1::__shared_count"* %79) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %72) #16
  br label %84

84:                                               ; preds = %78, %74, %70
  %85 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12, i32 0, i32 1
  %86 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %85, align 8
  %87 = icmp eq %"class.std::__1::__shared_weak_count"* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %86, i64 0, i32 0, i32 1
  %90 = atomicrmw add i64* %89, i64 -1 acq_rel
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %86, i64 0, i32 0
  %94 = bitcast %"class.std::__1::__shared_weak_count"* %86 to void (%"class.std::__1::__shared_count"*)***
  %95 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %95, i64 2
  %97 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %96, align 8
  tail call void %97(%"class.std::__1::__shared_count"* %93) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %86) #16
  br label %98

98:                                               ; preds = %84, %88, %92
  %99 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11, i32 1, i32 1
  %100 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %99, align 8
  %101 = icmp eq %"class.std::__1::__shared_weak_count"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %100, i64 0, i32 0, i32 1
  %104 = atomicrmw add i64* %103, i64 -1 acq_rel
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %100, i64 0, i32 0
  %108 = bitcast %"class.std::__1::__shared_weak_count"* %100 to void (%"class.std::__1::__shared_count"*)***
  %109 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %109, i64 2
  %111 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %110, align 8
  tail call void %111(%"class.std::__1::__shared_count"* %107) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %100) #16
  br label %112

112:                                              ; preds = %106, %102, %98
  %113 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11, i32 0, i32 1
  %114 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %113, align 8
  %115 = icmp eq %"class.std::__1::__shared_weak_count"* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %114, i64 0, i32 0, i32 1
  %118 = atomicrmw add i64* %117, i64 -1 acq_rel
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %114, i64 0, i32 0
  %122 = bitcast %"class.std::__1::__shared_weak_count"* %114 to void (%"class.std::__1::__shared_count"*)***
  %123 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %123, i64 2
  %125 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %124, align 8
  tail call void %125(%"class.std::__1::__shared_count"* %121) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %114) #16
  br label %126

126:                                              ; preds = %112, %116, %120
  %127 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10, i32 1, i32 1
  %128 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %127, align 8
  %129 = icmp eq %"class.std::__1::__shared_weak_count"* %128, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %128, i64 0, i32 0, i32 1
  %132 = atomicrmw add i64* %131, i64 -1 acq_rel
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %128, i64 0, i32 0
  %136 = bitcast %"class.std::__1::__shared_weak_count"* %128 to void (%"class.std::__1::__shared_count"*)***
  %137 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %137, i64 2
  %139 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %138, align 8
  tail call void %139(%"class.std::__1::__shared_count"* %135) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %128) #16
  br label %140

140:                                              ; preds = %134, %130, %126
  %141 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10, i32 0, i32 1
  %142 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %141, align 8
  %143 = icmp eq %"class.std::__1::__shared_weak_count"* %142, null
  br i1 %143, label %154, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %142, i64 0, i32 0, i32 1
  %146 = atomicrmw add i64* %145, i64 -1 acq_rel
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %142, i64 0, i32 0
  %150 = bitcast %"class.std::__1::__shared_weak_count"* %142 to void (%"class.std::__1::__shared_count"*)***
  %151 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %151, i64 2
  %153 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %152, align 8
  tail call void %153(%"class.std::__1::__shared_count"* %149) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %142) #16
  br label %154

154:                                              ; preds = %140, %144, %148
  %155 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9, i32 1, i32 1
  %156 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %155, align 8
  %157 = icmp eq %"class.std::__1::__shared_weak_count"* %156, null
  br i1 %157, label %168, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0, i32 1
  %160 = atomicrmw add i64* %159, i64 -1 acq_rel
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0
  %164 = bitcast %"class.std::__1::__shared_weak_count"* %156 to void (%"class.std::__1::__shared_count"*)***
  %165 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %165, i64 2
  %167 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %166, align 8
  tail call void %167(%"class.std::__1::__shared_count"* %163) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %156) #16
  br label %168

168:                                              ; preds = %162, %158, %154
  %169 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9, i32 0, i32 1
  %170 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %169, align 8
  %171 = icmp eq %"class.std::__1::__shared_weak_count"* %170, null
  br i1 %171, label %182, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %170, i64 0, i32 0, i32 1
  %174 = atomicrmw add i64* %173, i64 -1 acq_rel
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %170, i64 0, i32 0
  %178 = bitcast %"class.std::__1::__shared_weak_count"* %170 to void (%"class.std::__1::__shared_count"*)***
  %179 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %179, i64 2
  %181 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %180, align 8
  tail call void %181(%"class.std::__1::__shared_count"* %177) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %170) #16
  br label %182

182:                                              ; preds = %168, %172, %176
  %183 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8, i32 1, i32 1
  %184 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %183, align 8
  %185 = icmp eq %"class.std::__1::__shared_weak_count"* %184, null
  br i1 %185, label %196, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %184, i64 0, i32 0, i32 1
  %188 = atomicrmw add i64* %187, i64 -1 acq_rel
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %184, i64 0, i32 0
  %192 = bitcast %"class.std::__1::__shared_weak_count"* %184 to void (%"class.std::__1::__shared_count"*)***
  %193 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %193, i64 2
  %195 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %194, align 8
  tail call void %195(%"class.std::__1::__shared_count"* %191) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %184) #16
  br label %196

196:                                              ; preds = %190, %186, %182
  %197 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8, i32 0, i32 1
  %198 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %197, align 8
  %199 = icmp eq %"class.std::__1::__shared_weak_count"* %198, null
  br i1 %199, label %210, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %198, i64 0, i32 0, i32 1
  %202 = atomicrmw add i64* %201, i64 -1 acq_rel
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %210

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %198, i64 0, i32 0
  %206 = bitcast %"class.std::__1::__shared_weak_count"* %198 to void (%"class.std::__1::__shared_count"*)***
  %207 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %207, i64 2
  %209 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %208, align 8
  tail call void %209(%"class.std::__1::__shared_count"* %205) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %198) #16
  br label %210

210:                                              ; preds = %196, %200, %204
  %211 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7, i32 1, i32 1
  %212 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %211, align 8
  %213 = icmp eq %"class.std::__1::__shared_weak_count"* %212, null
  br i1 %213, label %224, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %212, i64 0, i32 0, i32 1
  %216 = atomicrmw add i64* %215, i64 -1 acq_rel
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %224

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %212, i64 0, i32 0
  %220 = bitcast %"class.std::__1::__shared_weak_count"* %212 to void (%"class.std::__1::__shared_count"*)***
  %221 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %221, i64 2
  %223 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %222, align 8
  tail call void %223(%"class.std::__1::__shared_count"* %219) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %212) #16
  br label %224

224:                                              ; preds = %218, %214, %210
  %225 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7, i32 0, i32 1
  %226 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %225, align 8
  %227 = icmp eq %"class.std::__1::__shared_weak_count"* %226, null
  br i1 %227, label %238, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %226, i64 0, i32 0, i32 1
  %230 = atomicrmw add i64* %229, i64 -1 acq_rel
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %238

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %226, i64 0, i32 0
  %234 = bitcast %"class.std::__1::__shared_weak_count"* %226 to void (%"class.std::__1::__shared_count"*)***
  %235 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %235, i64 2
  %237 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %236, align 8
  tail call void %237(%"class.std::__1::__shared_count"* %233) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %226) #16
  br label %238

238:                                              ; preds = %224, %228, %232
  %239 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6, i32 1, i32 1
  %240 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %239, align 8
  %241 = icmp eq %"class.std::__1::__shared_weak_count"* %240, null
  br i1 %241, label %252, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %240, i64 0, i32 0, i32 1
  %244 = atomicrmw add i64* %243, i64 -1 acq_rel
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %252

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %240, i64 0, i32 0
  %248 = bitcast %"class.std::__1::__shared_weak_count"* %240 to void (%"class.std::__1::__shared_count"*)***
  %249 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %249, i64 2
  %251 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %250, align 8
  tail call void %251(%"class.std::__1::__shared_count"* %247) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %240) #16
  br label %252

252:                                              ; preds = %246, %242, %238
  %253 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6, i32 0, i32 1
  %254 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %253, align 8
  %255 = icmp eq %"class.std::__1::__shared_weak_count"* %254, null
  br i1 %255, label %266, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %254, i64 0, i32 0, i32 1
  %258 = atomicrmw add i64* %257, i64 -1 acq_rel
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %266

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %254, i64 0, i32 0
  %262 = bitcast %"class.std::__1::__shared_weak_count"* %254 to void (%"class.std::__1::__shared_count"*)***
  %263 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %263, i64 2
  %265 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %264, align 8
  tail call void %265(%"class.std::__1::__shared_count"* %261) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %254) #16
  br label %266

266:                                              ; preds = %252, %256, %260
  %267 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5, i32 1, i32 1
  %268 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %267, align 8
  %269 = icmp eq %"class.std::__1::__shared_weak_count"* %268, null
  br i1 %269, label %280, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %268, i64 0, i32 0, i32 1
  %272 = atomicrmw add i64* %271, i64 -1 acq_rel
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %280

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %268, i64 0, i32 0
  %276 = bitcast %"class.std::__1::__shared_weak_count"* %268 to void (%"class.std::__1::__shared_count"*)***
  %277 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %277, i64 2
  %279 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %278, align 8
  tail call void %279(%"class.std::__1::__shared_count"* %275) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %268) #16
  br label %280

280:                                              ; preds = %274, %270, %266
  %281 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5, i32 0, i32 1
  %282 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %281, align 8
  %283 = icmp eq %"class.std::__1::__shared_weak_count"* %282, null
  br i1 %283, label %294, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %282, i64 0, i32 0, i32 1
  %286 = atomicrmw add i64* %285, i64 -1 acq_rel
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %294

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %282, i64 0, i32 0
  %290 = bitcast %"class.std::__1::__shared_weak_count"* %282 to void (%"class.std::__1::__shared_count"*)***
  %291 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %291, i64 2
  %293 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %292, align 8
  tail call void %293(%"class.std::__1::__shared_count"* %289) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %282) #16
  br label %294

294:                                              ; preds = %280, %284, %288
  %295 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4, i32 1, i32 1
  %296 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %295, align 8
  %297 = icmp eq %"class.std::__1::__shared_weak_count"* %296, null
  br i1 %297, label %308, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0, i32 1
  %300 = atomicrmw add i64* %299, i64 -1 acq_rel
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %308

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0
  %304 = bitcast %"class.std::__1::__shared_weak_count"* %296 to void (%"class.std::__1::__shared_count"*)***
  %305 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %305, i64 2
  %307 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %306, align 8
  tail call void %307(%"class.std::__1::__shared_count"* %303) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %296) #16
  br label %308

308:                                              ; preds = %302, %298, %294
  %309 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4, i32 0, i32 1
  %310 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %309, align 8
  %311 = icmp eq %"class.std::__1::__shared_weak_count"* %310, null
  br i1 %311, label %322, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %310, i64 0, i32 0, i32 1
  %314 = atomicrmw add i64* %313, i64 -1 acq_rel
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %310, i64 0, i32 0
  %318 = bitcast %"class.std::__1::__shared_weak_count"* %310 to void (%"class.std::__1::__shared_count"*)***
  %319 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %319, i64 2
  %321 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %320, align 8
  tail call void %321(%"class.std::__1::__shared_count"* %317) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %310) #16
  br label %322

322:                                              ; preds = %308, %312, %316
  %323 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 3, i32 1
  %324 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %323, align 8
  %325 = icmp eq %"class.std::__1::__shared_weak_count"* %324, null
  br i1 %325, label %336, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %324, i64 0, i32 0, i32 1
  %328 = atomicrmw add i64* %327, i64 -1 acq_rel
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %336

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %324, i64 0, i32 0
  %332 = bitcast %"class.std::__1::__shared_weak_count"* %324 to void (%"class.std::__1::__shared_count"*)***
  %333 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %333, i64 2
  %335 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %334, align 8
  tail call void %335(%"class.std::__1::__shared_count"* %331) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %324) #16
  br label %336

336:                                              ; preds = %322, %326, %330
  %337 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 2, i32 1
  %338 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %337, align 8
  %339 = icmp eq %"class.std::__1::__shared_weak_count"* %338, null
  br i1 %339, label %350, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %338, i64 0, i32 0, i32 1
  %342 = atomicrmw add i64* %341, i64 -1 acq_rel
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %350

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %338, i64 0, i32 0
  %346 = bitcast %"class.std::__1::__shared_weak_count"* %338 to void (%"class.std::__1::__shared_count"*)***
  %347 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %347, i64 2
  %349 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %348, align 8
  tail call void %349(%"class.std::__1::__shared_count"* %345) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %338) #16
  br label %350

350:                                              ; preds = %336, %340, %344
  %351 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 1
  %352 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %351, align 8
  %353 = icmp eq %"class.std::__1::__shared_weak_count"* %352, null
  br i1 %353, label %364, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %352, i64 0, i32 0, i32 1
  %356 = atomicrmw add i64* %355, i64 -1 acq_rel
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %364

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %352, i64 0, i32 0
  %360 = bitcast %"class.std::__1::__shared_weak_count"* %352 to void (%"class.std::__1::__shared_count"*)***
  %361 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %360, align 8
  %362 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %361, i64 2
  %363 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %362, align 8
  tail call void %363(%"class.std::__1::__shared_count"* %359) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %352) #16
  br label %364

364:                                              ; preds = %350, %354, %358
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8CompilerD0Ev(%"class.SkSL::Compiler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4SkSL8CompilerD2Ev(%"class.SkSL::Compiler"* %0) #16
  %2 = bitcast %"class.SkSL::Compiler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler13loadGPUModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([22266 x i8], [22266 x i8]* @_ZL21SKSL_INCLUDE_sksl_gpu, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !2
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 22266, i64* %11, align 16, !alias.scope !2
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 5
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 0, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 6, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* noalias nocapture sret, %"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::Compiler::ModuleData"* nocapture readonly byval(%"struct.SkSL::Compiler::ModuleData") align 8, %"struct.SkSL::ParsedModule"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.641", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.641", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple.641", align 1
  %12 = alloca %"class.std::__1::tuple", align 8
  %13 = alloca %"class.std::__1::tuple.641", align 1
  %14 = alloca %"struct.SkSL::LoadedModule", align 8
  %15 = alloca %"struct.SkSL::Compiler::ModuleData", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 48, i1 false)
  %22 = bitcast %"struct.SkSL::Compiler::ModuleData"* %15 to i8*
  %23 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false)
  %24 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %25 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 1 monotonic
  br label %32

32:                                               ; preds = %5, %29
  call void @_ZN4SkSL8Compiler10loadModuleENS_11ProgramKindENS0_10ModuleDataENSt3__110shared_ptrINS_11SymbolTableEEEb(%"struct.SkSL::LoadedModule"* nonnull sret %14, %"class.SkSL::Compiler"* %1, i8 signext %2, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %15, %"class.SkSL::SymbolTable"* %25, %"class.std::__1::__shared_weak_count"* %27, i1 zeroext false)
  %33 = call zeroext i1 @_ZN4SkSL8Compiler8optimizeERNS_12LoadedModuleE(%"class.SkSL::Compiler"* %1, %"struct.SkSL::LoadedModule"* nonnull dereferenceable(48) %14)
  %34 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 2
  %35 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %35, align 8
  %37 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 2, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.132"* %36, %38
  br i1 %39, label %40, label %65

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 1
  %42 = bitcast %"class.std::__1::shared_ptr.37"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.SkSL::ParsedModule"* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 1, i32 1
  %47 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  store %"class.std::__1::__shared_weak_count"* %47, %"class.std::__1::__shared_weak_count"** %45, align 8
  %48 = icmp eq %"class.std::__1::__shared_weak_count"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %51 = atomicrmw add i64* %50, i64 1 monotonic
  br label %52

52:                                               ; preds = %40, %49
  %53 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1
  %55 = bitcast %"class.std::__1::shared_ptr.38"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::shared_ptr.38"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 1, i32 1
  %59 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1, i32 1
  %60 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %59, align 8
  store %"class.std::__1::__shared_weak_count"* %60, %"class.std::__1::__shared_weak_count"** %58, align 8
  %61 = icmp eq %"class.std::__1::__shared_weak_count"* %60, null
  br i1 %61, label %326, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %60, i64 0, i32 0, i32 1
  %64 = atomicrmw add i64* %63, i64 1 monotonic
  br label %326

65:                                               ; preds = %32
  %66 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1, i32 0
  %67 = bitcast %"class.SkSL::IRIntrinsicMap"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i8* @_Znwm(i64 72) #15
  %70 = bitcast i8* %69 to i32 (...)***
  %71 = getelementptr inbounds i8, i8* %69, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %72 = getelementptr inbounds i8, i8* %69, i64 56
  %73 = bitcast i8* %72 to i32*
  %74 = getelementptr inbounds i8, i8* %69, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %73, align 4
  %75 = getelementptr inbounds i8, i8* %69, i64 64
  %76 = bitcast i8* %75 to i64*
  store i64 %68, i64* %76, align 8
  %77 = ptrtoint i8* %74 to i64
  %78 = ptrtoint i8* %69 to i64
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = bitcast %"class.SkSL::String"* %19 to i8*
  %85 = bitcast i8* %74 to %"class.std::__1::__hash_table.39"*
  %86 = bitcast %"class.std::__1::tuple"* %12 to i8*
  %87 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::tuple.641", %"class.std::__1::tuple.641"* %13, i64 0, i32 0
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = bitcast %"class.SkSL::String"* %18 to i8*
  %95 = bitcast %"class.std::__1::tuple"* %10 to i8*
  %96 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::tuple.641", %"class.std::__1::tuple.641"* %11, i64 0, i32 0
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = bitcast %"class.SkSL::String"* %17 to i8*
  %104 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %105 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.std::__1::tuple.641", %"class.std::__1::tuple.641"* %9, i64 0, i32 0
  %107 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %108 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::tuple.641", %"class.std::__1::tuple.641"* %7, i64 0, i32 0
  %110 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.SkSL::String"* %20 to i8*
  %114 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %134

117:                                              ; preds = %323
  %118 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 1
  %119 = bitcast %"class.std::__1::shared_ptr.37"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"struct.SkSL::ParsedModule"* %0 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 1, i32 1
  %124 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %123, align 8
  store %"class.std::__1::__shared_weak_count"* %124, %"class.std::__1::__shared_weak_count"** %122, align 8
  %125 = icmp eq %"class.std::__1::__shared_weak_count"* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %124, i64 0, i32 0, i32 1
  %128 = atomicrmw add i64* %127, i64 1 monotonic
  br label %129

129:                                              ; preds = %126, %117
  %130 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 1
  %131 = bitcast %"class.std::__1::shared_ptr.38"* %130 to i64*
  store i64 %77, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %0, i64 0, i32 1, i32 1
  %133 = bitcast %"class.std::__1::__shared_weak_count"** %132 to i64*
  store i64 %78, i64* %133, align 8
  br label %326

134:                                              ; preds = %65, %323
  %135 = phi %"class.std::__1::unique_ptr.132"* [ %36, %65 ], [ %324, %323 ]
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %136, align 8
  %138 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 0, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  switch i32 %139, label %307 [
    i32 2, label %140
    i32 3, label %323
    i32 0, label %165
    i32 4, label %211
    i32 5, label %260
  ]

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 1
  %142 = bitcast %"class.SkSL::ProgramElement"* %141 to %"class.SkSL::FunctionDeclaration"**
  %143 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %142, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::FunctionDeclaration"* %143) #16
  %144 = bitcast %"class.std::__1::unique_ptr.132"* %135 to i64*
  %145 = load i64, i64* %144, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %136, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #16
  store %"class.SkSL::String"* %16, %"class.SkSL::String"** %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %109) #16
  %146 = call { %"struct.std::__1::__hash_node_base.43"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.39"* %85, %"class.SkSL::String"* nonnull dereferenceable(24) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.641"* nonnull dereferenceable(1) %7) #16
  %147 = extractvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } %146, 0
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %147, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %109) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #16
  %149 = bitcast %"struct.std::__1::__hash_node_base.43"* %148 to %"class.SkSL::ProgramElement"**
  %150 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %149, align 8
  %151 = bitcast %"struct.std::__1::__hash_node_base.43"* %148 to i64*
  store i64 %145, i64* %151, align 8
  %152 = icmp eq %"class.SkSL::ProgramElement"* %150, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %140
  %154 = bitcast %"class.SkSL::ProgramElement"* %150 to void (%"class.SkSL::ProgramElement"*)***
  %155 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %155, i64 1
  %157 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %156, align 8
  call void %157(%"class.SkSL::ProgramElement"* nonnull %150) #16
  br label %158

158:                                              ; preds = %140, %153
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %147, i64 6
  %160 = bitcast %"struct.std::__1::__hash_node_base.43"* %159 to i8*
  store i8 0, i8* %160, align 8
  %161 = load i8, i8* %111, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %323

163:                                              ; preds = %158
  %164 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %164) #15
  br label %323

165:                                              ; preds = %134
  %166 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 1
  %167 = bitcast %"class.SkSL::ProgramElement"* %166 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 1, i32 0, i32 1
  %170 = bitcast i32* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = icmp ugt i64 %171, -17
  br i1 %172, label %173, label %175

173:                                              ; preds = %165
  %174 = bitcast %"class.SkSL::String"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %174) #17
  unreachable

175:                                              ; preds = %165
  %176 = icmp ult i64 %171, 23
  br i1 %176, label %182, label %177

177:                                              ; preds = %175
  %178 = add nuw i64 %171, 16
  %179 = and i64 %178, -16
  %180 = call i8* @_Znwm(i64 %179) #15
  store i8* %180, i8** %98, align 8
  %181 = or i64 %179, -9223372036854775808
  store i64 %181, i64* %99, align 8
  store i64 %171, i64* %100, align 8
  br label %185

182:                                              ; preds = %175
  %183 = trunc i64 %171 to i8
  store i8 %183, i8* %102, align 1
  %184 = icmp eq i64 %171, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %182, %177
  %186 = phi i8* [ %180, %177 ], [ %103, %182 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %186, i8* align 1 %168, i64 %171, i1 false) #16
  br label %187

187:                                              ; preds = %182, %185
  %188 = phi i8* [ %103, %182 ], [ %186, %185 ]
  %189 = getelementptr inbounds i8, i8* %188, i64 %171
  store i8 0, i8* %189, align 1
  %190 = bitcast %"class.std::__1::unique_ptr.132"* %135 to i64*
  %191 = load i64, i64* %190, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %136, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #16
  store %"class.SkSL::String"* %17, %"class.SkSL::String"** %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %106) #16
  %192 = call { %"struct.std::__1::__hash_node_base.43"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.39"* %85, %"class.SkSL::String"* nonnull dereferenceable(24) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.641"* nonnull dereferenceable(1) %9) #16
  %193 = extractvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } %192, 0
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %193, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %106) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #16
  %195 = bitcast %"struct.std::__1::__hash_node_base.43"* %194 to %"class.SkSL::ProgramElement"**
  %196 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %195, align 8
  %197 = bitcast %"struct.std::__1::__hash_node_base.43"* %194 to i64*
  store i64 %191, i64* %197, align 8
  %198 = icmp eq %"class.SkSL::ProgramElement"* %196, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %187
  %200 = bitcast %"class.SkSL::ProgramElement"* %196 to void (%"class.SkSL::ProgramElement"*)***
  %201 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %201, i64 1
  %203 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %202, align 8
  call void %203(%"class.SkSL::ProgramElement"* nonnull %196) #16
  br label %204

204:                                              ; preds = %187, %199
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %193, i64 6
  %206 = bitcast %"struct.std::__1::__hash_node_base.43"* %205 to i8*
  store i8 0, i8* %206, align 8
  %207 = load i8, i8* %102, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %323

209:                                              ; preds = %204
  %210 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %210) #15
  br label %323

211:                                              ; preds = %134
  %212 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 1
  %213 = bitcast %"class.SkSL::ProgramElement"* %212 to %"class.SkSL::VarDeclaration"**
  %214 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %213, align 8
  %215 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %214, i64 0, i32 1
  %216 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %215, align 8
  %217 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %216, i64 0, i32 0, i32 1, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %216, i64 0, i32 0, i32 1, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = icmp ugt i64 %220, -17
  br i1 %221, label %222, label %224

222:                                              ; preds = %211
  %223 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %223) #17
  unreachable

224:                                              ; preds = %211
  %225 = icmp ult i64 %220, 23
  br i1 %225, label %231, label %226

226:                                              ; preds = %224
  %227 = add nuw i64 %220, 16
  %228 = and i64 %227, -16
  %229 = call i8* @_Znwm(i64 %228) #15
  store i8* %229, i8** %89, align 8
  %230 = or i64 %228, -9223372036854775808
  store i64 %230, i64* %90, align 8
  store i64 %220, i64* %91, align 8
  br label %234

231:                                              ; preds = %224
  %232 = trunc i64 %220 to i8
  store i8 %232, i8* %93, align 1
  %233 = icmp eq i64 %220, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %231, %226
  %235 = phi i8* [ %229, %226 ], [ %94, %231 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %235, i8* align 1 %218, i64 %220, i1 false) #16
  br label %236

236:                                              ; preds = %231, %234
  %237 = phi i8* [ %94, %231 ], [ %235, %234 ]
  %238 = getelementptr inbounds i8, i8* %237, i64 %220
  store i8 0, i8* %238, align 1
  %239 = bitcast %"class.std::__1::unique_ptr.132"* %135 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %136, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #16
  store %"class.SkSL::String"* %18, %"class.SkSL::String"** %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %97) #16
  %241 = call { %"struct.std::__1::__hash_node_base.43"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.39"* %85, %"class.SkSL::String"* nonnull dereferenceable(24) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.641"* nonnull dereferenceable(1) %11) #16
  %242 = extractvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } %241, 0
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %242, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %97) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #16
  %244 = bitcast %"struct.std::__1::__hash_node_base.43"* %243 to %"class.SkSL::ProgramElement"**
  %245 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %244, align 8
  %246 = bitcast %"struct.std::__1::__hash_node_base.43"* %243 to i64*
  store i64 %240, i64* %246, align 8
  %247 = icmp eq %"class.SkSL::ProgramElement"* %245, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %236
  %249 = bitcast %"class.SkSL::ProgramElement"* %245 to void (%"class.SkSL::ProgramElement"*)***
  %250 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %250, i64 1
  %252 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %251, align 8
  call void %252(%"class.SkSL::ProgramElement"* nonnull %245) #16
  br label %253

253:                                              ; preds = %236, %248
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %242, i64 6
  %255 = bitcast %"struct.std::__1::__hash_node_base.43"* %254 to i8*
  store i8 0, i8* %255, align 8
  %256 = load i8, i8* %93, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %323

258:                                              ; preds = %253
  %259 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %259) #15
  br label %323

260:                                              ; preds = %134
  %261 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 1
  %262 = bitcast %"class.SkSL::ProgramElement"* %261 to %"class.SkSL::Variable"**
  %263 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %262, align 8
  %264 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %263, i64 0, i32 0, i32 1, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %263, i64 0, i32 0, i32 1, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = icmp ugt i64 %267, -17
  br i1 %268, label %269, label %271

269:                                              ; preds = %260
  %270 = bitcast %"class.SkSL::String"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %270) #17
  unreachable

271:                                              ; preds = %260
  %272 = icmp ult i64 %267, 23
  br i1 %272, label %278, label %273

273:                                              ; preds = %271
  %274 = add nuw i64 %267, 16
  %275 = and i64 %274, -16
  %276 = call i8* @_Znwm(i64 %275) #15
  store i8* %276, i8** %79, align 8
  %277 = or i64 %275, -9223372036854775808
  store i64 %277, i64* %80, align 8
  store i64 %267, i64* %81, align 8
  br label %281

278:                                              ; preds = %271
  %279 = trunc i64 %267 to i8
  store i8 %279, i8* %83, align 1
  %280 = icmp eq i64 %267, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %278, %273
  %282 = phi i8* [ %276, %273 ], [ %84, %278 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %282, i8* align 1 %265, i64 %267, i1 false) #16
  br label %283

283:                                              ; preds = %278, %281
  %284 = phi i8* [ %84, %278 ], [ %282, %281 ]
  %285 = getelementptr inbounds i8, i8* %284, i64 %267
  store i8 0, i8* %285, align 1
  %286 = bitcast %"class.std::__1::unique_ptr.132"* %135 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %136, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #16
  store %"class.SkSL::String"* %19, %"class.SkSL::String"** %87, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #16
  %288 = call { %"struct.std::__1::__hash_node_base.43"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.39"* %85, %"class.SkSL::String"* nonnull dereferenceable(24) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.641"* nonnull dereferenceable(1) %13) #16
  %289 = extractvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } %288, 0
  %290 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %289, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #16
  %291 = bitcast %"struct.std::__1::__hash_node_base.43"* %290 to %"class.SkSL::ProgramElement"**
  %292 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %291, align 8
  %293 = bitcast %"struct.std::__1::__hash_node_base.43"* %290 to i64*
  store i64 %287, i64* %293, align 8
  %294 = icmp eq %"class.SkSL::ProgramElement"* %292, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %283
  %296 = bitcast %"class.SkSL::ProgramElement"* %292 to void (%"class.SkSL::ProgramElement"*)***
  %297 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %296, align 8
  %298 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %297, i64 1
  %299 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %298, align 8
  call void %299(%"class.SkSL::ProgramElement"* nonnull %292) #16
  br label %300

300:                                              ; preds = %283, %295
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %289, i64 6
  %302 = bitcast %"struct.std::__1::__hash_node_base.43"* %301 to i8*
  store i8 0, i8* %302, align 8
  %303 = load i8, i8* %83, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %323

305:                                              ; preds = %300
  %306 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %306) #15
  br label %323

307:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #16
  %308 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %137, i64 0, i32 0
  %309 = bitcast %"class.SkSL::ProgramElement"* %137 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %310 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %310, i64 2
  %312 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %311, align 8
  call void %312(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::IRNode"* %308) #16
  %313 = load i8, i8* %115, align 1
  %314 = icmp slt i8 %313, 0
  %315 = load i8*, i8** %116, align 8
  %316 = select i1 %314, i8* %315, i8* %113
  %317 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* %316)
  %318 = load i8, i8* %115, align 1
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %307
  %321 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %321) #15
  br label %322

322:                                              ; preds = %307, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #16
  br label %323

323:                                              ; preds = %305, %300, %258, %253, %209, %204, %163, %158, %134, %322
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %135, i64 1
  %325 = icmp eq %"class.std::__1::unique_ptr.132"* %324, %38
  br i1 %325, label %117, label %134

326:                                              ; preds = %62, %52, %129
  %327 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %35, align 8
  %328 = icmp eq %"class.std::__1::unique_ptr.132"* %327, null
  br i1 %328, label %351, label %329

329:                                              ; preds = %326
  %330 = bitcast %"class.std::__1::unique_ptr.132"* %327 to i8*
  %331 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %37, align 8
  %332 = icmp eq %"class.std::__1::unique_ptr.132"* %331, %327
  br i1 %332, label %349, label %333

333:                                              ; preds = %329, %344
  %334 = phi %"class.std::__1::unique_ptr.132"* [ %335, %344 ], [ %331, %329 ]
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %334, i64 -1
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %335, i64 0, i32 0, i32 0, i32 0
  %337 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %336, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %336, align 8
  %338 = icmp eq %"class.SkSL::ProgramElement"* %337, null
  br i1 %338, label %344, label %339

339:                                              ; preds = %333
  %340 = bitcast %"class.SkSL::ProgramElement"* %337 to void (%"class.SkSL::ProgramElement"*)***
  %341 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %341, i64 1
  %343 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %342, align 8
  call void %343(%"class.SkSL::ProgramElement"* nonnull %337) #16
  br label %344

344:                                              ; preds = %339, %333
  %345 = icmp eq %"class.std::__1::unique_ptr.132"* %335, %327
  br i1 %345, label %346, label %333

346:                                              ; preds = %344
  %347 = bitcast %"class.std::__1::vector.130"* %34 to i8**
  %348 = load i8*, i8** %347, align 8
  br label %349

349:                                              ; preds = %346, %329
  %350 = phi i8* [ %348, %346 ], [ %330, %329 ]
  store %"class.std::__1::unique_ptr.132"* %327, %"class.std::__1::unique_ptr.132"** %37, align 8
  call void @_ZdlPv(i8* %350) #15
  br label %351

351:                                              ; preds = %349, %326
  %352 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %14, i64 0, i32 1, i32 1
  %353 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %352, align 8
  %354 = icmp eq %"class.std::__1::__shared_weak_count"* %353, null
  br i1 %354, label %365, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %353, i64 0, i32 0, i32 1
  %357 = atomicrmw add i64* %356, i64 -1 acq_rel
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %353, i64 0, i32 0
  %361 = bitcast %"class.std::__1::__shared_weak_count"* %353 to void (%"class.std::__1::__shared_count"*)***
  %362 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %362, i64 2
  %364 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %363, align 8
  call void %364(%"class.std::__1::__shared_count"* %360) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %353) #16
  br label %365

365:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler18loadFragmentModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_ZL22SKSL_INCLUDE_sksl_frag, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !5
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 320, i64* %11, align 16, !alias.scope !5
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler13loadGPUModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 0, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 8, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadVertexModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([270 x i8], [270 x i8]* @_ZL22SKSL_INCLUDE_sksl_vert, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !8
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 270, i64* %11, align 16, !alias.scope !8
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler13loadGPUModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 1, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 7, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler18loadGeometryModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([443 x i8], [443 x i8]* @_ZL22SKSL_INCLUDE_sksl_geom, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !11
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 443, i64* %11, align 16, !alias.scope !11
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler13loadGPUModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 2, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 9, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler12loadFPModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([835 x i8], [835 x i8]* @_ZL20SKSL_INCLUDE_sksl_fp, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !14
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 835, i64* %11, align 16, !alias.scope !14
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler13loadGPUModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 3, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 10, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadPublicModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([5117 x i8], [5117 x i8]* @_ZL24SKSL_INCLUDE_sksl_public, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !17
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 5117, i64* %11, align 16, !alias.scope !17
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 4
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 6, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 11, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %78

78:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler28loadRuntimeColorFilterModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %82

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @_ZL32SKSL_INCLUDE_sksl_rt_colorfilter, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !20
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 153, i64* %11, align 16, !alias.scope !20
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadPublicModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 4, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 12, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  %78 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %79 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %80 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %80, i64 0, i32 0
  tail call fastcc void @_ZN4SkSLL21add_glsl_type_aliasesEPNS_11SymbolTableERKNS_12BuiltinTypesE(%"class.SkSL::SymbolTable"* %78, %"class.SkSL::BuiltinTypes"* dereferenceable(712) %81)
  br label %82

82:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4SkSLL21add_glsl_type_aliasesEPNS_11SymbolTableERKNS_12BuiltinTypesE(%"class.SkSL::SymbolTable"*, %"class.SkSL::BuiltinTypes"* nocapture readonly dereferenceable(712)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %5) #16
  %6 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %8) #16
  %9 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %11) #16
  %12 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %13, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %14) #16
  %15 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %17) #16
  %18 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %20) #16
  %21 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 25, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %23) #16
  %24 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 26, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %25, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %26) #16
  %27 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 27, i32 0, i32 0, i32 0
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %29) #16
  %30 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 32, i32 0, i32 0, i32 0
  %31 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %32) #16
  %33 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 36, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %34, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %35) #16
  %36 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %1, i64 0, i32 40, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 0
  tail call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %38) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler23loadRuntimeShaderModuleEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::ParsedModule", align 16
  %3 = alloca %"struct.SkSL::Compiler::ModuleData", align 16
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %7 = icmp eq %"class.SkSL::SymbolTable"* %6, null
  br i1 %7, label %8, label %82

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::ParsedModule"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = bitcast %"struct.SkSL::Compiler::ModuleData"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([217 x i8], [217 x i8]* @_ZL27SKSL_INCLUDE_sksl_rt_shader, i64 0, i64 0)>, <2 x i8*>* %10, align 16, !alias.scope !23
  %11 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  store i64 217, i64* %11, align 16, !alias.scope !23
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadPublicModuleEv(%"class.SkSL::Compiler"* %0)
  call void @_ZN4SkSL8Compiler11parseModuleENS_11ProgramKindENS0_10ModuleDataERKNS_12ParsedModuleE(%"struct.SkSL::ParsedModule"* nonnull sret %2, %"class.SkSL::Compiler"* %0, i8 signext 5, %"struct.SkSL::Compiler::ModuleData"* nonnull byval(%"struct.SkSL::Compiler::ModuleData") align 8 %3, %"struct.SkSL::ParsedModule"* dereferenceable(32) %12)
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.SkSL::ParsedModule"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13, i32 0, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"struct.SkSL::ParsedModule"* %4 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %30

30:                                               ; preds = %24, %20, %8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %2, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::shared_ptr.38"* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = bitcast %"class.std::__1::shared_ptr.38"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #16
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 13, i32 1, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %39 = bitcast %"class.std::__1::shared_ptr.38"* %31 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 8
  %40 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #16
  br label %51

51:                                               ; preds = %30, %41, %45
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  tail call void %63(%"class.std::__1::__shared_count"* %59) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #16
  br label %64

64:                                               ; preds = %58, %54, %51
  %65 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 -1 acq_rel
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %65, i64 0, i32 0
  %73 = bitcast %"class.std::__1::__shared_weak_count"* %65 to void (%"class.std::__1::__shared_count"*)***
  %74 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %74, i64 2
  %76 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, align 8
  tail call void %76(%"class.std::__1::__shared_count"* %72) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %65) #16
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  %78 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %5, align 8
  %79 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %80 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %80, i64 0, i32 0
  tail call fastcc void @_ZN4SkSLL21add_glsl_type_aliasesEPNS_11SymbolTableERKNS_12BuiltinTypesE(%"class.SkSL::SymbolTable"* %78, %"class.SkSL::BuiltinTypes"* dereferenceable(712) %81)
  br label %82

82:                                               ; preds = %1, %77
  ret %"struct.SkSL::ParsedModule"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler20moduleForProgramKindENS_11ProgramKindE(%"class.SkSL::Compiler"*, i8 signext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %17 [
    i8 1, label %3
    i8 0, label %5
    i8 2, label %7
    i8 3, label %9
    i8 4, label %11
    i8 5, label %13
    i8 6, label %15
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadVertexModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

5:                                                ; preds = %2
  %6 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler18loadFragmentModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

7:                                                ; preds = %2
  %8 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler18loadGeometryModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

9:                                                ; preds = %2
  %10 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler12loadFPModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

11:                                               ; preds = %2
  %12 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler28loadRuntimeColorFilterModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

13:                                               ; preds = %2
  %14 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler23loadRuntimeShaderModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

15:                                               ; preds = %2
  %16 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler16loadPublicModuleEv(%"class.SkSL::Compiler"* %0)
  br label %18

17:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

18:                                               ; preds = %15, %13, %11, %9, %7, %5, %3
  %19 = phi %"struct.SkSL::ParsedModule"* [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"struct.SkSL::ParsedModule"* %19
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler10loadModuleENS_11ProgramKindENS0_10ModuleDataENSt3__110shared_ptrINS_11SymbolTableEEEb(%"struct.SkSL::LoadedModule"* noalias sret, %"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::Compiler::ModuleData"* nocapture readonly byval(%"struct.SkSL::Compiler::ModuleData") align 8, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.SkSL::ProgramConfig", align 8
  %9 = alloca %"class.SkSL::Rehydrator", align 8
  %10 = ptrtoint %"class.SkSL::SymbolTable"* %4 to i64
  br i1 %6, label %11, label %33

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 3
  %13 = bitcast %"class.std::__1::shared_ptr.37"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 3, i32 1
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %15, align 8
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %20 = atomicrmw add i64* %19, i64 1 monotonic
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %5, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %5, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %5 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %5) #16
  br label %33

33:                                               ; preds = %27, %23, %21, %7
  %34 = phi i64 [ %10, %7 ], [ %14, %21 ], [ %14, %23 ], [ %14, %27 ]
  %35 = phi %"class.std::__1::__shared_weak_count"* [ %5, %7 ], [ %16, %21 ], [ %16, %23 ], [ %16, %27 ]
  %36 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 14
  %37 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 1, i32 0
  %38 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %38, i64 0, i32 3
  store %"class.SkSL::ModifiersPool"* %36, %"class.SkSL::ModifiersPool"** %39, align 8
  %40 = xor i1 %6, true
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %42) #16
  %43 = bitcast %"struct.SkSL::ProgramConfig"* %8 to i64*
  store i64 -6148914691236517206, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 2
  %47 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 3
  %48 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 4
  %49 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 5
  %50 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 9
  %51 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 10
  %52 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 11
  %53 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 12
  %54 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 13
  %55 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 14
  %56 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 15
  %57 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 16
  %58 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 17
  %59 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 18
  %60 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 19
  %61 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 20
  %62 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 21
  %63 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 1, i32 22
  store i8 %2, i8* %42, align 8
  store i8 0, i8* %44, align 8
  store i8 0, i8* %45, align 1
  store i8 %41, i8* %46, align 2
  store i8 0, i8* %47, align 1
  store i8 0, i8* %48, align 4
  %64 = getelementptr inbounds i8, i8* %42, i64 13
  call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 -86, i64 3, i1 false)
  %65 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %65, align 8
  store i32 0, i32* %50, align 8
  store i8 1, i8* %51, align 4
  store i8 1, i8* %52, align 1
  store i8 1, i8* %53, align 2
  %66 = getelementptr inbounds i8, i8* %42, i64 39
  store i8 -86, i8* %66, align 1
  store i32 50, i32* %54, align 8
  store i8 0, i8* %55, align 4
  store i8 0, i8* %56, align 1
  store i8 1, i8* %57, align 2
  store i8 0, i8* %58, align 1
  store i8 0, i8* %59, align 8
  store i8 1, i8* %60, align 1
  store i8 1, i8* %61, align 2
  store i8 0, i8* %62, align 1
  %67 = getelementptr inbounds i8, i8* %42, i64 52
  %68 = bitcast i8* %67 to i32*
  store i32 -1431655766, i32* %68, align 4
  store %"class.std::__1::vector.36"* null, %"class.std::__1::vector.36"** %63, align 8
  %69 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %37, align 8
  %70 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %69, i64 0, i32 4
  store %"struct.SkSL::ProgramConfig"* %8, %"struct.SkSL::ProgramConfig"** %70, align 8
  %71 = bitcast %"class.SkSL::Rehydrator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 64, i1 false)
  %72 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %37, align 8
  %73 = icmp eq %"class.std::__1::__shared_weak_count"* %35, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %33
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 1 monotonic
  br label %77

77:                                               ; preds = %33, %74
  %78 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.SkSL::Compiler::ModuleData", %"struct.SkSL::Compiler::ModuleData"* %3, i64 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = inttoptr i64 %34 to %"class.SkSL::SymbolTable"*
  call void @_ZN4SkSL10RehydratorC1EPKNS_7ContextENSt3__110shared_ptrINS_11SymbolTableEEEPKhm(%"class.SkSL::Rehydrator"* nonnull %9, %"class.SkSL::Context"* %72, %"class.SkSL::SymbolTable"* %82, %"class.std::__1::__shared_weak_count"* %35, i8* %79, i64 %81) #16
  %83 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 -86, i64 48, i1 false)
  store i8 %2, i8* %83, align 8
  %84 = call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"* nonnull %9, i1 zeroext true) #16
  %85 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %0, i64 0, i32 1, i32 0
  %86 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %84, 0
  store %"class.SkSL::SymbolTable"* %86, %"class.SkSL::SymbolTable"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %0, i64 0, i32 1, i32 1
  %88 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %84, 1
  store %"class.std::__1::__shared_weak_count"* %88, %"class.std::__1::__shared_weak_count"** %87, align 8
  %89 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %0, i64 0, i32 2
  call void @_ZN4SkSL10Rehydrator8elementsEv(%"class.std::__1::vector.130"* sret %89, %"class.SkSL::Rehydrator"* nonnull %9) #16
  %90 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %9, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %90, align 8
  %92 = icmp eq %"class.SkSL::Symbol"** %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %77
  %94 = ptrtoint %"class.SkSL::Symbol"** %91 to i64
  %95 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %9, i64 0, i32 2, i32 0, i32 1
  %96 = bitcast %"class.SkSL::Symbol"*** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"class.SkSL::Symbol"** %91 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %93, %77
  %99 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %9, i64 0, i32 1, i32 1
  %100 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %99, align 8
  %101 = icmp eq %"class.std::__1::__shared_weak_count"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %100, i64 0, i32 0, i32 1
  %104 = atomicrmw add i64* %103, i64 -1 acq_rel
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %100, i64 0, i32 0
  %108 = bitcast %"class.std::__1::__shared_weak_count"* %100 to void (%"class.std::__1::__shared_count"*)***
  %109 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %109, i64 2
  %111 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %110, align 8
  call void %111(%"class.std::__1::__shared_count"* %107) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %100) #16
  br label %112

112:                                              ; preds = %98, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #16
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %42) #16
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %39, align 8
  br i1 %73, label %123, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0, i32 1
  %115 = atomicrmw add i64* %114, i64 -1 acq_rel
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0
  %119 = bitcast %"class.std::__1::__shared_weak_count"* %35 to void (%"class.std::__1::__shared_count"*)***
  %120 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %120, i64 2
  %122 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %121, align 8
  call void %122(%"class.std::__1::__shared_count"* %118) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %35) #16
  br label %123

123:                                              ; preds = %112, %113, %117
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4SkSL10RehydratorC1EPKNS_7ContextENSt3__110shared_ptrINS_11SymbolTableEEEPKhm(%"class.SkSL::Rehydrator"*, %"class.SkSL::Context"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i8*, i64) unnamed_addr #2

declare { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN4SkSL10Rehydrator8elementsEv(%"class.std::__1::vector.130"* sret, %"class.SkSL::Rehydrator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler8optimizeERNS_12LoadedModuleE(%"class.SkSL::Compiler"*, %"struct.SkSL::LoadedModule"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::ProgramConfig", align 8
  %4 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 2
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 3
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 4
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 5
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %11, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 9
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 10
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 11
  store i8 1, i8* %14, align 1
  %15 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 12
  store i8 1, i8* %15, align 2
  %16 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 13
  store i32 50, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 14
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 15
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 16
  store i8 1, i8* %19, align 2
  %20 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 17
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 18
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 19
  store i8 1, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 20
  store i8 1, i8* %23, align 2
  %24 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 21
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %3, i64 0, i32 1, i32 22
  store %"class.std::__1::vector.36"* null, %"class.std::__1::vector.36"** %25, align 8
  %26 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %1, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  store i8 %27, i8* %4, align 8
  %28 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %29, i64 0, i32 4
  store %"struct.SkSL::ProgramConfig"* %3, %"struct.SkSL::ProgramConfig"** %30, align 8
  %31 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 15
  call void @_ZN4SkSL7Inliner5resetEv(%"class.SkSL::Inliner"* %31) #16
  %32 = call %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_12LoadedModuleE(%"struct.SkSL::LoadedModule"* dereferenceable(48) %1) #16
  %33 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %34 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %1, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.SkSL::LoadedModule", %"struct.SkSL::LoadedModule"* %1, i64 0, i32 1, i32 1
  br label %37

37:                                               ; preds = %47, %2
  %38 = load i32, i32* %33, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %51

40:                                               ; preds = %37
  %41 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %35, align 8
  %42 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %43 = icmp eq %"class.std::__1::__shared_weak_count"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0, i32 1
  %46 = atomicrmw add i64* %45, i64 1 monotonic
  br label %47

47:                                               ; preds = %40, %44
  %48 = call zeroext i1 @_ZN4SkSL7Inliner7analyzeERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageE(%"class.SkSL::Inliner"* %31, %"class.std::__1::vector.130"* dereferenceable(24) %34, %"class.SkSL::SymbolTable"* %41, %"class.std::__1::__shared_weak_count"* %42, %"class.SkSL::ProgramUsage"* %32) #16
  br i1 %48, label %37, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %33, align 8
  br label %51

51:                                               ; preds = %37, %49
  %52 = phi i32 [ %50, %49 ], [ %38, %37 ]
  %53 = icmp eq i32 %52, 0
  %54 = icmp eq %"class.SkSL::ProgramUsage"* %32, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %32, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %56, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %56, align 8
  %58 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %57 to i8*
  call void @_ZdaPv(i8* %60) #15
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %32, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %62, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %62, align 8
  %64 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %63 to i8*
  call void @_ZdaPv(i8* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = bitcast %"class.SkSL::ProgramUsage"* %32 to i8*
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %51, %67
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #16
  ret i1 %53
}

declare void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkSL::Program"* @_ZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsE(%"class.SkSL::Compiler"*, i8 signext, %"class.SkSL::String"* nocapture, %"struct.SkSL::ProgramSettings"* byval(%"struct.SkSL::ProgramSettings") align 8) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.std::__1::unique_ptr.222", align 8
  %8 = alloca %"struct.SkSL::IRGenerator::IRBundle", align 8
  %9 = load atomic i64, i64* @_ZZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsEE28trace_event_unique_atomic431.0.0 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %4
  %13 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %14 = bitcast %class.SkEventTracer* %13 to i8* (%class.SkEventTracer*, i8*)***
  %15 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, i64 2
  %17 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, align 8
  %18 = tail call i8* %17(%class.SkEventTracer* %13, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #16
  %19 = ptrtoint i8* %18 to i64
  store atomic i64 %19, i64* @_ZZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsEE28trace_event_unique_atomic431.0.0 monotonic, align 8
  br label %20

20:                                               ; preds = %4, %12
  %21 = phi i8* [ %10, %4 ], [ %18, %12 ]
  %22 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %28 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %29 = load i8, i8* %21, align 1
  %30 = and i8 %29, 5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %34 = bitcast %class.SkEventTracer* %33 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %34, align 8
  %36 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, i64 4
  %37 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, align 8
  %38 = tail call i64 %37(%class.SkEventTracer* %33, i8 signext 88, i8* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %39 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, i64 0, i32 0
  store i8* %21, i8** %40, align 8
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i8** %25, align 8
  store i64 %38, i64* %26, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  br label %41

41:                                               ; preds = %20, %32
  %42 = call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler20moduleForProgramKindENS_11ProgramKindE(%"class.SkSL::Compiler"* %0, i8 signext %1)
  %43 = load i32, i32* @_ZN4SkSL8Compiler10sOptimizerE, align 4
  switch i32 %43, label %48 [
    i32 2, label %44
    i32 1, label %45
  ]

44:                                               ; preds = %41
  br label %45

45:                                               ; preds = %41, %44
  %46 = phi i8 [ 1, %44 ], [ 0, %41 ]
  %47 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 10
  store i8 %46, i8* %47, align 4
  br label %48

48:                                               ; preds = %45, %41
  %49 = load i32, i32* @_ZN4SkSL8Compiler8sInlinerE, align 4
  switch i32 %49, label %50 [
    i32 2, label %55
    i32 1, label %53
  ]

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 13
  %52 = load i32, i32* %51, align 8
  br label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 13
  store i32 0, i32* %54, align 8
  br label %60

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 13
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  store i32 50, i32* %56, align 8
  br label %60

60:                                               ; preds = %50, %55, %59, %53
  %61 = phi i32 [ %52, %50 ], [ %57, %55 ], [ 50, %59 ], [ 0, %53 ]
  %62 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 10
  %63 = load i8, i8* %62, align 4, !range !26
  %64 = zext i8 %63 to i32
  %65 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 13
  %66 = mul nuw nsw i32 %61, %64
  store i32 %66, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 11
  %68 = load i8, i8* %67, align 1, !range !26
  %69 = and i8 %68, %63
  store i8 %69, i8* %67, align 1
  %70 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 12
  %71 = load i8, i8* %70, align 2, !range !26
  %72 = and i8 %71, %63
  store i8 %72, i8* %70, align 2
  %73 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #16
  %74 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  store i8 0, i8* %75, align 1
  store i8 0, i8* %73, align 8
  %76 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19
  %77 = bitcast %"class.SkSL::String"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %60
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %81, %60
  %85 = bitcast %"class.SkSL::String"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %73, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #16
  %86 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 15
  call void @_ZN4SkSL7Inliner5resetEv(%"class.SkSL::Inliner"* %87) #16
  %88 = bitcast %"class.std::__1::unique_ptr.222"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #16
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %7, i64 0, i32 0, i32 0, i32 0
  %90 = call i8* @_Znwm(i64 24) #15
  %91 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %91, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #16
  %92 = bitcast %"class.std::__1::unique_ptr.222"* %7 to i8**
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %94 = bitcast %"class.SkSL::String"** %93 to i8**
  store i8* %90, i8** %94, align 8
  call void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsE(%"class.SkSL::Compiler"* %0, i8 signext %1, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %3) #16
  %95 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %95) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 72, i1 false)
  %96 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %97 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %96, align 8
  %98 = getelementptr inbounds i8, i8* %90, i64 23
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %84
  %102 = bitcast i8* %90 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds i8, i8* %90, i64 8
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  br label %109

107:                                              ; preds = %84
  %108 = zext i8 %99 to i64
  br label %109

109:                                              ; preds = %101, %107
  %110 = phi i8* [ %103, %101 ], [ %90, %107 ]
  %111 = phi i64 [ %106, %101 ], [ %108, %107 ]
  call void @_ZN4SkSL11IRGenerator14convertProgramERKNS_12ParsedModuleEbPKcm(%"struct.SkSL::IRGenerator::IRBundle"* nonnull sret %8, %"class.SkSL::IRGenerator"* %97, %"struct.SkSL::ParsedModule"* dereferenceable(32) %42, i1 zeroext false, i8* %110, i64 %111) #16
  %112 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #16
  %113 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %112, i64 0, i32 3, i32 0, i32 0, i32 0
  %114 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %113, align 8
  %115 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #16
  %116 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %115, i64 0, i32 0
  %117 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 1
  %120 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #16
  %121 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %120, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 2
  %123 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #16
  %124 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %123, i64 0, i32 3
  %125 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 3
  %126 = call %"struct.SkSL::Program"* @_ZNSt3__111make_uniqueIN4SkSL7ProgramEJNS_10unique_ptrINS1_6StringENS_14default_deleteIS4_EEEENS3_INS1_13ProgramConfigENS5_IS8_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISG_EEEENS_9allocatorISI_EEEENSF_IPKSG_NSJ_ISN_EEEENS3_INS1_13ModifiersPoolENS5_ISQ_EEEENSB_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISV_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::unique_ptr.222"* nonnull dereferenceable(8) %7, %"class.std::__1::unique_ptr.228"* dereferenceable(8) %116, %"class.std::__1::shared_ptr"* dereferenceable(16) %117, %"class.std::__1::vector.130"* nonnull dereferenceable(24) %118, %"class.std::__1::vector.143"* dereferenceable(24) %119, %"class.std::__1::unique_ptr.246"* dereferenceable(8) %121, %"class.std::__1::shared_ptr.37"* dereferenceable(16) %122, %"class.std::__1::unique_ptr.234"* dereferenceable(8) %124, %"struct.SkSL::Program::Inputs"* dereferenceable(2) %125)
  %127 = ptrtoint %"struct.SkSL::Program"* %126 to i64
  %128 = load i32, i32* %86, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %109
  %131 = call zeroext i1 @_ZN4SkSL8Compiler8optimizeERNS_7ProgramE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %126)
  br label %132

132:                                              ; preds = %130, %109
  %133 = phi i1 [ false, %109 ], [ %131, %130 ]
  call void @_ZN4SkSL3dsl3EndEv() #16
  %134 = icmp eq %"class.SkSL::Pool"* %114, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nonnull %114) #16
  br label %136

136:                                              ; preds = %132, %135
  br i1 %133, label %141, label %137

137:                                              ; preds = %136
  %138 = icmp eq %"struct.SkSL::Program"* %126, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  call void @_ZN4SkSL7ProgramD2Ev(%"struct.SkSL::Program"* nonnull %126) #16
  %140 = bitcast %"struct.SkSL::Program"* %126 to i8*
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %136, %137, %139
  %142 = phi i64 [ 0, %137 ], [ 0, %139 ], [ %127, %136 ]
  %143 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 2, i32 1
  %144 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %143, align 8
  %145 = icmp eq %"class.std::__1::__shared_weak_count"* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %144, i64 0, i32 0, i32 1
  %148 = atomicrmw add i64* %147, i64 -1 acq_rel
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %144, i64 0, i32 0
  %152 = bitcast %"class.std::__1::__shared_weak_count"* %144 to void (%"class.std::__1::__shared_count"*)***
  %153 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %153, i64 2
  %155 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %154, align 8
  call void %155(%"class.std::__1::__shared_count"* %151) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %144) #16
  br label %156

156:                                              ; preds = %150, %146, %141
  %157 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 1, i32 0, i32 0
  %158 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %157, align 8
  %159 = icmp eq %"class.SkSL::ProgramElement"** %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = ptrtoint %"class.SkSL::ProgramElement"** %158 to i64
  %162 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 1, i32 0, i32 1
  %163 = bitcast %"class.SkSL::ProgramElement"*** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = bitcast %"class.SkSL::ProgramElement"** %158 to i8*
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %160, %156
  %166 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %166, align 8
  %168 = icmp eq %"class.std::__1::unique_ptr.132"* %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.std::__1::unique_ptr.132"* %167 to i8*
  %171 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %8, i64 0, i32 0, i32 0, i32 1
  %172 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %171, align 8
  %173 = icmp eq %"class.std::__1::unique_ptr.132"* %172, %167
  br i1 %173, label %190, label %174

174:                                              ; preds = %169, %185
  %175 = phi %"class.std::__1::unique_ptr.132"* [ %176, %185 ], [ %172, %169 ]
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %175, i64 -1
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %177, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %177, align 8
  %179 = icmp eq %"class.SkSL::ProgramElement"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = bitcast %"class.SkSL::ProgramElement"* %178 to void (%"class.SkSL::ProgramElement"*)***
  %182 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %182, i64 1
  %184 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %183, align 8
  call void %184(%"class.SkSL::ProgramElement"* nonnull %178) #16
  br label %185

185:                                              ; preds = %180, %174
  %186 = icmp eq %"class.std::__1::unique_ptr.132"* %176, %167
  br i1 %186, label %187, label %174

187:                                              ; preds = %185
  %188 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %8 to i8**
  %189 = load i8*, i8** %188, align 8
  br label %190

190:                                              ; preds = %187, %169
  %191 = phi i8* [ %189, %187 ], [ %170, %169 ]
  store %"class.std::__1::unique_ptr.132"* %167, %"class.std::__1::unique_ptr.132"** %171, align 8
  call void @_ZdlPv(i8* %191) #15
  br label %192

192:                                              ; preds = %165, %190
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %95) #16
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %93, align 8
  %193 = load %"class.SkSL::String"*, %"class.SkSL::String"** %89, align 8
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %89, align 8
  %194 = icmp eq %"class.SkSL::String"* %193, null
  br i1 %194, label %205, label %195

195:                                              ; preds = %192
  %196 = bitcast %"class.SkSL::String"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #15
  br label %203

203:                                              ; preds = %200, %195
  %204 = bitcast %"class.SkSL::String"* %193 to i8*
  call void @_ZdlPv(i8* %204) #15
  br label %205

205:                                              ; preds = %192, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #16
  %206 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %207 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = load i8*, i8** %24, align 8
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %221, label %212

212:                                              ; preds = %208
  %213 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %214 = load i8*, i8** %24, align 8
  %215 = load i8*, i8** %25, align 8
  %216 = load i64, i64* %26, align 8
  %217 = bitcast %class.SkEventTracer* %213 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %218 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %217, align 8
  %219 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %218, i64 5
  %220 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %219, align 8
  call void %220(%class.SkEventTracer* %213, i8* %214, i8* %215, i64 %216) #16
  br label %221

221:                                              ; preds = %205, %208, %212
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #16
  %222 = inttoptr i64 %142 to %"struct.SkSL::Program"*
  ret %"struct.SkSL::Program"* %222
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4SkSL7Inliner5resetEv(%"class.SkSL::Inliner"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsE(%"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::ProgramSettings"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN4SkSL11IRGenerator14convertProgramERKNS_12ParsedModuleEbPKcm(%"struct.SkSL::IRGenerator::IRBundle"* sret, %"class.SkSL::IRGenerator"*, %"struct.SkSL::ParsedModule"* dereferenceable(32), i1 zeroext, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkSL::Program"* @_ZNSt3__111make_uniqueIN4SkSL7ProgramEJNS_10unique_ptrINS1_6StringENS_14default_deleteIS4_EEEENS3_INS1_13ProgramConfigENS5_IS8_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISG_EEEENS_9allocatorISI_EEEENSF_IPKSG_NSJ_ISN_EEEENS3_INS1_13ModifiersPoolENS5_ISQ_EEEENSB_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISV_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::unique_ptr.222"* dereferenceable(8), %"class.std::__1::unique_ptr.228"* dereferenceable(8), %"class.std::__1::shared_ptr"* dereferenceable(16), %"class.std::__1::vector.130"* dereferenceable(24), %"class.std::__1::vector.143"* dereferenceable(24), %"class.std::__1::unique_ptr.246"* dereferenceable(8), %"class.std::__1::shared_ptr.37"* dereferenceable(16), %"class.std::__1::unique_ptr.234"* dereferenceable(8), %"struct.SkSL::Program::Inputs"* dereferenceable(2)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.std::__1::vector.130", align 16
  %11 = alloca %"class.std::__1::vector.143", align 16
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.std::__1::shared_ptr.37"*
  %14 = tail call i8* @_Znwm(i64 128) #15
  %15 = bitcast i8* %14 to %"struct.SkSL::Program"*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::String"*, %"class.SkSL::String"** %16, align 8
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %18, align 8
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %21 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 1
  %23 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %22, align 8
  %24 = icmp eq %"class.std::__1::__shared_weak_count"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %23, i64 0, i32 0, i32 1
  %27 = atomicrmw add i64* %26, i64 1 monotonic
  br label %28

28:                                               ; preds = %9, %25
  %29 = bitcast %"class.std::__1::vector.130"* %3 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %10, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.130"* %10 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %32, align 16
  %33 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.132"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr.132"** %36 to i64*
  store i64 %35, i64* %37, align 16
  %38 = bitcast %"class.std::__1::vector.130"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  %39 = bitcast %"class.std::__1::vector.143"* %4 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = bitcast %"class.std::__1::vector.143"* %11 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.SkSL::ProgramElement"*** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.SkSL::ProgramElement"*** %45 to i64*
  store i64 %44, i64* %46, align 16
  %47 = bitcast %"class.std::__1::vector.143"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #16
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246"* %5, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::unique_ptr.246"* %5 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %48, align 8
  %51 = bitcast %"class.std::__1::shared_ptr.37"* %6 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  store <2 x i64> %52, <2 x i64>* %12, align 16
  %53 = bitcast %"class.std::__1::shared_ptr.37"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #16
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::unique_ptr.234"* %7 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.SkSL::Pool"* null, %"class.SkSL::Pool"** %54, align 8
  %57 = bitcast %"struct.SkSL::Program::Inputs"* %8 to i16*
  %58 = load i16, i16* %57, align 1
  call void @_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE(%"struct.SkSL::Program"* nonnull %15, %"class.SkSL::String"* %17, %"struct.SkSL::ProgramConfig"* %19, %"class.SkSL::Context"* %21, %"class.std::__1::__shared_weak_count"* %23, %"class.std::__1::vector.130"* nonnull %10, %"class.std::__1::vector.143"* nonnull %11, i64 %50, %"class.std::__1::shared_ptr.37"* nonnull byval(%"class.std::__1::shared_ptr.37") align 8 %13, i64 %56, i16 %58)
  %59 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %11, i64 0, i32 0, i32 0
  %60 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %59, align 16
  %61 = icmp eq %"class.SkSL::ProgramElement"** %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %28
  %63 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %11, i64 0, i32 0, i32 1
  %64 = bitcast %"class.SkSL::ProgramElement"*** %63 to i64*
  %65 = ptrtoint %"class.SkSL::ProgramElement"** %60 to i64
  store i64 %65, i64* %64, align 8
  %66 = bitcast %"class.SkSL::ProgramElement"** %60 to i8*
  call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %28, %62
  %68 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %10, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %68, align 16
  %70 = icmp eq %"class.std::__1::unique_ptr.132"* %69, null
  br i1 %70, label %93, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::unique_ptr.132"* %69 to i8*
  %73 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %31, align 8
  %74 = icmp eq %"class.std::__1::unique_ptr.132"* %73, %69
  br i1 %74, label %91, label %75

75:                                               ; preds = %71, %86
  %76 = phi %"class.std::__1::unique_ptr.132"* [ %77, %86 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %76, i64 -1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %78, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %78, align 8
  %80 = icmp eq %"class.SkSL::ProgramElement"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.SkSL::ProgramElement"* %79 to void (%"class.SkSL::ProgramElement"*)***
  %83 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %83, i64 1
  %85 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %84, align 8
  call void %85(%"class.SkSL::ProgramElement"* nonnull %79) #16
  br label %86

86:                                               ; preds = %81, %75
  %87 = icmp eq %"class.std::__1::unique_ptr.132"* %77, %69
  br i1 %87, label %88, label %75

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::vector.130"* %10 to i8**
  %90 = load i8*, i8** %89, align 16
  br label %91

91:                                               ; preds = %88, %71
  %92 = phi i8* [ %90, %88 ], [ %72, %71 ]
  store %"class.std::__1::unique_ptr.132"* %69, %"class.std::__1::unique_ptr.132"** %31, align 8
  call void @_ZdlPv(i8* %92) #15
  br label %93

93:                                               ; preds = %67, %91
  ret %"struct.SkSL::Program"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler8optimizeERNS_7ProgramE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.StaticTestVerifier, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %5, i64 0, i32 1, i32 10
  %7 = load i8, i8* %6, align 4, !range !26
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %81, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %78

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 15
  %17 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6
  %18 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 3, i32 0
  %19 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %18, align 8
  %20 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 3, i32 1
  %21 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 1 monotonic
  br label %26

26:                                               ; preds = %15, %23
  %27 = tail call zeroext i1 @_ZN4SkSL7Inliner7analyzeERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageE(%"class.SkSL::Inliner"* %16, %"class.std::__1::vector.130"* dereferenceable(24) %17, %"class.SkSL::SymbolTable"* %19, %"class.std::__1::__shared_weak_count"* %21, %"class.SkSL::ProgramUsage"* %11) #16
  br label %28

28:                                               ; preds = %28, %26
  %29 = tail call zeroext i1 @_ZN4SkSL8Compiler19removeDeadFunctionsERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* undef, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::ProgramUsage"* %11)
  br i1 %29, label %28, label %30

30:                                               ; preds = %28, %30
  %31 = tail call zeroext i1 @_ZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::ProgramUsage"* %11)
  br i1 %31, label %30, label %32

32:                                               ; preds = %30
  tail call void @_ZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::ProgramUsage"* %11)
  %33 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %4, align 8
  %34 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %33, i64 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 3
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = tail call zeroext i1 @_ZN4SkSL8Compiler25removeDeadGlobalVariablesERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* undef, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::ProgramUsage"* %11)
  br label %39

39:                                               ; preds = %32, %37
  %40 = load i32, i32* %12, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %78

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %44 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %44, i64 0, i32 4
  %46 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %46, i64 0, i32 1, i32 18
  %48 = load i8, i8* %47, align 8, !range !26
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %78

50:                                               ; preds = %42
  %51 = bitcast %class.StaticTestVerifier* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #16
  %52 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEE18StaticTestVerifier, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  store %"class.SkSL::ErrorReporter"* %54, %"class.SkSL::ErrorReporter"** %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %56 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %55, align 8
  %57 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %58 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.132"* %56, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 0, i32 0
  br label %66

62:                                               ; preds = %75
  %63 = load i32, i32* %12, align 8
  br label %64

64:                                               ; preds = %62, %50
  %65 = phi i32 [ %63, %62 ], [ 0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #16
  br label %78

66:                                               ; preds = %75, %60
  %67 = phi %"class.std::__1::unique_ptr.132"* [ %56, %60 ], [ %76, %75 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %69, i64 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %61, %"class.SkSL::ProgramElement"* dereferenceable(16) %69) #16
  br label %75

75:                                               ; preds = %73, %66
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %67, i64 1
  %77 = icmp eq %"class.std::__1::unique_ptr.132"* %76, %58
  br i1 %77, label %62, label %66

78:                                               ; preds = %9, %64, %42, %39
  %79 = phi i32 [ %13, %9 ], [ %65, %64 ], [ 0, %42 ], [ %40, %39 ]
  %80 = icmp eq i32 %79, 0
  br label %81

81:                                               ; preds = %2, %78
  %82 = phi i1 [ %80, %78 ], [ true, %2 ]
  ret i1 %82
}

declare void @_ZN4SkSL3dsl3EndEv() local_unnamed_addr #2

declare void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.StaticTestVerifier, align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %5, i64 0, i32 4
  %7 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %7, i64 0, i32 1, i32 18
  %9 = load i8, i8* %8, align 8, !range !26
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %2
  %12 = bitcast %class.StaticTestVerifier* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEE18StaticTestVerifier, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store %"class.SkSL::ErrorReporter"* %15, %"class.SkSL::ErrorReporter"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %16, align 8
  %18 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.132"* %17, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %3, i64 0, i32 0, i32 0
  br label %24

23:                                               ; preds = %33, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br label %36

24:                                               ; preds = %21, %33
  %25 = phi %"class.std::__1::unique_ptr.132"* [ %17, %21 ], [ %34, %33 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %27, i64 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"* nonnull %22, %"class.SkSL::ProgramElement"* dereferenceable(16) %27) #16
  br label %33

33:                                               ; preds = %31, %24
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %25, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr.132"* %34, %19
  br i1 %35, label %23, label %24

36:                                               ; preds = %2, %23
  ret void
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev(%"class.SkSL::TProgramVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_12LoadedModuleE(%"struct.SkSL::LoadedModule"* dereferenceable(48)) local_unnamed_addr #2

declare zeroext i1 @_ZN4SkSL7Inliner7analyzeERKNSt3__16vectorINS1_10unique_ptrINS_14ProgramElementENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEENS1_10shared_ptrINS_11SymbolTableEEEPNS_12ProgramUsageE(%"class.SkSL::Inliner"*, %"class.std::__1::vector.130"* dereferenceable(24), %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, %"class.SkSL::ProgramUsage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler19removeDeadFunctionsERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* nocapture readnone, %"struct.SkSL::Program"* nocapture dereferenceable(128), %"class.SkSL::ProgramUsage"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %5, i64 0, i32 1, i32 11
  %7 = load i8, i8* %6, align 1, !range !26
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %187, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.132"* %11, %13
  br i1 %14, label %38, label %15

15:                                               ; preds = %9, %33
  %16 = phi %"class.std::__1::unique_ptr.132"* [ %34, %33 ], [ %11, %9 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %18, i64 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %33

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %18, i64 1
  %24 = bitcast %"class.SkSL::ProgramElement"* %23 to %"class.SkSL::FunctionDeclaration"**
  %25 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %25, i64 0, i32 6
  %27 = load i8, i8* %26, align 1, !range !26
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = tail call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %25) #16
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @_ZN4SkSL12ProgramUsage6removeERKNS_14ProgramElementE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramElement"* dereferenceable(16) %18) #16
  br label %38

33:                                               ; preds = %29, %22, %15
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %16, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr.132"* %34, %13
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  %37 = ptrtoint %"class.std::__1::unique_ptr.132"* %13 to i64
  br label %90

38:                                               ; preds = %32, %9
  %39 = phi i8 [ 0, %9 ], [ 1, %32 ]
  %40 = phi %"class.std::__1::unique_ptr.132"* [ %11, %9 ], [ %16, %32 ]
  %41 = ptrtoint %"class.std::__1::unique_ptr.132"* %40 to i64
  %42 = icmp eq %"class.std::__1::unique_ptr.132"* %40, %13
  br i1 %42, label %90, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %40, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.132"* %44, %13
  br i1 %45, label %90, label %46

46:                                               ; preds = %43, %85
  %47 = phi i8 [ %86, %85 ], [ %39, %43 ]
  %48 = phi %"class.std::__1::unique_ptr.132"* [ %88, %85 ], [ %44, %43 ]
  %49 = phi i64 [ %87, %85 ], [ %41, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %50, align 8
  %52 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %51, i64 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 2
  %55 = ptrtoint %"class.SkSL::ProgramElement"* %51 to i64
  br i1 %54, label %56, label %70

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %51, i64 1
  %58 = bitcast %"class.SkSL::ProgramElement"* %57 to %"class.SkSL::FunctionDeclaration"**
  %59 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %58, align 8
  %60 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 1, !range !26
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %56
  %64 = tail call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %59) #16
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = bitcast %"class.std::__1::unique_ptr.132"* %48 to i64*
  %68 = load i64, i64* %67, align 8
  br label %70

69:                                               ; preds = %63
  tail call void @_ZN4SkSL12ProgramUsage6removeERKNS_14ProgramElementE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramElement"* dereferenceable(16) %51) #16
  br label %85

70:                                               ; preds = %66, %56, %46
  %71 = phi i64 [ %68, %66 ], [ %55, %46 ], [ %55, %56 ]
  %72 = inttoptr i64 %49 to %"class.std::__1::unique_ptr.132"*
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %50, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %73, align 8
  %75 = inttoptr i64 %49 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.SkSL::ProgramElement"* %74, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = bitcast %"class.SkSL::ProgramElement"* %74 to void (%"class.SkSL::ProgramElement"*)***
  %79 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %79, i64 1
  %81 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %80, align 8
  tail call void %81(%"class.SkSL::ProgramElement"* nonnull %74) #16
  br label %82

82:                                               ; preds = %77, %70
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %72, i64 1
  %84 = ptrtoint %"class.std::__1::unique_ptr.132"* %83 to i64
  br label %85

85:                                               ; preds = %82, %69
  %86 = phi i8 [ %47, %82 ], [ 1, %69 ]
  %87 = phi i64 [ %84, %82 ], [ %49, %69 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %48, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr.132"* %88, %13
  br i1 %89, label %90, label %46

90:                                               ; preds = %85, %36, %38, %43
  %91 = phi i8 [ %39, %38 ], [ %39, %43 ], [ 0, %36 ], [ %86, %85 ]
  %92 = phi i64 [ %41, %38 ], [ %41, %43 ], [ %37, %36 ], [ %87, %85 ]
  %93 = inttoptr i64 %92 to %"class.std::__1::unique_ptr.132"*
  %94 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %12, align 8
  %95 = icmp eq %"class.std::__1::unique_ptr.132"* %94, %93
  br i1 %95, label %110, label %96

96:                                               ; preds = %90, %107
  %97 = phi %"class.std::__1::unique_ptr.132"* [ %98, %107 ], [ %94, %90 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %97, i64 -1
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %99, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %101 = icmp eq %"class.SkSL::ProgramElement"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %96
  %103 = bitcast %"class.SkSL::ProgramElement"* %100 to void (%"class.SkSL::ProgramElement"*)***
  %104 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %104, i64 1
  %106 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %105, align 8
  tail call void %106(%"class.SkSL::ProgramElement"* nonnull %100) #16
  br label %107

107:                                              ; preds = %102, %96
  %108 = icmp eq %"class.std::__1::unique_ptr.132"* %98, %93
  br i1 %108, label %109, label %96

109:                                              ; preds = %107
  store %"class.std::__1::unique_ptr.132"* %93, %"class.std::__1::unique_ptr.132"** %12, align 8
  br label %110

110:                                              ; preds = %90, %109
  %111 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 0
  %112 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %111, align 8
  %113 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 1
  %114 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %113, align 8
  %115 = icmp eq %"class.SkSL::ProgramElement"** %112, %114
  br i1 %115, label %136, label %116

116:                                              ; preds = %110, %133
  %117 = phi %"class.SkSL::ProgramElement"** [ %134, %133 ], [ %112, %110 ]
  %118 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %117, align 8
  %119 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %118, i64 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 2
  br i1 %121, label %122, label %133

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %118, i64 1
  %124 = bitcast %"class.SkSL::ProgramElement"* %123 to %"class.SkSL::FunctionDeclaration"**
  %125 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %125, i64 0, i32 6
  %127 = load i8, i8* %126, align 1, !range !26
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %122
  %130 = tail call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %125) #16
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  tail call void @_ZN4SkSL12ProgramUsage6removeERKNS_14ProgramElementE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramElement"* dereferenceable(16) %118) #16
  br label %136

133:                                              ; preds = %129, %122, %116
  %134 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %117, i64 1
  %135 = icmp eq %"class.SkSL::ProgramElement"** %134, %114
  br i1 %135, label %181, label %116

136:                                              ; preds = %132, %110
  %137 = phi i8 [ %91, %110 ], [ 1, %132 ]
  %138 = phi %"class.SkSL::ProgramElement"** [ %112, %110 ], [ %117, %132 ]
  %139 = icmp eq %"class.SkSL::ProgramElement"** %138, %114
  br i1 %139, label %181, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %138, i64 1
  %142 = icmp eq %"class.SkSL::ProgramElement"** %141, %114
  br i1 %142, label %181, label %143

143:                                              ; preds = %140
  %144 = ptrtoint %"class.SkSL::ProgramElement"** %138 to i64
  br label %145

145:                                              ; preds = %143, %174
  %146 = phi i8 [ %175, %174 ], [ %137, %143 ]
  %147 = phi %"class.SkSL::ProgramElement"** [ %177, %174 ], [ %141, %143 ]
  %148 = phi i64 [ %176, %174 ], [ %144, %143 ]
  %149 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %147, align 8
  %150 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %149, i64 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 2
  %153 = ptrtoint %"class.SkSL::ProgramElement"* %149 to i64
  br i1 %152, label %154, label %168

154:                                              ; preds = %145
  %155 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %149, i64 1
  %156 = bitcast %"class.SkSL::ProgramElement"* %155 to %"class.SkSL::FunctionDeclaration"**
  %157 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %156, align 8
  %158 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %157, i64 0, i32 6
  %159 = load i8, i8* %158, align 1, !range !26
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %168

161:                                              ; preds = %154
  %162 = tail call i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %157) #16
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = bitcast %"class.SkSL::ProgramElement"** %147 to i64*
  %166 = load i64, i64* %165, align 8
  br label %168

167:                                              ; preds = %161
  tail call void @_ZN4SkSL12ProgramUsage6removeERKNS_14ProgramElementE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramElement"* dereferenceable(16) %149) #16
  br label %174

168:                                              ; preds = %164, %154, %145
  %169 = phi i64 [ %166, %164 ], [ %153, %145 ], [ %153, %154 ]
  %170 = inttoptr i64 %148 to %"class.SkSL::ProgramElement"**
  %171 = inttoptr i64 %148 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %170, i64 1
  %173 = ptrtoint %"class.SkSL::ProgramElement"** %172 to i64
  br label %174

174:                                              ; preds = %168, %167
  %175 = phi i8 [ %146, %168 ], [ 1, %167 ]
  %176 = phi i64 [ %173, %168 ], [ %148, %167 ]
  %177 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %147, i64 1
  %178 = icmp eq %"class.SkSL::ProgramElement"** %177, %114
  br i1 %178, label %179, label %145

179:                                              ; preds = %174
  %180 = inttoptr i64 %176 to %"class.SkSL::ProgramElement"**
  br label %181

181:                                              ; preds = %133, %179, %136, %140
  %182 = phi i8 [ %137, %136 ], [ %137, %140 ], [ %175, %179 ], [ %91, %133 ]
  %183 = phi %"class.SkSL::ProgramElement"** [ %114, %136 ], [ %138, %140 ], [ %180, %179 ], [ %114, %133 ]
  %184 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %113, align 8
  %185 = icmp eq %"class.SkSL::ProgramElement"** %183, %184
  br i1 %185, label %187, label %186

186:                                              ; preds = %181
  store %"class.SkSL::ProgramElement"** %183, %"class.SkSL::ProgramElement"*** %113, align 8
  br label %187

187:                                              ; preds = %186, %181, %3
  %188 = phi i8 [ 0, %3 ], [ %182, %181 ], [ %182, %186 ]
  %189 = icmp ne i8 %188, 0
  ret i1 %189
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler25removeDeadGlobalVariablesERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* nocapture readnone, %"struct.SkSL::Program"* nocapture dereferenceable(128), %"class.SkSL::ProgramUsage"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %5, i64 0, i32 1, i32 12
  %7 = load i8, i8* %6, align 2, !range !26
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %173, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.132"* %11, %13
  br i1 %14, label %34, label %15

15:                                               ; preds = %9, %29
  %16 = phi %"class.std::__1::unique_ptr.132"* [ %30, %29 ], [ %11, %9 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %18, i64 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %29

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %18, i64 1
  %24 = bitcast %"class.SkSL::ProgramElement"* %23 to %"class.SkSL::VarDeclaration"**
  %25 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %25, i64 0, i32 1
  %27 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK4SkSL12ProgramUsage6isDeadERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::Variable"* dereferenceable(64) %27) #16
  br i1 %28, label %34, label %29

29:                                               ; preds = %22, %15
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %16, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.132"* %30, %13
  br i1 %31, label %32, label %15

32:                                               ; preds = %29
  %33 = ptrtoint %"class.std::__1::unique_ptr.132"* %13 to i64
  br label %83

34:                                               ; preds = %22, %9
  %35 = phi i8 [ 0, %9 ], [ 1, %22 ]
  %36 = phi %"class.std::__1::unique_ptr.132"* [ %11, %9 ], [ %16, %22 ]
  %37 = ptrtoint %"class.std::__1::unique_ptr.132"* %36 to i64
  %38 = icmp eq %"class.std::__1::unique_ptr.132"* %36, %13
  br i1 %38, label %83, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %36, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.132"* %40, %13
  br i1 %41, label %83, label %42

42:                                               ; preds = %39, %78
  %43 = phi i8 [ %79, %78 ], [ %35, %39 ]
  %44 = phi %"class.std::__1::unique_ptr.132"* [ %81, %78 ], [ %40, %39 ]
  %45 = phi i64 [ %80, %78 ], [ %37, %39 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %47, i64 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %53, label %51

51:                                               ; preds = %42
  %52 = ptrtoint %"class.SkSL::ProgramElement"* %47 to i64
  br label %63

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %47, i64 1
  %55 = bitcast %"class.SkSL::ProgramElement"* %54 to %"class.SkSL::VarDeclaration"**
  %56 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %56, i64 0, i32 1
  %58 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %57, align 8
  %59 = tail call zeroext i1 @_ZNK4SkSL12ProgramUsage6isDeadERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::Variable"* dereferenceable(64) %58) #16
  br i1 %59, label %78, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::unique_ptr.132"* %44 to i64*
  %62 = load i64, i64* %61, align 8
  br label %63

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %62, %60 ], [ %52, %51 ]
  %65 = inttoptr i64 %45 to %"class.std::__1::unique_ptr.132"*
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %46, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %66, align 8
  %68 = inttoptr i64 %45 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.SkSL::ProgramElement"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = bitcast %"class.SkSL::ProgramElement"* %67 to void (%"class.SkSL::ProgramElement"*)***
  %72 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %72, i64 1
  %74 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %73, align 8
  tail call void %74(%"class.SkSL::ProgramElement"* nonnull %67) #16
  br label %75

75:                                               ; preds = %70, %63
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %65, i64 1
  %77 = ptrtoint %"class.std::__1::unique_ptr.132"* %76 to i64
  br label %78

78:                                               ; preds = %53, %75
  %79 = phi i8 [ %43, %75 ], [ 1, %53 ]
  %80 = phi i64 [ %77, %75 ], [ %45, %53 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %44, i64 1
  %82 = icmp eq %"class.std::__1::unique_ptr.132"* %81, %13
  br i1 %82, label %83, label %42

83:                                               ; preds = %78, %32, %34, %39
  %84 = phi i8 [ %35, %34 ], [ %35, %39 ], [ 0, %32 ], [ %79, %78 ]
  %85 = phi i64 [ %37, %34 ], [ %37, %39 ], [ %33, %32 ], [ %80, %78 ]
  %86 = inttoptr i64 %85 to %"class.std::__1::unique_ptr.132"*
  %87 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %12, align 8
  %88 = icmp eq %"class.std::__1::unique_ptr.132"* %87, %86
  br i1 %88, label %103, label %89

89:                                               ; preds = %83, %100
  %90 = phi %"class.std::__1::unique_ptr.132"* [ %91, %100 ], [ %87, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %90, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %92, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %92, align 8
  %94 = icmp eq %"class.SkSL::ProgramElement"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.SkSL::ProgramElement"* %93 to void (%"class.SkSL::ProgramElement"*)***
  %97 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %97, i64 1
  %99 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %98, align 8
  tail call void %99(%"class.SkSL::ProgramElement"* nonnull %93) #16
  br label %100

100:                                              ; preds = %95, %89
  %101 = icmp eq %"class.std::__1::unique_ptr.132"* %91, %86
  br i1 %101, label %102, label %89

102:                                              ; preds = %100
  store %"class.std::__1::unique_ptr.132"* %86, %"class.std::__1::unique_ptr.132"** %12, align 8
  br label %103

103:                                              ; preds = %83, %102
  %104 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 0
  %105 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %104, align 8
  %106 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 1
  %107 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %106, align 8
  %108 = icmp eq %"class.SkSL::ProgramElement"** %105, %107
  br i1 %108, label %125, label %109

109:                                              ; preds = %103, %122
  %110 = phi %"class.SkSL::ProgramElement"** [ %123, %122 ], [ %105, %103 ]
  %111 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %110, align 8
  %112 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %111, i64 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %111, i64 1
  %117 = bitcast %"class.SkSL::ProgramElement"* %116 to %"class.SkSL::VarDeclaration"**
  %118 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %117, align 8
  %119 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %118, i64 0, i32 1
  %120 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %119, align 8
  %121 = tail call zeroext i1 @_ZNK4SkSL12ProgramUsage6isDeadERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::Variable"* dereferenceable(64) %120) #16
  br i1 %121, label %125, label %122

122:                                              ; preds = %115, %109
  %123 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %110, i64 1
  %124 = icmp eq %"class.SkSL::ProgramElement"** %123, %107
  br i1 %124, label %167, label %109

125:                                              ; preds = %115, %103
  %126 = phi i8 [ %84, %103 ], [ 1, %115 ]
  %127 = phi %"class.SkSL::ProgramElement"** [ %105, %103 ], [ %110, %115 ]
  %128 = icmp eq %"class.SkSL::ProgramElement"** %127, %107
  br i1 %128, label %167, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %127, i64 1
  %131 = icmp eq %"class.SkSL::ProgramElement"** %130, %107
  br i1 %131, label %167, label %132

132:                                              ; preds = %129
  %133 = ptrtoint %"class.SkSL::ProgramElement"** %127 to i64
  br label %134

134:                                              ; preds = %132, %160
  %135 = phi i8 [ %161, %160 ], [ %126, %132 ]
  %136 = phi %"class.SkSL::ProgramElement"** [ %163, %160 ], [ %130, %132 ]
  %137 = phi i64 [ %162, %160 ], [ %133, %132 ]
  %138 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %136, align 8
  %139 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %138, i64 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 4
  br i1 %141, label %144, label %142

142:                                              ; preds = %134
  %143 = ptrtoint %"class.SkSL::ProgramElement"* %138 to i64
  br label %154

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %138, i64 1
  %146 = bitcast %"class.SkSL::ProgramElement"* %145 to %"class.SkSL::VarDeclaration"**
  %147 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %147, i64 0, i32 1
  %149 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %148, align 8
  %150 = tail call zeroext i1 @_ZNK4SkSL12ProgramUsage6isDeadERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %2, %"class.SkSL::Variable"* dereferenceable(64) %149) #16
  br i1 %150, label %160, label %151

151:                                              ; preds = %144
  %152 = bitcast %"class.SkSL::ProgramElement"** %136 to i64*
  %153 = load i64, i64* %152, align 8
  br label %154

154:                                              ; preds = %151, %142
  %155 = phi i64 [ %153, %151 ], [ %143, %142 ]
  %156 = inttoptr i64 %137 to %"class.SkSL::ProgramElement"**
  %157 = inttoptr i64 %137 to i64*
  store i64 %155, i64* %157, align 8
  %158 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %156, i64 1
  %159 = ptrtoint %"class.SkSL::ProgramElement"** %158 to i64
  br label %160

160:                                              ; preds = %144, %154
  %161 = phi i8 [ %135, %154 ], [ 1, %144 ]
  %162 = phi i64 [ %159, %154 ], [ %137, %144 ]
  %163 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %136, i64 1
  %164 = icmp eq %"class.SkSL::ProgramElement"** %163, %107
  br i1 %164, label %165, label %134

165:                                              ; preds = %160
  %166 = inttoptr i64 %162 to %"class.SkSL::ProgramElement"**
  br label %167

167:                                              ; preds = %122, %165, %125, %129
  %168 = phi i8 [ %126, %125 ], [ %126, %129 ], [ %161, %165 ], [ %84, %122 ]
  %169 = phi %"class.SkSL::ProgramElement"** [ %107, %125 ], [ %127, %129 ], [ %166, %165 ], [ %107, %122 ]
  %170 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %106, align 8
  %171 = icmp eq %"class.SkSL::ProgramElement"** %169, %170
  br i1 %171, label %173, label %172

172:                                              ; preds = %167
  store %"class.SkSL::ProgramElement"** %169, %"class.SkSL::ProgramElement"*** %106, align 8
  br label %173

173:                                              ; preds = %172, %167, %3
  %174 = phi i8 [ 0, %3 ], [ %168, %167 ], [ %168, %172 ]
  %175 = icmp ne i8 %174, 0
  ret i1 %175
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* nocapture readonly, %"struct.SkSL::Program"* nocapture readonly dereferenceable(128), %"class.SkSL::ProgramUsage"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.DeadLocalVariableEliminator, align 8
  %5 = bitcast %class.DeadLocalVariableEliminator* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %7 = bitcast %"class.SkSL::Context"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEE27DeadLocalVariableEliminator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %4, i64 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %4, i64 0, i32 2
  %12 = bitcast %"class.SkSL::Context"** %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %4, i64 0, i32 3
  store %"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramUsage"** %13, align 8
  %14 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %15, i64 0, i32 1, i32 12
  %17 = load i8, i8* %16, align 2, !range !26
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %106, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %2, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %106

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %24, align 8
  %26 = sext i32 %21 to i64
  br label %27

27:                                               ; preds = %32, %23
  %28 = phi i64 [ 0, %23 ], [ %33, %32 ]
  %29 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %25, i64 %28, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp eq i64 %33, %26
  br i1 %34, label %106, label %27

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %21, %36
  br i1 %37, label %106, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %38, %100
  %41 = phi i32 [ %36, %38 ], [ %101, %100 ]
  %42 = sext i32 %41 to i64
  %43 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %39, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %43, i64 %42, i32 0, i32 0, i32 0
  %45 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %44, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %43, i64 %42, i32 0, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %86, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %43, i64 %42, i32 0, i32 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %86

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %45, i64 0, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 2
  br i1 %56, label %57, label %86

57:                                               ; preds = %53
  %58 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %45) #16
  %59 = icmp eq %"class.SkSL::Expression"* %58, null
  %60 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %43, i64 %42, i32 0, i32 0, i32 1, i32 2
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %64, label %62

62:                                               ; preds = %57
  %63 = icmp eq i32 %61, 1
  br i1 %63, label %66, label %86

64:                                               ; preds = %57
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %86

66:                                               ; preds = %62, %64
  %67 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %68 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %70 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %69, align 8
  %71 = icmp eq %"class.std::__1::unique_ptr.132"* %68, %70
  br i1 %71, label %106, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %4, i64 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %72, %83
  %75 = phi %"class.std::__1::unique_ptr.132"* [ %68, %72 ], [ %84, %83 ]
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %77, i64 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.290"* nonnull %73, %"class.SkSL::ProgramElement"* dereferenceable(16) %77) #16
  br label %83

83:                                               ; preds = %81, %74
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %75, i64 1
  %85 = icmp eq %"class.std::__1::unique_ptr.132"* %84, %70
  br i1 %85, label %103, label %74

86:                                               ; preds = %40, %49, %53, %62, %64
  %87 = load i32, i32* %20, align 4
  %88 = sext i32 %87 to i64
  br label %89

89:                                               ; preds = %93, %86
  %90 = phi i64 [ %91, %93 ], [ %42, %86 ]
  %91 = add nsw i64 %90, 1
  %92 = icmp slt i64 %91, %88
  br i1 %92, label %93, label %100

93:                                               ; preds = %89
  %94 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %39, align 8
  %95 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %94, i64 %91, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %89, label %98

98:                                               ; preds = %93
  %99 = trunc i64 %91 to i32
  br label %100

100:                                              ; preds = %89, %98
  %101 = phi i32 [ %99, %98 ], [ %87, %89 ]
  %102 = icmp eq i32 %101, %21
  br i1 %102, label %106, label %40

103:                                              ; preds = %83
  %104 = load i8, i8* %10, align 8, !range !26
  %105 = icmp ne i8 %104, 0
  br label %106

106:                                              ; preds = %32, %100, %19, %103, %35, %66, %3
  %107 = phi i1 [ %105, %103 ], [ false, %35 ], [ false, %66 ], [ false, %3 ], [ false, %19 ], [ false, %100 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #16
  ret i1 %107
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEED2Ev(%"class.SkSL::TProgramVisitor.290"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageE(%"class.SkSL::Compiler"* nocapture readonly, %"struct.SkSL::Program"* nocapture readonly dereferenceable(128), %"class.SkSL::ProgramUsage"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.UnreachableCodeEliminator, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.132"* %6, %8
  br i1 %9, label %36, label %10

10:                                               ; preds = %3
  %11 = bitcast %class.UnreachableCodeEliminator* %4 to i8*
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %13 = bitcast %"class.SkSL::Context"** %12 to i64*
  %14 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 1
  %16 = bitcast %"class.SkSL::Context"** %15 to i64*
  %17 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 2
  %18 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 3
  %19 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::stack"* %18 to i8*
  %21 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 3, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %18, i64 0, i32 0
  %25 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i8*** %25 to i64*
  %27 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i8*** %27 to i64*
  %29 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0
  %32 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast i8*** %23 to i64*
  %35 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %37

36:                                               ; preds = %270, %3
  ret void

37:                                               ; preds = %10, %270
  %38 = phi %"class.std::__1::unique_ptr.132"* [ %6, %10 ], [ %271, %270 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %40, i64 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 2
  br i1 %43, label %44, label %270

44:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #16
  %45 = load i64, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEE25UnreachableCodeEliminator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  store i64 %45, i64* %16, align 8
  store %"class.SkSL::ProgramUsage"* %2, %"class.SkSL::ProgramUsage"** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 96, i1 false) #16
  call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %24) #16
  %46 = load i64, i64* %19, align 8
  %47 = load i64, i64* %21, align 8
  %48 = load i8**, i8*** %22, align 8
  %49 = load i8**, i8*** %23, align 8
  %50 = add i64 %47, %46
  %51 = icmp eq i8** %49, %48
  br i1 %51, label %58, label %52

52:                                               ; preds = %44
  %53 = lshr i64 %50, 12
  %54 = getelementptr inbounds i8*, i8** %48, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = and i64 %50, 4095
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  br label %58

58:                                               ; preds = %52, %44
  %59 = phi i8* [ %57, %52 ], [ null, %44 ]
  store i8 0, i8* %59, align 1
  %60 = load i64, i64* %19, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %19, align 8
  %62 = load i64, i64* %26, align 8
  %63 = load i64, i64* %28, align 8
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  %66 = shl i64 %64, 9
  %67 = add i64 %66, -1
  %68 = select i1 %65, i64 0, i64 %67
  %69 = load i64, i64* %29, align 8
  %70 = load i64, i64* %30, align 8
  %71 = add i64 %70, %69
  %72 = icmp eq i64 %68, %71
  %73 = inttoptr i64 %63 to i8**
  %74 = inttoptr i64 %62 to i8**
  br i1 %72, label %75, label %81

75:                                               ; preds = %58
  call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %31) #16
  %76 = load i64, i64* %30, align 8
  %77 = load i64, i64* %29, align 8
  %78 = load i8**, i8*** %27, align 8
  %79 = load i8**, i8*** %25, align 8
  %80 = add i64 %77, %76
  br label %81

81:                                               ; preds = %75, %58
  %82 = phi i64 [ %80, %75 ], [ %71, %58 ]
  %83 = phi i8** [ %79, %75 ], [ %74, %58 ]
  %84 = phi i8** [ %78, %75 ], [ %73, %58 ]
  %85 = icmp eq i8** %83, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %81
  %87 = lshr i64 %82, 12
  %88 = getelementptr inbounds i8*, i8** %84, i64 %87
  %89 = load i8*, i8** %88, align 8
  %90 = and i64 %82, 4095
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  br label %92

92:                                               ; preds = %81, %86
  %93 = phi i8* [ %91, %86 ], [ null, %81 ]
  store i8 0, i8* %93, align 1
  %94 = load i64, i64* %30, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %30, align 8
  %96 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %39, align 8
  %97 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.290"* nonnull %32, %"class.SkSL::ProgramElement"* dereferenceable(16) %96) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEE25UnreachableCodeEliminator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %98 = load i8**, i8*** %27, align 8
  %99 = load i64, i64* %29, align 8
  %100 = lshr i64 %99, 12
  %101 = getelementptr inbounds i8*, i8** %98, i64 %100
  %102 = load i8**, i8*** %25, align 8
  %103 = icmp eq i8** %102, %98
  %104 = ptrtoint i8** %102 to i64
  %105 = ptrtoint i8** %98 to i64
  br i1 %103, label %118, label %106

106:                                              ; preds = %92
  %107 = load i8*, i8** %101, align 8
  %108 = and i64 %99, 4095
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = load i64, i64* %30, align 8
  %111 = add i64 %110, %99
  %112 = lshr i64 %111, 12
  %113 = getelementptr inbounds i8*, i8** %98, i64 %112
  %114 = load i8*, i8** %113, align 8
  %115 = and i64 %111, 4095
  %116 = getelementptr inbounds i8, i8* %114, i64 %115
  %117 = icmp eq i8* %116, %109
  br i1 %117, label %118, label %122

118:                                              ; preds = %135, %92, %106
  store i64 0, i64* %30, align 8
  %119 = sub i64 %104, %105
  %120 = ashr exact i64 %119, 3
  %121 = icmp ugt i64 %120, 2
  br i1 %121, label %140, label %152

122:                                              ; preds = %106, %135
  %123 = phi i8* [ %138, %135 ], [ %109, %106 ]
  %124 = phi i8** [ %137, %135 ], [ %101, %106 ]
  %125 = getelementptr inbounds i8, i8* %123, i64 1
  %126 = ptrtoint i8* %125 to i64
  %127 = bitcast i8** %124 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = icmp eq i64 %129, 4096
  br i1 %130, label %131, label %135

131:                                              ; preds = %122
  %132 = getelementptr inbounds i8*, i8** %124, i64 1
  %133 = bitcast i8** %132 to i64*
  %134 = load i64, i64* %133, align 8
  br label %135

135:                                              ; preds = %131, %122
  %136 = phi i64 [ %134, %131 ], [ %126, %122 ]
  %137 = phi i8** [ %132, %131 ], [ %124, %122 ]
  %138 = inttoptr i64 %136 to i8*
  %139 = icmp eq i8* %116, %138
  br i1 %139, label %118, label %122

140:                                              ; preds = %118, %140
  %141 = phi i8** [ %144, %140 ], [ %98, %118 ]
  %142 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %142) #15
  %143 = load i8**, i8*** %27, align 8
  %144 = getelementptr inbounds i8*, i8** %143, i64 1
  store i8** %144, i8*** %27, align 8
  %145 = load i64, i64* %26, align 8
  %146 = ptrtoint i8** %144 to i64
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = icmp ugt i64 %148, 2
  br i1 %149, label %140, label %150

150:                                              ; preds = %140
  %151 = inttoptr i64 %145 to i8**
  br label %152

152:                                              ; preds = %150, %118
  %153 = phi i8** [ %102, %118 ], [ %151, %150 ]
  %154 = phi i8** [ %98, %118 ], [ %144, %150 ]
  %155 = phi i64 [ %120, %118 ], [ %148, %150 ]
  switch i64 %155, label %159 [
    i64 1, label %157
    i64 2, label %156
  ]

156:                                              ; preds = %152
  br label %157

157:                                              ; preds = %152, %156
  %158 = phi i64 [ 4096, %156 ], [ 2048, %152 ]
  store i64 %158, i64* %29, align 8
  br label %159

159:                                              ; preds = %157, %152
  %160 = icmp eq i8** %154, %153
  br i1 %160, label %178, label %161

161:                                              ; preds = %159, %161
  %162 = phi i8** [ %164, %161 ], [ %154, %159 ]
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #15
  %164 = getelementptr inbounds i8*, i8** %162, i64 1
  %165 = icmp eq i8** %164, %153
  br i1 %165, label %166, label %161

166:                                              ; preds = %161
  %167 = load i8**, i8*** %27, align 8
  %168 = load i8**, i8*** %25, align 8
  %169 = icmp eq i8** %168, %167
  br i1 %169, label %178, label %170

170:                                              ; preds = %166
  %171 = ptrtoint i8** %167 to i64
  %172 = getelementptr i8*, i8** %168, i64 -1
  %173 = ptrtoint i8** %172 to i64
  %174 = sub i64 %173, %171
  %175 = lshr i64 %174, 3
  %176 = xor i64 %175, -1
  %177 = getelementptr i8*, i8** %168, i64 %176
  store i8** %177, i8*** %25, align 8
  br label %178

178:                                              ; preds = %170, %166, %159
  %179 = load i8**, i8*** %33, align 8
  %180 = icmp eq i8** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = bitcast i8** %179 to i8*
  call void @_ZdlPv(i8* %182) #15
  br label %183

183:                                              ; preds = %178, %181
  %184 = load i8**, i8*** %22, align 8
  %185 = load i64, i64* %21, align 8
  %186 = lshr i64 %185, 12
  %187 = getelementptr inbounds i8*, i8** %184, i64 %186
  %188 = load i8**, i8*** %23, align 8
  %189 = icmp eq i8** %188, %184
  %190 = ptrtoint i8** %188 to i64
  %191 = ptrtoint i8** %184 to i64
  br i1 %189, label %204, label %192

192:                                              ; preds = %183
  %193 = load i8*, i8** %187, align 8
  %194 = and i64 %185, 4095
  %195 = getelementptr inbounds i8, i8* %193, i64 %194
  %196 = load i64, i64* %19, align 8
  %197 = add i64 %196, %185
  %198 = lshr i64 %197, 12
  %199 = getelementptr inbounds i8*, i8** %184, i64 %198
  %200 = load i8*, i8** %199, align 8
  %201 = and i64 %197, 4095
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  %203 = icmp eq i8* %202, %195
  br i1 %203, label %204, label %208

204:                                              ; preds = %221, %183, %192
  store i64 0, i64* %19, align 8
  %205 = sub i64 %190, %191
  %206 = ashr exact i64 %205, 3
  %207 = icmp ugt i64 %206, 2
  br i1 %207, label %226, label %238

208:                                              ; preds = %192, %221
  %209 = phi i8* [ %224, %221 ], [ %195, %192 ]
  %210 = phi i8** [ %223, %221 ], [ %187, %192 ]
  %211 = getelementptr inbounds i8, i8* %209, i64 1
  %212 = ptrtoint i8* %211 to i64
  %213 = bitcast i8** %210 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %212, %214
  %216 = icmp eq i64 %215, 4096
  br i1 %216, label %217, label %221

217:                                              ; preds = %208
  %218 = getelementptr inbounds i8*, i8** %210, i64 1
  %219 = bitcast i8** %218 to i64*
  %220 = load i64, i64* %219, align 8
  br label %221

221:                                              ; preds = %217, %208
  %222 = phi i64 [ %220, %217 ], [ %212, %208 ]
  %223 = phi i8** [ %218, %217 ], [ %210, %208 ]
  %224 = inttoptr i64 %222 to i8*
  %225 = icmp eq i8* %202, %224
  br i1 %225, label %204, label %208

226:                                              ; preds = %204, %226
  %227 = phi i8** [ %230, %226 ], [ %184, %204 ]
  %228 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %228) #15
  %229 = load i8**, i8*** %22, align 8
  %230 = getelementptr inbounds i8*, i8** %229, i64 1
  store i8** %230, i8*** %22, align 8
  %231 = load i64, i64* %34, align 8
  %232 = ptrtoint i8** %230 to i64
  %233 = sub i64 %231, %232
  %234 = ashr exact i64 %233, 3
  %235 = icmp ugt i64 %234, 2
  br i1 %235, label %226, label %236

236:                                              ; preds = %226
  %237 = inttoptr i64 %231 to i8**
  br label %238

238:                                              ; preds = %236, %204
  %239 = phi i8** [ %188, %204 ], [ %237, %236 ]
  %240 = phi i8** [ %184, %204 ], [ %230, %236 ]
  %241 = phi i64 [ %206, %204 ], [ %234, %236 ]
  switch i64 %241, label %245 [
    i64 1, label %243
    i64 2, label %242
  ]

242:                                              ; preds = %238
  br label %243

243:                                              ; preds = %238, %242
  %244 = phi i64 [ 4096, %242 ], [ 2048, %238 ]
  store i64 %244, i64* %21, align 8
  br label %245

245:                                              ; preds = %243, %238
  %246 = icmp eq i8** %240, %239
  br i1 %246, label %264, label %247

247:                                              ; preds = %245, %247
  %248 = phi i8** [ %250, %247 ], [ %240, %245 ]
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #15
  %250 = getelementptr inbounds i8*, i8** %248, i64 1
  %251 = icmp eq i8** %250, %239
  br i1 %251, label %252, label %247

252:                                              ; preds = %247
  %253 = load i8**, i8*** %22, align 8
  %254 = load i8**, i8*** %23, align 8
  %255 = icmp eq i8** %254, %253
  br i1 %255, label %264, label %256

256:                                              ; preds = %252
  %257 = ptrtoint i8** %253 to i64
  %258 = getelementptr i8*, i8** %254, i64 -1
  %259 = ptrtoint i8** %258 to i64
  %260 = sub i64 %259, %257
  %261 = lshr i64 %260, 3
  %262 = xor i64 %261, -1
  %263 = getelementptr i8*, i8** %254, i64 %262
  store i8** %263, i8*** %23, align 8
  br label %264

264:                                              ; preds = %256, %252, %245
  %265 = load i8**, i8*** %35, align 8
  %266 = icmp eq i8** %265, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = bitcast i8** %265 to i8*
  call void @_ZdlPv(i8* %268) #15
  br label %269

269:                                              ; preds = %264, %267
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #16
  br label %270

270:                                              ; preds = %269, %37
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %38, i64 1
  %272 = icmp eq %"class.std::__1::unique_ptr.132"* %271, %8
  br i1 %272, label %36, label %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminatorD2Ev(%class.UnreachableCodeEliminator*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEE25UnreachableCodeEliminator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4
  tail call void @_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev(%"class.std::__1::stack"* %3) #16
  %4 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3
  tail call void @_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev(%"class.std::__1::stack"* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = alloca %"class.SkSL::SPIRVCodeGenerator", align 8
  %6 = load atomic i64, i64* @_ZZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic885.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #16
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic885.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %3, %9
  %18 = phi i8* [ %7, %3 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = bitcast %"struct.SkSL::Program"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %42 = bitcast %"class.SkSL::String"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.SkSL::SPIRVCodeGenerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1168, i8* nonnull %43) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast (<{ %"class.SkSL::CodeGenerator", %"class.SkSL::Context"*, %"class.SkSL::MemoryLayout", [4 x i8], i64, i32, i32, %"class.std::__1::unordered_map.300", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.380", %"class.std::__1::unordered_map.404", %"class.std::__1::unordered_map.404", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", i32, i32, %"class.std::__1::unordered_map.428", %"class.std::__1::unordered_map.455", i8, [3 x i8], i32, %"class.std::__1::stack.482", %"class.std::__1::stack.482", i32, i32, i32, [4 x i8], { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.166", i8, [7 x i8], %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }, i32, [4 x i8], %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer", %"class.std::__1::vector.501", %"class.std::__1::unordered_map.380", i32, [4 x i8] }>* @__const._ZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamE.cg to i8*), i64 1168, i1 false)
  %44 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %45 = bitcast %"class.SkSL::Context"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  %48 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 0, i32 1
  store %"struct.SkSL::Program"* %1, %"struct.SkSL::Program"** %49, align 8
  %50 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 0, i32 2
  store %"class.SkSL::ErrorReporter"* %47, %"class.SkSL::ErrorReporter"** %50, align 8
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 0, i32 3
  store %"class.SkSL::OutputStream"* %2, %"class.SkSL::OutputStream"** %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18SPIRVCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %52 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 1
  %53 = bitcast %"class.SkSL::Context"** %52 to i64*
  store i64 %46, i64* %53, align 8
  %54 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 2, i32 0
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 4
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 5
  store i32 1, i32* %56, align 8
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 7
  %58 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 7, i32 0, i32 3
  %59 = bitcast %"class.std::__1::__compressed_pair.322"* %58 to i32*
  %60 = bitcast %"class.std::__1::unordered_map.300"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 8
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 8, i32 0, i32 3
  %63 = bitcast %"class.std::__1::__compressed_pair.348"* %62 to i32*
  %64 = bitcast %"class.std::__1::unordered_map.328"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %63, align 8
  %65 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 9
  %66 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 9, i32 0, i32 3
  %67 = bitcast %"class.std::__1::__compressed_pair.374"* %66 to i32*
  %68 = bitcast %"class.std::__1::unordered_map.352"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %67, align 8
  %69 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 10
  %70 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 10, i32 0, i32 3
  %71 = bitcast %"class.std::__1::__compressed_pair.400"* %70 to i32*
  %72 = bitcast %"class.std::__1::unordered_map.380"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 11
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 11, i32 0, i32 3
  %75 = bitcast %"class.std::__1::__compressed_pair.424"* %74 to i32*
  %76 = bitcast %"class.std::__1::unordered_map.404"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 12
  %78 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 12, i32 0, i32 3
  %79 = bitcast %"class.std::__1::__compressed_pair.424"* %78 to i32*
  %80 = bitcast %"class.std::__1::unordered_map.404"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 13, i32 0, i32 0
  %82 = bitcast i32 (...)*** %81 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %82, align 8
  %83 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 13, i32 1, i32 1
  %84 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 48, i1 false) #16
  %85 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 14, i32 0, i32 0
  %86 = bitcast i32 (...)*** %85 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %86, align 8
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 14, i32 1, i32 1
  %88 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false) #16
  %89 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 15, i32 0, i32 0
  %90 = bitcast i32 (...)*** %89 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %90, align 8
  %91 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 15, i32 1, i32 1
  %92 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 48, i1 false) #16
  %93 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 16, i32 0, i32 0
  %94 = bitcast i32 (...)*** %93 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %94, align 8
  %95 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 16, i32 1, i32 1
  %96 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 48, i1 false) #16
  %97 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 17, i32 0, i32 0
  %98 = bitcast i32 (...)*** %97 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %98, align 8
  %99 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 17, i32 1, i32 1
  %100 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 48, i1 false) #16
  %101 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 18, i32 0, i32 0
  %102 = bitcast i32 (...)*** %101 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %102, align 8
  %103 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 18, i32 1, i32 1
  %104 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 48, i1 false) #16
  %105 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 19, i32 0, i32 0
  %106 = bitcast i32 (...)*** %105 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %106, align 8
  %107 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 19, i32 1, i32 1
  %108 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 22, i32 0, i32 3
  %109 = bitcast %"class.std::__1::__compressed_pair.449"* %108 to i32*
  %110 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 88, i1 false) #16
  store i32 1065353216, i32* %109, align 8
  %111 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 23
  %112 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 23, i32 0, i32 3
  %113 = bitcast %"class.std::__1::__compressed_pair.476"* %112 to i32*
  %114 = bitcast %"class.std::__1::unordered_map.455"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 24
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 26
  %117 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 29
  %118 = bitcast i32* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 100, i1 false) #16
  store i32 -1, i32* %117, align 8
  %119 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 30
  store i32 -1, i32* %119, align 4
  %120 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 33
  %121 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 33, i32 2
  %122 = bitcast %"class.SkSL::SymbolTable"* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 40, i1 false) #16
  store i8 1, i8* %121, align 8
  %123 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 33, i32 3
  %124 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 33, i32 6
  %125 = bitcast %"class.std::__1::vector.174"* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 48, i1 false) #16
  store %"class.SkSL::ErrorReporter"* %47, %"class.SkSL::ErrorReporter"** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 34
  store i32 1, i32* %126, align 8
  %127 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 36
  %128 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 38, i32 0, i32 3
  %129 = bitcast %"class.std::__1::__compressed_pair.400"* %128 to i32*
  %130 = bitcast %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 80, i1 false) #16
  store i32 1065353216, i32* %129, align 8
  %131 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %5, i64 0, i32 39
  store i32 -1, i32* %131, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator15setupIntrinsicsEv(%"class.SkSL::SPIRVCodeGenerator"* nonnull %5) #16
  %132 = call zeroext i1 @_ZN4SkSL18SPIRVCodeGenerator12generateCodeEv(%"class.SkSL::SPIRVCodeGenerator"* nonnull %5) #16
  call void @_ZN4SkSL18SPIRVCodeGeneratorD2Ev(%"class.SkSL::SPIRVCodeGenerator"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 1168, i8* nonnull %43) #16
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %41, align 8
  %133 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %134 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %38
  %136 = load i8*, i8** %21, align 8
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %135
  %140 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %141 = load i8*, i8** %21, align 8
  %142 = load i8*, i8** %22, align 8
  %143 = load i64, i64* %23, align 8
  %144 = bitcast %class.SkEventTracer* %140 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %145 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %145, i64 5
  %147 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %146, align 8
  call void %147(%class.SkEventTracer* %140, i8* %141, i8* %142, i64 %143) #16
  br label %148

148:                                              ; preds = %38, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #16
  ret i1 %132
}

declare zeroext i1 @_ZN4SkSL18SPIRVCodeGenerator12generateCodeEv(%"class.SkSL::SPIRVCodeGenerator"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18SPIRVCodeGeneratorD2Ev(%"class.SkSL::SPIRVCodeGenerator"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18SPIRVCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.385"*, %"struct.std::__1::__hash_node_base.385"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.385"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.385"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.385", %"struct.std::__1::__hash_node_base.385"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.385"*, %"struct.std::__1::__hash_node_base.385"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.385"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.385"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.385"**, %"struct.std::__1::__hash_node_base.385"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.385"** null, %"struct.std::__1::__hash_node_base.385"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.385"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.385"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 0
  %20 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %19, align 8
  %21 = icmp eq %"class.SkSL::VarDeclaration"** %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"class.SkSL::VarDeclaration"** %20 to i64
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 1
  %25 = bitcast %"class.SkSL::VarDeclaration"*** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.SkSL::VarDeclaration"** %20 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.SkSL::Type"* %29 to void (%"class.SkSL::Type"*)***
  %33 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %33, i64 1
  %35 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %34, align 8
  tail call void %35(%"class.SkSL::Type"* nonnull %29) #16
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %37, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %37, align 8
  %39 = icmp eq %"class.SkSL::Variable"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.SkSL::Variable"* %38 to void (%"class.SkSL::Variable"*)***
  %42 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %42, i64 1
  %44 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %43, align 8
  tail call void %44(%"class.SkSL::Variable"* nonnull %38) #16
  br label %45

45:                                               ; preds = %40, %36
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %46, align 8
  store %"class.SkSL::InterfaceBlock"* null, %"class.SkSL::InterfaceBlock"** %46, align 8
  %48 = icmp eq %"class.SkSL::InterfaceBlock"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.SkSL::InterfaceBlock"* %47 to void (%"class.SkSL::InterfaceBlock"*)***
  %51 = load void (%"class.SkSL::InterfaceBlock"*)**, void (%"class.SkSL::InterfaceBlock"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %51, i64 1
  %53 = load void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %52, align 8
  tail call void %53(%"class.SkSL::InterfaceBlock"* nonnull %47) #16
  br label %54

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 33
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %55) #16
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack.482"* %56) #16
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack.482"* %57) #16
  %58 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.460"*, %"struct.std::__1::__hash_node_base.460"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.460"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.std::__1::__hash_node_base.460"* [ %64, %61 ], [ %59, %54 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.460", %"struct.std::__1::__hash_node_base.460"* %62, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.460"*, %"struct.std::__1::__hash_node_base.460"** %63, align 8
  %65 = bitcast %"struct.std::__1::__hash_node_base.460"* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #15
  %66 = icmp eq %"struct.std::__1::__hash_node_base.460"* %64, null
  br i1 %66, label %67, label %61

67:                                               ; preds = %61, %54
  %68 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.460"**, %"struct.std::__1::__hash_node_base.460"*** %68, align 8
  store %"struct.std::__1::__hash_node_base.460"** null, %"struct.std::__1::__hash_node_base.460"*** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.460"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::__hash_node_base.460"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.433"*, %"struct.std::__1::__hash_node_base.433"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.433"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73, %77
  %78 = phi %"struct.std::__1::__hash_node_base.433"* [ %80, %77 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.433", %"struct.std::__1::__hash_node_base.433"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.433"*, %"struct.std::__1::__hash_node_base.433"** %79, align 8
  %81 = bitcast %"struct.std::__1::__hash_node_base.433"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #15
  %82 = icmp eq %"struct.std::__1::__hash_node_base.433"* %80, null
  br i1 %82, label %83, label %77

83:                                               ; preds = %77, %73
  %84 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.433"**, %"struct.std::__1::__hash_node_base.433"*** %84, align 8
  store %"struct.std::__1::__hash_node_base.433"** null, %"struct.std::__1::__hash_node_base.433"*** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.433"** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.std::__1::__hash_node_base.433"** %85 to i8*
  tail call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 2, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %89, %96
  %100 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %100) #16
  %101 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 2, i32 0
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %99, %107
  %111 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %111) #16
  %112 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 2, i32 0
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  tail call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %110, %118
  %122 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %122) #16
  %123 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 2, i32 0
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  tail call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %121, %129
  %133 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %133) #16
  %134 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 2, i32 0
  %136 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  tail call void @_ZdlPv(i8* %142) #15
  br label %143

143:                                              ; preds = %132, %140
  %144 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %144) #16
  %145 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 2, i32 0
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  tail call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %143, %151
  %155 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %155) #16
  %156 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 2, i32 0
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  tail call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %154, %162
  %166 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %166) #16
  %167 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.409"*, %"struct.std::__1::__hash_node_base.409"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.409"* %168, null
  br i1 %169, label %185, label %170

170:                                              ; preds = %165, %182
  %171 = phi %"struct.std::__1::__hash_node_base.409"* [ %173, %182 ], [ %168, %165 ]
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.409", %"struct.std::__1::__hash_node_base.409"* %171, i64 0, i32 0
  %173 = load %"struct.std::__1::__hash_node_base.409"*, %"struct.std::__1::__hash_node_base.409"** %172, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.409", %"struct.std::__1::__hash_node_base.409"* %171, i64 2
  %175 = bitcast %"struct.std::__1::__hash_node_base.409"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %170
  %180 = bitcast %"struct.std::__1::__hash_node_base.409"* %174 to i8**
  %181 = load i8*, i8** %180, align 8
  tail call void @_ZdlPv(i8* %181) #15
  br label %182

182:                                              ; preds = %179, %170
  %183 = bitcast %"struct.std::__1::__hash_node_base.409"* %171 to i8*
  tail call void @_ZdlPv(i8* %183) #15
  %184 = icmp eq %"struct.std::__1::__hash_node_base.409"* %173, null
  br i1 %184, label %185, label %170

185:                                              ; preds = %182, %165
  %186 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.409"**, %"struct.std::__1::__hash_node_base.409"*** %186, align 8
  store %"struct.std::__1::__hash_node_base.409"** null, %"struct.std::__1::__hash_node_base.409"*** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.409"** %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = bitcast %"struct.std::__1::__hash_node_base.409"** %187 to i8*
  tail call void @_ZdlPv(i8* %190) #15
  br label %191

191:                                              ; preds = %185, %189
  %192 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.409"*, %"struct.std::__1::__hash_node_base.409"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.409"* %193, null
  br i1 %194, label %210, label %195

195:                                              ; preds = %191, %207
  %196 = phi %"struct.std::__1::__hash_node_base.409"* [ %198, %207 ], [ %193, %191 ]
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.409", %"struct.std::__1::__hash_node_base.409"* %196, i64 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.409"*, %"struct.std::__1::__hash_node_base.409"** %197, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.409", %"struct.std::__1::__hash_node_base.409"* %196, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.409"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %195
  %205 = bitcast %"struct.std::__1::__hash_node_base.409"* %199 to i8**
  %206 = load i8*, i8** %205, align 8
  tail call void @_ZdlPv(i8* %206) #15
  br label %207

207:                                              ; preds = %204, %195
  %208 = bitcast %"struct.std::__1::__hash_node_base.409"* %196 to i8*
  tail call void @_ZdlPv(i8* %208) #15
  %209 = icmp eq %"struct.std::__1::__hash_node_base.409"* %198, null
  br i1 %209, label %210, label %195

210:                                              ; preds = %207, %191
  %211 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"struct.std::__1::__hash_node_base.409"**, %"struct.std::__1::__hash_node_base.409"*** %211, align 8
  store %"struct.std::__1::__hash_node_base.409"** null, %"struct.std::__1::__hash_node_base.409"*** %211, align 8
  %213 = icmp eq %"struct.std::__1::__hash_node_base.409"** %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %210
  %215 = bitcast %"struct.std::__1::__hash_node_base.409"** %212 to i8*
  tail call void @_ZdlPv(i8* %215) #15
  br label %216

216:                                              ; preds = %210, %214
  %217 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %218 = load %"struct.std::__1::__hash_node_base.385"*, %"struct.std::__1::__hash_node_base.385"** %217, align 8
  %219 = icmp eq %"struct.std::__1::__hash_node_base.385"* %218, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %216, %220
  %221 = phi %"struct.std::__1::__hash_node_base.385"* [ %223, %220 ], [ %218, %216 ]
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.385", %"struct.std::__1::__hash_node_base.385"* %221, i64 0, i32 0
  %223 = load %"struct.std::__1::__hash_node_base.385"*, %"struct.std::__1::__hash_node_base.385"** %222, align 8
  %224 = bitcast %"struct.std::__1::__hash_node_base.385"* %221 to i8*
  tail call void @_ZdlPv(i8* %224) #15
  %225 = icmp eq %"struct.std::__1::__hash_node_base.385"* %223, null
  br i1 %225, label %226, label %220

226:                                              ; preds = %220, %216
  %227 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load %"struct.std::__1::__hash_node_base.385"**, %"struct.std::__1::__hash_node_base.385"*** %227, align 8
  store %"struct.std::__1::__hash_node_base.385"** null, %"struct.std::__1::__hash_node_base.385"*** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.385"** %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = bitcast %"struct.std::__1::__hash_node_base.385"** %228 to i8*
  tail call void @_ZdlPv(i8* %231) #15
  br label %232

232:                                              ; preds = %226, %230
  %233 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %234 = load %"struct.std::__1::__hash_node_base.357"*, %"struct.std::__1::__hash_node_base.357"** %233, align 8
  %235 = icmp eq %"struct.std::__1::__hash_node_base.357"* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %232, %236
  %237 = phi %"struct.std::__1::__hash_node_base.357"* [ %239, %236 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.357", %"struct.std::__1::__hash_node_base.357"* %237, i64 0, i32 0
  %239 = load %"struct.std::__1::__hash_node_base.357"*, %"struct.std::__1::__hash_node_base.357"** %238, align 8
  %240 = bitcast %"struct.std::__1::__hash_node_base.357"* %237 to i8*
  tail call void @_ZdlPv(i8* %240) #15
  %241 = icmp eq %"struct.std::__1::__hash_node_base.357"* %239, null
  br i1 %241, label %242, label %236

242:                                              ; preds = %236, %232
  %243 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.357"**, %"struct.std::__1::__hash_node_base.357"*** %243, align 8
  store %"struct.std::__1::__hash_node_base.357"** null, %"struct.std::__1::__hash_node_base.357"*** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.357"** %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  %247 = bitcast %"struct.std::__1::__hash_node_base.357"** %244 to i8*
  tail call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %242, %246
  %249 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %250 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %249, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base.333"* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %248, %252
  %253 = phi %"struct.std::__1::__hash_node_base.333"* [ %255, %252 ], [ %250, %248 ]
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %253, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %254, align 8
  %256 = bitcast %"struct.std::__1::__hash_node_base.333"* %253 to i8*
  tail call void @_ZdlPv(i8* %256) #15
  %257 = icmp eq %"struct.std::__1::__hash_node_base.333"* %255, null
  br i1 %257, label %258, label %252

258:                                              ; preds = %252, %248
  %259 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %259, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base.333"** %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = bitcast %"struct.std::__1::__hash_node_base.333"** %260 to i8*
  tail call void @_ZdlPv(i8* %263) #15
  br label %264

264:                                              ; preds = %258, %262
  %265 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %266 = load %"struct.std::__1::__hash_node_base.305"*, %"struct.std::__1::__hash_node_base.305"** %265, align 8
  %267 = icmp eq %"struct.std::__1::__hash_node_base.305"* %266, null
  br i1 %267, label %274, label %268

268:                                              ; preds = %264, %268
  %269 = phi %"struct.std::__1::__hash_node_base.305"* [ %271, %268 ], [ %266, %264 ]
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.305", %"struct.std::__1::__hash_node_base.305"* %269, i64 0, i32 0
  %271 = load %"struct.std::__1::__hash_node_base.305"*, %"struct.std::__1::__hash_node_base.305"** %270, align 8
  %272 = bitcast %"struct.std::__1::__hash_node_base.305"* %269 to i8*
  tail call void @_ZdlPv(i8* %272) #15
  %273 = icmp eq %"struct.std::__1::__hash_node_base.305"* %271, null
  br i1 %273, label %274, label %268

274:                                              ; preds = %268, %264
  %275 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load %"struct.std::__1::__hash_node_base.305"**, %"struct.std::__1::__hash_node_base.305"*** %275, align 8
  store %"struct.std::__1::__hash_node_base.305"** null, %"struct.std::__1::__hash_node_base.305"*** %275, align 8
  %277 = icmp eq %"struct.std::__1::__hash_node_base.305"** %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = bitcast %"struct.std::__1::__hash_node_base.305"** %276 to i8*
  tail call void @_ZdlPv(i8* %279) #15
  br label %280

280:                                              ; preds = %274, %278
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler7toSPIRVERNS_7ProgramEPNS_6StringE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::StringStream", align 16
  %5 = bitcast %"class.SkSL::StringStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0, i32 0
  %7 = bitcast %"class.SkSL::StringStream"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 16
  %8 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1, i32 1
  %9 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #16
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0
  %11 = call zeroext i1 @_ZN4SkSL8Compiler7toSPIRVERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %10)
  br i1 %11, label %12, label %45

12:                                               ; preds = %3
  %13 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* nonnull %4)
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %15 = icmp eq %"class.SkSL::String"* %13, %2
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %20, label %35, label %25

25:                                               ; preds = %16
  br i1 %24, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.SkSL::String"* %2 to i8*
  %28 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #16
  br label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %31, i64 %33) #16
  br label %45

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.SkSL::String"* %13 to i8*
  %41 = zext i8 %23 to i64
  %42 = select i1 %24, i8* %37, i8* %40
  %43 = select i1 %24, i64 %39, i64 %41
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %42, i64 %43) #16
  br label %45

45:                                               ; preds = %35, %29, %26, %12, %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 16
  %46 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 2, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %45, %51
  %55 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %55) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #16
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2
  %5 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* nonnull sret %2, %class.SkDynamicMemoryWStream* %20) #16
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #16
  %22 = load %class.SkData*, %class.SkData** %19, align 8
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #17
  unreachable

30:                                               ; preds = %17
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #15
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %21, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #16
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %21, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  %50 = load i8, i8* %6, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %21, i64 24, i1 false) #16
  %57 = load %class.SkData*, %class.SkData** %19, align 8
  %58 = bitcast %class.SkData* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16
  %59 = icmp eq %class.SkData* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #16
  call void @_ZN6SkDatadlEPv(i8* nonnull %58) #16
  br label %65

65:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %66

66:                                               ; preds = %14, %65
  ret %"class.SkSL::String"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD2Ev(%"class.SkSL::StringStream"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler6toGLSLERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = alloca %"class.SkSL::GLSLCodeGenerator", align 8
  %6 = load atomic i64, i64* @_ZZN4SkSL8Compiler6toGLSLERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic938.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #16
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN4SkSL8Compiler6toGLSLERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic938.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %3, %9
  %18 = phi i8* [ %7, %3 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = bitcast %"struct.SkSL::Program"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %42 = bitcast %"class.SkSL::String"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.SkSL::GLSLCodeGenerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %43) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 312, i1 false)
  %44 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %45 = bitcast %"class.SkSL::Context"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  %48 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 0, i32 1
  store %"struct.SkSL::Program"* %1, %"struct.SkSL::Program"** %49, align 8
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 0, i32 2
  store %"class.SkSL::ErrorReporter"* %47, %"class.SkSL::ErrorReporter"** %50, align 8
  %51 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 0, i32 3
  store %"class.SkSL::OutputStream"* %2, %"class.SkSL::OutputStream"** %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN4SkSL17GLSLCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %52 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 2
  %54 = bitcast %"class.SkSL::Context"** %53 to i64*
  store i64 %46, i64* %54, align 8
  %55 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 3, i32 0, i32 0
  %56 = bitcast i32 (...)*** %55 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %56, align 8
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 3, i32 1, i32 1
  %58 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 48, i1 false) #16
  %59 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 4, i32 0, i32 0
  %60 = bitcast i32 (...)*** %59 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %60, align 8
  %61 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 4, i32 1, i32 1
  %62 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 48, i1 false) #16
  %63 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast i32 (...)*** %63 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %64, align 8
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 5, i32 1, i32 1
  %66 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %68 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 10, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_node_base"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #16
  %70 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 81, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"** %68, align 8
  %71 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 11
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %5, i64 0, i32 18
  %73 = bitcast %"class.SkSL::String"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 7, i1 false) #16
  %74 = call zeroext i1 @_ZN4SkSL17GLSLCodeGenerator12generateCodeEv(%"class.SkSL::GLSLCodeGenerator"* nonnull %5) #16
  call void @_ZN4SkSL17GLSLCodeGeneratorD2Ev(%"class.SkSL::GLSLCodeGenerator"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %43) #16
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %41, align 8
  %75 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %76 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %38
  %78 = load i8*, i8** %21, align 8
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %83 = load i8*, i8** %21, align 8
  %84 = load i8*, i8** %22, align 8
  %85 = load i64, i64* %23, align 8
  %86 = bitcast %class.SkEventTracer* %82 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %87 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %87, i64 5
  %89 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %88, align 8
  call void %89(%class.SkEventTracer* %82, i8* %83, i8* %84, i64 %85) #16
  br label %90

90:                                               ; preds = %38, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #16
  ret i1 %74
}

declare zeroext i1 @_ZN4SkSL17GLSLCodeGenerator12generateCodeEv(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17GLSLCodeGeneratorD2Ev(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN4SkSL17GLSLCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 18, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %12, %"class.std::__1::__tree_node"* %15) #16
  %16 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %11, %21
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %24, %31
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %35) #16
  %36 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 2, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %34, %42
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %46) #16
  %47 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 2, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %45, %53
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %57) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler6toGLSLERNS_7ProgramEPNS_6StringE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::StringStream", align 16
  %5 = bitcast %"class.SkSL::StringStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0, i32 0
  %7 = bitcast %"class.SkSL::StringStream"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 16
  %8 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1, i32 1
  %9 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #16
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0
  %11 = call zeroext i1 @_ZN4SkSL8Compiler6toGLSLERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %10)
  br i1 %11, label %12, label %45

12:                                               ; preds = %3
  %13 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* nonnull %4)
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %15 = icmp eq %"class.SkSL::String"* %13, %2
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %20, label %35, label %25

25:                                               ; preds = %16
  br i1 %24, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.SkSL::String"* %2 to i8*
  %28 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #16
  br label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %31, i64 %33) #16
  br label %45

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.SkSL::String"* %13 to i8*
  %41 = zext i8 %23 to i64
  %42 = select i1 %24, i8* %37, i8* %40
  %43 = select i1 %24, i64 %39, i64 %41
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %42, i64 %43) #16
  br label %45

45:                                               ; preds = %35, %29, %26, %12, %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 16
  %46 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 2, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %45, %51
  %55 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %55) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #16
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler6toHLSLERNS_7ProgramEPNS_6StringE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #16
  %7 = call zeroext i1 @_ZN4SkSL8Compiler7toSPIRVERNS_7ProgramEPNS_6StringE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::String"* nonnull %4)
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call zeroext i1 @_ZN4SkSL11SPIRVtoHLSLERKNS_6StringEPS0_(%"class.SkSL::String"* nonnull dereferenceable(24) %4, %"class.SkSL::String"* %2) #16
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i1 [ %9, %8 ], [ false, %3 ]
  %12 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %10, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret i1 %11
}

declare zeroext i1 @_ZN4SkSL11SPIRVtoHLSLERKNS_6StringEPS0_(%"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = alloca %"class.SkSL::MetalCodeGenerator", align 8
  %6 = load atomic i64, i64* @_ZZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic964.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #16
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamEE28trace_event_unique_atomic964.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %3, %9
  %18 = phi i8* [ %7, %3 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = bitcast %"struct.SkSL::Program"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %42 = bitcast %"class.SkSL::String"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.SkSL::MetalCodeGenerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 448, i8* nonnull %43) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast (%"class.SkSL::MetalCodeGenerator"* @__const._ZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamE.cg to i8*), i64 448, i1 false)
  %44 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 0
  call void @_ZN4SkSL18MetalCodeGeneratorC2EPKNS_7ContextEPKNS_7ProgramEPNS_13ErrorReporterEPNS_12OutputStreamE(%"class.SkSL::MetalCodeGenerator"* nonnull %5, %"class.SkSL::Context"* %45, %"struct.SkSL::Program"* %1, %"class.SkSL::ErrorReporter"* %46, %"class.SkSL::OutputStream"* %2)
  %47 = call zeroext i1 @_ZN4SkSL18MetalCodeGenerator12generateCodeEv(%"class.SkSL::MetalCodeGenerator"* nonnull %5) #16
  call void @_ZN4SkSL18MetalCodeGeneratorD2Ev(%"class.SkSL::MetalCodeGenerator"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 448, i8* nonnull %43) #16
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %41, align 8
  %48 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %49 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %38
  %51 = load i8*, i8** %21, align 8
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %50
  %55 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %56 = load i8*, i8** %21, align 8
  %57 = load i8*, i8** %22, align 8
  %58 = load i64, i64* %23, align 8
  %59 = bitcast %class.SkEventTracer* %55 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %60 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %60, i64 5
  %62 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %61, align 8
  call void %62(%class.SkEventTracer* %55, i8* %56, i8* %57, i64 %58) #16
  br label %63

63:                                               ; preds = %38, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #16
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18MetalCodeGeneratorC2EPKNS_7ContextEPKNS_7ProgramEPNS_13ErrorReporterEPNS_12OutputStreamE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Context"*, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*, %"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  %6 = alloca [7 x %"class.SkSL::String"], align 8
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  store %"struct.SkSL::Program"* %2, %"struct.SkSL::Program"** %8, align 8
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  store %"class.SkSL::ErrorReporter"* %3, %"class.SkSL::ErrorReporter"** %9, align 8
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  store %"class.SkSL::OutputStream"* %4, %"class.SkSL::OutputStream"** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18MetalCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1
  %12 = bitcast [7 x %"class.SkSL::String"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %12) #16
  %13 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 0
  %14 = bitcast [7 x %"class.SkSL::String"]* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 5, i8* %15, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5, i1 false) #16
  %16 = getelementptr inbounds i8, i8* %12, i64 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 1
  %18 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 5, i8* %19, align 1
  %20 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5, i1 false) #16
  %21 = getelementptr inbounds i8, i8* %20, i64 5
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 2
  %23 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 4, i8* %24, align 1
  %25 = bitcast %"class.SkSL::String"* %22 to i8*
  %26 = bitcast %"class.SkSL::String"* %22 to i32*
  store i32 1953393010, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 4
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 3
  %29 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 4, i8* %30, align 1
  %31 = bitcast %"class.SkSL::String"* %28 to i8*
  %32 = bitcast %"class.SkSL::String"* %28 to i32*
  store i32 2019845732, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 4
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 4
  %35 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 4, i8* %36, align 1
  %37 = bitcast %"class.SkSL::String"* %34 to i8*
  %38 = bitcast %"class.SkSL::String"* %34 to i32*
  store i32 2036622948, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 4
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 5
  %41 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 6, i8* %42, align 1
  %43 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i64 6, i1 false) #16
  %44 = getelementptr inbounds i8, i8* %43, i64 6
  store i8 0, i8* %44, align 2
  %45 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 6
  %46 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 8, i8* %47, align 1
  %48 = bitcast %"class.SkSL::String"* %45 to i64*
  store i64 8389754676398092902, i64* %48, align 8
  %49 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast i64* %49 to i8*
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unordered_set.515", %"class.std::__1::unordered_set.515"* %11, i64 0, i32 0
  %52 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0, i32 3
  %53 = bitcast %"class.std::__1::__compressed_pair.534"* %52 to i32*
  %54 = bitcast %"class.std::__1::unordered_set.515"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %53, align 4
  %55 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* nonnull dereferenceable(24) %13, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #16
  %56 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 1
  %57 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %56, %"class.SkSL::String"* dereferenceable(24) %56) #16
  %58 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 2
  %59 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %58, %"class.SkSL::String"* dereferenceable(24) %58) #16
  %60 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 3
  %61 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %60, %"class.SkSL::String"* dereferenceable(24) %60) #16
  %62 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 4
  %63 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %62, %"class.SkSL::String"* dereferenceable(24) %62) #16
  %64 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 5
  %65 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %64, %"class.SkSL::String"* dereferenceable(24) %64) #16
  %66 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 6
  %67 = call { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"* %51, %"class.SkSL::String"* dereferenceable(24) %66, %"class.SkSL::String"* dereferenceable(24) %66) #16
  %68 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 6
  %69 = bitcast %"class.SkSL::String"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %5
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %5, %73
  %77 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 5
  %78 = bitcast %"class.SkSL::String"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %82, %76
  %86 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 4
  %87 = bitcast %"class.SkSL::String"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %91, %85
  %95 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 3
  %96 = bitcast %"class.SkSL::String"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #15
  br label %103

103:                                              ; preds = %100, %94
  %104 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 2
  %105 = bitcast %"class.SkSL::String"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %111) #15
  br label %112

112:                                              ; preds = %109, %103
  %113 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 1
  %114 = bitcast %"class.SkSL::String"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %118, %112
  %122 = bitcast [7 x %"class.SkSL::String"]* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %121
  %127 = getelementptr inbounds [7 x %"class.SkSL::String"], [7 x %"class.SkSL::String"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %128) #15
  br label %129

129:                                              ; preds = %126, %121
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %12) #16
  %130 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2
  %131 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0, i32 3
  %132 = bitcast %"class.std::__1::__compressed_pair.559"* %131 to i32*
  %133 = bitcast %"class.std::__1::unordered_map.537"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %132, align 4
  %134 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3
  %135 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 3
  %136 = bitcast %"class.std::__1::__compressed_pair.587"* %135 to i32*
  %137 = bitcast %"class.std::__1::unordered_map.565"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %136, align 4
  %138 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 4
  store i32 0, i32* %138, align 8
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 5
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 7
  store %"class.SkSL::Context"* %1, %"class.SkSL::Context"** %141, align 8
  %142 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 8
  %143 = bitcast %"class.SkSL::String"* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #16
  %144 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0
  %145 = bitcast i32 (...)*** %144 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %145, align 8
  %146 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 1
  %147 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %149 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 0
  %150 = bitcast %"class.std::__1::__tree_node_base"** %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 16, i1 false) #16
  %151 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 57, i1 false)
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %149, align 8
  %152 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 15
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17
  %154 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 3
  %155 = bitcast %"class.std::__1::__compressed_pair.613"* %154 to i32*
  %156 = bitcast %"class.std::__1::unordered_map.593"* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %155, align 4
  %157 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 18
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 19
  store i8 0, i8* %158, align 1
  %159 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21
  %160 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0, i32 3
  %161 = bitcast %"class.std::__1::__compressed_pair.534"* %160 to i32*
  %162 = bitcast %"class.std::__1::unordered_set.515"* %159 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %161, align 4
  %163 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 22
  store i32 -1, i32* %163, align 8
  %164 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24
  %165 = bitcast %"class.SkSL::String"* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 37, i1 false)
  ret void
}

declare zeroext i1 @_ZN4SkSL18MetalCodeGenerator12generateCodeEv(%"class.SkSL::MetalCodeGenerator"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18MetalCodeGeneratorD2Ev(%"class.SkSL::MetalCodeGenerator"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18MetalCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.520"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %11, %27
  %16 = phi %"struct.std::__1::__hash_node_base.520"* [ %18, %27 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %16, i64 2
  %20 = bitcast %"struct.std::__1::__hash_node_base.520"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = bitcast %"struct.std::__1::__hash_node_base.520"* %19 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %24, %15
  %28 = bitcast %"struct.std::__1::__hash_node_base.520"* %16 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  %29 = icmp eq %"struct.std::__1::__hash_node_base.520"* %18, null
  br i1 %29, label %30, label %15

30:                                               ; preds = %27, %11
  %31 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %31, align 8
  store %"struct.std::__1::__hash_node_base.520"** null, %"struct.std::__1::__hash_node_base.520"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.520"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base.520"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.598"*, %"struct.std::__1::__hash_node_base.598"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.598"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.std::__1::__hash_node_base.598"* [ %43, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.598", %"struct.std::__1::__hash_node_base.598"* %41, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.598"*, %"struct.std::__1::__hash_node_base.598"** %42, align 8
  %44 = bitcast %"struct.std::__1::__hash_node_base.598"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #15
  %45 = icmp eq %"struct.std::__1::__hash_node_base.598"* %43, null
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.598"**, %"struct.std::__1::__hash_node_base.598"*** %47, align 8
  store %"struct.std::__1::__hash_node_base.598"** null, %"struct.std::__1::__hash_node_base.598"*** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.598"** %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.std::__1::__hash_node_base.598"** %48 to i8*
  tail call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %53, %"class.std::__1::__tree_node"* %56) #16
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 2, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %52, %63
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %67) #16
  %68 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 8, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %66, %73
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.570"*, %"struct.std::__1::__hash_node_base.570"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.570"* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %76, %92
  %81 = phi %"struct.std::__1::__hash_node_base.570"* [ %83, %92 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.570", %"struct.std::__1::__hash_node_base.570"* %81, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.570"*, %"struct.std::__1::__hash_node_base.570"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.570", %"struct.std::__1::__hash_node_base.570"* %81, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.570"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %80
  %90 = bitcast %"struct.std::__1::__hash_node_base.570"* %84 to i8**
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %89, %80
  %93 = bitcast %"struct.std::__1::__hash_node_base.570"* %81 to i8*
  tail call void @_ZdlPv(i8* %93) #15
  %94 = icmp eq %"struct.std::__1::__hash_node_base.570"* %83, null
  br i1 %94, label %95, label %80

95:                                               ; preds = %92, %76
  %96 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.570"**, %"struct.std::__1::__hash_node_base.570"*** %96, align 8
  store %"struct.std::__1::__hash_node_base.570"** null, %"struct.std::__1::__hash_node_base.570"*** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.570"** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast %"struct.std::__1::__hash_node_base.570"** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #15
  br label %101

101:                                              ; preds = %95, %99
  %102 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.542"*, %"struct.std::__1::__hash_node_base.542"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.542"* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"struct.std::__1::__hash_node_base.542"* [ %108, %105 ], [ %103, %101 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.542", %"struct.std::__1::__hash_node_base.542"* %106, i64 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base.542"*, %"struct.std::__1::__hash_node_base.542"** %107, align 8
  %109 = bitcast %"struct.std::__1::__hash_node_base.542"* %106 to i8*
  tail call void @_ZdlPv(i8* %109) #15
  %110 = icmp eq %"struct.std::__1::__hash_node_base.542"* %108, null
  br i1 %110, label %111, label %105

111:                                              ; preds = %105, %101
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.542"**, %"struct.std::__1::__hash_node_base.542"*** %112, align 8
  store %"struct.std::__1::__hash_node_base.542"** null, %"struct.std::__1::__hash_node_base.542"*** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.542"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = bitcast %"struct.std::__1::__hash_node_base.542"** %113 to i8*
  tail call void @_ZdlPv(i8* %116) #15
  br label %117

117:                                              ; preds = %111, %115
  %118 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.520"* %119, null
  br i1 %120, label %136, label %121

121:                                              ; preds = %117, %133
  %122 = phi %"struct.std::__1::__hash_node_base.520"* [ %124, %133 ], [ %119, %117 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %122, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %122, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base.520"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %121
  %131 = bitcast %"struct.std::__1::__hash_node_base.520"* %125 to i8**
  %132 = load i8*, i8** %131, align 8
  tail call void @_ZdlPv(i8* %132) #15
  br label %133

133:                                              ; preds = %130, %121
  %134 = bitcast %"struct.std::__1::__hash_node_base.520"* %122 to i8*
  tail call void @_ZdlPv(i8* %134) #15
  %135 = icmp eq %"struct.std::__1::__hash_node_base.520"* %124, null
  br i1 %135, label %136, label %121

136:                                              ; preds = %133, %117
  %137 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %137, align 8
  store %"struct.std::__1::__hash_node_base.520"** null, %"struct.std::__1::__hash_node_base.520"*** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.520"** %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast %"struct.std::__1::__hash_node_base.520"** %138 to i8*
  tail call void @_ZdlPv(i8* %141) #15
  br label %142

142:                                              ; preds = %136, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL8Compiler7toMetalERNS_7ProgramEPNS_6StringE(%"class.SkSL::Compiler"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::StringStream", align 16
  %5 = bitcast %"class.SkSL::StringStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0, i32 0
  %7 = bitcast %"class.SkSL::StringStream"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 16
  %8 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1, i32 1
  %9 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #16
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0
  %11 = call zeroext i1 @_ZN4SkSL8Compiler7toMetalERNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::Compiler"* %0, %"struct.SkSL::Program"* dereferenceable(128) %1, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %10)
  br i1 %11, label %12, label %45

12:                                               ; preds = %3
  %13 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* nonnull %4)
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %15 = icmp eq %"class.SkSL::String"* %13, %2
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %20, label %35, label %25

25:                                               ; preds = %16
  br i1 %24, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.SkSL::String"* %2 to i8*
  %28 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #16
  br label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %31, i64 %33) #16
  br label %45

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.SkSL::String"* %13 to i8*
  %41 = zext i8 %23 to i64
  %42 = select i1 %24, i8* %37, i8* %40
  %43 = select i1 %24, i64 %39, i64 %41
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %42, i64 %43) #16
  br label %45

45:                                               ; preds = %35, %29, %26, %12, %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 16
  %46 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 2, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %45, %51
  %55 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %55) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #16
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN4SkSL8Compiler8positionEi(%"class.SkSL::Compiler"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %4 = load %"class.SkSL::String"*, %"class.SkSL::String"** %3, align 8
  %5 = icmp ne %"class.SkSL::String"* %4, null
  %6 = icmp sgt i32 %1, -1
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %63

8:                                                ; preds = %2
  %9 = icmp sgt i32 %1, 0
  br i1 %9, label %10, label %63

10:                                               ; preds = %8
  %11 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = bitcast %"class.SkSL::String"* %4 to i8*
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = zext i32 %1 to i64
  %18 = and i64 %17, 1
  %19 = icmp eq i32 %1, 1
  br i1 %19, label %39, label %20

20:                                               ; preds = %10
  %21 = sub nsw i64 %17, %18
  br label %22

22:                                               ; preds = %69, %20
  %23 = phi i64 [ 0, %20 ], [ %79, %69 ]
  %24 = phi i32 [ 1, %20 ], [ %78, %69 ]
  %25 = phi i32 [ 1, %20 ], [ %77, %69 ]
  %26 = phi i64 [ %21, %20 ], [ %80, %69 ]
  br i1 %14, label %27, label %29

27:                                               ; preds = %22
  %28 = load i8*, i8** %16, align 8
  br label %29

29:                                               ; preds = %22, %27
  %30 = phi i8* [ %28, %27 ], [ %15, %22 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %23
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 10
  %34 = zext i1 %33 to i32
  %35 = add nuw nsw i32 %25, %34
  %36 = or i64 %23, 1
  br i1 %14, label %67, label %69

37:                                               ; preds = %69
  %38 = add i32 %78, 1
  br label %39

39:                                               ; preds = %37, %10
  %40 = phi i32 [ undef, %10 ], [ %77, %37 ]
  %41 = phi i32 [ undef, %10 ], [ %78, %37 ]
  %42 = phi i64 [ 0, %10 ], [ %79, %37 ]
  %43 = phi i32 [ 2, %10 ], [ %38, %37 ]
  %44 = phi i32 [ 1, %10 ], [ %77, %37 ]
  %45 = icmp eq i64 %18, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %39
  br i1 %14, label %47, label %49

47:                                               ; preds = %46
  %48 = load i8*, i8** %16, align 8
  br label %49

49:                                               ; preds = %47, %46
  %50 = phi i8* [ %48, %47 ], [ %15, %46 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %42
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 10
  %54 = select i1 %53, i32 1, i32 %43
  %55 = zext i1 %53 to i32
  %56 = add nuw nsw i32 %44, %55
  br label %57

57:                                               ; preds = %39, %49
  %58 = phi i32 [ %40, %39 ], [ %56, %49 ]
  %59 = phi i32 [ %41, %39 ], [ %54, %49 ]
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %58 to i64
  br label %63

63:                                               ; preds = %57, %8, %2
  %64 = phi i64 [ -4294967296, %2 ], [ 4294967296, %8 ], [ %61, %57 ]
  %65 = phi i64 [ 4294967295, %2 ], [ 1, %8 ], [ %62, %57 ]
  %66 = or i64 %64, %65
  ret i64 %66

67:                                               ; preds = %29
  %68 = load i8*, i8** %16, align 8
  br label %69

69:                                               ; preds = %67, %29
  %70 = phi i8* [ %68, %67 ], [ %15, %29 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %36
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 10
  %74 = add i32 %24, 2
  %75 = select i1 %33, i32 2, i32 %74
  %76 = zext i1 %73 to i32
  %77 = add nuw nsw i32 %35, %76
  %78 = select i1 %73, i32 1, i32 %75
  %79 = add nuw nsw i64 %23, 2
  %80 = add i64 %26, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %37, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler5errorEiNS_6StringE(%"class.SkSL::Compiler"*, i32, %"class.SkSL::String"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 17
  %13 = load %"class.SkSL::String"*, %"class.SkSL::String"** %12, align 8
  %14 = icmp ne %"class.SkSL::String"* %13, null
  %15 = icmp sgt i32 %1, -1
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %60

17:                                               ; preds = %3
  %18 = icmp sgt i32 %1, 0
  br i1 %18, label %19, label %60

19:                                               ; preds = %17
  %20 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = bitcast %"class.SkSL::String"* %13 to i8*
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = zext i32 %1 to i64
  %27 = and i64 %26, 1
  %28 = icmp eq i32 %1, 1
  br i1 %28, label %45, label %29

29:                                               ; preds = %19
  %30 = sub nsw i64 %26, %27
  br label %31

31:                                               ; preds = %200, %29
  %32 = phi i64 [ 0, %29 ], [ %207, %200 ]
  %33 = phi i32 [ 1, %29 ], [ %206, %200 ]
  %34 = phi i64 [ %30, %29 ], [ %208, %200 ]
  br i1 %23, label %35, label %37

35:                                               ; preds = %31
  %36 = load i8*, i8** %25, align 8
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi i8* [ %36, %35 ], [ %24, %31 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %32
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 10
  %42 = zext i1 %41 to i32
  %43 = add nuw nsw i32 %33, %42
  %44 = or i64 %32, 1
  br i1 %23, label %198, label %200

45:                                               ; preds = %200, %19
  %46 = phi i32 [ undef, %19 ], [ %206, %200 ]
  %47 = phi i64 [ 0, %19 ], [ %207, %200 ]
  %48 = phi i32 [ 1, %19 ], [ %206, %200 ]
  %49 = icmp eq i64 %27, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %45
  br i1 %23, label %51, label %53

51:                                               ; preds = %50
  %52 = load i8*, i8** %25, align 8
  br label %53

53:                                               ; preds = %50, %51
  %54 = phi i8* [ %52, %51 ], [ %24, %50 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %47
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 10
  %58 = zext i1 %57 to i32
  %59 = add nuw nsw i32 %48, %58
  br label %60

60:                                               ; preds = %53, %45, %3, %17
  %61 = phi i32 [ -1, %3 ], [ 1, %17 ], [ %46, %45 ], [ %59, %53 ]
  %62 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20
  %63 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19
  %64 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  br label %73

71:                                               ; preds = %60
  %72 = zext i8 %66 to i64
  br label %73

73:                                               ; preds = %68, %71
  %74 = phi i64 [ %70, %68 ], [ %72, %71 ]
  %75 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20, i32 0, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = icmp ult i64* %76, %78
  %80 = ptrtoint i64* %78 to i64
  br i1 %79, label %81, label %85

81:                                               ; preds = %73
  store i64 %74, i64* %76, align 8
  %82 = getelementptr inbounds i64, i64* %76, i64 1
  %83 = ptrtoint i64* %82 to i64
  %84 = bitcast i64** %75 to i64*
  store i64 %83, i64* %84, align 8
  br label %141

85:                                               ; preds = %73
  %86 = ptrtoint i64* %76 to i64
  %87 = bitcast i64** %75 to i64*
  %88 = bitcast %"class.std::__1::vector.159"* %62 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = ashr exact i64 %90, 3
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 2305843009213693951
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = bitcast %"class.std::__1::vector.159"* %62 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #17
  unreachable

96:                                               ; preds = %85
  %97 = bitcast i64** %77 to i64*
  %98 = sub i64 %80, %89
  %99 = ashr exact i64 %98, 3
  %100 = icmp ult i64 %99, 1152921504606846975
  br i1 %100, label %101, label %109

101:                                              ; preds = %96
  %102 = ashr exact i64 %98, 2
  %103 = icmp ult i64 %102, %92
  %104 = select i1 %103, i64 %92, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 2305843009213693951
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #17
  unreachable

109:                                              ; preds = %106, %96
  %110 = phi i64 [ %104, %106 ], [ 2305843009213693951, %96 ]
  %111 = shl i64 %110, 3
  %112 = tail call i8* @_Znwm(i64 %111) #15
  %113 = bitcast i8* %112 to i64*
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi i64* [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds i64, i64* %116, i64 %91
  %118 = getelementptr inbounds i64, i64* %116, i64 %115
  %119 = ptrtoint i64* %118 to i64
  store i64 %74, i64* %117, align 8
  %120 = getelementptr inbounds i64, i64* %117, i64 1
  %121 = ptrtoint i64* %120 to i64
  %122 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %62, i64 0, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = load i64, i64* %87, align 8
  %125 = ptrtoint i64* %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds i64, i64* %117, i64 %128
  %130 = ptrtoint i64* %129 to i64
  %131 = icmp sgt i64 %126, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %114
  %133 = bitcast i64* %129 to i8*
  %134 = bitcast i64* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 %126, i1 false) #16
  %135 = load i64*, i64** %122, align 8
  br label %136

136:                                              ; preds = %132, %114
  %137 = phi i64* [ %123, %114 ], [ %135, %132 ]
  store i64 %130, i64* %88, align 8
  store i64 %121, i64* %87, align 8
  store i64 %119, i64* %97, align 8
  %138 = icmp eq i64* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  %140 = bitcast i64* %137 to i8*
  tail call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %81, %136, %139
  %142 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #16
  %143 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #16
  %144 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #16
  %145 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #16
  %146 = icmp sgt i32 %61, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #16
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %8, i32 %61) #16
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #16
  br label %152

149:                                              ; preds = %141
  %150 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  store i8 0, i8* %151, align 1
  store i8 0, i8* %145, align 8
  br label %152

152:                                              ; preds = %149, %147
  %153 = phi i1 [ true, %147 ], [ false, %149 ]
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #16
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, %"class.SkSL::String"* dereferenceable(24) %2) #16
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #16
  %154 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %63, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #16
  %155 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %161) #15
  br label %162

162:                                              ; preds = %152, %159
  %163 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #15
  br label %170

170:                                              ; preds = %162, %167
  %171 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  call void @_ZdlPv(i8* %177) #15
  br label %178

178:                                              ; preds = %170, %175
  %179 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %185) #15
  br label %186

186:                                              ; preds = %178, %183
  br i1 %153, label %187, label %197

187:                                              ; preds = %186
  %188 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %187, %192
  %196 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #16
  br label %197

197:                                              ; preds = %186, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #16
  ret void

198:                                              ; preds = %37
  %199 = load i8*, i8** %25, align 8
  br label %200

200:                                              ; preds = %198, %37
  %201 = phi i8* [ %199, %198 ], [ %24, %37 ]
  %202 = getelementptr inbounds i8, i8* %201, i64 %44
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 10
  %205 = zext i1 %204 to i32
  %206 = add nuw nsw i32 %43, %205
  %207 = add nuw nsw i64 %32, 2
  %208 = add i64 %34, -2
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %45, label %31
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler13setErrorCountEi(%"class.SkSL::Compiler"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, %1
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19, i32 0
  %8 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %8, i64 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 %9
  %13 = load i64, i64* %12, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %7, i64 %13, i8 signext 0) #16
  %14 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 20, i32 0, i32 1
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.159"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, %9
  %22 = inttoptr i64 %18 to i64*
  br i1 %21, label %23, label %25

23:                                               ; preds = %6
  %24 = sub nsw i64 %9, %20
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm(%"class.std::__1::vector.159"* %8, i64 %24) #16
  br label %29

25:                                               ; preds = %6
  %26 = icmp ugt i64 %20, %9
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds i64, i64* %22, i64 %9
  store i64* %28, i64** %14, align 8
  br label %29

29:                                               ; preds = %23, %25, %27
  store i32 %1, i32* %3, align 8
  br label %30

30:                                               ; preds = %29, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* noalias sret, %"class.SkSL::Compiler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  br i1 %2, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN4SkSL8Compiler15writeErrorCountEv(%"class.SkSL::Compiler"* %1)
  br label %6

6:                                                ; preds = %5, %3
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 18
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 19
  %9 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.SkSL::String"* %0 to i8*
  %16 = bitcast %"class.SkSL::String"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #16
  %17 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  %18 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 0, i8* %19, align 1
  store i8 0, i8* %17, align 8
  br label %34

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #16
  %26 = load i8, i8* %10, align 1
  %27 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 0, i8* %29, align 1
  store i8 0, i8* %27, align 8
  %30 = icmp slt i8 %26, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %31, %20, %14
  %35 = phi i8* [ %19, %14 ], [ %29, %20 ], [ %29, %31 ]
  %36 = phi i8* [ %17, %14 ], [ %27, %20 ], [ %27, %31 ]
  %37 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %36, i64 24, i1 false) #16
  store i8 0, i8* %35, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL8Compiler15writeErrorCountEv(%"class.SkSL::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %3, i32 %5) #16
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #16
  %10 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 19
  %11 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %10, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #16
  %12 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %7, %16
  %20 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %19, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  %28 = load i32, i32* %4, align 8
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #16
  br label %32

32:                                               ; preds = %30, %27
  %33 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #16
  br label %34

34:                                               ; preds = %1, %32
  ret void
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL8Compiler10errorCountEv(%"class.SkSL::Compiler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !27
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #16
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #15, !noalias !28
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #16, !noalias !28
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !28
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !28
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !27
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #16
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #16, !range !27
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #16, !range !27
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !27
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !27
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !27
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #16
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !31

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !27
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #16
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #16
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %152, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, i8*, i64, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.43"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.39"*, %"class.SkSL::String"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.641"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.SkSL::String"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #16
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !27
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.43"* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %34
  %42 = add i64 %22, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base.43"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.43"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.43"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %67

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.43"* %64 to %"class.SkSL::String"*
  %66 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %65, %"class.SkSL::String"* dereferenceable(24) %1) #16
  br i1 %66, label %168, label %43

67:                                               ; preds = %43, %60, %34, %5
  %68 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %60 ], [ %35, %43 ]
  %69 = call i8* @_Znwm(i64 56) #15, !noalias !33
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::String"*, %"class.SkSL::String"** %71, align 8, !noalias !33
  %73 = bitcast %"class.SkSL::String"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !33
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.SkSL::String"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %78, i64 24, i1 false) #16, !noalias !33
  br label %85

79:                                               ; preds = %67
  %80 = bitcast i8* %70 to %"class.std::__1::basic_string"*
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !33
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !33
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %80, i8* %82, i64 %84) #16, !noalias !33
  br label %85

85:                                               ; preds = %77, %79
  %86 = getelementptr inbounds i8, i8* %69, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #16, !noalias !33
  %87 = getelementptr inbounds i8, i8* %69, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %20, i64* %88, align 8, !noalias !33
  %89 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.43"**
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %89, align 8, !noalias !33
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  %93 = uitofp i64 %92 to float
  %94 = uitofp i64 %22 to float
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 3, i32 0, i32 0
  %96 = load float, float* %95, align 4
  %97 = fmul float %96, %94
  %98 = fcmp olt float %97, %93
  %99 = or i1 %23, %98
  br i1 %99, label %100, label %123

100:                                              ; preds = %85
  %101 = shl i64 %22, 1
  %102 = icmp ult i64 %22, 3
  %103 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !27
  %104 = icmp ugt i64 %103, 1
  %105 = or i1 %102, %104
  %106 = zext i1 %105 to i64
  %107 = or i64 %101, %106
  %108 = fdiv float %93, %96
  %109 = call float @llvm.ceil.f32(float %108) #16
  %110 = fptoui float %109 to i64
  %111 = icmp ult i64 %107, %110
  %112 = select i1 %111, i64 %110, i64 %107
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.39"* %0, i64 %112)
  %113 = load i64, i64* %21, align 8
  %114 = call i64 @llvm.ctpop.i64(i64 %113) #16, !range !27
  %115 = icmp ugt i64 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %100
  %117 = add i64 %113, -1
  %118 = and i64 %117, %20
  br label %123

119:                                              ; preds = %100
  %120 = icmp ult i64 %20, %113
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %20, %113
  br label %123

123:                                              ; preds = %121, %119, %116, %85
  %124 = phi i64 [ %22, %85 ], [ %113, %116 ], [ %113, %119 ], [ %113, %121 ]
  %125 = phi i64 [ %68, %85 ], [ %118, %116 ], [ %20, %119 ], [ %122, %121 ]
  %126 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %127, i64 %125
  %129 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.43"* %129, null
  br i1 %130, label %131, label %157

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 1, i32 0, i32 0
  %133 = bitcast %"struct.std::__1::__hash_node_base.43"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %69 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base.43"* %132 to i8**
  store i8* %69, i8** %136, align 8
  store %"struct.std::__1::__hash_node_base.43"* %132, %"struct.std::__1::__hash_node_base.43"** %128, align 8
  %137 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %89, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.43"* %137, null
  br i1 %138, label %164, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %137, i64 1
  %141 = bitcast %"struct.std::__1::__hash_node_base.43"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = call i64 @llvm.ctpop.i64(i64 %124) #16, !range !27
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = add i64 %124, -1
  %147 = and i64 %142, %146
  br label %152

148:                                              ; preds = %139
  %149 = icmp ult i64 %142, %124
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %142, %124
  br label %152

152:                                              ; preds = %145, %148, %150
  %153 = phi i64 [ %147, %145 ], [ %151, %150 ], [ %142, %148 ]
  %154 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %126, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %154, i64 %153
  %156 = bitcast %"struct.std::__1::__hash_node_base.43"** %155 to i8**
  br label %162

157:                                              ; preds = %123
  %158 = bitcast %"struct.std::__1::__hash_node_base.43"* %129 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i8* %69 to i64*
  store i64 %159, i64* %160, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base.43"* %129 to i8**
  br label %162

162:                                              ; preds = %152, %157
  %163 = phi i8** [ %161, %157 ], [ %156, %152 ]
  store i8* %69, i8** %163, align 8
  br label %164

164:                                              ; preds = %162, %131
  %165 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.43"*
  %166 = load i64, i64* %90, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %90, align 8
  br label %168

168:                                              ; preds = %63, %164
  %169 = phi i8 [ 1, %164 ], [ 0, %63 ]
  %170 = phi %"struct.std::__1::__hash_node_base.43"* [ %165, %164 ], [ %46, %63 ]
  %171 = insertvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } undef, %"struct.std::__1::__hash_node_base.43"* %170, 0
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.43"*, i8 } %171, i8 %169, 1
  ret { %"struct.std::__1::__hash_node_base.43"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.39"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !27
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.39"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !27
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !27
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.39"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.39"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.39"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.43"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.43"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.45", %"class.std::__1::__bucket_list_deallocator.45"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !36

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.43"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.43"* null, %"struct.std::__1::__hash_node_base.43"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.43"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !27
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.43"* %36, %"struct.std::__1::__hash_node_base.43"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.43"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.43"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.43"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.43"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.43"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.43"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.43"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.43"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #16
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.43"* %82, %"struct.std::__1::__hash_node_base.43"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.43"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #16
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.43"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.43"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.43"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.43"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.43"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.43"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.43"* %80, %"struct.std::__1::__hash_node_base.43"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.43"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.43"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.39", %"class.std::__1::__hash_table.39"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.43"** null, %"struct.std::__1::__hash_node_base.43"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.43"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.43"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.45", %"class.std::__1::__bucket_list_deallocator.45"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

declare dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifierD0Ev(%class.StaticTestVerifier*) unnamed_addr #6 align 2 {
  %2 = bitcast %class.StaticTestVerifier* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifier15visitExpressionERKNS_10ExpressionE(%class.StaticTestVerifier* nocapture readnone, %"class.SkSL::Expression"* nocapture readnone dereferenceable(24)) unnamed_addr #13 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler17verifyStaticTestsERKNS_7ProgramEEN18StaticTestVerifier14visitStatementERKNS_9StatementE(%class.StaticTestVerifier*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %25 [
    i32 23, label %5
    i32 27, label %15
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  %8 = load i8, i8* %7, align 8, !range !26
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %0, i64 0, i32 1
  %12 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %12, i32 %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0))
  br label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %17 = bitcast %"class.SkSL::Statement"* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !26
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %0, i64 0, i32 1
  %22 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %22, i32 %24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0))
  br label %25

25:                                               ; preds = %5, %15, %2, %20, %10
  %26 = getelementptr inbounds %class.StaticTestVerifier, %class.StaticTestVerifier* %0, i64 0, i32 0, i32 0
  %27 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"* %26, %"class.SkSL::Statement"* dereferenceable(16) %1) #16
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.150"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %7, i64 2
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Expression"* dereferenceable(24) %5) #16
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.213"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %7, i64 3
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Statement"* dereferenceable(16) %5) #16
  ret i1 %10
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #16
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #17
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #15
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #16
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #16
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminatorD0Ev(%class.DeadLocalVariableEliminator*) unnamed_addr #6 align 2 {
  %2 = bitcast %class.DeadLocalVariableEliminator* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE15visitExpressionERNS_10ExpressionE(%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE(%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminator18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE(%class.DeadLocalVariableEliminator* nocapture readnone, %"class.std::__1::unique_ptr.150"* nocapture readnone dereferenceable(8)) unnamed_addr #13 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler24removeDeadLocalVariablesERNS_7ProgramEPNS_12ProgramUsageEEN27DeadLocalVariableEliminator17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS6_14default_deleteIS8_EEEE(%class.DeadLocalVariableEliminator*, %"class.std::__1::unique_ptr.213"* nocapture dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::Variable"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %5, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 29
  br i1 %8, label %9, label %123

9:                                                ; preds = %2
  %10 = bitcast %"class.SkSL::Variable"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %5, i64 1
  %12 = bitcast %"class.SkSL::Statement"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.SkSL::Variable"** %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %0, i64 0, i32 3
  %16 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %15, align 8
  %17 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %18 = call i32 %17(i8* nonnull %10, i64 8, i32 0) #16
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 1, i32 %18
  %21 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %16, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %3, align 8
  br label %53

26:                                               ; preds = %9
  %27 = add nsw i32 %22, -1
  %28 = and i32 %20, %27
  %29 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %16, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %29, align 8
  %31 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %3, align 8
  br label %32

32:                                               ; preds = %46, %26
  %33 = phi i32 [ 0, %26 ], [ %51, %46 ]
  %34 = phi i32 [ %28, %26 ], [ %50, %46 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %30, i64 %35, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = icmp eq i32 %20, %37
  br i1 %40, label %41, label %46

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %30, i64 %35, i32 0
  %43 = getelementptr inbounds %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %43, align 8
  %45 = icmp eq %"class.SkSL::Variable"* %31, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %41, %39
  %47 = add nsw i32 %34, -1
  %48 = icmp slt i32 %34, 1
  %49 = select i1 %48, i32 %22, i32 0
  %50 = add nsw i32 %47, %49
  %51 = add nuw nsw i32 %33, 1
  %52 = icmp eq i32 %51, %22
  br i1 %52, label %53, label %32

53:                                               ; preds = %32, %41, %46, %24
  %54 = phi %"class.SkSL::Variable"* [ %25, %24 ], [ %31, %46 ], [ %31, %41 ], [ %31, %32 ]
  %55 = phi %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair"* [ null, %24 ], [ null, %32 ], [ %42, %41 ], [ null, %46 ]
  %56 = icmp eq %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair"* %55, null
  %57 = getelementptr inbounds %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair"* %55, i64 0, i32 0, i32 1
  %58 = select i1 %56, %"struct.SkSL::ProgramUsage::VariableCounts"* null, %"struct.SkSL::ProgramUsage::VariableCounts"* %57
  %59 = getelementptr inbounds %"struct.SkSL::ProgramUsage::VariableCounts", %"struct.SkSL::ProgramUsage::VariableCounts"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %122, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"struct.SkSL::ProgramUsage::VariableCounts", %"struct.SkSL::ProgramUsage::VariableCounts"* %58, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %122

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %54, i64 0, i32 3
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 2
  br i1 %69, label %70, label %122

70:                                               ; preds = %66
  %71 = call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %54) #16
  %72 = icmp eq %"class.SkSL::Expression"* %71, null
  %73 = getelementptr inbounds %"struct.SkSL::ProgramUsage::VariableCounts", %"struct.SkSL::ProgramUsage::VariableCounts"* %58, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %77, label %75

75:                                               ; preds = %70
  %76 = icmp eq i32 %74, 1
  br i1 %76, label %79, label %122

77:                                               ; preds = %70
  %78 = icmp eq i32 %74, 0
  br i1 %78, label %79, label %122

79:                                               ; preds = %75, %77
  %80 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %3, align 8
  %81 = call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %80) #16
  %82 = icmp eq %"class.SkSL::Expression"* %81, null
  %83 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %15, align 8
  %84 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  call void @_ZN4SkSL12ProgramUsage6removeEPKNS_9StatementE(%"class.SkSL::ProgramUsage"* %83, %"class.SkSL::Statement"* %84) #16
  br i1 %82, label %105, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %0, i64 0, i32 2
  %87 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %86, align 8
  %88 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %5, i64 2, i32 0, i32 1
  %89 = bitcast i32* %88 to %"class.SkSL::Expression"**
  %90 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %89, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %89, align 8
  %91 = call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %87, %"class.SkSL::Expression"* %90) #16
  %92 = ptrtoint %"class.SkSL::Statement"* %91 to i64
  %93 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.213"* %1 to i64*
  store i64 %92, i64* %94, align 8
  %95 = icmp eq %"class.SkSL::Statement"* %93, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %85
  %97 = bitcast %"class.SkSL::Statement"* %93 to void (%"class.SkSL::Statement"*)***
  %98 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %98, i64 1
  %100 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %99, align 8
  call void %100(%"class.SkSL::Statement"* nonnull %93) #16
  %101 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  br label %102

102:                                              ; preds = %96, %85
  %103 = phi %"class.SkSL::Statement"* [ %101, %96 ], [ %91, %85 ]
  %104 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %15, align 8
  call void @_ZN4SkSL12ProgramUsage3addEPKNS_9StatementE(%"class.SkSL::ProgramUsage"* %104, %"class.SkSL::Statement"* %103) #16
  br label %120

105:                                              ; preds = %79
  %106 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #16
  %107 = getelementptr inbounds i8, i8* %106, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 -1, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 12
  %110 = bitcast i8* %109 to i32*
  store i32 25, i32* %110, align 4
  %111 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.213"* %1 to i8**
  store i8* %106, i8** %113, align 8
  %114 = icmp eq %"class.SkSL::Statement"* %112, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %105
  %116 = bitcast %"class.SkSL::Statement"* %112 to void (%"class.SkSL::Statement"*)***
  %117 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %117, i64 1
  %119 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %118, align 8
  call void %119(%"class.SkSL::Statement"* nonnull %112) #16
  br label %120

120:                                              ; preds = %105, %115, %102
  %121 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %0, i64 0, i32 1
  store i8 1, i8* %121, align 8
  br label %122

122:                                              ; preds = %53, %62, %66, %75, %120, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %130

123:                                              ; preds = %2
  %124 = getelementptr inbounds %class.DeadLocalVariableEliminator, %class.DeadLocalVariableEliminator* %0, i64 0, i32 0, i32 0
  %125 = bitcast %class.DeadLocalVariableEliminator* %0 to i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)***
  %126 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*** %125, align 8
  %127 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %126, i64 3
  %128 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %127, align 8
  %129 = tail call zeroext i1 %128(%"class.SkSL::TProgramVisitor.290"* %124, %"class.SkSL::Statement"* dereferenceable(16) %5) #16
  br label %130

130:                                              ; preds = %123, %122
  %131 = phi i1 [ false, %122 ], [ %129, %123 ]
  ret i1 %131
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"*) local_unnamed_addr #2

declare void @_ZN4SkSL12ProgramUsage6removeEPKNS_9StatementE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Statement"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare void @_ZN4SkSL12ProgramUsage3addEPKNS_9StatementE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Statement"*) local_unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3NopD0Ev(%"class.SkSL::Nop"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Nop"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL3Nop11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 1, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  store i8 59, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL3Nop7isEmptyEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL3Nop5cloneEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #16
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 25, i32* %6, align 4
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminatorD0Ev(%class.UnreachableCodeEliminator*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEE25UnreachableCodeEliminator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4
  tail call void @_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev(%"class.std::__1::stack"* %3) #16
  %4 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3
  tail call void @_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev(%"class.std::__1::stack"* %4) #16
  %5 = bitcast %class.UnreachableCodeEliminator* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminator18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE(%class.UnreachableCodeEliminator* nocapture readnone, %"class.std::__1::unique_ptr.150"* nocapture readnone dereferenceable(8)) unnamed_addr #13 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL8Compiler21removeUnreachableCodeERNS_7ProgramEPNS_12ProgramUsageEEN25UnreachableCodeEliminator17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS6_14default_deleteIS8_EEEE(%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"* nocapture dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = add i64 %8, -1
  %10 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %11 = load i8**, i8*** %10, align 8
  %12 = lshr i64 %9, 12
  %13 = getelementptr inbounds i8*, i8** %11, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = and i64 %9, 4095
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = load i8, i8* %16, align 1, !range !26
  %18 = icmp eq i8 %17, 0
  %19 = ptrtoint i8** %11 to i64
  br i1 %18, label %20, label %38

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4
  %22 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  %27 = add i64 %26, -1
  %28 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %29 = load i8**, i8*** %28, align 8
  %30 = lshr i64 %27, 12
  %31 = getelementptr inbounds i8*, i8** %29, i64 %30
  %32 = load i8*, i8** %31, align 8
  %33 = and i64 %27, 4095
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1, !range !26
  %36 = icmp eq i8 %35, 0
  %37 = ptrtoint i8** %29 to i64
  br i1 %36, label %61, label %38

38:                                               ; preds = %20, %2
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213"* %1, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %40, i64 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 25
  br i1 %43, label %597, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 2
  %46 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %45, align 8
  tail call void @_ZN4SkSL12ProgramUsage6removeEPKNS_9StatementE(%"class.SkSL::ProgramUsage"* %46, %"class.SkSL::Statement"* %40) #16
  %47 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #16
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 -1, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 12
  %51 = bitcast i8* %50 to i32*
  store i32 25, i32* %51, align 4
  %52 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %39, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.213"* %1 to i8**
  store i8* %47, i8** %54, align 8
  %55 = icmp eq %"class.SkSL::Statement"* %53, null
  br i1 %55, label %597, label %56

56:                                               ; preds = %44
  %57 = bitcast %"class.SkSL::Statement"* %53 to void (%"class.SkSL::Statement"*)***
  %58 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %58, i64 1
  %60 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %59, align 8
  tail call void %60(%"class.SkSL::Statement"* nonnull %53) #16
  br label %597

61:                                               ; preds = %20
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %63, i64 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %597 [
    i32 26, label %66
    i32 19, label %66
    i32 17, label %67
    i32 18, label %67
    i32 23, label %256
    i32 22, label %136
    i32 20, label %75
    i32 16, label %68
  ]

66:                                               ; preds = %61, %61
  store i8 1, i8* %16, align 1
  br label %597

67:                                               ; preds = %61, %61
  store i8 1, i8* %34, align 1
  br label %597

68:                                               ; preds = %61
  %69 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 0, i32 0
  %70 = bitcast %class.UnreachableCodeEliminator* %0 to i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)***
  %71 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %71, i64 3
  %73 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.SkSL::TProgramVisitor.290"* %69, %"class.SkSL::Statement"* dereferenceable(16) %63) #16
  br label %597

75:                                               ; preds = %61
  %76 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %77 = bitcast i8*** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8*** %28 to i64*
  %80 = sub i64 %78, %37
  %81 = icmp eq i64 %80, 0
  %82 = shl i64 %80, 9
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = icmp eq i64 %84, %26
  %86 = inttoptr i64 %78 to i8**
  br i1 %85, label %87, label %94

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %21, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %88) #16
  %89 = load i64, i64* %22, align 8
  %90 = load i64, i64* %24, align 8
  %91 = load i8**, i8*** %28, align 8
  %92 = load i8**, i8*** %76, align 8
  %93 = add i64 %90, %89
  br label %94

94:                                               ; preds = %87, %75
  %95 = phi i64 [ %93, %87 ], [ %26, %75 ]
  %96 = phi i8** [ %92, %87 ], [ %86, %75 ]
  %97 = phi i8** [ %91, %87 ], [ %29, %75 ]
  %98 = icmp eq i8** %96, %97
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = lshr i64 %95, 12
  %101 = getelementptr inbounds i8*, i8** %97, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = and i64 %95, 4095
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  br label %105

105:                                              ; preds = %94, %99
  %106 = phi i8* [ %104, %99 ], [ null, %94 ]
  store i8 0, i8* %106, align 1
  %107 = load i64, i64* %22, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %22, align 8
  %109 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 0, i32 0
  %110 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  %111 = bitcast %class.UnreachableCodeEliminator* %0 to i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)***
  %112 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %112, i64 3
  %114 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.SkSL::TProgramVisitor.290"* %109, %"class.SkSL::Statement"* dereferenceable(16) %110) #16
  %116 = load i64, i64* %22, align 8
  %117 = load i64, i64* %24, align 8
  %118 = add i64 %116, -1
  store i64 %118, i64* %22, align 8
  %119 = load i64, i64* %77, align 8
  %120 = load i64, i64* %79, align 8
  %121 = sub i64 %119, %120
  %122 = icmp eq i64 %121, 0
  %123 = shl i64 %121, 9
  %124 = add i64 %123, -1
  %125 = select i1 %122, i64 0, i64 %124
  %126 = sub i64 1, %116
  %127 = sub i64 %126, %117
  %128 = add i64 %127, %125
  %129 = icmp ult i64 %128, 8192
  br i1 %129, label %597, label %130

130:                                              ; preds = %105
  %131 = inttoptr i64 %119 to i8**
  %132 = getelementptr inbounds i8*, i8** %131, i64 -1
  %133 = load i8*, i8** %132, align 8
  tail call void @_ZdlPv(i8* %133) #15
  %134 = load i8**, i8*** %76, align 8
  %135 = getelementptr i8*, i8** %134, i64 -1
  store i8** %135, i8*** %76, align 8
  br label %597

136:                                              ; preds = %61
  %137 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %138 = bitcast i8*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast i8*** %10 to i64*
  %141 = sub i64 %139, %19
  %142 = icmp eq i64 %141, 0
  %143 = shl i64 %141, 9
  %144 = add i64 %143, -1
  %145 = select i1 %142, i64 0, i64 %144
  %146 = icmp eq i64 %145, %8
  %147 = inttoptr i64 %139 to i8**
  br i1 %146, label %148, label %155

148:                                              ; preds = %136
  %149 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %149) #16
  %150 = load i64, i64* %4, align 8
  %151 = load i64, i64* %6, align 8
  %152 = load i8**, i8*** %10, align 8
  %153 = load i8**, i8*** %137, align 8
  %154 = add i64 %151, %150
  br label %155

155:                                              ; preds = %148, %136
  %156 = phi i64 [ %154, %148 ], [ %8, %136 ]
  %157 = phi i8** [ %153, %148 ], [ %147, %136 ]
  %158 = phi i8** [ %152, %148 ], [ %11, %136 ]
  %159 = icmp eq i8** %157, %158
  br i1 %159, label %166, label %160

160:                                              ; preds = %155
  %161 = lshr i64 %156, 12
  %162 = getelementptr inbounds i8*, i8** %158, i64 %161
  %163 = load i8*, i8** %162, align 8
  %164 = and i64 %156, 4095
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  br label %166

166:                                              ; preds = %155, %160
  %167 = phi i8* [ %165, %160 ], [ null, %155 ]
  store i8 0, i8* %167, align 1
  %168 = load i64, i64* %4, align 8
  %169 = add i64 %168, 1
  store i64 %169, i64* %4, align 8
  %170 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %171 = bitcast i8*** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast i8*** %28 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = icmp eq i64 %175, 0
  %177 = shl i64 %175, 9
  %178 = add i64 %177, -1
  %179 = select i1 %176, i64 0, i64 %178
  %180 = load i64, i64* %24, align 8
  %181 = load i64, i64* %22, align 8
  %182 = add i64 %181, %180
  %183 = icmp eq i64 %179, %182
  %184 = inttoptr i64 %174 to i8**
  %185 = inttoptr i64 %172 to i8**
  br i1 %183, label %186, label %193

186:                                              ; preds = %166
  %187 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %21, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %187) #16
  %188 = load i64, i64* %22, align 8
  %189 = load i64, i64* %24, align 8
  %190 = load i8**, i8*** %28, align 8
  %191 = load i8**, i8*** %170, align 8
  %192 = add i64 %189, %188
  br label %193

193:                                              ; preds = %186, %166
  %194 = phi i64 [ %192, %186 ], [ %182, %166 ]
  %195 = phi i8** [ %191, %186 ], [ %185, %166 ]
  %196 = phi i8** [ %190, %186 ], [ %184, %166 ]
  %197 = icmp eq i8** %195, %196
  br i1 %197, label %204, label %198

198:                                              ; preds = %193
  %199 = lshr i64 %194, 12
  %200 = getelementptr inbounds i8*, i8** %196, i64 %199
  %201 = load i8*, i8** %200, align 8
  %202 = and i64 %194, 4095
  %203 = getelementptr inbounds i8, i8* %201, i64 %202
  br label %204

204:                                              ; preds = %193, %198
  %205 = phi i8* [ %203, %198 ], [ null, %193 ]
  store i8 0, i8* %205, align 1
  %206 = load i64, i64* %22, align 8
  %207 = add i64 %206, 1
  store i64 %207, i64* %22, align 8
  %208 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 0, i32 0
  %209 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  %210 = bitcast %class.UnreachableCodeEliminator* %0 to i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)***
  %211 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*** %210, align 8
  %212 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %211, i64 3
  %213 = load i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.290"*, %"class.SkSL::Statement"*)** %212, align 8
  %214 = tail call zeroext i1 %213(%"class.SkSL::TProgramVisitor.290"* %208, %"class.SkSL::Statement"* dereferenceable(16) %209) #16
  %215 = load i64, i64* %22, align 8
  %216 = load i64, i64* %24, align 8
  %217 = add i64 %215, -1
  store i64 %217, i64* %22, align 8
  %218 = load i64, i64* %171, align 8
  %219 = load i64, i64* %173, align 8
  %220 = sub i64 %218, %219
  %221 = icmp eq i64 %220, 0
  %222 = shl i64 %220, 9
  %223 = add i64 %222, -1
  %224 = select i1 %221, i64 0, i64 %223
  %225 = sub i64 1, %215
  %226 = sub i64 %225, %216
  %227 = add i64 %226, %224
  %228 = icmp ult i64 %227, 8192
  br i1 %228, label %235, label %229

229:                                              ; preds = %204
  %230 = inttoptr i64 %218 to i8**
  %231 = getelementptr inbounds i8*, i8** %230, i64 -1
  %232 = load i8*, i8** %231, align 8
  tail call void @_ZdlPv(i8* %232) #15
  %233 = load i8**, i8*** %170, align 8
  %234 = getelementptr i8*, i8** %233, i64 -1
  store i8** %234, i8*** %170, align 8
  br label %235

235:                                              ; preds = %204, %229
  %236 = load i64, i64* %4, align 8
  %237 = load i64, i64* %6, align 8
  %238 = add i64 %236, -1
  store i64 %238, i64* %4, align 8
  %239 = load i64, i64* %138, align 8
  %240 = load i64, i64* %140, align 8
  %241 = sub i64 %239, %240
  %242 = icmp eq i64 %241, 0
  %243 = shl i64 %241, 9
  %244 = add i64 %243, -1
  %245 = select i1 %242, i64 0, i64 %244
  %246 = sub i64 1, %236
  %247 = sub i64 %246, %237
  %248 = add i64 %247, %245
  %249 = icmp ult i64 %248, 8192
  br i1 %249, label %597, label %250

250:                                              ; preds = %235
  %251 = inttoptr i64 %239 to i8**
  %252 = getelementptr inbounds i8*, i8** %251, i64 -1
  %253 = load i8*, i8** %252, align 8
  tail call void @_ZdlPv(i8* %253) #15
  %254 = load i8**, i8*** %137, align 8
  %255 = getelementptr i8*, i8** %254, i64 -1
  store i8** %255, i8*** %137, align 8
  br label %597

256:                                              ; preds = %61
  %257 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %258 = bitcast i8*** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast i8*** %10 to i64*
  %261 = sub i64 %259, %19
  %262 = icmp eq i64 %261, 0
  %263 = shl i64 %261, 9
  %264 = add i64 %263, -1
  %265 = select i1 %262, i64 0, i64 %264
  %266 = icmp eq i64 %265, %8
  %267 = inttoptr i64 %259 to i8**
  br i1 %266, label %268, label %275

268:                                              ; preds = %256
  %269 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %269) #16
  %270 = load i64, i64* %4, align 8
  %271 = load i64, i64* %6, align 8
  %272 = load i8**, i8*** %10, align 8
  %273 = load i8**, i8*** %257, align 8
  %274 = add i64 %271, %270
  br label %275

275:                                              ; preds = %268, %256
  %276 = phi i64 [ %274, %268 ], [ %8, %256 ]
  %277 = phi i8** [ %273, %268 ], [ %267, %256 ]
  %278 = phi i8** [ %272, %268 ], [ %11, %256 ]
  %279 = icmp eq i8** %277, %278
  br i1 %279, label %286, label %280

280:                                              ; preds = %275
  %281 = lshr i64 %276, 12
  %282 = getelementptr inbounds i8*, i8** %278, i64 %281
  %283 = load i8*, i8** %282, align 8
  %284 = and i64 %276, 4095
  %285 = getelementptr inbounds i8, i8* %283, i64 %284
  br label %286

286:                                              ; preds = %275, %280
  %287 = phi i8* [ %285, %280 ], [ null, %275 ]
  store i8 0, i8* %287, align 1
  %288 = load i64, i64* %4, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %4, align 8
  %290 = getelementptr inbounds %class.UnreachableCodeEliminator, %class.UnreachableCodeEliminator* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %291 = bitcast i8*** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast i8*** %28 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = sub i64 %292, %294
  %296 = icmp eq i64 %295, 0
  %297 = shl i64 %295, 9
  %298 = add i64 %297, -1
  %299 = select i1 %296, i64 0, i64 %298
  %300 = load i64, i64* %24, align 8
  %301 = load i64, i64* %22, align 8
  %302 = add i64 %301, %300
  %303 = icmp eq i64 %299, %302
  %304 = inttoptr i64 %294 to i8**
  %305 = inttoptr i64 %292 to i8**
  br i1 %303, label %306, label %313

306:                                              ; preds = %286
  %307 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %21, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %307) #16
  %308 = load i64, i64* %22, align 8
  %309 = load i64, i64* %24, align 8
  %310 = load i8**, i8*** %28, align 8
  %311 = load i8**, i8*** %290, align 8
  %312 = add i64 %309, %308
  br label %313

313:                                              ; preds = %306, %286
  %314 = phi i64 [ %312, %306 ], [ %302, %286 ]
  %315 = phi i8** [ %311, %306 ], [ %305, %286 ]
  %316 = phi i8** [ %310, %306 ], [ %304, %286 ]
  %317 = icmp eq i8** %315, %316
  br i1 %317, label %324, label %318

318:                                              ; preds = %313
  %319 = lshr i64 %314, 12
  %320 = getelementptr inbounds i8*, i8** %316, i64 %319
  %321 = load i8*, i8** %320, align 8
  %322 = and i64 %314, 4095
  %323 = getelementptr inbounds i8, i8* %321, i64 %322
  br label %324

324:                                              ; preds = %313, %318
  %325 = phi i8* [ %323, %318 ], [ null, %313 ]
  store i8 0, i8* %325, align 1
  %326 = load i64, i64* %22, align 8
  %327 = add i64 %326, 1
  store i64 %327, i64* %22, align 8
  %328 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %63, i64 1, i32 0, i32 1
  %329 = bitcast i32* %328 to %"class.SkSL::Statement"**
  %330 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %329, align 8
  %331 = icmp eq %"class.SkSL::Statement"* %330, null
  br i1 %331, label %341, label %332

332:                                              ; preds = %324
  %333 = bitcast i32* %328 to %"class.std::__1::unique_ptr.213"*
  %334 = bitcast %class.UnreachableCodeEliminator* %0 to i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)***
  %335 = load i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)**, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*** %334, align 8
  %336 = getelementptr inbounds i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)** %335, i64 6
  %337 = load i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)** %336, align 8
  %338 = tail call zeroext i1 %337(%class.UnreachableCodeEliminator* %0, %"class.std::__1::unique_ptr.213"* dereferenceable(8) %333) #16
  %339 = zext i1 %338 to i32
  %340 = load i64, i64* %22, align 8
  br label %341

341:                                              ; preds = %324, %332
  %342 = phi i64 [ %327, %324 ], [ %340, %332 ]
  %343 = phi i32 [ 0, %324 ], [ %339, %332 ]
  %344 = load i64, i64* %4, align 8
  %345 = load i64, i64* %6, align 8
  %346 = add i64 %344, -1
  %347 = add i64 %346, %345
  %348 = load i8**, i8*** %10, align 8
  %349 = lshr i64 %347, 12
  %350 = getelementptr inbounds i8*, i8** %348, i64 %349
  %351 = load i8*, i8** %350, align 8
  %352 = and i64 %347, 4095
  %353 = getelementptr inbounds i8, i8* %351, i64 %352
  %354 = load i8, i8* %353, align 1, !range !26
  %355 = icmp ne i8 %354, 0
  %356 = load i64, i64* %24, align 8
  %357 = add i64 %342, -1
  %358 = add i64 %357, %356
  %359 = load i8**, i8*** %28, align 8
  %360 = lshr i64 %358, 12
  %361 = getelementptr inbounds i8*, i8** %359, i64 %360
  %362 = load i8*, i8** %361, align 8
  %363 = and i64 %358, 4095
  %364 = getelementptr inbounds i8, i8* %362, i64 %363
  %365 = load i8, i8* %364, align 1, !range !26
  %366 = icmp ne i8 %365, 0
  store i64 %346, i64* %4, align 8
  %367 = load i64, i64* %258, align 8
  %368 = ptrtoint i8** %348 to i64
  %369 = sub i64 %367, %368
  %370 = icmp eq i64 %369, 0
  %371 = shl i64 %369, 9
  %372 = add i64 %371, -1
  %373 = select i1 %370, i64 0, i64 %372
  %374 = sub i64 1, %344
  %375 = sub i64 %374, %345
  %376 = add i64 %375, %373
  %377 = icmp ult i64 %376, 8192
  %378 = ptrtoint i8** %359 to i64
  br i1 %377, label %390, label %379

379:                                              ; preds = %341
  %380 = inttoptr i64 %367 to i8**
  %381 = getelementptr inbounds i8*, i8** %380, i64 -1
  %382 = load i8*, i8** %381, align 8
  tail call void @_ZdlPv(i8* %382) #15
  %383 = load i8**, i8*** %257, align 8
  %384 = getelementptr i8*, i8** %383, i64 -1
  store i8** %384, i8*** %257, align 8
  %385 = load i64, i64* %22, align 8
  %386 = load i64, i64* %24, align 8
  %387 = load i64, i64* %293, align 8
  %388 = ptrtoint i8** %384 to i64
  %389 = add i64 %385, -1
  br label %390

390:                                              ; preds = %341, %379
  %391 = phi i64 [ %357, %341 ], [ %389, %379 ]
  %392 = phi i64 [ %367, %341 ], [ %388, %379 ]
  %393 = phi i64 [ %378, %341 ], [ %387, %379 ]
  %394 = phi i64 [ %356, %341 ], [ %386, %379 ]
  %395 = phi i64 [ %342, %341 ], [ %385, %379 ]
  store i64 %391, i64* %22, align 8
  %396 = load i64, i64* %291, align 8
  %397 = sub i64 %396, %393
  %398 = icmp eq i64 %397, 0
  %399 = shl i64 %397, 9
  %400 = add i64 %399, -1
  %401 = select i1 %398, i64 0, i64 %400
  %402 = sub i64 1, %395
  %403 = sub i64 %402, %394
  %404 = add i64 %403, %401
  %405 = icmp ult i64 %404, 8192
  br i1 %405, label %413, label %406

406:                                              ; preds = %390
  %407 = inttoptr i64 %396 to i8**
  %408 = getelementptr inbounds i8*, i8** %407, i64 -1
  %409 = load i8*, i8** %408, align 8
  tail call void @_ZdlPv(i8* %409) #15
  %410 = load i8**, i8*** %290, align 8
  %411 = getelementptr i8*, i8** %410, i64 -1
  store i8** %411, i8*** %290, align 8
  %412 = load i64, i64* %258, align 8
  br label %413

413:                                              ; preds = %390, %406
  %414 = phi i64 [ %392, %390 ], [ %412, %406 ]
  %415 = load i64, i64* %260, align 8
  %416 = sub i64 %414, %415
  %417 = icmp eq i64 %416, 0
  %418 = shl i64 %416, 9
  %419 = add i64 %418, -1
  %420 = select i1 %417, i64 0, i64 %419
  %421 = load i64, i64* %6, align 8
  %422 = load i64, i64* %4, align 8
  %423 = add i64 %422, %421
  %424 = icmp eq i64 %420, %423
  %425 = inttoptr i64 %415 to i8**
  %426 = inttoptr i64 %414 to i8**
  br i1 %424, label %427, label %434

427:                                              ; preds = %413
  %428 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %428) #16
  %429 = load i64, i64* %4, align 8
  %430 = load i64, i64* %6, align 8
  %431 = load i8**, i8*** %10, align 8
  %432 = load i8**, i8*** %257, align 8
  %433 = add i64 %430, %429
  br label %434

434:                                              ; preds = %427, %413
  %435 = phi i64 [ %433, %427 ], [ %423, %413 ]
  %436 = phi i8** [ %432, %427 ], [ %426, %413 ]
  %437 = phi i8** [ %431, %427 ], [ %425, %413 ]
  %438 = icmp eq i8** %436, %437
  br i1 %438, label %445, label %439

439:                                              ; preds = %434
  %440 = lshr i64 %435, 12
  %441 = getelementptr inbounds i8*, i8** %437, i64 %440
  %442 = load i8*, i8** %441, align 8
  %443 = and i64 %435, 4095
  %444 = getelementptr inbounds i8, i8* %442, i64 %443
  br label %445

445:                                              ; preds = %434, %439
  %446 = phi i8* [ %444, %439 ], [ null, %434 ]
  store i8 0, i8* %446, align 1
  %447 = load i64, i64* %4, align 8
  %448 = add i64 %447, 1
  store i64 %448, i64* %4, align 8
  %449 = load i64, i64* %291, align 8
  %450 = load i64, i64* %293, align 8
  %451 = sub i64 %449, %450
  %452 = icmp eq i64 %451, 0
  %453 = shl i64 %451, 9
  %454 = add i64 %453, -1
  %455 = select i1 %452, i64 0, i64 %454
  %456 = load i64, i64* %24, align 8
  %457 = load i64, i64* %22, align 8
  %458 = add i64 %457, %456
  %459 = icmp eq i64 %455, %458
  %460 = inttoptr i64 %450 to i8**
  %461 = inttoptr i64 %449 to i8**
  br i1 %459, label %462, label %469

462:                                              ; preds = %445
  %463 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %21, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"* %463) #16
  %464 = load i64, i64* %22, align 8
  %465 = load i64, i64* %24, align 8
  %466 = load i8**, i8*** %28, align 8
  %467 = load i8**, i8*** %290, align 8
  %468 = add i64 %465, %464
  br label %469

469:                                              ; preds = %462, %445
  %470 = phi i64 [ %468, %462 ], [ %458, %445 ]
  %471 = phi i8** [ %467, %462 ], [ %461, %445 ]
  %472 = phi i8** [ %466, %462 ], [ %460, %445 ]
  %473 = icmp eq i8** %471, %472
  br i1 %473, label %480, label %474

474:                                              ; preds = %469
  %475 = lshr i64 %470, 12
  %476 = getelementptr inbounds i8*, i8** %472, i64 %475
  %477 = load i8*, i8** %476, align 8
  %478 = and i64 %470, 4095
  %479 = getelementptr inbounds i8, i8* %477, i64 %478
  br label %480

480:                                              ; preds = %469, %474
  %481 = phi i8* [ %479, %474 ], [ null, %469 ]
  store i8 0, i8* %481, align 1
  %482 = load i64, i64* %22, align 8
  %483 = add i64 %482, 1
  store i64 %483, i64* %22, align 8
  %484 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %63, i64 2
  %485 = bitcast %"class.SkSL::Statement"* %484 to %"class.SkSL::Statement"**
  %486 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %485, align 8
  %487 = icmp eq %"class.SkSL::Statement"* %486, null
  br i1 %487, label %497, label %488

488:                                              ; preds = %480
  %489 = bitcast %"class.SkSL::Statement"* %484 to %"class.std::__1::unique_ptr.213"*
  %490 = bitcast %class.UnreachableCodeEliminator* %0 to i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)***
  %491 = load i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)**, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*** %490, align 8
  %492 = getelementptr inbounds i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)** %491, i64 6
  %493 = load i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)*, i1 (%class.UnreachableCodeEliminator*, %"class.std::__1::unique_ptr.213"*)** %492, align 8
  %494 = tail call zeroext i1 %493(%class.UnreachableCodeEliminator* %0, %"class.std::__1::unique_ptr.213"* dereferenceable(8) %489) #16
  %495 = zext i1 %494 to i32
  %496 = load i64, i64* %22, align 8
  br label %497

497:                                              ; preds = %480, %488
  %498 = phi i64 [ %483, %480 ], [ %496, %488 ]
  %499 = phi i32 [ 0, %480 ], [ %495, %488 ]
  %500 = or i32 %499, %343
  %501 = icmp ne i32 %500, 0
  %502 = load i64, i64* %4, align 8
  %503 = load i64, i64* %6, align 8
  %504 = add i64 %502, -1
  %505 = add i64 %504, %503
  %506 = load i8**, i8*** %10, align 8
  %507 = lshr i64 %505, 12
  %508 = getelementptr inbounds i8*, i8** %506, i64 %507
  %509 = load i8*, i8** %508, align 8
  %510 = and i64 %505, 4095
  %511 = getelementptr inbounds i8, i8* %509, i64 %510
  %512 = load i8, i8* %511, align 1, !range !26
  %513 = icmp ne i8 %512, 0
  %514 = load i64, i64* %24, align 8
  %515 = add i64 %498, -1
  %516 = add i64 %515, %514
  %517 = load i8**, i8*** %28, align 8
  %518 = lshr i64 %516, 12
  %519 = getelementptr inbounds i8*, i8** %517, i64 %518
  %520 = load i8*, i8** %519, align 8
  %521 = and i64 %516, 4095
  %522 = getelementptr inbounds i8, i8* %520, i64 %521
  %523 = load i8, i8* %522, align 1, !range !26
  %524 = icmp ne i8 %523, 0
  store i64 %504, i64* %4, align 8
  %525 = load i64, i64* %258, align 8
  %526 = ptrtoint i8** %506 to i64
  %527 = sub i64 %525, %526
  %528 = icmp eq i64 %527, 0
  %529 = shl i64 %527, 9
  %530 = add i64 %529, -1
  %531 = select i1 %528, i64 0, i64 %530
  %532 = sub i64 1, %502
  %533 = sub i64 %532, %503
  %534 = add i64 %533, %531
  %535 = icmp ult i64 %534, 8192
  %536 = ptrtoint i8** %517 to i64
  br i1 %535, label %547, label %537

537:                                              ; preds = %497
  %538 = inttoptr i64 %525 to i8**
  %539 = getelementptr inbounds i8*, i8** %538, i64 -1
  %540 = load i8*, i8** %539, align 8
  tail call void @_ZdlPv(i8* %540) #15
  %541 = load i8**, i8*** %257, align 8
  %542 = getelementptr i8*, i8** %541, i64 -1
  store i8** %542, i8*** %257, align 8
  %543 = load i64, i64* %22, align 8
  %544 = load i64, i64* %24, align 8
  %545 = load i64, i64* %293, align 8
  %546 = add i64 %543, -1
  br label %547

547:                                              ; preds = %497, %537
  %548 = phi i64 [ %515, %497 ], [ %546, %537 ]
  %549 = phi i64 [ %536, %497 ], [ %545, %537 ]
  %550 = phi i64 [ %514, %497 ], [ %544, %537 ]
  %551 = phi i64 [ %498, %497 ], [ %543, %537 ]
  store i64 %548, i64* %22, align 8
  %552 = load i64, i64* %291, align 8
  %553 = sub i64 %552, %549
  %554 = icmp eq i64 %553, 0
  %555 = shl i64 %553, 9
  %556 = add i64 %555, -1
  %557 = select i1 %554, i64 0, i64 %556
  %558 = sub i64 1, %551
  %559 = sub i64 %558, %550
  %560 = add i64 %559, %557
  %561 = icmp ult i64 %560, 8192
  br i1 %561, label %568, label %562

562:                                              ; preds = %547
  %563 = inttoptr i64 %552 to i8**
  %564 = getelementptr inbounds i8*, i8** %563, i64 -1
  %565 = load i8*, i8** %564, align 8
  tail call void @_ZdlPv(i8* %565) #15
  %566 = load i8**, i8*** %290, align 8
  %567 = getelementptr i8*, i8** %566, i64 -1
  store i8** %567, i8*** %290, align 8
  br label %568

568:                                              ; preds = %547, %562
  %569 = and i1 %355, %513
  %570 = zext i1 %569 to i8
  %571 = load i64, i64* %4, align 8
  %572 = load i64, i64* %6, align 8
  %573 = add i64 %571, -1
  %574 = add i64 %573, %572
  %575 = load i8**, i8*** %10, align 8
  %576 = lshr i64 %574, 12
  %577 = getelementptr inbounds i8*, i8** %575, i64 %576
  %578 = load i8*, i8** %577, align 8
  %579 = and i64 %574, 4095
  %580 = getelementptr inbounds i8, i8* %578, i64 %579
  %581 = load i8, i8* %580, align 1, !range !26
  %582 = or i8 %581, %570
  store i8 %582, i8* %580, align 1
  %583 = and i1 %366, %524
  %584 = zext i1 %583 to i8
  %585 = load i64, i64* %22, align 8
  %586 = load i64, i64* %24, align 8
  %587 = add i64 %585, -1
  %588 = add i64 %587, %586
  %589 = load i8**, i8*** %28, align 8
  %590 = lshr i64 %588, 12
  %591 = getelementptr inbounds i8*, i8** %589, i64 %590
  %592 = load i8*, i8** %591, align 8
  %593 = and i64 %588, 4095
  %594 = getelementptr inbounds i8, i8* %592, i64 %593
  %595 = load i8, i8* %594, align 1, !range !26
  %596 = or i8 %595, %584
  store i8 %596, i8* %594, align 1
  br label %597

597:                                              ; preds = %250, %235, %130, %105, %44, %56, %66, %67, %61, %38, %568, %68
  %598 = phi i1 [ %74, %68 ], [ %501, %568 ], [ false, %38 ], [ false, %61 ], [ false, %67 ], [ false, %66 ], [ false, %56 ], [ false, %44 ], [ %115, %105 ], [ %115, %130 ], [ %214, %235 ], [ %214, %250 ]
  ret i1 %598
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.666", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 4095
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -4096
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i8**, i8*** %10, align 8
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8*, i8** %11, i64 1
  store i8** %14, i8*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i8**, i8*** %17, align 8
  %19 = icmp eq i8** %16, %18
  %20 = ptrtoint i8** %18 to i64
  %21 = bitcast i8** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = icmp ugt i8** %14, %24
  %26 = ptrtoint i8** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i8** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i8*, i8** %14, i64 %32
  %34 = ptrtoint i8** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i8** %33 to i8*
  %40 = bitcast i8** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #16
  %41 = load i8**, i8*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i8** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i8*, i8** %33, i64 %36
  store i8** %44, i8*** %15, align 8
  %45 = getelementptr inbounds i8*, i8** %43, i64 %32
  store i8** %45, i8*** %10, align 8
  %46 = bitcast i8** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i8*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #15
  %60 = bitcast i8* %59 to i8**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i8*, i8** %60, i64 %57
  %63 = ptrtoint i8** %62 to i64
  %64 = getelementptr inbounds i8*, i8** %60, i64 %53
  %65 = ptrtoint i8** %64 to i64
  %66 = ptrtoint i8** %14 to i64
  %67 = ptrtoint i8** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i8*, i8** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i8** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i8** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i8** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i8*, i8** %79, i64 1
  %87 = ptrtoint i8** %86 to i64
  %88 = getelementptr inbounds i8*, i8** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !37

91:                                               ; preds = %78
  %92 = ptrtoint i8** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i8** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i8** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i8** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i8** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i8*, i8** %99, i64 1
  %106 = getelementptr inbounds i8*, i8** %101, i64 1
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i8*, i8** %99, i64 2
  %111 = getelementptr inbounds i8*, i8** %101, i64 2
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i8*, i8** %99, i64 3
  %116 = getelementptr inbounds i8*, i8** %101, i64 3
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %99, i64 4
  %121 = getelementptr inbounds i8*, i8** %101, i64 4
  %122 = bitcast i8** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i8** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i8*, i8** %99, i64 5
  %126 = getelementptr inbounds i8*, i8** %101, i64 5
  %127 = bitcast i8** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i8*, i8** %99, i64 6
  %131 = getelementptr inbounds i8*, i8** %101, i64 6
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i8** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i8*, i8** %99, i64 7
  %136 = getelementptr inbounds i8*, i8** %101, i64 7
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i8*, i8** %99, i64 8
  %141 = ptrtoint i8** %140 to i64
  %142 = getelementptr inbounds i8*, i8** %101, i64 8
  %143 = icmp eq i8** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i8** %70 to i64
  %146 = load i8**, i8*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i8** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i8*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i8*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i8** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i8** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  %156 = bitcast i8*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i8**, i8*** %15, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 1
  store i8** %161, i8*** %15, align 8
  br label %458

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i8*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i8*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i8*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i8**
  %181 = inttoptr i64 %169 to i8**
  br i1 %179, label %182, label %335

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %187, label %184

184:                                              ; preds = %182
  %185 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #16
  %186 = tail call i8* @_Znwm(i64 4096) #15
  store i8* %186, i8** %2, align 8
  call void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #16
  br label %458

187:                                              ; preds = %182
  %188 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #16
  %189 = tail call i8* @_Znwm(i64 4096) #15
  store i8* %189, i8** %3, align 8
  call void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i8** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #16
  %190 = load i8**, i8*** %167, align 8
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds i8*, i8** %190, i64 1
  store i8** %193, i8*** %167, align 8
  %194 = load i8**, i8*** %164, align 8
  %195 = load i8**, i8*** %172, align 8
  %196 = icmp eq i8** %194, %195
  %197 = ptrtoint i8** %195 to i64
  %198 = bitcast i8** %194 to i64*
  br i1 %196, label %199, label %331

199:                                              ; preds = %187
  %200 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %201 = load i8**, i8*** %200, align 8
  %202 = icmp ugt i8** %193, %201
  %203 = ptrtoint i8** %201 to i64
  br i1 %202, label %204, label %224

204:                                              ; preds = %199
  %205 = ptrtoint i8** %193 to i64
  %206 = sub i64 %205, %203
  %207 = ashr exact i64 %206, 3
  %208 = add nsw i64 %207, 1
  %209 = sdiv i64 %208, -2
  %210 = getelementptr inbounds i8*, i8** %193, i64 %209
  %211 = ptrtoint i8** %194 to i64
  %212 = sub i64 %211, %205
  %213 = ashr exact i64 %212, 3
  %214 = icmp eq i64 %212, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %204
  %216 = bitcast i8** %210 to i8*
  %217 = bitcast i8** %193 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 %212, i1 false) #16
  %218 = load i8**, i8*** %167, align 8
  br label %219

219:                                              ; preds = %215, %204
  %220 = phi i8** [ %193, %204 ], [ %218, %215 ]
  %221 = getelementptr inbounds i8*, i8** %210, i64 %213
  store i8** %221, i8*** %164, align 8
  %222 = getelementptr inbounds i8*, i8** %220, i64 %209
  store i8** %222, i8*** %167, align 8
  %223 = bitcast i8** %221 to i64*
  br label %331

224:                                              ; preds = %199
  %225 = sub i64 %197, %203
  %226 = ashr exact i64 %225, 2
  %227 = icmp eq i64 %225, 0
  %228 = select i1 %227, i64 1, i64 %226
  %229 = icmp ugt i64 %228, 2305843009213693951
  br i1 %229, label %230, label %231

230:                                              ; preds = %224
  call void @abort() #17
  unreachable

231:                                              ; preds = %224
  %232 = lshr i64 %228, 2
  %233 = shl i64 %228, 3
  %234 = call i8* @_Znwm(i64 %233) #15
  %235 = bitcast i8* %234 to i8**
  %236 = ptrtoint i8* %234 to i64
  %237 = getelementptr inbounds i8*, i8** %235, i64 %232
  %238 = ptrtoint i8** %237 to i64
  %239 = getelementptr inbounds i8*, i8** %235, i64 %228
  %240 = ptrtoint i8** %239 to i64
  %241 = ptrtoint i8** %193 to i64
  %242 = ptrtoint i8** %194 to i64
  %243 = sub i64 %242, %241
  %244 = ashr exact i64 %243, 3
  %245 = getelementptr inbounds i8*, i8** %237, i64 %244
  %246 = icmp eq i64 %243, 0
  br i1 %246, label %322, label %247

247:                                              ; preds = %231
  %248 = add i64 %243, -8
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 7
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %268, label %253

253:                                              ; preds = %247, %253
  %254 = phi i8** [ %261, %253 ], [ %237, %247 ]
  %255 = phi i64 [ %262, %253 ], [ %238, %247 ]
  %256 = phi i8** [ %263, %253 ], [ %193, %247 ]
  %257 = phi i64 [ %264, %253 ], [ %251, %247 ]
  %258 = bitcast i8** %256 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = inttoptr i64 %255 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds i8*, i8** %254, i64 1
  %262 = ptrtoint i8** %261 to i64
  %263 = getelementptr inbounds i8*, i8** %256, i64 1
  %264 = add i64 %257, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %253, !llvm.loop !38

266:                                              ; preds = %253
  %267 = ptrtoint i8** %261 to i64
  br label %268

268:                                              ; preds = %247, %266
  %269 = phi i8** [ %237, %247 ], [ %261, %266 ]
  %270 = phi i64 [ %238, %247 ], [ %267, %266 ]
  %271 = phi i8** [ %193, %247 ], [ %263, %266 ]
  %272 = icmp ult i64 %248, 56
  br i1 %272, label %319, label %273

273:                                              ; preds = %268, %273
  %274 = phi i8** [ %315, %273 ], [ %269, %268 ]
  %275 = phi i64 [ %316, %273 ], [ %270, %268 ]
  %276 = phi i8** [ %317, %273 ], [ %271, %268 ]
  %277 = bitcast i8** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = inttoptr i64 %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds i8*, i8** %274, i64 1
  %281 = getelementptr inbounds i8*, i8** %276, i64 1
  %282 = bitcast i8** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast i8** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds i8*, i8** %274, i64 2
  %286 = getelementptr inbounds i8*, i8** %276, i64 2
  %287 = bitcast i8** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast i8** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds i8*, i8** %274, i64 3
  %291 = getelementptr inbounds i8*, i8** %276, i64 3
  %292 = bitcast i8** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast i8** %290 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds i8*, i8** %274, i64 4
  %296 = getelementptr inbounds i8*, i8** %276, i64 4
  %297 = bitcast i8** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast i8** %295 to i64*
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds i8*, i8** %274, i64 5
  %301 = getelementptr inbounds i8*, i8** %276, i64 5
  %302 = bitcast i8** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast i8** %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds i8*, i8** %274, i64 6
  %306 = getelementptr inbounds i8*, i8** %276, i64 6
  %307 = bitcast i8** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast i8** %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds i8*, i8** %274, i64 7
  %311 = getelementptr inbounds i8*, i8** %276, i64 7
  %312 = bitcast i8** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast i8** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds i8*, i8** %274, i64 8
  %316 = ptrtoint i8** %315 to i64
  %317 = getelementptr inbounds i8*, i8** %276, i64 8
  %318 = icmp eq i8** %245, %315
  br i1 %318, label %319, label %273

319:                                              ; preds = %273, %268
  %320 = ptrtoint i8** %245 to i64
  %321 = load i8**, i8*** %200, align 8
  br label %322

322:                                              ; preds = %319, %231
  %323 = phi i8** [ %321, %319 ], [ %201, %231 ]
  %324 = phi i64 [ %320, %319 ], [ %238, %231 ]
  store i64 %236, i64* %175, align 8
  store i64 %238, i64* %168, align 8
  store i64 %324, i64* %165, align 8
  store i64 %240, i64* %173, align 8
  %325 = icmp eq i8** %323, null
  %326 = inttoptr i64 %324 to i64*
  br i1 %325, label %331, label %327

327:                                              ; preds = %322
  %328 = bitcast i8** %323 to i8*
  call void @_ZdlPv(i8* %328) #15
  %329 = bitcast i8*** %164 to i64**
  %330 = load i64*, i64** %329, align 8
  br label %331

331:                                              ; preds = %187, %219, %322, %327
  %332 = phi i64* [ %330, %327 ], [ %326, %322 ], [ %223, %219 ], [ %198, %187 ]
  store i64 %192, i64* %332, align 8
  %333 = load i8**, i8*** %164, align 8
  %334 = getelementptr inbounds i8*, i8** %333, i64 1
  store i8** %334, i8*** %164, align 8
  br label %458

335:                                              ; preds = %162
  %336 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %336) #16
  %337 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %4, i64 0, i32 1
  %338 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %4, i64 0, i32 2
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %4, i64 0, i32 3, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %4, i64 0, i32 3, i32 1, i32 0
  %341 = ashr exact i64 %177, 2
  %342 = icmp eq i64 %177, 0
  %343 = select i1 %342, i64 1, i64 %341
  %344 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %345 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 -86, i64 24, i1 false)
  store i8** null, i8*** %339, align 8
  %346 = bitcast %"class.std::__1::allocator.294"** %340 to %"class.std::__1::__compressed_pair.291"**
  store %"class.std::__1::__compressed_pair.291"* %344, %"class.std::__1::__compressed_pair.291"** %346, align 8
  %347 = icmp ugt i64 %343, 2305843009213693951
  br i1 %347, label %348, label %349

348:                                              ; preds = %335
  tail call void @abort() #17
  unreachable

349:                                              ; preds = %335
  %350 = shl i64 %343, 3
  %351 = tail call i8* @_Znwm(i64 %350) #15
  %352 = bitcast i8* %351 to i8**
  %353 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i8**
  store i8* %351, i8** %353, align 8
  %354 = getelementptr inbounds i8*, i8** %352, i64 %171
  store i8** %354, i8*** %338, align 8
  store i8** %354, i8*** %337, align 8
  %355 = getelementptr inbounds i8*, i8** %352, i64 %343
  store i8** %355, i8*** %339, align 8
  %356 = tail call i8* @_Znwm(i64 4096) #15
  %357 = ptrtoint i8* %356 to i64
  %358 = icmp eq i64 %171, %343
  %359 = ptrtoint i8** %355 to i64
  %360 = ptrtoint i8* %351 to i64
  %361 = ptrtoint i8** %354 to i64
  br i1 %358, label %362, label %396

362:                                              ; preds = %349
  %363 = icmp ugt i8** %354, %352
  br i1 %363, label %364, label %371

364:                                              ; preds = %362
  %365 = sub i64 %361, %360
  %366 = ashr exact i64 %365, 3
  %367 = add nsw i64 %366, 1
  %368 = sdiv i64 %367, -2
  %369 = getelementptr inbounds i8*, i8** %354, i64 %368
  store i8** %369, i8*** %338, align 8
  store i8** %369, i8*** %337, align 8
  %370 = ptrtoint i8** %369 to i64
  br label %396

371:                                              ; preds = %362
  %372 = sub i64 %359, %360
  %373 = ashr exact i64 %372, 2
  %374 = icmp eq i64 %372, 0
  %375 = select i1 %374, i64 1, i64 %373
  %376 = icmp ugt i64 %375, 2305843009213693951
  br i1 %376, label %377, label %378

377:                                              ; preds = %371
  tail call void @abort() #17
  unreachable

378:                                              ; preds = %371
  %379 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i64*
  %380 = bitcast i8*** %339 to i64*
  %381 = lshr i64 %375, 2
  %382 = shl i64 %375, 3
  %383 = tail call i8* @_Znwm(i64 %382) #15
  %384 = bitcast i8* %383 to i8**
  %385 = ptrtoint i8* %383 to i64
  %386 = getelementptr inbounds i8*, i8** %384, i64 %381
  %387 = ptrtoint i8** %386 to i64
  %388 = getelementptr inbounds i8*, i8** %384, i64 %375
  %389 = ptrtoint i8** %388 to i64
  store i64 %385, i64* %379, align 8
  %390 = bitcast i8*** %337 to i64*
  store i64 %387, i64* %390, align 8
  %391 = bitcast i8*** %338 to i64*
  store i64 %387, i64* %391, align 8
  store i64 %389, i64* %380, align 8
  tail call void @_ZdlPv(i8* nonnull %351) #15
  %392 = load i8**, i8*** %164, align 8
  %393 = load i8**, i8*** %167, align 8
  %394 = ptrtoint i8** %393 to i64
  %395 = ptrtoint i8** %392 to i64
  br label %396

396:                                              ; preds = %349, %364, %378
  %397 = phi i64 [ %389, %378 ], [ %359, %364 ], [ %359, %349 ]
  %398 = phi i64 [ %395, %378 ], [ %166, %364 ], [ %166, %349 ]
  %399 = phi i64 [ %387, %378 ], [ %370, %364 ], [ %361, %349 ]
  %400 = phi i64 [ %394, %378 ], [ %169, %364 ], [ %169, %349 ]
  %401 = phi i64 [ %385, %378 ], [ %360, %364 ], [ %360, %349 ]
  %402 = phi i8** [ %393, %378 ], [ %181, %364 ], [ %181, %349 ]
  %403 = phi i8** [ %392, %378 ], [ %180, %364 ], [ %180, %349 ]
  %404 = phi i8** [ %386, %378 ], [ %369, %364 ], [ %354, %349 ]
  %405 = bitcast i8** %404 to i64*
  store i64 %357, i64* %405, align 8
  %406 = getelementptr inbounds i8*, i8** %404, i64 1
  store i8** %406, i8*** %338, align 8
  %407 = icmp eq i8** %403, %402
  br i1 %407, label %408, label %453

408:                                              ; preds = %396
  %409 = ptrtoint i8** %406 to i64
  %410 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i64*
  %411 = bitcast i8*** %337 to i64*
  %412 = bitcast i8*** %338 to i64*
  %413 = bitcast i8*** %339 to i64*
  br label %425

414:                                              ; preds = %453
  %415 = ptrtoint i8** %456 to i64
  %416 = bitcast %"struct.std::__1::__split_buffer.666"* %4 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast i8*** %337 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = load i64, i64* %165, align 8
  %421 = bitcast i8*** %338 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast i8*** %339 to i64*
  %424 = load i64, i64* %423, align 8
  br label %425

425:                                              ; preds = %408, %414
  %426 = phi i64* [ %413, %408 ], [ %423, %414 ]
  %427 = phi i64* [ %412, %408 ], [ %421, %414 ]
  %428 = phi i64* [ %411, %408 ], [ %418, %414 ]
  %429 = phi i64* [ %410, %408 ], [ %416, %414 ]
  %430 = phi i64 [ %397, %408 ], [ %424, %414 ]
  %431 = phi i64 [ %409, %408 ], [ %422, %414 ]
  %432 = phi i64 [ %398, %408 ], [ %420, %414 ]
  %433 = phi i64 [ %399, %408 ], [ %419, %414 ]
  %434 = phi i64 [ %400, %408 ], [ %415, %414 ]
  %435 = phi i64 [ %401, %408 ], [ %417, %414 ]
  %436 = load i64, i64* %175, align 8
  store i64 %435, i64* %175, align 8
  store i64 %436, i64* %429, align 8
  store i64 %433, i64* %168, align 8
  store i64 %434, i64* %428, align 8
  store i64 %431, i64* %165, align 8
  store i64 %432, i64* %427, align 8
  %437 = load i64, i64* %173, align 8
  store i64 %430, i64* %173, align 8
  store i64 %437, i64* %426, align 8
  %438 = inttoptr i64 %434 to i8**
  %439 = inttoptr i64 %432 to i8**
  %440 = icmp eq i8** %439, %438
  br i1 %440, label %448, label %441

441:                                              ; preds = %425
  %442 = getelementptr i8*, i8** %439, i64 -1
  %443 = ptrtoint i8** %442 to i64
  %444 = sub i64 %443, %434
  %445 = lshr i64 %444, 3
  %446 = xor i64 %445, -1
  %447 = getelementptr i8*, i8** %439, i64 %446
  store i8** %447, i8*** %338, align 8
  br label %448

448:                                              ; preds = %441, %425
  %449 = icmp eq i64 %436, 0
  br i1 %449, label %452, label %450

450:                                              ; preds = %448
  %451 = inttoptr i64 %436 to i8*
  call void @_ZdlPv(i8* %451) #15
  br label %452

452:                                              ; preds = %448, %450
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %336) #16
  br label %458

453:                                              ; preds = %396, %453
  %454 = phi i8** [ %455, %453 ], [ %403, %396 ]
  %455 = getelementptr inbounds i8*, i8** %454, i64 -1
  call void @_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.666"* nonnull %4, i8** dereferenceable(8) %455)
  %456 = load i8**, i8*** %167, align 8
  %457 = icmp eq i8** %455, %456
  br i1 %457, label %414, label %453

458:                                              ; preds = %452, %331, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  %9 = bitcast i8** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i8**, i8*** %13, align 8
  %15 = icmp ugt i8** %12, %14
  %16 = ptrtoint i8** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i8** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i8*, i8** %12, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i8** %23 to i8*
  %30 = bitcast i8** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #16
  %31 = load i8**, i8*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i8** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i8*, i8** %23, i64 %26
  store i8** %34, i8*** %3, align 8
  %35 = getelementptr inbounds i8*, i8** %33, i64 %22
  store i8** %35, i8*** %11, align 8
  %36 = bitcast i8** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i8*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to i8**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i8*, i8** %50, i64 %47
  %53 = ptrtoint i8** %52 to i64
  %54 = getelementptr inbounds i8*, i8** %50, i64 %43
  %55 = ptrtoint i8** %54 to i64
  %56 = ptrtoint i8** %12 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i8*, i8** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i8** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i8** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i8** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i8*, i8** %69, i64 1
  %77 = ptrtoint i8** %76 to i64
  %78 = getelementptr inbounds i8*, i8** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !39

81:                                               ; preds = %68
  %82 = ptrtoint i8** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i8** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i8** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i8** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i8** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i8** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i8*, i8** %89, i64 1
  %96 = getelementptr inbounds i8*, i8** %91, i64 1
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i8** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i8*, i8** %89, i64 2
  %101 = getelementptr inbounds i8*, i8** %91, i64 2
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i8** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i8*, i8** %89, i64 3
  %106 = getelementptr inbounds i8*, i8** %91, i64 3
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i8*, i8** %89, i64 4
  %111 = getelementptr inbounds i8*, i8** %91, i64 4
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i8*, i8** %89, i64 5
  %116 = getelementptr inbounds i8*, i8** %91, i64 5
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %89, i64 6
  %121 = getelementptr inbounds i8*, i8** %91, i64 6
  %122 = bitcast i8** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i8** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i8*, i8** %89, i64 7
  %126 = getelementptr inbounds i8*, i8** %91, i64 7
  %127 = bitcast i8** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i8*, i8** %89, i64 8
  %131 = ptrtoint i8** %130 to i64
  %132 = getelementptr inbounds i8*, i8** %91, i64 8
  %133 = icmp eq i8** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i8** %60 to i64
  %136 = load i8**, i8*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i8** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i8*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i8** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i8** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast i8*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i8**, i8*** %3, align 8
  %153 = getelementptr inbounds i8*, i8** %152, i64 1
  store i8** %153, i8*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i8**, i8*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  %14 = icmp ult i8** %11, %13
  %15 = bitcast i8*** %12 to i64*
  %16 = ptrtoint i8** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i8** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i8*, i8** %11, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8*, i8** %23, i64 %29
  %31 = bitcast i8** %30 to i8*
  %32 = bitcast i8** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load i8**, i8*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i8** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i8** [ %30, %27 ], [ %23, %17 ]
  store i8** %36, i8*** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %35, i64 %22
  store i8** %37, i8*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to i8**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i8*, i8** %51, i64 %48
  %54 = ptrtoint i8** %53 to i64
  %55 = getelementptr inbounds i8*, i8** %51, i64 %43
  %56 = ptrtoint i8** %55 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = ptrtoint i8** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i8*, i8** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i8** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i8** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i8** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8*, i8** %70, i64 1
  %78 = ptrtoint i8** %77 to i64
  %79 = getelementptr inbounds i8*, i8** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !40

82:                                               ; preds = %69
  %83 = ptrtoint i8** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i8** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i8** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i8** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i8** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i8*, i8** %90, i64 1
  %97 = getelementptr inbounds i8*, i8** %92, i64 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i8*, i8** %90, i64 2
  %102 = getelementptr inbounds i8*, i8** %92, i64 2
  %103 = bitcast i8** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i8*, i8** %90, i64 3
  %107 = getelementptr inbounds i8*, i8** %92, i64 3
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i8*, i8** %90, i64 4
  %112 = getelementptr inbounds i8*, i8** %92, i64 4
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i8*, i8** %90, i64 5
  %117 = getelementptr inbounds i8*, i8** %92, i64 5
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8*, i8** %90, i64 6
  %122 = getelementptr inbounds i8*, i8** %92, i64 6
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i8*, i8** %90, i64 7
  %127 = getelementptr inbounds i8*, i8** %92, i64 7
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i8*, i8** %90, i64 8
  %132 = ptrtoint i8** %131 to i64
  %133 = getelementptr inbounds i8*, i8** %92, i64 8
  %134 = icmp eq i8** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i8** %61 to i64
  %137 = load i8**, i8*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i8** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i8*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i8** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i8** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load i8**, i8*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i8** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i8*, i8** %148, i64 -1
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i8**, i8*** %3, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 -1
  store i8** %154, i8*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.666"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %0, i64 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %0, i64 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %0, i64 0, i32 2
  %11 = load i8**, i8*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.666", %"struct.std::__1::__split_buffer.666"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  %14 = icmp ult i8** %11, %13
  %15 = bitcast i8*** %12 to i64*
  %16 = ptrtoint i8** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i8** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i8*, i8** %11, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8*, i8** %23, i64 %29
  %31 = bitcast i8** %30 to i8*
  %32 = bitcast i8** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load i8**, i8*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i8** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i8** [ %30, %27 ], [ %23, %17 ]
  store i8** %36, i8*** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %35, i64 %22
  store i8** %37, i8*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.666"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to i8**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i8*, i8** %51, i64 %48
  %54 = ptrtoint i8** %53 to i64
  %55 = getelementptr inbounds i8*, i8** %51, i64 %43
  %56 = ptrtoint i8** %55 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = ptrtoint i8** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i8*, i8** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i8** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i8** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i8** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8*, i8** %70, i64 1
  %78 = ptrtoint i8** %77 to i64
  %79 = getelementptr inbounds i8*, i8** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !41

82:                                               ; preds = %69
  %83 = ptrtoint i8** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i8** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i8** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i8** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i8** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i8*, i8** %90, i64 1
  %97 = getelementptr inbounds i8*, i8** %92, i64 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i8*, i8** %90, i64 2
  %102 = getelementptr inbounds i8*, i8** %92, i64 2
  %103 = bitcast i8** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i8*, i8** %90, i64 3
  %107 = getelementptr inbounds i8*, i8** %92, i64 3
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i8*, i8** %90, i64 4
  %112 = getelementptr inbounds i8*, i8** %92, i64 4
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i8*, i8** %90, i64 5
  %117 = getelementptr inbounds i8*, i8** %92, i64 5
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8*, i8** %90, i64 6
  %122 = getelementptr inbounds i8*, i8** %92, i64 6
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i8*, i8** %90, i64 7
  %127 = getelementptr inbounds i8*, i8** %92, i64 7
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i8*, i8** %90, i64 8
  %132 = ptrtoint i8** %131 to i64
  %133 = getelementptr inbounds i8*, i8** %92, i64 8
  %134 = icmp eq i8** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i8** %61 to i64
  %137 = load i8**, i8*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i8** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i8*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i8** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i8** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load i8**, i8*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i8** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i8*, i8** %148, i64 -1
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i8**, i8*** %3, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 -1
  store i8** %154, i8*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIbNS_5dequeIbNS_9allocatorIbEEEEED2Ev(%"class.std::__1::stack"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i8**, i8*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 12
  %7 = getelementptr inbounds i8*, i8** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %9, %3
  %11 = ptrtoint i8** %9 to i64
  %12 = ptrtoint i8** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i8*, i8** %7, align 8
  %17 = and i64 %5, 4095
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 12
  %23 = getelementptr inbounds i8*, i8** %3, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = and i64 %21, 4095
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i8* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i8*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %64

34:                                               ; preds = %15, %47
  %35 = phi i8* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i8** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 1
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast i8** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i8*, i8** %36, i64 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi i8** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to i8*
  %51 = icmp eq i8* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i8** [ %56, %52 ], [ %3, %28 ]
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #15
  %55 = load i8**, i8*** %2, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 1
  store i8** %56, i8*** %2, align 8
  %57 = load i64, i64* %30, align 8
  %58 = ptrtoint i8** %56 to i64
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = icmp ugt i64 %60, 2
  br i1 %61, label %52, label %62

62:                                               ; preds = %52
  %63 = inttoptr i64 %57 to i8**
  br label %64

64:                                               ; preds = %62, %28
  %65 = phi i8** [ %9, %28 ], [ %63, %62 ]
  %66 = phi i8** [ %3, %28 ], [ %56, %62 ]
  %67 = phi i64 [ %32, %28 ], [ %60, %62 ]
  switch i64 %67, label %71 [
    i64 1, label %69
    i64 2, label %68
  ]

68:                                               ; preds = %64
  br label %69

69:                                               ; preds = %64, %68
  %70 = phi i64 [ 4096, %68 ], [ 2048, %64 ]
  store i64 %70, i64* %4, align 8
  br label %71

71:                                               ; preds = %69, %64
  %72 = icmp eq i8** %66, %65
  br i1 %72, label %90, label %73

73:                                               ; preds = %71, %73
  %74 = phi i8** [ %76, %73 ], [ %66, %71 ]
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #15
  %76 = getelementptr inbounds i8*, i8** %74, i64 1
  %77 = icmp eq i8** %76, %65
  br i1 %77, label %78, label %73

78:                                               ; preds = %73
  %79 = load i8**, i8*** %2, align 8
  %80 = load i8**, i8*** %8, align 8
  %81 = icmp eq i8** %80, %79
  br i1 %81, label %90, label %82

82:                                               ; preds = %78
  %83 = ptrtoint i8** %79 to i64
  %84 = getelementptr i8*, i8** %80, i64 -1
  %85 = ptrtoint i8** %84 to i64
  %86 = sub i64 %85, %83
  %87 = lshr i64 %86, 3
  %88 = xor i64 %87, -1
  %89 = getelementptr i8*, i8** %80, i64 %88
  store i8** %89, i8*** %8, align 8
  br label %90

90:                                               ; preds = %82, %78, %71
  %91 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8**, i8*** %91, align 8
  %93 = icmp eq i8** %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = bitcast i8** %92 to i8*
  tail call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %90, %94
  ret void
}

declare void @_ZN4SkSL18SPIRVCodeGenerator15setupIntrinsicsEv(%"class.SkSL::SPIRVCodeGenerator"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #15
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.174", %"class.std::__1::vector.174"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.176"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.176"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.176"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.176"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #16
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.176"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.174"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.176"* %29, %"class.std::__1::unique_ptr.176"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.168"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.168"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.168"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.168"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #16
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.168"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.166"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.168"* %57, %"class.std::__1::unique_ptr.168"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #16
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack.482"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #15
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #15
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  %83 = icmp eq i32** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32** %81 to i64
  %86 = getelementptr i32*, i32** %82, i64 -1
  %87 = ptrtoint i32** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr i32*, i32** %82, i64 %90
  store i32** %91, i32*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.std::__1::stack.482", %"class.std::__1::stack.482"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32**, i32*** %93, align 8
  %95 = icmp eq i32** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast i32** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %92, %96
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12OutputStream7isValidEv(%"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream6write8Eh(%"class.SkSL::StringStream"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 %1, i8* %3, align 1
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = call zeroext i1 %8(%class.SkWStream* %4, i8* nonnull %3, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream9writeTextEPKc(%"class.SkSL::StringStream"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @strlen(i8* %1) #18
  %5 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %3, i8* %1, i64 %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream5writeEPKvm(%"class.SkSL::StringStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %4, i8* %1, i64 %2) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD0Ev(%"class.SkSL::StringStream"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #16
  %13 = bitcast %"class.SkSL::StringStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  ret void
}

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #2

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #14

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.520"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.516"*, %"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::String"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #16
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #16
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #16, !range !27
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.520"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.520"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.520"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.520"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %65

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.520"* %62 to %"class.SkSL::String"*
  %64 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %63, %"class.SkSL::String"* dereferenceable(24) %1) #16
  br i1 %64, label %163, label %41

65:                                               ; preds = %41, %58, %32, %3
  %66 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %67 = call i8* @_Znwm(i64 40) #15, !noalias !42
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1, !noalias !42
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %74, i64 24, i1 false) #16, !noalias !42
  br label %81

75:                                               ; preds = %65
  %76 = bitcast i8* %68 to %"class.std::__1::basic_string"*
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !42
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !42
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %76, i8* %78, i64 %80) #16, !noalias !42
  br label %81

81:                                               ; preds = %73, %75
  %82 = getelementptr inbounds i8, i8* %67, i64 8
  %83 = bitcast i8* %82 to i64*
  store i64 %18, i64* %83, align 8, !noalias !42
  %84 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.520"**
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %84, align 8, !noalias !42
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  %88 = uitofp i64 %87 to float
  %89 = uitofp i64 %20 to float
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load float, float* %90, align 4
  %92 = fmul float %91, %89
  %93 = fcmp olt float %92, %88
  %94 = or i1 %21, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %81
  %96 = shl i64 %20, 1
  %97 = icmp ult i64 %20, 3
  %98 = call i64 @llvm.ctpop.i64(i64 %20) #16, !range !27
  %99 = icmp ugt i64 %98, 1
  %100 = or i1 %97, %99
  %101 = zext i1 %100 to i64
  %102 = or i64 %96, %101
  %103 = fdiv float %88, %91
  %104 = call float @llvm.ceil.f32(float %103) #16
  %105 = fptoui float %104 to i64
  %106 = icmp ult i64 %102, %105
  %107 = select i1 %106, i64 %105, i64 %102
  call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.516"* %0, i64 %107)
  %108 = load i64, i64* %19, align 8
  %109 = call i64 @llvm.ctpop.i64(i64 %108) #16, !range !27
  %110 = icmp ugt i64 %109, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %95
  %112 = add i64 %108, -1
  %113 = and i64 %112, %18
  br label %118

114:                                              ; preds = %95
  %115 = icmp ult i64 %18, %108
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %18, %108
  br label %118

118:                                              ; preds = %116, %114, %111, %81
  %119 = phi i64 [ %20, %81 ], [ %108, %111 ], [ %108, %114 ], [ %108, %116 ]
  %120 = phi i64 [ %66, %81 ], [ %113, %111 ], [ %18, %114 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %122, i64 %120
  %124 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.520"* %124, null
  br i1 %125, label %126, label %152

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 1, i32 0, i32 0
  %128 = bitcast %"struct.std::__1::__hash_node_base.520"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8* %67 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.520"* %127 to i8**
  store i8* %67, i8** %131, align 8
  store %"struct.std::__1::__hash_node_base.520"* %127, %"struct.std::__1::__hash_node_base.520"** %123, align 8
  %132 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %84, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.520"* %132, null
  br i1 %133, label %159, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.520"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = call i64 @llvm.ctpop.i64(i64 %119) #16, !range !27
  %139 = icmp ugt i64 %138, 1
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = add i64 %119, -1
  %142 = and i64 %137, %141
  br label %147

143:                                              ; preds = %134
  %144 = icmp ult i64 %137, %119
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %137, %119
  br label %147

147:                                              ; preds = %140, %143, %145
  %148 = phi i64 [ %142, %140 ], [ %146, %145 ], [ %137, %143 ]
  %149 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %121, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %149, i64 %148
  %151 = bitcast %"struct.std::__1::__hash_node_base.520"** %150 to i8**
  br label %157

152:                                              ; preds = %118
  %153 = bitcast %"struct.std::__1::__hash_node_base.520"* %124 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i8* %67 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.520"* %124 to i8**
  br label %157

157:                                              ; preds = %147, %152
  %158 = phi i8** [ %156, %152 ], [ %151, %147 ]
  store i8* %67, i8** %158, align 8
  br label %159

159:                                              ; preds = %157, %126
  %160 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.520"*
  %161 = load i64, i64* %85, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %85, align 8
  br label %163

163:                                              ; preds = %61, %159
  %164 = phi i8 [ 1, %159 ], [ 0, %61 ]
  %165 = phi %"struct.std::__1::__hash_node_base.520"* [ %160, %159 ], [ %44, %61 ]
  %166 = insertvalue { %"struct.std::__1::__hash_node_base.520"*, i8 } undef, %"struct.std::__1::__hash_node_base.520"* %165, 0
  %167 = insertvalue { %"struct.std::__1::__hash_node_base.520"*, i8 } %166, i8 %164, 1
  ret { %"struct.std::__1::__hash_node_base.520"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.516"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !27
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.516"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !27
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !27
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.516"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.516"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.516"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.520"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.520"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.522", %"class.std::__1::__bucket_list_deallocator.522"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !45

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.520"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.520"* null, %"struct.std::__1::__hash_node_base.520"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.520"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !27
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.520"* %36, %"struct.std::__1::__hash_node_base.520"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.520"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.520"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.520"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.520"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.520"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.520"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.520"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.520"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #16
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.520"* %82, %"struct.std::__1::__hash_node_base.520"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.520"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #16
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.520"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.520"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.520"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.520"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.520"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.520"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.520"* %80, %"struct.std::__1::__hash_node_base.520"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.520"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.520", %"struct.std::__1::__hash_node_base.520"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.520"*, %"struct.std::__1::__hash_node_base.520"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.520"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.516", %"class.std::__1::__hash_table.516"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.520"**, %"struct.std::__1::__hash_node_base.520"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.520"** null, %"struct.std::__1::__hash_node_base.520"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.520"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.520"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.522", %"class.std::__1::__bucket_list_deallocator.522"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #14

declare void @_ZN4SkSL7ContextC1ERNS_13ErrorReporterERK12GrShaderCaps(%"class.SkSL::Context"*, %"class.SkSL::ErrorReporter"* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::Context, std::__1::allocator<SkSL::Context> >::_Storage"* %2 to %"class.SkSL::BuiltinTypes"*
  tail call void @_ZN4SkSL12BuiltinTypesD2Ev(%"class.SkSL::BuiltinTypes"* %3) #16
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL7ContextENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12BuiltinTypesD2Ev(%"class.SkSL::BuiltinTypes"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 88, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %2, align 8
  %4 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.SkSL::Type"* %3 to void (%"class.SkSL::Type"*)***
  %7 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %7, i64 1
  %9 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %8, align 8
  tail call void %9(%"class.SkSL::Type"* nonnull %3) #16
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 87, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %11, align 8
  %13 = icmp eq %"class.SkSL::Type"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.SkSL::Type"* %12 to void (%"class.SkSL::Type"*)***
  %16 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %16, i64 1
  %18 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %17, align 8
  tail call void %18(%"class.SkSL::Type"* nonnull %12) #16
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 86, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %20, align 8
  %22 = icmp eq %"class.SkSL::Type"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.SkSL::Type"* %21 to void (%"class.SkSL::Type"*)***
  %25 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %25, i64 1
  %27 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %26, align 8
  tail call void %27(%"class.SkSL::Type"* nonnull %21) #16
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 85, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %29, align 8
  %31 = icmp eq %"class.SkSL::Type"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.SkSL::Type"* %30 to void (%"class.SkSL::Type"*)***
  %34 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %34, i64 1
  %36 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %35, align 8
  tail call void %36(%"class.SkSL::Type"* nonnull %30) #16
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 84, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %38, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %38, align 8
  %40 = icmp eq %"class.SkSL::Type"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.SkSL::Type"* %39 to void (%"class.SkSL::Type"*)***
  %43 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %43, i64 1
  %45 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %44, align 8
  tail call void %45(%"class.SkSL::Type"* nonnull %39) #16
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 83, i32 0, i32 0, i32 0
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %47, align 8
  %49 = icmp eq %"class.SkSL::Type"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.SkSL::Type"* %48 to void (%"class.SkSL::Type"*)***
  %52 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %52, i64 1
  %54 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %53, align 8
  tail call void %54(%"class.SkSL::Type"* nonnull %48) #16
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 82, i32 0, i32 0, i32 0
  %57 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %56, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %56, align 8
  %58 = icmp eq %"class.SkSL::Type"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.SkSL::Type"* %57 to void (%"class.SkSL::Type"*)***
  %61 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %61, i64 1
  %63 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %62, align 8
  tail call void %63(%"class.SkSL::Type"* nonnull %57) #16
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 81, i32 0, i32 0, i32 0
  %66 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %65, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %65, align 8
  %67 = icmp eq %"class.SkSL::Type"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.SkSL::Type"* %66 to void (%"class.SkSL::Type"*)***
  %70 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %70, i64 1
  %72 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %71, align 8
  tail call void %72(%"class.SkSL::Type"* nonnull %66) #16
  br label %73

73:                                               ; preds = %64, %68
  %74 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 80, i32 0, i32 0, i32 0
  %75 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %74, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %74, align 8
  %76 = icmp eq %"class.SkSL::Type"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.SkSL::Type"* %75 to void (%"class.SkSL::Type"*)***
  %79 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %79, i64 1
  %81 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %80, align 8
  tail call void %81(%"class.SkSL::Type"* nonnull %75) #16
  br label %82

82:                                               ; preds = %73, %77
  %83 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 79, i32 0, i32 0, i32 0
  %84 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %83, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %83, align 8
  %85 = icmp eq %"class.SkSL::Type"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.SkSL::Type"* %84 to void (%"class.SkSL::Type"*)***
  %88 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %88, i64 1
  %90 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %89, align 8
  tail call void %90(%"class.SkSL::Type"* nonnull %84) #16
  br label %91

91:                                               ; preds = %82, %86
  %92 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 78, i32 0, i32 0, i32 0
  %93 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %92, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %92, align 8
  %94 = icmp eq %"class.SkSL::Type"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.SkSL::Type"* %93 to void (%"class.SkSL::Type"*)***
  %97 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %97, i64 1
  %99 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %98, align 8
  tail call void %99(%"class.SkSL::Type"* nonnull %93) #16
  br label %100

100:                                              ; preds = %91, %95
  %101 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 77, i32 0, i32 0, i32 0
  %102 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %101, align 8
  %103 = icmp eq %"class.SkSL::Type"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.SkSL::Type"* %102 to void (%"class.SkSL::Type"*)***
  %106 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %106, i64 1
  %108 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %107, align 8
  tail call void %108(%"class.SkSL::Type"* nonnull %102) #16
  br label %109

109:                                              ; preds = %100, %104
  %110 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 76, i32 0, i32 0, i32 0
  %111 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %110, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %110, align 8
  %112 = icmp eq %"class.SkSL::Type"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.SkSL::Type"* %111 to void (%"class.SkSL::Type"*)***
  %115 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %115, i64 1
  %117 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %116, align 8
  tail call void %117(%"class.SkSL::Type"* nonnull %111) #16
  br label %118

118:                                              ; preds = %109, %113
  %119 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 75, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %119, align 8
  %121 = icmp eq %"class.SkSL::Type"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.SkSL::Type"* %120 to void (%"class.SkSL::Type"*)***
  %124 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %124, i64 1
  %126 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %125, align 8
  tail call void %126(%"class.SkSL::Type"* nonnull %120) #16
  br label %127

127:                                              ; preds = %118, %122
  %128 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 74, i32 0, i32 0, i32 0
  %129 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %128, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %128, align 8
  %130 = icmp eq %"class.SkSL::Type"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.SkSL::Type"* %129 to void (%"class.SkSL::Type"*)***
  %133 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %133, i64 1
  %135 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %134, align 8
  tail call void %135(%"class.SkSL::Type"* nonnull %129) #16
  br label %136

136:                                              ; preds = %127, %131
  %137 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 73, i32 0, i32 0, i32 0
  %138 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %137, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %137, align 8
  %139 = icmp eq %"class.SkSL::Type"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = bitcast %"class.SkSL::Type"* %138 to void (%"class.SkSL::Type"*)***
  %142 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %142, i64 1
  %144 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %143, align 8
  tail call void %144(%"class.SkSL::Type"* nonnull %138) #16
  br label %145

145:                                              ; preds = %136, %140
  %146 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 72, i32 0, i32 0, i32 0
  %147 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %146, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %146, align 8
  %148 = icmp eq %"class.SkSL::Type"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.SkSL::Type"* %147 to void (%"class.SkSL::Type"*)***
  %151 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %151, i64 1
  %153 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %152, align 8
  tail call void %153(%"class.SkSL::Type"* nonnull %147) #16
  br label %154

154:                                              ; preds = %145, %149
  %155 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 71, i32 0, i32 0, i32 0
  %156 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %155, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %155, align 8
  %157 = icmp eq %"class.SkSL::Type"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.SkSL::Type"* %156 to void (%"class.SkSL::Type"*)***
  %160 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %160, i64 1
  %162 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %161, align 8
  tail call void %162(%"class.SkSL::Type"* nonnull %156) #16
  br label %163

163:                                              ; preds = %154, %158
  %164 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 70, i32 0, i32 0, i32 0
  %165 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %164, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %164, align 8
  %166 = icmp eq %"class.SkSL::Type"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %163
  %168 = bitcast %"class.SkSL::Type"* %165 to void (%"class.SkSL::Type"*)***
  %169 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %169, i64 1
  %171 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %170, align 8
  tail call void %171(%"class.SkSL::Type"* nonnull %165) #16
  br label %172

172:                                              ; preds = %163, %167
  %173 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 69, i32 0, i32 0, i32 0
  %174 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %173, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %173, align 8
  %175 = icmp eq %"class.SkSL::Type"* %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %172
  %177 = bitcast %"class.SkSL::Type"* %174 to void (%"class.SkSL::Type"*)***
  %178 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %178, i64 1
  %180 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %179, align 8
  tail call void %180(%"class.SkSL::Type"* nonnull %174) #16
  br label %181

181:                                              ; preds = %172, %176
  %182 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 68, i32 0, i32 0, i32 0
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %182, align 8
  %184 = icmp eq %"class.SkSL::Type"* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %181
  %186 = bitcast %"class.SkSL::Type"* %183 to void (%"class.SkSL::Type"*)***
  %187 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %187, i64 1
  %189 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %188, align 8
  tail call void %189(%"class.SkSL::Type"* nonnull %183) #16
  br label %190

190:                                              ; preds = %181, %185
  %191 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 67, i32 0, i32 0, i32 0
  %192 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %191, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %191, align 8
  %193 = icmp eq %"class.SkSL::Type"* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = bitcast %"class.SkSL::Type"* %192 to void (%"class.SkSL::Type"*)***
  %196 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %196, i64 1
  %198 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %197, align 8
  tail call void %198(%"class.SkSL::Type"* nonnull %192) #16
  br label %199

199:                                              ; preds = %190, %194
  %200 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 66, i32 0, i32 0, i32 0
  %201 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %200, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %200, align 8
  %202 = icmp eq %"class.SkSL::Type"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.SkSL::Type"* %201 to void (%"class.SkSL::Type"*)***
  %205 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %205, i64 1
  %207 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %206, align 8
  tail call void %207(%"class.SkSL::Type"* nonnull %201) #16
  br label %208

208:                                              ; preds = %199, %203
  %209 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 65, i32 0, i32 0, i32 0
  %210 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %209, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %209, align 8
  %211 = icmp eq %"class.SkSL::Type"* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = bitcast %"class.SkSL::Type"* %210 to void (%"class.SkSL::Type"*)***
  %214 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %214, i64 1
  %216 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %215, align 8
  tail call void %216(%"class.SkSL::Type"* nonnull %210) #16
  br label %217

217:                                              ; preds = %208, %212
  %218 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 64, i32 0, i32 0, i32 0
  %219 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %218, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %218, align 8
  %220 = icmp eq %"class.SkSL::Type"* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = bitcast %"class.SkSL::Type"* %219 to void (%"class.SkSL::Type"*)***
  %223 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %223, i64 1
  %225 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %224, align 8
  tail call void %225(%"class.SkSL::Type"* nonnull %219) #16
  br label %226

226:                                              ; preds = %217, %221
  %227 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 63, i32 0, i32 0, i32 0
  %228 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %227, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %227, align 8
  %229 = icmp eq %"class.SkSL::Type"* %228, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %226
  %231 = bitcast %"class.SkSL::Type"* %228 to void (%"class.SkSL::Type"*)***
  %232 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %232, i64 1
  %234 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %233, align 8
  tail call void %234(%"class.SkSL::Type"* nonnull %228) #16
  br label %235

235:                                              ; preds = %226, %230
  %236 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 62, i32 0, i32 0, i32 0
  %237 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %236, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %236, align 8
  %238 = icmp eq %"class.SkSL::Type"* %237, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %235
  %240 = bitcast %"class.SkSL::Type"* %237 to void (%"class.SkSL::Type"*)***
  %241 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %241, i64 1
  %243 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %242, align 8
  tail call void %243(%"class.SkSL::Type"* nonnull %237) #16
  br label %244

244:                                              ; preds = %235, %239
  %245 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 61, i32 0, i32 0, i32 0
  %246 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %245, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %245, align 8
  %247 = icmp eq %"class.SkSL::Type"* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = bitcast %"class.SkSL::Type"* %246 to void (%"class.SkSL::Type"*)***
  %250 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %250, i64 1
  %252 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %251, align 8
  tail call void %252(%"class.SkSL::Type"* nonnull %246) #16
  br label %253

253:                                              ; preds = %244, %248
  %254 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 60, i32 0, i32 0, i32 0
  %255 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %254, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %254, align 8
  %256 = icmp eq %"class.SkSL::Type"* %255, null
  br i1 %256, label %262, label %257

257:                                              ; preds = %253
  %258 = bitcast %"class.SkSL::Type"* %255 to void (%"class.SkSL::Type"*)***
  %259 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %259, i64 1
  %261 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %260, align 8
  tail call void %261(%"class.SkSL::Type"* nonnull %255) #16
  br label %262

262:                                              ; preds = %253, %257
  %263 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 59, i32 0, i32 0, i32 0
  %264 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %263, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %263, align 8
  %265 = icmp eq %"class.SkSL::Type"* %264, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %262
  %267 = bitcast %"class.SkSL::Type"* %264 to void (%"class.SkSL::Type"*)***
  %268 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %268, i64 1
  %270 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %269, align 8
  tail call void %270(%"class.SkSL::Type"* nonnull %264) #16
  br label %271

271:                                              ; preds = %262, %266
  %272 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 58, i32 0, i32 0, i32 0
  %273 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %272, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %272, align 8
  %274 = icmp eq %"class.SkSL::Type"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %271
  %276 = bitcast %"class.SkSL::Type"* %273 to void (%"class.SkSL::Type"*)***
  %277 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %277, i64 1
  %279 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %278, align 8
  tail call void %279(%"class.SkSL::Type"* nonnull %273) #16
  br label %280

280:                                              ; preds = %271, %275
  %281 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 57, i32 0, i32 0, i32 0
  %282 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %281, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %281, align 8
  %283 = icmp eq %"class.SkSL::Type"* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %280
  %285 = bitcast %"class.SkSL::Type"* %282 to void (%"class.SkSL::Type"*)***
  %286 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %285, align 8
  %287 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %286, i64 1
  %288 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %287, align 8
  tail call void %288(%"class.SkSL::Type"* nonnull %282) #16
  br label %289

289:                                              ; preds = %280, %284
  %290 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 56, i32 0, i32 0, i32 0
  %291 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %290, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %290, align 8
  %292 = icmp eq %"class.SkSL::Type"* %291, null
  br i1 %292, label %298, label %293

293:                                              ; preds = %289
  %294 = bitcast %"class.SkSL::Type"* %291 to void (%"class.SkSL::Type"*)***
  %295 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %295, i64 1
  %297 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %296, align 8
  tail call void %297(%"class.SkSL::Type"* nonnull %291) #16
  br label %298

298:                                              ; preds = %289, %293
  %299 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 55, i32 0, i32 0, i32 0
  %300 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %299, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %299, align 8
  %301 = icmp eq %"class.SkSL::Type"* %300, null
  br i1 %301, label %307, label %302

302:                                              ; preds = %298
  %303 = bitcast %"class.SkSL::Type"* %300 to void (%"class.SkSL::Type"*)***
  %304 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %304, i64 1
  %306 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %305, align 8
  tail call void %306(%"class.SkSL::Type"* nonnull %300) #16
  br label %307

307:                                              ; preds = %298, %302
  %308 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 54, i32 0, i32 0, i32 0
  %309 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %308, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %308, align 8
  %310 = icmp eq %"class.SkSL::Type"* %309, null
  br i1 %310, label %316, label %311

311:                                              ; preds = %307
  %312 = bitcast %"class.SkSL::Type"* %309 to void (%"class.SkSL::Type"*)***
  %313 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %313, i64 1
  %315 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %314, align 8
  tail call void %315(%"class.SkSL::Type"* nonnull %309) #16
  br label %316

316:                                              ; preds = %307, %311
  %317 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 53, i32 0, i32 0, i32 0
  %318 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %317, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %317, align 8
  %319 = icmp eq %"class.SkSL::Type"* %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %316
  %321 = bitcast %"class.SkSL::Type"* %318 to void (%"class.SkSL::Type"*)***
  %322 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %321, align 8
  %323 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %322, i64 1
  %324 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %323, align 8
  tail call void %324(%"class.SkSL::Type"* nonnull %318) #16
  br label %325

325:                                              ; preds = %316, %320
  %326 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 52, i32 0, i32 0, i32 0
  %327 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %326, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %326, align 8
  %328 = icmp eq %"class.SkSL::Type"* %327, null
  br i1 %328, label %334, label %329

329:                                              ; preds = %325
  %330 = bitcast %"class.SkSL::Type"* %327 to void (%"class.SkSL::Type"*)***
  %331 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %331, i64 1
  %333 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %332, align 8
  tail call void %333(%"class.SkSL::Type"* nonnull %327) #16
  br label %334

334:                                              ; preds = %325, %329
  %335 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 51, i32 0, i32 0, i32 0
  %336 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %335, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %335, align 8
  %337 = icmp eq %"class.SkSL::Type"* %336, null
  br i1 %337, label %343, label %338

338:                                              ; preds = %334
  %339 = bitcast %"class.SkSL::Type"* %336 to void (%"class.SkSL::Type"*)***
  %340 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %340, i64 1
  %342 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %341, align 8
  tail call void %342(%"class.SkSL::Type"* nonnull %336) #16
  br label %343

343:                                              ; preds = %334, %338
  %344 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %345 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %344, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %344, align 8
  %346 = icmp eq %"class.SkSL::Type"* %345, null
  br i1 %346, label %352, label %347

347:                                              ; preds = %343
  %348 = bitcast %"class.SkSL::Type"* %345 to void (%"class.SkSL::Type"*)***
  %349 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %348, align 8
  %350 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %349, i64 1
  %351 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %350, align 8
  tail call void %351(%"class.SkSL::Type"* nonnull %345) #16
  br label %352

352:                                              ; preds = %343, %347
  %353 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 49, i32 0, i32 0, i32 0
  %354 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %353, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %353, align 8
  %355 = icmp eq %"class.SkSL::Type"* %354, null
  br i1 %355, label %361, label %356

356:                                              ; preds = %352
  %357 = bitcast %"class.SkSL::Type"* %354 to void (%"class.SkSL::Type"*)***
  %358 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %358, i64 1
  %360 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %359, align 8
  tail call void %360(%"class.SkSL::Type"* nonnull %354) #16
  br label %361

361:                                              ; preds = %352, %356
  %362 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 48, i32 0, i32 0, i32 0
  %363 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %362, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %362, align 8
  %364 = icmp eq %"class.SkSL::Type"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %361
  %366 = bitcast %"class.SkSL::Type"* %363 to void (%"class.SkSL::Type"*)***
  %367 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %367, i64 1
  %369 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %368, align 8
  tail call void %369(%"class.SkSL::Type"* nonnull %363) #16
  br label %370

370:                                              ; preds = %361, %365
  %371 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 47, i32 0, i32 0, i32 0
  %372 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %371, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %371, align 8
  %373 = icmp eq %"class.SkSL::Type"* %372, null
  br i1 %373, label %379, label %374

374:                                              ; preds = %370
  %375 = bitcast %"class.SkSL::Type"* %372 to void (%"class.SkSL::Type"*)***
  %376 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %376, i64 1
  %378 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %377, align 8
  tail call void %378(%"class.SkSL::Type"* nonnull %372) #16
  br label %379

379:                                              ; preds = %370, %374
  %380 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 46, i32 0, i32 0, i32 0
  %381 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %380, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %380, align 8
  %382 = icmp eq %"class.SkSL::Type"* %381, null
  br i1 %382, label %388, label %383

383:                                              ; preds = %379
  %384 = bitcast %"class.SkSL::Type"* %381 to void (%"class.SkSL::Type"*)***
  %385 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %384, align 8
  %386 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %385, i64 1
  %387 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %386, align 8
  tail call void %387(%"class.SkSL::Type"* nonnull %381) #16
  br label %388

388:                                              ; preds = %379, %383
  %389 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %390 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %389, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %389, align 8
  %391 = icmp eq %"class.SkSL::Type"* %390, null
  br i1 %391, label %397, label %392

392:                                              ; preds = %388
  %393 = bitcast %"class.SkSL::Type"* %390 to void (%"class.SkSL::Type"*)***
  %394 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %394, i64 1
  %396 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %395, align 8
  tail call void %396(%"class.SkSL::Type"* nonnull %390) #16
  br label %397

397:                                              ; preds = %388, %392
  %398 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 44, i32 0, i32 0, i32 0
  %399 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %398, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %398, align 8
  %400 = icmp eq %"class.SkSL::Type"* %399, null
  br i1 %400, label %406, label %401

401:                                              ; preds = %397
  %402 = bitcast %"class.SkSL::Type"* %399 to void (%"class.SkSL::Type"*)***
  %403 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %402, align 8
  %404 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %403, i64 1
  %405 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %404, align 8
  tail call void %405(%"class.SkSL::Type"* nonnull %399) #16
  br label %406

406:                                              ; preds = %397, %401
  %407 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 43, i32 0, i32 0, i32 0
  %408 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %407, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %407, align 8
  %409 = icmp eq %"class.SkSL::Type"* %408, null
  br i1 %409, label %415, label %410

410:                                              ; preds = %406
  %411 = bitcast %"class.SkSL::Type"* %408 to void (%"class.SkSL::Type"*)***
  %412 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %412, i64 1
  %414 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %413, align 8
  tail call void %414(%"class.SkSL::Type"* nonnull %408) #16
  br label %415

415:                                              ; preds = %406, %410
  %416 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 42, i32 0, i32 0, i32 0
  %417 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %416, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %416, align 8
  %418 = icmp eq %"class.SkSL::Type"* %417, null
  br i1 %418, label %424, label %419

419:                                              ; preds = %415
  %420 = bitcast %"class.SkSL::Type"* %417 to void (%"class.SkSL::Type"*)***
  %421 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %421, i64 1
  %423 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %422, align 8
  tail call void %423(%"class.SkSL::Type"* nonnull %417) #16
  br label %424

424:                                              ; preds = %415, %419
  %425 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 41, i32 0, i32 0, i32 0
  %426 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %425, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %425, align 8
  %427 = icmp eq %"class.SkSL::Type"* %426, null
  br i1 %427, label %433, label %428

428:                                              ; preds = %424
  %429 = bitcast %"class.SkSL::Type"* %426 to void (%"class.SkSL::Type"*)***
  %430 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %429, align 8
  %431 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %430, i64 1
  %432 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %431, align 8
  tail call void %432(%"class.SkSL::Type"* nonnull %426) #16
  br label %433

433:                                              ; preds = %424, %428
  %434 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %435 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %434, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %434, align 8
  %436 = icmp eq %"class.SkSL::Type"* %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %433
  %438 = bitcast %"class.SkSL::Type"* %435 to void (%"class.SkSL::Type"*)***
  %439 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %439, i64 1
  %441 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %440, align 8
  tail call void %441(%"class.SkSL::Type"* nonnull %435) #16
  br label %442

442:                                              ; preds = %433, %437
  %443 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 39, i32 0, i32 0, i32 0
  %444 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %443, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %443, align 8
  %445 = icmp eq %"class.SkSL::Type"* %444, null
  br i1 %445, label %451, label %446

446:                                              ; preds = %442
  %447 = bitcast %"class.SkSL::Type"* %444 to void (%"class.SkSL::Type"*)***
  %448 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %448, i64 1
  %450 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %449, align 8
  tail call void %450(%"class.SkSL::Type"* nonnull %444) #16
  br label %451

451:                                              ; preds = %442, %446
  %452 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %453 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %452, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %452, align 8
  %454 = icmp eq %"class.SkSL::Type"* %453, null
  br i1 %454, label %460, label %455

455:                                              ; preds = %451
  %456 = bitcast %"class.SkSL::Type"* %453 to void (%"class.SkSL::Type"*)***
  %457 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %456, align 8
  %458 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %457, i64 1
  %459 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %458, align 8
  tail call void %459(%"class.SkSL::Type"* nonnull %453) #16
  br label %460

460:                                              ; preds = %451, %455
  %461 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %462 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %461, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %461, align 8
  %463 = icmp eq %"class.SkSL::Type"* %462, null
  br i1 %463, label %469, label %464

464:                                              ; preds = %460
  %465 = bitcast %"class.SkSL::Type"* %462 to void (%"class.SkSL::Type"*)***
  %466 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %466, i64 1
  %468 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %467, align 8
  tail call void %468(%"class.SkSL::Type"* nonnull %462) #16
  br label %469

469:                                              ; preds = %460, %464
  %470 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 36, i32 0, i32 0, i32 0
  %471 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %470, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %470, align 8
  %472 = icmp eq %"class.SkSL::Type"* %471, null
  br i1 %472, label %478, label %473

473:                                              ; preds = %469
  %474 = bitcast %"class.SkSL::Type"* %471 to void (%"class.SkSL::Type"*)***
  %475 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %474, align 8
  %476 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %475, i64 1
  %477 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %476, align 8
  tail call void %477(%"class.SkSL::Type"* nonnull %471) #16
  br label %478

478:                                              ; preds = %469, %473
  %479 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %480 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %479, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %479, align 8
  %481 = icmp eq %"class.SkSL::Type"* %480, null
  br i1 %481, label %487, label %482

482:                                              ; preds = %478
  %483 = bitcast %"class.SkSL::Type"* %480 to void (%"class.SkSL::Type"*)***
  %484 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %483, align 8
  %485 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %484, i64 1
  %486 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %485, align 8
  tail call void %486(%"class.SkSL::Type"* nonnull %480) #16
  br label %487

487:                                              ; preds = %478, %482
  %488 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 34, i32 0, i32 0, i32 0
  %489 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %488, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %488, align 8
  %490 = icmp eq %"class.SkSL::Type"* %489, null
  br i1 %490, label %496, label %491

491:                                              ; preds = %487
  %492 = bitcast %"class.SkSL::Type"* %489 to void (%"class.SkSL::Type"*)***
  %493 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %492, align 8
  %494 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %493, i64 1
  %495 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %494, align 8
  tail call void %495(%"class.SkSL::Type"* nonnull %489) #16
  br label %496

496:                                              ; preds = %487, %491
  %497 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %498 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %497, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %497, align 8
  %499 = icmp eq %"class.SkSL::Type"* %498, null
  br i1 %499, label %505, label %500

500:                                              ; preds = %496
  %501 = bitcast %"class.SkSL::Type"* %498 to void (%"class.SkSL::Type"*)***
  %502 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %502, i64 1
  %504 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %503, align 8
  tail call void %504(%"class.SkSL::Type"* nonnull %498) #16
  br label %505

505:                                              ; preds = %496, %500
  %506 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 32, i32 0, i32 0, i32 0
  %507 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %506, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %506, align 8
  %508 = icmp eq %"class.SkSL::Type"* %507, null
  br i1 %508, label %514, label %509

509:                                              ; preds = %505
  %510 = bitcast %"class.SkSL::Type"* %507 to void (%"class.SkSL::Type"*)***
  %511 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %510, align 8
  %512 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %511, i64 1
  %513 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %512, align 8
  tail call void %513(%"class.SkSL::Type"* nonnull %507) #16
  br label %514

514:                                              ; preds = %505, %509
  %515 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 31, i32 0, i32 0, i32 0
  %516 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %515, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %515, align 8
  %517 = icmp eq %"class.SkSL::Type"* %516, null
  br i1 %517, label %523, label %518

518:                                              ; preds = %514
  %519 = bitcast %"class.SkSL::Type"* %516 to void (%"class.SkSL::Type"*)***
  %520 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %519, align 8
  %521 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %520, i64 1
  %522 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %521, align 8
  tail call void %522(%"class.SkSL::Type"* nonnull %516) #16
  br label %523

523:                                              ; preds = %514, %518
  %524 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 30, i32 0, i32 0, i32 0
  %525 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %524, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %524, align 8
  %526 = icmp eq %"class.SkSL::Type"* %525, null
  br i1 %526, label %532, label %527

527:                                              ; preds = %523
  %528 = bitcast %"class.SkSL::Type"* %525 to void (%"class.SkSL::Type"*)***
  %529 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %528, align 8
  %530 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %529, i64 1
  %531 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %530, align 8
  tail call void %531(%"class.SkSL::Type"* nonnull %525) #16
  br label %532

532:                                              ; preds = %523, %527
  %533 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %534 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %533, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %533, align 8
  %535 = icmp eq %"class.SkSL::Type"* %534, null
  br i1 %535, label %541, label %536

536:                                              ; preds = %532
  %537 = bitcast %"class.SkSL::Type"* %534 to void (%"class.SkSL::Type"*)***
  %538 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %537, align 8
  %539 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %538, i64 1
  %540 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %539, align 8
  tail call void %540(%"class.SkSL::Type"* nonnull %534) #16
  br label %541

541:                                              ; preds = %532, %536
  %542 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %543 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %542, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %542, align 8
  %544 = icmp eq %"class.SkSL::Type"* %543, null
  br i1 %544, label %550, label %545

545:                                              ; preds = %541
  %546 = bitcast %"class.SkSL::Type"* %543 to void (%"class.SkSL::Type"*)***
  %547 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %546, align 8
  %548 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %547, i64 1
  %549 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %548, align 8
  tail call void %549(%"class.SkSL::Type"* nonnull %543) #16
  br label %550

550:                                              ; preds = %541, %545
  %551 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %552 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %551, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %551, align 8
  %553 = icmp eq %"class.SkSL::Type"* %552, null
  br i1 %553, label %559, label %554

554:                                              ; preds = %550
  %555 = bitcast %"class.SkSL::Type"* %552 to void (%"class.SkSL::Type"*)***
  %556 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %556, i64 1
  %558 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %557, align 8
  tail call void %558(%"class.SkSL::Type"* nonnull %552) #16
  br label %559

559:                                              ; preds = %550, %554
  %560 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %561 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %560, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %560, align 8
  %562 = icmp eq %"class.SkSL::Type"* %561, null
  br i1 %562, label %568, label %563

563:                                              ; preds = %559
  %564 = bitcast %"class.SkSL::Type"* %561 to void (%"class.SkSL::Type"*)***
  %565 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %564, align 8
  %566 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %565, i64 1
  %567 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %566, align 8
  tail call void %567(%"class.SkSL::Type"* nonnull %561) #16
  br label %568

568:                                              ; preds = %559, %563
  %569 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %570 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %569, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %569, align 8
  %571 = icmp eq %"class.SkSL::Type"* %570, null
  br i1 %571, label %577, label %572

572:                                              ; preds = %568
  %573 = bitcast %"class.SkSL::Type"* %570 to void (%"class.SkSL::Type"*)***
  %574 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %573, align 8
  %575 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %574, i64 1
  %576 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %575, align 8
  tail call void %576(%"class.SkSL::Type"* nonnull %570) #16
  br label %577

577:                                              ; preds = %568, %572
  %578 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %579 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %578, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %578, align 8
  %580 = icmp eq %"class.SkSL::Type"* %579, null
  br i1 %580, label %586, label %581

581:                                              ; preds = %577
  %582 = bitcast %"class.SkSL::Type"* %579 to void (%"class.SkSL::Type"*)***
  %583 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %582, align 8
  %584 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %583, i64 1
  %585 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %584, align 8
  tail call void %585(%"class.SkSL::Type"* nonnull %579) #16
  br label %586

586:                                              ; preds = %577, %581
  %587 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %588 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %587, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %587, align 8
  %589 = icmp eq %"class.SkSL::Type"* %588, null
  br i1 %589, label %595, label %590

590:                                              ; preds = %586
  %591 = bitcast %"class.SkSL::Type"* %588 to void (%"class.SkSL::Type"*)***
  %592 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %591, align 8
  %593 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %592, i64 1
  %594 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %593, align 8
  tail call void %594(%"class.SkSL::Type"* nonnull %588) #16
  br label %595

595:                                              ; preds = %586, %590
  %596 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %597 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %596, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %596, align 8
  %598 = icmp eq %"class.SkSL::Type"* %597, null
  br i1 %598, label %604, label %599

599:                                              ; preds = %595
  %600 = bitcast %"class.SkSL::Type"* %597 to void (%"class.SkSL::Type"*)***
  %601 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %600, align 8
  %602 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %601, i64 1
  %603 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %602, align 8
  tail call void %603(%"class.SkSL::Type"* nonnull %597) #16
  br label %604

604:                                              ; preds = %595, %599
  %605 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %606 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %605, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %605, align 8
  %607 = icmp eq %"class.SkSL::Type"* %606, null
  br i1 %607, label %613, label %608

608:                                              ; preds = %604
  %609 = bitcast %"class.SkSL::Type"* %606 to void (%"class.SkSL::Type"*)***
  %610 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %609, align 8
  %611 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %610, i64 1
  %612 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %611, align 8
  tail call void %612(%"class.SkSL::Type"* nonnull %606) #16
  br label %613

613:                                              ; preds = %604, %608
  %614 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %615 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %614, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %614, align 8
  %616 = icmp eq %"class.SkSL::Type"* %615, null
  br i1 %616, label %622, label %617

617:                                              ; preds = %613
  %618 = bitcast %"class.SkSL::Type"* %615 to void (%"class.SkSL::Type"*)***
  %619 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %618, align 8
  %620 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %619, i64 1
  %621 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %620, align 8
  tail call void %621(%"class.SkSL::Type"* nonnull %615) #16
  br label %622

622:                                              ; preds = %613, %617
  %623 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %624 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %623, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %623, align 8
  %625 = icmp eq %"class.SkSL::Type"* %624, null
  br i1 %625, label %631, label %626

626:                                              ; preds = %622
  %627 = bitcast %"class.SkSL::Type"* %624 to void (%"class.SkSL::Type"*)***
  %628 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %627, align 8
  %629 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %628, i64 1
  %630 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %629, align 8
  tail call void %630(%"class.SkSL::Type"* nonnull %624) #16
  br label %631

631:                                              ; preds = %622, %626
  %632 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %633 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %632, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %632, align 8
  %634 = icmp eq %"class.SkSL::Type"* %633, null
  br i1 %634, label %640, label %635

635:                                              ; preds = %631
  %636 = bitcast %"class.SkSL::Type"* %633 to void (%"class.SkSL::Type"*)***
  %637 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %636, align 8
  %638 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %637, i64 1
  %639 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %638, align 8
  tail call void %639(%"class.SkSL::Type"* nonnull %633) #16
  br label %640

640:                                              ; preds = %631, %635
  %641 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %642 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %641, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %641, align 8
  %643 = icmp eq %"class.SkSL::Type"* %642, null
  br i1 %643, label %649, label %644

644:                                              ; preds = %640
  %645 = bitcast %"class.SkSL::Type"* %642 to void (%"class.SkSL::Type"*)***
  %646 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %645, align 8
  %647 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %646, i64 1
  %648 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %647, align 8
  tail call void %648(%"class.SkSL::Type"* nonnull %642) #16
  br label %649

649:                                              ; preds = %640, %644
  %650 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %651 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %650, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %650, align 8
  %652 = icmp eq %"class.SkSL::Type"* %651, null
  br i1 %652, label %658, label %653

653:                                              ; preds = %649
  %654 = bitcast %"class.SkSL::Type"* %651 to void (%"class.SkSL::Type"*)***
  %655 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %654, align 8
  %656 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %655, i64 1
  %657 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %656, align 8
  tail call void %657(%"class.SkSL::Type"* nonnull %651) #16
  br label %658

658:                                              ; preds = %649, %653
  %659 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %660 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %659, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %659, align 8
  %661 = icmp eq %"class.SkSL::Type"* %660, null
  br i1 %661, label %667, label %662

662:                                              ; preds = %658
  %663 = bitcast %"class.SkSL::Type"* %660 to void (%"class.SkSL::Type"*)***
  %664 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %663, align 8
  %665 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %664, i64 1
  %666 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %665, align 8
  tail call void %666(%"class.SkSL::Type"* nonnull %660) #16
  br label %667

667:                                              ; preds = %658, %662
  %668 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %669 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %668, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %668, align 8
  %670 = icmp eq %"class.SkSL::Type"* %669, null
  br i1 %670, label %676, label %671

671:                                              ; preds = %667
  %672 = bitcast %"class.SkSL::Type"* %669 to void (%"class.SkSL::Type"*)***
  %673 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %672, align 8
  %674 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %673, i64 1
  %675 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %674, align 8
  tail call void %675(%"class.SkSL::Type"* nonnull %669) #16
  br label %676

676:                                              ; preds = %667, %671
  %677 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %678 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %677, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %677, align 8
  %679 = icmp eq %"class.SkSL::Type"* %678, null
  br i1 %679, label %685, label %680

680:                                              ; preds = %676
  %681 = bitcast %"class.SkSL::Type"* %678 to void (%"class.SkSL::Type"*)***
  %682 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %681, align 8
  %683 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %682, i64 1
  %684 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %683, align 8
  tail call void %684(%"class.SkSL::Type"* nonnull %678) #16
  br label %685

685:                                              ; preds = %676, %680
  %686 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %687 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %686, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %686, align 8
  %688 = icmp eq %"class.SkSL::Type"* %687, null
  br i1 %688, label %694, label %689

689:                                              ; preds = %685
  %690 = bitcast %"class.SkSL::Type"* %687 to void (%"class.SkSL::Type"*)***
  %691 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %690, align 8
  %692 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %691, i64 1
  %693 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %692, align 8
  tail call void %693(%"class.SkSL::Type"* nonnull %687) #16
  br label %694

694:                                              ; preds = %685, %689
  %695 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %696 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %695, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %695, align 8
  %697 = icmp eq %"class.SkSL::Type"* %696, null
  br i1 %697, label %703, label %698

698:                                              ; preds = %694
  %699 = bitcast %"class.SkSL::Type"* %696 to void (%"class.SkSL::Type"*)***
  %700 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %699, align 8
  %701 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %700, i64 1
  %702 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %701, align 8
  tail call void %702(%"class.SkSL::Type"* nonnull %696) #16
  br label %703

703:                                              ; preds = %694, %698
  %704 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %705 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %704, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %704, align 8
  %706 = icmp eq %"class.SkSL::Type"* %705, null
  br i1 %706, label %712, label %707

707:                                              ; preds = %703
  %708 = bitcast %"class.SkSL::Type"* %705 to void (%"class.SkSL::Type"*)***
  %709 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %708, align 8
  %710 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %709, i64 1
  %711 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %710, align 8
  tail call void %711(%"class.SkSL::Type"* nonnull %705) #16
  br label %712

712:                                              ; preds = %703, %707
  %713 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %714 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %713, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %713, align 8
  %715 = icmp eq %"class.SkSL::Type"* %714, null
  br i1 %715, label %721, label %716

716:                                              ; preds = %712
  %717 = bitcast %"class.SkSL::Type"* %714 to void (%"class.SkSL::Type"*)***
  %718 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %717, align 8
  %719 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %718, i64 1
  %720 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %719, align 8
  tail call void %720(%"class.SkSL::Type"* nonnull %714) #16
  br label %721

721:                                              ; preds = %712, %716
  %722 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %723 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %722, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %722, align 8
  %724 = icmp eq %"class.SkSL::Type"* %723, null
  br i1 %724, label %730, label %725

725:                                              ; preds = %721
  %726 = bitcast %"class.SkSL::Type"* %723 to void (%"class.SkSL::Type"*)***
  %727 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %726, align 8
  %728 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %727, i64 1
  %729 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %728, align 8
  tail call void %729(%"class.SkSL::Type"* nonnull %723) #16
  br label %730

730:                                              ; preds = %721, %725
  %731 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %732 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %731, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %731, align 8
  %733 = icmp eq %"class.SkSL::Type"* %732, null
  br i1 %733, label %739, label %734

734:                                              ; preds = %730
  %735 = bitcast %"class.SkSL::Type"* %732 to void (%"class.SkSL::Type"*)***
  %736 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %735, align 8
  %737 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %736, i64 1
  %738 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %737, align 8
  tail call void %738(%"class.SkSL::Type"* nonnull %732) #16
  br label %739

739:                                              ; preds = %730, %734
  %740 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %741 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %740, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %740, align 8
  %742 = icmp eq %"class.SkSL::Type"* %741, null
  br i1 %742, label %748, label %743

743:                                              ; preds = %739
  %744 = bitcast %"class.SkSL::Type"* %741 to void (%"class.SkSL::Type"*)***
  %745 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %744, align 8
  %746 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %745, i64 1
  %747 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %746, align 8
  tail call void %747(%"class.SkSL::Type"* nonnull %741) #16
  br label %748

748:                                              ; preds = %739, %743
  %749 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %750 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %749, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %749, align 8
  %751 = icmp eq %"class.SkSL::Type"* %750, null
  br i1 %751, label %757, label %752

752:                                              ; preds = %748
  %753 = bitcast %"class.SkSL::Type"* %750 to void (%"class.SkSL::Type"*)***
  %754 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %753, align 8
  %755 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %754, i64 1
  %756 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %755, align 8
  tail call void %756(%"class.SkSL::Type"* nonnull %750) #16
  br label %757

757:                                              ; preds = %748, %752
  %758 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %759 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %758, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %758, align 8
  %760 = icmp eq %"class.SkSL::Type"* %759, null
  br i1 %760, label %766, label %761

761:                                              ; preds = %757
  %762 = bitcast %"class.SkSL::Type"* %759 to void (%"class.SkSL::Type"*)***
  %763 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %762, align 8
  %764 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %763, i64 1
  %765 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %764, align 8
  tail call void %765(%"class.SkSL::Type"* nonnull %759) #16
  br label %766

766:                                              ; preds = %757, %761
  %767 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %768 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %767, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %767, align 8
  %769 = icmp eq %"class.SkSL::Type"* %768, null
  br i1 %769, label %775, label %770

770:                                              ; preds = %766
  %771 = bitcast %"class.SkSL::Type"* %768 to void (%"class.SkSL::Type"*)***
  %772 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %771, align 8
  %773 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %772, i64 1
  %774 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %773, align 8
  tail call void %774(%"class.SkSL::Type"* nonnull %768) #16
  br label %775

775:                                              ; preds = %766, %770
  %776 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %777 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %776, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %776, align 8
  %778 = icmp eq %"class.SkSL::Type"* %777, null
  br i1 %778, label %784, label %779

779:                                              ; preds = %775
  %780 = bitcast %"class.SkSL::Type"* %777 to void (%"class.SkSL::Type"*)***
  %781 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %780, align 8
  %782 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %781, i64 1
  %783 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %782, align 8
  tail call void %783(%"class.SkSL::Type"* nonnull %777) #16
  br label %784

784:                                              ; preds = %775, %779
  %785 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %786 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %785, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %785, align 8
  %787 = icmp eq %"class.SkSL::Type"* %786, null
  br i1 %787, label %793, label %788

788:                                              ; preds = %784
  %789 = bitcast %"class.SkSL::Type"* %786 to void (%"class.SkSL::Type"*)***
  %790 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %789, align 8
  %791 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %790, i64 1
  %792 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %791, align 8
  tail call void %792(%"class.SkSL::Type"* nonnull %786) #16
  br label %793

793:                                              ; preds = %784, %788
  %794 = getelementptr inbounds %"class.SkSL::BuiltinTypes", %"class.SkSL::BuiltinTypes"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %795 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %794, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %794, align 8
  %796 = icmp eq %"class.SkSL::Type"* %795, null
  br i1 %796, label %802, label %797

797:                                              ; preds = %793
  %798 = bitcast %"class.SkSL::Type"* %795 to void (%"class.SkSL::Type"*)***
  %799 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %798, align 8
  %800 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %799, i64 1
  %801 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %800, align 8
  tail call void %801(%"class.SkSL::Type"* nonnull %795) #16
  br label %802

802:                                              ; preds = %793, %797
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11IRGeneratorD2Ev(%"class.SkSL::IRGenerator"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.109"*, %"struct.std::__1::__hash_node_base.109"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.109"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.109"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.109", %"struct.std::__1::__hash_node_base.109"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.109"*, %"struct.std::__1::__hash_node_base.109"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.109"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  %10 = icmp eq %"struct.std::__1::__hash_node_base.109"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.109"**, %"struct.std::__1::__hash_node_base.109"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.109"** null, %"struct.std::__1::__hash_node_base.109"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.109"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.109"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.84"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.84"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.84"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  %26 = icmp eq %"struct.std::__1::__hash_node_base.84"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.84"** null, %"struct.std::__1::__hash_node_base.84"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.84"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.84"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %35 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %34, align 8
  %36 = icmp eq %"class.std::__1::__shared_weak_count"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0, i32 1
  %39 = atomicrmw add i64* %38, i64 -1 acq_rel
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0
  %43 = bitcast %"class.std::__1::__shared_weak_count"* %35 to void (%"class.std::__1::__shared_count"*)***
  %44 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %44, i64 2
  %46 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, align 8
  tail call void %46(%"class.std::__1::__shared_count"* %42) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %35) #16
  br label %47

47:                                               ; preds = %33, %37, %41
  %48 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %48, align 8
  store %"struct.SkSL::ASTFile"* null, %"struct.SkSL::ASTFile"** %48, align 8
  %50 = icmp eq %"struct.SkSL::ASTFile"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %52, align 8
  %54 = icmp eq %"struct.SkSL::ASTNode"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint %"struct.SkSL::ASTNode"* %53 to i64
  %57 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %49, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.SkSL::ASTNode"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"struct.SkSL::ASTNode"* %53 to i8*
  tail call void @_ZdlPv(i8* %59) #15
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"struct.SkSL::ASTFile"* %49 to i8*
  tail call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %47, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace.743"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.743", %"struct.std::__1::__shared_ptr_emplace.743"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.743", %"struct.std::__1::__shared_ptr_emplace.743"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace.743"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.743", %"struct.std::__1::__shared_ptr_emplace.743"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.743", %"struct.std::__1::__shared_ptr_emplace.743"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace.743"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace.743"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.743", %"struct.std::__1::__shared_ptr_emplace.743"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace.743"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace.743"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare void @_ZN4SkSL11IRGeneratorC1EPKNS_7ContextE(%"class.SkSL::IRGenerator"*, %"class.SkSL::Context"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.166"*, %"class.std::__1::unique_ptr.168"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.168"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.166"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.166"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.168"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.168"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.168"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.168"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.168"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.168"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.168"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.168"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.168"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.168"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.168"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.168"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.168"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !46

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.168"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.168"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.168"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.168"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.168"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.168"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.168"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.168"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.168"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.168"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.168"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.168"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.168"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.168"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.168"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.168"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.168"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.168"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.168"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.168"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.168"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.168"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.168"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.168"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.168"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.168"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.168"*
  %138 = icmp eq %"class.std::__1::unique_ptr.168"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.168"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.168"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace.755"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace.755"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #16
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace.755"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace.755"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.755", %"struct.std::__1::__shared_ptr_emplace.755"* %0, i64 0, i32 1, i32 0, i64 16
  %4 = bitcast i8* %3 to %"struct.std::__1::__hash_node_base.43"**
  %5 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.43"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %1, %29
  %8 = phi %"struct.std::__1::__hash_node_base.43"* [ %10, %29 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.43"*, %"struct.std::__1::__hash_node_base.43"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %8, i64 2
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.43", %"struct.std::__1::__hash_node_base.43"* %8, i64 5
  %13 = bitcast %"struct.std::__1::__hash_node_base.43"* %12 to %"class.SkSL::ProgramElement"**
  %14 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %13, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %13, align 8
  %15 = icmp eq %"class.SkSL::ProgramElement"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.SkSL::ProgramElement"* %14 to void (%"class.SkSL::ProgramElement"*)***
  %18 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %18, i64 1
  %20 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %19, align 8
  tail call void %20(%"class.SkSL::ProgramElement"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %7
  %22 = bitcast %"struct.std::__1::__hash_node_base.43"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = bitcast %"struct.std::__1::__hash_node_base.43"* %11 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %26, %21
  %30 = bitcast %"struct.std::__1::__hash_node_base.43"* %8 to i8*
  tail call void @_ZdlPv(i8* %30) #15
  %31 = icmp eq %"struct.std::__1::__hash_node_base.43"* %10, null
  br i1 %31, label %32, label %7

32:                                               ; preds = %29, %1
  %33 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::IRIntrinsicMap, std::__1::allocator<SkSL::IRIntrinsicMap> >::_Storage"* %2 to %"struct.std::__1::__hash_node_base.43"***
  %34 = load %"struct.std::__1::__hash_node_base.43"**, %"struct.std::__1::__hash_node_base.43"*** %33, align 8
  store %"struct.std::__1::__hash_node_base.43"** null, %"struct.std::__1::__hash_node_base.43"*** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.43"** %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.std::__1::__hash_node_base.43"** %34 to i8*
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %32, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL14IRIntrinsicMapENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace.755"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace.755"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE(%"struct.SkSL::Program"*, %"class.SkSL::String"*, %"struct.SkSL::ProgramConfig"*, %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"*, %"class.std::__1::vector.130"*, %"class.std::__1::vector.143"*, i64, %"class.std::__1::shared_ptr.37"* byval(%"class.std::__1::shared_ptr.37") align 8, i64, i16) unnamed_addr #0 comdat align 2 {
  %12 = ptrtoint %"class.SkSL::String"* %1 to i64
  %13 = ptrtoint %"struct.SkSL::ProgramConfig"* %2 to i64
  %14 = ptrtoint %"class.SkSL::Context"* %3 to i64
  %15 = bitcast %"struct.SkSL::Program"* %0 to i64*
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.228"* %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::shared_ptr"* %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2, i32 1
  store %"class.std::__1::__shared_weak_count"* %4, %"class.std::__1::__shared_weak_count"** %20, align 8
  %21 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %24 = atomicrmw add i64* %23, i64 1 monotonic
  br label %25

25:                                               ; preds = %11, %22
  %26 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3
  %27 = bitcast %"class.std::__1::shared_ptr.37"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::shared_ptr.37"* %26 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3, i32 1
  %31 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %8, i64 0, i32 1
  %32 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %31, align 8
  store %"class.std::__1::__shared_weak_count"* %32, %"class.std::__1::__shared_weak_count"** %30, align 8
  %33 = icmp eq %"class.std::__1::__shared_weak_count"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %36 = atomicrmw add i64* %35, i64 1 monotonic
  br label %37

37:                                               ; preds = %25, %34
  %38 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.234"* %38 to i64*
  store i64 %9, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 5
  %41 = bitcast %"struct.SkSL::Program::Inputs"* %40 to i16*
  store i16 %10, i16* %41, align 8
  %42 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6
  %43 = bitcast %"class.std::__1::vector.130"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #16
  %44 = bitcast %"class.std::__1::vector.130"* %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.130"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr.132"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.132"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.132"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.132"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.std::__1::vector.130"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #16
  %58 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7
  %59 = bitcast %"class.std::__1::vector.143"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  %60 = bitcast %"class.std::__1::vector.143"* %6 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.143"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %6, i64 0, i32 0, i32 1
  %64 = bitcast %"class.SkSL::ProgramElement"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 1
  %67 = bitcast %"class.SkSL::ProgramElement"*** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.SkSL::ProgramElement"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.SkSL::ProgramElement"*** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.std::__1::vector.143"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #16
  %74 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 8
  %75 = bitcast %"class.std::__1::unique_ptr.246"* %74 to i64*
  store i64 %7, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 9
  %77 = bitcast %"class.std::__1::unique_ptr.252"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = tail call %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_7ProgramE(%"struct.SkSL::Program"* dereferenceable(128) %0) #16
  %79 = ptrtoint %"class.SkSL::ProgramUsage"* %78 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.252"* %76, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %80, align 8
  store i64 %79, i64* %77, align 8
  %82 = icmp eq %"class.SkSL::ProgramUsage"* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %37
  %84 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %81, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %84, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %84, align 8
  %86 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %85 to i8*
  tail call void @_ZdaPv(i8* %88) #15
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %81, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %90, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %90, align 8
  %92 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %91 to i8*
  tail call void @_ZdaPv(i8* %94) #15
  br label %95

95:                                               ; preds = %93, %89
  %96 = bitcast %"class.SkSL::ProgramUsage"* %81 to i8*
  tail call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %37, %95
  br i1 %33, label %108, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %100 = atomicrmw add i64* %99, i64 -1 acq_rel
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0
  %104 = bitcast %"class.std::__1::__shared_weak_count"* %32 to void (%"class.std::__1::__shared_count"*)***
  %105 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %105, i64 2
  %107 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %106, align 8
  tail call void %107(%"class.std::__1::__shared_count"* %103) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %32) #16
  br label %108

108:                                              ; preds = %102, %98, %97
  br i1 %21, label %119, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %111 = atomicrmw add i64* %110, i64 -1 acq_rel
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %115 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %116 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %116, i64 2
  %118 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %117, align 8
  tail call void %118(%"class.std::__1::__shared_count"* %114) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #16
  br label %119

119:                                              ; preds = %108, %109, %113
  ret void
}

declare %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_7ProgramE(%"struct.SkSL::Program"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"*) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7ProgramD2Ev(%"struct.SkSL::Program"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  %4 = icmp eq %"class.SkSL::Pool"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"* nonnull %3) #16
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.132"* %11, %9
  br i1 %12, label %26, label %13

13:                                               ; preds = %6, %24
  %14 = phi %"class.std::__1::unique_ptr.132"* [ %15, %24 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %16, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %16, align 8
  %18 = icmp eq %"class.SkSL::ProgramElement"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.SkSL::ProgramElement"* %17 to void (%"class.SkSL::ProgramElement"*)***
  %21 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %21, i64 1
  %23 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %22, align 8
  tail call void %23(%"class.SkSL::ProgramElement"* nonnull %17) #16
  br label %24

24:                                               ; preds = %19, %13
  %25 = icmp eq %"class.std::__1::unique_ptr.132"* %15, %9
  br i1 %25, label %26, label %13

26:                                               ; preds = %24, %6
  store %"class.std::__1::unique_ptr.132"* %9, %"class.std::__1::unique_ptr.132"** %10, align 8
  %27 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2, i32 1
  %29 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %28, align 8
  %30 = bitcast %"class.std::__1::shared_ptr"* %27 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %30, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %29, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 -1 acq_rel
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %29, i64 0, i32 0
  %38 = bitcast %"class.std::__1::__shared_weak_count"* %29 to void (%"class.std::__1::__shared_count"*)***
  %39 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, i64 2
  %41 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %40, align 8
  tail call void %41(%"class.std::__1::__shared_count"* %37) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %29) #16
  br label %42

42:                                               ; preds = %26, %32, %36
  %43 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3, i32 1
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  %46 = bitcast %"class.std::__1::shared_ptr.37"* %43 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %46, align 8
  %47 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0, i32 1
  %50 = atomicrmw add i64* %49, i64 -1 acq_rel
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0
  %54 = bitcast %"class.std::__1::__shared_weak_count"* %45 to void (%"class.std::__1::__shared_count"*)***
  %55 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, i64 2
  %57 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %56, align 8
  tail call void %57(%"class.std::__1::__shared_count"* %53) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %45) #16
  br label %58

58:                                               ; preds = %42, %48, %52
  %59 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %60 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %59, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %59, align 8
  %61 = icmp eq %"class.SkSL::ModifiersPool"* %60, null
  br i1 %61, label %80, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62, %66
  %67 = phi %"struct.std::__1::__hash_node_base"* [ %69, %66 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #15
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %62
  %73 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %73, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.std::__1::__hash_node_base"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %76, %72
  %79 = bitcast %"class.SkSL::ModifiersPool"* %60 to i8*
  tail call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %58, %78
  %81 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  %82 = icmp eq %"class.SkSL::Pool"* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  tail call void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nonnull %81) #16
  br label %84

84:                                               ; preds = %80, %83
  %85 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %86 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %85, align 8
  store %"class.SkSL::ProgramUsage"* null, %"class.SkSL::ProgramUsage"** %85, align 8
  %87 = icmp eq %"class.SkSL::ProgramUsage"* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %86, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %89, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %89, align 8
  %91 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %90 to i8*
  tail call void @_ZdaPv(i8* %93) #15
  br label %94

94:                                               ; preds = %92, %88
  %95 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %86, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %95, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %95, align 8
  %97 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %96 to i8*
  tail call void @_ZdaPv(i8* %99) #15
  br label %100

100:                                              ; preds = %98, %94
  %101 = bitcast %"class.SkSL::ProgramUsage"* %86 to i8*
  tail call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %84, %100
  %103 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %59, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %59, align 8
  %104 = icmp eq %"class.SkSL::ModifiersPool"* %103, null
  br i1 %104, label %123, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %112, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %114, label %115, label %109

115:                                              ; preds = %109, %105
  %116 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %116, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"** %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast %"struct.std::__1::__hash_node_base"** %117 to i8*
  tail call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %119, %115
  %122 = bitcast %"class.SkSL::ModifiersPool"* %103 to i8*
  tail call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %102, %121
  %124 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 0
  %125 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %124, align 8
  %126 = icmp eq %"class.SkSL::ProgramElement"** %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = ptrtoint %"class.SkSL::ProgramElement"** %125 to i64
  %129 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 1
  %130 = bitcast %"class.SkSL::ProgramElement"*** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast %"class.SkSL::ProgramElement"** %125 to i8*
  tail call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %123, %127
  %133 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %8, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.132"* %133, null
  br i1 %134, label %157, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.std::__1::unique_ptr.132"* %133 to i8*
  %137 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %10, align 8
  %138 = icmp eq %"class.std::__1::unique_ptr.132"* %137, %133
  br i1 %138, label %155, label %139

139:                                              ; preds = %135, %150
  %140 = phi %"class.std::__1::unique_ptr.132"* [ %141, %150 ], [ %137, %135 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.132"* %141, %133
  br i1 %151, label %152, label %139

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::vector.130"* %7 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  store %"class.std::__1::unique_ptr.132"* %133, %"class.std::__1::unique_ptr.132"** %10, align 8
  tail call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %132, %155
  %158 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  store %"class.SkSL::Pool"* null, %"class.SkSL::Pool"** %2, align 8
  %159 = icmp eq %"class.SkSL::Pool"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  tail call void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"* nonnull %158) #16
  %161 = bitcast %"class.SkSL::Pool"* %158 to i8*
  tail call void @_ZdlPv(i8* %161) #15
  br label %162

162:                                              ; preds = %157, %160
  %163 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  %164 = icmp eq %"class.std::__1::__shared_weak_count"* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %163, i64 0, i32 0, i32 1
  %167 = atomicrmw add i64* %166, i64 -1 acq_rel
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %163, i64 0, i32 0
  %171 = bitcast %"class.std::__1::__shared_weak_count"* %163 to void (%"class.std::__1::__shared_count"*)***
  %172 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %172, i64 2
  %174 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %173, align 8
  tail call void %174(%"class.std::__1::__shared_count"* %170) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %163) #16
  br label %175

175:                                              ; preds = %162, %165, %169
  %176 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %28, align 8
  %177 = icmp eq %"class.std::__1::__shared_weak_count"* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %176, i64 0, i32 0, i32 1
  %180 = atomicrmw add i64* %179, i64 -1 acq_rel
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %176, i64 0, i32 0
  %184 = bitcast %"class.std::__1::__shared_weak_count"* %176 to void (%"class.std::__1::__shared_count"*)***
  %185 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %185, i64 2
  %187 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %186, align 8
  tail call void %187(%"class.std::__1::__shared_count"* %183) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %176) #16
  br label %188

188:                                              ; preds = %175, %178, %182
  %189 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %190 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %189, align 8
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %189, align 8
  %191 = icmp eq %"struct.SkSL::ProgramConfig"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %190, i64 0, i32 0
  tail call void @_ZdlPv(i8* %193) #15
  br label %194

194:                                              ; preds = %188, %192
  %195 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %196 = load %"class.SkSL::String"*, %"class.SkSL::String"** %195, align 8
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %195, align 8
  %197 = icmp eq %"class.SkSL::String"* %196, null
  br i1 %197, label %208, label %198

198:                                              ; preds = %194
  %199 = bitcast %"class.SkSL::String"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  tail call void @_ZdlPv(i8* %205) #15
  br label %206

206:                                              ; preds = %203, %198
  %207 = bitcast %"class.SkSL::String"* %196 to i8*
  tail call void @_ZdlPv(i8* %207) #15
  br label %208

208:                                              ; preds = %194, %206
  ret void
}

declare void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

declare i32 @_ZNK4SkSL12ProgramUsage3getERKNS_19FunctionDeclarationE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #2

declare void @_ZN4SkSL12ProgramUsage6removeERKNS_14ProgramElementE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4SkSL12ProgramUsage6isDeadERKNS_8VariableE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Variable"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEm(%"class.std::__1::vector.159"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i64*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i64, i64* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i64, i64* %13, i64 %18
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #16
  %26 = ptrtoint i64* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.159"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.159"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %33
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = getelementptr inbounds i64, i64* %58, i64 %1
  %61 = bitcast i64* %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #16
  %63 = ptrtoint i64* %59 to i64
  %64 = ptrtoint i64* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %0, i64 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i64, i64* %58, i64 %71
  %73 = ptrtoint i64* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i64* %72 to i8*
  %77 = bitcast i64* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #16
  %78 = load i64*, i64** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i64* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!4 = distinct !{!4, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!7 = distinct !{!7, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!10 = distinct !{!10, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!13 = distinct !{!13, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!16 = distinct !{!16, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!19 = distinct !{!19, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!22 = distinct !{!22, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm: argument 0"}
!25 = distinct !{!25, !"_ZN4SkSL8Compiler14MakeModuleDataEPKhm"}
!26 = !{i8 0, i8 2}
!27 = !{i64 0, i64 65}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!36 = distinct !{!36, !32}
!37 = distinct !{!37, !32}
!38 = distinct !{!38, !32}
!39 = distinct !{!39, !32}
!40 = distinct !{!40, !32}
!41 = distinct !{!41, !32}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!45 = distinct !{!45, !32}
!46 = distinct !{!46, !32}
