; ModuleID = '../../extensions/browser/extension_error.cc'
source_filename = "../../extensions/browser/extension_error.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExtensionError" = type { i32 (...)**, i32, %"class.std::__1::basic_string", i32, i8, i32, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.extensions::ManifestError" = type { %"class.extensions::ExtensionError", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1" }
%"class.extensions::RuntimeError" = type { %"class.extensions::ExtensionError", %class.GURL, %"class.std::__1::vector", i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"*, %"class.std::__1::__compressed_pair.14" }
%"struct.extensions::StackFrame" = type { i32, i32, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.extensions::StackFrame"* }
%"class.extensions::InternalError" = type { %"class.extensions::ExtensionError" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTVN10extensions14ExtensionErrorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::ExtensionError"*)* @_ZNK10extensions14ExtensionError14GetDebugStringEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"Extension Error:\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"\0A  OTR:     \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"\0A  Level:   \00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"\0A  Source:  \00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"\0A  Message: \00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"\0A  ID:      \00", align 1
@_ZN10extensions17kManifestFilenameE = external constant [0 x i8], align 1
@_ZTVN10extensions13ManifestErrorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ManifestError"*)* @_ZN10extensions13ManifestErrorD2Ev to i8*), i8* bitcast (void (%"class.extensions::ManifestError"*)* @_ZN10extensions13ManifestErrorD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::ManifestError"*)* @_ZNK10extensions13ManifestError14GetDebugStringEv to i8*), i8* bitcast (i1 (%"class.extensions::ManifestError"*, %"class.extensions::ExtensionError"*)* @_ZNK10extensions13ManifestError11IsEqualImplEPKNS_14ExtensionErrorE to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [26 x i8] c"\0A  Type:    ManifestError\00", align 1
@_ZTVN10extensions12RuntimeErrorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::RuntimeError"*)* @_ZN10extensions12RuntimeErrorD2Ev to i8*), i8* bitcast (void (%"class.extensions::RuntimeError"*)* @_ZN10extensions12RuntimeErrorD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::RuntimeError"*)* @_ZNK10extensions12RuntimeError14GetDebugStringEv to i8*), i8* bitcast (i1 (%"class.extensions::RuntimeError"*, %"class.extensions::ExtensionError"*)* @_ZNK10extensions12RuntimeError11IsEqualImplEPKNS_14ExtensionErrorE to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"\0A  Type:    RuntimeError\0A  Context: \00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"\0A  Stack Trace: \00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"\0A    {\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"\0A      Line:     \00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"\0A      Column:   \00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"\0A      URL:      \00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"\0A      Function: \00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"\0A    }\00", align 1
@_ZN10extensions32kGeneratedBackgroundPageFilenameE = external constant [0 x i8], align 1
@_ZTVN10extensions13InternalErrorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD2Ev to i8*), i8* bitcast (void (%"class.extensions::InternalError"*)* @_ZN10extensions13InternalErrorD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::InternalError"*)* @_ZNK10extensions13InternalError14GetDebugStringEv to i8*), i8* bitcast (i1 (%"class.extensions::InternalError"*, %"class.extensions::ExtensionError"*)* @_ZNK10extensions13InternalError11IsEqualImplEPKNS_14ExtensionErrorE to i8*)] }, align 8
@.str.18 = private unnamed_addr constant [26 x i8] c"\0A  Type:    InternalError\00", align 1

@_ZN10extensions14ExtensionErrorD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionError"*), void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD2Ev
@_ZN10extensions13ManifestErrorC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_ = hidden unnamed_addr alias void (%"class.extensions::ManifestError"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*), void (%"class.extensions::ManifestError"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*)* @_ZN10extensions13ManifestErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_
@_ZN10extensions13ManifestErrorD1Ev = hidden unnamed_addr alias void (%"class.extensions::ManifestError"*), void (%"class.extensions::ManifestError"*)* @_ZN10extensions13ManifestErrorD2Ev
@_ZN10extensions12RuntimeErrorC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbRKNS2_IDsNS3_IDsEENS5_IDsEEEESE_RKNS1_6vectorINS_10StackFrameENS5_ISG_EEEERK4GURLiii = hidden unnamed_addr alias void (%"class.extensions::RuntimeError"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::vector"*, %class.GURL*, i32, i32, i32), void (%"class.extensions::RuntimeError"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::vector"*, %class.GURL*, i32, i32, i32)* @_ZN10extensions12RuntimeErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbRKNS2_IDsNS3_IDsEENS5_IDsEEEESE_RKNS1_6vectorINS_10StackFrameENS5_ISG_EEEERK4GURLiii
@_ZN10extensions12RuntimeErrorD1Ev = hidden unnamed_addr alias void (%"class.extensions::RuntimeError"*), void (%"class.extensions::RuntimeError"*)* @_ZN10extensions12RuntimeErrorD2Ev
@_ZN10extensions13InternalErrorC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEEi = hidden unnamed_addr alias void (%"class.extensions::InternalError"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, i32), void (%"class.extensions::InternalError"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, i32)* @_ZN10extensions13InternalErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEEi
@_ZN10extensions13InternalErrorD2Ev = hidden unnamed_addr alias void (%"class.extensions::InternalError"*), bitcast (void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD2Ev to void (%"class.extensions::InternalError"*)*)
@_ZN10extensions13InternalErrorD1Ev = hidden unnamed_addr alias void (%"class.extensions::InternalError"*), bitcast (void (%"class.extensions::ExtensionError"*)* @_ZN10extensions14ExtensionErrorD2Ev to void (%"class.extensions::InternalError"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ExtensionErrorC2ENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbiRKNS3_IDsNS4_IDsEENS6_IDsEEEESF_(%"class.extensions::ExtensionError"*, i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext, i32, %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %8 = zext i1 %3 to i8
  %9 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions14ExtensionErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 1
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #13
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #13
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 3
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 4
  store i8 %8, i8* %26, align 4
  %27 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 5
  store i32 %4, i32* %27, align 8
  %28 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 6
  %29 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::basic_string.1"* %28 to i8*
  %35 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #13
  br label %211

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, 11
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string.1"* %28 to i16*
  %44 = trunc i64 %40 to i8
  %45 = bitcast %"class.std::__1::basic_string.1"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 %44, i8* %46, align 1
  br label %64

47:                                               ; preds = %36
  %48 = icmp ugt i64 %40, 9223372036854775791
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string.1"* %28 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %50) #14
  unreachable

51:                                               ; preds = %47
  %52 = add nuw nsw i64 %40, 8
  %53 = and i64 %52, -8
  %54 = icmp slt i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %51
  %57 = shl i64 %53, 1
  %58 = tail call i8* @_Znwm(i64 %57) #15
  %59 = bitcast i8* %58 to i16*
  %60 = bitcast %"class.std::__1::basic_string.1"* %28 to i8**
  store i8* %58, i8** %60, align 8
  %61 = or i64 %53, -9223372036854775808
  %62 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %63, align 8
  br label %64

64:                                               ; preds = %56, %42
  %65 = phi i16* [ %43, %42 ], [ %59, %56 ]
  %66 = add nuw nsw i64 %40, 1
  %67 = add i64 %40, 1
  %68 = icmp ult i64 %67, 16
  br i1 %68, label %158, label %69

69:                                               ; preds = %64
  %70 = add i64 %40, 1
  %71 = getelementptr i16, i16* %65, i64 %70
  %72 = getelementptr i16, i16* %38, i64 %70
  %73 = icmp ult i16* %65, %72
  %74 = icmp ult i16* %38, %71
  %75 = and i1 %73, %74
  br i1 %75, label %158, label %76

76:                                               ; preds = %69
  %77 = and i64 %67, -16
  %78 = sub i64 %66, %77
  %79 = getelementptr i16, i16* %38, i64 %77
  %80 = getelementptr i16, i16* %65, i64 %77
  %81 = add i64 %77, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %137, label %86

86:                                               ; preds = %76
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %134, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %135, %88 ]
  %91 = getelementptr i16, i16* %38, i64 %89
  %92 = getelementptr i16, i16* %65, i64 %89
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !2
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = or i64 %89, 16
  %102 = getelementptr i16, i16* %38, i64 %101
  %103 = getelementptr i16, i16* %65, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = or i64 %89, 32
  %113 = getelementptr i16, i16* %38, i64 %112
  %114 = getelementptr i16, i16* %65, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !2
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !2
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !5, !noalias !2
  %123 = or i64 %89, 48
  %124 = getelementptr i16, i16* %38, i64 %123
  %125 = getelementptr i16, i16* %65, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !2
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !2
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !5, !noalias !2
  %134 = add i64 %89, 64
  %135 = add i64 %90, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %88, !llvm.loop !7

137:                                              ; preds = %88, %76
  %138 = phi i64 [ 0, %76 ], [ %134, %88 ]
  %139 = icmp eq i64 %84, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %153, %140 ], [ %138, %137 ]
  %142 = phi i64 [ %154, %140 ], [ %84, %137 ]
  %143 = getelementptr i16, i16* %38, i64 %141
  %144 = getelementptr i16, i16* %65, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !2
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !2
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !5, !noalias !2
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !5, !noalias !2
  %153 = add i64 %141, 16
  %154 = add i64 %142, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %140, !llvm.loop !9

156:                                              ; preds = %140, %137
  %157 = icmp eq i64 %67, %77
  br i1 %157, label %211, label %158

158:                                              ; preds = %156, %69, %64
  %159 = phi i64 [ %66, %69 ], [ %66, %64 ], [ %78, %156 ]
  %160 = phi i16* [ %38, %69 ], [ %38, %64 ], [ %79, %156 ]
  %161 = phi i16* [ %65, %69 ], [ %65, %64 ], [ %80, %156 ]
  %162 = add i64 %159, -1
  %163 = and i64 %159, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %158, %165
  %166 = phi i64 [ %171, %165 ], [ %159, %158 ]
  %167 = phi i16* [ %173, %165 ], [ %160, %158 ]
  %168 = phi i16* [ %172, %165 ], [ %161, %158 ]
  %169 = phi i64 [ %174, %165 ], [ %163, %158 ]
  %170 = load i16, i16* %167, align 2
  store i16 %170, i16* %168, align 2
  %171 = add i64 %166, -1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = add i64 %169, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %165, !llvm.loop !11

176:                                              ; preds = %165, %158
  %177 = phi i64 [ %159, %158 ], [ %171, %165 ]
  %178 = phi i16* [ %160, %158 ], [ %173, %165 ]
  %179 = phi i16* [ %161, %158 ], [ %172, %165 ]
  %180 = icmp ult i64 %162, 7
  br i1 %180, label %211, label %181

181:                                              ; preds = %176, %181
  %182 = phi i64 [ %207, %181 ], [ %177, %176 ]
  %183 = phi i16* [ %209, %181 ], [ %178, %176 ]
  %184 = phi i16* [ %208, %181 ], [ %179, %176 ]
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %184, i64 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %184, i64 3
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %184, i64 4
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %184, i64 5
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %184, i64 6
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %184, i64 7
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = add i64 %182, -8
  %208 = getelementptr inbounds i16, i16* %184, i64 8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %181, !llvm.loop !12

211:                                              ; preds = %176, %181, %156, %33
  %212 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7
  %213 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %213, i64 0, i32 1, i32 1
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %211
  %218 = bitcast %"class.std::__1::basic_string.1"* %212 to i8*
  %219 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #13
  br label %395

220:                                              ; preds = %211
  %221 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i16*, i16** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = icmp ult i64 %224, 11
  br i1 %225, label %226, label %231

226:                                              ; preds = %220
  %227 = bitcast %"class.std::__1::basic_string.1"* %212 to i16*
  %228 = trunc i64 %224 to i8
  %229 = bitcast %"class.std::__1::basic_string.1"* %212 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %229, i64 0, i32 1, i32 1
  store i8 %228, i8* %230, align 1
  br label %248

231:                                              ; preds = %220
  %232 = icmp ugt i64 %224, 9223372036854775791
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::basic_string.1"* %212 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %234) #14
  unreachable

235:                                              ; preds = %231
  %236 = add nuw nsw i64 %224, 8
  %237 = and i64 %236, -8
  %238 = icmp slt i64 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %235
  tail call void @abort() #14
  unreachable

240:                                              ; preds = %235
  %241 = shl i64 %237, 1
  %242 = tail call i8* @_Znwm(i64 %241) #15
  %243 = bitcast i8* %242 to i16*
  %244 = bitcast %"class.std::__1::basic_string.1"* %212 to i8**
  store i8* %242, i8** %244, align 8
  %245 = or i64 %237, -9223372036854775808
  %246 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %224, i64* %247, align 8
  br label %248

248:                                              ; preds = %240, %226
  %249 = phi i16* [ %227, %226 ], [ %243, %240 ]
  %250 = add nuw nsw i64 %224, 1
  %251 = add i64 %224, 1
  %252 = icmp ult i64 %251, 16
  br i1 %252, label %342, label %253

253:                                              ; preds = %248
  %254 = add i64 %224, 1
  %255 = getelementptr i16, i16* %249, i64 %254
  %256 = getelementptr i16, i16* %222, i64 %254
  %257 = icmp ult i16* %249, %256
  %258 = icmp ult i16* %222, %255
  %259 = and i1 %257, %258
  br i1 %259, label %342, label %260

260:                                              ; preds = %253
  %261 = and i64 %251, -16
  %262 = sub i64 %250, %261
  %263 = getelementptr i16, i16* %222, i64 %261
  %264 = getelementptr i16, i16* %249, i64 %261
  %265 = add i64 %261, -16
  %266 = lshr exact i64 %265, 4
  %267 = add nuw nsw i64 %266, 1
  %268 = and i64 %267, 3
  %269 = icmp ult i64 %265, 48
  br i1 %269, label %321, label %270

270:                                              ; preds = %260
  %271 = sub nsw i64 %267, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %318, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %319, %272 ]
  %275 = getelementptr i16, i16* %222, i64 %273
  %276 = getelementptr i16, i16* %249, i64 %273
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !13
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !13
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !16, !noalias !13
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !16, !noalias !13
  %285 = or i64 %273, 16
  %286 = getelementptr i16, i16* %222, i64 %285
  %287 = getelementptr i16, i16* %249, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !13
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !13
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !16, !noalias !13
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !16, !noalias !13
  %296 = or i64 %273, 32
  %297 = getelementptr i16, i16* %222, i64 %296
  %298 = getelementptr i16, i16* %249, i64 %296
  %299 = bitcast i16* %297 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !13
  %301 = getelementptr i16, i16* %297, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !13
  %304 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !16, !noalias !13
  %305 = getelementptr i16, i16* %298, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !16, !noalias !13
  %307 = or i64 %273, 48
  %308 = getelementptr i16, i16* %222, i64 %307
  %309 = getelementptr i16, i16* %249, i64 %307
  %310 = bitcast i16* %308 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !13
  %312 = getelementptr i16, i16* %308, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !13
  %315 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %315, align 2, !alias.scope !16, !noalias !13
  %316 = getelementptr i16, i16* %309, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %317, align 2, !alias.scope !16, !noalias !13
  %318 = add i64 %273, 64
  %319 = add i64 %274, -4
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %272, !llvm.loop !18

321:                                              ; preds = %272, %260
  %322 = phi i64 [ 0, %260 ], [ %318, %272 ]
  %323 = icmp eq i64 %268, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %321, %324
  %325 = phi i64 [ %337, %324 ], [ %322, %321 ]
  %326 = phi i64 [ %338, %324 ], [ %268, %321 ]
  %327 = getelementptr i16, i16* %222, i64 %325
  %328 = getelementptr i16, i16* %249, i64 %325
  %329 = bitcast i16* %327 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !13
  %331 = getelementptr i16, i16* %327, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  %333 = load <8 x i16>, <8 x i16>* %332, align 2, !alias.scope !13
  %334 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %334, align 2, !alias.scope !16, !noalias !13
  %335 = getelementptr i16, i16* %328, i64 8
  %336 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %333, <8 x i16>* %336, align 2, !alias.scope !16, !noalias !13
  %337 = add i64 %325, 16
  %338 = add i64 %326, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !19

340:                                              ; preds = %324, %321
  %341 = icmp eq i64 %251, %261
  br i1 %341, label %395, label %342

342:                                              ; preds = %340, %253, %248
  %343 = phi i64 [ %250, %253 ], [ %250, %248 ], [ %262, %340 ]
  %344 = phi i16* [ %222, %253 ], [ %222, %248 ], [ %263, %340 ]
  %345 = phi i16* [ %249, %253 ], [ %249, %248 ], [ %264, %340 ]
  %346 = add i64 %343, -1
  %347 = and i64 %343, 7
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %360, label %349

349:                                              ; preds = %342, %349
  %350 = phi i64 [ %355, %349 ], [ %343, %342 ]
  %351 = phi i16* [ %357, %349 ], [ %344, %342 ]
  %352 = phi i16* [ %356, %349 ], [ %345, %342 ]
  %353 = phi i64 [ %358, %349 ], [ %347, %342 ]
  %354 = load i16, i16* %351, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %350, -1
  %356 = getelementptr inbounds i16, i16* %352, i64 1
  %357 = getelementptr inbounds i16, i16* %351, i64 1
  %358 = add i64 %353, -1
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %349, !llvm.loop !20

360:                                              ; preds = %349, %342
  %361 = phi i64 [ %343, %342 ], [ %355, %349 ]
  %362 = phi i16* [ %344, %342 ], [ %357, %349 ]
  %363 = phi i16* [ %345, %342 ], [ %356, %349 ]
  %364 = icmp ult i64 %346, 7
  br i1 %364, label %395, label %365

365:                                              ; preds = %360, %365
  %366 = phi i64 [ %391, %365 ], [ %361, %360 ]
  %367 = phi i16* [ %393, %365 ], [ %362, %360 ]
  %368 = phi i16* [ %392, %365 ], [ %363, %360 ]
  %369 = load i16, i16* %367, align 2
  store i16 %369, i16* %368, align 2
  %370 = getelementptr inbounds i16, i16* %368, i64 1
  %371 = getelementptr inbounds i16, i16* %367, i64 1
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %368, i64 2
  %374 = getelementptr inbounds i16, i16* %367, i64 2
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %368, i64 3
  %377 = getelementptr inbounds i16, i16* %367, i64 3
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %368, i64 4
  %380 = getelementptr inbounds i16, i16* %367, i64 4
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = getelementptr inbounds i16, i16* %368, i64 5
  %383 = getelementptr inbounds i16, i16* %367, i64 5
  %384 = load i16, i16* %383, align 2
  store i16 %384, i16* %382, align 2
  %385 = getelementptr inbounds i16, i16* %368, i64 6
  %386 = getelementptr inbounds i16, i16* %367, i64 6
  %387 = load i16, i16* %386, align 2
  store i16 %387, i16* %385, align 2
  %388 = getelementptr inbounds i16, i16* %368, i64 7
  %389 = getelementptr inbounds i16, i16* %367, i64 7
  %390 = load i16, i16* %389, align 2
  store i16 %390, i16* %388, align 2
  %391 = add i64 %366, -8
  %392 = getelementptr inbounds i16, i16* %368, i64 8
  %393 = getelementptr inbounds i16, i16* %367, i64 8
  %394 = icmp eq i64 %391, 0
  br i1 %394, label %395, label %365, !llvm.loop !21

395:                                              ; preds = %360, %365, %340, %217
  %396 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 8
  store i64 1, i64* %396, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions14ExtensionErrorD2Ev(%"class.extensions::ExtensionError"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions14ExtensionErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.1"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 6
  %13 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions14ExtensionErrorD0Ev(%"class.extensions::ExtensionError"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions14ExtensionError14GetDebugStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::ExtensionError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  %22 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 16, i8* %28, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #13
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = bitcast i64* %29 to i8*
  store i8 0, i8* %30, align 8
  %31 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #13, !noalias !22
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %32, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #13, !noalias !22
  %33 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 4
  %35 = load i8, i8* %34, align 4, !range !25
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
  %38 = select i1 %36, i64 5, i64 4
  %39 = trunc i64 %38 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 %37, i64 %38, i1 false) #13
  %42 = getelementptr inbounds i8, i8* %33, i64 %38
  store i8 0, i8* %42, align 1
  %43 = load i8, i8* %41, align 1, !noalias !26
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8, !noalias !26
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !26
  %49 = zext i8 %43 to i64
  %50 = select i1 %44, i8* %46, i8* %33
  %51 = select i1 %44, i64 %48, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %50, i64 %51) #13, !noalias !26
  %53 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %53, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13, !noalias !26
  %54 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #13, !noalias !29
  %55 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %55, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13, !noalias !29
  %56 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #13
  %57 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 5
  %58 = load i32, i32* %57, align 8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %14, i32 %58) #13
  %59 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1, !noalias !32
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !32
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8, !noalias !32
  %67 = zext i8 %61 to i64
  %68 = select i1 %62, i8* %64, i8* %56
  %69 = select i1 %62, i64 %66, i64 %67
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %68, i64 %69) #13, !noalias !32
  %71 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %71, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #13, !noalias !32
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #13, !noalias !35
  %73 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %73, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #13, !noalias !35
  %74 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 6
  %76 = bitcast %"class.std::__1::basic_string.1"* %75 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i16*, i16** %80, align 8
  %82 = bitcast %"class.std::__1::basic_string.1"* %75 to i16*
  %83 = select i1 %79, i16* %81, i16* %82
  %84 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %78 to i64
  %87 = select i1 %79, i64 %85, i64 %86
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i16* %83, i64 %87) #13
  %88 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1, !noalias !38
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8, !noalias !38
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !noalias !38
  %96 = zext i8 %90 to i64
  %97 = select i1 %91, i8* %93, i8* %74
  %98 = select i1 %91, i64 %95, i64 %96
  %99 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %97, i64 %98) #13, !noalias !38
  %100 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %100, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #13, !noalias !38
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #13, !noalias !41
  %102 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %102, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #13, !noalias !41
  %103 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #13
  %104 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 7
  %105 = bitcast %"class.std::__1::basic_string.1"* %104 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %105, i64 0, i32 1, i32 1
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = bitcast %"class.std::__1::basic_string.1"* %104 to i16*
  %112 = select i1 %108, i16* %110, i16* %111
  %113 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %107 to i64
  %116 = select i1 %108, i64 %114, i64 %115
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %16, i16* %112, i64 %116) #13
  %117 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1, !noalias !44
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8, !noalias !44
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8, !noalias !44
  %125 = zext i8 %119 to i64
  %126 = select i1 %120, i8* %122, i8* %103
  %127 = select i1 %120, i64 %124, i64 %125
  %128 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %126, i64 %127) #13, !noalias !44
  %129 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %129, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #13, !noalias !44
  %130 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)) #13, !noalias !47
  %131 = bitcast %"class.std::__1::basic_string"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %131, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #13, !noalias !47
  %132 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 2
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1, !noalias !50
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8, !noalias !50
  %139 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8, !noalias !50
  %141 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  %142 = zext i8 %135 to i64
  %143 = select i1 %136, i8* %138, i8* %141
  %144 = select i1 %136, i64 %140, i64 %142
  %145 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %143, i64 %144) #13, !noalias !50
  %146 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #13, !noalias !50
  %148 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %2
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #15
  br label %155

155:                                              ; preds = %2, %152
  %156 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #15
  br label %163

163:                                              ; preds = %155, %160
  %164 = load i8, i8* %118, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %167) #15
  br label %168

168:                                              ; preds = %163, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  %169 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #15
  br label %176

176:                                              ; preds = %168, %173
  %177 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %183) #15
  br label %184

184:                                              ; preds = %176, %181
  %185 = load i8, i8* %89, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %188) #15
  br label %189

189:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  %190 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %189, %194
  %198 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #15
  br label %205

205:                                              ; preds = %197, %202
  %206 = load i8, i8* %60, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %205
  %209 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %209) #15
  br label %210

210:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #13
  %211 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #15
  br label %218

218:                                              ; preds = %210, %215
  %219 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #15
  br label %226

226:                                              ; preds = %218, %223
  %227 = load i8, i8* %41, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %230) #15
  br label %231

231:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  %232 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %239

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %238) #15
  br label %239

239:                                              ; preds = %231, %236
  %240 = load i8, i8* %28, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %244) #15
  br label %245

245:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions14ExtensionError7IsEqualEPKS0_(%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %109

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %109

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %109

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %109

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %109

60:                                               ; preds = %45, %38, %44, %57
  %61 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7
  %62 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 7
  %63 = bitcast %"class.std::__1::basic_string.1"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = bitcast %"class.std::__1::basic_string.1"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = icmp eq i64 %70, %78
  br i1 %79, label %80, label %109

80:                                               ; preds = %60
  %81 = icmp eq i64 %70, 0
  br i1 %81, label %103, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string.1"* %62 to i16*
  %86 = select i1 %74, i16* %84, i16* %85
  %87 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i16*, i16** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string.1"* %61 to i16*
  %90 = select i1 %66, i16* %88, i16* %89
  br label %91

91:                                               ; preds = %98, %82
  %92 = phi i64 [ %99, %98 ], [ %70, %82 ]
  %93 = phi i16* [ %101, %98 ], [ %86, %82 ]
  %94 = phi i16* [ %100, %98 ], [ %90, %82 ]
  %95 = load i16, i16* %94, align 2
  %96 = load i16, i16* %93, align 2
  %97 = icmp eq i16 %96, %95
  br i1 %97, label %98, label %109

98:                                               ; preds = %91
  %99 = add i64 %92, -1
  %100 = getelementptr inbounds i16, i16* %94, i64 1
  %101 = getelementptr inbounds i16, i16* %93, i64 1
  %102 = icmp eq i64 %99, 0
  br i1 %102, label %103, label %91

103:                                              ; preds = %98, %80
  %104 = bitcast %"class.extensions::ExtensionError"* %0 to i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)***
  %105 = load i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)**, i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)*, i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)** %105, i64 3
  %107 = load i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)*, i1 (%"class.extensions::ExtensionError"*, %"class.extensions::ExtensionError"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.extensions::ExtensionError"* %0, %"class.extensions::ExtensionError"* %1) #13
  br label %109

109:                                              ; preds = %52, %91, %39, %8, %60, %103, %57, %2
  %110 = phi i1 [ false, %57 ], [ false, %2 ], [ %108, %103 ], [ false, %60 ], [ false, %8 ], [ false, %39 ], [ false, %91 ], [ false, %52 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13ManifestErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_(%"class.extensions::ManifestError"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions17kManifestFilenameE, i64 0, i64 0)) #13
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions17kManifestFilenameE, i64 0, i64 0), i64 %11) #13
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.1"* nonnull sret %6, %"class.base::FilePath"* nonnull %7) #13
  call void @_ZN10extensions14ExtensionErrorC2ENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbiRKNS3_IDsNS4_IDsEENS6_IDsEEEESF_(%"class.extensions::ExtensionError"* %8, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false, i32 1, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.1"* dereferenceable(24) %2)
  %12 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::basic_string.1"* %6 to i8**
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %5, %16
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %20 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions13ManifestErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string.1"* %21 to i8*
  %28 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #13
  br label %204

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 11
  br i1 %34, label %35, label %40

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.1"* %21 to i16*
  %37 = trunc i64 %33 to i8
  %38 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 %37, i8* %39, align 1
  br label %57

40:                                               ; preds = %29
  %41 = icmp ugt i64 %33, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::basic_string.1"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #14
  unreachable

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %33, 8
  %46 = and i64 %45, -8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @abort() #14
  unreachable

49:                                               ; preds = %44
  %50 = shl i64 %46, 1
  %51 = call i8* @_Znwm(i64 %50) #15
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast %"class.std::__1::basic_string.1"* %21 to i8**
  store i8* %51, i8** %53, align 8
  %54 = or i64 %46, -9223372036854775808
  %55 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %35
  %58 = phi i16* [ %36, %35 ], [ %52, %49 ]
  %59 = add nuw nsw i64 %33, 1
  %60 = add i64 %33, 1
  %61 = icmp ult i64 %60, 16
  br i1 %61, label %151, label %62

62:                                               ; preds = %57
  %63 = add i64 %33, 1
  %64 = getelementptr i16, i16* %58, i64 %63
  %65 = getelementptr i16, i16* %31, i64 %63
  %66 = icmp ult i16* %58, %65
  %67 = icmp ult i16* %31, %64
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %62
  %70 = and i64 %60, -16
  %71 = sub i64 %59, %70
  %72 = getelementptr i16, i16* %31, i64 %70
  %73 = getelementptr i16, i16* %58, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %31, i64 %82
  %85 = getelementptr i16, i16* %58, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !53
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !53
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !56, !noalias !53
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !56, !noalias !53
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %31, i64 %94
  %96 = getelementptr i16, i16* %58, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !53
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !53
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !56, !noalias !53
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !56, !noalias !53
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %31, i64 %105
  %107 = getelementptr i16, i16* %58, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !53
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !53
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !56, !noalias !53
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !56, !noalias !53
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %31, i64 %116
  %118 = getelementptr i16, i16* %58, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !53
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !53
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !56, !noalias !53
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !56, !noalias !53
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !58

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %31, i64 %134
  %137 = getelementptr i16, i16* %58, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !53
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !53
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !56, !noalias !53
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !56, !noalias !53
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !59

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %60, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %62, %57
  %152 = phi i64 [ %59, %62 ], [ %59, %57 ], [ %71, %149 ]
  %153 = phi i16* [ %31, %62 ], [ %31, %57 ], [ %72, %149 ]
  %154 = phi i16* [ %58, %62 ], [ %58, %57 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !60

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !61

204:                                              ; preds = %169, %174, %149, %26
  %205 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 2
  %206 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %204
  %211 = bitcast %"class.std::__1::basic_string.1"* %205 to i8*
  %212 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false) #13
  br label %388

213:                                              ; preds = %204
  %214 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i16*, i16** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = icmp ult i64 %217, 11
  br i1 %218, label %219, label %224

219:                                              ; preds = %213
  %220 = bitcast %"class.std::__1::basic_string.1"* %205 to i16*
  %221 = trunc i64 %217 to i8
  %222 = bitcast %"class.std::__1::basic_string.1"* %205 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %222, i64 0, i32 1, i32 1
  store i8 %221, i8* %223, align 1
  br label %241

224:                                              ; preds = %213
  %225 = icmp ugt i64 %217, 9223372036854775791
  br i1 %225, label %226, label %228

226:                                              ; preds = %224
  %227 = bitcast %"class.std::__1::basic_string.1"* %205 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %227) #14
  unreachable

228:                                              ; preds = %224
  %229 = add nuw nsw i64 %217, 8
  %230 = and i64 %229, -8
  %231 = icmp slt i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %228
  call void @abort() #14
  unreachable

233:                                              ; preds = %228
  %234 = shl i64 %230, 1
  %235 = call i8* @_Znwm(i64 %234) #15
  %236 = bitcast i8* %235 to i16*
  %237 = bitcast %"class.std::__1::basic_string.1"* %205 to i8**
  store i8* %235, i8** %237, align 8
  %238 = or i64 %230, -9223372036854775808
  %239 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %217, i64* %240, align 8
  br label %241

241:                                              ; preds = %233, %219
  %242 = phi i16* [ %220, %219 ], [ %236, %233 ]
  %243 = add nuw nsw i64 %217, 1
  %244 = add i64 %217, 1
  %245 = icmp ult i64 %244, 16
  br i1 %245, label %335, label %246

246:                                              ; preds = %241
  %247 = add i64 %217, 1
  %248 = getelementptr i16, i16* %242, i64 %247
  %249 = getelementptr i16, i16* %215, i64 %247
  %250 = icmp ult i16* %242, %249
  %251 = icmp ult i16* %215, %248
  %252 = and i1 %250, %251
  br i1 %252, label %335, label %253

253:                                              ; preds = %246
  %254 = and i64 %244, -16
  %255 = sub i64 %243, %254
  %256 = getelementptr i16, i16* %215, i64 %254
  %257 = getelementptr i16, i16* %242, i64 %254
  %258 = add i64 %254, -16
  %259 = lshr exact i64 %258, 4
  %260 = add nuw nsw i64 %259, 1
  %261 = and i64 %260, 3
  %262 = icmp ult i64 %258, 48
  br i1 %262, label %314, label %263

263:                                              ; preds = %253
  %264 = sub nsw i64 %260, %261
  br label %265

265:                                              ; preds = %265, %263
  %266 = phi i64 [ 0, %263 ], [ %311, %265 ]
  %267 = phi i64 [ %264, %263 ], [ %312, %265 ]
  %268 = getelementptr i16, i16* %215, i64 %266
  %269 = getelementptr i16, i16* %242, i64 %266
  %270 = bitcast i16* %268 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !62
  %272 = getelementptr i16, i16* %268, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !62
  %275 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %275, align 2, !alias.scope !65, !noalias !62
  %276 = getelementptr i16, i16* %269, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %277, align 2, !alias.scope !65, !noalias !62
  %278 = or i64 %266, 16
  %279 = getelementptr i16, i16* %215, i64 %278
  %280 = getelementptr i16, i16* %242, i64 %278
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !62
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !62
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !65, !noalias !62
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !65, !noalias !62
  %289 = or i64 %266, 32
  %290 = getelementptr i16, i16* %215, i64 %289
  %291 = getelementptr i16, i16* %242, i64 %289
  %292 = bitcast i16* %290 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !62
  %294 = getelementptr i16, i16* %290, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !62
  %297 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %297, align 2, !alias.scope !65, !noalias !62
  %298 = getelementptr i16, i16* %291, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %299, align 2, !alias.scope !65, !noalias !62
  %300 = or i64 %266, 48
  %301 = getelementptr i16, i16* %215, i64 %300
  %302 = getelementptr i16, i16* %242, i64 %300
  %303 = bitcast i16* %301 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !62
  %305 = getelementptr i16, i16* %301, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !62
  %308 = bitcast i16* %302 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !65, !noalias !62
  %309 = getelementptr i16, i16* %302, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !65, !noalias !62
  %311 = add i64 %266, 64
  %312 = add i64 %267, -4
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %265, !llvm.loop !67

314:                                              ; preds = %265, %253
  %315 = phi i64 [ 0, %253 ], [ %311, %265 ]
  %316 = icmp eq i64 %261, 0
  br i1 %316, label %333, label %317

317:                                              ; preds = %314, %317
  %318 = phi i64 [ %330, %317 ], [ %315, %314 ]
  %319 = phi i64 [ %331, %317 ], [ %261, %314 ]
  %320 = getelementptr i16, i16* %215, i64 %318
  %321 = getelementptr i16, i16* %242, i64 %318
  %322 = bitcast i16* %320 to <8 x i16>*
  %323 = load <8 x i16>, <8 x i16>* %322, align 2, !alias.scope !62
  %324 = getelementptr i16, i16* %320, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !62
  %327 = bitcast i16* %321 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %327, align 2, !alias.scope !65, !noalias !62
  %328 = getelementptr i16, i16* %321, i64 8
  %329 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %329, align 2, !alias.scope !65, !noalias !62
  %330 = add i64 %318, 16
  %331 = add i64 %319, -1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %317, !llvm.loop !68

333:                                              ; preds = %317, %314
  %334 = icmp eq i64 %244, %254
  br i1 %334, label %388, label %335

335:                                              ; preds = %333, %246, %241
  %336 = phi i64 [ %243, %246 ], [ %243, %241 ], [ %255, %333 ]
  %337 = phi i16* [ %215, %246 ], [ %215, %241 ], [ %256, %333 ]
  %338 = phi i16* [ %242, %246 ], [ %242, %241 ], [ %257, %333 ]
  %339 = add i64 %336, -1
  %340 = and i64 %336, 7
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %353, label %342

342:                                              ; preds = %335, %342
  %343 = phi i64 [ %348, %342 ], [ %336, %335 ]
  %344 = phi i16* [ %350, %342 ], [ %337, %335 ]
  %345 = phi i16* [ %349, %342 ], [ %338, %335 ]
  %346 = phi i64 [ %351, %342 ], [ %340, %335 ]
  %347 = load i16, i16* %344, align 2
  store i16 %347, i16* %345, align 2
  %348 = add i64 %343, -1
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = getelementptr inbounds i16, i16* %344, i64 1
  %351 = add i64 %346, -1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %342, !llvm.loop !69

353:                                              ; preds = %342, %335
  %354 = phi i64 [ %336, %335 ], [ %348, %342 ]
  %355 = phi i16* [ %337, %335 ], [ %350, %342 ]
  %356 = phi i16* [ %338, %335 ], [ %349, %342 ]
  %357 = icmp ult i64 %339, 7
  br i1 %357, label %388, label %358

358:                                              ; preds = %353, %358
  %359 = phi i64 [ %384, %358 ], [ %354, %353 ]
  %360 = phi i16* [ %386, %358 ], [ %355, %353 ]
  %361 = phi i16* [ %385, %358 ], [ %356, %353 ]
  %362 = load i16, i16* %360, align 2
  store i16 %362, i16* %361, align 2
  %363 = getelementptr inbounds i16, i16* %361, i64 1
  %364 = getelementptr inbounds i16, i16* %360, i64 1
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %361, i64 2
  %367 = getelementptr inbounds i16, i16* %360, i64 2
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %361, i64 3
  %370 = getelementptr inbounds i16, i16* %360, i64 3
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %361, i64 4
  %373 = getelementptr inbounds i16, i16* %360, i64 4
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %361, i64 5
  %376 = getelementptr inbounds i16, i16* %360, i64 5
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %361, i64 6
  %379 = getelementptr inbounds i16, i16* %360, i64 6
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %361, i64 7
  %382 = getelementptr inbounds i16, i16* %360, i64 7
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = add i64 %359, -8
  %385 = getelementptr inbounds i16, i16* %361, i64 8
  %386 = getelementptr inbounds i16, i16* %360, i64 8
  %387 = icmp eq i64 %384, 0
  br i1 %387, label %388, label %358, !llvm.loop !70

388:                                              ; preds = %353, %358, %333, %210
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #4

declare void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.1"* sret, %"class.base::FilePath"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13ManifestErrorD2Ev(%"class.extensions::ManifestError"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions13ManifestErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.1"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions14ExtensionErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %21 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0, i32 7
  %22 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string.1"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0, i32 6
  %31 = bitcast %"class.std::__1::basic_string.1"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.1"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %35, %29
  %39 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %0, i64 0, i32 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %38, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13ManifestErrorD0Ev(%"class.extensions::ManifestError"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions13ManifestErrorD2Ev(%"class.extensions::ManifestError"* %0) #13
  %2 = bitcast %"class.extensions::ManifestError"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13ManifestError14GetDebugStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::ManifestError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.extensions::ManifestError", %"class.extensions::ManifestError"* %1, i64 0, i32 0
  call void @_ZNK10extensions14ExtensionError14GetDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.extensions::ExtensionError"* %5)
  %6 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #13, !noalias !71
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13, !noalias !71
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13ManifestError11IsEqualImplEPKNS_14ExtensionErrorE(%"class.extensions::ManifestError"* nocapture readnone, %"class.extensions::ExtensionError"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12RuntimeErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbRKNS2_IDsNS3_IDsEENS5_IDsEEEESE_RKNS1_6vectorINS_10StackFrameENS5_ISG_EEEERK4GURLiii(%"class.extensions::RuntimeError"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %class.GURL* dereferenceable(120), i32, i32, i32) unnamed_addr #0 align 2 {
  %11 = alloca %"class.std::__1::allocator", align 1
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %class.GURL, align 8
  %14 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  br i1 %19, label %28, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %27, i64 24, i1 false) #13
  br label %31

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %30, i64 %21) #13
  br label %31

31:                                               ; preds = %26, %28
  call void @_ZN10extensions14ExtensionErrorC2ENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbiRKNS3_IDsNS4_IDsEENS6_IDsEEEESF_(%"class.extensions::ExtensionError"* %14, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i1 zeroext %2, i32 %7, %"class.std::__1::basic_string.1"* dereferenceable(24) %3, %"class.std::__1::basic_string.1"* dereferenceable(24) %4)
  %32 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %73

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #15
  br label %73

39:                                               ; preds = %10
  %40 = bitcast %class.GURL* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %40) #13
  %41 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string.1"* %3 to i16*
  %48 = select i1 %44, i16* %46, i16* %47
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %43 to i64
  %52 = select i1 %44, i64 %50, i64 %51
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %13, i16* %48, i64 %52) #13
  %53 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 0, i32 2, i32 3, i32 1
  %54 = load i32, i32* %53, align 4, !noalias !74
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #13, !alias.scope !74
  br label %64

57:                                               ; preds = %39
  %58 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 0, i32 0
  %59 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 0, i32 2, i32 3, i32 0
  %60 = load i32, i32* %59, align 8, !noalias !74
  %61 = sext i32 %60 to i64
  %62 = sext i32 %54 to i64
  %63 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %63) #13, !noalias !74
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %58, i64 %61, i64 %62, %"class.std::__1::allocator"* nonnull dereferenceable(1) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %63) #13, !noalias !74
  br label %64

64:                                               ; preds = %56, %57
  call void @_ZN10extensions14ExtensionErrorC2ENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbiRKNS3_IDsNS4_IDsEENS6_IDsEEEESF_(%"class.extensions::ExtensionError"* %14, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i1 zeroext %2, i32 %7, %"class.std::__1::basic_string.1"* dereferenceable(24) %3, %"class.std::__1::basic_string.1"* dereferenceable(24) %4)
  %65 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %64, %69
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %40) #13
  br label %73

73:                                               ; preds = %36, %31, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  %74 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions12RuntimeErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 1
  call void @_ZN4GURLC1ERKS_(%class.GURL* %75, %class.GURL* dereferenceable(120) %6) #13
  %76 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2
  %77 = bitcast %"class.std::__1::vector"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #13
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %79 = bitcast %"struct.extensions::StackFrame"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector"* %5 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = sdiv exact i64 %83, 56
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %114, label %86

86:                                               ; preds = %73
  %87 = icmp ugt i64 %84, 329406144173384850
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::vector"* %76 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #14
  unreachable

90:                                               ; preds = %86
  %91 = call i8* @_Znwm(i64 %83) #15
  %92 = bitcast i8* %91 to %"struct.extensions::StackFrame"*
  %93 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 1
  %94 = bitcast %"struct.extensions::StackFrame"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %76 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %92, i64 %84
  %97 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.extensions::StackFrame"* %96, %"struct.extensions::StackFrame"** %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %99 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %98, align 8
  %100 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %78, align 8
  %101 = bitcast %"struct.extensions::StackFrame"** %93 to i64*
  %102 = ptrtoint i8* %91 to i64
  %103 = icmp eq %"struct.extensions::StackFrame"* %99, %100
  br i1 %103, label %112, label %104

104:                                              ; preds = %90, %104
  %105 = phi %"struct.extensions::StackFrame"* [ %108, %104 ], [ %92, %90 ]
  %106 = phi %"struct.extensions::StackFrame"* [ %107, %104 ], [ %99, %90 ]
  call void @_ZN10extensions10StackFrameC1ERKS0_(%"struct.extensions::StackFrame"* %105, %"struct.extensions::StackFrame"* dereferenceable(56) %106) #13
  %107 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %106, i64 1
  %108 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %105, i64 1
  %109 = icmp eq %"struct.extensions::StackFrame"* %107, %100
  br i1 %109, label %110, label %104

110:                                              ; preds = %104
  %111 = ptrtoint %"struct.extensions::StackFrame"* %108 to i64
  br label %112

112:                                              ; preds = %110, %90
  %113 = phi i64 [ %102, %90 ], [ %111, %110 ]
  store i64 %113, i64* %101, align 8
  br label %114

114:                                              ; preds = %73, %112
  %115 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 3
  store i32 %8, i32* %115, align 8
  %116 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 4
  store i32 %9, i32* %116, align 4
  call void @_ZN10extensions12RuntimeError11CleanUpInitEv(%"class.extensions::RuntimeError"* %0)
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12RuntimeError11CleanUpInitEv(%"class.extensions::RuntimeError"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 6
  %7 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string.1"* %6 to i16*
  %14 = select i1 %10, i16* %12, i16* %13
  %15 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %2, i16* %14, i64 %18) #13
  %19 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 1
  %20 = bitcast %class.GURL* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %29

27:                                               ; preds = %1
  %28 = zext i8 %22 to i64
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i64 [ %26, %24 ], [ %28, %27 ]
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %88

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = select i1 %43, i8* %45, i8* %5
  %47 = getelementptr inbounds i8, i8* %46, i64 %39
  %48 = sext i32 %34 to i64
  br label %49

49:                                               ; preds = %32, %36
  %50 = phi i8* [ %47, %36 ], [ null, %32 ]
  %51 = phi i64 [ %48, %36 ], [ 0, %32 ]
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 1, i8* %55, align 1
  store i8 47, i8* %53, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 0, i8* %56, align 1
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions32kGeneratedBackgroundPageFilenameE, i64 0, i64 0)) #13, !noalias !79
  %58 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %58, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #13, !noalias !79
  %59 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp eq i64 %51, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = select i1 %62, i8* %70, i8* %52
  %72 = call i32 @bcmp(i8* %50, i8* %71, i64 %51) #13
  %73 = icmp eq i32 %72, 0
  br label %74

74:                                               ; preds = %49, %68
  %75 = phi i1 [ %73, %68 ], [ false, %49 ]
  br i1 %62, label %76, label %79

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %74, %76
  %80 = load i8, i8* %55, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %82, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br i1 %75, label %86, label %88

86:                                               ; preds = %85
  %87 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %19, %class.GURL* nonnull dereferenceable(120) %2) #13
  br label %88

88:                                               ; preds = %29, %86, %85
  %89 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %89, align 8
  %91 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 1
  %92 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %91, align 8
  %93 = icmp eq %"struct.extensions::StackFrame"* %90, %92
  br i1 %93, label %133, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %90, i64 0, i32 2
  %96 = load i8, i8* %8, align 1
  %97 = icmp slt i8 %96, 0
  %98 = load i64, i64* %15, align 8
  %99 = zext i8 %96 to i64
  %100 = select i1 %97, i64 %98, i64 %99
  %101 = bitcast %"class.std::__1::basic_string.1"* %95 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = icmp eq i64 %100, %108
  br i1 %109, label %110, label %131

110:                                              ; preds = %94
  %111 = icmp eq i64 %100, 0
  br i1 %111, label %133, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i16*, i16** %113, align 8
  %115 = bitcast %"class.std::__1::basic_string.1"* %95 to i16*
  %116 = select i1 %104, i16* %114, i16* %115
  %117 = load i16*, i16** %11, align 8
  %118 = select i1 %97, i16* %117, i16* %13
  br label %119

119:                                              ; preds = %126, %112
  %120 = phi i64 [ %127, %126 ], [ %100, %112 ]
  %121 = phi i16* [ %129, %126 ], [ %116, %112 ]
  %122 = phi i16* [ %128, %126 ], [ %118, %112 ]
  %123 = load i16, i16* %122, align 2
  %124 = load i16, i16* %121, align 2
  %125 = icmp eq i16 %124, %123
  br i1 %125, label %126, label %131

126:                                              ; preds = %119
  %127 = add i64 %120, -1
  %128 = getelementptr inbounds i16, i16* %122, i64 1
  %129 = getelementptr inbounds i16, i16* %121, i64 1
  %130 = icmp eq i64 %127, 0
  br i1 %130, label %133, label %119

131:                                              ; preds = %119, %94
  %132 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %6, %"class.std::__1::basic_string.1"* dereferenceable(24) %95)
  br label %133

133:                                              ; preds = %126, %110, %131, %88
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12RuntimeErrorD2Ev(%"class.extensions::RuntimeError"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions12RuntimeErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %4, align 8
  %6 = icmp eq %"struct.extensions::StackFrame"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.extensions::StackFrame"* %5 to i8*
  %9 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %9, align 8
  %11 = icmp eq %"struct.extensions::StackFrame"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.extensions::StackFrame"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %13, i64 -1
  tail call void @_ZN10extensions10StackFrameD1Ev(%"struct.extensions::StackFrame"* %14) #13
  %15 = icmp eq %"struct.extensions::StackFrame"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"struct.extensions::StackFrame"* %5, %"struct.extensions::StackFrame"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %22) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions14ExtensionErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %23 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 7
  %24 = bitcast %"class.std::__1::basic_string.1"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = bitcast %"class.std::__1::basic_string.1"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %28, %21
  %32 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 6
  %33 = bitcast %"class.std::__1::basic_string.1"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string.1"* %32 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %37, %31
  %41 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %40, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12RuntimeErrorD0Ev(%"class.extensions::RuntimeError"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions12RuntimeErrorD2Ev(%"class.extensions::RuntimeError"* %0) #13
  %2 = bitcast %"class.extensions::RuntimeError"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12RuntimeError14GetDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.extensions::RuntimeError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %1, i64 0, i32 0
  call void @_ZNK10extensions14ExtensionError14GetDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::ExtensionError"* %22)
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #13, !noalias !82
  %24 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %24, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #13, !noalias !82
  %25 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %1, i64 0, i32 1
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %25) #13
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !85
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !85
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !85
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i8* %32, i8* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %37, i64 %38) #13, !noalias !85
  %40 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %40, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #13, !noalias !85
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)) #13, !noalias !88
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13, !noalias !88
  %44 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %2, %48
  %52 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #15
  br label %59

59:                                               ; preds = %51, %56
  %60 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %68 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %1, i64 0, i32 2, i32 0, i32 0
  %69 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %68, align 8
  %70 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %1, i64 0, i32 2, i32 0, i32 1
  %71 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %70, align 8
  %72 = icmp eq %"struct.extensions::StackFrame"* %69, %71
  br i1 %72, label %126, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %81 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %127

126:                                              ; preds = %264, %67
  ret void

127:                                              ; preds = %73, %264
  %128 = phi %"struct.extensions::StackFrame"* [ %69, %73 ], [ %265, %264 ]
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  %130 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %14, i32 %131) #13
  %132 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %14, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #13, !noalias !91
  %133 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* align 8 %133, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #13, !noalias !91
  %134 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #13, !noalias !94
  %135 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 %135, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #13, !noalias !94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #13
  %136 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %15, i32 %137) #13
  %138 = load i8, i8* %85, align 1, !noalias !97
  %139 = icmp slt i8 %138, 0
  %140 = load i8*, i8** %86, align 8, !noalias !97
  %141 = load i64, i64* %87, align 8, !noalias !97
  %142 = zext i8 %138 to i64
  %143 = select i1 %139, i8* %140, i8* %83
  %144 = select i1 %139, i64 %141, i64 %142
  %145 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %143, i64 %144) #13, !noalias !97
  %146 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* align 8 %146, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #13, !noalias !97
  %147 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #13, !noalias !100
  %148 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 %148, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #13, !noalias !100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  %149 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 2
  %150 = bitcast %"class.std::__1::basic_string.1"* %149 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i16*, i16** %154, align 8
  %156 = bitcast %"class.std::__1::basic_string.1"* %149 to i16*
  %157 = select i1 %153, i16* %155, i16* %156
  %158 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = zext i8 %152 to i64
  %161 = select i1 %153, i64 %159, i64 %160
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %16, i16* %157, i64 %161) #13
  %162 = load i8, i8* %90, align 1, !noalias !103
  %163 = icmp slt i8 %162, 0
  %164 = load i8*, i8** %91, align 8, !noalias !103
  %165 = load i64, i64* %92, align 8, !noalias !103
  %166 = zext i8 %162 to i64
  %167 = select i1 %163, i8* %164, i8* %88
  %168 = select i1 %163, i64 %165, i64 %166
  %169 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %167, i64 %168) #13, !noalias !103
  %170 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %170, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #13, !noalias !103
  %171 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)) #13, !noalias !106
  %172 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %172, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 24, i1 false) #13, !noalias !106
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13
  %173 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 3
  %174 = bitcast %"class.std::__1::basic_string.1"* %173 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %174, i64 0, i32 1, i32 1
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  %178 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i16*, i16** %178, align 8
  %180 = bitcast %"class.std::__1::basic_string.1"* %173 to i16*
  %181 = select i1 %177, i16* %179, i16* %180
  %182 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = zext i8 %176 to i64
  %185 = select i1 %177, i64 %183, i64 %184
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %17, i16* %181, i64 %185) #13
  %186 = load i8, i8* %95, align 1, !noalias !109
  %187 = icmp slt i8 %186, 0
  %188 = load i8*, i8** %96, align 8, !noalias !109
  %189 = load i64, i64* %97, align 8, !noalias !109
  %190 = zext i8 %186 to i64
  %191 = select i1 %187, i8* %188, i8* %93
  %192 = select i1 %187, i64 %189, i64 %190
  %193 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %191, i64 %192) #13, !noalias !109
  %194 = bitcast %"class.std::__1::basic_string"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 %194, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 24, i1 false) #13, !noalias !109
  %195 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #13, !noalias !112
  %196 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %196, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #13, !noalias !112
  %197 = load i8, i8* %99, align 1
  %198 = icmp slt i8 %197, 0
  %199 = load i8*, i8** %100, align 8
  %200 = load i64, i64* %101, align 8
  %201 = zext i8 %197 to i64
  %202 = select i1 %198, i8* %199, i8* %74
  %203 = select i1 %198, i64 %200, i64 %201
  %204 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %202, i64 %203) #13
  %205 = load i8, i8* %99, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %127
  %208 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %208) #15
  br label %209

209:                                              ; preds = %127, %207
  %210 = load i8, i8* %103, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %213) #15
  br label %214

214:                                              ; preds = %209, %212
  %215 = load i8, i8* %95, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %218) #15
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  %220 = load i8, i8* %106, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %219
  %223 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %223) #15
  br label %224

224:                                              ; preds = %219, %222
  %225 = load i8, i8* %109, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %228) #15
  br label %229

229:                                              ; preds = %224, %227
  %230 = load i8, i8* %90, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %229
  %233 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %233) #15
  br label %234

234:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  %235 = load i8, i8* %112, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %234
  %238 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %238) #15
  br label %239

239:                                              ; preds = %234, %237
  %240 = load i8, i8* %115, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  %243 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %243) #15
  br label %244

244:                                              ; preds = %239, %242
  %245 = load i8, i8* %85, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %244
  %248 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %248) #15
  br label %249

249:                                              ; preds = %244, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #13
  %250 = load i8, i8* %118, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %249
  %253 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %253) #15
  br label %254

254:                                              ; preds = %249, %252
  %255 = load i8, i8* %121, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %258) #15
  br label %259

259:                                              ; preds = %254, %257
  %260 = load i8, i8* %124, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %259
  %263 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %263) #15
  br label %264

264:                                              ; preds = %259, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  %265 = getelementptr inbounds %"struct.extensions::StackFrame", %"struct.extensions::StackFrame"* %128, i64 1
  %266 = load %"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"** %70, align 8
  %267 = icmp eq %"struct.extensions::StackFrame"* %265, %266
  br i1 %267, label %126, label %127
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #4

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12RuntimeError11IsEqualImplEPKNS_14ExtensionErrorE(%"class.extensions::RuntimeError"*, %"class.extensions::ExtensionError"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %79

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 6
  %10 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 6
  %11 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string.1"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %79

28:                                               ; preds = %8
  %29 = icmp eq i64 %18, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.1"* %10 to i16*
  %34 = select i1 %22, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string.1"* %9 to i16*
  %38 = select i1 %14, i16* %36, i16* %37
  br label %39

39:                                               ; preds = %46, %30
  %40 = phi i64 [ %47, %46 ], [ %18, %30 ]
  %41 = phi i16* [ %49, %46 ], [ %34, %30 ]
  %42 = phi i16* [ %48, %46 ], [ %38, %30 ]
  %43 = load i16, i16* %42, align 2
  %44 = load i16, i16* %41, align 2
  %45 = icmp eq i16 %44, %43
  br i1 %45, label %46, label %79

46:                                               ; preds = %39
  %47 = add i64 %40, -1
  %48 = getelementptr inbounds i16, i16* %42, i64 1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %51, label %39

51:                                               ; preds = %46, %28
  %52 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 1
  %54 = bitcast %"class.extensions::ExtensionError"* %53 to %class.GURL*
  %55 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %52, %class.GURL* dereferenceable(120) %54) #13
  br i1 %55, label %56, label %79

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2
  %58 = getelementptr inbounds %"class.extensions::RuntimeError", %"class.extensions::RuntimeError"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = bitcast %"struct.extensions::StackFrame"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = getelementptr inbounds %"class.extensions::ExtensionError", %"class.extensions::ExtensionError"* %1, i64 2, i32 1
  %65 = getelementptr inbounds i32, i32* %64, i64 2
  %66 = bitcast i32* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast i32* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = icmp eq i64 %63, %70
  %72 = inttoptr i64 %62 to %"struct.extensions::StackFrame"*
  %73 = inttoptr i64 %69 to %"struct.extensions::StackFrame"*
  br i1 %71, label %74, label %79

74:                                               ; preds = %56
  %75 = inttoptr i64 %60 to %"struct.extensions::StackFrame"*
  %76 = icmp eq %"struct.extensions::StackFrame"* %72, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = tail call zeroext i1 @_ZNK10extensions10StackFrameeqERKS0_(%"struct.extensions::StackFrame"* %72, %"struct.extensions::StackFrame"* dereferenceable(56) %73) #13
  br label %79

79:                                               ; preds = %39, %8, %74, %77, %56, %51, %2
  %80 = phi i1 [ false, %56 ], [ false, %51 ], [ false, %2 ], [ true, %74 ], [ %78, %77 ], [ false, %8 ], [ false, %39 ]
  ret i1 %80
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #4

declare zeroext i1 @_ZNK10extensions10StackFrameeqERKS0_(%"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.1"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.1"*
  %35 = icmp ugt %"class.std::__1::basic_string.1"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !115
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !115
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !118, !noalias !115
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !118, !noalias !115
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !115
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !115
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !118, !noalias !115
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !118, !noalias !115
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !115
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !115
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !118, !noalias !115
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !118, !noalias !115
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !115
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !115
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !118, !noalias !115
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !118, !noalias !115
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !120

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !115
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !115
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !118, !noalias !115
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !118, !noalias !115
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !121

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !122

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !123

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !124
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !124
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !127, !noalias !124
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !127, !noalias !124
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !124
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !124
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !127, !noalias !124
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !127, !noalias !124
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !124
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !124
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !127, !noalias !124
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !127, !noalias !124
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !124
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !124
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !127, !noalias !124
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !127, !noalias !124
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !129

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !124
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !124
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !127, !noalias !124
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !127, !noalias !124
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !130

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !131

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !132

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !133
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !133
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !136, !noalias !133
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !136, !noalias !133
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !133
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !133
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !136, !noalias !133
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !136, !noalias !133
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !133
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !133
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !136, !noalias !133
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !136, !noalias !133
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !133
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !133
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !136, !noalias !133
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !136, !noalias !133
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !138

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !133
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !133
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !136, !noalias !133
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !136, !noalias !133
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !139

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !140

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !141

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.1"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13InternalErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS2_IDsNS3_IDsEENS5_IDsEEEEi(%"class.extensions::InternalError"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  call void @_ZN10extensions14ExtensionErrorC2ENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbiRKNS3_IDsNS4_IDsEENS6_IDsEEEESF_(%"class.extensions::ExtensionError"* %6, i32 2, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false, i32 %3, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.1"* dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions13InternalErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13InternalErrorD0Ev(%"class.extensions::InternalError"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions14ExtensionErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.1"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0, i32 6
  %13 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %0, i64 0, i32 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.extensions::InternalError"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13InternalError14GetDebugStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.extensions::InternalError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.extensions::InternalError", %"class.extensions::InternalError"* %1, i64 0, i32 0
  call void @_ZNK10extensions14ExtensionError14GetDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.extensions::ExtensionError"* %5)
  %6 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0)) #13, !noalias !142
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13, !noalias !142
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13InternalError11IsEqualImplEPKNS_14ExtensionErrorE(%"class.extensions::InternalError"* nocapture readnone, %"class.extensions::ExtensionError"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZN10extensions10StackFrameC1ERKS0_(%"struct.extensions::StackFrame"*, %"struct.extensions::StackFrame"* dereferenceable(56)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions10StackFrameD1Ev(%"struct.extensions::StackFrame"*) unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !145
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !145
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !148, !noalias !145
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !148, !noalias !145
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !145
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !145
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !148, !noalias !145
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !148, !noalias !145
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !145
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !145
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !148, !noalias !145
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !148, !noalias !145
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !145
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !145
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !148, !noalias !145
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !148, !noalias !145
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !150

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !145
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !145
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !148, !noalias !145
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !148, !noalias !145
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !151

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !152

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !153

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !154

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !155

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !156

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !158
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !158
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !161, !noalias !158
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !161, !noalias !158
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !158
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !158
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !161, !noalias !158
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !161, !noalias !158
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !158
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !158
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !161, !noalias !158
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !161, !noalias !158
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !158
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !158
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !161, !noalias !158
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !161, !noalias !158
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !163

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !158
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !158
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !161, !noalias !158
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !161, !noalias !158
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !164

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !165

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !166

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!25 = !{i8 0, i8 2}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !8}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!74 = !{!75, !77}
!75 = distinct !{!75, !76, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!76 = distinct !{!76, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!77 = distinct !{!77, !78, !"_ZNK4GURL4hostEv: argument 0"}
!78 = distinct !{!78, !"_ZNK4GURL4hostEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!81 = distinct !{!81, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!84 = distinct !{!84, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!90 = distinct !{!90, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!114 = distinct !{!114, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !8}
!121 = distinct !{!121, !10}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !8}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !8}
!130 = distinct !{!130, !10}
!131 = distinct !{!131, !10}
!132 = distinct !{!132, !8}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !8}
!139 = distinct !{!139, !10}
!140 = distinct !{!140, !10}
!141 = distinct !{!141, !8}
!142 = !{!143}
!143 = distinct !{!143, !144, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!144 = distinct !{!144, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!145 = !{!146}
!146 = distinct !{!146, !147}
!147 = distinct !{!147, !"LVerDomain"}
!148 = !{!149}
!149 = distinct !{!149, !147}
!150 = distinct !{!150, !8}
!151 = distinct !{!151, !10}
!152 = distinct !{!152, !10}
!153 = distinct !{!153, !8}
!154 = distinct !{!154, !8}
!155 = distinct !{!155, !10}
!156 = distinct !{!156, !157, !8}
!157 = !{!"llvm.loop.unroll.runtime.disable"}
!158 = !{!159}
!159 = distinct !{!159, !160}
!160 = distinct !{!160, !"LVerDomain"}
!161 = !{!162}
!162 = distinct !{!162, !160}
!163 = distinct !{!163, !8}
!164 = distinct !{!164, !10}
!165 = distinct !{!165, !10}
!166 = distinct !{!166, !8}
