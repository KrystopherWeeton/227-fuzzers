; ModuleID = '../../third_party/blink/renderer/core/layout/multi_column_fragmentainer_group.cc'
source_filename = "../../third_party/blink/renderer/core/layout/multi_column_fragmentainer_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MultiColumnFragmentainerGroup" = type <{ %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutMultiColumnSet" = type { %"class.blink::LayoutBlockFlow", %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1772 }
%class.scoped_refptr.1772 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1773", %"class.WTF::Vector.630", %"class.WTF::Vector.1775", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1778 }
%union.anon.1778 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1758" }
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1760" }
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1786 }
%class.scoped_refptr.1786 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1796" }
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1787", %"class.WTF::Vector.1787" }
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %class.scoped_refptr.1786*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1762" }
%"class.WTF::Vector.1762" = type { %"class.WTF::VectorBuffer.1763" }
%"class.WTF::VectorBuffer.1763" = type { %"class.WTF::VectorBufferBase.1764" }
%"class.WTF::VectorBufferBase.1764" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1767", %"class.absl::optional.1767", %"class.absl::optional.1767" }
%"class.absl::optional.1767" = type { %"class.absl::optional_internal::optional_data.1768" }
%"class.absl::optional_internal::optional_data.1768" = type { %"class.absl::optional_internal::optional_data_base.1769" }
%"class.absl::optional_internal::optional_data_base.1769" = type { %"class.absl::optional_internal::optional_data_dtor_base.1770" }
%"class.absl::optional_internal::optional_data_dtor_base.1770" = type { i8, %union.anon.1771 }
%union.anon.1771 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783", [32 x i8] }
%"class.WTF::VectorBufferBase.1783" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1723", i8 }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1713", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1713" = type { %"class.WTF::HashTable.1714" }
%"class.WTF::HashTable.1714" = type <{ %"struct.WTF::KeyValuePair.1717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1717" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1718", i32, i32 }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::PODIntervalTree.1723" = type { %"class.WTF::PODRedBlackTree.base.1727", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.1727" = type <{ i32 (...)**, %class.scoped_refptr.1725, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.1725 = type { %"class.WTF::PODFreeListArena.1726"* }
%"class.WTF::PODFreeListArena.1726" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1728", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1728" = type { %"class.base::RefCountedThreadSafe.1729" }
%"class.base::RefCountedThreadSafe.1729" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::MultiColumnFragmentainerGroupList" = type { %"class.blink::LayoutMultiColumnSet"*, %"class.WTF::Vector.1708" }
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710", [32 x i8] }
%"class.WTF::VectorBufferBase.1710" = type { %"class.blink::MultiColumnFragmentainerGroup"*, i32, i32 }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet", %"class.WTF::PODIntervalTree.1723", i8, [7 x i8] }>
%"class.blink::MinimumSpaceShortageFinder" = type { %"class.blink::ColumnBalancer.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32 }
%"class.blink::ColumnBalancer.base" = type <{ i32 (...)**, %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }>
%"class.blink::InitialColumnHeightFinder" = type { %"class.blink::ColumnBalancer.base", %"class.WTF::Vector.1730", %"class.WTF::Vector.1735", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732", [256 x i8] }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::InitialColumnHeightFinder::ContentRun"*, i32, i32 }
%"class.blink::InitialColumnHeightFinder::ContentRun" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1735" = type { %"class.WTF::VectorBuffer.1736" }
%"class.WTF::VectorBuffer.1736" = type { %"class.WTF::VectorBufferBase.1737", [128 x i8] }
%"class.WTF::VectorBufferBase.1737" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink25InitialColumnHeightFinderE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MultiColumnFragmentainerGroup]\00", align 1

@_ZN5blink29MultiColumnFragmentainerGroupC1ERKNS_20LayoutMultiColumnSetE = hidden unnamed_addr alias void (%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutMultiColumnSet"*), void (%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink29MultiColumnFragmentainerGroupC2ERKNS_20LayoutMultiColumnSetE
@_ZN5blink33MultiColumnFragmentainerGroupListC1ERNS_20LayoutMultiColumnSetE = hidden unnamed_addr alias void (%"class.blink::MultiColumnFragmentainerGroupList"*, %"class.blink::LayoutMultiColumnSet"*), void (%"class.blink::MultiColumnFragmentainerGroupList"*, %"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink33MultiColumnFragmentainerGroupListC2ERNS_20LayoutMultiColumnSetE
@_ZN5blink33MultiColumnFragmentainerGroupListD1Ev = hidden unnamed_addr alias void (%"class.blink::MultiColumnFragmentainerGroupList"*), void (%"class.blink::MultiColumnFragmentainerGroupList"*)* @_ZN5blink33MultiColumnFragmentainerGroupListD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink29MultiColumnFragmentainerGroupC2ERKNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 21, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink29MultiColumnFragmentainerGroup12IsFirstGroupEv(%"class.blink::MultiColumnFragmentainerGroup"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 1, i32 1
  %5 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %4, i32 0) #11
  %6 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %5, %0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink29MultiColumnFragmentainerGroup11IsLastGroupEv(%"class.blink::MultiColumnFragmentainerGroup"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 1, i32 1
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %4, i32 %7) #11
  %9 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %8, %0
  ret i1 %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink29MultiColumnFragmentainerGroup19OffsetFromColumnSetEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %5, i64 0, i32 2
  %7 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = trunc i96 %10 to i32
  %12 = icmp slt i32 %11, 0
  %13 = zext i32 %3 to i64
  %14 = shl nuw i64 %13, 32
  %15 = select i1 %12, i64 %14, i64 %13
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup42BlockOffsetInEnclosingFragmentationContextEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %6 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %5) #11
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %6) #11
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %13, i64 0, i32 2
  %15 = bitcast %"class.blink::LayoutFlowThread"** %14 to %"class.blink::LayoutMultiColumnFlowThread"**
  %16 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %16, i64 0, i32 6, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %18) #11
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !2
  ret i32 %24
}

declare i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup27LogicalHeightInFlowThreadAtEj(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5)
  store i32 64, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 64
  %10 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %11 = select i1 %9, %"class.blink::LayoutUnit"* %6, %"class.blink::LayoutUnit"* %10
  %12 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5)
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 64, i32* %3, align 4
  %15 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %16 = select i1 %9, %"class.blink::LayoutUnit"* %6, %"class.blink::LayoutUnit"* %15
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %19 = icmp ugt i32 %1, 33554430
  %20 = shl i32 %1, 6
  %21 = select i1 %19, i32 2147483647, i32 %20
  %22 = sext i32 %21 to i64
  %23 = sext i32 %18 to i64
  %24 = mul nsw i64 %23, %22
  %25 = sdiv i64 %24, 64
  %26 = ashr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %25 to i32
  %29 = ashr i32 %28, 31
  %30 = icmp eq i32 %29, %27
  br i1 %30, label %35, label %31

31:                                               ; preds = %2
  %32 = xor i32 %18, %21
  %33 = lshr i32 %32, 31
  %34 = add nuw i32 %33, 2147483647
  br label %35

35:                                               ; preds = %2, %31
  %36 = phi i32 [ %28, %2 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %36, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %36) #11
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = icmp slt i32 %13, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %13) #11
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %52 = add i32 %1, 1
  %53 = icmp ult i32 %52, %51
  br i1 %53, label %59, label %54

54:                                               ; preds = %35
  %55 = icmp eq i32 %52, %51
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %54, %35, %56
  %60 = phi i32 [ %50, %35 ], [ %58, %56 ], [ %44, %54 ]
  %61 = icmp sgt i32 %44, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %44) #11
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 %66, i32 0
  ret i32 %68
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %78, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %10) #11
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !2
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  br i1 %17, label %19, label %78

19:                                               ; preds = %6
  %20 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 64, i32* %2, align 4
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 64
  %25 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %26 = select i1 %24, %"class.blink::LayoutUnit"* %21, %"class.blink::LayoutUnit"* %25
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %29 = zext i32 %18 to i64
  %30 = shl nuw nsw i64 %29, 6
  %31 = sext i32 %28 to i64
  %32 = sdiv i64 %30, %31
  %33 = tail call i1 @llvm.is.constant.i64(i64 %32) #11
  br i1 %33, label %41, label %34

34:                                               ; preds = %19
  %35 = icmp slt i64 %32, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = add nsw i64 %32, 2147483648
  %38 = icmp ult i64 %37, 4294967296
  %39 = trunc i64 %32 to i32
  %40 = select i1 %38, i32 %39, i32 %36, !prof !4
  br label %47

41:                                               ; preds = %19
  %42 = icmp sgt i64 %32, 2147483647
  br i1 %42, label %54, label %43

43:                                               ; preds = %41
  %44 = icmp sgt i64 %32, -2147483648
  %45 = select i1 %44, i64 %32, i64 -2147483648
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i32 [ %40, %34 ], [ %46, %43 ]
  %49 = icmp slt i32 %48, -2147483584
  %50 = ashr i32 %48, 6
  br i1 %49, label %54, label %51

51:                                               ; preds = %47
  %52 = icmp ugt i32 %50, 33554430
  %53 = and i32 %48, -64
  br i1 %52, label %54, label %56

54:                                               ; preds = %51, %47, %41
  %55 = phi i32 [ %50, %51 ], [ 33554431, %41 ], [ -33554432, %47 ]
  br label %56

56:                                               ; preds = %54, %51
  %57 = phi i32 [ %55, %54 ], [ %50, %51 ]
  %58 = phi i32 [ 2147483647, %54 ], [ %53, %51 ]
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %31
  %61 = sdiv i64 %60, 64
  %62 = ashr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = trunc i64 %61 to i32
  %65 = ashr i32 %64, 31
  %66 = icmp eq i32 %65, %63
  br i1 %66, label %71, label %67

67:                                               ; preds = %56
  %68 = xor i32 %58, %28
  %69 = lshr i32 %68, 31
  %70 = add nuw i32 %69, 2147483647
  br label %71

71:                                               ; preds = %56, %67
  %72 = phi i32 [ %64, %56 ], [ %70, %67 ]
  %73 = icmp slt i32 %72, %18
  %74 = zext i1 %73 to i32
  %75 = add nsw i32 %57, %74
  %76 = icmp ult i32 %75, 10000
  %77 = select i1 %76, i32 %75, i32 10000
  ret i32 %77

78:                                               ; preds = %6, %1
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29MultiColumnFragmentainerGroup17ResetColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24CalculateMaxColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 5, i32 0
  store i32 %2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %5, i64 0, i32 2
  %7 = bitcast %"class.blink::LayoutFlowThread"** %6 to %"class.blink::LayoutMultiColumnFlowThread"**
  %8 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet12HeightIsAutoEv(%"class.blink::LayoutMultiColumnSet"* %5) #11
  br i1 %9, label %10, label %23

10:                                               ; preds = %1
  %11 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %8, i32 1) #11
  %12 = icmp eq %"class.blink::FragmentationContext"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %10
  %14 = bitcast %"class.blink::FragmentationContext"* %11 to i1 (%"class.blink::FragmentationContext"*)***
  %15 = load i1 (%"class.blink::FragmentationContext"*)**, i1 (%"class.blink::FragmentationContext"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %15, i64 2
  %17 = load i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::FragmentationContext"* nonnull %11) #11
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  %22 = load i32, i32* %3, align 4
  store i32 %22, i32* %21, align 4
  br label %53

23:                                               ; preds = %10, %13, %1
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %8, i64 0, i32 5, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  br i1 %26, label %51, label %28

28:                                               ; preds = %23
  store i8 1, i8* %27, align 4
  %29 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %30) #11
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %38 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %37) #11
  %39 = icmp sgt i32 %38, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %38) #11
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = icmp sgt i32 %44, 0
  %46 = select i1 %45, i32 %44, i32 0
  %47 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  %48 = load i32, i32* %3, align 4
  %49 = icmp slt i32 %48, %46
  %50 = select i1 %49, i32 %48, i32 %46
  store i32 %50, i32* %47, align 4
  br label %53

51:                                               ; preds = %23
  store i8 0, i8* %27, align 4
  %52 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %52, align 4
  br label %53

53:                                               ; preds = %28, %51, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup24CalculateMaxColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 2
  %5 = bitcast %"class.blink::LayoutFlowThread"** %4 to %"class.blink::LayoutMultiColumnFlowThread"**
  %6 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %5, align 8
  %7 = tail call i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"* %6) #11
  %8 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, -1
  %11 = select i1 %10, i32 -2147483648, i32 2147483647
  %12 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %9) #11
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 %11, i32 %14, !prof !2
  %16 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %17 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %16) #11
  %18 = icmp sgt i32 %17, -1
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %17) #11
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = icmp sgt i32 %23, 0
  %25 = select i1 %24, i32 %23, i32 0
  %26 = tail call %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %6, i32 1) #11
  %27 = icmp eq %"class.blink::FragmentationContext"* %26, null
  br i1 %27, label %63, label %28

28:                                               ; preds = %1
  %29 = bitcast %"class.blink::FragmentationContext"* %26 to i1 (%"class.blink::FragmentationContext"*)***
  %30 = load i1 (%"class.blink::FragmentationContext"*)**, i1 (%"class.blink::FragmentationContext"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %30, i64 2
  %32 = load i1 (%"class.blink::FragmentationContext"*)*, i1 (%"class.blink::FragmentationContext"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::FragmentationContext"* nonnull %26) #11
  br i1 %33, label %34, label %63

34:                                               ; preds = %28
  %35 = load i32, i32* %8, align 8
  %36 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %37 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %36) #11
  %38 = icmp slt i32 %37, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %37) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %44, i64 0, i32 2
  %46 = bitcast %"class.blink::LayoutFlowThread"** %45 to %"class.blink::LayoutMultiColumnFlowThread"**
  %47 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %47, i64 0, i32 6, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %49) #11
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = bitcast %"class.blink::FragmentationContext"* %26 to i32 (%"class.blink::FragmentationContext"*, i32)***
  %57 = load i32 (%"class.blink::FragmentationContext"*, i32)**, i32 (%"class.blink::FragmentationContext"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::FragmentationContext"*, i32)*, i32 (%"class.blink::FragmentationContext"*, i32)** %57, i64 4
  %59 = load i32 (%"class.blink::FragmentationContext"*, i32)*, i32 (%"class.blink::FragmentationContext"*, i32)** %58, align 8
  %60 = tail call i32 %59(%"class.blink::FragmentationContext"* nonnull %26, i32 %55) #11
  %61 = icmp sgt i32 %25, %60
  %62 = select i1 %61, i32 %60, i32 %25
  ret i32 %62

63:                                               ; preds = %1, %28
  ret i32 %25
}

declare zeroext i1 @_ZNK5blink20LayoutMultiColumnSet12HeightIsAutoEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #4

declare %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink29MultiColumnFragmentainerGroup27SetAndConstrainColumnHeightENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 5, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  %7 = select i1 %6, i32 %5, i32 %1
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup26HeightAdjustedForRowOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, -1
  %6 = select i1 %5, i32 -2147483648, i32 2147483647
  %7 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %4) #11
  %8 = extractvalue { i32, i1 } %7, 1
  %9 = extractvalue { i32, i1 } %7, 0
  %10 = select i1 %8, i32 %6, i32 %9, !prof !2
  %11 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %12 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %11, align 8
  %13 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %12) #11
  %14 = icmp sgt i32 %13, -1
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %13) #11
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink29MultiColumnFragmentainerGroup23RecalculateColumnHeightERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::MinimumSpaceShortageFinder", align 8
  %5 = alloca %"class.blink::InitialColumnHeightFinder", align 8
  %6 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24CalculateMaxColumnHeightEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 5, i32 0
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %11, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -1
  %16 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %12, i32 %15) #11
  %17 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %16, %0
  br i1 %17, label %18, label %121

18:                                               ; preds = %2
  %19 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet12HeightIsAutoEv(%"class.blink::LayoutMultiColumnSet"* %1) #11
  br i1 %19, label %20, label %121

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 5
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %71

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::InitialColumnHeightFinder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 456, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 456, i1 false)
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %29 = load i32, i32* %28, align 8
  call void @_ZN5blink25InitialColumnHeightFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::InitialColumnHeightFinder"* nonnull %5, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %1, i32 %27, i32 %29) #11
  %30 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 3, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  store i32 %31, i32* %3, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %1, i64 0, i32 3
  %34 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, %31
  %37 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %38 = select i1 %36, %"class.blink::LayoutUnit"* %33, %"class.blink::LayoutUnit"* %37
  %39 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  %41 = call i32 @_ZNK5blink25InitialColumnHeightFinder28InitialMinimalBalancedHeightEv(%"class.blink::InitialColumnHeightFinder"* nonnull %5) #11
  %42 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink25InitialColumnHeightFinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 2
  %44 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %24
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %24
  %49 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 2, i32 0, i32 1, i64 0
  %52 = bitcast i8* %51 to %"class.blink::LayoutUnit"*
  %53 = icmp eq %"class.blink::LayoutUnit"* %50, %52
  br i1 %53, label %56, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::Vector.1735", %"class.WTF::Vector.1735"* %43, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1736"* %55, %"class.blink::LayoutUnit"* %50) #11
  br label %56

56:                                               ; preds = %54, %48
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %49, align 8
  %57 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 1
  %58 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %56
  store i32 0, i32* %58, align 4
  br label %62

62:                                               ; preds = %61, %56
  %63 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::InitialColumnHeightFinder::ContentRun"*, %"class.blink::InitialColumnHeightFinder::ContentRun"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::InitialColumnHeightFinder", %"class.blink::InitialColumnHeightFinder"* %5, i64 0, i32 1, i32 0, i32 1, i64 0
  %66 = bitcast i8* %65 to %"class.blink::InitialColumnHeightFinder::ContentRun"*
  %67 = icmp eq %"class.blink::InitialColumnHeightFinder::ContentRun"* %64, %66
  br i1 %67, label %70, label %68, !prof !4

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::Vector.1730", %"class.WTF::Vector.1730"* %57, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1731"* %69, %"class.blink::InitialColumnHeightFinder::ContentRun"* %64) #11
  br label %70

70:                                               ; preds = %62, %68
  call void @llvm.lifetime.end.p0i8(i64 456, i8* nonnull %25) #11
  br label %116

71:                                               ; preds = %20
  %72 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0) #11
  %73 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %10, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %73, i64 0, i32 2
  %75 = bitcast %"class.blink::LayoutFlowThread"** %74 to %"class.blink::LayoutMultiColumnFlowThread"**
  %76 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %76, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp ugt i32 %72, %78
  %80 = load i32, i32* %6, align 4
  br i1 %79, label %81, label %116

81:                                               ; preds = %71
  %82 = load i32, i32* %9, align 4
  %83 = icmp slt i32 %80, %82
  br i1 %83, label %84, label %116

84:                                               ; preds = %81
  %85 = bitcast %"class.blink::MinimumSpaceShortageFinder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 40, i1 false) #11
  %86 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 8
  call void @_ZN5blink26MinimumSpaceShortageFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::MinimumSpaceShortageFinder"* nonnull %4, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %73, i32 %87, i32 %89) #11
  %90 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %4, i64 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  %93 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %10, align 8
  %94 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %93, i64 0, i32 2
  %95 = bitcast %"class.blink::LayoutFlowThread"** %94 to %"class.blink::LayoutMultiColumnFlowThread"**
  %96 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %96, i64 0, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = icmp ult i32 %92, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %84
  %101 = load i32, i32* %6, align 4
  br label %114

102:                                              ; preds = %84
  %103 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %4, i64 0, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 2147483647
  %106 = load i32, i32* %6, align 4
  br i1 %105, label %114, label %107

107:                                              ; preds = %102
  %108 = icmp slt i32 %104, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %104) #11
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !2
  br label %114

114:                                              ; preds = %107, %102, %100
  %115 = phi i32 [ %101, %100 ], [ %113, %107 ], [ %106, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #11
  br label %116

116:                                              ; preds = %114, %81, %71, %70
  %117 = phi i32 [ %41, %70 ], [ %115, %114 ], [ %80, %71 ], [ %80, %81 ]
  store i32 %117, i32* %6, align 4
  %118 = load i32, i32* %9, align 4
  %119 = icmp slt i32 %118, %117
  %120 = select i1 %119, i32 %118, i32 %117
  br label %126

121:                                              ; preds = %18, %2
  %122 = load i32, i32* %6, align 4
  %123 = load i32, i32* %9, align 4
  %124 = icmp slt i32 %123, %122
  %125 = select i1 %124, i32 %123, i32 %122
  br label %126

126:                                              ; preds = %121, %116
  %127 = phi i32 [ %125, %121 ], [ %120, %116 ]
  store i32 %127, i32* %6, align 4
  %128 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  store i8 1, i8* %128, align 4
  %129 = icmp ne i32 %127, %7
  ret i1 %129
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink25InitialColumnHeightFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::InitialColumnHeightFinder"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360), i32, i32) unnamed_addr #4

declare i32 @_ZNK5blink25InitialColumnHeightFinder28InitialMinimalBalancedHeightEv(%"class.blink::InitialColumnHeightFinder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup29RebalanceColumnHeightIfNeededEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::MinimumSpaceShortageFinder", align 8
  %3 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %5, i64 0, i32 2
  %7 = bitcast %"class.blink::LayoutFlowThread"** %6 to %"class.blink::LayoutMultiColumnFlowThread"**
  %8 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %3, %10
  %12 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %50

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 5, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::MinimumSpaceShortageFinder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 40, i1 false)
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 8
  call void @_ZN5blink26MinimumSpaceShortageFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::MinimumSpaceShortageFinder"* nonnull %2, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360) %5, i32 %21, i32 %23) #11
  %24 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %2, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, 1
  %27 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %27, i64 0, i32 2
  %29 = bitcast %"class.blink::LayoutFlowThread"** %28 to %"class.blink::LayoutMultiColumnFlowThread"**
  %30 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %26, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %18
  %35 = load i32, i32* %12, align 4
  br label %48

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.blink::MinimumSpaceShortageFinder", %"class.blink::MinimumSpaceShortageFinder"* %2, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 2147483647
  %40 = load i32, i32* %12, align 4
  br i1 %39, label %48, label %41

41:                                               ; preds = %36
  %42 = icmp slt i32 %38, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %38) #11
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  br label %48

48:                                               ; preds = %36, %41, %34
  %49 = phi i32 [ %35, %34 ], [ %47, %41 ], [ %40, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  br label %50

50:                                               ; preds = %14, %1, %48
  %51 = phi i32 [ %49, %48 ], [ %13, %1 ], [ %13, %14 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink29MultiColumnFragmentainerGroup29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %6 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %6, i64 0, i32 2
  %8 = bitcast %"class.blink::LayoutFlowThread"** %7 to %"class.blink::LayoutMultiColumnFlowThread"**
  %9 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %15 = add i32 %14, -1
  br label %18

16:                                               ; preds = %4
  %17 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %1, i32 %2)
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi i32 [ %15, %13 ], [ %17, %16 ]
  %20 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup23FlowThreadPortionRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %19)
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 5070602400912917605986812821504
  br i1 %32, label %33, label %42, !prof !2

33:                                               ; preds = %18
  %34 = extractvalue { i64, i64 } %20, 1
  %35 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = trunc i64 %34 to i32
  %37 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %9 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %38 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %38, i64 106
  %40 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutObject"* %35, i32 %22, i32 %36, %"class.blink::LayoutBox"* null) #11
  br label %42

42:                                               ; preds = %18, %33
  %43 = phi i32 [ %41, %33 ], [ %22, %18 ]
  %44 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %9 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %45 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %45, i64 147
  %47 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %46, align 8
  %48 = tail call %"class.blink::LayoutBox"* %47(%"class.blink::LayoutBox"* %25) #11
  %49 = icmp eq %"class.blink::LayoutBox"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %48, i64 0, i32 0, i32 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = and i160 %55, 15211807202738752817960438464512
  %57 = icmp eq i160 %56, 5070602400912917605986812821504
  br i1 %57, label %63, label %58, !prof !2

58:                                               ; preds = %50, %42
  %59 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %"class.blink::LayoutRect"* %59 to i64*
  %61 = load i64, i64* %60, align 4
  %62 = trunc i64 %61 to i32
  br label %88

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %48, i64 0, i32 2, i32 1
  %65 = bitcast %"class.blink::LayoutSize"* %64 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %69 = bitcast %"class.blink::LayoutSize"* %68 to i64*
  %70 = load i64, i64* %69, align 4
  %71 = trunc i64 %70 to i32
  %72 = icmp sgt i32 %71, -1
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %67, i32 %71) #11
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !2
  %78 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = bitcast %"class.blink::LayoutRect"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = trunc i64 %80 to i32
  %82 = icmp sgt i32 %81, -1
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %81) #11
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  br label %88

88:                                               ; preds = %58, %63
  %89 = phi i32 [ %62, %58 ], [ %87, %63 ]
  %90 = phi i64 [ %61, %58 ], [ %80, %63 ]
  %91 = lshr i64 %90, 32
  %92 = trunc i64 %91 to i32
  %93 = icmp slt i32 %89, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %89) #11
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = icmp slt i32 %92, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %92) #11
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !2
  %105 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup12ColumnRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %19)
  %106 = extractvalue { i64, i64 } %105, 0
  %107 = trunc i64 %106 to i32
  %108 = lshr i64 %106, 32
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 1, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %112, i64 0, i32 2
  %114 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %116 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %115 to i96*
  %117 = load i96, i96* %116, align 4
  %118 = trunc i96 %117 to i32
  %119 = icmp slt i32 %118, 0
  %120 = zext i32 %111 to i64
  %121 = shl nuw i64 %120, 32
  %122 = select i1 %119, i64 %121, i64 %120
  %123 = trunc i64 %122 to i32
  %124 = lshr i64 %122, 32
  %125 = trunc i64 %124 to i32
  %126 = icmp slt i32 %123, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %123) #11
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !2
  %132 = icmp slt i32 %125, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %109, i32 %125) #11
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !2
  %138 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %112, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %140, i64 0, i32 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = and i160 %143, 15211807202738752817960438464512
  %145 = icmp eq i160 %144, 5070602400912917605986812821504
  br i1 %145, label %146, label %157, !prof !2

146:                                              ; preds = %88
  %147 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutBox"**
  %148 = extractvalue { i64, i64 } %105, 1
  %149 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = trunc i64 %148 to i32
  %151 = bitcast %"class.blink::LayoutMultiColumnSet"* %112 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %152 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %151, align 8
  %153 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %152, i64 106
  %154 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %153, align 8
  %155 = tail call i32 %154(%"class.blink::LayoutObject"* %149, i32 %131, i32 %150, %"class.blink::LayoutBox"* null) #11
  %156 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %147, align 8
  br label %157

157:                                              ; preds = %88, %146
  %158 = phi %"class.blink::LayoutBox"* [ %156, %146 ], [ %138, %88 ]
  %159 = phi i32 [ %155, %146 ], [ %131, %88 ]
  %160 = bitcast %"class.blink::LayoutBox"* %158 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %161 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %161, i64 147
  %163 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %162, align 8
  %164 = tail call %"class.blink::LayoutBox"* %163(%"class.blink::LayoutBox"* %158) #11
  %165 = icmp eq %"class.blink::LayoutBox"* %164, null
  br i1 %165, label %174, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %164, i64 0, i32 0, i32 0, i32 5, i32 0
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8
  %172 = and i160 %171, 15211807202738752817960438464512
  %173 = icmp eq i160 %172, 5070602400912917605986812821504
  br i1 %173, label %179, label %174, !prof !2

174:                                              ; preds = %166, %157
  %175 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 2
  %176 = bitcast %"class.blink::LayoutRect"* %175 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = trunc i64 %177 to i32
  br label %204

179:                                              ; preds = %166
  %180 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %164, i64 0, i32 2, i32 1
  %181 = bitcast %"class.blink::LayoutSize"* %180 to i64*
  %182 = load i64, i64* %181, align 4
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 2, i32 1
  %185 = bitcast %"class.blink::LayoutSize"* %184 to i64*
  %186 = load i64, i64* %185, align 4
  %187 = trunc i64 %186 to i32
  %188 = icmp sgt i32 %187, -1
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %183, i32 %187) #11
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !2
  %194 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 2
  %195 = bitcast %"class.blink::LayoutRect"* %194 to i64*
  %196 = load i64, i64* %195, align 4
  %197 = trunc i64 %196 to i32
  %198 = icmp sgt i32 %197, -1
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %193, i32 %197) #11
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !2
  br label %204

204:                                              ; preds = %174, %179
  %205 = phi i32 [ %178, %174 ], [ %203, %179 ]
  %206 = phi i64 [ %177, %174 ], [ %196, %179 ]
  %207 = lshr i64 %206, 32
  %208 = trunc i64 %207 to i32
  %209 = icmp slt i32 %205, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %159, i32 %205) #11
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = icmp slt i32 %208, 0
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %137, i32 %208) #11
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !2
  %221 = icmp sgt i32 %98, -1
  %222 = select i1 %221, i32 -2147483648, i32 2147483647
  %223 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %98) #11
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 %222, i32 %225, !prof !2
  %227 = icmp sgt i32 %104, -1
  %228 = select i1 %227, i32 -2147483648, i32 2147483647
  %229 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %220, i32 %104) #11
  %230 = extractvalue { i32, i1 } %229, 1
  %231 = extractvalue { i32, i1 } %229, 0
  %232 = select i1 %230, i32 %228, i32 %231, !prof !2
  %233 = icmp eq i32 %3, 0
  br i1 %233, label %320, label %234

234:                                              ; preds = %204
  %235 = tail call %"class.blink::LayoutMultiColumnFlowThread"* @_ZNK5blink27LayoutMultiColumnFlowThread19EnclosingFlowThreadENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* %9, i32 1) #11
  %236 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %235, null
  br i1 %236, label %305, label %237

237:                                              ; preds = %234
  %238 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread19FirstMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"* %9) #11
  %239 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %238, i64 0, i32 1, i32 1
  %240 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %239, i32 0) #11
  %241 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %240, i64 0, i32 1, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %240, i64 0, i32 0
  %244 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %243, align 8
  %245 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %244) #11
  %246 = icmp slt i32 %245, 0
  %247 = select i1 %246, i32 -2147483648, i32 2147483647
  %248 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %242, i32 %245) #11
  %249 = extractvalue { i32, i1 } %248, 1
  %250 = extractvalue { i32, i1 } %248, 0
  %251 = select i1 %249, i32 %247, i32 %250, !prof !2
  %252 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %243, align 8
  %253 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %252, i64 0, i32 2
  %254 = bitcast %"class.blink::LayoutFlowThread"** %253 to %"class.blink::LayoutMultiColumnFlowThread"**
  %255 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %255, i64 0, i32 6, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp slt i32 %257, 0
  %259 = select i1 %258, i32 -2147483648, i32 2147483647
  %260 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %251, i32 %257) #11
  %261 = extractvalue { i32, i1 } %260, 1
  %262 = extractvalue { i32, i1 } %260, 0
  %263 = select i1 %261, i32 %259, i32 %262, !prof !2
  %264 = tail call i64 @_ZNK5blink27LayoutMultiColumnFlowThread29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %235, i32 %263, i32 1, i32 %3) #11
  %265 = trunc i64 %264 to i32
  %266 = lshr i64 %264, 32
  %267 = trunc i64 %266 to i32
  %268 = load i32, i32* %110, align 8
  %269 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %270 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* %269) #11
  %271 = icmp slt i32 %270, 0
  %272 = select i1 %271, i32 -2147483648, i32 2147483647
  %273 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %268, i32 %270) #11
  %274 = extractvalue { i32, i1 } %273, 1
  %275 = extractvalue { i32, i1 } %273, 0
  %276 = select i1 %274, i32 %272, i32 %275, !prof !2
  %277 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %278 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %277, i64 0, i32 2
  %279 = bitcast %"class.blink::LayoutFlowThread"** %278 to %"class.blink::LayoutMultiColumnFlowThread"**
  %280 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %279, align 8
  %281 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %280, i64 0, i32 6, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = icmp slt i32 %282, 0
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %282) #11
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !2
  %289 = tail call i64 @_ZNK5blink27LayoutMultiColumnFlowThread29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %235, i32 %288, i32 1, i32 %3) #11
  %290 = trunc i64 %289 to i32
  %291 = lshr i64 %289, 32
  %292 = trunc i64 %291 to i32
  %293 = icmp sgt i32 %265, -1
  %294 = select i1 %293, i32 -2147483648, i32 2147483647
  %295 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %290, i32 %265) #11
  %296 = extractvalue { i32, i1 } %295, 1
  %297 = extractvalue { i32, i1 } %295, 0
  %298 = select i1 %296, i32 %294, i32 %297, !prof !2
  %299 = icmp sgt i32 %267, -1
  %300 = select i1 %299, i32 -2147483648, i32 2147483647
  %301 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %292, i32 %267) #11
  %302 = extractvalue { i32, i1 } %301, 1
  %303 = extractvalue { i32, i1 } %301, 0
  %304 = select i1 %302, i32 %300, i32 %303, !prof !2
  br label %305

305:                                              ; preds = %234, %237
  %306 = phi i32 [ 0, %234 ], [ %304, %237 ]
  %307 = phi i32 [ 0, %234 ], [ %298, %237 ]
  %308 = icmp slt i32 %226, 0
  %309 = select i1 %308, i32 -2147483648, i32 2147483647
  %310 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %307, i32 %226) #11
  %311 = extractvalue { i32, i1 } %310, 1
  %312 = extractvalue { i32, i1 } %310, 0
  %313 = select i1 %311, i32 %309, i32 %312, !prof !2
  %314 = icmp slt i32 %232, 0
  %315 = select i1 %314, i32 -2147483648, i32 2147483647
  %316 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %306, i32 %232) #11
  %317 = extractvalue { i32, i1 } %316, 1
  %318 = extractvalue { i32, i1 } %316, 0
  %319 = select i1 %317, i32 %315, i32 %318, !prof !2
  br label %320

320:                                              ; preds = %204, %305
  %321 = phi i32 [ %319, %305 ], [ %232, %204 ]
  %322 = phi i32 [ %313, %305 ], [ %226, %204 ]
  %323 = zext i32 %321 to i64
  %324 = shl nuw i64 %323, 32
  %325 = zext i32 %322 to i64
  %326 = or i64 %324, %325
  ret i64 %326
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %90, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %90, label %13

13:                                               ; preds = %9
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 64, i32* %4, align 4
  %15 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 64
  %19 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %20 = select i1 %18, %"class.blink::LayoutUnit"* %15, %"class.blink::LayoutUnit"* %19
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %23 = icmp sgt i32 %7, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %7) #11
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = sext i32 %28 to i64
  %30 = shl nsw i64 %29, 6
  %31 = sext i32 %22 to i64
  %32 = sdiv i64 %30, %31
  %33 = tail call i1 @llvm.is.constant.i64(i64 %32) #11
  br i1 %33, label %41, label %34

34:                                               ; preds = %13
  %35 = icmp slt i64 %32, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = add i64 %32, 2147483648
  %38 = icmp ult i64 %37, 4294967296
  %39 = trunc i64 %32 to i32
  %40 = select i1 %38, i32 %39, i32 %36, !prof !4
  br label %47

41:                                               ; preds = %13
  %42 = icmp sgt i64 %32, 2147483647
  br i1 %42, label %52, label %43

43:                                               ; preds = %41
  %44 = icmp sgt i64 %32, -2147483648
  %45 = select i1 %44, i64 %32, i64 -2147483648
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %34, %43
  %48 = phi i32 [ %40, %34 ], [ %46, %43 ]
  %49 = icmp slt i32 %48, -2147483584
  %50 = ashr i32 %48, 6
  %51 = select i1 %49, i32 -33554432, i32 %50
  br label %52

52:                                               ; preds = %47, %41
  %53 = phi i32 [ 33554431, %41 ], [ %51, %47 ]
  %54 = icmp eq i32 %2, 0
  %55 = icmp ne i32 %53, 0
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %90

57:                                               ; preds = %52
  %58 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58)
  store i32 64, i32* %5, align 4
  %59 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %60 = select i1 %18, %"class.blink::LayoutUnit"* %15, %"class.blink::LayoutUnit"* %59
  %61 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58)
  %63 = icmp ugt i32 %53, 33554430
  %64 = shl nsw i32 %53, 6
  %65 = select i1 %63, i32 2147483647, i32 %64
  %66 = sext i32 %65 to i64
  %67 = sext i32 %62 to i64
  %68 = mul nsw i64 %67, %66
  %69 = sdiv i64 %68, 64
  %70 = ashr i64 %69, 32
  %71 = trunc i64 %70 to i32
  %72 = trunc i64 %69 to i32
  %73 = ashr i32 %72, 31
  %74 = icmp eq i32 %73, %71
  br i1 %74, label %79, label %75

75:                                               ; preds = %57
  %76 = xor i32 %62, %65
  %77 = lshr i32 %76, 31
  %78 = add nuw i32 %77, 2147483647
  br label %79

79:                                               ; preds = %57, %75
  %80 = phi i32 [ %72, %57 ], [ %78, %75 ]
  %81 = icmp slt i32 %80, 0
  %82 = select i1 %81, i32 -2147483648, i32 2147483647
  %83 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %80) #11
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !2
  %87 = icmp eq i32 %86, %1
  %88 = zext i1 %87 to i32
  %89 = sub nsw i32 %53, %88
  br label %90

90:                                               ; preds = %9, %79, %52, %3
  %91 = phi i32 [ 0, %3 ], [ 0, %9 ], [ %89, %79 ], [ %53, %52 ]
  ret i32 %91
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup23FlowThreadPortionRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4)
  store i32 64, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 64
  %9 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %10 = select i1 %8, %"class.blink::LayoutUnit"* %5, %"class.blink::LayoutUnit"* %9
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4)
  %13 = icmp ugt i32 %1, 33554430
  %14 = shl i32 %1, 6
  %15 = select i1 %13, i32 2147483647, i32 %14
  %16 = sext i32 %15 to i64
  %17 = sext i32 %12 to i64
  %18 = mul nsw i64 %17, %16
  %19 = sdiv i64 %18, 64
  %20 = ashr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %19 to i32
  %23 = ashr i32 %22, 31
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %2
  %26 = xor i32 %12, %15
  %27 = lshr i32 %26, 31
  %28 = add nuw i32 %27, 2147483647
  br label %29

29:                                               ; preds = %2, %25
  %30 = phi i32 [ %22, %2 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %30) #11
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup27LogicalHeightInFlowThreadAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %1)
  %40 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 4
  %43 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %42 to i96*
  %44 = load i96, i96* %43, align 4
  %45 = trunc i96 %44 to i32
  %46 = icmp slt i32 %45, 0
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 3, i32 10
  %48 = bitcast %"class.blink::FragmentData"* %47 to %"class.blink::LayoutFlowThread"**
  %49 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8
  %55 = and i160 %54, 15211807202738752817960438464512
  %56 = icmp eq i160 %55, 0
  %57 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %49, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %49, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %59 = select i1 %56, i32* %57, i32* %58
  %60 = load i32, i32* %59, align 4
  %61 = select i1 %46, i32 %38, i32 0
  %62 = select i1 %46, i32 0, i32 %38
  %63 = select i1 %46, i32 %60, i32 %39
  %64 = select i1 %46, i32 %39, i32 %60
  %65 = zext i32 %61 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %62 to i64
  %68 = or i64 %66, %67
  %69 = insertvalue { i64, i64 } undef, i64 %68, 0
  %70 = zext i32 %64 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %63 to i64
  %73 = or i64 %71, %72
  %74 = insertvalue { i64, i64 } %69, i64 %73, 1
  ret { i64, i64 } %74
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup12ColumnRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %4 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 2
  %6 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup27LogicalHeightInFlowThreadAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %1)
  %19 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet9ColumnGapEv(%"class.blink::LayoutMultiColumnSet"* %4) #11
  %20 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 41538374868278621028243970633760768
  %28 = icmp eq i160 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %2
  %30 = icmp slt i32 %19, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %19) #11
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = icmp ugt i32 %1, 33554430
  %37 = shl i32 %1, 6
  %38 = select i1 %36, i32 2147483647, i32 %37
  %39 = sext i32 %38 to i64
  %40 = sext i32 %35 to i64
  %41 = mul nsw i64 %40, %39
  %42 = sdiv i64 %41, 64
  %43 = ashr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %42 to i32
  %46 = ashr i32 %45, 31
  %47 = icmp eq i32 %46, %44
  br i1 %47, label %92, label %48

48:                                               ; preds = %29
  %49 = xor i32 %35, %38
  %50 = lshr i32 %49, 31
  %51 = add nuw i32 %50, 2147483647
  br label %92

52:                                               ; preds = %2
  %53 = bitcast %"class.blink::LayoutObject"* %21 to %"class.blink::LayoutBox"*
  %54 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %53)
  %55 = icmp sgt i32 %17, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %17) #11
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = icmp slt i32 %19, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %19) #11
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  %67 = icmp ugt i32 %1, 33554430
  %68 = shl i32 %1, 6
  %69 = select i1 %67, i32 2147483647, i32 %68
  %70 = sext i32 %69 to i64
  %71 = sext i32 %66 to i64
  %72 = mul nsw i64 %71, %70
  %73 = sdiv i64 %72, 64
  %74 = ashr i64 %73, 32
  %75 = trunc i64 %74 to i32
  %76 = trunc i64 %73 to i32
  %77 = ashr i32 %76, 31
  %78 = icmp eq i32 %77, %75
  br i1 %78, label %83, label %79

79:                                               ; preds = %52
  %80 = xor i32 %66, %69
  %81 = lshr i32 %80, 31
  %82 = add nuw i32 %81, 2147483647
  br label %83

83:                                               ; preds = %52, %79
  %84 = phi i32 [ %76, %52 ], [ %82, %79 ]
  %85 = icmp sgt i32 %84, -1
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %84) #11
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  br label %92

92:                                               ; preds = %48, %29, %83
  %93 = phi %"class.blink::LayoutObject"* [ %91, %83 ], [ %21, %29 ], [ %21, %48 ]
  %94 = phi i32 [ %90, %83 ], [ %45, %29 ], [ %51, %48 ]
  %95 = zext i32 %17 to i64
  %96 = zext i32 %18 to i64
  %97 = shl nuw i64 %96, 32
  %98 = or i64 %97, %95
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 4
  %100 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %99 to i96*
  %101 = load i96, i96* %100, align 4
  %102 = trunc i96 %101 to i32
  %103 = icmp slt i32 %102, 0
  %104 = zext i32 %94 to i64
  br i1 %103, label %109, label %105

105:                                              ; preds = %92
  %106 = shl nuw i64 %104, 32
  %107 = shl nuw i64 %95, 32
  %108 = or i64 %107, %96
  br label %109

109:                                              ; preds = %92, %105
  %110 = phi i64 [ %106, %105 ], [ %104, %92 ]
  %111 = phi i64 [ %108, %105 ], [ %98, %92 ]
  %112 = insertvalue { i64, i64 } undef, i64 %110, 0
  %113 = insertvalue { i64, i64 } %112, i64 %111, 1
  ret { i64, i64 } %113
}

declare %"class.blink::LayoutMultiColumnFlowThread"* @_ZNK5blink27LayoutMultiColumnFlowThread19EnclosingFlowThreadENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #4

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread19FirstMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #4

declare i64 @_ZNK5blink27LayoutMultiColumnFlowThread29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup25ColumnLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %51, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 4, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %51, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store i32 64, i32* %4, align 4
  %14 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 64
  %18 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %19 = select i1 %17, %"class.blink::LayoutUnit"* %14, %"class.blink::LayoutUnit"* %18
  %20 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  %22 = icmp sgt i32 %6, -1
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %6) #11
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !2
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 6
  %30 = sext i32 %21 to i64
  %31 = sdiv i64 %29, %30
  %32 = tail call i1 @llvm.is.constant.i64(i64 %31) #11
  br i1 %32, label %40, label %33

33:                                               ; preds = %12
  %34 = icmp slt i64 %31, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = add i64 %31, 2147483648
  %37 = icmp ult i64 %36, 4294967296
  %38 = trunc i64 %31 to i32
  %39 = select i1 %37, i32 %38, i32 %35, !prof !4
  br label %46

40:                                               ; preds = %12
  %41 = icmp sgt i64 %31, 2147483647
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = icmp sgt i64 %31, -2147483648
  %44 = select i1 %43, i64 %31, i64 -2147483648
  %45 = trunc i64 %44 to i32
  br label %46

46:                                               ; preds = %42, %33
  %47 = phi i32 [ %39, %33 ], [ %45, %42 ]
  %48 = icmp slt i32 %47, -2147483584
  %49 = ashr i32 %47, 6
  %50 = select i1 %48, i32 -33554432, i32 %49
  br label %51

51:                                               ; preds = %46, %40, %2, %8
  %52 = phi i32 [ 0, %2 ], [ 0, %8 ], [ 33554431, %40 ], [ %50, %46 ]
  %53 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  store i32 64, i32* %3, align 4
  %54 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %55 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 64
  %58 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %59 = select i1 %57, %"class.blink::LayoutUnit"* %54, %"class.blink::LayoutUnit"* %58
  %60 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  %62 = icmp ugt i32 %52, 33554430
  %63 = shl nsw i32 %52, 6
  %64 = select i1 %62, i32 2147483647, i32 %63
  %65 = sext i32 %64 to i64
  %66 = sext i32 %61 to i64
  %67 = mul nsw i64 %66, %65
  %68 = sdiv i64 %67, 64
  %69 = ashr i64 %68, 32
  %70 = trunc i64 %69 to i32
  %71 = trunc i64 %68 to i32
  %72 = ashr i32 %71, 31
  %73 = icmp eq i32 %72, %70
  br i1 %73, label %78, label %74

74:                                               ; preds = %51
  %75 = xor i32 %61, %64
  %76 = lshr i32 %75, 31
  %77 = add nuw i32 %76, 2147483647
  br label %78

78:                                               ; preds = %51, %74
  %79 = phi i32 [ %71, %51 ], [ %77, %74 ]
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %79) #11
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink29MultiColumnFragmentainerGroup28VisualPointToFlowThreadPointERKNS_11LayoutPointENS0_18SnapToColumnPolicyE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* dereferenceable(8) %1)
  %11 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup12ColumnRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %10)
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  %14 = bitcast %"class.blink::LayoutPoint"* %1 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = trunc i64 %12 to i32
  %20 = lshr i64 %12, 32
  %21 = trunc i64 %20 to i32
  %22 = tail call i1 @llvm.is.constant.i32(i32 %19) #11
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  %24 = sub i32 0, %19
  %25 = icmp eq i32 %24, -2147483648
  %26 = select i1 %25, i32 2147483647, i32 %24
  br label %32

27:                                               ; preds = %3
  %28 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %19) #11
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 2147483647, i32 %30
  br label %32

32:                                               ; preds = %27, %23
  %33 = phi i32 [ %26, %23 ], [ %31, %27 ]
  %34 = tail call i1 @llvm.is.constant.i32(i32 %21) #11
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = sub i32 0, %21
  %37 = icmp eq i32 %36, -2147483648
  %38 = select i1 %37, i32 2147483647, i32 %36
  br label %44

39:                                               ; preds = %32
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %21) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 2147483647, i32 %42
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i32 [ %38, %35 ], [ %43, %39 ]
  %46 = icmp slt i32 %33, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %33) #11
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !2
  %52 = icmp slt i32 %45, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %45) #11
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 4
  %61 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %60 to i96*
  %62 = load i96, i96* %61, align 4
  %63 = trunc i96 %62 to i32
  %64 = icmp slt i32 %63, 0
  %65 = icmp eq i32 %2, 1
  br i1 %64, label %140, label %66

66:                                               ; preds = %44
  br i1 %65, label %67, label %96

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 5, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = and i160 %72, 41538374868278621028243970633760768
  %74 = icmp eq i160 %73, 0
  %75 = lshr i64 %13, 32
  %76 = trunc i64 %75 to i32
  %77 = select i1 %74, i32 0, i32 %76
  %78 = icmp slt i32 %51, 0
  br i1 %78, label %96, label %79

79:                                               ; preds = %67
  %80 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80)
  store i32 64, i32* %4, align 4
  %81 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %82 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 64
  %85 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %86 = select i1 %84, %"class.blink::LayoutUnit"* %81, %"class.blink::LayoutUnit"* %85
  %87 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80)
  %89 = icmp sgt i32 %51, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %79
  %91 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  store i32 64, i32* %5, align 4
  %92 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %93 = select i1 %84, %"class.blink::LayoutUnit"* %81, %"class.blink::LayoutUnit"* %92
  %94 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %93, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  br label %96

96:                                               ; preds = %67, %90, %79, %66
  %97 = phi i32 [ %51, %66 ], [ %95, %90 ], [ %51, %79 ], [ 0, %67 ]
  %98 = phi i32 [ %57, %66 ], [ %77, %90 ], [ %57, %79 ], [ %77, %67 ]
  %99 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99)
  store i32 64, i32* %6, align 4
  %100 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %101 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 64
  %104 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %105 = select i1 %103, %"class.blink::LayoutUnit"* %100, %"class.blink::LayoutUnit"* %104
  %106 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99)
  %108 = icmp ugt i32 %10, 33554430
  %109 = shl i32 %10, 6
  %110 = select i1 %108, i32 2147483647, i32 %109
  %111 = sext i32 %110 to i64
  %112 = sext i32 %107 to i64
  %113 = mul nsw i64 %112, %111
  %114 = sdiv i64 %113, 64
  %115 = ashr i64 %114, 32
  %116 = trunc i64 %115 to i32
  %117 = trunc i64 %114 to i32
  %118 = ashr i32 %117, 31
  %119 = icmp eq i32 %118, %116
  br i1 %119, label %124, label %120

120:                                              ; preds = %96
  %121 = xor i32 %107, %110
  %122 = lshr i32 %121, 31
  %123 = add nuw i32 %122, 2147483647
  br label %124

124:                                              ; preds = %96, %120
  %125 = phi i32 [ %117, %96 ], [ %123, %120 ]
  %126 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %125, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %127, i32 %125) #11
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !2
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %133) #11
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !2
  br label %213

140:                                              ; preds = %44
  br i1 %65, label %141, label %169

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 41538374868278621028243970633760768
  %148 = icmp eq i160 %147, 0
  %149 = trunc i64 %13 to i32
  %150 = select i1 %148, i32 0, i32 %149
  %151 = icmp slt i32 %57, 0
  br i1 %151, label %169, label %152

152:                                              ; preds = %141
  %153 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153)
  store i32 64, i32* %7, align 4
  %154 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %155 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %154, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %156, 64
  %158 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %159 = select i1 %157, %"class.blink::LayoutUnit"* %154, %"class.blink::LayoutUnit"* %158
  %160 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153)
  %162 = icmp sgt i32 %57, %161
  br i1 %162, label %163, label %169

163:                                              ; preds = %152
  %164 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164)
  store i32 64, i32* %8, align 4
  %165 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %166 = select i1 %157, %"class.blink::LayoutUnit"* %154, %"class.blink::LayoutUnit"* %165
  %167 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164)
  br label %169

169:                                              ; preds = %141, %163, %152, %140
  %170 = phi i32 [ %51, %140 ], [ %150, %163 ], [ %51, %152 ], [ %150, %141 ]
  %171 = phi i32 [ %57, %140 ], [ %168, %163 ], [ %57, %152 ], [ 0, %141 ]
  %172 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172)
  store i32 64, i32* %9, align 4
  %173 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %174 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp sgt i32 %175, 64
  %177 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %178 = select i1 %176, %"class.blink::LayoutUnit"* %173, %"class.blink::LayoutUnit"* %177
  %179 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172)
  %181 = icmp ugt i32 %10, 33554430
  %182 = shl i32 %10, 6
  %183 = select i1 %181, i32 2147483647, i32 %182
  %184 = sext i32 %183 to i64
  %185 = sext i32 %180 to i64
  %186 = mul nsw i64 %185, %184
  %187 = sdiv i64 %186, 64
  %188 = ashr i64 %187, 32
  %189 = trunc i64 %188 to i32
  %190 = trunc i64 %187 to i32
  %191 = ashr i32 %190, 31
  %192 = icmp eq i32 %191, %189
  br i1 %192, label %197, label %193

193:                                              ; preds = %169
  %194 = xor i32 %180, %183
  %195 = lshr i32 %194, 31
  %196 = add nuw i32 %195, 2147483647
  br label %197

197:                                              ; preds = %169, %193
  %198 = phi i32 [ %190, %169 ], [ %196, %193 ]
  %199 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp slt i32 %198, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %198) #11
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  %207 = icmp slt i32 %206, 0
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %206) #11
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  br label %213

213:                                              ; preds = %197, %124
  %214 = phi i32 [ %170, %197 ], [ %139, %124 ]
  %215 = phi i32 [ %212, %197 ], [ %98, %124 ]
  %216 = zext i32 %215 to i64
  %217 = shl nuw i64 %216, 32
  %218 = zext i32 %214 to i64
  %219 = or i64 %217, %218
  ret i64 %219
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %4 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 2
  %6 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = trunc i96 %20 to i32
  %22 = icmp slt i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = select i1 %22, i32 %26, i32 %24
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 41538374868278621028243970633760768
  %34 = icmp eq i160 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %2
  %36 = and i160 %32, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 0
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %40 = select i1 %37, i32* %38, i32* %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %27, -1
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %27) #11
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  br label %48

48:                                               ; preds = %35, %2
  %49 = phi i32 [ %27, %2 ], [ %47, %35 ]
  %50 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet9ColumnGapEv(%"class.blink::LayoutMultiColumnSet"* %4) #11
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %50) #11
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %104, label %58

58:                                               ; preds = %48
  %59 = sdiv i32 %50, 2
  %60 = sext i32 %59 to i64
  %61 = tail call i1 @llvm.is.constant.i64(i64 %60) #11
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = icmp slt i32 %50, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = add nsw i64 %60, 2147483648
  %66 = icmp ult i64 %65, 4294967296
  %67 = select i1 %66, i32 %59, i32 %64, !prof !4
  br label %68

68:                                               ; preds = %58, %62
  %69 = phi i32 [ %67, %62 ], [ %59, %58 ]
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %69) #11
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  %76 = sext i32 %75 to i64
  %77 = shl nsw i64 %76, 6
  %78 = sext i32 %56 to i64
  %79 = sdiv i64 %77, %78
  %80 = tail call i1 @llvm.is.constant.i64(i64 %79) #11
  br i1 %80, label %88, label %81

81:                                               ; preds = %68
  %82 = icmp slt i64 %79, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = add i64 %79, 2147483648
  %85 = icmp ult i64 %84, 4294967296
  %86 = trunc i64 %79 to i32
  %87 = select i1 %85, i32 %86, i32 %83, !prof !4
  br label %94

88:                                               ; preds = %68
  %89 = icmp sgt i64 %79, 2147483647
  br i1 %89, label %98, label %90

90:                                               ; preds = %88
  %91 = icmp sgt i64 %79, -2147483648
  %92 = select i1 %91, i64 %79, i64 -2147483648
  %93 = trunc i64 %92 to i32
  br label %94

94:                                               ; preds = %81, %90
  %95 = phi i32 [ %87, %81 ], [ %93, %90 ]
  %96 = sdiv i32 %95, 64
  %97 = icmp slt i32 %95, -63
  br i1 %97, label %104, label %98

98:                                               ; preds = %88, %94
  %99 = phi i32 [ %96, %94 ], [ 33554431, %88 ]
  %100 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %101 = add i32 %100, -1
  %102 = icmp ult i32 %101, %99
  %103 = select i1 %102, i32 %101, i32 %99
  br label %104

104:                                              ; preds = %98, %94, %48
  %105 = phi i32 [ 0, %48 ], [ %103, %98 ], [ 0, %94 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup20FragmentsBoundingBoxERKNS_10LayoutRectE(%"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::LayoutRect"*
  %10 = alloca %"class.blink::LayoutRect", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"class.blink::LayoutRect"*
  %13 = alloca %"class.blink::LayoutRect", align 4
  %14 = bitcast %"class.blink::LayoutRect"* %1 to i8*
  %15 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1
  %21 = bitcast %"class.blink::LayoutSize"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %24 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %24, i64 0, i32 2
  %26 = load %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutFlowThread"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 5070602400912917605986812821504
  br i1 %33, label %36, label %34, !prof !2

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %46

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = trunc i64 %22 to i32
  %39 = bitcast %"class.blink::LayoutFlowThread"* %26 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %40 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %40, i64 106
  %42 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutObject"* %37, i32 %17, i32 %38, %"class.blink::LayoutBox"* null) #11
  %44 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  br label %46

46:                                               ; preds = %34, %36
  %47 = phi %"class.blink::LayoutObject"* [ %45, %36 ], [ %35, %34 ]
  %48 = phi i32 [ %43, %36 ], [ %17, %34 ]
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %50 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %49 to i96*
  %51 = load i96, i96* %50, align 4
  %52 = trunc i96 %51 to i32
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %46
  %55 = lshr i64 %22, 32
  %56 = trunc i64 %55 to i32
  %57 = icmp slt i32 %56, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %56) #11
  br label %65

60:                                               ; preds = %46
  %61 = trunc i64 %22 to i32
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %61) #11
  br label %65

65:                                               ; preds = %60, %54
  %66 = phi { i32, i1 } [ %64, %60 ], [ %59, %54 ]
  %67 = phi i32 [ %63, %60 ], [ %58, %54 ]
  %68 = phi i32 [ %48, %60 ], [ %19, %54 ]
  %69 = extractvalue { i32, i1 } %66, 1
  %70 = extractvalue { i32, i1 } %66, 0
  %71 = select i1 %69, i32 %67, i32 %70
  %72 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %71, %73
  br i1 %74, label %75, label %270

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp slt i32 %68, %77
  br i1 %78, label %79, label %270

79:                                               ; preds = %75
  %80 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #11
  store i32 -1431655766, i32* %6, align 4
  %81 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #11
  store i32 -1431655766, i32* %7, align 4
  call void @_ZNK5blink29MultiColumnFragmentainerGroup39ColumnIntervalForBlockRangeInFlowThreadENS_10LayoutUnitES1_RjS2_(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %68, i32 %71, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7)
  %82 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #11
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %84 = load i32, i32* %6, align 4
  %85 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup31FlowThreadPortionOverflowRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %84)
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %87 = extractvalue { i64, i64 } %85, 0
  store i64 %87, i64* %86, align 8
  %88 = extractvalue { i64, i64 } %85, 1
  store i64 %88, i64* %83, align 8
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = and i160 %92, 15211807202738752817960438464512
  %94 = icmp eq i160 %93, 5070602400912917605986812821504
  br i1 %94, label %95, label %107, !prof !2

95:                                               ; preds = %79
  %96 = trunc i64 %88 to i32
  %97 = and i64 %87, -4294967296
  %98 = trunc i64 %87 to i32
  %99 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.blink::LayoutFlowThread"* %26 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %101 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %101, i64 106
  %103 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %102, align 8
  %104 = tail call i32 %103(%"class.blink::LayoutObject"* %99, i32 %98, i32 %96, %"class.blink::LayoutBox"* null) #11
  %105 = zext i32 %104 to i64
  %106 = or i64 %97, %105
  store i64 %106, i64* %86, align 8
  store i64 %88, i64* %83, align 8
  br label %107

107:                                              ; preds = %79, %95
  %108 = bitcast %"class.blink::LayoutRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %10, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %10, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %108, i8* align 4 %14, i64 16, i1 false)
  call void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"* nonnull %10, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %9) #11
  %111 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  store i32 64, i32* %3, align 4
  %112 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %113 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 64
  %116 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %117 = select i1 %115, %"class.blink::LayoutUnit"* %112, %"class.blink::LayoutUnit"* %116
  %118 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %117, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  %120 = icmp ugt i32 %84, 33554430
  %121 = shl i32 %84, 6
  %122 = select i1 %120, i32 2147483647, i32 %121
  %123 = sext i32 %122 to i64
  %124 = sext i32 %119 to i64
  %125 = mul nsw i64 %124, %123
  %126 = sdiv i64 %125, 64
  %127 = ashr i64 %126, 32
  %128 = trunc i64 %127 to i32
  %129 = trunc i64 %126 to i32
  %130 = ashr i32 %129, 31
  %131 = icmp eq i32 %130, %128
  br i1 %131, label %136, label %132

132:                                              ; preds = %107
  %133 = xor i32 %119, %122
  %134 = lshr i32 %133, 31
  %135 = add nuw i32 %134, 2147483647
  br label %136

136:                                              ; preds = %107, %132
  %137 = phi i32 [ %129, %107 ], [ %135, %132 ]
  %138 = load i32, i32* %72, align 4
  %139 = icmp slt i32 %137, 0
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %138, i32 %137) #11
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !2
  %145 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %144, i32 1, i32 0)
  %146 = trunc i64 %145 to i32
  %147 = lshr i64 %145, 32
  %148 = trunc i64 %147 to i32
  %149 = load i32, i32* %109, align 8
  %150 = icmp slt i32 %146, 0
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %149, i32 %146) #11
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  store i32 %155, i32* %109, align 8
  %156 = load i32, i32* %110, align 4
  %157 = icmp slt i32 %148, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %156, i32 %148) #11
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !2
  store i32 %162, i32* %110, align 4
  %163 = load i32, i32* %7, align 4
  %164 = icmp eq i32 %84, %163
  br i1 %164, label %165, label %171

165:                                              ; preds = %136
  %166 = bitcast %"class.blink::LayoutRect"* %10 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %10, i64 0, i32 1
  %169 = bitcast %"class.blink::LayoutSize"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  br label %267

171:                                              ; preds = %136
  %172 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #11
  %173 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %174 = call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup31FlowThreadPortionOverflowRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %163)
  %175 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %176 = extractvalue { i64, i64 } %174, 0
  store i64 %176, i64* %175, align 8
  %177 = extractvalue { i64, i64 } %174, 1
  store i64 %177, i64* %173, align 8
  %178 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %178, i64 0, i32 0, i32 9
  %180 = bitcast [20 x i8]* %179 to i160*
  %181 = load i160, i160* %180, align 8
  %182 = and i160 %181, 15211807202738752817960438464512
  %183 = icmp eq i160 %182, 5070602400912917605986812821504
  br i1 %183, label %184, label %207, !prof !2

184:                                              ; preds = %171
  %185 = trunc i64 %177 to i32
  %186 = trunc i64 %176 to i32
  %187 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %12, i64 0, i32 1, i32 1, i32 0
  %188 = bitcast i64* %173 to i32*
  %189 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %12, i64 0, i32 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.blink::LayoutFlowThread"* %26 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %192 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %192, i64 106
  %194 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %193, align 8
  %195 = call i32 %194(%"class.blink::LayoutObject"* %190, i32 %186, i32 %185, %"class.blink::LayoutBox"* null) #11
  %196 = load i32, i32* %189, align 4
  %197 = load i32, i32* %188, align 8
  %198 = load i32, i32* %187, align 4
  %199 = zext i32 %196 to i64
  %200 = shl nuw i64 %199, 32
  %201 = zext i32 %198 to i64
  %202 = shl nuw i64 %201, 32
  %203 = zext i32 %195 to i64
  %204 = or i64 %200, %203
  %205 = zext i32 %197 to i64
  %206 = or i64 %202, %205
  store i64 %204, i64* %175, align 8
  store i64 %206, i64* %173, align 8
  br label %207

207:                                              ; preds = %171, %184
  %208 = bitcast %"class.blink::LayoutRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %13, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %13, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %208, i8* align 4 %14, i64 16, i1 false)
  call void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"* nonnull %13, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %12) #11
  %211 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211)
  store i32 64, i32* %4, align 4
  %212 = load i32, i32* %113, align 4
  %213 = icmp sgt i32 %212, 64
  %214 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %215 = select i1 %213, %"class.blink::LayoutUnit"* %112, %"class.blink::LayoutUnit"* %214
  %216 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %215, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211)
  %218 = icmp ugt i32 %163, 33554430
  %219 = shl i32 %163, 6
  %220 = select i1 %218, i32 2147483647, i32 %219
  %221 = sext i32 %220 to i64
  %222 = sext i32 %217 to i64
  %223 = mul nsw i64 %222, %221
  %224 = sdiv i64 %223, 64
  %225 = ashr i64 %224, 32
  %226 = trunc i64 %225 to i32
  %227 = trunc i64 %224 to i32
  %228 = ashr i32 %227, 31
  %229 = icmp eq i32 %228, %226
  br i1 %229, label %234, label %230

230:                                              ; preds = %207
  %231 = xor i32 %217, %220
  %232 = lshr i32 %231, 31
  %233 = add nuw i32 %232, 2147483647
  br label %234

234:                                              ; preds = %207, %230
  %235 = phi i32 [ %227, %207 ], [ %233, %230 ]
  %236 = load i32, i32* %72, align 4
  %237 = icmp slt i32 %235, 0
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %236, i32 %235) #11
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !2
  %243 = call i64 @_ZNK5blink29MultiColumnFragmentainerGroup29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %242, i32 1, i32 0)
  %244 = trunc i64 %243 to i32
  %245 = lshr i64 %243, 32
  %246 = trunc i64 %245 to i32
  %247 = load i32, i32* %209, align 4
  %248 = icmp slt i32 %244, 0
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %247, i32 %244) #11
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !2
  store i32 %253, i32* %209, align 4
  %254 = load i32, i32* %210, align 4
  %255 = icmp slt i32 %246, 0
  %256 = select i1 %255, i32 -2147483648, i32 2147483647
  %257 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %246) #11
  %258 = extractvalue { i32, i1 } %257, 1
  %259 = extractvalue { i32, i1 } %257, 0
  %260 = select i1 %258, i32 %256, i32 %259, !prof !2
  store i32 %260, i32* %210, align 4
  %261 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %261)
  %262 = bitcast { i64, i64 }* %5 to %"class.blink::LayoutRect"*
  %263 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %261, i8* nonnull align 8 %108, i64 16, i1 false) #11
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %262, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %13) #11
  %264 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = load i64, i64* %263, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %261)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #11
  br label %267

267:                                              ; preds = %234, %165
  %268 = phi i64 [ %170, %165 ], [ %266, %234 ]
  %269 = phi i64 [ %167, %165 ], [ %265, %234 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #11
  br label %270

270:                                              ; preds = %75, %65, %267
  %271 = phi i64 [ %268, %267 ], [ 0, %65 ], [ 0, %75 ]
  %272 = phi i64 [ %269, %267 ], [ 0, %65 ], [ 0, %75 ]
  %273 = insertvalue { i64, i64 } undef, i64 %272, 0
  %274 = insertvalue { i64, i64 } %273, i64 %271, 1
  ret { i64, i64 } %274
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29MultiColumnFragmentainerGroup39ColumnIntervalForBlockRangeInFlowThreadENS_10LayoutUnitES1_RjS2_(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, %2
  %14 = select i1 %13, i32 %12, i32 %2
  %15 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 4, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %57, label %18

18:                                               ; preds = %5
  %19 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  store i32 64, i32* %6, align 4
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 64
  %24 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %25 = select i1 %23, %"class.blink::LayoutUnit"* %20, %"class.blink::LayoutUnit"* %24
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  %28 = icmp sgt i32 %8, -1
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %8) #11
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 6
  %36 = sext i32 %27 to i64
  %37 = sdiv i64 %35, %36
  %38 = tail call i1 @llvm.is.constant.i64(i64 %37) #11
  br i1 %38, label %46, label %39

39:                                               ; preds = %18
  %40 = icmp slt i64 %37, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = add i64 %37, 2147483648
  %43 = icmp ult i64 %42, 4294967296
  %44 = trunc i64 %37 to i32
  %45 = select i1 %43, i32 %44, i32 %41, !prof !4
  br label %52

46:                                               ; preds = %18
  %47 = icmp sgt i64 %37, 2147483647
  br i1 %47, label %57, label %48

48:                                               ; preds = %46
  %49 = icmp sgt i64 %37, -2147483648
  %50 = select i1 %49, i64 %37, i64 -2147483648
  %51 = trunc i64 %50 to i32
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi i32 [ %45, %39 ], [ %51, %48 ]
  %54 = icmp slt i32 %53, -2147483584
  %55 = ashr i32 %53, 6
  %56 = select i1 %54, i32 -33554432, i32 %55
  br label %57

57:                                               ; preds = %46, %52, %5
  %58 = phi i32 [ 0, %5 ], [ 33554431, %46 ], [ %56, %52 ]
  %59 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0) #11
  %60 = add i32 %59, -1
  %61 = icmp ult i32 %60, %58
  %62 = select i1 %61, i32 %60, i32 %58
  store i32 %62, i32* %3, align 4
  %63 = icmp sgt i32 %14, %10
  br i1 %63, label %64, label %70

64:                                               ; preds = %57
  %65 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %14, i32 0) #11
  %66 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0) #11
  %67 = add i32 %66, -1
  %68 = icmp ult i32 %67, %65
  %69 = select i1 %68, i32 %67, i32 %65
  br label %70

70:                                               ; preds = %57, %64
  %71 = phi i32 [ %69, %64 ], [ %62, %57 ]
  store i32 %71, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup31FlowThreadPortionOverflowRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %5 = add i32 %4, -1
  %6 = icmp eq i32 %5, %1
  %7 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup23FlowThreadPortionRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %1)
  %8 = extractvalue { i64, i64 } %7, 0
  %9 = trunc i64 %8 to i32
  %10 = lshr i64 %8, 32
  %11 = trunc i64 %10 to i32
  %12 = extractvalue { i64, i64 } %7, 1
  br i1 %3, label %13, label %23

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %15 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %15, i64 0, i32 1, i32 1
  %17 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %16, i32 0) #11
  %18 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %17, %0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %14, align 8
  %21 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* %20) #11
  %22 = icmp eq %"class.blink::LayoutMultiColumnSet"* %21, null
  br label %23

23:                                               ; preds = %19, %13, %2
  %24 = phi i1 [ false, %13 ], [ false, %2 ], [ %22, %19 ]
  br i1 %6, label %25, label %38

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 0
  %27 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %27, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %27, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  %32 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %28, i32 %31) #11
  %33 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %32, %0
  br i1 %33, label %34, label %38

34:                                               ; preds = %25
  %35 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %26, align 8
  %36 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* %35) #11
  %37 = icmp eq %"class.blink::LayoutMultiColumnSet"* %36, null
  br label %38

38:                                               ; preds = %34, %25, %23
  %39 = phi i1 [ false, %25 ], [ false, %23 ], [ %37, %34 ]
  %40 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 4
  %43 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %42 to i96*
  %44 = load i96, i96* %43, align 4
  %45 = trunc i96 %44 to i32
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %91

47:                                               ; preds = %38
  br i1 %24, label %61, label %48

48:                                               ; preds = %47
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 64000000)
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 2147483647, i32 %51, !prof !2
  %53 = icmp sgt i32 %52, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 128000000, i32 %52) #11
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  br label %61

61:                                               ; preds = %48, %47
  %62 = phi i32 [ -64000000, %47 ], [ %11, %48 ]
  %63 = phi i32 [ 128000000, %47 ], [ %60, %48 ]
  br i1 %39, label %134, label %64

64:                                               ; preds = %61
  %65 = lshr i64 %12, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %66) #11
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %63) #11
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 2147483647, i32 %75, !prof !2
  %77 = icmp sgt i32 %76, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %72, i32 %76) #11
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %82) #11
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !2
  %89 = icmp sgt i32 %88, 0
  %90 = select i1 %89, i32 %88, i32 0
  br label %134

91:                                               ; preds = %38
  br i1 %24, label %105, label %92

92:                                               ; preds = %91
  %93 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 64000000)
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 2147483647, i32 %95, !prof !2
  %97 = icmp sgt i32 %96, -1
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 128000000, i32 %96) #11
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = icmp sgt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 0
  br label %105

105:                                              ; preds = %92, %91
  %106 = phi i32 [ -64000000, %91 ], [ %9, %92 ]
  %107 = phi i32 [ 128000000, %91 ], [ %104, %92 ]
  br i1 %39, label %134, label %108

108:                                              ; preds = %105
  %109 = trunc i64 %12 to i32
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %109) #11
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %107) #11
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 2147483647, i32 %118, !prof !2
  %120 = icmp sgt i32 %119, -1
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %115, i32 %119) #11
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  %126 = icmp slt i32 %125, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %125) #11
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !2
  %132 = icmp sgt i32 %131, 0
  %133 = select i1 %132, i32 %131, i32 0
  br label %134

134:                                              ; preds = %105, %108, %61, %64
  %135 = phi i32 [ %62, %61 ], [ %62, %64 ], [ -64000000, %105 ], [ -64000000, %108 ]
  %136 = phi i32 [ -64000000, %61 ], [ -64000000, %64 ], [ %106, %105 ], [ %106, %108 ]
  %137 = phi i32 [ 128000000, %61 ], [ 128000000, %64 ], [ %107, %105 ], [ %133, %108 ]
  %138 = phi i32 [ %63, %61 ], [ %90, %64 ], [ 128000000, %105 ], [ 128000000, %108 ]
  %139 = zext i32 %135 to i64
  %140 = shl nuw i64 %139, 32
  %141 = zext i32 %136 to i64
  %142 = or i64 %140, %141
  %143 = insertvalue { i64, i64 } undef, i64 %142, 0
  %144 = zext i32 %138 to i64
  %145 = shl nuw i64 %144, 32
  %146 = zext i32 %137 to i64
  %147 = or i64 %145, %146
  %148 = insertvalue { i64, i64 } %143, i64 %147, 1
  ret { i64, i64 } %148
}

declare void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup17CalculateOverflowEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.blink::LayoutRect"*
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %7 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %1
  %11 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup12ColumnRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 0)
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %12, i64* %14, align 8
  store i64 %13, i64* %6, align 8
  %15 = icmp eq i32 %8, 1
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = add i32 %8, -1
  %19 = tail call { i64, i64 } @_ZNK5blink29MultiColumnFragmentainerGroup12ColumnRectAtEj(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %18)
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %21 = extractvalue { i64, i64 } %19, 0
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %23 = extractvalue { i64, i64 } %19, 1
  store i64 %23, i64* %22, align 8
  call void @_ZN5blink10LayoutRect16UniteEvenIfEmptyERKS0_(%"class.blink::LayoutRect"* nonnull %3, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  %24 = load i64, i64* %14, align 8
  %25 = load i64, i64* %6, align 8
  br label %26

26:                                               ; preds = %10, %1, %16
  %27 = phi i64 [ %13, %10 ], [ 0, %1 ], [ %25, %16 ]
  %28 = phi i64 [ %12, %10 ], [ 0, %1 ], [ %24, %16 ]
  %29 = insertvalue { i64, i64 } undef, i64 %28, 0
  %30 = insertvalue { i64, i64 } %29, i64 %27, 1
  ret { i64, i64 } %30
}

declare void @_ZN5blink10LayoutRect16UniteEvenIfEmptyERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup26UnclampedActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %76, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %10) #11
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !2
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  br i1 %17, label %19, label %76

19:                                               ; preds = %6
  %20 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 64, i32* %2, align 4
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 64
  %25 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %26 = select i1 %24, %"class.blink::LayoutUnit"* %21, %"class.blink::LayoutUnit"* %25
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %29 = zext i32 %18 to i64
  %30 = shl nuw nsw i64 %29, 6
  %31 = sext i32 %28 to i64
  %32 = sdiv i64 %30, %31
  %33 = tail call i1 @llvm.is.constant.i64(i64 %32) #11
  br i1 %33, label %41, label %34

34:                                               ; preds = %19
  %35 = icmp slt i64 %32, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = add nsw i64 %32, 2147483648
  %38 = icmp ult i64 %37, 4294967296
  %39 = trunc i64 %32 to i32
  %40 = select i1 %38, i32 %39, i32 %36, !prof !4
  br label %47

41:                                               ; preds = %19
  %42 = icmp sgt i64 %32, 2147483647
  br i1 %42, label %54, label %43

43:                                               ; preds = %41
  %44 = icmp sgt i64 %32, -2147483648
  %45 = select i1 %44, i64 %32, i64 -2147483648
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %34, %43
  %48 = phi i32 [ %40, %34 ], [ %46, %43 ]
  %49 = icmp slt i32 %48, -2147483584
  %50 = ashr i32 %48, 6
  br i1 %49, label %54, label %51

51:                                               ; preds = %47
  %52 = icmp ugt i32 %50, 33554430
  %53 = and i32 %48, -64
  br i1 %52, label %54, label %56

54:                                               ; preds = %47, %41, %51
  %55 = phi i32 [ %50, %51 ], [ 33554431, %41 ], [ -33554432, %47 ]
  br label %56

56:                                               ; preds = %51, %54
  %57 = phi i32 [ %55, %54 ], [ %50, %51 ]
  %58 = phi i32 [ 2147483647, %54 ], [ %53, %51 ]
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %31
  %61 = sdiv i64 %60, 64
  %62 = ashr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = trunc i64 %61 to i32
  %65 = ashr i32 %64, 31
  %66 = icmp eq i32 %65, %63
  br i1 %66, label %71, label %67

67:                                               ; preds = %56
  %68 = xor i32 %58, %28
  %69 = lshr i32 %68, 31
  %70 = add nuw i32 %69, 2147483647
  br label %71

71:                                               ; preds = %56, %67
  %72 = phi i32 [ %64, %56 ], [ %70, %67 ]
  %73 = icmp slt i32 %72, %18
  %74 = zext i1 %73 to i32
  %75 = add nsw i32 %57, %74
  br label %76

76:                                               ; preds = %1, %71, %6
  %77 = phi i32 [ 1, %1 ], [ %75, %71 ], [ 1, %6 ]
  ret i32 %77
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink29MultiColumnFragmentainerGroup24SetColumnBlockSizeFromNGENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  store i32 %1, i32* %7, align 4
  store i8 1, i8* %3, align 4
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink29MultiColumnFragmentainerGroup27ExtendColumnBlockSizeFromNGENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %0, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %1, 0
  %6 = select i1 %5, i32 -2147483648, i32 2147483647
  %7 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %1) #11
  %8 = extractvalue { i32, i1 } %7, 1
  %9 = extractvalue { i32, i1 } %7, 0
  %10 = select i1 %8, i32 %6, i32 %9, !prof !2
  store i32 %10, i32* %3, align 4
  ret void
}

declare i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #4

declare void @_ZN5blink26MinimumSpaceShortageFinderC1ERKNS_20LayoutMultiColumnSetENS_10LayoutUnitES4_(%"class.blink::MinimumSpaceShortageFinder"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360), i32, i32) unnamed_addr #4

declare i32 @_ZNK5blink20LayoutMultiColumnSet9ColumnGapEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #11
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #11
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #11
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #11
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #11
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #11
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #11
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #11
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #11
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #4

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink29MultiColumnFragmentainerGroup30ConstrainedColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup19ColumnIndexAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::MultiColumnFragmentainerGroup"* %0, i32 %1, i32 %2)
  %5 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup17ActualColumnCountEv(%"class.blink::MultiColumnFragmentainerGroup"* %0)
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, %4
  %8 = select i1 %7, i32 %6, i32 %4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29MultiColumnFragmentainerGroup27ColumnIntervalForVisualRectERKNS_10LayoutRectERjS4_(%"class.blink::MultiColumnFragmentainerGroup"* nocapture readonly, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::LayoutPoint"*
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::LayoutPoint"*
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::LayoutPoint"*
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.blink::LayoutPoint"*
  %16 = alloca i64, align 8
  %17 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %0 to %"class.blink::LayoutObject"**
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 41538374868278621028243970633760768
  %25 = icmp eq i160 %24, 0
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = trunc i96 %28 to i32
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %76

31:                                               ; preds = %4
  br i1 %25, label %32, label %54

32:                                               ; preds = %31
  %33 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %35 = load i64, i64* %34, align 4
  store i64 %35, i64* %5, align 8
  %36 = call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %6)
  store i32 %36, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %37 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %41) #11
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  %48 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %47 to i64
  %53 = or i64 %51, %52
  store i64 %53, i64* %7, align 8
  br label %121

54:                                               ; preds = %31
  %55 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #11
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %65 to i64
  %71 = or i64 %69, %70
  store i64 %71, i64* %8, align 8
  %72 = call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %9)
  store i32 %72, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %73 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %75 = load i64, i64* %74, align 4
  store i64 %75, i64* %10, align 8
  br label %121

76:                                               ; preds = %4
  br i1 %25, label %77, label %99

77:                                               ; preds = %76
  %78 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #11
  %79 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %80 = load i64, i64* %79, align 4
  store i64 %80, i64* %11, align 8
  %81 = call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %12)
  store i32 %81, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %82 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %88) #11
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !2
  %95 = zext i32 %94 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i32 %84 to i64
  %98 = or i64 %96, %97
  store i64 %98, i64* %13, align 8
  br label %121

99:                                               ; preds = %76
  %100 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, 0
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %104, i32 %106) #11
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  %113 = zext i32 %112 to i64
  %114 = shl nuw i64 %113, 32
  %115 = zext i32 %102 to i64
  %116 = or i64 %114, %115
  store i64 %116, i64* %14, align 8
  %117 = call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %15)
  store i32 %117, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  %118 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %120 = load i64, i64* %119, align 4
  store i64 %120, i64* %16, align 8
  br label %121

121:                                              ; preds = %77, %99, %32, %54
  %122 = phi i64* [ %13, %77 ], [ %16, %99 ], [ %7, %32 ], [ %10, %54 ]
  %123 = phi i8* [ %82, %77 ], [ %118, %99 ], [ %37, %32 ], [ %73, %54 ]
  %124 = bitcast i64* %122 to %"class.blink::LayoutPoint"*
  %125 = call i32 @_ZNK5blink29MultiColumnFragmentainerGroup24ColumnIndexAtVisualPointERKNS_11LayoutPointE(%"class.blink::MultiColumnFragmentainerGroup"* %0, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %124)
  store i32 %125, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33MultiColumnFragmentainerGroupListC2ERNS_20LayoutMultiColumnSetE(%"class.blink::MultiColumnFragmentainerGroupList"*, %"class.blink::LayoutMultiColumnSet"* dereferenceable(360)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::MultiColumnFragmentainerGroup", align 8
  %4 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %7 = bitcast %"class.WTF::Vector.1708"* %5 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %3, i64 0, i32 1, i32 0
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 21, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %10, i64 32, i1 false) #11
  store i32 1, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33MultiColumnFragmentainerGroupListD2Ev(%"class.blink::MultiColumnFragmentainerGroupList"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"class.blink::MultiColumnFragmentainerGroup"*
  %12 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %9, %11
  br i1 %12, label %15, label %13, !prof !4

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %2, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1709"* %14, %"class.blink::MultiColumnFragmentainerGroup"* %9) #11
  br label %15

15:                                               ; preds = %7, %13
  store %"class.blink::MultiColumnFragmentainerGroup"* null, %"class.blink::MultiColumnFragmentainerGroup"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN5blink33MultiColumnFragmentainerGroupList13AddExtraGroupEv(%"class.blink::MultiColumnFragmentainerGroupList"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::MultiColumnFragmentainerGroup", align 8
  %3 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  %4 = bitcast %"class.blink::MultiColumnFragmentainerGroupList"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %2 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %2, i64 0, i32 1, i32 0
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 21, i1 false) #11
  %9 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %23, label %15, !prof !2

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %9, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %16, align 8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %17, i64 %18
  %20 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %3, i64 32, i1 false) #11
  %21 = load i32, i32* %10, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %10, align 4
  br label %25

23:                                               ; preds = %1
  call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1708"* %9, %"class.blink::MultiColumnFragmentainerGroup"* nonnull dereferenceable(32) %2) #11
  %24 = load i32, i32* %10, align 4
  br label %25

25:                                               ; preds = %15, %23
  %26 = phi i32 [ %22, %15 ], [ %24, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  %27 = add i32 %26, -1
  %28 = call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"* %9, i32 %27) #11
  ret %"class.blink::MultiColumnFragmentainerGroup"* %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink33MultiColumnFragmentainerGroupList17DeleteExtraGroupsEv(%"class.blink::MultiColumnFragmentainerGroupList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::MultiColumnFragmentainerGroupList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1736"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutUnit"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink25InitialColumnHeightFinder10ContentRunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1731"*, %"class.blink::InitialColumnHeightFinder::ContentRun"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::InitialColumnHeightFinder::ContentRun"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1708"*, %"class.blink::MultiColumnFragmentainerGroup"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  %8 = icmp ugt %"class.blink::MultiColumnFragmentainerGroup"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %7, i64 %10
  %12 = icmp ugt %"class.blink::MultiColumnFragmentainerGroup"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1708"* %0, i32 %5) #11
  %14 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::MultiColumnFragmentainerGroup"* %1 to i64
  %17 = ptrtoint %"class.blink::MultiColumnFragmentainerGroup"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 5
  tail call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1708"* %0, i32 %5) #11
  %20 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %23, i64 %26
  %28 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %27 to i8*
  %29 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #11
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1708"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %31, align 8
  %33 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1708"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 5
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1708"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1708"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1708"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %68

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %5, align 8
  %7 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::MultiColumnFragmentainerGroup"*
  %10 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1708"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %136

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.1708"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %67, label %26

26:                                               ; preds = %16
  %27 = shl nuw nsw i64 %19, 5
  %28 = add nsw i64 %27, -32
  %29 = lshr exact i64 %28, 5
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %40, %33 ], [ %6, %26 ]
  %35 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %39, %33 ], [ %9, %26 ]
  %36 = phi i64 [ %41, %33 ], [ %31, %26 ]
  %37 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %35 to i8*
  %38 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 32, i1 false) #11
  %39 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %35, i64 1
  %40 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %34, i64 1
  %41 = add i64 %36, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %33, !llvm.loop !5

43:                                               ; preds = %33, %26
  %44 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %6, %26 ], [ %40, %33 ]
  %45 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %9, %26 ], [ %39, %33 ]
  %46 = icmp ult i64 %28, 96
  br i1 %46, label %67, label %47

47:                                               ; preds = %43, %47
  %48 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %65, %47 ], [ %44, %43 ]
  %49 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %64, %47 ], [ %45, %43 ]
  %50 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %49 to i8*
  %51 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false) #11
  %52 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 1
  %53 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 1
  %54 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %52 to i8*
  %55 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false) #11
  %56 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 2
  %57 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 2
  %58 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %56 to i8*
  %59 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false) #11
  %60 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 3
  %61 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 3
  %62 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %60 to i8*
  %63 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 32, i1 false) #11
  %64 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %49, i64 4
  %65 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %48, i64 4
  %66 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %65, %20
  br i1 %66, label %67, label %47

67:                                               ; preds = %43, %47, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1709"* %21, %"class.blink::MultiColumnFragmentainerGroup"* %6) #11
  br label %136

68:                                               ; preds = %2
  %69 = zext i32 %1 to i64
  %70 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64 %69) #11
  %71 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29MultiColumnFragmentainerGroupEEEPKcv, i64 0, i64 0)) #11
  %72 = lshr i64 %70, 5
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %75, i64 %78
  %80 = icmp eq i32 %77, 0
  br i1 %80, label %125, label %81

81:                                               ; preds = %68
  %82 = bitcast i8* %71 to %"class.blink::MultiColumnFragmentainerGroup"*
  %83 = shl nuw nsw i64 %78, 5
  %84 = add nsw i64 %83, -32
  %85 = lshr exact i64 %84, 5
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %81, %89
  %90 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %96, %89 ], [ %75, %81 ]
  %91 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %95, %89 ], [ %82, %81 ]
  %92 = phi i64 [ %97, %89 ], [ %87, %81 ]
  %93 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %91 to i8*
  %94 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 32, i1 false) #11
  %95 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %91, i64 1
  %96 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %90, i64 1
  %97 = add i64 %92, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %89, !llvm.loop !7

99:                                               ; preds = %89, %81
  %100 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %75, %81 ], [ %96, %89 ]
  %101 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %82, %81 ], [ %95, %89 ]
  %102 = icmp ult i64 %84, 96
  br i1 %102, label %123, label %103

103:                                              ; preds = %99, %103
  %104 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %121, %103 ], [ %100, %99 ]
  %105 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %120, %103 ], [ %101, %99 ]
  %106 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %105 to i8*
  %107 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 32, i1 false) #11
  %108 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 1
  %109 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 1
  %110 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %108 to i8*
  %111 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 32, i1 false) #11
  %112 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 2
  %113 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 2
  %114 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %112 to i8*
  %115 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 32, i1 false) #11
  %116 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 3
  %117 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 3
  %118 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %116 to i8*
  %119 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 32, i1 false) #11
  %120 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %105, i64 4
  %121 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %104, i64 4
  %122 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %121, %79
  br i1 %122, label %123, label %103

123:                                              ; preds = %103, %99
  %124 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %74, align 8
  br label %125

125:                                              ; preds = %123, %68
  %126 = phi %"class.blink::MultiColumnFragmentainerGroup"* [ %124, %123 ], [ %75, %68 ]
  %127 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 1, i64 0
  %128 = bitcast i8* %127 to %"class.blink::MultiColumnFragmentainerGroup"*
  %129 = icmp eq %"class.blink::MultiColumnFragmentainerGroup"* %126, %128
  br i1 %129, label %132, label %130, !prof !4

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1709"* %131, %"class.blink::MultiColumnFragmentainerGroup"* %126) #11
  br label %132

132:                                              ; preds = %125, %130
  %133 = bitcast %"class.WTF::Vector.1708"* %0 to i64*
  store atomic i64 %73, i64* %133 monotonic, align 8
  %134 = trunc i64 %72 to i32
  %135 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %134, i32* %135, align 8
  br label %136

136:                                              ; preds = %67, %132, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink29MultiColumnFragmentainerGroupEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1709"*, %"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::MultiColumnFragmentainerGroup"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1708"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1708", %"class.WTF::Vector.1708"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
