; ModuleID = '../../third_party/blink/renderer/platform/bindings/dom_wrapper_world.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/dom_wrapper_world.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.168", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.172" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.167 }
%class.scoped_refptr.167 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<int> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<int> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StaticSingleton.219" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<WTF::HashMap<int, blink::DOMWrapperWorld *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<blink::DOMWrapperWorld *>, WTF::PartitionAllocator> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<WTF::HashMap<int, blink::DOMWrapperWorld *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<blink::DOMWrapperWorld *>, WTF::PartitionAllocator> > >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific.225" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StaticSingleton.229" = type { %"class.WTF::StaticSingleton<WTF::HashMap<int, scoped_refptr<blink::SecurityOrigin>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::SecurityOrigin> >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<int, scoped_refptr<blink::SecurityOrigin>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::SecurityOrigin> >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.234" = type { %"class.WTF::StaticSingleton<WTF::HashMap<int, WTF::String, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<int, WTF::String, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.256" }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.215 }
%union.anon.215 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::HashMap.177" = type { %"class.WTF::HashTable.178" }
%"class.WTF::HashTable.178" = type <{ %"struct.WTF::KeyValuePair.181"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.181" = type { i32, %"class.blink::DOMWrapperWorld"* }
%"class.WTF::Vector.182" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.188", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.196 }
%"class.WTF::RefCounted.188" = type { %"class.base::RefCounted.189" }
%"class.base::RefCounted.189" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.196 = type { %"class.blink::SecurityOrigin"* }
%"struct.WTF::KeyValuePair.201" = type { i32, %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashTable.198" = type <{ %"struct.WTF::KeyValuePair.201"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type { i32, %"class.WTF::String" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::TraceWrapperV8Reference.261" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN3WTF7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi = comdat any

$_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv = comdat any

$_ZZN7logging15CheckOpValueStrIN5blink15DOMWrapperWorld7WorldIdEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE5eraseEPKSB_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberIKNS2_15ScriptWrappableEEENS2_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_15ScriptWrappableEEENS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSE_ISB_EEEEEEvPT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23TraceWrapperV8ReferenceIN2v86ObjectEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS1_12KeyValuePairIS6_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_15ScriptWrappableEEENS_12KeyValuePairIS7_NS3_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12DOMDataStoreEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12DOMDataStoreEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12DOMDataStoreEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMDataStoreELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKiS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15DOMWrapperWorldEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERiRKS2_EENS_18HashTableAddResultISD_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS3_jSE_ = comdat any

$_ZN3WTF14ThreadSpecificIiE7DestroyEPv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = hidden local_unnamed_addr global i32 0, align 4
@_ZZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world = internal unnamed_addr global %"class.blink::DOMWrapperWorld"* null, align 8
@_ZGVZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world = internal global i64 0, align 8
@_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id = internal global i64 0, align 8
@_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE31next_devtools_isolated_world_id = internal unnamed_addr global i32 536870914, align 4
@.str = private unnamed_addr constant [46 x i8] c"world_id >= WorldId::kUnspecifiedWorldIdStart\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/platform/bindings/dom_wrapper_world.cc\00", align 1
@_ZZN5blinkL11GetWorldMapEvE5s_map = internal global %"class.WTF::StaticSingleton.219" zeroinitializer, align 8
@_ZGVZN5blinkL11GetWorldMapEvE5s_map = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [200 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<int, blink::DOMWrapperWorld *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<blink::DOMWrapperWorld *>, WTF::PartitionAllocator>]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific.225"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map = internal global %"class.WTF::StaticSingleton.229" zeroinitializer, align 8
@_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map = internal global i64 0, align 8
@_ZZN5blinkL22IsolatedWorldStableIdsEvE5s_map = internal global %"class.WTF::StaticSingleton.234" zeroinitializer, align 8
@_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map = internal global i64 0, align 8
@_ZZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map = internal global %"class.WTF::StaticSingleton.234" zeroinitializer, align 8
@_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map = internal global i64 0, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS7_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [576 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<const blink::ScriptWrappable>, WTF::KeyValuePair<blink::WeakMember<const blink::ScriptWrappable>, blink::TraceWrapperV8Reference<v8::Object> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<const blink::ScriptWrappable>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<const blink::ScriptWrappable> >, WTF::HashTraits<blink::TraceWrapperV8Reference<v8::Object> > >, WTF::HashTraits<blink::WeakMember<const blink::ScriptWrappable> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12DOMDataStoreEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DOMDataStore]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12DOMDataStoreEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12DOMDataStoreEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, blink::DOMWrapperWorld *>]\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15DOMWrapperWorldEEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::DOMWrapperWorld>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, scoped_refptr<blink::SecurityOrigin> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNS_6StringEEEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1

@_ZN5blink15DOMWrapperWorldC1EPN2v87IsolateENS0_9WorldTypeEi = hidden unnamed_addr alias void (%"class.blink::DOMWrapperWorld"*, %"class.v8::Isolate"*, i32, i32), void (%"class.blink::DOMWrapperWorld"*, %"class.v8::Isolate"*, i32, i32)* @_ZN5blink15DOMWrapperWorldC2EPN2v87IsolateENS0_9WorldTypeEi
@_ZN5blink15DOMWrapperWorldD1Ev = hidden unnamed_addr alias void (%"class.blink::DOMWrapperWorld"*), void (%"class.blink::DOMWrapperWorld"*)* @_ZN5blink15DOMWrapperWorldD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld6CreateEPN2v87IsolateENS0_9WorldTypeE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeE(i32 %1)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call noalias i8* @malloc(i64 32) #10
  %7 = bitcast i8* %6 to %"class.blink::DOMWrapperWorld"*
  tail call void @_ZN5blink15DOMWrapperWorldC2EPN2v87IsolateENS0_9WorldTypeEi(%"class.blink::DOMWrapperWorld"* %7, %"class.v8::Isolate"* %0, i32 %1, i32 %3)
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi %"class.blink::DOMWrapperWorld"* [ %7, %5 ], [ null, %2 ]
  ret %"class.blink::DOMWrapperWorld"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !2

8:                                                ; preds = %1
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  store i32* null, i32** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id to i32**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificIiE7DestroyEPv) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id) #10
  br label %12

12:                                               ; preds = %8, %11, %1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %12
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !3

18:                                               ; preds = %15
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %19) #10
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i8* [ %19, %18 ], [ %16, %15 ]
  %22 = bitcast i8* %21 to i32*
  store i32 1073741828, i32* %22, align 4
  br label %23

23:                                               ; preds = %12, %20
  switch i32 %0, label %63 [
    i32 0, label %64
    i32 1, label %24
    i32 2, label %25
    i32 3, label %30
    i32 4, label %30
    i32 5, label %30
  ]

24:                                               ; preds = %23
  br label %64

25:                                               ; preds = %23
  %26 = load i32, i32* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE31next_devtools_isolated_world_id, align 4
  %27 = icmp sgt i32 %26, 1073741826
  br i1 %27, label %64, label %28

28:                                               ; preds = %25
  %29 = add nsw i32 %26, 1
  store i32 %29, i32* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE31next_devtools_isolated_world_id, align 4
  br label %64

30:                                               ; preds = %23, %23, %23
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %30
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %34) #10
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i8* [ %34, %33 ], [ %31, %30 ]
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #10
  store i32 1073741828, i32* %4, align 4
  %42 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp slt i32 %38, 1073741828
  br i1 %43, label %45, label %44

44:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #10
  br label %54

45:                                               ; preds = %35
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %38) #10
  %47 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %41, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5blink15DOMWrapperWorld7WorldIdEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #10
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 267, %"class.logging::CheckOpResult"* nonnull %3) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %55 = add nsw i32 %38, 1
  %56 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60, !prof !3

58:                                               ; preds = %54
  %59 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeEE15s_next_world_id, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %59) #10
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i8* [ %59, %58 ], [ %56, %54 ]
  %62 = bitcast i8* %61 to i32*
  store i32 %55, i32* %62, align 4
  br label %64

63:                                               ; preds = %23
  br label %64

64:                                               ; preds = %25, %23, %63, %60, %28, %24
  %65 = phi i32 [ -1, %63 ], [ %38, %60 ], [ %26, %28 ], [ -1, %24 ], [ %0, %23 ], [ -1, %25 ]
  ret i32 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorldC2EPN2v87IsolateENS0_9WorldTypeEi(%"class.blink::DOMWrapperWorld"*, %"class.v8::Isolate"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::DOMWrapperWorld"*, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 3
  %10 = icmp eq i32 %2, 0
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12DOMDataStoreEEEPhm(i64 40) #10
  %12 = bitcast i8* %11 to %"class.blink::DOMDataStore"*
  tail call void @_ZN5blink12DOMDataStoreC1EPN2v87IsolateEb(%"class.blink::DOMDataStore"* %12, %"class.v8::Isolate"* %1, i1 zeroext %10) #10
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %9, i64 0, i32 0
  %18 = bitcast %"class.blink::Persistent"* %9 to i8**
  store i8* %11, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %19, align 8
  %20 = ptrtoint i8* %11 to i64
  switch i64 %20, label %21 [
    i64 0, label %47
    i64 -1, label %47
  ]

21:                                               ; preds = %4
  %22 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #10
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %36 = icmp eq %"class.blink::PersistentNode"* %35, null
  br i1 %36, label %37, label %40, !prof !3

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %33, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %38) #10
  %39 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi %"class.blink::PersistentNode"* [ %39, %37 ], [ %35, %28 ]
  %42 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.blink::PersistentRegion"* %33 to i64*
  store i64 %43, i64* %44, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %17, %"class.blink::PersistentBase"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMDataStoreELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %19, align 8
  br label %47

47:                                               ; preds = %4, %4, %40
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, -1
  %50 = icmp ult i32 %49, 5
  br i1 %50, label %51, label %72

51:                                               ; preds = %47
  %52 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11GetWorldMapEvE5s_map to i8*) acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %58, !prof !2

54:                                               ; preds = %51
  %55 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  store %"class.WTF::HashMap.177"* null, %"class.WTF::HashMap.177"** bitcast (%"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map to %"class.WTF::HashMap.177"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  br label %58

58:                                               ; preds = %51, %54, %57
  %59 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63, !prof !3

61:                                               ; preds = %58
  %62 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %62) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 20, i1 false) #10
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i8* [ %62, %61 ], [ %59, %58 ]
  %65 = bitcast %"class.blink::DOMWrapperWorld"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  store %"class.blink::DOMWrapperWorld"* %0, %"class.blink::DOMWrapperWorld"** %5, align 8
  %66 = bitcast i8* %64 to %"class.WTF::HashTable.178"*
  %67 = call { %"struct.WTF::KeyValuePair.181"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKiS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.178"* %66, i32* dereferenceable(4) %8, %"class.blink::DOMWrapperWorld"** nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  %68 = call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  br label %72

72:                                               ; preds = %63, %69, %47
  ret void
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %22, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #10
  %8 = tail call i32 @_ZN5blink15DOMWrapperWorld22GenerateWorldIdForTypeENS0_9WorldTypeE(i32 0) #10
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = tail call noalias i8* @malloc(i64 32) #10
  %12 = bitcast i8* %11 to %"class.blink::DOMWrapperWorld"*
  tail call void @_ZN5blink15DOMWrapperWorldC2EPN2v87IsolateENS0_9WorldTypeEi(%"class.blink::DOMWrapperWorld"* %12, %"class.v8::Isolate"* %7, i32 0, i32 %8) #10
  %13 = icmp eq i8* %11, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = bitcast i8* %11 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %15) #10
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %15) #10
  %16 = bitcast i8* %11 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @_ZN5blink15DOMWrapperWorldD2Ev(%"class.blink::DOMWrapperWorld"* nonnull %12) #10
  tail call void @free(i8* nonnull %11) #10
  br label %20

20:                                               ; preds = %6, %10, %14, %19
  %21 = phi %"class.blink::DOMWrapperWorld"* [ null, %10 ], [ %12, %14 ], [ %12, %19 ], [ null, %6 ]
  store %"class.blink::DOMWrapperWorld"* %21, %"class.blink::DOMWrapperWorld"** @_ZZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world) #10
  br label %22

22:                                               ; preds = %3, %20, %0
  %23 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** @_ZZN5blink15DOMWrapperWorld9MainWorldEvE17cached_main_world, align 8
  ret %"class.blink::DOMWrapperWorld"* %23
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorld24AllWorldsInCurrentThreadERN3WTF6VectorI13scoped_refptrIS0_ELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.182"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DOMWrapperWorld"*, align 8
  %3 = alloca %"class.blink::DOMWrapperWorld"*, align 8
  %4 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::DOMWrapperWorld"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = tail call dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld9MainWorldEv()
  store %"class.blink::DOMWrapperWorld"* %7, %"class.blink::DOMWrapperWorld"** %2, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %24, label %13, !prof !3

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %16 = zext i32 %9 to i64
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 %16, i32 0
  store %"class.blink::DOMWrapperWorld"* %7, %"class.blink::DOMWrapperWorld"** %17, align 8
  %18 = icmp eq %"class.blink::DOMWrapperWorld"* %7, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  br label %21

21:                                               ; preds = %19, %13
  %22 = load i32, i32* %8, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %8, align 4
  br label %25

24:                                               ; preds = %5
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.182"* %0, %"class.blink::DOMWrapperWorld"** nonnull dereferenceable(8) %2) #10
  br label %25

25:                                               ; preds = %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  br label %26

26:                                               ; preds = %25, %1
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11GetWorldMapEvE5s_map to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %26
  %30 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  store %"class.WTF::HashMap.177"* null, %"class.WTF::HashMap.177"** bitcast (%"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map to %"class.WTF::HashMap.177"**), align 8
  call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  br label %33

33:                                               ; preds = %26, %29, %32
  %34 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %33
  %37 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %37) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 20, i1 false) #10
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i8* [ %37, %36 ], [ %34, %33 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 12
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %39 to %"struct.WTF::KeyValuePair.181"**
  %45 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %44, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 8
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %45, i64 %49
  br i1 %43, label %71, label %51

51:                                               ; preds = %38
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %51, %59
  %54 = phi %"struct.WTF::KeyValuePair.181"* [ %60, %59 ], [ %45, %51 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %54, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair.181"* %60, %50
  br i1 %61, label %71, label %53

62:                                               ; preds = %53, %51
  %63 = phi %"struct.WTF::KeyValuePair.181"* [ %45, %51 ], [ %54, %53 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair.181"* %63, %50
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.blink::DOMWrapperWorld"** %3 to i8*
  %67 = bitcast %"class.blink::DOMWrapperWorld"** %3 to i64*
  %68 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 2
  %69 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 0
  br label %72

71:                                               ; preds = %59, %92, %104, %101, %38, %62
  ret void

72:                                               ; preds = %65, %104
  %73 = phi %"struct.WTF::KeyValuePair.181"* [ %63, %65 ], [ %96, %104 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %73, i64 0, i32 1
  %75 = bitcast %"class.blink::DOMWrapperWorld"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %67, align 8
  %77 = load i32, i32* %68, align 4
  %78 = load i32, i32* %69, align 8
  %79 = icmp eq i32 %77, %78
  %80 = inttoptr i64 %76 to %"class.blink::DOMWrapperWorld"*
  br i1 %79, label %91, label %81, !prof !3

81:                                               ; preds = %72
  %82 = load %class.scoped_refptr*, %class.scoped_refptr** %70, align 8
  %83 = zext i32 %77 to i64
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 %83, i32 0
  store %"class.blink::DOMWrapperWorld"* %80, %"class.blink::DOMWrapperWorld"** %84, align 8
  %85 = icmp eq i64 %76, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %87) #10
  br label %88

88:                                               ; preds = %86, %81
  %89 = load i32, i32* %68, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %68, align 4
  br label %92

91:                                               ; preds = %72
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.182"* %0, %"class.blink::DOMWrapperWorld"** nonnull dereferenceable(8) %3) #10
  br label %92

92:                                               ; preds = %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %73, i64 1
  %94 = icmp eq %"struct.WTF::KeyValuePair.181"* %93, %50
  br i1 %94, label %71, label %95

95:                                               ; preds = %92, %101
  %96 = phi %"struct.WTF::KeyValuePair.181"* [ %102, %101 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  %100 = icmp ult i32 %99, 2
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %96, i64 1
  %103 = icmp eq %"struct.WTF::KeyValuePair.181"* %102, %50
  br i1 %103, label %71, label %95

104:                                              ; preds = %95
  %105 = icmp eq %"struct.WTF::KeyValuePair.181"* %96, %50
  br i1 %105, label %71, label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorldD2Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %5 = add i32 %4, -1
  store i32 %5, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  br label %6

6:                                                ; preds = %3, %1
  %7 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink15DOMWrapperWorld7DisposeEv(%"class.blink::DOMWrapperWorld"* %0)
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %13 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %14 = icmp eq %"class.blink::PersistentNode"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !3

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %29, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %34

34:                                               ; preds = %11, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorld7DisposeEv(%"class.blink::DOMWrapperWorld"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %2, align 8
  %4 = icmp eq %"class.blink::DOMDataStore"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink12DOMDataStore7DisposeEv(%"class.blink::DOMDataStore"* nonnull %3) #10
  store %"class.blink::DOMDataStore"* null, %"class.blink::DOMDataStore"** %2, align 8
  %6 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !3

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #10
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  store %"class.blink::PersistentNode"* %22, %"class.blink::PersistentNode"** %23, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %6, align 8
  br label %28

28:                                               ; preds = %1, %16, %5
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11GetWorldMapEvE5s_map to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35, !prof !2

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store %"class.WTF::HashMap.177"* null, %"class.WTF::HashMap.177"** bitcast (%"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map to %"class.WTF::HashMap.177"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  br label %35

35:                                               ; preds = %28, %31, %34
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %35
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %39) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 20, i1 false) #10
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i8* [ %39, %38 ], [ %36, %35 ]
  %42 = bitcast i8* %41 to %"class.WTF::HashMap.177"*
  %43 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  tail call void @_ZN3WTF7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.177"* %42, i32* dereferenceable(4) %43)
  ret void
}

declare void @_ZN5blink12DOMDataStore7DisposeEv(%"class.blink::DOMDataStore"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.177"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.177", %"class.WTF::HashMap.177"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.181"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap.177", %"class.WTF::HashMap.177"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair.181"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.181"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair.181"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap.177", %"class.WTF::HashMap.177"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair.181"* %71, %69
  br i1 %72, label %96, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %69, i64 0, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap.177", %"class.WTF::HashMap.177"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap.177", %"class.WTF::HashMap.177"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 4
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 %92, i1 false) #10
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair.181"*
  %95 = tail call %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.178"* %70, %"struct.WTF::KeyValuePair.181"* %94, i32 %90, %"struct.WTF::KeyValuePair.181"* null) #10
  br label %96

96:                                               ; preds = %67, %73, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld19EnsureIsolatedWorldEPN2v87IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11GetWorldMapEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store %"class.WTF::HashMap.177"* null, %"class.WTF::HashMap.177"** bitcast (%"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map to %"class.WTF::HashMap.177"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !3

12:                                               ; preds = %9
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %13) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #10
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %9 ]
  %16 = bitcast i8* %15 to %"struct.WTF::KeyValuePair.181"**
  %17 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.181"* %17, null
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  br i1 %18, label %77, label %22

22:                                               ; preds = %14
  %23 = add i32 %21, -1
  %24 = zext i32 %23 to i64
  %25 = shl i32 %1, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %26, %1
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = and i32 %23, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %17, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %1
  br i1 %43, label %72, label %44

44:                                               ; preds = %22
  %45 = xor i32 %37, -1
  %46 = lshr i32 %35, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %63, %44
  %59 = phi i32 [ %42, %44 ], [ %70, %63 ]
  %60 = phi i64 [ %39, %44 ], [ %67, %63 ]
  %61 = phi i64 [ 0, %44 ], [ %65, %63 ]
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = icmp eq i64 %61, 0
  %65 = select i1 %64, i64 %57, i64 %61
  %66 = add i64 %65, %60
  %67 = and i64 %66, %24
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %17, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %1
  br i1 %71, label %72, label %58

72:                                               ; preds = %63, %22
  %73 = phi %"struct.WTF::KeyValuePair.181"* [ %40, %22 ], [ %68, %63 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair.181"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = zext i32 %21 to i64
  br label %80

77:                                               ; preds = %58, %72, %14
  %78 = zext i32 %21 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %17, i64 %78
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi i64 [ %76, %75 ], [ %78, %77 ]
  %82 = phi %"struct.WTF::KeyValuePair.181"* [ %73, %75 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %17, i64 %81
  %84 = icmp eq %"struct.WTF::KeyValuePair.181"* %82, %83
  br i1 %84, label %91, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %82, i64 0, i32 1
  %87 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %86, align 8
  %88 = icmp eq %"class.blink::DOMWrapperWorld"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %87, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %90) #10
  br label %94

91:                                               ; preds = %80
  %92 = tail call noalias i8* @malloc(i64 32) #10
  %93 = bitcast i8* %92 to %"class.blink::DOMWrapperWorld"*
  tail call void @_ZN5blink15DOMWrapperWorldC2EPN2v87IsolateENS0_9WorldTypeEi(%"class.blink::DOMWrapperWorld"* %93, %"class.v8::Isolate"* %0, i32 1, i32 %1)
  br label %94

94:                                               ; preds = %89, %85, %91
  %95 = phi %"class.blink::DOMWrapperWorld"* [ %93, %91 ], [ null, %85 ], [ %87, %89 ]
  ret %"class.blink::DOMWrapperWorld"* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"* nocapture readonly, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = tail call fastcc %"class.blink::SecurityOrigin"* @_ZN5blinkL30GetIsolatedWorldSecurityOriginEiRKN4base16UnguessableTokenE(i32 %4, %"class.base::UnguessableToken"* dereferenceable(16) %1)
  ret %"class.blink::SecurityOrigin"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::SecurityOrigin"* @_ZN5blinkL30GetIsolatedWorldSecurityOriginEiRKN4base16UnguessableTokenE(i32, %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #0 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.229", %"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map) #10
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** bitcast (%"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to %"struct.WTF::KeyValuePair.201"**), align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair.201"* %10, null
  %12 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.229", %"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %11, label %68, label %13

13:                                               ; preds = %9
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = shl i32 %0, 15
  %17 = xor i32 %16, -1
  %18 = add i32 %17, %0
  %19 = lshr i32 %18, 10
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, 9
  %22 = lshr i32 %21, 6
  %23 = xor i32 %22, %21
  %24 = shl i32 %23, 11
  %25 = xor i32 %24, -1
  %26 = add i32 %23, %25
  %27 = lshr i32 %26, 16
  %28 = xor i32 %27, %26
  %29 = and i32 %14, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %10, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %0
  br i1 %34, label %63, label %35

35:                                               ; preds = %13
  %36 = xor i32 %28, -1
  %37 = lshr i32 %26, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %54, %35
  %50 = phi i32 [ %33, %35 ], [ %61, %54 ]
  %51 = phi i64 [ %30, %35 ], [ %58, %54 ]
  %52 = phi i64 [ 0, %35 ], [ %56, %54 ]
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %49
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 %48, i64 %52
  %57 = add i64 %56, %51
  %58 = and i64 %57, %15
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %10, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %0
  br i1 %62, label %63, label %49

63:                                               ; preds = %54, %13
  %64 = phi %"struct.WTF::KeyValuePair.201"* [ %31, %13 ], [ %59, %54 ]
  %65 = icmp eq %"struct.WTF::KeyValuePair.201"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = zext i32 %12 to i64
  br label %71

68:                                               ; preds = %49, %63, %9
  %69 = zext i32 %12 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %10, i64 %69
  br label %71

71:                                               ; preds = %66, %68
  %72 = phi i64 [ %67, %66 ], [ %69, %68 ]
  %73 = phi %"struct.WTF::KeyValuePair.201"* [ %64, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %10, i64 %72
  %75 = icmp eq %"struct.WTF::KeyValuePair.201"* %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %73, i64 0, i32 1, i32 0
  %78 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %77, align 8
  %79 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin24GetOriginForAgentClusterERKN4base16UnguessableTokenE(%"class.blink::SecurityOrigin"* %78, %"class.base::UnguessableToken"* dereferenceable(16) %1) #10
  br label %80

80:                                               ; preds = %71, %76
  %81 = phi %"class.blink::SecurityOrigin"* [ %79, %76 ], [ null, %71 ]
  ret %"class.blink::SecurityOrigin"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"* nocapture readonly, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = tail call fastcc %"class.blink::SecurityOrigin"* @_ZN5blinkL30GetIsolatedWorldSecurityOriginEiRKN4base16UnguessableTokenE(i32 %4, %"class.base::UnguessableToken"* dereferenceable(16) %1)
  ret %"class.blink::SecurityOrigin"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorld30SetIsolatedWorldSecurityOriginEi13scoped_refptrINS_14SecurityOriginEE(i32, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.187, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.scoped_refptr.187, %class.scoped_refptr.187* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %1, %"class.blink::SecurityOrigin"** %5, align 8
  store i32 %0, i32* %4, align 4
  %6 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %2
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.229", %"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map) #10
  br label %13

13:                                               ; preds = %2, %9, %12
  br i1 %6, label %35, label %14

14:                                               ; preds = %13
  %15 = call { %"struct.WTF::KeyValuePair.201"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.198"* bitcast (%"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to %"class.WTF::HashTable.198"*), i32* nonnull dereferenceable(4) %4, %class.scoped_refptr.187* nonnull dereferenceable(8) %3) #10
  %16 = extractvalue { %"struct.WTF::KeyValuePair.201"*, i8 } %15, 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %104

19:                                               ; preds = %14
  %20 = extractvalue { %"struct.WTF::KeyValuePair.201"*, i8 } %15, 0
  %21 = bitcast %class.scoped_refptr.187* %3 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %5, align 8
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %20, i64 0, i32 1
  %24 = bitcast %class.scoped_refptr.187* %23 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.187, %class.scoped_refptr.187* %23, i64 0, i32 0
  %26 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %25, align 8
  store i64 %22, i64* %24, align 8
  %27 = icmp eq %"class.blink::SecurityOrigin"* %26, null
  br i1 %27, label %104, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #10
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %104

33:                                               ; preds = %28
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %26) #10
  %34 = bitcast %"class.blink::SecurityOrigin"* %26 to i8*
  call void @free(i8* %34) #10
  br label %104

35:                                               ; preds = %13
  %36 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** bitcast (%"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to %"struct.WTF::KeyValuePair.201"**), align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair.201"* %36, null
  %38 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.229", %"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %37, label %95, label %39

39:                                               ; preds = %35
  %40 = add i32 %38, -1
  %41 = zext i32 %40 to i64
  %42 = load i32, i32* %4, align 4
  %43 = shl i32 %42, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %42, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %40
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %36, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %42
  br i1 %61, label %90, label %62

62:                                               ; preds = %39
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %76

76:                                               ; preds = %81, %62
  %77 = phi i32 [ %60, %62 ], [ %88, %81 ]
  %78 = phi i64 [ %57, %62 ], [ %85, %81 ]
  %79 = phi i64 [ 0, %62 ], [ %83, %81 ]
  %80 = icmp eq i32 %77, 0
  br i1 %80, label %95, label %81

81:                                               ; preds = %76
  %82 = icmp eq i64 %79, 0
  %83 = select i1 %82, i64 %75, i64 %79
  %84 = add i64 %83, %78
  %85 = and i64 %84, %41
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %36, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %42
  br i1 %89, label %90, label %76

90:                                               ; preds = %81, %39
  %91 = phi %"struct.WTF::KeyValuePair.201"* [ %58, %39 ], [ %86, %81 ]
  %92 = icmp eq %"struct.WTF::KeyValuePair.201"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = zext i32 %38 to i64
  br label %98

95:                                               ; preds = %76, %90, %35
  %96 = zext i32 %38 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %36, i64 %96
  br label %98

98:                                               ; preds = %95, %93
  %99 = phi i64 [ %94, %93 ], [ %96, %95 ]
  %100 = phi %"struct.WTF::KeyValuePair.201"* [ %91, %93 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %36, i64 %99
  %102 = icmp eq %"struct.WTF::KeyValuePair.201"* %101, %100
  br i1 %102, label %104, label %103

103:                                              ; preds = %98
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.198"* bitcast (%"class.WTF::StaticSingleton.229"* @_ZZN5blinkL28IsolatedWorldSecurityOriginsEvE5s_map to %"class.WTF::HashTable.198"*), %"struct.WTF::KeyValuePair.201"* %100) #10
  br label %104

104:                                              ; preds = %103, %98, %33, %28, %19, %14
  %105 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %106 = icmp eq %"class.blink::SecurityOrigin"* %105, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %105, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %108) #10
  %109 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %105) #10
  %113 = bitcast %"class.blink::SecurityOrigin"* %105 to i8*
  call void @free(i8* %113) #10
  br label %114

114:                                              ; preds = %104, %107, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15DOMWrapperWorld20NonMainWorldStableIdEv(%"class.blink::DOMWrapperWorld"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.234", %"class.WTF::StaticSingleton.234"* @_ZZN5blinkL22IsolatedWorldStableIdsEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map) #10
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %2, align 4
  %13 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.203"* bitcast (%"class.WTF::StaticSingleton.234"* @_ZZN5blinkL22IsolatedWorldStableIdsEvE5s_map to %"class.WTF::HashMap.203"*), i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.203"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.207"* %4, null
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %6
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %83, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %6
  %60 = phi %"struct.WTF::KeyValuePair.207"* [ %27, %6 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.207"* %60, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %60, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #10
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  tail call void @llvm.trap() #10
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %45, %2, %81, %66, %62, %59
  %84 = phi %"class.WTF::StringImpl"* [ null, %59 ], [ null, %62 ], [ %64, %66 ], [ %64, %81 ], [ null, %2 ], [ null, %45 ]
  ret %"class.WTF::StringImpl"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorld23SetNonMainWorldStableIdEiRKN3WTF6StringE(i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.234", %"class.WTF::StaticSingleton.234"* @_ZZN5blinkL22IsolatedWorldStableIdsEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22IsolatedWorldStableIdsEvE5s_map) #10
  br label %10

10:                                               ; preds = %2, %6, %9
  %11 = call { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERiRKS2_EENS_18HashTableAddResultISD_S3_EEOT0_OT1_(%"class.WTF::HashTable.204"* bitcast (%"class.WTF::StaticSingleton.234"* @_ZZN5blinkL22IsolatedWorldStableIdsEvE5s_map to %"class.WTF::HashTable.204"*), i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* dereferenceable(8) %1) #10
  %12 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %11, 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %57

15:                                               ; preds = %10
  %16 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %11, 0
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %16, i64 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %15
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %17 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %10, %38, %53, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15DOMWrapperWorld29NonMainWorldHumanReadableNameEv(%"class.blink::DOMWrapperWorld"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.234", %"class.WTF::StaticSingleton.234"* @_ZZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map) #10
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %2, align 4
  %13 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.203"* bitcast (%"class.WTF::StaticSingleton.234"* @_ZZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map to %"class.WTF::HashMap.203"*), i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DOMWrapperWorld32SetNonMainWorldHumanReadableNameEiRKN3WTF6StringE(i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.234", %"class.WTF::StaticSingleton.234"* @_ZZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map) #10
  br label %10

10:                                               ; preds = %2, %6, %9
  %11 = call { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERiRKS2_EENS_18HashTableAddResultISD_S3_EEOT0_OT1_(%"class.WTF::HashTable.204"* bitcast (%"class.WTF::StaticSingleton.234"* @_ZZN5blinkL31IsolatedWorldHumanReadableNamesEvE5s_map to %"class.WTF::HashTable.204"*), i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* dereferenceable(8) %1) #10
  %12 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %11, 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %57

15:                                               ; preds = %10
  %16 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %11, 0
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %16, i64 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %15
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %17 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %10, %38, %53, %56
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15DOMWrapperWorld32HasWrapperInAnyWorldInMainThreadEPNS_15ScriptWrappableE(%"class.blink::ScriptWrappable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.182", align 8
  %3 = bitcast %"class.WTF::Vector.182"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink15DOMWrapperWorld24AllWorldsInCurrentThreadERN3WTF6VectorI13scoped_refptrIS0_ELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.182"* nonnull dereferenceable(16) %2)
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %7 = load i32, i32* %5, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %16

13:                                               ; preds = %28, %25
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 1
  %15 = icmp eq %class.scoped_refptr* %14, %9
  br i1 %15, label %40, label %16

16:                                               ; preds = %11, %13
  %17 = phi %class.scoped_refptr* [ %6, %11 ], [ %14, %13 ]
  %18 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = load i64*, i64** %12, align 8
  %27 = icmp eq i64* %26, null
  br i1 %27, label %13, label %40

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %21, i64 0, i32 3, i32 0
  %30 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %29, i64 0, i32 0
  %31 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %30, %"class.blink::ScriptWrappable"* %0) #10
  %32 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %31, 0
  %33 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %29, i64 0, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %21, i64 0, i32 3, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %32, %38
  br i1 %39, label %13, label %40

40:                                               ; preds = %28, %25, %13
  %41 = phi i1 [ false, %13 ], [ true, %28 ], [ true, %25 ]
  %42 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  br label %43

43:                                               ; preds = %40, %1
  %44 = phi %class.scoped_refptr* [ %6, %1 ], [ %42, %40 ]
  %45 = phi i1 [ false, %1 ], [ %41, %40 ]
  %46 = icmp eq %class.scoped_refptr* %44, null
  br i1 %46, label %74, label %47, !prof !5

47:                                               ; preds = %43
  %48 = bitcast %class.scoped_refptr* %44 to i8*
  %49 = load i32, i32* %5, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %72, label %51, !prof !3

51:                                               ; preds = %47
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 %52
  br label %54

54:                                               ; preds = %66, %51
  %55 = phi %class.scoped_refptr* [ %67, %66 ], [ %44, %51 ]
  %56 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 0, i32 0
  %57 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %56, align 8
  %58 = icmp eq %"class.blink::DOMWrapperWorld"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #10
  %61 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  call void @_ZN5blink15DOMWrapperWorldD2Ev(%"class.blink::DOMWrapperWorld"* nonnull %57) #10
  %65 = bitcast %"class.blink::DOMWrapperWorld"* %57 to i8*
  call void @free(i8* %65) #10
  br label %66

66:                                               ; preds = %64, %59, %54
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 1
  %68 = icmp eq %class.scoped_refptr* %67, %53
  br i1 %68, label %69, label %54

69:                                               ; preds = %66
  store i32 0, i32* %5, align 4
  %70 = bitcast %"class.WTF::Vector.182"* %2 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %47
  %73 = phi i8* [ %71, %69 ], [ %48, %47 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #10
  store %class.scoped_refptr* null, %class.scoped_refptr** %4, align 8
  br label %74

74:                                               ; preds = %43, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15DOMWrapperWorld29UnsetNonMainWorldWrapperIfSetEPNS_15ScriptWrappableERKN2v815TracedReferenceINS3_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::TracedReference"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11GetWorldMapEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store %"class.WTF::HashMap.177"* null, %"class.WTF::HashMap.177"** bitcast (%"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map to %"class.WTF::HashMap.177"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11GetWorldMapEvE5s_map) #10
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !3

12:                                               ; preds = %9
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.219", %"class.WTF::StaticSingleton.219"* @_ZZN5blinkL11GetWorldMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %13) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #10
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %9 ]
  %16 = getelementptr inbounds i8, i8* %15, i64 12
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast i8* %15 to %"struct.WTF::KeyValuePair.181"**
  %21 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %20, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %21, i64 %25
  br i1 %19, label %101, label %27

27:                                               ; preds = %14
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %27, %35
  %30 = phi %"struct.WTF::KeyValuePair.181"* [ %36, %35 ], [ %21, %27 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, 1
  %34 = icmp ult i32 %33, 2
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %30, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair.181"* %36, %26
  br i1 %37, label %101, label %29

38:                                               ; preds = %29, %27
  %39 = phi %"struct.WTF::KeyValuePair.181"* [ %21, %27 ], [ %30, %29 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair.181"* %39, %26
  br i1 %40, label %101, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::TracedReference", %"class.v8::TracedReference"* %1, i64 0, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %41, %99
  %44 = phi %"struct.WTF::KeyValuePair.181"* [ %39, %41 ], [ %91, %99 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %44, i64 0, i32 1
  %46 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %46, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %48, i64 0, i32 3, i32 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %49, i64 0, i32 0
  %51 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %50, %"class.blink::ScriptWrappable"* %0) #10
  %52 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %51, 0
  %53 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %49, i64 0, i32 0, i32 0
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %48, i64 0, i32 3, i32 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %52, %58
  br i1 %59, label %87, label %60

60:                                               ; preds = %43
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 1
  %62 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64*, i64** %42, align 8
  %65 = icmp eq i64* %63, null
  %66 = icmp eq i64* %64, null
  %67 = or i1 %65, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %60
  %69 = load i64, i64* %63, align 8
  %70 = load i64, i64* %64, align 8
  %71 = icmp eq i64 %69, %70
  br i1 %71, label %74, label %87

72:                                               ; preds = %60
  %73 = and i1 %65, %66
  br i1 %73, label %80, label %87

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %49, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %48, i64 0, i32 3, i32 0, i32 0, i32 1
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %63) #10
  %77 = bitcast %"class.blink::TraceWrapperV8Reference"* %61 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  %78 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %75, align 8
  %79 = load i32, i32* %76, align 8
  br label %80

80:                                               ; preds = %72, %74
  %81 = phi i32 [ %79, %74 ], [ %56, %72 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %78, %74 ], [ %54, %72 ]
  %83 = zext i32 %81 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %83
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %84, %52
  br i1 %85, label %101, label %86

86:                                               ; preds = %80
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE5eraseEPKSB_(%"class.WTF::HashTable"* %50, %"struct.WTF::KeyValuePair"* %52) #10
  br label %101

87:                                               ; preds = %68, %43, %72
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %44, i64 1
  %89 = icmp eq %"struct.WTF::KeyValuePair.181"* %88, %26
  br i1 %89, label %101, label %90

90:                                               ; preds = %87, %96
  %91 = phi %"struct.WTF::KeyValuePair.181"* [ %97, %96 ], [ %88, %87 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  %95 = icmp ult i32 %94, 2
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %91, i64 1
  %98 = icmp eq %"struct.WTF::KeyValuePair.181"* %97, %26
  br i1 %98, label %101, label %90

99:                                               ; preds = %90
  %100 = icmp eq %"struct.WTF::KeyValuePair.181"* %91, %26
  br i1 %100, label %101, label %43

101:                                              ; preds = %35, %87, %99, %96, %14, %38, %80, %86
  %102 = phi i1 [ true, %86 ], [ true, %80 ], [ false, %38 ], [ false, %14 ], [ false, %96 ], [ false, %99 ], [ false, %87 ], [ false, %35 ]
  ret i1 %102
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF14ThreadSpecificINS_7HashMapIiPN5blink15DOMWrapperWorldENS_7IntHashIiEENS_10HashTraitsIiEENS7_IS4_EENS_18PartitionAllocatorEEEE7DestroyEPv(i8*) #4 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.181"**
  %5 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.181"* %5, null
  br i1 %6, label %9, label %7, !prof !5

7:                                                ; preds = %3
  %8 = bitcast %"struct.WTF::KeyValuePair.181"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #10
  store %"struct.WTF::KeyValuePair.181"* null, %"struct.WTF::KeyValuePair.181"** %4, align 8
  br label %9

9:                                                ; preds = %3, %7
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #10
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin24GetOriginForAgentClusterERKN4base16UnguessableTokenE(%"class.blink::SecurityOrigin"*, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN5blink15DOMWrapperWorld7WorldIdEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE5eraseEPKSB_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %10 = bitcast %"class.blink::TraceWrapperV8Reference"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  %14 = and i32 %13, 2147483647
  %15 = and i32 %12, -2147483648
  %16 = or i32 %14, %15
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  %20 = mul i32 %19, 6
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  %24 = icmp ugt i32 %22, 8
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %53

26:                                               ; preds = %8
  %27 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %28 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %27, i64 0, i32 1
  %29 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %28) #10
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %33, !prof !3

31:                                               ; preds = %26
  %32 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %28, i8* %32) #10
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i8* [ %32, %31 ], [ %29, %26 ]
  %35 = bitcast i8* %34 to %"class.blink::ThreadState"**
  %36 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %36, i64 0, i32 6
  %38 = load i8, i8* %37, align 8, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %36, i64 0, i32 16
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %53, label %44

44:                                               ; preds = %33, %40
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %36, i64 0, i32 13
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  %49 = load i32, i32* %21, align 8
  %50 = lshr i32 %49, 1
  %51 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE13AllocateTableEj(i32 %50) #10
  %52 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %51, i32 %50, %"struct.WTF::KeyValuePair"* null) #10
  br label %53

53:                                               ; preds = %40, %8, %48, %44
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::TraceWrapperV8Reference", align 8
  %3 = alloca %"struct.WTF::KeyValuePair", align 8
  %4 = zext i32 %0 to i64
  %5 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %4) #10
  %6 = bitcast %"class.blink::HeapHashTableBacking"* %5 to %"struct.WTF::KeyValuePair"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  %10 = bitcast %"class.blink::TraceWrapperV8Reference"* %2 to i8*
  %11 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::TraceWrapperV8Reference"* %12 to %"class.blink::TraceWrapperV8Reference.261"*
  %15 = bitcast %"struct.WTF::KeyValuePair"* %3 to i64*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %18

17:                                               ; preds = %27, %1
  ret %"struct.WTF::KeyValuePair"* %6

18:                                               ; preds = %27, %8
  %19 = phi i64 [ 0, %8 ], [ %29, %27 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10, !noalias !6
  store i64* null, i64** %11, align 8, !alias.scope !9, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10, !alias.scope !6
  call void @_ZN2v82V825MoveTracedGlobalReferenceEPPmS2_(i64** nonnull %11, i64** %13) #10
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.261"* %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10, !noalias !6
  %21 = load i64, i64* %15, align 8
  %22 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %19, i32 1
  %24 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %24, align 8
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %3, %20
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  call void @_ZN2v82V825MoveTracedGlobalReferenceEPPmS2_(i64** %16, i64** %24) #10
  br label %27

27:                                               ; preds = %18, %26
  %28 = bitcast %"class.blink::TraceWrapperV8Reference"* %23 to %"class.blink::TraceWrapperV8Reference.261"*
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.261"* %28) #10
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_15ScriptWrappableEEENS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  %29 = add nuw nsw i64 %19, 1
  %30 = icmp eq i64 %29, %4
  br i1 %30, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %75
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %76, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %78, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair"* nonnull %52, i32 %41) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %75
  %58 = phi i32 [ %13, %18 ], [ %76, %75 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %77, %75 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %78, %75 ]
  %61 = phi i32 [ 0, %18 ], [ %79, %75 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %75
    i64 0, label %75
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::WeakMember"* dereferenceable(8) %67) #10
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberIKNS2_15ScriptWrappableEEENS2_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %63, %"struct.WTF::KeyValuePair"* dereferenceable(16) %69) #10
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %62
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %3
  %73 = select i1 %72, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %74 = load i32, i32* %12, align 8
  br label %75

75:                                               ; preds = %57, %57, %66
  %76 = phi i32 [ %58, %57 ], [ %74, %66 ], [ %58, %57 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %70, %66 ], [ %59, %57 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %73, %66 ], [ %60, %57 ]
  %79 = add i32 %61, 1
  %80 = icmp eq i32 %79, %76
  br i1 %80, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberIKNS2_15ScriptWrappableEEENS2_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #10
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !3

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %20, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %1, %0
  br i1 %21, label %24, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v82V825MoveTracedGlobalReferenceEPPmS2_(i64** %23, i64** %20) #10
  br label %24

24:                                               ; preds = %9, %22
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %19 to %"class.blink::TraceWrapperV8Reference.261"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.261"* %25) #10
  %26 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %24
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %31, %30 ], [ %28, %24 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 14
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %36, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v82V825MoveTracedGlobalReferenceEPPmS2_(i64**, i64**) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.261"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_15ScriptWrappableEEENS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::TraceWrapperV8Reference"* %25 to i8*
  %27 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %18
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv) #10
  br label %36

36:                                               ; preds = %18, %30
  %37 = load atomic i64, i64* %27 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* %40, i8* %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23TraceWrapperV8ReferenceIN2v86ObjectEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %45

45:                                               ; preds = %36, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23TraceWrapperV8ReferenceIN2v86ObjectEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TraceWrapperV8Reference.261"*
  %4 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)***
  %5 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)** %5, i64 7
  %7 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.261"*)** %6, align 8
  tail call void %7(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.261"* %3) #10
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.5, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS1_12KeyValuePairIS6_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS1_12KeyValuePairIS6_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.191"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.191"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([576 x i8], [576 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS7_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_15ScriptWrappableEEENS_12KeyValuePairIS7_NS3_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_15ScriptWrappableEEENS2_12KeyValuePairIS7_NS_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.191"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_15ScriptWrappableEEENS_12KeyValuePairIS7_NS3_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %69, %20
  ret void

33:                                               ; preds = %69, %30
  %34 = phi i64 [ 0, %30 ], [ %70, %69 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %69
    i64 0, label %69
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::TraceWrapperV8Reference"* %40 to i8*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv) #10
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 9
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* %42, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23TraceWrapperV8ReferenceIN2v86ObjectEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %69

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %69
    i64 0, label %69
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::TraceWrapperV8Reference"* %52 to i8*
  %54 = load atomic i64, i64* %36 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

61:                                               ; preds = %56, %51
  %62 = load atomic i64, i64* %36 monotonic, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = inttoptr i64 %62 to i8*
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 9
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %0, i8* %65, i8* %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23TraceWrapperV8ReferenceIN2v86ObjectEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %69

69:                                               ; preds = %49, %49, %37, %37, %64, %61, %39
  %70 = add nuw nsw i64 %34, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ScriptWrappable"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::ScriptWrappable"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %67, align 8
  %69 = icmp eq %"class.blink::ScriptWrappable"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::ScriptWrappable"* %63, inttoptr (i64 -1 to %"class.blink::ScriptWrappable"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %79, align 8
  %81 = icmp eq %"class.blink::ScriptWrappable"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %36, %21
  %24 = phi i64 [ 0, %21 ], [ %37, %36 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %36
    i64 0, label %36
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24, i32 1
  %35 = bitcast %"class.blink::TraceWrapperV8Reference"* %34 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %23, %33
  %37 = add nuw nsw i64 %24, 1
  %38 = icmp eq i64 %37, %22
  br i1 %38, label %39, label %23

39:                                               ; preds = %36, %12, %2
  %40 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %40) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN5blink12DOMDataStoreC1EPN2v87IsolateEb(%"class.blink::DOMDataStore"*, %"class.v8::Isolate"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12DOMDataStoreEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific.225"*, %"class.WTF::ThreadSpecific.225"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific.225", %"class.WTF::ThreadSpecific.225"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.191"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12DOMDataStoreEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.191"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12DOMDataStoreEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMDataStoreEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMDataStore"*
  tail call void @_ZNK5blink12DOMDataStore5TraceEPNS_7VisitorE(%"class.blink::DOMDataStore"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12DOMDataStoreEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink12DOMDataStore5TraceEPNS_7VisitorE(%"class.blink::DOMDataStore"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMDataStoreELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DOMDataStore"**
  %5 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::DOMDataStore"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DOMDataStore"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMDataStoreEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.181"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKiS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.178"*, i32* dereferenceable(4), %"class.blink::DOMWrapperWorld"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.181"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.178"* %0, %"struct.WTF::KeyValuePair.181"* null)
  %9 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.181"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.181"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.181"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %98, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.181"* %52, %"struct.WTF::KeyValuePair.181"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.181"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.181"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.181"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %81, i64 0, i32 1
  %84 = bitcast %"class.blink::DOMWrapperWorld"** %2 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::DOMWrapperWorld"** %83 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, %89
  %93 = shl i32 %92, 1
  %94 = load i32, i32* %12, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %79
  %97 = tail call %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.178"* %0, %"struct.WTF::KeyValuePair.181"* %81)
  br label %98

98:                                               ; preds = %50, %79, %96
  %99 = phi i8 [ 1, %79 ], [ 1, %96 ], [ 0, %50 ]
  %100 = phi %"struct.WTF::KeyValuePair.181"* [ %81, %79 ], [ %97, %96 ], [ %52, %50 ]
  %101 = insertvalue { %"struct.WTF::KeyValuePair.181"*, i8 } undef, %"struct.WTF::KeyValuePair.181"* %100, 0
  %102 = insertvalue { %"struct.WTF::KeyValuePair.181"*, i8 } %101, i8 %99, 1
  ret { %"struct.WTF::KeyValuePair.181"*, i8 } %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.178"*, %"struct.WTF::KeyValuePair.181"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.181"*
  %37 = call %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.178"* %0, %"struct.WTF::KeyValuePair.181"* %36, i32 %32, %"struct.WTF::KeyValuePair.181"* %1) #10
  ret %"struct.WTF::KeyValuePair.181"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.181"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink15DOMWrapperWorldEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.178"*, %"struct.WTF::KeyValuePair.181"*, i32, %"struct.WTF::KeyValuePair.181"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.181"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.178"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.181"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.178"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.181"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.178", %"class.WTF::HashTable.178"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.181"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair.181"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair.181"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %117, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.181"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.181"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.181"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.181"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.181"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.181"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.181"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.181"*
  %109 = inttoptr i64 %107 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair.181"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #10
  %111 = load %"struct.WTF::KeyValuePair.181"*, %"struct.WTF::KeyValuePair.181"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.181", %"struct.WTF::KeyValuePair.181"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair.181"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.181"* %108, %"struct.WTF::KeyValuePair.181"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.181"* %111 to i64
  br label %117

117:                                              ; preds = %31, %106
  %118 = phi i64 [ %32, %31 ], [ %116, %106 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %106 ]
  %120 = phi %"struct.WTF::KeyValuePair.181"* [ %34, %31 ], [ %111, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.181"* [ %35, %31 ], [ %114, %106 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.182"*, %"class.blink::DOMWrapperWorld"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15DOMWrapperWorldEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15DOMWrapperWorldEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.182"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.182"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.182"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %1, align 8
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::DOMWrapperWorld"* %49, %"class.blink::DOMWrapperWorld"** %50, align 8
  %51 = icmp eq %"class.blink::DOMWrapperWorld"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #10
  br label %54

54:                                               ; preds = %45, %52
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15DOMWrapperWorldEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink15DOMWrapperWorldEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.182"*, %"class.blink::DOMWrapperWorld"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink15DOMWrapperWorldEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink15DOMWrapperWorldEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.182"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.182"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.182"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %1, align 8
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::DOMWrapperWorld"* %49, %"class.blink::DOMWrapperWorld"** %50, align 8
  %51 = icmp eq %"class.blink::DOMWrapperWorld"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #10
  br label %54

54:                                               ; preds = %45, %52
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.201"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.198"*, i32* dereferenceable(4), %class.scoped_refptr.187* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.201"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.198"* %0, %"struct.WTF::KeyValuePair.201"* null)
  %9 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.201"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.201"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.201"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %110, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.201"* %52, %"struct.WTF::KeyValuePair.201"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.201"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.201"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.201"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %class.scoped_refptr.187, %class.scoped_refptr.187* %2, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr.187* %2 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %83, align 8
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %81, i64 0, i32 1
  %87 = bitcast %class.scoped_refptr.187* %86 to i64*
  %88 = getelementptr inbounds %class.scoped_refptr.187, %class.scoped_refptr.187* %86, i64 0, i32 0
  %89 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %88, align 8
  store i64 %85, i64* %87, align 8
  %90 = icmp eq %"class.blink::SecurityOrigin"* %89, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %89, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %92) #10
  %93 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %89) #10
  %97 = bitcast %"class.blink::SecurityOrigin"* %89 to i8*
  tail call void @free(i8* %97) #10
  br label %98

98:                                               ; preds = %79, %91, %96
  %99 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, %101
  %105 = shl i32 %104, 1
  %106 = load i32, i32* %12, align 8
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = tail call %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.198"* %0, %"struct.WTF::KeyValuePair.201"* %81)
  br label %110

110:                                              ; preds = %50, %98, %108
  %111 = phi i8 [ 1, %98 ], [ 1, %108 ], [ 0, %50 ]
  %112 = phi %"struct.WTF::KeyValuePair.201"* [ %81, %98 ], [ %109, %108 ], [ %52, %50 ]
  %113 = insertvalue { %"struct.WTF::KeyValuePair.201"*, i8 } undef, %"struct.WTF::KeyValuePair.201"* %112, 0
  %114 = insertvalue { %"struct.WTF::KeyValuePair.201"*, i8 } %113, i8 %111, 1
  ret { %"struct.WTF::KeyValuePair.201"*, i8 } %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.198"*, %"struct.WTF::KeyValuePair.201"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.201"*
  %37 = call %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.198"* %0, %"struct.WTF::KeyValuePair.201"* %36, i32 %32, %"struct.WTF::KeyValuePair.201"* %1) #10
  ret %"struct.WTF::KeyValuePair.201"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.198"*, %"struct.WTF::KeyValuePair.201"*, i32, %"struct.WTF::KeyValuePair.201"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.201"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.198"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.201"* %16 to i64
  br label %56

18:                                               ; preds = %158
  %19 = bitcast %"class.WTF::HashTable.198"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %159, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.201"* [ null, %10 ], [ %162, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %160, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.201"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %47, %29
  %32 = phi i64 [ 0, %29 ], [ %48, %47 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %47, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %25, i64 %32, i32 1, i32 0
  %38 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %37, align 8
  %39 = icmp eq %"class.blink::SecurityOrigin"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #10
  %42 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %38) #10
  %46 = bitcast %"class.blink::SecurityOrigin"* %38 to i8*
  tail call void @free(i8* %46) #10
  br label %47

47:                                               ; preds = %45, %40, %36, %31
  %48 = add nuw nsw i64 %32, 1
  %49 = icmp eq i64 %48, %30
  br i1 %49, label %50, label %31

50:                                               ; preds = %47, %27
  %51 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #10
  br label %52

52:                                               ; preds = %20, %50
  %53 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, -2147483648
  store i32 %55, i32* %53, align 8
  ret %"struct.WTF::KeyValuePair.201"* %23

56:                                               ; preds = %13, %158
  %57 = phi i64 [ %17, %13 ], [ %159, %158 ]
  %58 = phi i32 [ %7, %13 ], [ %160, %158 ]
  %59 = phi %"struct.WTF::KeyValuePair.201"* [ %16, %13 ], [ %161, %158 ]
  %60 = phi %"struct.WTF::KeyValuePair.201"* [ null, %13 ], [ %162, %158 ]
  %61 = phi i32 [ 0, %13 ], [ %163, %158 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %59, i64 %62, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, 1
  %66 = icmp ult i32 %65, 2
  br i1 %66, label %158, label %67

67:                                               ; preds = %56
  %68 = shl i32 %64, 15
  %69 = xor i32 %68, -1
  %70 = add i32 %64, %69
  %71 = lshr i32 %70, 10
  %72 = xor i32 %71, %70
  %73 = mul i32 %72, 9
  %74 = lshr i32 %73, 6
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 11
  %77 = xor i32 %76, -1
  %78 = add i32 %75, %77
  %79 = lshr i32 %78, 16
  %80 = xor i32 %79, %78
  %81 = and i32 %80, %14
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %1, i64 %82
  %84 = ptrtoint %"struct.WTF::KeyValuePair.201"* %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %105, label %88

88:                                               ; preds = %67
  %89 = xor i32 %80, -1
  %90 = lshr i32 %78, 23
  %91 = add i32 %90, %89
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  br label %111

102:                                              ; preds = %118
  %103 = ptrtoint %"struct.WTF::KeyValuePair.201"* %125 to i64
  %104 = inttoptr i64 %120 to %"struct.WTF::KeyValuePair.201"*
  br label %105

105:                                              ; preds = %102, %67
  %106 = phi i64 [ %103, %102 ], [ %84, %67 ]
  %107 = phi %"struct.WTF::KeyValuePair.201"* [ %104, %102 ], [ null, %67 ]
  %108 = icmp eq %"struct.WTF::KeyValuePair.201"* %107, null
  %109 = ptrtoint %"struct.WTF::KeyValuePair.201"* %107 to i64
  %110 = select i1 %108, i64 %106, i64 %109
  br label %130

111:                                              ; preds = %118, %88
  %112 = phi i64 [ 0, %88 ], [ %120, %118 ]
  %113 = phi i32 [ %86, %88 ], [ %128, %118 ]
  %114 = phi i64 [ %84, %88 ], [ %126, %118 ]
  %115 = phi i64 [ %82, %88 ], [ %124, %118 ]
  %116 = phi i64 [ 0, %88 ], [ %122, %118 ]
  %117 = icmp eq i32 %113, %64
  br i1 %117, label %130, label %118

118:                                              ; preds = %111
  %119 = icmp eq i32 %113, -1
  %120 = select i1 %119, i64 %114, i64 %112
  %121 = icmp eq i64 %116, 0
  %122 = select i1 %121, i64 %101, i64 %116
  %123 = add i64 %122, %115
  %124 = and i64 %123, %15
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %1, i64 %124
  %126 = ptrtoint %"struct.WTF::KeyValuePair.201"* %125 to i64
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %102, label %111

130:                                              ; preds = %111, %105
  %131 = phi i64 [ %110, %105 ], [ %114, %111 ]
  %132 = inttoptr i64 %131 to %"struct.WTF::KeyValuePair.201"*
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %132, i64 0, i32 1, i32 0
  %134 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %133, align 8
  %135 = icmp eq %"class.blink::SecurityOrigin"* %134, null
  br i1 %135, label %143, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %134, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %137) #10
  %138 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %134) #10
  %142 = bitcast %"class.blink::SecurityOrigin"* %134 to i8*
  tail call void @free(i8* %142) #10
  br label %143

143:                                              ; preds = %130, %136, %141
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %132, i64 0, i32 0
  %145 = load i32, i32* %63, align 8
  store i32 %145, i32* %144, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %132, i64 0, i32 1
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %59, i64 %62, i32 1
  %148 = getelementptr inbounds %class.scoped_refptr.187, %class.scoped_refptr.187* %147, i64 0, i32 0
  %149 = bitcast %class.scoped_refptr.187* %147 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %class.scoped_refptr.187* %146 to i64*
  store i64 %150, i64* %151, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %148, align 8
  %152 = load %"struct.WTF::KeyValuePair.201"*, %"struct.WTF::KeyValuePair.201"** %9, align 8
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %152, i64 %62
  %154 = icmp eq %"struct.WTF::KeyValuePair.201"* %153, %3
  %155 = select i1 %154, %"struct.WTF::KeyValuePair.201"* %132, %"struct.WTF::KeyValuePair.201"* %60
  %156 = load i32, i32* %6, align 8
  %157 = ptrtoint %"struct.WTF::KeyValuePair.201"* %152 to i64
  br label %158

158:                                              ; preds = %56, %143
  %159 = phi i64 [ %57, %56 ], [ %157, %143 ]
  %160 = phi i32 [ %58, %56 ], [ %156, %143 ]
  %161 = phi %"struct.WTF::KeyValuePair.201"* [ %59, %56 ], [ %152, %143 ]
  %162 = phi %"struct.WTF::KeyValuePair.201"* [ %60, %56 ], [ %155, %143 ]
  %163 = add i32 %61, 1
  %164 = icmp eq i32 %163, %160
  br i1 %164, label %18, label %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.198"*, %"struct.WTF::KeyValuePair.201"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  %5 = icmp eq %"class.blink::SecurityOrigin"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %4) #10
  %12 = bitcast %"class.blink::SecurityOrigin"* %4 to i8*
  tail call void @free(i8* %12) #10
  br label %13

13:                                               ; preds = %2, %6, %11
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.201", %"struct.WTF::KeyValuePair.201"* %1, i64 0, i32 0
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = getelementptr inbounds %"class.WTF::HashTable.198", %"class.WTF::HashTable.198"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %24, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %13
  %31 = lshr i32 %26, 1
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 4
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 %33, i1 false) #10
  %35 = bitcast i8* %34 to %"struct.WTF::KeyValuePair.201"*
  %36 = tail call %"struct.WTF::KeyValuePair.201"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink14SecurityOriginEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.198"* %0, %"struct.WTF::KeyValuePair.201"* %35, i32 %31, %"struct.WTF::KeyValuePair.201"* null) #10
  br label %37

37:                                               ; preds = %30, %13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERiRKS2_EENS_18HashTableAddResultISD_S3_EEOT0_OT1_(%"class.WTF::HashTable.204"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.207"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* null)
  %9 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.207"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.207"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.207"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %135, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.207"* %52, %"struct.WTF::KeyValuePair.207"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.207"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.207"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.207"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #10
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %92
  tail call void @llvm.trap() #10
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %102, %87, %79
  %105 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %106 = bitcast %"class.WTF::String"* %83 to i64*
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #10
  br label %123

123:                                              ; preds = %104, %119, %122
  %124 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = add i32 %128, %126
  %130 = shl i32 %129, 1
  %131 = load i32, i32* %12, align 8
  %132 = icmp ult i32 %130, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %123
  %134 = tail call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* %81)
  br label %135

135:                                              ; preds = %50, %123, %133
  %136 = phi i8 [ 1, %123 ], [ 1, %133 ], [ 0, %50 ]
  %137 = phi %"struct.WTF::KeyValuePair.207"* [ %81, %123 ], [ %134, %133 ], [ %52, %50 ]
  %138 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } undef, %"struct.WTF::KeyValuePair.207"* %137, 0
  %139 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %138, i8 %136, 1
  ret { %"struct.WTF::KeyValuePair.207"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.204"*, %"struct.WTF::KeyValuePair.207"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNS_6StringEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.207"*
  %37 = call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS3_jSE_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* %36, i32 %32, %"struct.WTF::KeyValuePair.207"* %1) #10
  ret %"struct.WTF::KeyValuePair.207"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS8_IS2_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS3_jSE_(%"class.WTF::HashTable.204"*, %"struct.WTF::KeyValuePair.207"*, i32, %"struct.WTF::KeyValuePair.207"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.207"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.204"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.207"* %16 to i64
  br label %62

18:                                               ; preds = %170
  %19 = bitcast %"class.WTF::HashTable.204"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %171, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.207"* [ null, %10 ], [ %174, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %172, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.207"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #10
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.207"* %23

62:                                               ; preds = %13, %170
  %63 = phi i64 [ %17, %13 ], [ %171, %170 ]
  %64 = phi i32 [ %7, %13 ], [ %172, %170 ]
  %65 = phi %"struct.WTF::KeyValuePair.207"* [ %16, %13 ], [ %173, %170 ]
  %66 = phi %"struct.WTF::KeyValuePair.207"* [ null, %13 ], [ %174, %170 ]
  %67 = phi i32 [ 0, %13 ], [ %175, %170 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, 1
  %72 = icmp ult i32 %71, 2
  br i1 %72, label %170, label %73

73:                                               ; preds = %62
  %74 = shl i32 %70, 15
  %75 = xor i32 %74, -1
  %76 = add i32 %70, %75
  %77 = lshr i32 %76, 10
  %78 = xor i32 %77, %76
  %79 = mul i32 %78, 9
  %80 = lshr i32 %79, 6
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 11
  %83 = xor i32 %82, -1
  %84 = add i32 %81, %83
  %85 = lshr i32 %84, 16
  %86 = xor i32 %85, %84
  %87 = and i32 %86, %14
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %1, i64 %88
  %90 = ptrtoint %"struct.WTF::KeyValuePair.207"* %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %89, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %111, label %94

94:                                               ; preds = %73
  %95 = xor i32 %86, -1
  %96 = lshr i32 %84, 23
  %97 = add i32 %96, %95
  %98 = shl i32 %97, 12
  %99 = xor i32 %98, %97
  %100 = lshr i32 %99, 7
  %101 = xor i32 %100, %99
  %102 = shl i32 %101, 2
  %103 = xor i32 %102, %101
  %104 = lshr i32 %103, 20
  %105 = xor i32 %104, %103
  %106 = or i32 %105, 1
  %107 = zext i32 %106 to i64
  br label %117

108:                                              ; preds = %124
  %109 = ptrtoint %"struct.WTF::KeyValuePair.207"* %131 to i64
  %110 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair.207"*
  br label %111

111:                                              ; preds = %108, %73
  %112 = phi i64 [ %109, %108 ], [ %90, %73 ]
  %113 = phi %"struct.WTF::KeyValuePair.207"* [ %110, %108 ], [ null, %73 ]
  %114 = icmp eq %"struct.WTF::KeyValuePair.207"* %113, null
  %115 = ptrtoint %"struct.WTF::KeyValuePair.207"* %113 to i64
  %116 = select i1 %114, i64 %112, i64 %115
  br label %136

117:                                              ; preds = %124, %94
  %118 = phi i64 [ 0, %94 ], [ %126, %124 ]
  %119 = phi i32 [ %92, %94 ], [ %134, %124 ]
  %120 = phi i64 [ %90, %94 ], [ %132, %124 ]
  %121 = phi i64 [ %88, %94 ], [ %130, %124 ]
  %122 = phi i64 [ 0, %94 ], [ %128, %124 ]
  %123 = icmp eq i32 %119, %70
  br i1 %123, label %136, label %124

124:                                              ; preds = %117
  %125 = icmp eq i32 %119, -1
  %126 = select i1 %125, i64 %120, i64 %118
  %127 = icmp eq i64 %122, 0
  %128 = select i1 %127, i64 %107, i64 %122
  %129 = add i64 %128, %121
  %130 = and i64 %129, %15
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %1, i64 %130
  %132 = ptrtoint %"struct.WTF::KeyValuePair.207"* %131 to i64
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %131, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %108, label %117

136:                                              ; preds = %117, %111
  %137 = phi i64 [ %116, %111 ], [ %120, %117 ]
  %138 = inttoptr i64 %137 to %"struct.WTF::KeyValuePair.207"*
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %138, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #10
  br label %155

155:                                              ; preds = %136, %151, %154
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %138, i64 0, i32 0
  %157 = load i32, i32* %69, align 8
  store i32 %157, i32* %156, align 8
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %138, i64 0, i32 1
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %65, i64 %68, i32 1
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = bitcast %"class.WTF::String"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.WTF::String"* %158 to i64*
  store i64 %162, i64* %163, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %160, align 8
  %164 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %9, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %164, i64 %68
  %166 = icmp eq %"struct.WTF::KeyValuePair.207"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair.207"* %138, %"struct.WTF::KeyValuePair.207"* %66
  %168 = load i32, i32* %6, align 8
  %169 = ptrtoint %"struct.WTF::KeyValuePair.207"* %164 to i64
  br label %170

170:                                              ; preds = %62, %155
  %171 = phi i64 [ %63, %62 ], [ %169, %155 ]
  %172 = phi i32 [ %64, %62 ], [ %168, %155 ]
  %173 = phi %"struct.WTF::KeyValuePair.207"* [ %65, %62 ], [ %164, %155 ]
  %174 = phi %"struct.WTF::KeyValuePair.207"* [ %66, %62 ], [ %167, %155 ]
  %175 = add i32 %67, 1
  %176 = icmp eq i32 %175, %172
  br i1 %176, label %18, label %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF14ThreadSpecificIiE7DestroyEPv(i8*) #4 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #10
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #10
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberIKNS2_15ScriptWrappableEEEEENS1_INS2_23TraceWrapperV8ReferenceIN2v86ObjectEEEEEE10EmptyValueEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberIKNS2_15ScriptWrappableEEEEENS1_INS2_23TraceWrapperV8ReferenceIN2v86ObjectEEEEEE10EmptyValueEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF17GenericHashTraitsIN5blink23TraceWrapperV8ReferenceIN2v86ObjectEEEE10EmptyValueEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF17GenericHashTraitsIN5blink23TraceWrapperV8ReferenceIN2v86ObjectEEEE10EmptyValueEv"}
