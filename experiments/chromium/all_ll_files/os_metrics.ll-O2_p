; ModuleID = '../../services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics.cc'
source_filename = "../../services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.memory_instrumentation::mojom::RawOSMemDump" = type { i32, i32, i8, %"class.mojo::StructPtr", %"class.std::__1::vector", %"class.std::__1::vector.16" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.memory_instrumentation::mojom::PlatformPrivateFootprint"* }
%"class.memory_instrumentation::mojom::PlatformPrivateFootprint" = type { i64, i64, i64, i64, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.1"*, %"class.mojo::StructPtr.1"*, %"class.std::__1::__compressed_pair.11" }
%"class.mojo::StructPtr.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.memory_instrumentation::mojom::VmRegion"* }
%"class.memory_instrumentation::mojom::VmRegion" = type { i64, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i64, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.mojo::StructPtr.1"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { i8*, i8*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22memory_instrumentation9OSMetrics21FillProcessMemoryMapsEiNS_5mojom15MemoryMapOptionEPNS1_12RawOSMemDumpE(i32, i32, %"class.memory_instrumentation::mojom::RawOSMemDump"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  call void @_ZN22memory_instrumentation9OSMetrics20GetProcessMemoryMapsEi(%"class.std::__1::vector"* nonnull sret %4, i32 %0) #5
  %6 = bitcast %"class.std::__1::vector"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %9 = bitcast %"class.mojo::StructPtr.1"** %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  %11 = inttoptr i64 %7 to %"class.mojo::StructPtr.1"*
  %12 = extractelement <2 x i64> %10, i32 0
  %13 = inttoptr i64 %12 to %"class.mojo::StructPtr.1"*
  %14 = icmp eq %"class.mojo::StructPtr.1"* %11, %13
  br i1 %14, label %45, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.memory_instrumentation::mojom::RawOSMemDump", %"class.memory_instrumentation::mojom::RawOSMemDump"* %2, i64 0, i32 4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.mojo::StructPtr.1"*, %"class.mojo::StructPtr.1"** %17, align 8
  %19 = icmp eq %"class.mojo::StructPtr.1"* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.mojo::StructPtr.1"* %18 to i8*
  %22 = getelementptr inbounds %"class.memory_instrumentation::mojom::RawOSMemDump", %"class.memory_instrumentation::mojom::RawOSMemDump"* %2, i64 0, i32 4, i32 0, i32 1
  %23 = load %"class.mojo::StructPtr.1"*, %"class.mojo::StructPtr.1"** %22, align 8
  %24 = icmp eq %"class.mojo::StructPtr.1"* %23, %18
  br i1 %24, label %38, label %25

25:                                               ; preds = %20, %33
  %26 = phi %"class.mojo::StructPtr.1"* [ %27, %33 ], [ %23, %20 ]
  %27 = getelementptr inbounds %"class.mojo::StructPtr.1", %"class.mojo::StructPtr.1"* %26, i64 -1
  %28 = getelementptr inbounds %"class.mojo::StructPtr.1", %"class.mojo::StructPtr.1"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.memory_instrumentation::mojom::VmRegion"*, %"class.memory_instrumentation::mojom::VmRegion"** %28, align 8
  store %"class.memory_instrumentation::mojom::VmRegion"* null, %"class.memory_instrumentation::mojom::VmRegion"** %28, align 8
  %30 = icmp eq %"class.memory_instrumentation::mojom::VmRegion"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  call void @_ZN22memory_instrumentation5mojom8VmRegionD1Ev(%"class.memory_instrumentation::mojom::VmRegion"* nonnull %29) #5
  %32 = bitcast %"class.memory_instrumentation::mojom::VmRegion"* %29 to i8*
  call void @_ZdlPv(i8* %32) #6
  br label %33

33:                                               ; preds = %31, %25
  %34 = icmp eq %"class.mojo::StructPtr.1"* %27, %18
  br i1 %34, label %35, label %25

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector"* %16 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %20
  %39 = phi i8* [ %37, %35 ], [ %21, %20 ]
  store %"class.mojo::StructPtr.1"* %18, %"class.mojo::StructPtr.1"** %22, align 8
  call void @_ZdlPv(i8* %39) #6
  %40 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #5
  br label %41

41:                                               ; preds = %38, %15
  %42 = bitcast %"class.std::__1::vector"* %16 to i64*
  store i64 %7, i64* %42, align 8
  %43 = getelementptr inbounds %"class.memory_instrumentation::mojom::RawOSMemDump", %"class.memory_instrumentation::mojom::RawOSMemDump"* %2, i64 0, i32 4, i32 0, i32 1
  %44 = bitcast %"class.mojo::StructPtr.1"** %43 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %44, align 8
  br label %49

45:                                               ; preds = %3
  %46 = icmp eq i64 %7, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = inttoptr i64 %7 to i8*
  call void @_ZdlPv(i8* %48) #6
  br label %49

49:                                               ; preds = %41, %45, %47
  %50 = phi i1 [ true, %41 ], [ false, %45 ], [ false, %47 ]
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN22memory_instrumentation9OSMetrics20GetProcessMemoryMapsEi(%"class.std::__1::vector"* sret, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN22memory_instrumentation5mojom8VmRegionD1Ev(%"class.memory_instrumentation::mojom::VmRegion"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
