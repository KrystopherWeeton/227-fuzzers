; ModuleID = '../../components/omnibox/browser/builtin_provider.cc'
source_filename = "../../components/omnibox/browser/builtin_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.BuiltinProvider = type { %class.AutocompleteProvider, %class.AutocompleteProviderClient*, %"class.std::__1::vector.2" }
%class.AutocompleteProvider = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i64, %"class.std::__1::vector", i8, i32 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.AutocompleteMatch*, %struct.AutocompleteMatch*, %"class.std::__1::__compressed_pair" }
%struct.AutocompleteMatch = type { %class.AutocompleteProvider*, i32, i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %class.GURL, %class.GURL, %"class.std::__1::basic_string.21", %class.GURL, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.absl::optional", i8, [7 x i8], %"class.absl::optional.41", i32, i32, i8, %"class.base::internal::flat_tree", %"class.std::__1::unique_ptr.65", %"class.std::__1::basic_string", i8, %class.scoped_refptr, i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::map", %"class.std::__1::vector", %"class.std::__1::vector.90", %"class.std::__1::vector.119" }
%struct.SplitAutocompletion = type { %"class.std::__1::basic_string", %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.16" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Range"* }
%"class.std::__1::basic_string.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.21", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GURL* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.35" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [7 x i8], %union.anon.45 }
%union.anon.45 = type { %class.SuggestionAnswer }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.46", i32, %"class.absl::optional.53", %"class.absl::optional.53", %class.GURL }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.48" }
%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"class.SuggestionAnswer::TextField" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { i32*, i32*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i32* }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.AutocompleteMatch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.scoped_refptr = type { %class.OmniboxAction* }
%class.OmniboxAction = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.TemplateURLRef::SearchTermsArgs"* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.21", i32, i64, %"class.std::__1::basic_string.21", i32, %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", i8, %"class.std::__1::basic_string.21", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.21", i64, i32, i8, %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64 }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.query_tiles::Tile"*, %"struct.query_tiles::Tile"*, %"class.std::__1::__compressed_pair.114" }
%"struct.query_tiles::Tile" = type { %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::vector.92", %"class.std::__1::vector.99", %"class.std::__1::vector.107" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.query_tiles::ImageMetadata"*, %"struct.query_tiles::ImageMetadata"*, %"class.std::__1::__compressed_pair.94" }
%"struct.query_tiles::ImageMetadata" = type { %class.GURL }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.query_tiles::ImageMetadata"* }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::unique_ptr.101" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::unique_ptr.101"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.std::__1::basic_string.21"*, %"class.std::__1::basic_string.21"*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::basic_string.21"* }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.query_tiles::Tile"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.AutocompleteMatch::NavsuggestTile"*, %"struct.AutocompleteMatch::NavsuggestTile"*, %"class.std::__1::__compressed_pair.121" }
%"struct.AutocompleteMatch::NavsuggestTile" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.AutocompleteMatch::NavsuggestTile"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%class.AutocompleteProviderClient = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.21", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.2", %"class.absl::optional.126", i8, i8, i32 }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.std::__1::basic_string.21" }
%"class.std::__1::allocator.28" = type { i8 }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair.134" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %struct.TermMatch* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.25 }
%struct.anon.25 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator.7" = type { i8 }
%"class.std::__1::vector.140" = type opaque

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__16vectorIN17AutocompleteMatch21ACMatchClassificationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@_ZN15BuiltinProvider10kRelevanceE = hidden local_unnamed_addr constant i32 860, align 4
@_ZTV15BuiltinProvider = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.BuiltinProvider*, %class.AutocompleteInput*, i1)* @_ZN15BuiltinProvider5StartERK17AutocompleteInputb to i8*), i8* bitcast (void (%class.AutocompleteProvider*, i1, i1)* @_ZN20AutocompleteProvider4StopEbb to i8*), i8* bitcast (void (%class.AutocompleteProvider*, %struct.AutocompleteMatch*)* @_ZN20AutocompleteProvider11DeleteMatchERK17AutocompleteMatch to i8*), i8* bitcast (void (%class.AutocompleteProvider*, %"class.std::__1::vector.140"*)* @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.AutocompleteProvider*)* @_ZN20AutocompleteProvider12ResetSessionEv to i8*), i8* bitcast (i64 (%class.AutocompleteProvider*)* @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv to i8*), i8* bitcast (void (%class.BuiltinProvider*)* @_ZN15BuiltinProviderD2Ev to i8*), i8* bitcast (void (%class.BuiltinProvider*)* @_ZN15BuiltinProviderD0Ev to i8*)] }, align 8
@_ZN3url12kAboutSchemeE = external constant [0 x i8], align 1
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i16] [i16 47, i16 0], align 2
@_ZN3url14kAboutBlankURLE = external constant [0 x i8], align 1

@_ZN15BuiltinProviderC1EP26AutocompleteProviderClient = hidden unnamed_addr alias void (%class.BuiltinProvider*, %class.AutocompleteProviderClient*), void (%class.BuiltinProvider*, %class.AutocompleteProviderClient*)* @_ZN15BuiltinProviderC2EP26AutocompleteProviderClient
@_ZN15BuiltinProviderD1Ev = hidden unnamed_addr alias void (%class.BuiltinProvider*), void (%class.BuiltinProvider*)* @_ZN15BuiltinProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15BuiltinProviderC2EP26AutocompleteProviderClient(%class.BuiltinProvider*, %class.AutocompleteProviderClient*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.2", align 16
  %4 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderC2ENS_4TypeE(%class.AutocompleteProvider* %4, i32 2) #10
  %5 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15BuiltinProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 1
  store %class.AutocompleteProviderClient* %1, %class.AutocompleteProviderClient** %6, align 8
  %7 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector.2"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = bitcast %"class.std::__1::vector.2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast %class.AutocompleteProviderClient* %1 to void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)***
  %11 = load void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)**, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)** %11, i64 25
  %13 = load void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)** %12, align 8
  call void %13(%"class.std::__1::vector.2"* nonnull sret %3, %class.AutocompleteProviderClient* %1) #10
  %14 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %7, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %19 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 1
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, %15
  br i1 %21, label %37, label %22

22:                                               ; preds = %17, %32
  %23 = phi %"class.std::__1::basic_string"* [ %24, %32 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %29, %22
  %33 = icmp eq %"class.std::__1::basic_string"* %24, %15
  br i1 %33, label %34, label %22

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.2"* %7 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %17
  %38 = phi i8* [ %36, %34 ], [ %18, %17 ]
  store %"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"** %19, align 8
  call void @_ZdlPv(i8* %38) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  br label %39

39:                                               ; preds = %37, %2
  %40 = bitcast %"class.std::__1::vector.2"* %3 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 16
  %42 = bitcast %"class.std::__1::vector.2"* %7 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"** %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  store i64 %45, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret void
}

declare void @_ZN20AutocompleteProviderC2ENS_4TypeE(%class.AutocompleteProvider*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15BuiltinProvider5StartERK17AutocompleteInputb(%class.BuiltinProvider*, %class.AutocompleteInput* nocapture readonly dereferenceable(512), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator.28", align 1
  %5 = alloca %"class.std::__1::allocator.28", align 1
  %6 = alloca %"class.std::__1::allocator.28", align 1
  %7 = alloca %"class.std::__1::allocator.28", align 1
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.21", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::vector.132", align 8
  %17 = alloca %"class.std::__1::vector.33", align 8
  %18 = alloca %"class.std::__1::vector.132", align 8
  %19 = alloca %"class.std::__1::vector.2", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %class.GURL, align 8
  %23 = alloca %"class.std::__1::basic_string.21", align 8
  %24 = alloca %"class.std::__1::basic_string.21", align 8
  %25 = alloca %"class.std::__1::basic_string.21", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string.21", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string.21", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::vector.33", align 8
  %33 = alloca %"class.std::__1::vector.132", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.std::__1::basic_string.21", align 8
  %37 = alloca %"class.std::__1::basic_string.21", align 8
  %38 = alloca %"class.std::__1::basic_string.21", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::vector.33", align 8
  %41 = alloca %"class.std::__1::vector.132", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca [15 x i8], align 8
  %45 = alloca i64, align 8
  %46 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %48 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %47, align 8
  %49 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %50 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %49, align 8
  %51 = icmp eq %struct.AutocompleteMatch* %50, %48
  br i1 %51, label %56, label %52

52:                                               ; preds = %3, %52
  %53 = phi %struct.AutocompleteMatch* [ %54, %52 ], [ %50, %3 ]
  %54 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %53, i64 -1
  tail call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %54) #10
  %55 = icmp eq %struct.AutocompleteMatch* %54, %48
  br i1 %55, label %56, label %52

56:                                               ; preds = %52, %3
  store %struct.AutocompleteMatch* %48, %struct.AutocompleteMatch** %49, align 8
  %57 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 15
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %1719

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 5
  %62 = load i32, i32* %61, align 4
  switch i32 %62, label %63 [
    i32 0, label %1719
    i32 4, label %1719
  ]

63:                                               ; preds = %60
  %64 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #12
  %65 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #10
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %70 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %70) #10
  %71 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %72 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i64 %72) #10
  %73 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1, !noalias !2
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i16*, i16** %77, align 8, !noalias !2
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !2
  %81 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %82 = zext i8 %75 to i64
  %83 = select i1 %76, i16* %78, i16* %81
  %84 = select i1 %76, i64 %80, i64 %82
  %85 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  %87 = load i8, i8* %86, align 1, !noalias !2
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %63
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = load i64, i64* %90, align 8, !noalias !2
  %92 = and i64 %91, 9223372036854775807
  %93 = add nsw i64 %92, -1
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !noalias !2
  br label %98

96:                                               ; preds = %63
  %97 = zext i8 %87 to i64
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i64 [ %93, %89 ], [ 10, %96 ]
  %100 = phi i64 [ %95, %89 ], [ %97, %96 ]
  %101 = sub i64 %99, %100
  %102 = icmp ult i64 %101, %84
  br i1 %102, label %264, label %103

103:                                              ; preds = %98
  %104 = icmp eq i64 %84, 0
  br i1 %104, label %267, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i16*, i16** %106, align 8, !noalias !2
  %108 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %109 = select i1 %88, i16* %107, i16* %108
  %110 = getelementptr inbounds i16, i16* %109, i64 %100
  %111 = icmp ult i64 %84, 16
  br i1 %111, label %201, label %112

112:                                              ; preds = %105
  %113 = add i64 %84, %100
  %114 = getelementptr i16, i16* %109, i64 %113
  %115 = getelementptr i16, i16* %83, i64 %84
  %116 = icmp ult i16* %110, %115
  %117 = icmp ult i16* %83, %114
  %118 = and i1 %116, %117
  br i1 %118, label %201, label %119

119:                                              ; preds = %112
  %120 = and i64 %84, -16
  %121 = sub i64 %84, %120
  %122 = getelementptr i16, i16* %83, i64 %120
  %123 = getelementptr i16, i16* %110, i64 %120
  %124 = add i64 %120, -16
  %125 = lshr exact i64 %124, 4
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 3
  %128 = icmp ult i64 %124, 48
  br i1 %128, label %180, label %129

129:                                              ; preds = %119
  %130 = sub nsw i64 %126, %127
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i64 [ 0, %129 ], [ %177, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %178, %131 ]
  %134 = getelementptr i16, i16* %83, i64 %132
  %135 = getelementptr i16, i16* %110, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !5, !noalias !2
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !8, !noalias !10
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !8, !noalias !10
  %144 = or i64 %132, 16
  %145 = getelementptr i16, i16* %83, i64 %144
  %146 = getelementptr i16, i16* %110, i64 %144
  %147 = bitcast i16* %145 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !5, !noalias !2
  %149 = getelementptr i16, i16* %145, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !5, !noalias !2
  %152 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %152, align 2, !alias.scope !8, !noalias !10
  %153 = getelementptr i16, i16* %146, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %154, align 2, !alias.scope !8, !noalias !10
  %155 = or i64 %132, 32
  %156 = getelementptr i16, i16* %83, i64 %155
  %157 = getelementptr i16, i16* %110, i64 %155
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !5, !noalias !2
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !5, !noalias !2
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !8, !noalias !10
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !8, !noalias !10
  %166 = or i64 %132, 48
  %167 = getelementptr i16, i16* %83, i64 %166
  %168 = getelementptr i16, i16* %110, i64 %166
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !5, !noalias !2
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !5, !noalias !2
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !8, !noalias !10
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !8, !noalias !10
  %177 = add i64 %132, 64
  %178 = add i64 %133, -4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %131, !llvm.loop !11

180:                                              ; preds = %131, %119
  %181 = phi i64 [ 0, %119 ], [ %177, %131 ]
  %182 = icmp eq i64 %127, 0
  br i1 %182, label %199, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %196, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %197, %183 ], [ %127, %180 ]
  %186 = getelementptr i16, i16* %83, i64 %184
  %187 = getelementptr i16, i16* %110, i64 %184
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !5, !noalias !2
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !5, !noalias !2
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !8, !noalias !10
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !8, !noalias !10
  %196 = add i64 %184, 16
  %197 = add i64 %185, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %183, !llvm.loop !13

199:                                              ; preds = %183, %180
  %200 = icmp eq i64 %84, %120
  br i1 %200, label %254, label %201

201:                                              ; preds = %199, %112, %105
  %202 = phi i64 [ %84, %112 ], [ %84, %105 ], [ %121, %199 ]
  %203 = phi i16* [ %83, %112 ], [ %83, %105 ], [ %122, %199 ]
  %204 = phi i16* [ %110, %112 ], [ %110, %105 ], [ %123, %199 ]
  %205 = add i64 %202, -1
  %206 = and i64 %202, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %201, %208
  %209 = phi i64 [ %214, %208 ], [ %202, %201 ]
  %210 = phi i16* [ %216, %208 ], [ %203, %201 ]
  %211 = phi i16* [ %215, %208 ], [ %204, %201 ]
  %212 = phi i64 [ %217, %208 ], [ %206, %201 ]
  %213 = load i16, i16* %210, align 2, !noalias !2
  store i16 %213, i16* %211, align 2, !noalias !2
  %214 = add i64 %209, -1
  %215 = getelementptr inbounds i16, i16* %211, i64 1
  %216 = getelementptr inbounds i16, i16* %210, i64 1
  %217 = add i64 %212, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !15

219:                                              ; preds = %208, %201
  %220 = phi i64 [ %202, %201 ], [ %214, %208 ]
  %221 = phi i16* [ %203, %201 ], [ %216, %208 ]
  %222 = phi i16* [ %204, %201 ], [ %215, %208 ]
  %223 = icmp ult i64 %205, 7
  br i1 %223, label %254, label %224

224:                                              ; preds = %219, %224
  %225 = phi i64 [ %250, %224 ], [ %220, %219 ]
  %226 = phi i16* [ %252, %224 ], [ %221, %219 ]
  %227 = phi i16* [ %251, %224 ], [ %222, %219 ]
  %228 = load i16, i16* %226, align 2, !noalias !2
  store i16 %228, i16* %227, align 2, !noalias !2
  %229 = getelementptr inbounds i16, i16* %227, i64 1
  %230 = getelementptr inbounds i16, i16* %226, i64 1
  %231 = load i16, i16* %230, align 2, !noalias !2
  store i16 %231, i16* %229, align 2, !noalias !2
  %232 = getelementptr inbounds i16, i16* %227, i64 2
  %233 = getelementptr inbounds i16, i16* %226, i64 2
  %234 = load i16, i16* %233, align 2, !noalias !2
  store i16 %234, i16* %232, align 2, !noalias !2
  %235 = getelementptr inbounds i16, i16* %227, i64 3
  %236 = getelementptr inbounds i16, i16* %226, i64 3
  %237 = load i16, i16* %236, align 2, !noalias !2
  store i16 %237, i16* %235, align 2, !noalias !2
  %238 = getelementptr inbounds i16, i16* %227, i64 4
  %239 = getelementptr inbounds i16, i16* %226, i64 4
  %240 = load i16, i16* %239, align 2, !noalias !2
  store i16 %240, i16* %238, align 2, !noalias !2
  %241 = getelementptr inbounds i16, i16* %227, i64 5
  %242 = getelementptr inbounds i16, i16* %226, i64 5
  %243 = load i16, i16* %242, align 2, !noalias !2
  store i16 %243, i16* %241, align 2, !noalias !2
  %244 = getelementptr inbounds i16, i16* %227, i64 6
  %245 = getelementptr inbounds i16, i16* %226, i64 6
  %246 = load i16, i16* %245, align 2, !noalias !2
  store i16 %246, i16* %244, align 2, !noalias !2
  %247 = getelementptr inbounds i16, i16* %227, i64 7
  %248 = getelementptr inbounds i16, i16* %226, i64 7
  %249 = load i16, i16* %248, align 2, !noalias !2
  store i16 %249, i16* %247, align 2, !noalias !2
  %250 = add i64 %225, -8
  %251 = getelementptr inbounds i16, i16* %227, i64 8
  %252 = getelementptr inbounds i16, i16* %226, i64 8
  %253 = icmp eq i64 %250, 0
  br i1 %253, label %254, label %224, !llvm.loop !16

254:                                              ; preds = %219, %224, %199
  %255 = add i64 %100, %84
  %256 = load i8, i8* %86, align 1, !noalias !2
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %255, i64* %259, align 8, !noalias !2
  br label %262

260:                                              ; preds = %254
  %261 = trunc i64 %255 to i8
  store i8 %261, i8* %86, align 1, !noalias !2
  br label %262

262:                                              ; preds = %260, %258
  %263 = getelementptr inbounds i16, i16* %109, i64 %255
  store i16 0, i16* %263, align 2, !noalias !2
  br label %267

264:                                              ; preds = %98
  %265 = add i64 %100, %84
  %266 = sub i64 %265, %99
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %9, i64 %99, i64 %266, i64 %100, i64 %100, i64 0, i64 %84, i16* %83) #10, !noalias !2
  br label %267

267:                                              ; preds = %103, %262, %264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %68, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #10, !noalias !2
  %268 = load i8, i8* %74, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  br label %279

271:                                              ; preds = %267
  %272 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %273 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %273) #11
  %274 = load i8, i8* %86, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %271
  %277 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %278 = load i8*, i8** %277, align 8
  call void @_ZdlPv(i8* %278) #11
  br label %279

279:                                              ; preds = %270, %271, %276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  %280 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #10
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %283 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %284 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %284, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %283) #10
  %285 = bitcast %"class.std::__1::basic_string.21"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #10
  %286 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 1
  %287 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %286, align 8
  %288 = bitcast %class.AutocompleteProviderClient* %287 to void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)***
  %289 = load void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)**, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)** %289, i64 24
  %291 = load void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)** %290, align 8
  call void %291(%"class.std::__1::basic_string.21"* nonnull sret %13, %class.AutocompleteProviderClient* %287) #10
  %292 = bitcast %"class.std::__1::basic_string.21"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  %296 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = select i1 %295, i8* %297, i8* %285
  %299 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = zext i8 %294 to i64
  %302 = select i1 %295, i64 %300, i64 %301
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i8* %298, i64 %302) #10
  %303 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #10
  %304 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %14, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i64 %304) #10
  %305 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %305, i64 0, i32 1, i32 1
  %307 = load i8, i8* %306, align 1, !noalias !17
  %308 = icmp slt i8 %307, 0
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load i16*, i16** %309, align 8, !noalias !17
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %312 = load i64, i64* %311, align 8, !noalias !17
  %313 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %314 = zext i8 %307 to i64
  %315 = select i1 %308, i16* %310, i16* %313
  %316 = select i1 %308, i64 %312, i64 %314
  %317 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %317, i64 0, i32 1, i32 1
  %319 = load i8, i8* %318, align 1, !noalias !17
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %328

321:                                              ; preds = %279
  %322 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %323 = load i64, i64* %322, align 8, !noalias !17
  %324 = and i64 %323, 9223372036854775807
  %325 = add nsw i64 %324, -1
  %326 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %327 = load i64, i64* %326, align 8, !noalias !17
  br label %330

328:                                              ; preds = %279
  %329 = zext i8 %319 to i64
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i64 [ %325, %321 ], [ 10, %328 ]
  %332 = phi i64 [ %327, %321 ], [ %329, %328 ]
  %333 = sub i64 %331, %332
  %334 = icmp ult i64 %333, %316
  br i1 %334, label %496, label %335

335:                                              ; preds = %330
  %336 = icmp eq i64 %316, 0
  br i1 %336, label %499, label %337

337:                                              ; preds = %335
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = load i16*, i16** %338, align 8, !noalias !17
  %340 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %341 = select i1 %320, i16* %339, i16* %340
  %342 = getelementptr inbounds i16, i16* %341, i64 %332
  %343 = icmp ult i64 %316, 16
  br i1 %343, label %433, label %344

344:                                              ; preds = %337
  %345 = add i64 %316, %332
  %346 = getelementptr i16, i16* %341, i64 %345
  %347 = getelementptr i16, i16* %315, i64 %316
  %348 = icmp ult i16* %342, %347
  %349 = icmp ult i16* %315, %346
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %344
  %352 = and i64 %316, -16
  %353 = sub i64 %316, %352
  %354 = getelementptr i16, i16* %315, i64 %352
  %355 = getelementptr i16, i16* %342, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %315, i64 %364
  %367 = getelementptr i16, i16* %342, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !20, !noalias !17
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !20, !noalias !17
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !23, !noalias !25
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !23, !noalias !25
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %315, i64 %376
  %378 = getelementptr i16, i16* %342, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !20, !noalias !17
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !20, !noalias !17
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !23, !noalias !25
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !23, !noalias !25
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %315, i64 %387
  %389 = getelementptr i16, i16* %342, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !20, !noalias !17
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !20, !noalias !17
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !23, !noalias !25
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !23, !noalias !25
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %315, i64 %398
  %400 = getelementptr i16, i16* %342, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !20, !noalias !17
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !20, !noalias !17
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !23, !noalias !25
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !23, !noalias !25
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !26

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %315, i64 %416
  %419 = getelementptr i16, i16* %342, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !20, !noalias !17
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !20, !noalias !17
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !23, !noalias !25
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !23, !noalias !25
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !27

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %316, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %344, %337
  %434 = phi i64 [ %316, %344 ], [ %316, %337 ], [ %353, %431 ]
  %435 = phi i16* [ %315, %344 ], [ %315, %337 ], [ %354, %431 ]
  %436 = phi i16* [ %342, %344 ], [ %342, %337 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2, !noalias !17
  store i16 %445, i16* %443, align 2, !noalias !17
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !28

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2, !noalias !17
  store i16 %460, i16* %459, align 2, !noalias !17
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2, !noalias !17
  store i16 %463, i16* %461, align 2, !noalias !17
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2, !noalias !17
  store i16 %466, i16* %464, align 2, !noalias !17
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2, !noalias !17
  store i16 %469, i16* %467, align 2, !noalias !17
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2, !noalias !17
  store i16 %472, i16* %470, align 2, !noalias !17
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2, !noalias !17
  store i16 %475, i16* %473, align 2, !noalias !17
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2, !noalias !17
  store i16 %478, i16* %476, align 2, !noalias !17
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2, !noalias !17
  store i16 %481, i16* %479, align 2, !noalias !17
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !29

486:                                              ; preds = %451, %456, %431
  %487 = add i64 %332, %316
  %488 = load i8, i8* %318, align 1, !noalias !17
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %487, i64* %491, align 8, !noalias !17
  br label %494

492:                                              ; preds = %486
  %493 = trunc i64 %487 to i8
  store i8 %493, i8* %318, align 1, !noalias !17
  br label %494

494:                                              ; preds = %492, %490
  %495 = getelementptr inbounds i16, i16* %341, i64 %487
  store i16 0, i16* %495, align 2, !noalias !17
  br label %499

496:                                              ; preds = %330
  %497 = add i64 %332, %316
  %498 = sub i64 %497, %331
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %12, i64 %331, i64 %498, i64 %332, i64 %332, i64 0, i64 %316, i16* %315) #10, !noalias !17
  br label %499

499:                                              ; preds = %335, %494, %496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %280, i8* nonnull align 8 %283, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %283, i8 0, i64 24, i1 false) #10, !noalias !17
  %500 = load i8, i8* %306, align 1
  %501 = icmp slt i8 %500, 0
  br i1 %501, label %503, label %502

502:                                              ; preds = %499
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #10
  br label %511

503:                                              ; preds = %499
  %504 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #11
  %506 = load i8, i8* %318, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #10
  %507 = icmp slt i8 %506, 0
  br i1 %507, label %508, label %511

508:                                              ; preds = %503
  %509 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %510 = load i8*, i8** %509, align 8
  call void @_ZdlPv(i8* %510) #11
  br label %511

511:                                              ; preds = %502, %503, %508
  %512 = load i8, i8* %293, align 1
  %513 = icmp slt i8 %512, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %511
  %515 = load i8*, i8** %296, align 8
  call void @_ZdlPv(i8* %515) #11
  br label %516

516:                                              ; preds = %511, %514
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %283) #10
  %517 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %517) #10
  %518 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %520 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %521 = bitcast %class.AutocompleteInput* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %522 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %521, i64 0, i32 1, i32 1
  %523 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %523, i8 -86, i64 24, i1 false)
  %524 = load i8, i8* %522, align 1
  %525 = icmp slt i8 %524, 0
  br i1 %525, label %528, label %526

526:                                              ; preds = %516
  %527 = bitcast %class.AutocompleteInput* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %517, i8* align 8 %527, i64 24, i1 false) #10
  br label %701

528:                                              ; preds = %516
  %529 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load i16*, i16** %529, align 8
  %531 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %532 = load i64, i64* %531, align 8
  %533 = icmp ult i64 %532, 11
  br i1 %533, label %534, label %539

534:                                              ; preds = %528
  %535 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %536 = trunc i64 %532 to i8
  %537 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %538 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %537, i64 0, i32 1, i32 1
  store i8 %536, i8* %538, align 1
  br label %554

539:                                              ; preds = %528
  %540 = icmp ugt i64 %532, 9223372036854775791
  br i1 %540, label %541, label %543

541:                                              ; preds = %539
  %542 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %542) #13
  unreachable

543:                                              ; preds = %539
  %544 = add nuw nsw i64 %532, 8
  %545 = and i64 %544, -8
  %546 = icmp slt i64 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %543
  call void @abort() #13
  unreachable

548:                                              ; preds = %543
  %549 = shl i64 %545, 1
  %550 = call i8* @_Znwm(i64 %549) #11
  %551 = bitcast i8* %550 to i16*
  %552 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  store i8* %550, i8** %552, align 8
  %553 = or i64 %545, -9223372036854775808
  store i64 %553, i64* %520, align 8
  store i64 %532, i64* %519, align 8
  br label %554

554:                                              ; preds = %548, %534
  %555 = phi i16* [ %535, %534 ], [ %551, %548 ]
  %556 = add nuw nsw i64 %532, 1
  %557 = add i64 %532, 1
  %558 = icmp ult i64 %557, 16
  br i1 %558, label %648, label %559

559:                                              ; preds = %554
  %560 = add i64 %532, 1
  %561 = getelementptr i16, i16* %555, i64 %560
  %562 = getelementptr i16, i16* %530, i64 %560
  %563 = icmp ult i16* %555, %562
  %564 = icmp ult i16* %530, %561
  %565 = and i1 %563, %564
  br i1 %565, label %648, label %566

566:                                              ; preds = %559
  %567 = and i64 %557, -16
  %568 = sub i64 %556, %567
  %569 = getelementptr i16, i16* %530, i64 %567
  %570 = getelementptr i16, i16* %555, i64 %567
  %571 = add i64 %567, -16
  %572 = lshr exact i64 %571, 4
  %573 = add nuw nsw i64 %572, 1
  %574 = and i64 %573, 3
  %575 = icmp ult i64 %571, 48
  br i1 %575, label %627, label %576

576:                                              ; preds = %566
  %577 = sub nsw i64 %573, %574
  br label %578

578:                                              ; preds = %578, %576
  %579 = phi i64 [ 0, %576 ], [ %624, %578 ]
  %580 = phi i64 [ %577, %576 ], [ %625, %578 ]
  %581 = getelementptr i16, i16* %530, i64 %579
  %582 = getelementptr i16, i16* %555, i64 %579
  %583 = bitcast i16* %581 to <8 x i16>*
  %584 = load <8 x i16>, <8 x i16>* %583, align 2, !alias.scope !30
  %585 = getelementptr i16, i16* %581, i64 8
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !30
  %588 = bitcast i16* %582 to <8 x i16>*
  store <8 x i16> %584, <8 x i16>* %588, align 2, !alias.scope !33, !noalias !30
  %589 = getelementptr i16, i16* %582, i64 8
  %590 = bitcast i16* %589 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %590, align 2, !alias.scope !33, !noalias !30
  %591 = or i64 %579, 16
  %592 = getelementptr i16, i16* %530, i64 %591
  %593 = getelementptr i16, i16* %555, i64 %591
  %594 = bitcast i16* %592 to <8 x i16>*
  %595 = load <8 x i16>, <8 x i16>* %594, align 2, !alias.scope !30
  %596 = getelementptr i16, i16* %592, i64 8
  %597 = bitcast i16* %596 to <8 x i16>*
  %598 = load <8 x i16>, <8 x i16>* %597, align 2, !alias.scope !30
  %599 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %595, <8 x i16>* %599, align 2, !alias.scope !33, !noalias !30
  %600 = getelementptr i16, i16* %593, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !33, !noalias !30
  %602 = or i64 %579, 32
  %603 = getelementptr i16, i16* %530, i64 %602
  %604 = getelementptr i16, i16* %555, i64 %602
  %605 = bitcast i16* %603 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !30
  %607 = getelementptr i16, i16* %603, i64 8
  %608 = bitcast i16* %607 to <8 x i16>*
  %609 = load <8 x i16>, <8 x i16>* %608, align 2, !alias.scope !30
  %610 = bitcast i16* %604 to <8 x i16>*
  store <8 x i16> %606, <8 x i16>* %610, align 2, !alias.scope !33, !noalias !30
  %611 = getelementptr i16, i16* %604, i64 8
  %612 = bitcast i16* %611 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %612, align 2, !alias.scope !33, !noalias !30
  %613 = or i64 %579, 48
  %614 = getelementptr i16, i16* %530, i64 %613
  %615 = getelementptr i16, i16* %555, i64 %613
  %616 = bitcast i16* %614 to <8 x i16>*
  %617 = load <8 x i16>, <8 x i16>* %616, align 2, !alias.scope !30
  %618 = getelementptr i16, i16* %614, i64 8
  %619 = bitcast i16* %618 to <8 x i16>*
  %620 = load <8 x i16>, <8 x i16>* %619, align 2, !alias.scope !30
  %621 = bitcast i16* %615 to <8 x i16>*
  store <8 x i16> %617, <8 x i16>* %621, align 2, !alias.scope !33, !noalias !30
  %622 = getelementptr i16, i16* %615, i64 8
  %623 = bitcast i16* %622 to <8 x i16>*
  store <8 x i16> %620, <8 x i16>* %623, align 2, !alias.scope !33, !noalias !30
  %624 = add i64 %579, 64
  %625 = add i64 %580, -4
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %627, label %578, !llvm.loop !35

627:                                              ; preds = %578, %566
  %628 = phi i64 [ 0, %566 ], [ %624, %578 ]
  %629 = icmp eq i64 %574, 0
  br i1 %629, label %646, label %630

630:                                              ; preds = %627, %630
  %631 = phi i64 [ %643, %630 ], [ %628, %627 ]
  %632 = phi i64 [ %644, %630 ], [ %574, %627 ]
  %633 = getelementptr i16, i16* %530, i64 %631
  %634 = getelementptr i16, i16* %555, i64 %631
  %635 = bitcast i16* %633 to <8 x i16>*
  %636 = load <8 x i16>, <8 x i16>* %635, align 2, !alias.scope !30
  %637 = getelementptr i16, i16* %633, i64 8
  %638 = bitcast i16* %637 to <8 x i16>*
  %639 = load <8 x i16>, <8 x i16>* %638, align 2, !alias.scope !30
  %640 = bitcast i16* %634 to <8 x i16>*
  store <8 x i16> %636, <8 x i16>* %640, align 2, !alias.scope !33, !noalias !30
  %641 = getelementptr i16, i16* %634, i64 8
  %642 = bitcast i16* %641 to <8 x i16>*
  store <8 x i16> %639, <8 x i16>* %642, align 2, !alias.scope !33, !noalias !30
  %643 = add i64 %631, 16
  %644 = add i64 %632, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %630, !llvm.loop !36

646:                                              ; preds = %630, %627
  %647 = icmp eq i64 %557, %567
  br i1 %647, label %701, label %648

648:                                              ; preds = %646, %559, %554
  %649 = phi i64 [ %556, %559 ], [ %556, %554 ], [ %568, %646 ]
  %650 = phi i16* [ %530, %559 ], [ %530, %554 ], [ %569, %646 ]
  %651 = phi i16* [ %555, %559 ], [ %555, %554 ], [ %570, %646 ]
  %652 = add i64 %649, -1
  %653 = and i64 %649, 7
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %666, label %655

655:                                              ; preds = %648, %655
  %656 = phi i64 [ %661, %655 ], [ %649, %648 ]
  %657 = phi i16* [ %663, %655 ], [ %650, %648 ]
  %658 = phi i16* [ %662, %655 ], [ %651, %648 ]
  %659 = phi i64 [ %664, %655 ], [ %653, %648 ]
  %660 = load i16, i16* %657, align 2
  store i16 %660, i16* %658, align 2
  %661 = add i64 %656, -1
  %662 = getelementptr inbounds i16, i16* %658, i64 1
  %663 = getelementptr inbounds i16, i16* %657, i64 1
  %664 = add i64 %659, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %655, !llvm.loop !37

666:                                              ; preds = %655, %648
  %667 = phi i64 [ %649, %648 ], [ %661, %655 ]
  %668 = phi i16* [ %650, %648 ], [ %663, %655 ]
  %669 = phi i16* [ %651, %648 ], [ %662, %655 ]
  %670 = icmp ult i64 %652, 7
  br i1 %670, label %701, label %671

671:                                              ; preds = %666, %671
  %672 = phi i64 [ %697, %671 ], [ %667, %666 ]
  %673 = phi i16* [ %699, %671 ], [ %668, %666 ]
  %674 = phi i16* [ %698, %671 ], [ %669, %666 ]
  %675 = load i16, i16* %673, align 2
  store i16 %675, i16* %674, align 2
  %676 = getelementptr inbounds i16, i16* %674, i64 1
  %677 = getelementptr inbounds i16, i16* %673, i64 1
  %678 = load i16, i16* %677, align 2
  store i16 %678, i16* %676, align 2
  %679 = getelementptr inbounds i16, i16* %674, i64 2
  %680 = getelementptr inbounds i16, i16* %673, i64 2
  %681 = load i16, i16* %680, align 2
  store i16 %681, i16* %679, align 2
  %682 = getelementptr inbounds i16, i16* %674, i64 3
  %683 = getelementptr inbounds i16, i16* %673, i64 3
  %684 = load i16, i16* %683, align 2
  store i16 %684, i16* %682, align 2
  %685 = getelementptr inbounds i16, i16* %674, i64 4
  %686 = getelementptr inbounds i16, i16* %673, i64 4
  %687 = load i16, i16* %686, align 2
  store i16 %687, i16* %685, align 2
  %688 = getelementptr inbounds i16, i16* %674, i64 5
  %689 = getelementptr inbounds i16, i16* %673, i64 5
  %690 = load i16, i16* %689, align 2
  store i16 %690, i16* %688, align 2
  %691 = getelementptr inbounds i16, i16* %674, i64 6
  %692 = getelementptr inbounds i16, i16* %673, i64 6
  %693 = load i16, i16* %692, align 2
  store i16 %693, i16* %691, align 2
  %694 = getelementptr inbounds i16, i16* %674, i64 7
  %695 = getelementptr inbounds i16, i16* %673, i64 7
  %696 = load i16, i16* %695, align 2
  store i16 %696, i16* %694, align 2
  %697 = add i64 %672, -8
  %698 = getelementptr inbounds i16, i16* %674, i64 8
  %699 = getelementptr inbounds i16, i16* %673, i64 8
  %700 = icmp eq i64 %697, 0
  br i1 %700, label %701, label %671, !llvm.loop !38

701:                                              ; preds = %666, %671, %646, %526
  %702 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %703 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %702, i64 0, i32 1, i32 1
  %704 = load i8, i8* %703, align 1
  %705 = icmp slt i8 %704, 0
  %706 = load i16*, i16** %281, align 8
  %707 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %708 = select i1 %705, i16* %706, i16* %707
  %709 = load i64, i64* %282, align 8
  %710 = zext i8 %704 to i64
  %711 = select i1 %705, i64 %709, i64 %710
  %712 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %713 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %712, i64 0, i32 1, i32 1
  %714 = load i8, i8* %713, align 1
  %715 = icmp slt i8 %714, 0
  %716 = load i16*, i16** %518, align 8
  %717 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %718 = select i1 %715, i16* %716, i16* %717
  %719 = load i64, i64* %519, align 8
  %720 = zext i8 %714 to i64
  %721 = select i1 %715, i64 %719, i64 %720
  %722 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %708, i64 %711, i16* %718, i64 %721, i32 1) #10
  br i1 %722, label %742, label %723

723:                                              ; preds = %701
  %724 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %725 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %724, i64 0, i32 1, i32 1
  %726 = load i8, i8* %725, align 1
  %727 = icmp slt i8 %726, 0
  %728 = load i16*, i16** %66, align 8
  %729 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %730 = select i1 %727, i16* %728, i16* %729
  %731 = load i64, i64* %67, align 8
  %732 = zext i8 %726 to i64
  %733 = select i1 %727, i64 %731, i64 %732
  %734 = load i8, i8* %713, align 1
  %735 = icmp slt i8 %734, 0
  %736 = load i16*, i16** %518, align 8
  %737 = select i1 %735, i16* %736, i16* %717
  %738 = load i64, i64* %519, align 8
  %739 = zext i8 %734 to i64
  %740 = select i1 %735, i64 %738, i64 %739
  %741 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %730, i64 %733, i16* %737, i64 %740, i32 1) #10
  br i1 %741, label %742, label %1091

742:                                              ; preds = %701, %723
  %743 = bitcast %"class.std::__1::vector.132"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %743) #10
  %744 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %16, i64 0, i32 0, i32 0
  %745 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %16, i64 0, i32 0, i32 1
  %746 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %743, i8 0, i64 24, i1 false) #10
  %747 = load i8, i8* %713, align 1
  %748 = icmp slt i8 %747, 0
  %749 = load i64, i64* %519, align 8
  %750 = zext i8 %747 to i64
  %751 = select i1 %748, i64 %749, i64 %750
  br i1 %722, label %752, label %766

752:                                              ; preds = %742
  %753 = bitcast %struct.TermMatch** %745 to i64*
  %754 = bitcast %"class.std::__1::vector.132"* %16 to i64*
  %755 = bitcast %struct.TermMatch** %746 to i64*
  %756 = call i8* @_Znwm(i64 24) #11
  %757 = bitcast i8* %756 to %struct.TermMatch*
  %758 = getelementptr inbounds i8, i8* %756, i64 24
  %759 = ptrtoint i8* %758 to i64
  %760 = bitcast i8* %756 to i32*
  store i32 0, i32* %760, align 8
  %761 = getelementptr inbounds i8, i8* %756, i64 8
  %762 = bitcast i8* %761 to i64*
  store i64 0, i64* %762, align 8
  %763 = getelementptr inbounds i8, i8* %756, i64 16
  %764 = bitcast i8* %763 to i64*
  store i64 %751, i64* %764, align 8
  %765 = ptrtoint i8* %756 to i64
  store i64 %765, i64* %754, align 8
  store i64 %759, i64* %753, align 8
  store i64 %759, i64* %755, align 8
  br label %789

766:                                              ; preds = %742
  %767 = icmp ugt i64 %751, %64
  br i1 %767, label %770, label %768

768:                                              ; preds = %766
  %769 = bitcast %struct.TermMatch** %745 to i64*
  br label %789

770:                                              ; preds = %766
  %771 = load i8, i8* %703, align 1
  %772 = icmp slt i8 %771, 0
  %773 = load i64, i64* %282, align 8
  %774 = zext i8 %771 to i64
  %775 = select i1 %772, i64 %773, i64 %774
  %776 = bitcast %struct.TermMatch** %745 to i64*
  %777 = bitcast %"class.std::__1::vector.132"* %16 to i64*
  %778 = bitcast %struct.TermMatch** %746 to i64*
  %779 = call i8* @_Znwm(i64 24) #11
  %780 = bitcast i8* %779 to %struct.TermMatch*
  %781 = getelementptr inbounds i8, i8* %779, i64 24
  %782 = ptrtoint i8* %781 to i64
  %783 = bitcast i8* %779 to i32*
  store i32 0, i32* %783, align 8
  %784 = getelementptr inbounds i8, i8* %779, i64 8
  %785 = bitcast i8* %784 to i64*
  store i64 0, i64* %785, align 8
  %786 = getelementptr inbounds i8, i8* %779, i64 16
  %787 = bitcast i8* %786 to i64*
  store i64 %775, i64* %787, align 8
  %788 = ptrtoint i8* %779 to i64
  store i64 %788, i64* %777, align 8
  store i64 %782, i64* %776, align 8
  store i64 %782, i64* %778, align 8
  br label %789

789:                                              ; preds = %770, %752, %768
  %790 = phi i64* [ %769, %768 ], [ %776, %770 ], [ %753, %752 ]
  %791 = phi i8* [ null, %768 ], [ %779, %770 ], [ %756, %752 ]
  %792 = phi %struct.TermMatch* [ null, %768 ], [ %780, %770 ], [ %757, %752 ]
  %793 = phi i64 [ 0, %768 ], [ %788, %770 ], [ %765, %752 ]
  %794 = phi i64 [ 0, %768 ], [ %782, %770 ], [ %759, %752 ]
  %795 = bitcast %"class.std::__1::vector.33"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %795) #10
  %796 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %17, i64 0, i32 0, i32 0
  %797 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %17, i64 0, i32 0, i32 1
  %798 = bitcast %"class.std::__1::vector.132"* %18 to i8*
  %799 = bitcast %"class.std::__1::vector.33"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %799, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %798, i8 0, i64 24, i1 false) #10
  %800 = sub i64 %794, %793
  %801 = sdiv exact i64 %800, 24
  %802 = icmp eq i64 %800, 0
  br i1 %802, label %826, label %803

803:                                              ; preds = %789
  %804 = icmp ugt i64 %801, 768614336404564650
  br i1 %804, label %805, label %807

805:                                              ; preds = %803
  %806 = bitcast %"class.std::__1::vector.132"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %806) #13
  unreachable

807:                                              ; preds = %803
  %808 = call i8* @_Znwm(i64 %800) #11
  %809 = bitcast i8* %808 to %struct.TermMatch*
  %810 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %18, i64 0, i32 0, i32 1
  %811 = bitcast %struct.TermMatch** %810 to i8**
  store i8* %808, i8** %811, align 8
  %812 = bitcast %"class.std::__1::vector.132"* %18 to i8**
  store i8* %808, i8** %812, align 8
  %813 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %809, i64 %801
  %814 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.TermMatch* %813, %struct.TermMatch** %814, align 8
  %815 = bitcast %struct.TermMatch** %810 to i64*
  %816 = ptrtoint i8* %808 to i64
  %817 = ptrtoint %struct.TermMatch* %792 to i64
  %818 = sub i64 %794, %817
  %819 = icmp sgt i64 %818, 0
  br i1 %819, label %820, label %824

820:                                              ; preds = %807
  %821 = udiv exact i64 %818, 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %808, i8* align 8 %791, i64 %818, i1 false) #10
  %822 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %809, i64 %821
  %823 = ptrtoint %struct.TermMatch* %822 to i64
  br label %824

824:                                              ; preds = %820, %807
  %825 = phi i64 [ %823, %820 ], [ %816, %807 ]
  store i64 %825, i64* %815, align 8
  br label %826

826:                                              ; preds = %789, %824
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* nonnull sret %17, %"class.std::__1::vector.132"* nonnull %18, i64 -1, i32 3, i32 1) #10
  %827 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %18, i64 0, i32 0, i32 0
  %828 = load %struct.TermMatch*, %struct.TermMatch** %827, align 8
  %829 = icmp eq %struct.TermMatch* %828, null
  br i1 %829, label %835, label %830

830:                                              ; preds = %826
  %831 = ptrtoint %struct.TermMatch* %828 to i64
  %832 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %18, i64 0, i32 0, i32 1
  %833 = bitcast %struct.TermMatch** %832 to i64*
  store i64 %831, i64* %833, align 8
  %834 = bitcast %struct.TermMatch* %828 to i8*
  call void @_ZdlPv(i8* %834) #11
  br label %835

835:                                              ; preds = %826, %830
  %836 = bitcast %"class.std::__1::vector.2"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %836) #10
  %837 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %286, align 8
  %838 = bitcast %class.AutocompleteProviderClient* %837 to void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)***
  %839 = load void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)**, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*** %838, align 8
  %840 = getelementptr inbounds void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)** %839, i64 26
  %841 = load void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::vector.2"*, %class.AutocompleteProviderClient*)** %840, align 8
  call void %841(%"class.std::__1::vector.2"* nonnull sret %19, %class.AutocompleteProviderClient* %837) #10
  %842 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %19, i64 0, i32 0, i32 0
  %843 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %842, align 8
  %844 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %19, i64 0, i32 0, i32 1
  %845 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %844, align 8
  %846 = icmp eq %"class.std::__1::basic_string"* %843, %845
  br i1 %846, label %862, label %847

847:                                              ; preds = %835
  %848 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %849 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %850 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %851 = bitcast %"class.std::__1::basic_string"* %20 to i8**
  %852 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  %853 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %854 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %853, i64 0, i32 1, i32 1
  %855 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %856 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %857 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %856, i64 0, i32 1, i32 1
  %858 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %859 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %900

860:                                              ; preds = %1088
  %861 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %842, align 8
  br label %862

862:                                              ; preds = %860, %835
  %863 = phi %"class.std::__1::basic_string"* [ %861, %860 ], [ %843, %835 ]
  %864 = icmp eq %"class.std::__1::basic_string"* %863, null
  br i1 %864, label %886, label %865

865:                                              ; preds = %862
  %866 = bitcast %"class.std::__1::basic_string"* %863 to i8*
  %867 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %844, align 8
  %868 = icmp eq %"class.std::__1::basic_string"* %867, %863
  br i1 %868, label %884, label %869

869:                                              ; preds = %865, %879
  %870 = phi %"class.std::__1::basic_string"* [ %871, %879 ], [ %867, %865 ]
  %871 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %870, i64 -1
  %872 = bitcast %"class.std::__1::basic_string"* %871 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %873 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %872, i64 0, i32 1, i32 1
  %874 = load i8, i8* %873, align 1
  %875 = icmp slt i8 %874, 0
  br i1 %875, label %876, label %879

876:                                              ; preds = %869
  %877 = bitcast %"class.std::__1::basic_string"* %871 to i8**
  %878 = load i8*, i8** %877, align 8
  call void @_ZdlPv(i8* %878) #11
  br label %879

879:                                              ; preds = %876, %869
  %880 = icmp eq %"class.std::__1::basic_string"* %871, %863
  br i1 %880, label %881, label %869

881:                                              ; preds = %879
  %882 = bitcast %"class.std::__1::vector.2"* %19 to i8**
  %883 = load i8*, i8** %882, align 8
  br label %884

884:                                              ; preds = %881, %865
  %885 = phi i8* [ %883, %881 ], [ %866, %865 ]
  store %"class.std::__1::basic_string"* %863, %"class.std::__1::basic_string"** %844, align 8
  call void @_ZdlPv(i8* %885) #11
  br label %886

886:                                              ; preds = %862, %884
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %836) #10
  %887 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %796, align 8
  %888 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %887, null
  br i1 %888, label %893, label %889

889:                                              ; preds = %886
  %890 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %887 to i64
  %891 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %797 to i64*
  store i64 %890, i64* %891, align 8
  %892 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %887 to i8*
  call void @_ZdlPv(i8* %892) #11
  br label %893

893:                                              ; preds = %886, %889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %795) #10
  %894 = load %struct.TermMatch*, %struct.TermMatch** %744, align 8
  %895 = icmp eq %struct.TermMatch* %894, null
  br i1 %895, label %899, label %896

896:                                              ; preds = %893
  %897 = ptrtoint %struct.TermMatch* %894 to i64
  store i64 %897, i64* %790, align 8
  %898 = bitcast %struct.TermMatch* %894 to i8*
  call void @_ZdlPv(i8* %898) #11
  br label %899

899:                                              ; preds = %893, %896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %743) #10
  br label %1643

900:                                              ; preds = %847, %1088
  %901 = phi %"class.std::__1::basic_string"* [ %843, %847 ], [ %1089, %1088 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %848) #10
  %902 = bitcast %"class.std::__1::basic_string"* %901 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %903 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %902, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %859, i8 -86, i64 24, i1 false)
  %904 = load i8, i8* %903, align 1
  %905 = icmp slt i8 %904, 0
  br i1 %905, label %908, label %906

906:                                              ; preds = %900
  %907 = bitcast %"class.std::__1::basic_string"* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %848, i8* align 8 %907, i64 24, i1 false) #10
  br label %1078

908:                                              ; preds = %900
  %909 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %901, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %910 = load i16*, i16** %909, align 8
  %911 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %901, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %912 = load i64, i64* %911, align 8
  %913 = icmp ult i64 %912, 11
  br i1 %913, label %914, label %916

914:                                              ; preds = %908
  %915 = trunc i64 %912 to i8
  store i8 %915, i8* %854, align 1
  br label %930

916:                                              ; preds = %908
  %917 = icmp ugt i64 %912, 9223372036854775791
  br i1 %917, label %918, label %920

918:                                              ; preds = %916
  %919 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %919) #13
  unreachable

920:                                              ; preds = %916
  %921 = add nuw nsw i64 %912, 8
  %922 = and i64 %921, -8
  %923 = icmp slt i64 %922, 0
  br i1 %923, label %924, label %925

924:                                              ; preds = %920
  call void @abort() #13
  unreachable

925:                                              ; preds = %920
  %926 = shl i64 %922, 1
  %927 = call i8* @_Znwm(i64 %926) #11
  %928 = bitcast i8* %927 to i16*
  store i8* %927, i8** %851, align 8
  %929 = or i64 %922, -9223372036854775808
  store i64 %929, i64* %850, align 8
  store i64 %912, i64* %849, align 8
  br label %930

930:                                              ; preds = %925, %914
  %931 = phi i16* [ %852, %914 ], [ %928, %925 ]
  %932 = add nuw nsw i64 %912, 1
  %933 = add i64 %912, 1
  %934 = icmp ult i64 %933, 16
  br i1 %934, label %1025, label %935

935:                                              ; preds = %930
  %936 = getelementptr i16, i16* %931, i64 1
  %937 = getelementptr i16, i16* %936, i64 %912
  %938 = getelementptr i16, i16* %910, i64 1
  %939 = getelementptr i16, i16* %938, i64 %912
  %940 = icmp ult i16* %931, %939
  %941 = icmp ult i16* %910, %937
  %942 = and i1 %940, %941
  br i1 %942, label %1025, label %943

943:                                              ; preds = %935
  %944 = and i64 %933, -16
  %945 = sub i64 %932, %944
  %946 = getelementptr i16, i16* %910, i64 %944
  %947 = getelementptr i16, i16* %931, i64 %944
  %948 = add i64 %944, -16
  %949 = lshr exact i64 %948, 4
  %950 = add nuw nsw i64 %949, 1
  %951 = and i64 %950, 3
  %952 = icmp ult i64 %948, 48
  br i1 %952, label %1004, label %953

953:                                              ; preds = %943
  %954 = sub nsw i64 %950, %951
  br label %955

955:                                              ; preds = %955, %953
  %956 = phi i64 [ 0, %953 ], [ %1001, %955 ]
  %957 = phi i64 [ %954, %953 ], [ %1002, %955 ]
  %958 = getelementptr i16, i16* %910, i64 %956
  %959 = getelementptr i16, i16* %931, i64 %956
  %960 = bitcast i16* %958 to <8 x i16>*
  %961 = load <8 x i16>, <8 x i16>* %960, align 2, !alias.scope !39
  %962 = getelementptr i16, i16* %958, i64 8
  %963 = bitcast i16* %962 to <8 x i16>*
  %964 = load <8 x i16>, <8 x i16>* %963, align 2, !alias.scope !39
  %965 = bitcast i16* %959 to <8 x i16>*
  store <8 x i16> %961, <8 x i16>* %965, align 2, !alias.scope !42, !noalias !39
  %966 = getelementptr i16, i16* %959, i64 8
  %967 = bitcast i16* %966 to <8 x i16>*
  store <8 x i16> %964, <8 x i16>* %967, align 2, !alias.scope !42, !noalias !39
  %968 = or i64 %956, 16
  %969 = getelementptr i16, i16* %910, i64 %968
  %970 = getelementptr i16, i16* %931, i64 %968
  %971 = bitcast i16* %969 to <8 x i16>*
  %972 = load <8 x i16>, <8 x i16>* %971, align 2, !alias.scope !39
  %973 = getelementptr i16, i16* %969, i64 8
  %974 = bitcast i16* %973 to <8 x i16>*
  %975 = load <8 x i16>, <8 x i16>* %974, align 2, !alias.scope !39
  %976 = bitcast i16* %970 to <8 x i16>*
  store <8 x i16> %972, <8 x i16>* %976, align 2, !alias.scope !42, !noalias !39
  %977 = getelementptr i16, i16* %970, i64 8
  %978 = bitcast i16* %977 to <8 x i16>*
  store <8 x i16> %975, <8 x i16>* %978, align 2, !alias.scope !42, !noalias !39
  %979 = or i64 %956, 32
  %980 = getelementptr i16, i16* %910, i64 %979
  %981 = getelementptr i16, i16* %931, i64 %979
  %982 = bitcast i16* %980 to <8 x i16>*
  %983 = load <8 x i16>, <8 x i16>* %982, align 2, !alias.scope !39
  %984 = getelementptr i16, i16* %980, i64 8
  %985 = bitcast i16* %984 to <8 x i16>*
  %986 = load <8 x i16>, <8 x i16>* %985, align 2, !alias.scope !39
  %987 = bitcast i16* %981 to <8 x i16>*
  store <8 x i16> %983, <8 x i16>* %987, align 2, !alias.scope !42, !noalias !39
  %988 = getelementptr i16, i16* %981, i64 8
  %989 = bitcast i16* %988 to <8 x i16>*
  store <8 x i16> %986, <8 x i16>* %989, align 2, !alias.scope !42, !noalias !39
  %990 = or i64 %956, 48
  %991 = getelementptr i16, i16* %910, i64 %990
  %992 = getelementptr i16, i16* %931, i64 %990
  %993 = bitcast i16* %991 to <8 x i16>*
  %994 = load <8 x i16>, <8 x i16>* %993, align 2, !alias.scope !39
  %995 = getelementptr i16, i16* %991, i64 8
  %996 = bitcast i16* %995 to <8 x i16>*
  %997 = load <8 x i16>, <8 x i16>* %996, align 2, !alias.scope !39
  %998 = bitcast i16* %992 to <8 x i16>*
  store <8 x i16> %994, <8 x i16>* %998, align 2, !alias.scope !42, !noalias !39
  %999 = getelementptr i16, i16* %992, i64 8
  %1000 = bitcast i16* %999 to <8 x i16>*
  store <8 x i16> %997, <8 x i16>* %1000, align 2, !alias.scope !42, !noalias !39
  %1001 = add i64 %956, 64
  %1002 = add i64 %957, -4
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %955, !llvm.loop !44

1004:                                             ; preds = %955, %943
  %1005 = phi i64 [ 0, %943 ], [ %1001, %955 ]
  %1006 = icmp eq i64 %951, 0
  br i1 %1006, label %1023, label %1007

1007:                                             ; preds = %1004, %1007
  %1008 = phi i64 [ %1020, %1007 ], [ %1005, %1004 ]
  %1009 = phi i64 [ %1021, %1007 ], [ %951, %1004 ]
  %1010 = getelementptr i16, i16* %910, i64 %1008
  %1011 = getelementptr i16, i16* %931, i64 %1008
  %1012 = bitcast i16* %1010 to <8 x i16>*
  %1013 = load <8 x i16>, <8 x i16>* %1012, align 2, !alias.scope !39
  %1014 = getelementptr i16, i16* %1010, i64 8
  %1015 = bitcast i16* %1014 to <8 x i16>*
  %1016 = load <8 x i16>, <8 x i16>* %1015, align 2, !alias.scope !39
  %1017 = bitcast i16* %1011 to <8 x i16>*
  store <8 x i16> %1013, <8 x i16>* %1017, align 2, !alias.scope !42, !noalias !39
  %1018 = getelementptr i16, i16* %1011, i64 8
  %1019 = bitcast i16* %1018 to <8 x i16>*
  store <8 x i16> %1016, <8 x i16>* %1019, align 2, !alias.scope !42, !noalias !39
  %1020 = add i64 %1008, 16
  %1021 = add i64 %1009, -1
  %1022 = icmp eq i64 %1021, 0
  br i1 %1022, label %1023, label %1007, !llvm.loop !45

1023:                                             ; preds = %1007, %1004
  %1024 = icmp eq i64 %933, %944
  br i1 %1024, label %1078, label %1025

1025:                                             ; preds = %1023, %935, %930
  %1026 = phi i64 [ %932, %935 ], [ %932, %930 ], [ %945, %1023 ]
  %1027 = phi i16* [ %910, %935 ], [ %910, %930 ], [ %946, %1023 ]
  %1028 = phi i16* [ %931, %935 ], [ %931, %930 ], [ %947, %1023 ]
  %1029 = add i64 %1026, -1
  %1030 = and i64 %1026, 7
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1043, label %1032

1032:                                             ; preds = %1025, %1032
  %1033 = phi i64 [ %1038, %1032 ], [ %1026, %1025 ]
  %1034 = phi i16* [ %1040, %1032 ], [ %1027, %1025 ]
  %1035 = phi i16* [ %1039, %1032 ], [ %1028, %1025 ]
  %1036 = phi i64 [ %1041, %1032 ], [ %1030, %1025 ]
  %1037 = load i16, i16* %1034, align 2
  store i16 %1037, i16* %1035, align 2
  %1038 = add i64 %1033, -1
  %1039 = getelementptr inbounds i16, i16* %1035, i64 1
  %1040 = getelementptr inbounds i16, i16* %1034, i64 1
  %1041 = add i64 %1036, -1
  %1042 = icmp eq i64 %1041, 0
  br i1 %1042, label %1043, label %1032, !llvm.loop !46

1043:                                             ; preds = %1032, %1025
  %1044 = phi i64 [ %1026, %1025 ], [ %1038, %1032 ]
  %1045 = phi i16* [ %1027, %1025 ], [ %1040, %1032 ]
  %1046 = phi i16* [ %1028, %1025 ], [ %1039, %1032 ]
  %1047 = icmp ult i64 %1029, 7
  br i1 %1047, label %1078, label %1048

1048:                                             ; preds = %1043, %1048
  %1049 = phi i64 [ %1074, %1048 ], [ %1044, %1043 ]
  %1050 = phi i16* [ %1076, %1048 ], [ %1045, %1043 ]
  %1051 = phi i16* [ %1075, %1048 ], [ %1046, %1043 ]
  %1052 = load i16, i16* %1050, align 2
  store i16 %1052, i16* %1051, align 2
  %1053 = getelementptr inbounds i16, i16* %1051, i64 1
  %1054 = getelementptr inbounds i16, i16* %1050, i64 1
  %1055 = load i16, i16* %1054, align 2
  store i16 %1055, i16* %1053, align 2
  %1056 = getelementptr inbounds i16, i16* %1051, i64 2
  %1057 = getelementptr inbounds i16, i16* %1050, i64 2
  %1058 = load i16, i16* %1057, align 2
  store i16 %1058, i16* %1056, align 2
  %1059 = getelementptr inbounds i16, i16* %1051, i64 3
  %1060 = getelementptr inbounds i16, i16* %1050, i64 3
  %1061 = load i16, i16* %1060, align 2
  store i16 %1061, i16* %1059, align 2
  %1062 = getelementptr inbounds i16, i16* %1051, i64 4
  %1063 = getelementptr inbounds i16, i16* %1050, i64 4
  %1064 = load i16, i16* %1063, align 2
  store i16 %1064, i16* %1062, align 2
  %1065 = getelementptr inbounds i16, i16* %1051, i64 5
  %1066 = getelementptr inbounds i16, i16* %1050, i64 5
  %1067 = load i16, i16* %1066, align 2
  store i16 %1067, i16* %1065, align 2
  %1068 = getelementptr inbounds i16, i16* %1051, i64 6
  %1069 = getelementptr inbounds i16, i16* %1050, i64 6
  %1070 = load i16, i16* %1069, align 2
  store i16 %1070, i16* %1068, align 2
  %1071 = getelementptr inbounds i16, i16* %1051, i64 7
  %1072 = getelementptr inbounds i16, i16* %1050, i64 7
  %1073 = load i16, i16* %1072, align 2
  store i16 %1073, i16* %1071, align 2
  %1074 = add i64 %1049, -8
  %1075 = getelementptr inbounds i16, i16* %1051, i64 8
  %1076 = getelementptr inbounds i16, i16* %1050, i64 8
  %1077 = icmp eq i64 %1074, 0
  br i1 %1077, label %1078, label %1048, !llvm.loop !47

1078:                                             ; preds = %1043, %1048, %1023, %906
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %855) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %855, i8 0, i64 24, i1 false) #10
  call void @_ZN15BuiltinProvider8AddMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS0_6vectorIN17AutocompleteMatch21ACMatchClassificationENS4_ISB_EEEE(%class.BuiltinProvider* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %17)
  %1079 = load i8, i8* %857, align 1
  %1080 = icmp slt i8 %1079, 0
  br i1 %1080, label %1081, label %1083

1081:                                             ; preds = %1078
  %1082 = load i8*, i8** %858, align 8
  call void @_ZdlPv(i8* %1082) #11
  br label %1083

1083:                                             ; preds = %1078, %1081
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %855) #10
  %1084 = load i8, i8* %854, align 1
  %1085 = icmp slt i8 %1084, 0
  br i1 %1085, label %1086, label %1088

1086:                                             ; preds = %1083
  %1087 = load i8*, i8** %851, align 8
  call void @_ZdlPv(i8* %1087) #11
  br label %1088

1088:                                             ; preds = %1083, %1086
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %848) #10
  %1089 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %901, i64 1
  %1090 = icmp eq %"class.std::__1::basic_string"* %1089, %845
  br i1 %1090, label %860, label %900

1091:                                             ; preds = %723
  %1092 = bitcast %class.GURL* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %1092) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1092, i8 -86, i64 120, i1 false)
  %1093 = bitcast %"class.std::__1::basic_string.21"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1093) #10
  %1094 = load i8, i8* %713, align 1
  %1095 = icmp slt i8 %1094, 0
  %1096 = load i16*, i16** %518, align 8
  %1097 = select i1 %1095, i16* %1096, i16* %717
  %1098 = load i64, i64* %519, align 8
  %1099 = zext i8 %1094 to i64
  %1100 = select i1 %1095, i64 %1098, i64 %1099
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.21"* nonnull sret %23, i16* %1097, i64 %1100) #10
  %1101 = bitcast %"class.std::__1::basic_string.21"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1101) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1101, i8 0, i64 24, i1 false) #10
  call void @_ZN13url_formatter8FixupURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.GURL* nonnull sret %22, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %23, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %24) #10
  %1102 = bitcast %"class.std::__1::basic_string.21"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1102, i64 0, i32 1, i32 0
  %1104 = load i8, i8* %1103, align 1
  %1105 = icmp slt i8 %1104, 0
  br i1 %1105, label %1106, label %1109

1106:                                             ; preds = %1091
  %1107 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1108 = load i8*, i8** %1107, align 8
  call void @_ZdlPv(i8* %1108) #11
  br label %1109

1109:                                             ; preds = %1091, %1106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1101) #10
  %1110 = bitcast %"class.std::__1::basic_string.21"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1110, i64 0, i32 1, i32 0
  %1112 = load i8, i8* %1111, align 1
  %1113 = icmp slt i8 %1112, 0
  br i1 %1113, label %1114, label %1117

1114:                                             ; preds = %1109
  %1115 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1116 = load i8*, i8** %1115, align 8
  call void @_ZdlPv(i8* %1116) #11
  br label %1117

1117:                                             ; preds = %1109, %1114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1093) #10
  %1118 = load i8, i8* %713, align 1
  %1119 = load i16*, i16** %518, align 8
  %1120 = load i64, i64* %519, align 8
  %1121 = zext i8 %1118 to i64
  %1122 = icmp slt i8 %1118, 0
  %1123 = select i1 %1122, i16* %1119, i16* %717
  %1124 = select i1 %1122, i64 %1120, i64 %1121
  %1125 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %1123, i64 %1124, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1, i32 0) #10
  %1126 = bitcast %"class.std::__1::basic_string.21"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1126) #10
  %1127 = load %class.AutocompleteProviderClient*, %class.AutocompleteProviderClient** %286, align 8
  %1128 = bitcast %class.AutocompleteProviderClient* %1127 to void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)***
  %1129 = load void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)**, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*** %1128, align 8
  %1130 = getelementptr inbounds void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)** %1129, i64 24
  %1131 = load void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)*, void (%"class.std::__1::basic_string.21"*, %class.AutocompleteProviderClient*)** %1130, align 8
  call void %1131(%"class.std::__1::basic_string.21"* nonnull sret %25, %class.AutocompleteProviderClient* %1127) #10
  %1132 = bitcast %"class.std::__1::basic_string.21"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1132, i64 0, i32 1, i32 0
  %1134 = load i8, i8* %1133, align 1
  %1135 = icmp slt i8 %1134, 0
  %1136 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load i8*, i8** %1136, align 8
  %1138 = select i1 %1135, i8* %1137, i8* %1126
  %1139 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1140 = load i64, i64* %1139, align 8
  %1141 = zext i8 %1134 to i64
  %1142 = select i1 %1135, i64 %1140, i64 %1141
  %1143 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %22, i8* %1138, i64 %1142) #10
  br i1 %1143, label %1144, label %1635

1144:                                             ; preds = %1117
  %1145 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 1
  %1146 = load i32, i32* %1145, align 4
  %1147 = icmp sgt i32 %1146, 0
  br i1 %1147, label %1148, label %1630

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 6, i32 1
  %1150 = load i32, i32* %1149, align 4
  %1151 = icmp sgt i32 %1150, -1
  br i1 %1151, label %1625, label %1152

1152:                                             ; preds = %1148
  %1153 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 7, i32 1
  %1154 = load i32, i32* %1153, align 4
  %1155 = icmp sgt i32 %1154, -1
  %1156 = load i8, i8* %1133, align 1
  %1157 = icmp slt i8 %1156, 0
  br i1 %1157, label %1158, label %1160

1158:                                             ; preds = %1152
  %1159 = load i8*, i8** %1136, align 8
  call void @_ZdlPv(i8* %1159) #11
  br label %1160

1160:                                             ; preds = %1152, %1158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1126) #10
  br i1 %1155, label %1642, label %1161

1161:                                             ; preds = %1160
  %1162 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1162) #10
  %1163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1165 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1165, i8 -86, i64 24, i1 false)
  %1166 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1167 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1166, i64 0, i32 1, i32 1
  store i8 5, i8* %1167, align 1
  %1168 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  store i16 98, i16* %1168, align 8
  %1169 = getelementptr inbounds i16, i16* %1168, i64 1
  store i16 108, i16* %1169, align 2
  %1170 = getelementptr inbounds i16, i16* %1168, i64 2
  store i16 97, i16* %1170, align 4
  %1171 = getelementptr inbounds i16, i16* %1168, i64 3
  store i16 110, i16* %1171, align 2
  %1172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1173 = bitcast i64* %1172 to i16*
  store i16 107, i16* %1173, align 8
  %1174 = getelementptr inbounds i16, i16* %1168, i64 5
  store i16 0, i16* %1174, align 2
  %1175 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1175) #10
  %1176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1178 = bitcast %"class.std::__1::basic_string.21"* %28 to i8*
  %1179 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1179, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1178) #10
  %1180 = load i32, i32* %1145, align 4, !noalias !48
  %1181 = icmp slt i32 %1180, 1
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1161
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1178, i8 0, i64 24, i1 false) #10, !alias.scope !48
  %1183 = bitcast %"class.std::__1::basic_string.21"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1198

1184:                                             ; preds = %1161
  %1185 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0
  %1186 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 0
  %1187 = load i32, i32* %1186, align 8, !noalias !48
  %1188 = sext i32 %1187 to i64
  %1189 = sext i32 %1180 to i64
  %1190 = getelementptr inbounds %"class.std::__1::allocator.28", %"class.std::__1::allocator.28"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1190) #10, !noalias !48
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* nonnull %28, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %1185, i64 %1188, i64 %1189, %"class.std::__1::allocator.28"* nonnull dereferenceable(1) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1190) #10, !noalias !48
  %1191 = bitcast %"class.std::__1::basic_string.21"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1191, i64 0, i32 1, i32 0
  %1193 = load i8, i8* %1192, align 1
  %1194 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1195 = load i8*, i8** %1194, align 8
  %1196 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1197 = load i64, i64* %1196, align 8
  br label %1198

1198:                                             ; preds = %1182, %1184
  %1199 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1183, %1182 ], [ %1191, %1184 ]
  %1200 = phi i64 [ 0, %1182 ], [ %1197, %1184 ]
  %1201 = phi i8* [ null, %1182 ], [ %1195, %1184 ]
  %1202 = phi i8 [ 0, %1182 ], [ %1193, %1184 ]
  %1203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1199, i64 0, i32 1, i32 0
  %1204 = icmp slt i8 %1202, 0
  %1205 = select i1 %1204, i8* %1201, i8* %1178
  %1206 = zext i8 %1202 to i64
  %1207 = select i1 %1204, i64 %1200, i64 %1206
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %27, i8* %1205, i64 %1207) #10
  %1208 = load i8, i8* %1203, align 1
  %1209 = icmp slt i8 %1208, 0
  br i1 %1209, label %1210, label %1213

1210:                                             ; preds = %1198
  %1211 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1212 = load i8*, i8** %1211, align 8
  call void @_ZdlPv(i8* %1212) #11
  br label %1213

1213:                                             ; preds = %1198, %1210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1178) #10
  %1214 = load i8, i8* %713, align 1
  %1215 = icmp slt i8 %1214, 0
  %1216 = load i16*, i16** %518, align 8
  %1217 = select i1 %1215, i16* %1216, i16* %717
  %1218 = load i64, i64* %519, align 8
  %1219 = zext i8 %1214 to i64
  %1220 = select i1 %1215, i64 %1218, i64 %1219
  %1221 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1221) #10
  %1222 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %29, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %1222) #10
  %1223 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1223, i64 0, i32 1, i32 1
  %1225 = load i8, i8* %1224, align 1
  %1226 = icmp slt i8 %1225, 0
  %1227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load i16*, i16** %1227, align 8
  %1229 = bitcast %"class.std::__1::basic_string"* %29 to i16*
  %1230 = select i1 %1226, i16* %1228, i16* %1229
  %1231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1232 = load i64, i64* %1231, align 8
  %1233 = zext i8 %1225 to i64
  %1234 = select i1 %1226, i64 %1232, i64 %1233
  %1235 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %1217, i64 %1220, i16* %1230, i64 %1234, i32 1) #10
  br i1 %1235, label %1236, label %1288

1236:                                             ; preds = %1213
  %1237 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1238 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1237, i64 0, i32 1, i32 1
  %1239 = load i8, i8* %1238, align 1
  %1240 = icmp slt i8 %1239, 0
  %1241 = load i16*, i16** %1163, align 8
  %1242 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %1243 = select i1 %1240, i16* %1241, i16* %1242
  %1244 = load i64, i64* %1164, align 8
  %1245 = zext i8 %1239 to i64
  %1246 = select i1 %1240, i64 %1244, i64 %1245
  %1247 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1248 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1247, i64 0, i32 1, i32 1
  %1249 = load i8, i8* %1248, align 1
  %1250 = icmp slt i8 %1249, 0
  %1251 = load i16*, i16** %1176, align 8
  %1252 = bitcast %"class.std::__1::basic_string"* %27 to i16*
  %1253 = select i1 %1250, i16* %1251, i16* %1252
  %1254 = load i64, i64* %1177, align 8
  %1255 = zext i8 %1249 to i64
  %1256 = select i1 %1250, i64 %1254, i64 %1255
  %1257 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %1243, i64 %1246, i16* %1253, i64 %1256, i32 1) #10
  br i1 %1257, label %1258, label %1288

1258:                                             ; preds = %1236
  %1259 = bitcast %"class.std::__1::basic_string.21"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1259) #10
  %1260 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 5, i32 1
  %1261 = load i32, i32* %1260, align 4, !noalias !53
  %1262 = icmp slt i32 %1261, 1
  br i1 %1262, label %1263, label %1265

1263:                                             ; preds = %1258
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1259, i8 0, i64 24, i1 false) #10, !alias.scope !53
  %1264 = xor i1 %1125, true
  br label %1286

1265:                                             ; preds = %1258
  %1266 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0
  %1267 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 5, i32 0
  %1268 = load i32, i32* %1267, align 8, !noalias !53
  %1269 = sext i32 %1268 to i64
  %1270 = sext i32 %1261 to i64
  %1271 = getelementptr inbounds %"class.std::__1::allocator.28", %"class.std::__1::allocator.28"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1271) #10, !noalias !53
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* nonnull %30, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %1266, i64 %1269, i64 %1270, %"class.std::__1::allocator.28"* nonnull dereferenceable(1) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1271) #10, !noalias !53
  %1272 = bitcast %"class.std::__1::basic_string.21"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1272, i64 0, i32 1, i32 0
  %1274 = load i8, i8* %1273, align 1
  %1275 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1276 = load i64, i64* %1275, align 8
  %1277 = icmp slt i8 %1274, 0
  %1278 = zext i8 %1274 to i64
  %1279 = select i1 %1277, i64 %1276, i64 %1278
  %1280 = icmp ult i64 %1279, 2
  %1281 = xor i1 %1125, true
  %1282 = and i1 %1280, %1281
  br i1 %1277, label %1283, label %1286

1283:                                             ; preds = %1265
  %1284 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1285 = load i8*, i8** %1284, align 8
  call void @_ZdlPv(i8* %1285) #11
  br label %1286

1286:                                             ; preds = %1263, %1265, %1283
  %1287 = phi i1 [ %1264, %1263 ], [ %1282, %1265 ], [ %1282, %1283 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1259) #10
  br label %1288

1288:                                             ; preds = %1213, %1236, %1286
  %1289 = phi i1 [ %1287, %1286 ], [ false, %1236 ], [ false, %1213 ]
  %1290 = load i8, i8* %1224, align 1
  %1291 = icmp slt i8 %1290, 0
  br i1 %1291, label %1292, label %1295

1292:                                             ; preds = %1288
  %1293 = bitcast %"class.std::__1::basic_string"* %29 to i8**
  %1294 = load i8*, i8** %1293, align 8
  call void @_ZdlPv(i8* %1294) #11
  br label %1295

1295:                                             ; preds = %1288, %1292
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1221) #10
  br i1 %1289, label %1296, label %1365

1296:                                             ; preds = %1295
  %1297 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1297) #10
  %1298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1299 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1299, i8 -86, i64 24, i1 false)
  %1300 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url14kAboutBlankURLE, i64 0, i64 0)) #10
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %31, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url14kAboutBlankURLE, i64 0, i64 0), i64 %1300) #10
  %1301 = add i64 %64, 1
  %1302 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1303 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1302, i64 0, i32 1, i32 1
  %1304 = load i8, i8* %1303, align 1
  %1305 = icmp slt i8 %1304, 0
  %1306 = load i64, i64* %1177, align 8
  %1307 = zext i8 %1304 to i64
  %1308 = select i1 %1305, i64 %1306, i64 %1307
  %1309 = add i64 %1301, %1308
  %1310 = call i8* @_Znwm(i64 24) #11
  %1311 = bitcast i8* %1310 to i32*
  store i32 0, i32* %1311, align 8
  %1312 = getelementptr inbounds i8, i8* %1310, i64 8
  %1313 = bitcast i8* %1312 to i64*
  store i64 0, i64* %1313, align 8
  %1314 = getelementptr inbounds i8, i8* %1310, i64 16
  %1315 = bitcast i8* %1314 to i64*
  store i64 %1309, i64* %1315, align 8
  %1316 = bitcast %"class.std::__1::vector.33"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1316) #10
  %1317 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %32, i64 0, i32 0, i32 0
  %1318 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %32, i64 0, i32 0, i32 1
  %1319 = bitcast %"class.std::__1::vector.33"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1319, i8 -86, i64 24, i1 false)
  %1320 = call i8* @_Znwm(i64 24) #11
  %1321 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %33, i64 0, i32 0, i32 1
  %1322 = bitcast %"class.std::__1::vector.132"* %33 to i8**
  store i8* %1320, i8** %1322, align 8
  %1323 = getelementptr inbounds i8, i8* %1320, i64 24
  %1324 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %1325 = bitcast %struct.TermMatch** %1324 to i8**
  store i8* %1323, i8** %1325, align 8
  %1326 = bitcast %struct.TermMatch** %1321 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1320, i8* nonnull align 8 %1310, i64 24, i1 false) #10
  %1327 = ptrtoint i8* %1323 to i64
  store i64 %1327, i64* %1326, align 8
  %1328 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1329 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1328, i64 0, i32 1, i32 1
  %1330 = load i8, i8* %1329, align 1
  %1331 = icmp slt i8 %1330, 0
  %1332 = load i64, i64* %1298, align 8
  %1333 = zext i8 %1330 to i64
  %1334 = select i1 %1331, i64 %1332, i64 %1333
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* nonnull sret %32, %"class.std::__1::vector.132"* nonnull %33, i64 %1334, i32 3, i32 1) #10
  %1335 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %33, i64 0, i32 0, i32 0
  %1336 = load %struct.TermMatch*, %struct.TermMatch** %1335, align 8
  %1337 = icmp eq %struct.TermMatch* %1336, null
  br i1 %1337, label %1341, label %1338

1338:                                             ; preds = %1296
  %1339 = ptrtoint %struct.TermMatch* %1336 to i64
  store i64 %1339, i64* %1326, align 8
  %1340 = bitcast %struct.TermMatch* %1336 to i8*
  call void @_ZdlPv(i8* %1340) #11
  br label %1341

1341:                                             ; preds = %1296, %1338
  %1342 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1342) #10
  %1343 = bitcast %"class.std::__1::basic_string"* %31 to %"class.std::__1::allocator.7"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %34, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31, i64 %1309, i64 -1, %"class.std::__1::allocator.7"* nonnull dereferenceable(1) %1343) #10
  call void @_ZN15BuiltinProvider8AddMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS0_6vectorIN17AutocompleteMatch21ACMatchClassificationENS4_ISB_EEEE(%class.BuiltinProvider* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %34, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %32)
  %1344 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1345 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1344, i64 0, i32 1, i32 1
  %1346 = load i8, i8* %1345, align 1
  %1347 = icmp slt i8 %1346, 0
  br i1 %1347, label %1348, label %1351

1348:                                             ; preds = %1341
  %1349 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  %1350 = load i8*, i8** %1349, align 8
  call void @_ZdlPv(i8* %1350) #11
  br label %1351

1351:                                             ; preds = %1341, %1348
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1342) #10
  %1352 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %1317, align 8
  %1353 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %1352, null
  br i1 %1353, label %1358, label %1354

1354:                                             ; preds = %1351
  %1355 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %1352 to i64
  %1356 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1318 to i64*
  store i64 %1355, i64* %1356, align 8
  %1357 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1352 to i8*
  call void @_ZdlPv(i8* %1357) #11
  br label %1358

1358:                                             ; preds = %1351, %1354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1316) #10
  call void @_ZdlPv(i8* nonnull %1310) #11
  %1359 = load i8, i8* %1329, align 1
  %1360 = icmp slt i8 %1359, 0
  br i1 %1360, label %1361, label %1364

1361:                                             ; preds = %1358
  %1362 = bitcast %"class.std::__1::basic_string"* %31 to i8**
  %1363 = load i8*, i8** %1362, align 8
  call void @_ZdlPv(i8* %1363) #11
  br label %1364

1364:                                             ; preds = %1358, %1361
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1297) #10
  br label %1365

1365:                                             ; preds = %1364, %1295
  %1366 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1366) #10
  %1367 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1368 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1369 = bitcast %"class.std::__1::basic_string.21"* %36 to i8*
  %1370 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1370, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1369) #10
  %1371 = bitcast %"class.std::__1::basic_string.21"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1371) #10
  %1372 = load i32, i32* %1145, align 4, !noalias !58
  %1373 = icmp slt i32 %1372, 1
  br i1 %1373, label %1374, label %1375

1374:                                             ; preds = %1365
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1371, i8 0, i64 24, i1 false) #10, !alias.scope !58
  br label %1382

1375:                                             ; preds = %1365
  %1376 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0
  %1377 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 0
  %1378 = load i32, i32* %1377, align 8, !noalias !58
  %1379 = sext i32 %1378 to i64
  %1380 = sext i32 %1372 to i64
  %1381 = getelementptr inbounds %"class.std::__1::allocator.28", %"class.std::__1::allocator.28"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1381) #10, !noalias !58
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* nonnull %37, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %1376, i64 %1379, i64 %1380, %"class.std::__1::allocator.28"* nonnull dereferenceable(1) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1381) #10, !noalias !58
  br label %1382

1382:                                             ; preds = %1374, %1375
  %1383 = bitcast %"class.std::__1::basic_string.21"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1383) #10
  %1384 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 5, i32 1
  %1385 = load i32, i32* %1384, align 4, !noalias !63
  %1386 = icmp slt i32 %1385, 1
  br i1 %1386, label %1387, label %1389

1387:                                             ; preds = %1382
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1383, i8 0, i64 24, i1 false) #10, !alias.scope !63
  %1388 = bitcast %"class.std::__1::basic_string.21"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1403

1389:                                             ; preds = %1382
  %1390 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0
  %1391 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 5, i32 0
  %1392 = load i32, i32* %1391, align 8, !noalias !63
  %1393 = sext i32 %1392 to i64
  %1394 = sext i32 %1385 to i64
  %1395 = getelementptr inbounds %"class.std::__1::allocator.28", %"class.std::__1::allocator.28"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1395) #10, !noalias !63
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* nonnull %38, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %1390, i64 %1393, i64 %1394, %"class.std::__1::allocator.28"* nonnull dereferenceable(1) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1395) #10, !noalias !63
  %1396 = bitcast %"class.std::__1::basic_string.21"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1396, i64 0, i32 1, i32 0
  %1398 = load i8, i8* %1397, align 1, !noalias !68
  %1399 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1400 = load i8*, i8** %1399, align 8, !noalias !68
  %1401 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1402 = load i64, i64* %1401, align 8, !noalias !68
  br label %1403

1403:                                             ; preds = %1387, %1389
  %1404 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1388, %1387 ], [ %1396, %1389 ]
  %1405 = phi i64 [ 0, %1387 ], [ %1402, %1389 ]
  %1406 = phi i8* [ null, %1387 ], [ %1400, %1389 ]
  %1407 = phi i8 [ 0, %1387 ], [ %1398, %1389 ]
  %1408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1404, i64 0, i32 1, i32 0
  %1409 = icmp slt i8 %1407, 0
  %1410 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1411 = zext i8 %1407 to i64
  %1412 = select i1 %1409, i8* %1406, i8* %1383
  %1413 = select i1 %1409, i64 %1405, i64 %1411
  %1414 = call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.21"* nonnull %37, i8* %1412, i64 %1413) #10, !noalias !68
  %1415 = bitcast %"class.std::__1::basic_string.21"* %1414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1369, i8* align 8 %1415, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %1415, i8 0, i64 24, i1 false) #10, !noalias !68
  %1416 = bitcast %"class.std::__1::basic_string.21"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1416, i64 0, i32 1, i32 0
  %1418 = load i8, i8* %1417, align 1
  %1419 = icmp slt i8 %1418, 0
  %1420 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1421 = load i8*, i8** %1420, align 8
  %1422 = select i1 %1419, i8* %1421, i8* %1369
  %1423 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1424 = load i64, i64* %1423, align 8
  %1425 = zext i8 %1418 to i64
  %1426 = select i1 %1419, i64 %1424, i64 %1425
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %35, i8* %1422, i64 %1426) #10
  %1427 = load i8, i8* %1417, align 1
  %1428 = icmp slt i8 %1427, 0
  br i1 %1428, label %1429, label %1431

1429:                                             ; preds = %1403
  %1430 = load i8*, i8** %1420, align 8
  call void @_ZdlPv(i8* %1430) #11
  br label %1431

1431:                                             ; preds = %1403, %1429
  %1432 = load i8, i8* %1408, align 1
  %1433 = icmp slt i8 %1432, 0
  br i1 %1433, label %1434, label %1436

1434:                                             ; preds = %1431
  %1435 = load i8*, i8** %1410, align 8
  call void @_ZdlPv(i8* %1435) #11
  br label %1436

1436:                                             ; preds = %1431, %1434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1383) #10
  %1437 = bitcast %"class.std::__1::basic_string.21"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1437, i64 0, i32 1, i32 0
  %1439 = load i8, i8* %1438, align 1
  %1440 = icmp slt i8 %1439, 0
  br i1 %1440, label %1441, label %1444

1441:                                             ; preds = %1436
  %1442 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1443 = load i8*, i8** %1442, align 8
  call void @_ZdlPv(i8* %1443) #11
  br label %1444

1444:                                             ; preds = %1436, %1441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1371) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1369) #10
  %1445 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1446 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1445, i64 0, i32 1, i32 1
  %1447 = load i8, i8* %1446, align 1
  %1448 = load i16*, i16** %1367, align 8
  %1449 = bitcast %"class.std::__1::basic_string"* %35 to i16*
  %1450 = load i64, i64* %1368, align 8
  %1451 = zext i8 %1447 to i64
  %1452 = icmp slt i8 %1447, 0
  %1453 = select i1 %1452, i16* %1448, i16* %1449
  %1454 = select i1 %1452, i64 %1450, i64 %1451
  %1455 = call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %1453, i64 %1454, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* nonnull %35) #10
  %1456 = load i8, i8* %703, align 1
  %1457 = icmp slt i8 %1456, 0
  %1458 = load i64, i64* %282, align 8
  %1459 = zext i8 %1456 to i64
  %1460 = select i1 %1457, i64 %1458, i64 %1459
  %1461 = load i8, i8* %1446, align 1
  %1462 = icmp slt i8 %1461, 0
  %1463 = load i64, i64* %1368, align 8
  %1464 = zext i8 %1461 to i64
  %1465 = select i1 %1462, i64 %1463, i64 %1464
  %1466 = add i64 %1465, %1460
  %1467 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 0
  %1468 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1467, align 8
  %1469 = bitcast %struct.AutocompleteMatch** %49 to i64*
  %1470 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 1
  %1471 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1470, align 8
  %1472 = icmp eq %"class.std::__1::basic_string"* %1468, %1471
  br i1 %1472, label %1520, label %1473

1473:                                             ; preds = %1444
  %1474 = bitcast %"class.std::__1::vector"* %46 to i64*
  %1475 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 2
  %1476 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %1477 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1478 = bitcast %"class.std::__1::vector.33"* %40 to i8*
  %1479 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %40, i64 0, i32 0, i32 0
  %1480 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %40, i64 0, i32 0, i32 1
  %1481 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %41, i64 0, i32 0, i32 1
  %1482 = bitcast %"class.std::__1::vector.132"* %41 to i8**
  %1483 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %41, i64 0, i32 0, i32 2, i32 0, i32 0
  %1484 = bitcast %struct.TermMatch** %1483 to i8**
  %1485 = bitcast %struct.TermMatch** %1481 to i64*
  %1486 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1487 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1486, i64 0, i32 1, i32 1
  %1488 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %41, i64 0, i32 0, i32 0
  %1489 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %1490 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1491 = bitcast %"class.std::__1::basic_string"* %39 to %"class.std::__1::allocator.7"*
  %1492 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %1493 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1494 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1493, i64 0, i32 1, i32 1
  %1495 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1496 = bitcast %"class.std::__1::basic_string"* %43 to i16*
  %1497 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1498 = bitcast %"class.std::__1::basic_string"* %43 to i8**
  %1499 = getelementptr inbounds [15 x i8], [15 x i8]* %44, i64 0, i64 0
  %1500 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1501 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1500, i64 0, i32 1, i32 1
  %1502 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  %1503 = bitcast i64* %1490 to i8*
  %1504 = getelementptr inbounds i8, i8* %1489, i64 23
  %1505 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1480 to i64*
  %1506 = bitcast %"class.std::__1::basic_string"* %39 to i8**
  %1507 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %1508 = bitcast %"class.std::__1::vector.33"* %40 to i8*
  %1509 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  br label %1510

1510:                                             ; preds = %1473, %1621
  %1511 = phi %"class.std::__1::basic_string"* [ %1468, %1473 ], [ %1622, %1621 ]
  %1512 = load i64, i64* %1469, align 8
  %1513 = load i64, i64* %1474, align 8
  %1514 = sub i64 %1512, %1513
  %1515 = sdiv exact i64 %1514, 1600
  %1516 = load i64, i64* %1475, align 8
  %1517 = icmp ult i64 %1515, %1516
  br i1 %1517, label %1542, label %1518

1518:                                             ; preds = %1621, %1510
  %1519 = load i8, i8* %1446, align 1
  br label %1520

1520:                                             ; preds = %1518, %1444
  %1521 = phi i8 [ %1519, %1518 ], [ %1461, %1444 ]
  %1522 = icmp slt i8 %1521, 0
  br i1 %1522, label %1523, label %1526

1523:                                             ; preds = %1520
  %1524 = bitcast %"class.std::__1::basic_string"* %35 to i8**
  %1525 = load i8*, i8** %1524, align 8
  call void @_ZdlPv(i8* %1525) #11
  br label %1526

1526:                                             ; preds = %1520, %1523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1366) #10
  %1527 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1528 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1527, i64 0, i32 1, i32 1
  %1529 = load i8, i8* %1528, align 1
  %1530 = icmp slt i8 %1529, 0
  br i1 %1530, label %1531, label %1534

1531:                                             ; preds = %1526
  %1532 = bitcast %"class.std::__1::basic_string"* %27 to i8**
  %1533 = load i8*, i8** %1532, align 8
  call void @_ZdlPv(i8* %1533) #11
  br label %1534

1534:                                             ; preds = %1526, %1531
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1175) #10
  %1535 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1536 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1535, i64 0, i32 1, i32 1
  %1537 = load i8, i8* %1536, align 1
  %1538 = icmp slt i8 %1537, 0
  br i1 %1538, label %1539, label %1640

1539:                                             ; preds = %1534
  %1540 = bitcast %"class.std::__1::basic_string"* %26 to i8**
  %1541 = load i8*, i8** %1540, align 8
  call void @_ZdlPv(i8* %1541) #11
  br label %1640

1542:                                             ; preds = %1510
  %1543 = bitcast %"class.std::__1::basic_string"* %1511 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1544 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1543, i64 0, i32 1, i32 1
  %1545 = load i8, i8* %1544, align 1
  %1546 = icmp slt i8 %1545, 0
  %1547 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1511, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1548 = load i16*, i16** %1547, align 8
  %1549 = bitcast %"class.std::__1::basic_string"* %1511 to i16*
  %1550 = select i1 %1546, i16* %1548, i16* %1549
  %1551 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1511, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1552 = load i64, i64* %1551, align 8
  %1553 = zext i8 %1545 to i64
  %1554 = select i1 %1546, i64 %1552, i64 %1553
  %1555 = load i8, i8* %1446, align 1
  %1556 = icmp slt i8 %1555, 0
  %1557 = load i16*, i16** %1367, align 8
  %1558 = select i1 %1556, i16* %1557, i16* %1449
  %1559 = load i64, i64* %1368, align 8
  %1560 = zext i8 %1555 to i64
  %1561 = select i1 %1556, i64 %1559, i64 %1560
  %1562 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %1550, i64 %1554, i16* %1558, i64 %1561, i32 1) #10
  br i1 %1562, label %1563, label %1621

1563:                                             ; preds = %1542
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1476) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1507, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %39, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.std::__1::basic_string"* dereferenceable(24) %1511)
  %1564 = call i8* @_Znwm(i64 24) #11
  %1565 = bitcast i8* %1564 to i32*
  store i32 0, i32* %1565, align 8
  %1566 = getelementptr inbounds i8, i8* %1564, i64 8
  %1567 = bitcast i8* %1566 to i64*
  store i64 0, i64* %1567, align 8
  %1568 = getelementptr inbounds i8, i8* %1564, i64 16
  %1569 = bitcast i8* %1568 to i64*
  store i64 %1466, i64* %1569, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1478) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1508, i8 -86, i64 24, i1 false)
  %1570 = call i8* @_Znwm(i64 24) #11
  store i8* %1570, i8** %1482, align 8
  %1571 = getelementptr inbounds i8, i8* %1570, i64 24
  store i8* %1571, i8** %1484, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1570, i8* nonnull align 8 %1564, i64 24, i1 false) #10
  %1572 = ptrtoint i8* %1571 to i64
  store i64 %1572, i64* %1485, align 8
  %1573 = load i8, i8* %1487, align 1
  %1574 = icmp slt i8 %1573, 0
  %1575 = load i64, i64* %1477, align 8
  %1576 = zext i8 %1573 to i64
  %1577 = select i1 %1574, i64 %1575, i64 %1576
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* nonnull sret %40, %"class.std::__1::vector.132"* nonnull %41, i64 %1577, i32 3, i32 1) #10
  %1578 = load %struct.TermMatch*, %struct.TermMatch** %1488, align 8
  %1579 = icmp eq %struct.TermMatch* %1578, null
  br i1 %1579, label %1583, label %1580

1580:                                             ; preds = %1563
  %1581 = ptrtoint %struct.TermMatch* %1578 to i64
  store i64 %1581, i64* %1485, align 8
  %1582 = bitcast %struct.TermMatch* %1578 to i8*
  call void @_ZdlPv(i8* %1582) #11
  br label %1583

1583:                                             ; preds = %1563, %1580
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1489) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1509, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %42, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39, i64 %1466, i64 -1, %"class.std::__1::allocator.7"* nonnull dereferenceable(1) %1491) #10
  br i1 %1125, label %1584, label %1604

1584:                                             ; preds = %1583
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1492) #10
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %43, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39, i64 %1466, i64 -1, %"class.std::__1::allocator.7"* nonnull dereferenceable(1) %1491) #10
  %1585 = load i8, i8* %1494, align 1
  %1586 = load i16*, i16** %1495, align 8
  %1587 = load i64, i64* %1497, align 8
  %1588 = zext i8 %1585 to i64
  %1589 = icmp slt i8 %1585, 0
  %1590 = select i1 %1589, i16* %1586, i16* %1496
  %1591 = select i1 %1589, i64 %1587, i64 %1588
  %1592 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %1590, i64 %1591, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1, i32 1) #10
  %1593 = load i8, i8* %1494, align 1
  %1594 = icmp slt i8 %1593, 0
  br i1 %1594, label %1595, label %1597

1595:                                             ; preds = %1584
  %1596 = load i8*, i8** %1498, align 8
  call void @_ZdlPv(i8* %1596) #11
  br label %1597

1597:                                             ; preds = %1595, %1584
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1492) #10
  br i1 %1592, label %1604, label %1598

1598:                                             ; preds = %1597
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1499)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1499, i8 0, i64 15, i1 false)
  %1599 = load i8, i8* %1501, align 1
  %1600 = icmp slt i8 %1599, 0
  br i1 %1600, label %1601, label %1603

1601:                                             ; preds = %1598
  %1602 = load i8*, i8** %1502, align 8
  call void @_ZdlPv(i8* %1602) #11
  br label %1603

1603:                                             ; preds = %1601, %1598
  store i8* null, i8** %1502, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1503, i8* nonnull align 8 %1499, i64 15, i1 false)
  store i8 0, i8* %1504, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1499)
  br label %1604

1604:                                             ; preds = %1597, %1583, %1603
  call void @_ZN15BuiltinProvider8AddMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS0_6vectorIN17AutocompleteMatch21ACMatchClassificationENS4_ISB_EEEE(%class.BuiltinProvider* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %42, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %40)
  %1605 = load i8, i8* %1501, align 1
  %1606 = icmp slt i8 %1605, 0
  br i1 %1606, label %1607, label %1609

1607:                                             ; preds = %1604
  %1608 = load i8*, i8** %1502, align 8
  call void @_ZdlPv(i8* %1608) #11
  br label %1609

1609:                                             ; preds = %1604, %1607
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1489) #10
  %1610 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %1479, align 8
  %1611 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %1610, null
  br i1 %1611, label %1615, label %1612

1612:                                             ; preds = %1609
  %1613 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %1610 to i64
  store i64 %1613, i64* %1505, align 8
  %1614 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1610 to i8*
  call void @_ZdlPv(i8* %1614) #11
  br label %1615

1615:                                             ; preds = %1609, %1612
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1478) #10
  call void @_ZdlPv(i8* nonnull %1564) #11
  %1616 = load i8, i8* %1487, align 1
  %1617 = icmp slt i8 %1616, 0
  br i1 %1617, label %1618, label %1620

1618:                                             ; preds = %1615
  %1619 = load i8*, i8** %1506, align 8
  call void @_ZdlPv(i8* %1619) #11
  br label %1620

1620:                                             ; preds = %1615, %1618
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1476) #10
  br label %1621

1621:                                             ; preds = %1542, %1620
  %1622 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1511, i64 1
  %1623 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1470, align 8
  %1624 = icmp eq %"class.std::__1::basic_string"* %1622, %1623
  br i1 %1624, label %1518, label %1510

1625:                                             ; preds = %1148
  %1626 = load i8, i8* %1133, align 1
  %1627 = icmp slt i8 %1626, 0
  br i1 %1627, label %1628, label %1640

1628:                                             ; preds = %1625
  %1629 = load i8*, i8** %1136, align 8
  call void @_ZdlPv(i8* %1629) #11
  br label %1640

1630:                                             ; preds = %1144
  %1631 = load i8, i8* %1133, align 1
  %1632 = icmp slt i8 %1631, 0
  br i1 %1632, label %1633, label %1640

1633:                                             ; preds = %1630
  %1634 = load i8*, i8** %1136, align 8
  call void @_ZdlPv(i8* %1634) #11
  br label %1640

1635:                                             ; preds = %1117
  %1636 = load i8, i8* %1133, align 1
  %1637 = icmp slt i8 %1636, 0
  br i1 %1637, label %1638, label %1640

1638:                                             ; preds = %1635
  %1639 = load i8*, i8** %1136, align 8
  call void @_ZdlPv(i8* %1639) #11
  br label %1640

1640:                                             ; preds = %1638, %1635, %1633, %1630, %1628, %1625, %1539, %1534
  %1641 = phi i8* [ %1162, %1534 ], [ %1162, %1539 ], [ %1126, %1625 ], [ %1126, %1628 ], [ %1126, %1630 ], [ %1126, %1633 ], [ %1126, %1635 ], [ %1126, %1638 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1641) #10
  br label %1642

1642:                                             ; preds = %1640, %1160
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %1092) #10
  br label %1643

1643:                                             ; preds = %1642, %899
  %1644 = bitcast %struct.AutocompleteMatch** %49 to i64*
  %1645 = load i64, i64* %1644, align 8
  %1646 = bitcast %"class.std::__1::vector"* %46 to i64*
  %1647 = load i64, i64* %1646, align 8
  %1648 = sub i64 %1645, %1647
  %1649 = icmp eq i64 %1648, 0
  br i1 %1649, label %1652, label %1650

1650:                                             ; preds = %1643
  %1651 = sdiv exact i64 %1648, 1600
  br label %1657

1652:                                             ; preds = %1657, %1643
  %1653 = bitcast i64* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1653) #10
  store i64 -6148914691236517206, i64* %45, align 8
  %1654 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  %1655 = load i8, i8* %1654, align 8, !range !71
  %1656 = icmp eq i8 %1655, 0
  br i1 %1656, label %1672, label %1698

1657:                                             ; preds = %1650, %1657
  %1658 = phi i64 [ %1668, %1657 ], [ %1647, %1650 ]
  %1659 = phi i64 [ %1670, %1657 ], [ %1651, %1650 ]
  %1660 = phi i64 [ %1662, %1657 ], [ 0, %1650 ]
  %1661 = inttoptr i64 %1658 to %struct.AutocompleteMatch*
  %1662 = add nuw i64 %1660, 1
  %1663 = sub i64 859, %1660
  %1664 = add i64 %1663, %1659
  %1665 = trunc i64 %1664 to i32
  %1666 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1661, i64 %1660, i32 1
  store i32 %1665, i32* %1666, align 8
  %1667 = load i64, i64* %1644, align 8
  %1668 = load i64, i64* %1646, align 8
  %1669 = sub i64 %1667, %1668
  %1670 = sdiv exact i64 %1669, 1600
  %1671 = icmp ult i64 %1662, %1670
  br i1 %1671, label %1657, label %1652

1672:                                             ; preds = %1652
  %1673 = load i8, i8* %522, align 1
  %1674 = icmp slt i8 %1673, 0
  %1675 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1676 = load i64, i64* %1675, align 8
  %1677 = zext i8 %1673 to i64
  %1678 = select i1 %1674, i64 %1676, i64 %1677
  %1679 = icmp eq i64 %1678, 0
  br i1 %1679, label %1690, label %1680

1680:                                             ; preds = %1672
  %1681 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1682 = load i16*, i16** %1681, align 8
  %1683 = bitcast %class.AutocompleteInput* %1 to i16*
  %1684 = select i1 %1674, i16* %1682, i16* %1683
  %1685 = getelementptr inbounds i16, i16* %1684, i64 %1678
  %1686 = getelementptr inbounds i16, i16* %1685, i64 -1
  %1687 = load i16, i16* %1686, align 2
  %1688 = zext i16 %1687 to i32
  %1689 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %1688) #10
  br i1 %1689, label %1698, label %1690

1690:                                             ; preds = %1680, %1672
  %1691 = call zeroext i1 @_ZNK15BuiltinProvider27HasMatchThatShouldBeDefaultEPm(%class.BuiltinProvider* %0, i64* nonnull %45)
  br i1 %1691, label %1692, label %1698

1692:                                             ; preds = %1690
  %1693 = load i64, i64* %45, align 8
  %1694 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %47, align 8
  %1695 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1694, i64 %1693, i32 1
  store i32 1250, i32* %1695, align 8
  %1696 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %47, align 8
  %1697 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1696, i64 %1693, i32 10
  store i8 1, i8* %1697, align 8
  br label %1698

1698:                                             ; preds = %1680, %1652, %1692, %1690
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1653) #10
  %1699 = load i8, i8* %713, align 1
  %1700 = icmp slt i8 %1699, 0
  br i1 %1700, label %1701, label %1704

1701:                                             ; preds = %1698
  %1702 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %1703 = load i8*, i8** %1702, align 8
  call void @_ZdlPv(i8* %1703) #11
  br label %1704

1704:                                             ; preds = %1698, %1701
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %517) #10
  %1705 = load i8, i8* %703, align 1
  %1706 = icmp slt i8 %1705, 0
  br i1 %1706, label %1707, label %1710

1707:                                             ; preds = %1704
  %1708 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %1709 = load i8*, i8** %1708, align 8
  call void @_ZdlPv(i8* %1709) #11
  br label %1710

1710:                                             ; preds = %1704, %1707
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #10
  %1711 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1712 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1711, i64 0, i32 1, i32 1
  %1713 = load i8, i8* %1712, align 1
  %1714 = icmp slt i8 %1713, 0
  br i1 %1714, label %1715, label %1718

1715:                                             ; preds = %1710
  %1716 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %1717 = load i8*, i8** %1716, align 8
  call void @_ZdlPv(i8* %1717) #11
  br label %1718

1718:                                             ; preds = %1710, %1715
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  br label %1719

1719:                                             ; preds = %60, %60, %56, %1718
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* sret, %"class.std::__1::vector.132"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15BuiltinProvider8AddMatchERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RKNS0_6vectorIN17AutocompleteMatch21ACMatchClassificationENS4_ISB_EEEE(%class.BuiltinProvider*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.33"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.AutocompleteMatch, align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %struct.AutocompleteMatch* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 1600, i1 false)
  %8 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0
  call void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch* nonnull %5, %class.AutocompleteProvider* %8, i32 860, i1 zeroext false, i32 5) #10
  %9 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %5, i64 0, i32 4
  %10 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %11 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %5, i64 0, i32 6
  %12 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %13 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %6, i16* %21, i64 %25) #10
  %26 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %5, i64 0, i32 11
  %27 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %26, %class.GURL* nonnull dereferenceable(120) %6) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #10
  %28 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %5, i64 0, i32 17
  %29 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %30 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %5, i64 0, i32 18
  %31 = icmp eq %"class.std::__1::vector.33"* %30, %3
  br i1 %31, label %37, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 0
  %34 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 1
  %36 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %35, align 8
  call void @_ZNSt3__16vectorIN17AutocompleteMatch21ACMatchClassificationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.33"* %30, %"struct.AutocompleteMatch::ACMatchClassification"* %34, %"struct.AutocompleteMatch::ACMatchClassification"* %36) #10
  br label %37

37:                                               ; preds = %4, %32
  %38 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %39 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %38, align 8
  %40 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %41 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %40, align 8
  %42 = icmp eq %struct.AutocompleteMatch* %39, %41
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  call void @_ZN17AutocompleteMatchC1ERKS_(%struct.AutocompleteMatch* %39, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %5) #10
  %44 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %39, i64 1
  %45 = ptrtoint %struct.AutocompleteMatch* %44 to i64
  %46 = bitcast %struct.AutocompleteMatch** %38 to i64*
  store i64 %45, i64* %46, align 8
  br label %49

47:                                               ; preds = %37
  %48 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3
  call void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %48, %struct.AutocompleteMatch* nonnull dereferenceable(1600) %5) #10
  br label %49

49:                                               ; preds = %43, %47
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN13url_formatter8FixupURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.GURL* sret, %"class.std::__1::basic_string.21"* dereferenceable(24), %"class.std::__1::basic_string.21"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.21"* sret, i16*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #13
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #11
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !72
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !72
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !75, !noalias !72
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !75, !noalias !72
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !72
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !72
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !75, !noalias !72
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !75, !noalias !72
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !72
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !72
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !75, !noalias !72
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !75, !noalias !72
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !72
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !72
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !75, !noalias !72
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !75, !noalias !72
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !77

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !72
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !72
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !75, !noalias !72
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !75, !noalias !72
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !78

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !79

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !80

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !81
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !81
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !84, !noalias !81
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !84, !noalias !81
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !81
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !81
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !84, !noalias !81
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !84, !noalias !81
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !81
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !81
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !84, !noalias !81
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !84, !noalias !81
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !81
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !81
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !84, !noalias !81
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !84, !noalias !81
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !86

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !81
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !81
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !84, !noalias !81
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !84, !noalias !81
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !87

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !88

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !89

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #10
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15BuiltinProvider27HasMatchThatShouldBeDefaultEPm(%class.BuiltinProvider* nocapture readonly, i64* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3
  %4 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %5 = bitcast %struct.AutocompleteMatch** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 1600
  %11 = inttoptr i64 %8 to %struct.AutocompleteMatch*
  switch i64 %10, label %12 [
    i64 0, label %117
    i64 1, label %14
  ]

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 1
  br i1 %13, label %47, label %30

14:                                               ; preds = %2
  store i64 0, i64* %1, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %16 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %15, align 8
  %17 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %16, i64 0, i32 6
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %16, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %14
  %26 = zext i8 %20 to i64
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i64 [ %24, %22 ], [ %26, %25 ]
  %29 = icmp ne i64 %28, 0
  br label %117

30:                                               ; preds = %72, %12
  %31 = phi i64 [ 0, %12 ], [ %75, %72 ]
  %32 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %31, i32 6
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %31, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  br label %42

40:                                               ; preds = %30
  %41 = zext i8 %35 to i64
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i64 [ %39, %37 ], [ %41, %40 ]
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %117, label %45

45:                                               ; preds = %42
  %46 = icmp eq i64 %6, %8
  br i1 %46, label %116, label %85

47:                                               ; preds = %12, %72
  %48 = phi i64 [ %76, %72 ], [ 1, %12 ]
  %49 = phi i64 [ %75, %72 ], [ 0, %12 ]
  %50 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %48, i32 17
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %48, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  br label %60

58:                                               ; preds = %47
  %59 = zext i8 %53 to i64
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi i64 [ %57, %55 ], [ %59, %58 ]
  %62 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %49, i32 17
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %11, i64 %49, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  br label %72

70:                                               ; preds = %60
  %71 = zext i8 %65 to i64
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i64 [ %69, %67 ], [ %71, %70 ]
  %74 = icmp ult i64 %61, %73
  %75 = select i1 %74, i64 %48, i64 %49
  %76 = add nuw i64 %48, 1
  %77 = icmp eq i64 %76, %10
  br i1 %77, label %30, label %47

78:                                               ; preds = %85
  %79 = load i64, i64* %5, align 8
  %80 = load i64, i64* %7, align 8
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 1600
  %83 = icmp ult i64 %115, %82
  %84 = inttoptr i64 %80 to %struct.AutocompleteMatch*
  br i1 %83, label %85, label %116

85:                                               ; preds = %45, %78
  %86 = phi %struct.AutocompleteMatch* [ %84, %78 ], [ %11, %45 ]
  %87 = phi i64 [ %115, %78 ], [ 0, %45 ]
  %88 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %86, i64 %87, i32 17
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i16*, i16** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %88 to i16*
  %96 = select i1 %92, i16* %94, i16* %95
  %97 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %86, i64 %87, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %91 to i64
  %100 = select i1 %92, i64 %98, i64 %99
  %101 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %86, i64 %31, i32 17
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i16*, i16** %106, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %101 to i16*
  %109 = select i1 %105, i16* %107, i16* %108
  %110 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %86, i64 %31, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = zext i8 %104 to i64
  %113 = select i1 %105, i64 %111, i64 %112
  %114 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %96, i64 %100, i16* %109, i64 %113, i32 1) #10
  %115 = add nuw i64 %87, 1
  br i1 %114, label %78, label %117

116:                                              ; preds = %78, %45
  store i64 %31, i64* %1, align 8
  br label %117

117:                                              ; preds = %85, %2, %116, %42, %27
  %118 = phi i1 [ %29, %27 ], [ false, %2 ], [ true, %116 ], [ false, %42 ], [ false, %85 ]
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15BuiltinProviderD2Ev(%class.BuiltinProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15BuiltinProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.2"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider* %30) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15BuiltinProviderD0Ev(%class.BuiltinProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15BuiltinProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.2"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %class.BuiltinProvider, %class.BuiltinProvider* %0, i64 0, i32 0
  tail call void @_ZN20AutocompleteProviderD2Ev(%class.AutocompleteProvider* %30) #10
  %31 = bitcast %class.BuiltinProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch*, %class.AutocompleteProvider*, i32, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !90
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !90
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !93, !noalias !90
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !93, !noalias !90
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !90
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !90
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !93, !noalias !90
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !93, !noalias !90
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !90
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !90
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !93, !noalias !90
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !93, !noalias !90
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !90
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !90
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !93, !noalias !90
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !93, !noalias !90
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !95

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !90
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !90
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !93, !noalias !90
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !93, !noalias !90
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !96

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !97

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !98

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !99
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !99
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !102, !noalias !99
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !102, !noalias !99
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !99
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !99
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !102, !noalias !99
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !102, !noalias !99
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !99
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !99
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !102, !noalias !99
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !102, !noalias !99
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !99
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !99
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !102, !noalias !99
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !102, !noalias !99
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !104

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !99
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !99
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !102, !noalias !99
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !102, !noalias !99
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !105

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !106

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !107

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !108
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !108
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !111, !noalias !108
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !111, !noalias !108
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !108
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !108
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !111, !noalias !108
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !111, !noalias !108
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !108
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !108
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !111, !noalias !108
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !111, !noalias !108
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !108
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !108
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !111, !noalias !108
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !111, !noalias !108
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !113

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !108
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !108
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !111, !noalias !108
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !111, !noalias !108
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !114

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !115

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !116

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch*) unnamed_addr #4

declare void @_ZN20AutocompleteProvider4StopEbb(%class.AutocompleteProvider*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN20AutocompleteProvider11DeleteMatchERK17AutocompleteMatch(%class.AutocompleteProvider*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #1

declare void @_ZNK20AutocompleteProvider15AddProviderInfoEPNSt3__16vectorIN7metrics30OmniboxEventProto_ProviderInfoENS0_9allocatorIS3_EEEE(%class.AutocompleteProvider*, %"class.std::__1::vector.140"*) unnamed_addr #1

declare void @_ZN20AutocompleteProvider12ResetSessionEv(%class.AutocompleteProvider*) unnamed_addr #1

declare i64 @_ZNK20AutocompleteProvider19EstimateMemoryUsageEv(%class.AutocompleteProvider*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"*, %"class.std::__1::basic_string.21"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.28"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !117
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !117
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !120, !noalias !117
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !120, !noalias !117
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !117
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !117
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !120, !noalias !117
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !120, !noalias !117
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !117
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !117
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !120, !noalias !117
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !120, !noalias !117
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !117
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !117
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !120, !noalias !117
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !120, !noalias !117
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !122

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !117
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !117
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !120, !noalias !117
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !120, !noalias !117
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !123

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !124

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !125

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !126

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !127

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !128

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !130
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !130
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !133, !noalias !130
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !133, !noalias !130
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !130
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !130
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !133, !noalias !130
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !133, !noalias !130
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !130
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !130
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !133, !noalias !130
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !133, !noalias !130
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !130
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !130
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !133, !noalias !130
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !133, !noalias !130
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !135

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !130
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !130
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !133, !noalias !130
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !133, !noalias !130
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !136

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !137

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !138

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #13
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #11
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !139
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !139
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !142, !noalias !139
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !142, !noalias !139
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !139
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !139
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !142, !noalias !139
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !142, !noalias !139
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !139
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !139
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !142, !noalias !139
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !142, !noalias !139
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !139
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !139
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !142, !noalias !139
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !142, !noalias !139
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !144

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !139
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !139
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !142, !noalias !139
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !142, !noalias !139
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !145

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !146

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !147

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.21"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN17AutocompleteMatch21ACMatchClassificationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.33"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %2 to i64
  %5 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.AutocompleteMatch::ACMatchClassification"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %1, i64 %22
  %25 = select i1 %23, %"struct.AutocompleteMatch::ACMatchClassification"* %24, %"struct.AutocompleteMatch::ACMatchClassification"* %2
  %26 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to %"struct.AutocompleteMatch::ACMatchClassification"*
  %43 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %42, i64 %39
  %44 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %16, i64 %28
  store %"struct.AutocompleteMatch::ACMatchClassification"* %48, %"struct.AutocompleteMatch::ACMatchClassification"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  %55 = bitcast %"class.std::__1::vector.33"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to %"struct.AutocompleteMatch::ACMatchClassification"*
  %76 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.33"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %75, i64 %72
  store %"struct.AutocompleteMatch::ACMatchClassification"* %79, %"struct.AutocompleteMatch::ACMatchClassification"** %8, align 8
  %80 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds %"struct.AutocompleteMatch::ACMatchClassification", %"struct.AutocompleteMatch::ACMatchClassification"* %75, i64 %84
  %87 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17AutocompleteMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"*, %struct.AutocompleteMatch* dereferenceable(1600)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.AutocompleteMatch** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 1600
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 11529215046068469
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.AutocompleteMatch** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 1600
  %20 = icmp ult i64 %19, 5764607523034234
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 11529215046068469, %14 ]
  %28 = mul i64 %27, 1600
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %struct.AutocompleteMatch*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.AutocompleteMatch* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %9
  %35 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %33, i64 %32
  %36 = ptrtoint %struct.AutocompleteMatch* %35 to i64
  tail call void @_ZN17AutocompleteMatchC1ERKS_(%struct.AutocompleteMatch* %34, %struct.AutocompleteMatch* dereferenceable(1600) %1) #10
  %37 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %34, i64 1
  %38 = ptrtoint %struct.AutocompleteMatch* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %39, align 8
  %41 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  %42 = icmp eq %struct.AutocompleteMatch* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.AutocompleteMatch* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.AutocompleteMatch* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.AutocompleteMatch* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %46, i64 -1
  %49 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %47, i64 -1
  tail call void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch* %48, %struct.AutocompleteMatch* dereferenceable(1600) %49) #10
  %50 = icmp eq %struct.AutocompleteMatch* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.AutocompleteMatch*, %struct.AutocompleteMatch** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.AutocompleteMatch* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.AutocompleteMatch* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.AutocompleteMatch* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.AutocompleteMatch*
  %60 = icmp eq %struct.AutocompleteMatch* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.AutocompleteMatch* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %62, i64 -1
  tail call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* %63) #10
  %64 = icmp eq %struct.AutocompleteMatch* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN17AutocompleteMatchC1ERKS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchC1EOS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = !{!3, !6}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = !{!18, !21}
!26 = distinct !{!26, !12}
!27 = distinct !{!27, !14}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !12}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !12}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !14}
!38 = distinct !{!38, !12}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !12}
!45 = distinct !{!45, !14}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !12}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!50 = distinct !{!50, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!51 = distinct !{!51, !52, !"_ZNK4GURL4hostEv: argument 0"}
!52 = distinct !{!52, !"_ZNK4GURL4hostEv"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!55 = distinct !{!55, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!56 = distinct !{!56, !57, !"_ZNK4GURL4pathEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4GURL4pathEv"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!60 = distinct !{!60, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!61 = distinct !{!61, !62, !"_ZNK4GURL4hostEv: argument 0"}
!62 = distinct !{!62, !"_ZNK4GURL4hostEv"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!65 = distinct !{!65, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!66 = distinct !{!66, !67, !"_ZNK4GURL4pathEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4GURL4pathEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!71 = !{i8 0, i8 2}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !12}
!78 = distinct !{!78, !14}
!79 = distinct !{!79, !14}
!80 = distinct !{!80, !12}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !12}
!87 = distinct !{!87, !14}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !12}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !12}
!96 = distinct !{!96, !14}
!97 = distinct !{!97, !14}
!98 = distinct !{!98, !12}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !12}
!105 = distinct !{!105, !14}
!106 = distinct !{!106, !14}
!107 = distinct !{!107, !12}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !12}
!114 = distinct !{!114, !14}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !12}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !12}
!123 = distinct !{!123, !14}
!124 = distinct !{!124, !14}
!125 = distinct !{!125, !12}
!126 = distinct !{!126, !12}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !129, !12}
!129 = !{!"llvm.loop.unroll.runtime.disable"}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !12}
!136 = distinct !{!136, !14}
!137 = distinct !{!137, !14}
!138 = distinct !{!138, !12}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !12}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14}
!147 = distinct !{!147, !12}
