; ModuleID = '../../third_party/skia/src/core/SkEdgeBuilder.cpp'
source_filename = "../../third_party/skia/src/core/SkEdgeBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBasicEdgeBuilder = type <{ %class.SkEdgeBuilder, i32, [4 x i8] }>
%class.SkEdgeBuilder = type { i32 (...)**, i8**, %class.SkTDArray, %class.SkSTArenaAlloc }
%class.SkTDArray = type { i8**, i32, i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [512 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%class.SkAnalyticEdgeBuilder = type { %class.SkEdgeBuilder }
%struct.SkAnalyticEdge = type { %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkPoint = type { float, float }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkAnalyticQuadraticEdge = type { %struct.SkAnalyticEdge, %struct.SkQuadraticEdge, i32, i32 }
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkAnalyticCubicEdge = type <{ %struct.SkAnalyticEdge, %struct.SkCubicEdge, i32, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray.1, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray.1 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.SkPathEdgeIter = type <{ i8*, i8*, %struct.SkPoint*, %struct.SkPoint*, float*, [2 x %struct.SkPoint], i8, i8, [6 x i8] }>
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%class.SkAutoConicToQuads = type <{ %class.SkAutoSTMalloc, i32, [4 x i8] }>
%class.SkAutoSTMalloc = type { %struct.SkPoint*, %union.anon }
%union.anon = type { [34 x i32] }
%struct.Rec = type { %class.SkEdgeBuilder*, i8 }
%class.SkEdgeClipper = type <{ %struct.SkPoint*, i32*, i8, [3 x i8], [54 x %struct.SkPoint], [18 x i32], [4 x i8] }>

$_ZN13SkEdgeBuilderD2Ev = comdat any

$_ZN18SkBasicEdgeBuilderD0Ev = comdat any

$_ZN21SkAnalyticEdgeBuilderD0Ev = comdat any

$_ZN13SkEdgeBuilderD0Ev = comdat any

$_ZZN10SkPathPriv9PtsInIterEjE10gPtsInVerb = comdat any

$_ZTV13SkEdgeBuilder = comdat any

@_ZTV18SkBasicEdgeBuilder = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkBasicEdgeBuilder*)* @_ZN18SkBasicEdgeBuilderD0Ev to i8*), i8* bitcast (i8* (%class.SkBasicEdgeBuilder*, i64, i64*)* @_ZN18SkBasicEdgeBuilder10allocEdgesEmPm to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkBasicEdgeBuilder*, %struct.SkIRect*)* @_ZNK18SkBasicEdgeBuilder11recoverClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkBasicEdgeBuilder*, %struct.SkPoint*)* @_ZN18SkBasicEdgeBuilder7addLineEPK7SkPoint to i8*), i8* bitcast (void (%class.SkBasicEdgeBuilder*, %struct.SkPoint*)* @_ZN18SkBasicEdgeBuilder7addQuadEPK7SkPoint to i8*), i8* bitcast (void (%class.SkBasicEdgeBuilder*, %struct.SkPoint*)* @_ZN18SkBasicEdgeBuilder8addCubicEPK7SkPoint to i8*), i8* bitcast (i32 (%class.SkBasicEdgeBuilder*, %struct.SkPoint*, i8*, i8**)* @_ZN18SkBasicEdgeBuilder11addPolyLineEPK7SkPointPcPS3_ to i8*)] }, align 8
@_ZTV21SkAnalyticEdgeBuilder = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkAnalyticEdgeBuilder*)* @_ZN21SkAnalyticEdgeBuilderD0Ev to i8*), i8* bitcast (i8* (%class.SkAnalyticEdgeBuilder*, i64, i64*)* @_ZN21SkAnalyticEdgeBuilder10allocEdgesEmPm to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkAnalyticEdgeBuilder*, %struct.SkIRect*)* @_ZNK21SkAnalyticEdgeBuilder11recoverClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*)* @_ZN21SkAnalyticEdgeBuilder7addLineEPK7SkPoint to i8*), i8* bitcast (void (%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*)* @_ZN21SkAnalyticEdgeBuilder7addQuadEPK7SkPoint to i8*), i8* bitcast (void (%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*)* @_ZN21SkAnalyticEdgeBuilder8addCubicEPK7SkPoint to i8*), i8* bitcast (i32 (%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*, i8*, i8**)* @_ZN21SkAnalyticEdgeBuilder11addPolyLineEPK7SkPointPcPS3_ to i8*)] }, align 8
@_ZZN10SkPathPriv9PtsInIterEjE10gPtsInVerb = linkonce_odr hidden local_unnamed_addr constant [7 x i8] c"\01\02\03\03\04\00\00", comdat, align 1
@_ZTV13SkEdgeBuilder = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN18SkBasicEdgeBuilder15combineVerticalEPK6SkEdgePS0_(%class.SkBasicEdgeBuilder* nocapture readnone, %struct.SkEdge* nocapture readonly, %struct.SkEdge* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 6
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %68

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %68

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 9
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 9
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %23, label %39

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 1
  %27 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  %30 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  br i1 %29, label %32, label %33

32:                                               ; preds = %23
  store i32 %31, i32* %27, align 8
  br label %68

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, 1
  %37 = icmp eq i32 %31, %36
  br i1 %37, label %38, label %68

38:                                               ; preds = %33
  store i32 %25, i32* %34, align 4
  br label %68

39:                                               ; preds = %17
  %40 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %41, %43
  %45 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %1, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %2, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %44, label %50, label %59

50:                                               ; preds = %39
  br i1 %49, label %68, label %51

51:                                               ; preds = %50
  %52 = icmp slt i32 %46, %48
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = add nsw i32 %46, 1
  store i32 %54, i32* %42, align 8
  br label %68

55:                                               ; preds = %51
  %56 = add nsw i32 %48, 1
  store i32 %56, i32* %42, align 8
  %57 = load i32, i32* %45, align 4
  store i32 %57, i32* %47, align 4
  %58 = load i8, i8* %18, align 1
  store i8 %58, i8* %20, align 1
  br label %68

59:                                               ; preds = %39
  br i1 %49, label %60, label %68

60:                                               ; preds = %59
  %61 = icmp sgt i32 %41, %43
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = add nsw i32 %41, -1
  store i32 %63, i32* %47, align 4
  br label %68

64:                                               ; preds = %60
  %65 = add nsw i32 %43, -1
  store i32 %65, i32* %47, align 4
  %66 = load i32, i32* %40, align 8
  store i32 %66, i32* %42, align 8
  %67 = load i8, i8* %18, align 1
  store i8 %67, i8* %20, align 1
  br label %68

68:                                               ; preds = %59, %50, %33, %3, %7, %11, %64, %62, %55, %53, %38, %32
  %69 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %53 ], [ 1, %55 ], [ 1, %62 ], [ 1, %64 ], [ 0, %11 ], [ 0, %7 ], [ 0, %3 ], [ 0, %33 ], [ 2, %50 ], [ 0, %59 ]
  ret i32 %69
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN21SkAnalyticEdgeBuilder15combineVerticalEPK14SkAnalyticEdgePS0_(%class.SkAnalyticEdgeBuilder* nocapture readnone, %struct.SkAnalyticEdge* nocapture readonly, %struct.SkAnalyticEdge* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 13
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %78

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %78

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %78

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 16
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 16
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %23, label %42

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 7
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  %29 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 7
  %30 = load i32, i32* %29, align 8
  br i1 %28, label %31, label %33

31:                                               ; preds = %23
  store i32 %30, i32* %26, align 8
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 6
  store i32 %30, i32* %32, align 4
  br label %78

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %30, %35
  %37 = icmp slt i32 %36, 0
  %38 = sub nsw i32 0, %36
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = icmp slt i32 %39, 256
  br i1 %40, label %41, label %78

41:                                               ; preds = %33
  store i32 %25, i32* %34, align 4
  br label %78

42:                                               ; preds = %17
  %43 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 7
  %46 = load i32, i32* %45, align 8
  %47 = sub nsw i32 %44, %46
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp slt i32 %50, 256
  %52 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 8
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 8
  %55 = load i32, i32* %54, align 4
  %56 = sub nsw i32 %53, %55
  %57 = icmp slt i32 %56, 0
  %58 = sub nsw i32 0, %56
  %59 = select i1 %57, i32 %58, i32 %56
  %60 = icmp slt i32 %59, 256
  br i1 %51, label %61, label %70

61:                                               ; preds = %42
  br i1 %60, label %78, label %62

62:                                               ; preds = %61
  %63 = icmp slt i32 %53, %55
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  store i32 %53, i32* %45, align 8
  %65 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 6
  store i32 %53, i32* %65, align 4
  br label %78

66:                                               ; preds = %62
  store i32 %55, i32* %45, align 8
  %67 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 6
  store i32 %55, i32* %67, align 4
  %68 = load i32, i32* %52, align 4
  store i32 %68, i32* %54, align 4
  %69 = load i8, i8* %18, align 1
  store i8 %69, i8* %20, align 1
  br label %78

70:                                               ; preds = %42
  br i1 %60, label %71, label %78

71:                                               ; preds = %70
  %72 = icmp sgt i32 %44, %46
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  store i32 %44, i32* %54, align 4
  br label %78

74:                                               ; preds = %71
  store i32 %46, i32* %54, align 4
  %75 = load i32, i32* %43, align 8
  store i32 %75, i32* %45, align 8
  %76 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2, i64 0, i32 6
  store i32 %75, i32* %76, align 4
  %77 = load i8, i8* %18, align 1
  store i8 %77, i8* %20, align 1
  br label %78

78:                                               ; preds = %70, %61, %33, %3, %7, %11, %74, %73, %66, %64, %41, %31
  %79 = phi i32 [ 1, %31 ], [ 1, %41 ], [ 1, %64 ], [ 1, %66 ], [ 1, %73 ], [ 1, %74 ], [ 0, %11 ], [ 0, %7 ], [ 0, %3 ], [ 0, %33 ], [ 2, %61 ], [ 0, %70 ]
  ret i32 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBasicEdgeBuilder7addLineEPK7SkPoint(%class.SkBasicEdgeBuilder*, %struct.SkPoint* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 40
  %10 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 40, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 40
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 40, i1 false) #11
  %28 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 6
  %31 = shl i32 1, %30
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %34 = load float, float* %33, align 4
  %35 = fmul float %34, %32
  %36 = fptosi float %35 to i32
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %38 = load float, float* %37, align 4
  %39 = fmul float %38, %32
  %40 = fptosi float %39 to i32
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %42 = load float, float* %41, align 4
  %43 = fmul float %42, %32
  %44 = fptosi float %43 to i32
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, %32
  %48 = fptosi float %47 to i32
  %49 = icmp sgt i32 %40, %48
  %50 = select i1 %49, i32 %44, i32 %36
  %51 = select i1 %49, i32 %48, i32 %40
  %52 = select i1 %49, i32 %40, i32 %48
  %53 = select i1 %49, i8 -1, i8 1
  %54 = add nsw i32 %51, 32
  %55 = ashr i32 %54, 6
  %56 = add nsw i32 %52, 32
  %57 = ashr i32 %56, 6
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %152, label %59

59:                                               ; preds = %21
  %60 = select i1 %49, i32 %36, i32 %44
  %61 = sub nsw i32 %60, %50
  %62 = sub nsw i32 %52, %51
  %63 = add i32 %61, 32768
  %64 = icmp ult i32 %63, 65536
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = shl i32 %61, 16
  %67 = sdiv i32 %66, %62
  br label %78

68:                                               ; preds = %59
  %69 = sext i32 %61 to i64
  %70 = shl nsw i64 %69, 16
  %71 = sext i32 %62 to i64
  %72 = sdiv i64 %70, %71
  %73 = icmp slt i64 %72, 2147483647
  %74 = select i1 %73, i64 %72, i64 2147483647
  %75 = icmp sgt i64 %74, -2147483647
  %76 = select i1 %75, i64 %74, i64 -2147483647
  %77 = trunc i64 %76 to i32
  br label %78

78:                                               ; preds = %68, %65
  %79 = phi i32 [ %67, %65 ], [ %77, %68 ]
  %80 = and i32 %54, -64
  %81 = or i32 %80, 32
  %82 = sub nsw i32 %81, %51
  %83 = sext i32 %79 to i64
  %84 = sext i32 %82 to i64
  %85 = mul nsw i64 %83, %84
  %86 = lshr i64 %85, 16
  %87 = trunc i64 %86 to i32
  %88 = add nsw i32 %50, %87
  %89 = shl i32 %88, 10
  %90 = getelementptr inbounds i8, i8* %25, i64 16
  %91 = bitcast i8* %90 to i32*
  store i32 %89, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %25, i64 20
  %93 = bitcast i8* %92 to i32*
  store i32 %79, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %25, i64 24
  %95 = bitcast i8* %94 to i32*
  store i32 %55, i32* %95, align 8
  %96 = add nsw i32 %57, -1
  %97 = getelementptr inbounds i8, i8* %25, i64 28
  %98 = bitcast i8* %97 to i32*
  store i32 %96, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %25, i64 32
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds i8, i8* %25, i64 35
  store i8 %53, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %25, i64 33
  store i8 0, i8* %101, align 1
  %102 = icmp eq i32 %79, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %78
  %104 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %103
  %108 = add nsw i32 %105, -1
  %109 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 0
  %110 = load i8**, i8*** %109, align 8
  %111 = sext i32 %108 to i64
  %112 = getelementptr inbounds i8*, i8** %110, i64 %111
  %113 = bitcast i8** %112 to %struct.SkEdge**
  %114 = load %struct.SkEdge*, %struct.SkEdge** %113, align 8
  %115 = tail call i32 @_ZN18SkBasicEdgeBuilder15combineVerticalEPK6SkEdgePS0_(%class.SkBasicEdgeBuilder* undef, %struct.SkEdge* %27, %struct.SkEdge* %114)
  switch i32 %115, label %152 [
    i32 2, label %116
    i32 0, label %119
  ]

116:                                              ; preds = %107
  %117 = load i32, i32* %104, align 4
  %118 = add nsw i32 %117, -1
  store i32 %118, i32* %104, align 4
  br label %152

119:                                              ; preds = %78, %103, %107
  %120 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2
  %121 = ptrtoint i8* %25 to i64
  %122 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  %125 = icmp sgt i32 %124, -1
  br i1 %125, label %127, label %126

126:                                              ; preds = %119
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

127:                                              ; preds = %119
  %128 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp slt i32 %129, %124
  br i1 %130, label %134, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %120, i64 0, i32 0
  %133 = load i8**, i8*** %132, align 8
  br label %147

134:                                              ; preds = %127
  %135 = add i32 %123, 5
  %136 = lshr i32 %135, 2
  %137 = add nuw i32 %136, %135
  %138 = icmp sgt i32 %137, -1
  br i1 %138, label %140, label %139

139:                                              ; preds = %134
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

140:                                              ; preds = %134
  store i32 %137, i32* %128, align 8
  %141 = bitcast %class.SkTDArray* %120 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = sext i32 %137 to i64
  %144 = shl nsw i64 %143, 3
  %145 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %142, i64 %144) #11
  store i8* %145, i8** %141, align 8
  %146 = bitcast i8* %145 to i8**
  br label %147

147:                                              ; preds = %131, %140
  %148 = phi i8** [ %133, %131 ], [ %146, %140 ]
  store i32 %124, i32* %122, align 4
  %149 = sext i32 %123 to i64
  %150 = getelementptr inbounds i8*, i8** %148, i64 %149
  %151 = bitcast i8** %150 to i64*
  store i64 %121, i64* %151, align 8
  br label %152

152:                                              ; preds = %21, %116, %147, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkAnalyticEdgeBuilder7addLineEPK7SkPoint(%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 72
  %10 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 72, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 72
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkAnalyticEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 72, i1 false) #11
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %29 = tail call zeroext i1 @_ZN14SkAnalyticEdge7setLineERK7SkPointS2_(%struct.SkAnalyticEdge* %27, %struct.SkPoint* dereferenceable(8) %1, %struct.SkPoint* dereferenceable(8) %28) #11
  br i1 %29, label %30, label %88

30:                                               ; preds = %21
  %31 = getelementptr inbounds i8, i8* %25, i64 28
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %55

35:                                               ; preds = %30
  %36 = getelementptr inbounds i8, i8* %25, i64 64
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %39
  %44 = add nsw i32 %41, -1
  %45 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 0
  %46 = load i8**, i8*** %45, align 8
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds i8*, i8** %46, i64 %47
  %49 = bitcast i8** %48 to %struct.SkAnalyticEdge**
  %50 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %49, align 8
  %51 = tail call i32 @_ZN21SkAnalyticEdgeBuilder15combineVerticalEPK14SkAnalyticEdgePS0_(%class.SkAnalyticEdgeBuilder* undef, %struct.SkAnalyticEdge* %27, %struct.SkAnalyticEdge* %50)
  switch i32 %51, label %88 [
    i32 2, label %52
    i32 0, label %55
  ]

52:                                               ; preds = %43
  %53 = load i32, i32* %40, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %40, align 4
  br label %88

55:                                               ; preds = %30, %35, %39, %43
  %56 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2
  %57 = ptrtoint i8* %25 to i64
  %58 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  %61 = icmp sgt i32 %60, -1
  br i1 %61, label %63, label %62

62:                                               ; preds = %55
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

63:                                               ; preds = %55
  %64 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp slt i32 %65, %60
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %56, i64 0, i32 0
  %69 = load i8**, i8*** %68, align 8
  br label %83

70:                                               ; preds = %63
  %71 = add i32 %59, 5
  %72 = lshr i32 %71, 2
  %73 = add nuw i32 %72, %71
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

76:                                               ; preds = %70
  store i32 %73, i32* %64, align 8
  %77 = bitcast %class.SkTDArray* %56 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = sext i32 %73 to i64
  %80 = shl nsw i64 %79, 3
  %81 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %78, i64 %80) #11
  store i8* %81, i8** %77, align 8
  %82 = bitcast i8* %81 to i8**
  br label %83

83:                                               ; preds = %67, %76
  %84 = phi i8** [ %69, %67 ], [ %82, %76 ]
  store i32 %60, i32* %58, align 4
  %85 = sext i32 %59 to i64
  %86 = getelementptr inbounds i8*, i8** %84, i64 %85
  %87 = bitcast i8** %86 to i64*
  store i64 %57, i64* %87, align 8
  br label %88

88:                                               ; preds = %52, %83, %43, %21
  ret void
}

declare zeroext i1 @_ZN14SkAnalyticEdge7setLineERK7SkPointS2_(%struct.SkAnalyticEdge*, %struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBasicEdgeBuilder7addQuadEPK7SkPoint(%class.SkBasicEdgeBuilder*, %struct.SkPoint*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 72
  %10 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 72, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 72
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkQuadraticEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 72, i1 false) #11
  %28 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = tail call i32 @_ZN15SkQuadraticEdge12setQuadraticEPK7SkPointi(%struct.SkQuadraticEdge* %27, %struct.SkPoint* %1, i32 %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %65, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2
  %34 = ptrtoint i8* %25 to i64
  %35 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

40:                                               ; preds = %32
  %41 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %42, %37
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %33, i64 0, i32 0
  %46 = load i8**, i8*** %45, align 8
  br label %60

47:                                               ; preds = %40
  %48 = add i32 %36, 5
  %49 = lshr i32 %48, 2
  %50 = add nuw i32 %49, %48
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

53:                                               ; preds = %47
  store i32 %50, i32* %41, align 8
  %54 = bitcast %class.SkTDArray* %33 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = sext i32 %50 to i64
  %57 = shl nsw i64 %56, 3
  %58 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %55, i64 %57) #11
  store i8* %58, i8** %54, align 8
  %59 = bitcast i8* %58 to i8**
  br label %60

60:                                               ; preds = %44, %53
  %61 = phi i8** [ %46, %44 ], [ %59, %53 ]
  store i32 %37, i32* %35, align 4
  %62 = sext i32 %36 to i64
  %63 = getelementptr inbounds i8*, i8** %61, i64 %62
  %64 = bitcast i8** %63 to i64*
  store i64 %34, i64* %64, align 8
  br label %65

65:                                               ; preds = %21, %60
  ret void
}

declare i32 @_ZN15SkQuadraticEdge12setQuadraticEPK7SkPointi(%struct.SkQuadraticEdge*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkAnalyticEdgeBuilder7addQuadEPK7SkPoint(%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 152
  %10 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 152, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 152
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkAnalyticQuadraticEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 152, i1 false) #11
  %28 = tail call zeroext i1 @_ZN23SkAnalyticQuadraticEdge12setQuadraticEPK7SkPoint(%struct.SkAnalyticQuadraticEdge* %27, %struct.SkPoint* %1) #11
  br i1 %28, label %29, label %62

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2
  %31 = ptrtoint i8* %25 to i64
  %32 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %39, %34
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %30, i64 0, i32 0
  %43 = load i8**, i8*** %42, align 8
  br label %57

44:                                               ; preds = %37
  %45 = add i32 %33, 5
  %46 = lshr i32 %45, 2
  %47 = add nuw i32 %46, %45
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

50:                                               ; preds = %44
  store i32 %47, i32* %38, align 8
  %51 = bitcast %class.SkTDArray* %30 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = sext i32 %47 to i64
  %54 = shl nsw i64 %53, 3
  %55 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %52, i64 %54) #11
  store i8* %55, i8** %51, align 8
  %56 = bitcast i8* %55 to i8**
  br label %57

57:                                               ; preds = %41, %50
  %58 = phi i8** [ %43, %41 ], [ %56, %50 ]
  store i32 %34, i32* %32, align 4
  %59 = sext i32 %33 to i64
  %60 = getelementptr inbounds i8*, i8** %58, i64 %59
  %61 = bitcast i8** %60 to i64*
  store i64 %31, i64* %61, align 8
  br label %62

62:                                               ; preds = %57, %21
  ret void
}

declare zeroext i1 @_ZN23SkAnalyticQuadraticEdge12setQuadraticEPK7SkPoint(%struct.SkAnalyticQuadraticEdge*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBasicEdgeBuilder8addCubicEPK7SkPoint(%class.SkBasicEdgeBuilder*, %struct.SkPoint*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 80
  %10 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 80, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 80
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkCubicEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 80, i1 false) #11
  %28 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = tail call i32 @_ZN11SkCubicEdge8setCubicEPK7SkPointi(%struct.SkCubicEdge* %27, %struct.SkPoint* %1, i32 %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %65, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2
  %34 = ptrtoint i8* %25 to i64
  %35 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

40:                                               ; preds = %32
  %41 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %42, %37
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %33, i64 0, i32 0
  %46 = load i8**, i8*** %45, align 8
  br label %60

47:                                               ; preds = %40
  %48 = add i32 %36, 5
  %49 = lshr i32 %48, 2
  %50 = add nuw i32 %49, %48
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

53:                                               ; preds = %47
  store i32 %50, i32* %41, align 8
  %54 = bitcast %class.SkTDArray* %33 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = sext i32 %50 to i64
  %57 = shl nsw i64 %56, 3
  %58 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %55, i64 %57) #11
  store i8* %58, i8** %54, align 8
  %59 = bitcast i8* %58 to i8**
  br label %60

60:                                               ; preds = %44, %53
  %61 = phi i8** [ %46, %44 ], [ %59, %53 ]
  store i32 %37, i32* %35, align 4
  %62 = sext i32 %36 to i64
  %63 = getelementptr inbounds i8*, i8** %61, i64 %62
  %64 = bitcast i8** %63 to i64*
  store i64 %34, i64* %64, align 8
  br label %65

65:                                               ; preds = %21, %60
  ret void
}

declare i32 @_ZN11SkCubicEdge8setCubicEPK7SkPointi(%struct.SkCubicEdge*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkAnalyticEdgeBuilder8addCubicEPK7SkPoint(%class.SkAnalyticEdgeBuilder*, %struct.SkPoint*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 0, %6
  %8 = and i64 %7, 7
  %9 = or i64 %8, 160
  %10 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %6
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %17, i32 160, i32 8) #11
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 7
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i64 [ %18, %15 ], [ %6, %2 ]
  %23 = phi i64 [ %20, %15 ], [ %8, %2 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 160
  store i8* %26, i8** %4, align 8
  %27 = bitcast i8* %25 to %struct.SkAnalyticCubicEdge*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 160, i1 false) #11
  %28 = tail call zeroext i1 @_ZN19SkAnalyticCubicEdge8setCubicEPK7SkPointb(%struct.SkAnalyticCubicEdge* %27, %struct.SkPoint* %1, i1 zeroext true) #11
  br i1 %28, label %29, label %62

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2
  %31 = ptrtoint i8* %25 to i64
  %32 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %39, %34
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %30, i64 0, i32 0
  %43 = load i8**, i8*** %42, align 8
  br label %57

44:                                               ; preds = %37
  %45 = add i32 %33, 5
  %46 = lshr i32 %45, 2
  %47 = add nuw i32 %46, %45
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

50:                                               ; preds = %44
  store i32 %47, i32* %38, align 8
  %51 = bitcast %class.SkTDArray* %30 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = sext i32 %47 to i64
  %54 = shl nsw i64 %53, 3
  %55 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %52, i64 %54) #11
  store i8* %55, i8** %51, align 8
  %56 = bitcast i8* %55 to i8**
  br label %57

57:                                               ; preds = %41, %50
  %58 = phi i8** [ %43, %41 ], [ %56, %50 ]
  store i32 %34, i32* %32, align 4
  %59 = sext i32 %33 to i64
  %60 = getelementptr inbounds i8*, i8** %58, i64 %59
  %61 = bitcast i8** %60 to i64*
  store i64 %31, i64* %61, align 8
  br label %62

62:                                               ; preds = %57, %21
  ret void
}

declare zeroext i1 @_ZN19SkAnalyticCubicEdge8setCubicEPK7SkPointb(%struct.SkAnalyticCubicEdge*, %struct.SkPoint*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN18SkBasicEdgeBuilder11addPolyLineEPK7SkPointPcPS3_(%class.SkBasicEdgeBuilder* nocapture readonly, %struct.SkPoint* nocapture readonly, i8* nocapture, i8** readonly) unnamed_addr #0 align 2 {
  %5 = bitcast i8* %2 to %struct.SkEdge*
  %6 = bitcast i8** %3 to %struct.SkEdge**
  %7 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 6
  %10 = shl i32 1, %9
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %11
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, %11
  %19 = fptosi float %18 to i32
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, %11
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %25 = load float, float* %24, align 4
  %26 = fmul float %25, %11
  %27 = fptosi float %26 to i32
  %28 = icmp sgt i32 %19, %27
  %29 = select i1 %28, i32 %23, i32 %15
  %30 = select i1 %28, i32 %27, i32 %19
  %31 = select i1 %28, i32 %19, i32 %27
  %32 = select i1 %28, i8 -1, i8 1
  %33 = add nsw i32 %30, 32
  %34 = ashr i32 %33, 6
  %35 = add nsw i32 %31, 32
  %36 = ashr i32 %35, 6
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %92, label %38

38:                                               ; preds = %4
  %39 = select i1 %28, i32 %15, i32 %23
  %40 = sub nsw i32 %39, %29
  %41 = sub nsw i32 %31, %30
  %42 = add i32 %40, 32768
  %43 = icmp ult i32 %42, 65536
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = shl i32 %40, 16
  %46 = sdiv i32 %45, %41
  br label %57

47:                                               ; preds = %38
  %48 = sext i32 %40 to i64
  %49 = shl nsw i64 %48, 16
  %50 = sext i32 %41 to i64
  %51 = sdiv i64 %49, %50
  %52 = icmp slt i64 %51, 2147483647
  %53 = select i1 %52, i64 %51, i64 2147483647
  %54 = icmp sgt i64 %53, -2147483647
  %55 = select i1 %54, i64 %53, i64 -2147483647
  %56 = trunc i64 %55 to i32
  br label %57

57:                                               ; preds = %47, %44
  %58 = phi i32 [ %46, %44 ], [ %56, %47 ]
  %59 = and i32 %33, -64
  %60 = or i32 %59, 32
  %61 = sub nsw i32 %60, %30
  %62 = sext i32 %58 to i64
  %63 = sext i32 %61 to i64
  %64 = mul nsw i64 %62, %63
  %65 = lshr i64 %64, 16
  %66 = trunc i64 %65 to i32
  %67 = add nsw i32 %29, %66
  %68 = shl i32 %67, 10
  %69 = getelementptr inbounds i8, i8* %2, i64 16
  %70 = bitcast i8* %69 to i32*
  store i32 %68, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %2, i64 20
  %72 = bitcast i8* %71 to i32*
  store i32 %58, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %2, i64 24
  %74 = bitcast i8* %73 to i32*
  store i32 %34, i32* %74, align 8
  %75 = add nsw i32 %36, -1
  %76 = getelementptr inbounds i8, i8* %2, i64 28
  %77 = bitcast i8* %76 to i32*
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %2, i64 32
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds i8, i8* %2, i64 35
  store i8 %32, i8* %79, align 1
  %80 = getelementptr inbounds i8, i8* %2, i64 33
  store i8 0, i8* %80, align 1
  %81 = icmp eq i32 %58, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %57
  %83 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 1
  %84 = bitcast i8*** %83 to %struct.SkEdge***
  %85 = load %struct.SkEdge**, %struct.SkEdge*** %84, align 8
  %86 = icmp ult %struct.SkEdge** %85, %6
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds i8*, i8** %3, i64 -1
  %89 = bitcast i8** %88 to %struct.SkEdge**
  %90 = load %struct.SkEdge*, %struct.SkEdge** %89, align 8
  %91 = tail call i32 @_ZN18SkBasicEdgeBuilder15combineVerticalEPK6SkEdgePS0_(%class.SkBasicEdgeBuilder* undef, %struct.SkEdge* %5, %struct.SkEdge* %90)
  br label %92

92:                                               ; preds = %57, %4, %87, %82
  %93 = phi i32 [ %91, %87 ], [ 0, %82 ], [ 1, %4 ], [ 0, %57 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN21SkAnalyticEdgeBuilder11addPolyLineEPK7SkPointPcPS3_(%class.SkAnalyticEdgeBuilder* nocapture readonly, %struct.SkPoint*, i8*, i8** readonly) unnamed_addr #2 align 2 {
  %5 = bitcast i8* %2 to %struct.SkAnalyticEdge*
  %6 = bitcast i8** %3 to %struct.SkAnalyticEdge**
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %8 = tail call zeroext i1 @_ZN14SkAnalyticEdge7setLineERK7SkPointS2_(%struct.SkAnalyticEdge* %5, %struct.SkPoint* dereferenceable(8) %1, %struct.SkPoint* dereferenceable(8) %7) #11
  br i1 %8, label %9, label %28

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 28
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %2, i64 64
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 1
  %20 = bitcast i8*** %19 to %struct.SkAnalyticEdge***
  %21 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %20, align 8
  %22 = icmp ult %struct.SkAnalyticEdge** %21, %6
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8*, i8** %3, i64 -1
  %25 = bitcast i8** %24 to %struct.SkAnalyticEdge**
  %26 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %25, align 8
  %27 = tail call i32 @_ZN21SkAnalyticEdgeBuilder15combineVerticalEPK14SkAnalyticEdgePS0_(%class.SkAnalyticEdgeBuilder* undef, %struct.SkAnalyticEdge* %5, %struct.SkAnalyticEdge* %26)
  br label %28

28:                                               ; preds = %9, %4, %23, %18, %14
  %29 = phi i32 [ %27, %23 ], [ 0, %18 ], [ 0, %14 ], [ 1, %4 ], [ 0, %9 ]
  ret i32 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK18SkBasicEdgeBuilder11recoverClipERK7SkIRect(%class.SkBasicEdgeBuilder* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = ashr i32 %4, %6
  %8 = sitofp i32 %7 to float
  %9 = insertelement <2 x float> undef, float %8, i32 0
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = ashr i32 %11, %6
  %13 = sitofp i32 %12 to float
  %14 = insertelement <2 x float> %9, float %13, i32 1
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, %6
  %18 = sitofp i32 %17 to float
  %19 = insertelement <2 x float> undef, float %18, i32 0
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = ashr i32 %21, %6
  %23 = sitofp i32 %22 to float
  %24 = insertelement <2 x float> %19, float %23, i32 1
  %25 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %14, 0
  %26 = insertvalue { <2 x float>, <2 x float> } %25, <2 x float> %24, 1
  ret { <2 x float>, <2 x float> } %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK21SkAnalyticEdgeBuilder11recoverClipERK7SkIRect(%class.SkAnalyticEdgeBuilder* nocapture readnone, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  %6 = insertelement <2 x float> undef, float %5, i32 0
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to float
  %10 = insertelement <2 x float> %6, float %9, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = insertelement <2 x float> undef, float %13, i32 0
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = insertelement <2 x float> %14, float %17, i32 1
  %19 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %10, 0
  %20 = insertvalue { <2 x float>, <2 x float> } %19, <2 x float> %18, 1
  ret { <2 x float>, <2 x float> } %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN18SkBasicEdgeBuilder10allocEdgesEmPm(%class.SkBasicEdgeBuilder*, i64, i64* nocapture) unnamed_addr #2 align 2 {
  store i64 40, i64* %2, align 8
  %4 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %5 = bitcast i8* %4 to %class.SkArenaAlloc*
  %6 = icmp ult i64 %1, 4294967296
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i64 %1 to i32
  %10 = icmp ult i32 %9, 107374183
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @abort() #12
  unreachable

12:                                               ; preds = %8
  %13 = mul i32 %9, 40
  %14 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %15 = bitcast i8* %14 to i8**
  %16 = bitcast i8* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 0, %17
  %19 = and i64 %18, 7
  %20 = zext i32 %13 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %17
  %26 = icmp ugt i64 %21, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %12
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %5, i32 %13, i32 8) #11
  %28 = load i64, i64* %16, align 8
  %29 = sub i64 0, %28
  %30 = and i64 %29, 7
  br label %31

31:                                               ; preds = %12, %27
  %32 = phi i64 [ %28, %27 ], [ %17, %12 ]
  %33 = phi i64 [ %30, %27 ], [ %19, %12 ]
  %34 = inttoptr i64 %32 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = getelementptr inbounds i8, i8* %35, i64 %20
  store i8* %36, i8** %15, align 8
  ret i8* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN21SkAnalyticEdgeBuilder10allocEdgesEmPm(%class.SkAnalyticEdgeBuilder*, i64, i64* nocapture) unnamed_addr #2 align 2 {
  store i64 72, i64* %2, align 8
  %4 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %5 = bitcast i8* %4 to %class.SkArenaAlloc*
  %6 = icmp ult i64 %1, 4294967296
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %3
  %9 = trunc i64 %1 to i32
  %10 = icmp ult i32 %9, 59652324
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @abort() #12
  unreachable

12:                                               ; preds = %8
  %13 = mul i32 %9, 72
  %14 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 520
  %15 = bitcast i8* %14 to i8**
  %16 = bitcast i8* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 0, %17
  %19 = and i64 %18, 7
  %20 = zext i32 %13 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 528
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %17
  %26 = icmp ugt i64 %21, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %12
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %5, i32 %13, i32 8) #11
  %28 = load i64, i64* %16, align 8
  %29 = sub i64 0, %28
  %30 = and i64 %29, 7
  br label %31

31:                                               ; preds = %12, %27
  %32 = phi i64 [ %28, %27 ], [ %17, %12 ]
  %33 = phi i64 [ %30, %27 ], [ %19, %12 ]
  %34 = inttoptr i64 %32 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = getelementptr inbounds i8, i8* %35, i64 %20
  store i8* %36, i8** %15, align 8
  ret i8* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkEdgeBuilder9buildPolyERK6SkPathPK7SkIRectb(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %class.SkPathEdgeIter, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca [4 x %struct.SkPoint], align 16
  %10 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %1) #11
  %11 = sext i32 %10 to i64
  %12 = icmp ne %struct.SkIRect* %2, null
  br i1 %12, label %13, label %28

13:                                               ; preds = %4
  %14 = icmp slt i32 %10, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = mul nsw i64 %11, 3
  br label %28

17:                                               ; preds = %13
  %18 = and i64 %11, 4294967295
  %19 = mul nuw nsw i64 %18, 3
  %20 = lshr i64 %11, 32
  %21 = mul nuw nsw i64 %20, 3
  %22 = mul i64 %20, 12884901888
  %23 = add i64 %22, %19
  %24 = icmp uge i64 %23, %19
  %25 = and i64 %21, 12884901888
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %26, %24
  br i1 %27, label %28, label %303

28:                                               ; preds = %15, %17, %4
  %29 = phi i64 [ %11, %4 ], [ %16, %15 ], [ %23, %17 ]
  %30 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %31 = bitcast %class.SkEdgeBuilder* %0 to i8* (%class.SkEdgeBuilder*, i64, i64*)***
  %32 = load i8* (%class.SkEdgeBuilder*, i64, i64*)**, i8* (%class.SkEdgeBuilder*, i64, i64*)*** %31, align 8
  %33 = getelementptr inbounds i8* (%class.SkEdgeBuilder*, i64, i64*)*, i8* (%class.SkEdgeBuilder*, i64, i64*)** %32, i64 2
  %34 = load i8* (%class.SkEdgeBuilder*, i64, i64*)*, i8* (%class.SkEdgeBuilder*, i64, i64*)** %33, align 8
  %35 = call i8* %34(%class.SkEdgeBuilder* %0, i64 %29, i64* nonnull %5) #11
  %36 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 512
  %37 = bitcast i8* %36 to %class.SkArenaAlloc*
  %38 = icmp ult i64 %29, 4294967296
  br i1 %38, label %40, label %39

39:                                               ; preds = %28
  call void @abort() #12
  unreachable

40:                                               ; preds = %28
  %41 = trunc i64 %29 to i32
  %42 = icmp ult i32 %41, 536870912
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  call void @abort() #12
  unreachable

44:                                               ; preds = %40
  %45 = shl i64 %29, 3
  %46 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 520
  %47 = bitcast i8* %46 to i8**
  %48 = bitcast i8* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 0, %49
  %51 = and i64 %50, 7
  %52 = and i64 %45, 4294967288
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 528
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %56, %49
  %58 = icmp ugt i64 %53, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %44
  %60 = trunc i64 %45 to i32
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %37, i32 %60, i32 8) #11
  %61 = load i64, i64* %48, align 8
  %62 = sub i64 0, %61
  %63 = and i64 %62, 7
  br label %64

64:                                               ; preds = %44, %59
  %65 = phi i64 [ %61, %59 ], [ %49, %44 ]
  %66 = phi i64 [ %63, %59 ], [ %51, %44 ]
  %67 = inttoptr i64 %65 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  %69 = getelementptr inbounds i8, i8* %68, i64 %52
  store i8* %69, i8** %47, align 8
  %70 = bitcast i8* %68 to i8**
  %71 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 1
  %72 = bitcast i8*** %71 to i8**
  store i8* %68, i8** %72, align 8
  %73 = bitcast %class.SkPathEdgeIter* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %73) #11
  %74 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 0
  %75 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 1
  %76 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 2
  %77 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 3
  %78 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 4
  %79 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 5, i64 0, i32 0
  %80 = bitcast %class.SkPathEdgeIter* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 40, i1 false)
  %81 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 6
  %82 = bitcast float* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 -1, i64 16, i1 false)
  %83 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 7
  %84 = bitcast i8* %81 to i64*
  store i64 -6148914691236517206, i64* %84, align 8
  call void @_ZN14SkPathEdgeIterC1ERK6SkPath(%class.SkPathEdgeIter* nonnull %6, %class.SkPath* dereferenceable(16) %1) #11
  br i1 %12, label %96, label %85

85:                                               ; preds = %64
  %86 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 5
  %87 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %86, i64 0, i64 0
  %88 = bitcast [2 x %struct.SkPoint]* %86 to i64*
  %89 = bitcast %struct.SkPoint** %77 to i64**
  %90 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 5, i64 1
  %91 = bitcast %struct.SkPoint* %90 to i64*
  %92 = bitcast %class.SkEdgeBuilder* %0 to i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)***
  br label %93

93:                                               ; preds = %291, %85
  %94 = phi i8* [ %294, %291 ], [ %35, %85 ]
  %95 = phi i8** [ %292, %291 ], [ %70, %85 ]
  br label %289

96:                                               ; preds = %64
  %97 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #11
  %98 = bitcast %class.SkEdgeBuilder* %0 to { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)***
  %99 = load { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)**, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*** %98, align 8
  %100 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)** %99, i64 3
  %101 = load { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)** %100, align 8
  %102 = call { <2 x float>, <2 x float> } %101(%class.SkEdgeBuilder* %0, %struct.SkIRect* nonnull dereferenceable(16) %2) #11
  %103 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %104 = extractvalue { <2 x float>, <2 x float> } %102, 0
  store <2 x float> %104, <2 x float>* %103, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %106 = extractvalue { <2 x float>, <2 x float> } %102, 1
  store <2 x float> %106, <2 x float>* %105, align 8
  %107 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 5
  %108 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %107, i64 0, i64 0
  %109 = bitcast [2 x %struct.SkPoint]* %107 to i64*
  %110 = bitcast %struct.SkPoint** %77 to i64**
  %111 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %6, i64 0, i32 5, i64 1
  %112 = bitcast %struct.SkPoint* %111 to i64*
  %113 = bitcast [4 x %struct.SkPoint]* %9 to i8*
  %114 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %9, i64 0, i64 0
  %115 = bitcast %class.SkEdgeBuilder* %0 to i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)***
  %116 = bitcast [4 x %struct.SkPoint]* %9 to i8*
  br label %117

117:                                              ; preds = %191, %96
  %118 = phi i8* [ %192, %191 ], [ %35, %96 ]
  %119 = phi i8** [ %193, %191 ], [ %70, %96 ]
  br label %120

120:                                              ; preds = %117, %184
  %121 = load i8*, i8** %74, align 8
  %122 = load i8*, i8** %75, align 8
  %123 = icmp eq i8* %121, %122
  br i1 %123, label %124, label %134

124:                                              ; preds = %120
  %125 = load i8, i8* %81, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %214, label %127

127:                                              ; preds = %124
  %128 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %129 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %128, i64 -1
  %130 = bitcast %struct.SkPoint* %129 to i64*
  %131 = load i64, i64* %130, align 4
  store i64 %131, i64* %109, align 8
  %132 = load i64*, i64** %110, align 8
  %133 = load i64, i64* %132, align 4
  store i64 %133, i64* %112, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  br label %180

134:                                              ; preds = %120, %178
  %135 = phi i8* [ %136, %178 ], [ %121, %120 ]
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  store i8* %136, i8** %74, align 8
  %137 = load i8, i8* %135, align 1
  switch i8 %137, label %161 [
    i8 0, label %138
    i8 5, label %151
  ]

138:                                              ; preds = %134
  %139 = load i8, i8* %81, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  %141 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  br i1 %140, label %149, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %141, i64 -1
  %144 = bitcast %struct.SkPoint* %143 to i64*
  %145 = load i64, i64* %144, align 4
  store i64 %145, i64* %109, align 8
  %146 = load i64*, i64** %110, align 8
  %147 = load i64, i64* %146, align 4
  store i64 %147, i64* %112, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  %148 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %141, i64 1
  store %struct.SkPoint* %148, %struct.SkPoint** %76, align 8
  store %struct.SkPoint* %141, %struct.SkPoint** %77, align 8
  br label %180

149:                                              ; preds = %138
  %150 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %141, i64 1
  store %struct.SkPoint* %150, %struct.SkPoint** %76, align 8
  store %struct.SkPoint* %141, %struct.SkPoint** %77, align 8
  store i8 1, i8* %83, align 1
  br label %178

151:                                              ; preds = %134
  %152 = load i8, i8* %81, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %178, label %154

154:                                              ; preds = %151
  %155 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %156 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %155, i64 -1
  %157 = bitcast %struct.SkPoint* %156 to i64*
  %158 = load i64, i64* %157, align 4
  store i64 %158, i64* %109, align 8
  %159 = load i64*, i64** %110, align 8
  %160 = load i64, i64* %159, align 4
  store i64 %160, i64* %112, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  br label %180

161:                                              ; preds = %134
  %162 = zext i8 %137 to i32
  %163 = add nuw nsw i32 %162, 2
  %164 = lshr i32 %163, 1
  %165 = add nuw nsw i32 %162, 255
  %166 = and i32 %165, %162
  %167 = lshr exact i32 %166, 1
  store i8 1, i8* %81, align 8
  %168 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %169 = zext i32 %164 to i64
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %168, i64 %169
  store %struct.SkPoint* %170, %struct.SkPoint** %76, align 8
  %171 = load float*, float** %78, align 8
  %172 = zext i32 %167 to i64
  %173 = getelementptr inbounds float, float* %171, i64 %172
  store float* %173, float** %78, align 8
  store i8 0, i8* %83, align 1
  %174 = xor i32 %164, -1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %170, i64 %175
  %177 = zext i8 %137 to i32
  br label %180

178:                                              ; preds = %151, %149
  %179 = icmp eq i8* %136, %122
  br i1 %179, label %214, label %134

180:                                              ; preds = %127, %142, %154, %161
  %181 = phi %struct.SkPoint* [ %108, %127 ], [ %108, %142 ], [ %108, %154 ], [ %176, %161 ]
  %182 = phi i32 [ 1, %127 ], [ 1, %142 ], [ 1, %154 ], [ %177, %161 ]
  %183 = icmp eq %struct.SkPoint* %181, null
  br i1 %183, label %214, label %184

184:                                              ; preds = %180
  %185 = icmp eq i32 %182, 1
  br i1 %185, label %186, label %120

186:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %116, i8 -1, i64 32, i1 false)
  %187 = call i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint* nonnull %181, %struct.SkRect* nonnull dereferenceable(16) %8, %struct.SkPoint* nonnull %114, i1 zeroext %3) #11
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = zext i32 %187 to i64
  br label %194

191:                                              ; preds = %209, %186
  %192 = phi i8* [ %118, %186 ], [ %210, %209 ]
  %193 = phi i8** [ %119, %186 ], [ %211, %209 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #11
  br label %117

194:                                              ; preds = %209, %189
  %195 = phi i64 [ 0, %189 ], [ %212, %209 ]
  %196 = phi i8** [ %119, %189 ], [ %211, %209 ]
  %197 = phi i8* [ %118, %189 ], [ %210, %209 ]
  %198 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %9, i64 0, i64 %195
  %199 = load i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)**, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*** %115, align 8
  %200 = getelementptr inbounds i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)** %199, i64 7
  %201 = load i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)** %200, align 8
  %202 = call i32 %201(%class.SkEdgeBuilder* %0, %struct.SkPoint* %198, i8* %197, i8** %196) #11
  switch i32 %202, label %209 [
    i32 2, label %203
    i32 0, label %205
  ]

203:                                              ; preds = %194
  %204 = getelementptr inbounds i8*, i8** %196, i64 -1
  br label %209

205:                                              ; preds = %194
  %206 = getelementptr inbounds i8*, i8** %196, i64 1
  store i8* %197, i8** %196, align 8
  %207 = load i64, i64* %5, align 8
  %208 = getelementptr inbounds i8, i8* %197, i64 %207
  br label %209

209:                                              ; preds = %203, %194, %205
  %210 = phi i8* [ %197, %194 ], [ %208, %205 ], [ %197, %203 ]
  %211 = phi i8** [ %196, %194 ], [ %206, %205 ], [ %204, %203 ]
  %212 = add nuw nsw i64 %195, 1
  %213 = icmp eq i64 %212, %190
  br i1 %213, label %191, label %194

214:                                              ; preds = %180, %124, %178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #11
  br label %295

215:                                              ; preds = %286, %289
  %216 = load i8*, i8** %74, align 8
  %217 = load i8*, i8** %75, align 8
  %218 = icmp eq i8* %216, %217
  br i1 %218, label %219, label %229

219:                                              ; preds = %215
  %220 = load i8, i8* %81, align 8, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %295, label %222

222:                                              ; preds = %219
  %223 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %224 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %223, i64 -1
  %225 = bitcast %struct.SkPoint* %224 to i64*
  %226 = load i64, i64* %225, align 4
  store i64 %226, i64* %88, align 8
  %227 = load i64*, i64** %89, align 8
  %228 = load i64, i64* %227, align 4
  store i64 %228, i64* %91, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  br label %275

229:                                              ; preds = %215, %273
  %230 = phi i8* [ %231, %273 ], [ %216, %215 ]
  %231 = getelementptr inbounds i8, i8* %230, i64 1
  store i8* %231, i8** %74, align 8
  %232 = load i8, i8* %230, align 1
  switch i8 %232, label %256 [
    i8 0, label %233
    i8 5, label %246
  ]

233:                                              ; preds = %229
  %234 = load i8, i8* %81, align 8, !range !2
  %235 = icmp eq i8 %234, 0
  %236 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  br i1 %235, label %244, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %236, i64 -1
  %239 = bitcast %struct.SkPoint* %238 to i64*
  %240 = load i64, i64* %239, align 4
  store i64 %240, i64* %88, align 8
  %241 = load i64*, i64** %89, align 8
  %242 = load i64, i64* %241, align 4
  store i64 %242, i64* %91, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  %243 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %236, i64 1
  store %struct.SkPoint* %243, %struct.SkPoint** %76, align 8
  store %struct.SkPoint* %236, %struct.SkPoint** %77, align 8
  br label %275

244:                                              ; preds = %233
  %245 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %236, i64 1
  store %struct.SkPoint* %245, %struct.SkPoint** %76, align 8
  store %struct.SkPoint* %236, %struct.SkPoint** %77, align 8
  store i8 1, i8* %83, align 1
  br label %273

246:                                              ; preds = %229
  %247 = load i8, i8* %81, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %273, label %249

249:                                              ; preds = %246
  %250 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %251 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %250, i64 -1
  %252 = bitcast %struct.SkPoint* %251 to i64*
  %253 = load i64, i64* %252, align 4
  store i64 %253, i64* %88, align 8
  %254 = load i64*, i64** %89, align 8
  %255 = load i64, i64* %254, align 4
  store i64 %255, i64* %91, align 8
  store i8 0, i8* %81, align 8
  store i8 1, i8* %83, align 1
  br label %275

256:                                              ; preds = %229
  %257 = zext i8 %232 to i32
  %258 = add nuw nsw i32 %257, 2
  %259 = lshr i32 %258, 1
  %260 = add nuw nsw i32 %257, 255
  %261 = and i32 %260, %257
  %262 = lshr exact i32 %261, 1
  store i8 1, i8* %81, align 8
  %263 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %264 = zext i32 %259 to i64
  %265 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %263, i64 %264
  store %struct.SkPoint* %265, %struct.SkPoint** %76, align 8
  %266 = load float*, float** %78, align 8
  %267 = zext i32 %262 to i64
  %268 = getelementptr inbounds float, float* %266, i64 %267
  store float* %268, float** %78, align 8
  store i8 0, i8* %83, align 1
  %269 = xor i32 %259, -1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %265, i64 %270
  %272 = zext i8 %232 to i32
  br label %275

273:                                              ; preds = %246, %244
  %274 = icmp eq i8* %231, %217
  br i1 %274, label %295, label %229

275:                                              ; preds = %222, %237, %249, %256
  %276 = phi %struct.SkPoint* [ %87, %222 ], [ %87, %237 ], [ %87, %249 ], [ %271, %256 ]
  %277 = phi i32 [ 1, %222 ], [ 1, %237 ], [ 1, %249 ], [ %272, %256 ]
  %278 = icmp eq %struct.SkPoint* %276, null
  br i1 %278, label %295, label %279

279:                                              ; preds = %275
  %280 = icmp eq i32 %277, 1
  br i1 %280, label %281, label %286

281:                                              ; preds = %279
  %282 = load i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)**, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*** %92, align 8
  %283 = getelementptr inbounds i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)** %282, i64 7
  %284 = load i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)*, i32 (%class.SkEdgeBuilder*, %struct.SkPoint*, i8*, i8**)** %283, align 8
  %285 = call i32 %284(%class.SkEdgeBuilder* %0, %struct.SkPoint* nonnull %276, i8* %94, i8** %290) #11
  switch i32 %285, label %286 [
    i32 2, label %287
    i32 0, label %291
  ]

286:                                              ; preds = %281, %279
  br label %215

287:                                              ; preds = %281
  %288 = getelementptr inbounds i8*, i8** %290, i64 -1
  br label %289

289:                                              ; preds = %93, %287
  %290 = phi i8** [ %95, %93 ], [ %288, %287 ]
  br label %215

291:                                              ; preds = %281
  %292 = getelementptr inbounds i8*, i8** %290, i64 1
  store i8* %94, i8** %290, align 8
  %293 = load i64, i64* %5, align 8
  %294 = getelementptr inbounds i8, i8* %94, i64 %293
  br label %93

295:                                              ; preds = %275, %219, %273, %214
  %296 = phi i8** [ %119, %214 ], [ %290, %273 ], [ %290, %219 ], [ %290, %275 ]
  %297 = bitcast i8*** %71 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = ptrtoint i8** %296 to i64
  %300 = sub i64 %299, %298
  %301 = lshr exact i64 %300, 3
  %302 = trunc i64 %301 to i32
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %303

303:                                              ; preds = %17, %295
  %304 = phi i32 [ %302, %295 ], [ 0, %17 ]
  ret i32 %304
}

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #3

declare void @_ZN14SkPathEdgeIterC1ERK6SkPath(%class.SkPathEdgeIter*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN13SkLineClipper8ClipLineEPK7SkPointRK6SkRectPS0_b(%struct.SkPoint*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkEdgeBuilder5buildERK6SkPathPK7SkIRectb(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %struct.SkConic, align 4
  %6 = alloca [5 x %struct.SkPoint], align 16
  %7 = alloca %class.SkAutoConicToQuads, align 8
  %8 = alloca %class.SkPathEdgeIter, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %struct.Rec, align 8
  %11 = alloca [10 x %struct.SkPoint], align 16
  %12 = bitcast %class.SkAutoConicToQuads* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %7, i64 0, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 144, i1 false)
  %15 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %7, i64 0, i32 0, i32 1
  %16 = bitcast %class.SkAutoConicToQuads* %7 to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8
  %17 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %7, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = bitcast %class.SkPathEdgeIter* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 0
  %20 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 1
  %21 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 3
  %23 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 4
  %24 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 5, i64 0, i32 0
  %25 = bitcast %class.SkPathEdgeIter* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 40, i1 false)
  %26 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 6
  %27 = bitcast float* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -1, i64 16, i1 false)
  %28 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 7
  %29 = bitcast i8* %26 to i64*
  store i64 -6148914691236517206, i64* %29, align 8
  call void @_ZN14SkPathEdgeIterC1ERK6SkPath(%class.SkPathEdgeIter* nonnull %8, %class.SkPath* dereferenceable(16) %1) #11
  %30 = icmp eq %struct.SkIRect* %2, null
  br i1 %30, label %31, label %203

31:                                               ; preds = %4
  %32 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 5
  %33 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %32, i64 0, i64 0
  %34 = bitcast [2 x %struct.SkPoint]* %32 to i64*
  %35 = bitcast %struct.SkPoint** %22 to i64**
  %36 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %8, i64 0, i32 5, i64 1
  %37 = bitcast %struct.SkPoint* %36 to i64*
  %38 = bitcast [10 x %struct.SkPoint]* %11 to i8*
  %39 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %11, i64 0, i64 0
  %40 = bitcast %class.SkEdgeBuilder* %0 to void (%class.SkEdgeBuilder*, %struct.SkPoint*)***
  %41 = bitcast float** %23 to i32**
  %42 = bitcast %struct.SkConic* %5 to i8*
  %43 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 1
  %44 = bitcast float* %43 to i32*
  %45 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %7, i64 0, i32 0, i32 0
  %46 = bitcast %union.anon* %15 to %struct.SkPoint*
  %47 = bitcast %class.SkAutoConicToQuads* %7 to i8**
  %48 = bitcast [5 x %struct.SkPoint]* %6 to i8*
  %49 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 0
  br label %50

50:                                               ; preds = %157, %31
  %51 = load i8*, i8** %19, align 8
  %52 = load i8*, i8** %20, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %50
  %55 = load i8, i8* %26, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %197, label %57

57:                                               ; preds = %54
  %58 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %58, i64 -1
  %60 = bitcast %struct.SkPoint* %59 to i64*
  %61 = load i64, i64* %60, align 4
  store i64 %61, i64* %34, align 8
  %62 = load i64*, i64** %35, align 8
  %63 = load i64, i64* %62, align 4
  store i64 %63, i64* %37, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  br label %109

64:                                               ; preds = %50, %107
  %65 = phi i8* [ %66, %107 ], [ %51, %50 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  store i8* %66, i8** %19, align 8
  %67 = load i8, i8* %65, align 1
  switch i8 %67, label %91 [
    i8 0, label %68
    i8 5, label %81
  ]

68:                                               ; preds = %64
  %69 = load i8, i8* %26, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  br i1 %70, label %79, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 -1
  %74 = bitcast %struct.SkPoint* %73 to i64*
  %75 = load i64, i64* %74, align 4
  store i64 %75, i64* %34, align 8
  %76 = load i64*, i64** %35, align 8
  %77 = load i64, i64* %76, align 4
  store i64 %77, i64* %37, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1
  store %struct.SkPoint* %78, %struct.SkPoint** %21, align 8
  store %struct.SkPoint* %71, %struct.SkPoint** %22, align 8
  br label %109

79:                                               ; preds = %68
  %80 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1
  store %struct.SkPoint* %80, %struct.SkPoint** %21, align 8
  store %struct.SkPoint* %71, %struct.SkPoint** %22, align 8
  store i8 1, i8* %28, align 1
  br label %107

81:                                               ; preds = %64
  %82 = load i8, i8* %26, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %107, label %84

84:                                               ; preds = %81
  %85 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 -1
  %87 = bitcast %struct.SkPoint* %86 to i64*
  %88 = load i64, i64* %87, align 4
  store i64 %88, i64* %34, align 8
  %89 = load i64*, i64** %35, align 8
  %90 = load i64, i64* %89, align 4
  store i64 %90, i64* %37, align 8
  store i8 0, i8* %26, align 8
  store i8 1, i8* %28, align 1
  br label %109

91:                                               ; preds = %64
  %92 = zext i8 %67 to i32
  %93 = add nuw nsw i32 %92, 2
  %94 = lshr i32 %93, 1
  %95 = add nuw nsw i32 %92, 255
  %96 = and i32 %95, %92
  %97 = lshr exact i32 %96, 1
  store i8 1, i8* %26, align 8
  %98 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %99 = zext i32 %94 to i64
  %100 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %98, i64 %99
  store %struct.SkPoint* %100, %struct.SkPoint** %21, align 8
  %101 = load float*, float** %23, align 8
  %102 = zext i32 %97 to i64
  %103 = getelementptr inbounds float, float* %101, i64 %102
  store float* %103, float** %23, align 8
  store i8 0, i8* %28, align 1
  %104 = xor i32 %94, -1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %100, i64 %105
  br label %109

107:                                              ; preds = %81, %79
  %108 = icmp eq i8* %66, %52
  br i1 %108, label %197, label %64

109:                                              ; preds = %57, %72, %84, %91
  %110 = phi %struct.SkPoint* [ %33, %57 ], [ %33, %72 ], [ %33, %84 ], [ %106, %91 ]
  %111 = phi i8 [ 1, %57 ], [ 1, %72 ], [ 1, %84 ], [ %67, %91 ]
  %112 = icmp eq %struct.SkPoint* %110, null
  br i1 %112, label %197, label %113

113:                                              ; preds = %109
  switch i8 %111, label %157 [
    i8 1, label %114
    i8 2, label %118
    i8 3, label %134
    i8 4, label %180
  ]

114:                                              ; preds = %113
  %115 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %40, align 8
  %116 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %115, i64 4
  %117 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %116, align 8
  call void %117(%class.SkEdgeBuilder* %0, %struct.SkPoint* nonnull %110) #11
  br label %157

118:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -1, i64 40, i1 false) #11
  %119 = call i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint* nonnull %110, %struct.SkPoint* nonnull %49) #11
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %133, label %121

121:                                              ; preds = %118
  %122 = add nuw i32 %119, 1
  %123 = zext i32 %122 to i64
  br label %124

124:                                              ; preds = %124, %121
  %125 = phi i64 [ %131, %124 ], [ 0, %121 ]
  %126 = shl nuw nsw i64 %125, 1
  %127 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 %126
  %128 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %40, align 8
  %129 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %128, i64 5
  %130 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %129, align 8
  call void %130(%class.SkEdgeBuilder* %0, %struct.SkPoint* %127) #11
  %131 = add nuw nsw i64 %125, 1
  %132 = icmp eq i64 %131, %123
  br i1 %132, label %133, label %124

133:                                              ; preds = %124, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #11
  br label %157

134:                                              ; preds = %113
  %135 = load i32*, i32** %41, align 8
  %136 = load i32, i32* %135, align 4
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %42) #11
  %137 = bitcast %struct.SkPoint* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* nonnull align 4 %137, i64 24, i1 false) #11
  store i32 %136, i32* %44, align 4
  %138 = call i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic* nonnull %5, float 2.500000e-01) #11
  %139 = shl i32 1, %138
  store i32 %139, i32* %17, align 8
  %140 = shl nsw i32 %139, 1
  %141 = or i32 %140, 1
  %142 = sext i32 %141 to i64
  %143 = load %struct.SkPoint*, %struct.SkPoint** %45, align 8
  %144 = icmp eq %struct.SkPoint* %143, %46
  br i1 %144, label %147, label %145

145:                                              ; preds = %134
  %146 = bitcast %struct.SkPoint* %143 to i8*
  call void @_Z7sk_freePv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %134
  %148 = icmp ugt i32 %141, 17
  br i1 %148, label %149, label %152

149:                                              ; preds = %147
  %150 = call i8* @_Z15sk_malloc_throwmm(i64 %142, i64 8) #11
  store i8* %150, i8** %47, align 8
  %151 = bitcast i8* %150 to %struct.SkPoint*
  br label %153

152:                                              ; preds = %147
  store %union.anon* %15, %union.anon** %16, align 8
  br label %153

153:                                              ; preds = %149, %152
  %154 = phi %struct.SkPoint* [ %46, %152 ], [ %151, %149 ]
  %155 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %5, %struct.SkPoint* %154, i32 %138) #11
  store i32 %155, i32* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %42) #11
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %175, %153, %114, %133, %186, %113
  br label %50

158:                                              ; preds = %153, %175
  %159 = phi i32 [ %177, %175 ], [ 0, %153 ]
  %160 = phi %struct.SkPoint* [ %176, %175 ], [ %154, %153 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -1, i64 40, i1 false) #11
  %161 = call i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint* %160, %struct.SkPoint* nonnull %49) #11
  %162 = icmp slt i32 %161, 0
  br i1 %162, label %175, label %163

163:                                              ; preds = %158
  %164 = add nuw i32 %161, 1
  %165 = zext i32 %164 to i64
  br label %166

166:                                              ; preds = %166, %163
  %167 = phi i64 [ %173, %166 ], [ 0, %163 ]
  %168 = shl nuw nsw i64 %167, 1
  %169 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 %168
  %170 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %40, align 8
  %171 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %170, i64 5
  %172 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %171, align 8
  call void %172(%class.SkEdgeBuilder* %0, %struct.SkPoint* %169) #11
  %173 = add nuw nsw i64 %167, 1
  %174 = icmp eq i64 %173, %165
  br i1 %174, label %175, label %166

175:                                              ; preds = %166, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #11
  %176 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %160, i64 2
  %177 = add nuw nsw i32 %159, 1
  %178 = load i32, i32* %17, align 8
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %158, label %157

180:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %38) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -1, i64 80, i1 false)
  %181 = call i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint* nonnull %110, %struct.SkPoint* nonnull %39) #11
  %182 = icmp slt i32 %181, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %180
  %184 = add nuw i32 %181, 1
  %185 = zext i32 %184 to i64
  br label %187

186:                                              ; preds = %187, %180
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %38) #11
  br label %157

187:                                              ; preds = %187, %183
  %188 = phi i64 [ 0, %183 ], [ %195, %187 ]
  %189 = mul i64 %188, 3
  %190 = and i64 %189, 4294967295
  %191 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %11, i64 0, i64 %190
  %192 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %40, align 8
  %193 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %192, i64 6
  %194 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %193, align 8
  call void %194(%class.SkEdgeBuilder* %0, %struct.SkPoint* %191) #11
  %195 = add nuw nsw i64 %188, 1
  %196 = icmp eq i64 %195, %185
  br i1 %196, label %186, label %187

197:                                              ; preds = %109, %54, %107
  %198 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %199 = bitcast %class.SkTDArray* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 1
  %202 = bitcast i8*** %201 to i64*
  store i64 %200, i64* %202, align 8
  br label %225

203:                                              ; preds = %4
  %204 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %205 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #11
  %206 = bitcast %class.SkEdgeBuilder* %0 to { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)***
  %207 = load { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)**, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*** %206, align 8
  %208 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)** %207, i64 3
  %209 = load { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)*, { <2 x float>, <2 x float> } (%class.SkEdgeBuilder*, %struct.SkIRect*)** %208, align 8
  %210 = call { <2 x float>, <2 x float> } %209(%class.SkEdgeBuilder* %0, %struct.SkIRect* nonnull dereferenceable(16) %2) #11
  %211 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %212 = extractvalue { <2 x float>, <2 x float> } %210, 0
  store <2 x float> %212, <2 x float>* %211, align 8
  %213 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %214 = extractvalue { <2 x float>, <2 x float> } %210, 1
  store <2 x float> %214, <2 x float>* %213, align 8
  %215 = bitcast %struct.Rec* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 16, i1 false)
  %216 = getelementptr inbounds %struct.Rec, %struct.Rec* %10, i64 0, i32 0
  store %class.SkEdgeBuilder* %0, %class.SkEdgeBuilder** %216, align 8
  %217 = getelementptr inbounds %struct.Rec, %struct.Rec* %10, i64 0, i32 1
  store i8 1, i8* %217, align 8
  call void @_ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_(%class.SkPath* dereferenceable(16) %1, %struct.SkRect* nonnull dereferenceable(16) %204, i1 zeroext %3, void (%class.SkEdgeClipper*, i1, i8*)* nonnull @"_ZZN13SkEdgeBuilder5buildERK6SkPathPK7SkIRectbEN3$_18__invokeEP13SkEdgeClipperbPv", i8* nonnull %215) #11
  %218 = load i8, i8* %217, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #11
  %220 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %221 = bitcast %class.SkTDArray* %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 1
  %224 = bitcast i8*** %223 to i64*
  store i64 %222, i64* %224, align 8
  br i1 %219, label %228, label %225

225:                                              ; preds = %203, %197
  %226 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2, i32 2
  %227 = load i32, i32* %226, align 4
  br label %228

228:                                              ; preds = %203, %225
  %229 = phi i32 [ %227, %225 ], [ 0, %203 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #11
  %230 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %7, i64 0, i32 0, i32 0
  %231 = load %struct.SkPoint*, %struct.SkPoint** %230, align 8
  %232 = bitcast %union.anon* %15 to %struct.SkPoint*
  %233 = icmp eq %struct.SkPoint* %231, %232
  br i1 %233, label %236, label %234

234:                                              ; preds = %228
  %235 = bitcast %struct.SkPoint* %231 to i8*
  call void @_Z7sk_freePv(i8* %235) #11
  br label %236

236:                                              ; preds = %228, %234
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %12) #11
  ret i32 %229
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_(%class.SkPath* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext, void (%class.SkEdgeClipper*, i1, i8*)*, i8*) local_unnamed_addr #3

declare i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %1) #11
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %7 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 15
  %9 = load i8, i8* %8, align 2
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = tail call i32 @_ZN13SkEdgeBuilder9buildPolyERK6SkPathPK7SkIRectb(%class.SkEdgeBuilder* %0, %class.SkPath* dereferenceable(16) %1, %struct.SkIRect* %2, i1 zeroext %5)
  br label %15

13:                                               ; preds = %3
  %14 = tail call i32 @_ZN13SkEdgeBuilder5buildERK6SkPathPK7SkIRectb(%class.SkEdgeBuilder* %0, %class.SkPath* dereferenceable(16) %1, %struct.SkIRect* %2, i1 zeroext %5)
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i32 [ %12, %11 ], [ %14, %13 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD2Ev(%class.SkEdgeBuilder*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 512
  %4 = bitcast i8* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #11
  %5 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.SkTDArray* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkBasicEdgeBuilderD0Ev(%class.SkBasicEdgeBuilder*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %4 = bitcast i8* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #11
  %5 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %0, i64 0, i32 0, i32 2
  %6 = bitcast %class.SkTDArray* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #11
  %8 = bitcast %class.SkBasicEdgeBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkAnalyticEdgeBuilderD0Ev(%class.SkAnalyticEdgeBuilder*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %4 = bitcast i8* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #11
  %5 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %0, i64 0, i32 0, i32 2
  %6 = bitcast %class.SkTDArray* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #11
  %8 = bitcast %class.SkAnalyticEdgeBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN13SkEdgeBuilder5buildERK6SkPathPK7SkIRectbEN3$_18__invokeEP13SkEdgeClipperbPv"(%class.SkEdgeClipper*, i1 zeroext, i8* nocapture) #5 align 2 {
  %4 = alloca [4 x %struct.SkPoint], align 16
  %5 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -1, i64 32, i1 false) #11
  %8 = call i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* %0, %struct.SkPoint* nonnull %6) #11
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %107, label %10

10:                                               ; preds = %3
  %11 = bitcast i8* %2 to %class.SkEdgeBuilder**
  br label %12

12:                                               ; preds = %104, %10
  %13 = phi i32 [ %8, %10 ], [ %105, %104 ]
  %14 = zext i32 %13 to i64
  %15 = add nsw i64 %14, -5
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %17, label %85

17:                                               ; preds = %12
  %18 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInIterEjE10gPtsInVerb, i64 0, i64 %14
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 1
  %22 = add nsw i64 %21, -1
  %23 = and i64 %21, 6
  %24 = icmp ult i64 %22, 7
  br i1 %24, label %65, label %25

25:                                               ; preds = %17
  %26 = sub nsw i64 %21, %23
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %62, %27 ]
  %29 = phi float [ 0.000000e+00, %25 ], [ %61, %27 ]
  %30 = phi i64 [ %26, %25 ], [ %63, %27 ]
  %31 = getelementptr inbounds float, float* %7, i64 %28
  %32 = load float, float* %31, align 16
  %33 = fmul float %29, %32
  %34 = or i64 %28, 1
  %35 = getelementptr inbounds float, float* %7, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %33, %36
  %38 = or i64 %28, 2
  %39 = getelementptr inbounds float, float* %7, i64 %38
  %40 = load float, float* %39, align 8
  %41 = fmul float %37, %40
  %42 = or i64 %28, 3
  %43 = getelementptr inbounds float, float* %7, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fmul float %41, %44
  %46 = or i64 %28, 4
  %47 = getelementptr inbounds float, float* %7, i64 %46
  %48 = load float, float* %47, align 16
  %49 = fmul float %45, %48
  %50 = or i64 %28, 5
  %51 = getelementptr inbounds float, float* %7, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fmul float %49, %52
  %54 = or i64 %28, 6
  %55 = getelementptr inbounds float, float* %7, i64 %54
  %56 = load float, float* %55, align 8
  %57 = fmul float %53, %56
  %58 = or i64 %28, 7
  %59 = getelementptr inbounds float, float* %7, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fmul float %57, %60
  %62 = add nuw nsw i64 %28, 8
  %63 = add i64 %30, -8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %27

65:                                               ; preds = %27, %17
  %66 = phi float [ undef, %17 ], [ %61, %27 ]
  %67 = phi i64 [ 0, %17 ], [ %62, %27 ]
  %68 = phi float [ 0.000000e+00, %17 ], [ %61, %27 ]
  %69 = icmp eq i64 %23, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ %77, %70 ], [ %67, %65 ]
  %72 = phi float [ %76, %70 ], [ %68, %65 ]
  %73 = phi i64 [ %78, %70 ], [ %23, %65 ]
  %74 = getelementptr inbounds float, float* %7, i64 %71
  %75 = load float, float* %74, align 4
  %76 = fmul float %72, %75
  %77 = add nuw nsw i64 %71, 1
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %70, !llvm.loop !3

80:                                               ; preds = %70, %65
  %81 = phi float [ %66, %65 ], [ %76, %70 ]
  %82 = fcmp oeq float %81, 0.000000e+00
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 0, i8* %84, align 8
  br label %107

85:                                               ; preds = %80, %12
  switch i32 %13, label %104 [
    i32 1, label %86
    i32 2, label %92
    i32 4, label %98
  ]

86:                                               ; preds = %85
  %87 = load %class.SkEdgeBuilder*, %class.SkEdgeBuilder** %11, align 8
  %88 = bitcast %class.SkEdgeBuilder* %87 to void (%class.SkEdgeBuilder*, %struct.SkPoint*)***
  %89 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %89, i64 4
  %91 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %90, align 8
  call void %91(%class.SkEdgeBuilder* %87, %struct.SkPoint* nonnull %6) #11
  br label %104

92:                                               ; preds = %85
  %93 = load %class.SkEdgeBuilder*, %class.SkEdgeBuilder** %11, align 8
  %94 = bitcast %class.SkEdgeBuilder* %93 to void (%class.SkEdgeBuilder*, %struct.SkPoint*)***
  %95 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %95, i64 5
  %97 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %96, align 8
  call void %97(%class.SkEdgeBuilder* %93, %struct.SkPoint* nonnull %6) #11
  br label %104

98:                                               ; preds = %85
  %99 = load %class.SkEdgeBuilder*, %class.SkEdgeBuilder** %11, align 8
  %100 = bitcast %class.SkEdgeBuilder* %99 to void (%class.SkEdgeBuilder*, %struct.SkPoint*)***
  %101 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)**, void (%class.SkEdgeBuilder*, %struct.SkPoint*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %101, i64 6
  %103 = load void (%class.SkEdgeBuilder*, %struct.SkPoint*)*, void (%class.SkEdgeBuilder*, %struct.SkPoint*)** %102, align 8
  call void %103(%class.SkEdgeBuilder* %99, %struct.SkPoint* nonnull %6) #11
  br label %104

104:                                              ; preds = %98, %92, %86, %85
  %105 = call i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* %0, %struct.SkPoint* nonnull %6) #11
  %106 = icmp eq i32 %105, 6
  br i1 %106, label %107, label %12

107:                                              ; preds = %104, %3, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret void
}

declare i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper*, %struct.SkPoint*) local_unnamed_addr #3

declare i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #3

declare i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic*, float) local_unnamed_addr #3

declare i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD0Ev(%class.SkEdgeBuilder*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
