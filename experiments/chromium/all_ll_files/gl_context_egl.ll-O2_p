; ModuleID = '../../ui/gl/gl_context_egl.cc'
source_filename = "../../ui/gl/gl_context_egl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::EGLApi" = type { i32 (...)** }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.gl::GLContextEGL" = type { %"class.gl::GLContextReal.base", i8*, i8*, i8*, i32, i8, i8, %"class.std::__1::map" }
%"class.gl::GLContextReal.base" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.67", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8 }>
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8 }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type { %"class.gl::GLApiBase", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.gl::GLWorkarounds", %"class.std::__1::unique_ptr.45" }
%"class.gl::GLApiBase" = type { %"class.gl::GLApi", %"struct.gl::DriverGL"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%class.scoped_refptr.51 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.gl::GLVersionInfo"* }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.gl::GPUTiming"* }
%"class.gl::GPUTiming" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.52", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.gl::GLContextReal" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.67", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.89", %"class.base::SupportsWeakPtr.90" }
%"class.base::RefCounted.89" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.90" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i32*, i32*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.gfx::ColorSpace", %"class.std::__1::unique_ptr.98" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.gl::YUVToRGBConverter"* }
%"class.gl::YUVToRGBConverter" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.gfx::ColorSpace"* }
%"class.std::__1::tuple.107" = type { i8 }
%"class.gl::GLContext::ScopedReleaseCurrent" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.114", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.116", i64, i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.127" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIPvS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN2gl12GLContextEGLE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)* @_ZN2gl12GLContextEGL10InitializeEPNS_9GLSurfaceERKNS_16GLContextAttribsE to i8*), i8* bitcast (void (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)* @_ZN2gl12GLContextEGL14ReleaseCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)* @_ZN2gl12GLContextEGL9IsCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (i8* (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGL9GetHandleEv to i8*), i8* bitcast (void ()* @_ZN2gl13GLContextReal21CreateGPUTimingClientEv to i8*), i8* bitcast (%"class.base::internal::flat_tree"* (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextReal13GetExtensionsEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext23SetSafeToForceGpuSwitchEv to i8*), i8* bitcast (i1 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv to i8*), i8* bitcast (void (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGL25SetUnbindFboOnMakeCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContextEGL"*, i1)* @_ZN2gl12GLContextEGL13SetVisibilityEb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext12GetGLVersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext13GetGLRendererEv to i8*), i8* bitcast (%"class.gl::YUVToRGBConverter"* (%"class.gl::GLContextEGL"*, %"class.gfx::ColorSpace"*)* @_ZN2gl12GLContextEGL20GetYUVToRGBConverterERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext28ForceReleaseVirtuallyCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGLD2Ev to i8*), i8* bitcast (void (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGLD0Ev to i8*), i8* bitcast (%"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)* @_ZN2gl13GLContextReal10SetCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)* @_ZN2gl12GLContextEGL15MakeCurrentImplEPNS_9GLSurfaceE to i8*), i8* bitcast (i32 (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGL34CheckStickyGraphicsResetStatusImplEv to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextReal15ResetExtensionsEv to i8*)] }, align 8
@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@.str = private unnamed_addr constant [30 x i8] c"../../ui/gl/gl_context_egl.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"eglGetConfigAttrib failed with error \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"EGL_KHR_create_context\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"eglBindApi failed with error \00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"EGL_ANGLE_create_context_backwards_compatible\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"eglCreateContext failed with error \00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"eglDestroyContext failed with error \00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.7 = private unnamed_addr constant [26 x i8] c"GLContextEGL::MakeCurrent\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"surface\00", align 1
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@.str.10 = private unnamed_addr constant [24 x i8] c"Could not make current.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2gl12GLContextEGLC1EPNS_12GLShareGroupE = hidden unnamed_addr alias void (%"class.gl::GLContextEGL"*, %"class.gl::GLShareGroup"*), void (%"class.gl::GLContextEGL"*, %"class.gl::GLShareGroup"*)* @_ZN2gl12GLContextEGLC2EPNS_12GLShareGroupE
@_ZN2gl12GLContextEGLD1Ev = hidden unnamed_addr alias void (%"class.gl::GLContextEGL"*), void (%"class.gl::GLContextEGL"*)* @_ZN2gl12GLContextEGLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGLC2EPNS_12GLShareGroupE(%"class.gl::GLContextEGL"*, %"class.gl::GLShareGroup"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContextReal"*
  tail call void @_ZN2gl13GLContextRealC2EPNS_12GLShareGroupE(%"class.gl::GLContextReal"* %3, %"class.gl::GLShareGroup"* %1) #12
  %4 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl12GLContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 30, i1 false)
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  ret void
}

declare void @_ZN2gl13GLContextRealC2EPNS_12GLShareGroupE(%"class.gl::GLContextReal"*, %"class.gl::GLShareGroup"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLContextEGL10InitializeEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* nocapture readonly dereferenceable(28)) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.std::__1::vector.91", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = bitcast %"class.gl::GLSurface"* %1 to i8* (%"class.gl::GLSurface"*)***
  %10 = load i8* (%"class.gl::GLSurface"*)**, i8* (%"class.gl::GLSurface"*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %10, i64 26
  %12 = load i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %11, align 8
  %13 = tail call i8* %12(%"class.gl::GLSurface"* %1) #12
  %14 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  store i8* %13, i8** %14, align 8
  %15 = load i8* (%"class.gl::GLSurface"*)**, i8* (%"class.gl::GLSurface"*)*** %9, align 8
  %16 = getelementptr inbounds i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %15, i64 27
  %17 = load i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %16, align 8
  %18 = tail call i8* %17(%"class.gl::GLSurface"* %1) #12
  %19 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 3
  store i8* %18, i8** %19, align 8
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  store i32 0, i32* %4, align 4
  %21 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = bitcast %"class.gl::EGLApi"* %21 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %24 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %24, i64 28
  %26 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %25, align 8
  %27 = call i32 %26(%"class.gl::EGLApi"* %21, i8* %22, i8* %18, i32 12352, i32* nonnull %4) #12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %3
  %30 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %30, label %31, label %2631

31:                                               ; preds = %29
  %32 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %32) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 102, i32 2) #12
  %33 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ostringstream"* %33 to %"class.std::__1::basic_ostream"*
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37) #12
  %36 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %37 = call i64 @strlen(i8* %36) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* %36, i64 %37) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %32) #12
  br label %2631

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 7
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 8
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %4, align 4
  %45 = and i32 %44, 64
  %46 = icmp eq i32 %45, 0
  %47 = icmp sgt i32 %41, 2
  %48 = and i1 %47, %46
  %49 = select i1 %48, i32 0, i32 %43
  %50 = select i1 %48, i32 2, i32 %41
  %51 = bitcast %"class.std::__1::vector.91"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #12
  %55 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 9
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %178, label %58

58:                                               ; preds = %39
  %59 = call i32 @_ZN2gl19GetGLImplementationEv() #12
  %60 = icmp eq i32 %59, 9
  br i1 %60, label %61, label %178

61:                                               ; preds = %58
  %62 = load i32*, i32** %53, align 8
  %63 = load i32*, i32** %54, align 8
  %64 = icmp ult i32* %62, %63
  %65 = ptrtoint i32* %63 to i64
  br i1 %64, label %66, label %70

66:                                               ; preds = %61
  store i32 12723, i32* %62, align 4
  %67 = getelementptr inbounds i32, i32* %62, i64 1
  %68 = ptrtoint i32* %67 to i64
  %69 = bitcast i32** %53 to i64*
  store i64 %68, i64* %69, align 8
  br label %118

70:                                               ; preds = %61
  %71 = ptrtoint i32* %62 to i64
  %72 = bitcast i32** %53 to i64*
  %73 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %71, %74
  %76 = ashr exact i64 %75, 2
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 4611686018427387903
  br i1 %78, label %79, label %81

79:                                               ; preds = %70
  %80 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #13
  unreachable

81:                                               ; preds = %70
  %82 = bitcast i32** %54 to i64*
  %83 = sub i64 %65, %74
  %84 = ashr exact i64 %83, 2
  %85 = icmp ult i64 %84, 2305843009213693951
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = ashr exact i64 %83, 1
  %88 = icmp ult i64 %87, %77
  %89 = select i1 %88, i64 %77, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = icmp ugt i64 %89, 4611686018427387903
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  call void @abort() #13
  unreachable

94:                                               ; preds = %91, %81
  %95 = phi i64 [ %89, %91 ], [ 4611686018427387903, %81 ]
  %96 = shl i64 %95, 2
  %97 = call i8* @_Znwm(i64 %96) #14
  %98 = bitcast i8* %97 to i32*
  br label %99

99:                                               ; preds = %94, %86
  %100 = phi i64 [ %95, %94 ], [ 0, %86 ]
  %101 = phi i8* [ %97, %94 ], [ null, %86 ]
  %102 = phi i32* [ %98, %94 ], [ null, %86 ]
  %103 = getelementptr inbounds i32, i32* %102, i64 %76
  %104 = getelementptr inbounds i32, i32* %102, i64 %100
  %105 = ptrtoint i32* %104 to i64
  store i32 12723, i32* %103, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  %107 = ptrtoint i32* %106 to i64
  %108 = ptrtoint i32* %102 to i64
  %109 = icmp sgt i64 %75, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %99
  %111 = inttoptr i64 %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %111, i64 %75, i1 false) #12
  br label %112

112:                                              ; preds = %110, %99
  store i64 %108, i64* %73, align 8
  store i64 %107, i64* %72, align 8
  store i64 %105, i64* %82, align 8
  %113 = icmp eq i64 %74, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %74 to i8*
  call void @_ZdlPv(i8* %115) #14
  %116 = load i32*, i32** %53, align 8
  %117 = ptrtoint i32* %116 to i64
  br label %118

118:                                              ; preds = %66, %112, %114
  %119 = phi i64 [ %68, %66 ], [ %107, %112 ], [ %117, %114 ]
  %120 = phi i32* [ %67, %66 ], [ %106, %112 ], [ %116, %114 ]
  %121 = load i32*, i32** %54, align 8
  %122 = icmp ult i32* %120, %121
  %123 = ptrtoint i32* %121 to i64
  br i1 %122, label %124, label %128

124:                                              ; preds = %118
  store i32 1, i32* %120, align 4
  %125 = getelementptr inbounds i32, i32* %120, i64 1
  %126 = ptrtoint i32* %125 to i64
  %127 = bitcast i32** %53 to i64*
  store i64 %126, i64* %127, align 8
  br label %178

128:                                              ; preds = %118
  %129 = ptrtoint i32* %120 to i64
  %130 = bitcast i32** %53 to i64*
  %131 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %129, %132
  %134 = ashr exact i64 %133, 2
  %135 = add nsw i64 %134, 1
  %136 = icmp ugt i64 %135, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %128
  %138 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %138) #13
  unreachable

139:                                              ; preds = %128
  %140 = bitcast i32** %54 to i64*
  %141 = sub i64 %123, %132
  %142 = ashr exact i64 %141, 2
  %143 = icmp ult i64 %142, 2305843009213693951
  br i1 %143, label %144, label %152

144:                                              ; preds = %139
  %145 = ashr exact i64 %141, 1
  %146 = icmp ult i64 %145, %135
  %147 = select i1 %146, i64 %135, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 4611686018427387903
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  call void @abort() #13
  unreachable

152:                                              ; preds = %149, %139
  %153 = phi i64 [ %147, %149 ], [ 4611686018427387903, %139 ]
  %154 = shl i64 %153, 2
  %155 = call i8* @_Znwm(i64 %154) #14
  %156 = bitcast i8* %155 to i32*
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i32* [ %156, %152 ], [ null, %144 ]
  %160 = getelementptr inbounds i32, i32* %159, i64 %134
  %161 = getelementptr inbounds i32, i32* %159, i64 %158
  %162 = ptrtoint i32* %161 to i64
  store i32 1, i32* %160, align 4
  %163 = getelementptr inbounds i32, i32* %160, i64 1
  %164 = ptrtoint i32* %163 to i64
  %165 = sub i64 %119, %132
  %166 = ashr exact i64 %165, 2
  %167 = sub nsw i64 0, %166
  %168 = getelementptr inbounds i32, i32* %160, i64 %167
  %169 = ptrtoint i32* %168 to i64
  %170 = icmp sgt i64 %165, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %157
  %172 = bitcast i32* %168 to i8*
  %173 = inttoptr i64 %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 %165, i1 false) #12
  br label %174

174:                                              ; preds = %171, %157
  store i64 %169, i64* %131, align 8
  store i64 %164, i64* %130, align 8
  store i64 %162, i64* %140, align 8
  %175 = icmp eq i64 %132, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %174
  %177 = inttoptr i64 %132 to i8*
  call void @_ZdlPv(i8* %177) #14
  br label %178

178:                                              ; preds = %176, %174, %124, %39, %58
  %179 = call zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12
  %180 = load i32*, i32** %53, align 8
  %181 = load i32*, i32** %54, align 8
  %182 = icmp ult i32* %180, %181
  %183 = ptrtoint i32* %181 to i64
  %184 = ptrtoint i32* %180 to i64
  br i1 %179, label %185, label %415

185:                                              ; preds = %178
  br i1 %182, label %186, label %190

186:                                              ; preds = %185
  store i32 12440, i32* %180, align 4
  %187 = getelementptr inbounds i32, i32* %180, i64 1
  %188 = ptrtoint i32* %187 to i64
  %189 = bitcast i32** %53 to i64*
  store i64 %188, i64* %189, align 8
  br label %237

190:                                              ; preds = %185
  %191 = bitcast i32** %53 to i64*
  %192 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %184, %193
  %195 = ashr exact i64 %194, 2
  %196 = add nsw i64 %195, 1
  %197 = icmp ugt i64 %196, 4611686018427387903
  br i1 %197, label %198, label %200

198:                                              ; preds = %190
  %199 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %199) #13
  unreachable

200:                                              ; preds = %190
  %201 = bitcast i32** %54 to i64*
  %202 = sub i64 %183, %193
  %203 = ashr exact i64 %202, 2
  %204 = icmp ult i64 %203, 2305843009213693951
  br i1 %204, label %205, label %213

205:                                              ; preds = %200
  %206 = ashr exact i64 %202, 1
  %207 = icmp ult i64 %206, %196
  %208 = select i1 %207, i64 %196, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %205
  %211 = icmp ugt i64 %208, 4611686018427387903
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  call void @abort() #13
  unreachable

213:                                              ; preds = %210, %200
  %214 = phi i64 [ %208, %210 ], [ 4611686018427387903, %200 ]
  %215 = shl i64 %214, 2
  %216 = call i8* @_Znwm(i64 %215) #14
  %217 = bitcast i8* %216 to i32*
  br label %218

218:                                              ; preds = %213, %205
  %219 = phi i64 [ %214, %213 ], [ 0, %205 ]
  %220 = phi i8* [ %216, %213 ], [ null, %205 ]
  %221 = phi i32* [ %217, %213 ], [ null, %205 ]
  %222 = getelementptr inbounds i32, i32* %221, i64 %195
  %223 = getelementptr inbounds i32, i32* %221, i64 %219
  %224 = ptrtoint i32* %223 to i64
  store i32 12440, i32* %222, align 4
  %225 = getelementptr inbounds i32, i32* %222, i64 1
  %226 = ptrtoint i32* %225 to i64
  %227 = ptrtoint i32* %221 to i64
  %228 = icmp sgt i64 %194, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %218
  %230 = inttoptr i64 %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %220, i8* align 4 %230, i64 %194, i1 false) #12
  br label %231

231:                                              ; preds = %229, %218
  store i64 %227, i64* %192, align 8
  store i64 %226, i64* %191, align 8
  store i64 %224, i64* %201, align 8
  %232 = icmp eq i64 %193, 0
  br i1 %232, label %237, label %233

233:                                              ; preds = %231
  %234 = inttoptr i64 %193 to i8*
  call void @_ZdlPv(i8* %234) #14
  %235 = load i32*, i32** %53, align 8
  %236 = ptrtoint i32* %235 to i64
  br label %237

237:                                              ; preds = %186, %231, %233
  %238 = phi i64 [ %188, %186 ], [ %226, %231 ], [ %236, %233 ]
  %239 = phi i32* [ %187, %186 ], [ %225, %231 ], [ %235, %233 ]
  %240 = load i32*, i32** %54, align 8
  %241 = icmp eq i32* %239, %240
  br i1 %241, label %246, label %242

242:                                              ; preds = %237
  store i32 %50, i32* %239, align 4
  %243 = getelementptr inbounds i32, i32* %239, i64 1
  %244 = ptrtoint i32* %243 to i64
  %245 = bitcast i32** %53 to i64*
  store i64 %244, i64* %245, align 8
  br label %296

246:                                              ; preds = %237
  %247 = ptrtoint i32* %240 to i64
  %248 = bitcast i32** %53 to i64*
  %249 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = sub i64 %247, %250
  %252 = ashr exact i64 %251, 2
  %253 = add nsw i64 %252, 1
  %254 = icmp ugt i64 %253, 4611686018427387903
  br i1 %254, label %255, label %257

255:                                              ; preds = %246
  %256 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %256) #13
  unreachable

257:                                              ; preds = %246
  %258 = bitcast i32** %54 to i64*
  %259 = icmp ult i64 %252, 2305843009213693951
  br i1 %259, label %260, label %268

260:                                              ; preds = %257
  %261 = ashr exact i64 %251, 1
  %262 = icmp ult i64 %261, %253
  %263 = select i1 %262, i64 %253, i64 %261
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %273, label %265

265:                                              ; preds = %260
  %266 = icmp ugt i64 %263, 4611686018427387903
  br i1 %266, label %267, label %268

267:                                              ; preds = %265
  call void @abort() #13
  unreachable

268:                                              ; preds = %265, %257
  %269 = phi i64 [ %263, %265 ], [ 4611686018427387903, %257 ]
  %270 = shl i64 %269, 2
  %271 = call i8* @_Znwm(i64 %270) #14
  %272 = bitcast i8* %271 to i32*
  br label %273

273:                                              ; preds = %268, %260
  %274 = phi i64 [ %269, %268 ], [ 0, %260 ]
  %275 = phi i32* [ %272, %268 ], [ null, %260 ]
  %276 = getelementptr inbounds i32, i32* %275, i64 %252
  %277 = getelementptr inbounds i32, i32* %275, i64 %274
  %278 = ptrtoint i32* %277 to i64
  store i32 %50, i32* %276, align 4
  %279 = getelementptr inbounds i32, i32* %276, i64 1
  %280 = ptrtoint i32* %279 to i64
  %281 = sub i64 %238, %250
  %282 = ashr exact i64 %281, 2
  %283 = sub nsw i64 0, %282
  %284 = getelementptr inbounds i32, i32* %276, i64 %283
  %285 = ptrtoint i32* %284 to i64
  %286 = icmp sgt i64 %281, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %273
  %288 = bitcast i32* %284 to i8*
  %289 = inttoptr i64 %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %289, i64 %281, i1 false) #12
  br label %290

290:                                              ; preds = %287, %273
  store i64 %285, i64* %249, align 8
  store i64 %280, i64* %248, align 8
  store i64 %278, i64* %258, align 8
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %296, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %250 to i8*
  call void @_ZdlPv(i8* %293) #14
  %294 = load i32*, i32** %53, align 8
  %295 = ptrtoint i32* %294 to i64
  br label %296

296:                                              ; preds = %242, %290, %292
  %297 = phi i64 [ %244, %242 ], [ %280, %290 ], [ %295, %292 ]
  %298 = phi i32* [ %243, %242 ], [ %279, %290 ], [ %294, %292 ]
  %299 = load i32*, i32** %54, align 8
  %300 = icmp ult i32* %298, %299
  %301 = ptrtoint i32* %299 to i64
  br i1 %300, label %302, label %306

302:                                              ; preds = %296
  store i32 12539, i32* %298, align 4
  %303 = getelementptr inbounds i32, i32* %298, i64 1
  %304 = ptrtoint i32* %303 to i64
  %305 = bitcast i32** %53 to i64*
  store i64 %304, i64* %305, align 8
  br label %358

306:                                              ; preds = %296
  %307 = ptrtoint i32* %298 to i64
  %308 = bitcast i32** %53 to i64*
  %309 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %307, %310
  %312 = ashr exact i64 %311, 2
  %313 = add nsw i64 %312, 1
  %314 = icmp ugt i64 %313, 4611686018427387903
  br i1 %314, label %315, label %317

315:                                              ; preds = %306
  %316 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %316) #13
  unreachable

317:                                              ; preds = %306
  %318 = bitcast i32** %54 to i64*
  %319 = sub i64 %301, %310
  %320 = ashr exact i64 %319, 2
  %321 = icmp ult i64 %320, 2305843009213693951
  br i1 %321, label %322, label %330

322:                                              ; preds = %317
  %323 = ashr exact i64 %319, 1
  %324 = icmp ult i64 %323, %313
  %325 = select i1 %324, i64 %313, i64 %323
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %335, label %327

327:                                              ; preds = %322
  %328 = icmp ugt i64 %325, 4611686018427387903
  br i1 %328, label %329, label %330

329:                                              ; preds = %327
  call void @abort() #13
  unreachable

330:                                              ; preds = %327, %317
  %331 = phi i64 [ %325, %327 ], [ 4611686018427387903, %317 ]
  %332 = shl i64 %331, 2
  %333 = call i8* @_Znwm(i64 %332) #14
  %334 = bitcast i8* %333 to i32*
  br label %335

335:                                              ; preds = %330, %322
  %336 = phi i64 [ %331, %330 ], [ 0, %322 ]
  %337 = phi i32* [ %334, %330 ], [ null, %322 ]
  %338 = getelementptr inbounds i32, i32* %337, i64 %312
  %339 = getelementptr inbounds i32, i32* %337, i64 %336
  %340 = ptrtoint i32* %339 to i64
  store i32 12539, i32* %338, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = ptrtoint i32* %341 to i64
  %343 = sub i64 %297, %310
  %344 = ashr exact i64 %343, 2
  %345 = sub nsw i64 0, %344
  %346 = getelementptr inbounds i32, i32* %338, i64 %345
  %347 = ptrtoint i32* %346 to i64
  %348 = icmp sgt i64 %343, 0
  br i1 %348, label %349, label %352

349:                                              ; preds = %335
  %350 = bitcast i32* %346 to i8*
  %351 = inttoptr i64 %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %350, i8* align 4 %351, i64 %343, i1 false) #12
  br label %352

352:                                              ; preds = %349, %335
  store i64 %347, i64* %309, align 8
  store i64 %342, i64* %308, align 8
  store i64 %340, i64* %318, align 8
  %353 = icmp eq i64 %310, 0
  br i1 %353, label %358, label %354

354:                                              ; preds = %352
  %355 = inttoptr i64 %310 to i8*
  call void @_ZdlPv(i8* %355) #14
  %356 = load i32*, i32** %53, align 8
  %357 = ptrtoint i32* %356 to i64
  br label %358

358:                                              ; preds = %302, %352, %354
  %359 = phi i64 [ %304, %302 ], [ %342, %352 ], [ %357, %354 ]
  %360 = phi i32* [ %303, %302 ], [ %341, %352 ], [ %356, %354 ]
  %361 = load i32*, i32** %54, align 8
  %362 = icmp eq i32* %360, %361
  br i1 %362, label %367, label %363

363:                                              ; preds = %358
  store i32 %49, i32* %360, align 4
  %364 = getelementptr inbounds i32, i32* %360, i64 1
  %365 = ptrtoint i32* %364 to i64
  %366 = bitcast i32** %53 to i64*
  store i64 %365, i64* %366, align 8
  br label %524

367:                                              ; preds = %358
  %368 = ptrtoint i32* %361 to i64
  %369 = bitcast i32** %53 to i64*
  %370 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = sub i64 %368, %371
  %373 = ashr exact i64 %372, 2
  %374 = add nsw i64 %373, 1
  %375 = icmp ugt i64 %374, 4611686018427387903
  br i1 %375, label %376, label %378

376:                                              ; preds = %367
  %377 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %377) #13
  unreachable

378:                                              ; preds = %367
  %379 = bitcast i32** %54 to i64*
  %380 = icmp ult i64 %373, 2305843009213693951
  br i1 %380, label %381, label %389

381:                                              ; preds = %378
  %382 = ashr exact i64 %372, 1
  %383 = icmp ult i64 %382, %374
  %384 = select i1 %383, i64 %374, i64 %382
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %394, label %386

386:                                              ; preds = %381
  %387 = icmp ugt i64 %384, 4611686018427387903
  br i1 %387, label %388, label %389

388:                                              ; preds = %386
  call void @abort() #13
  unreachable

389:                                              ; preds = %386, %378
  %390 = phi i64 [ %384, %386 ], [ 4611686018427387903, %378 ]
  %391 = shl i64 %390, 2
  %392 = call i8* @_Znwm(i64 %391) #14
  %393 = bitcast i8* %392 to i32*
  br label %394

394:                                              ; preds = %389, %381
  %395 = phi i64 [ %390, %389 ], [ 0, %381 ]
  %396 = phi i32* [ %393, %389 ], [ null, %381 ]
  %397 = getelementptr inbounds i32, i32* %396, i64 %373
  %398 = getelementptr inbounds i32, i32* %396, i64 %395
  %399 = ptrtoint i32* %398 to i64
  store i32 %49, i32* %397, align 4
  %400 = getelementptr inbounds i32, i32* %397, i64 1
  %401 = ptrtoint i32* %400 to i64
  %402 = sub i64 %359, %371
  %403 = ashr exact i64 %402, 2
  %404 = sub nsw i64 0, %403
  %405 = getelementptr inbounds i32, i32* %397, i64 %404
  %406 = ptrtoint i32* %405 to i64
  %407 = icmp sgt i64 %402, 0
  br i1 %407, label %408, label %411

408:                                              ; preds = %394
  %409 = bitcast i32* %405 to i8*
  %410 = inttoptr i64 %371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 %410, i64 %402, i1 false) #12
  br label %411

411:                                              ; preds = %408, %394
  store i64 %406, i64* %370, align 8
  store i64 %401, i64* %369, align 8
  store i64 %399, i64* %379, align 8
  %412 = icmp eq i64 %371, 0
  br i1 %412, label %524, label %413

413:                                              ; preds = %411
  %414 = inttoptr i64 %371 to i8*
  call void @_ZdlPv(i8* %414) #14
  br label %524

415:                                              ; preds = %178
  br i1 %182, label %416, label %420

416:                                              ; preds = %415
  store i32 12440, i32* %180, align 4
  %417 = getelementptr inbounds i32, i32* %180, i64 1
  %418 = ptrtoint i32* %417 to i64
  %419 = bitcast i32** %53 to i64*
  store i64 %418, i64* %419, align 8
  br label %467

420:                                              ; preds = %415
  %421 = bitcast i32** %53 to i64*
  %422 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = sub i64 %184, %423
  %425 = ashr exact i64 %424, 2
  %426 = add nsw i64 %425, 1
  %427 = icmp ugt i64 %426, 4611686018427387903
  br i1 %427, label %428, label %430

428:                                              ; preds = %420
  %429 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %429) #13
  unreachable

430:                                              ; preds = %420
  %431 = bitcast i32** %54 to i64*
  %432 = sub i64 %183, %423
  %433 = ashr exact i64 %432, 2
  %434 = icmp ult i64 %433, 2305843009213693951
  br i1 %434, label %435, label %443

435:                                              ; preds = %430
  %436 = ashr exact i64 %432, 1
  %437 = icmp ult i64 %436, %426
  %438 = select i1 %437, i64 %426, i64 %436
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %448, label %440

440:                                              ; preds = %435
  %441 = icmp ugt i64 %438, 4611686018427387903
  br i1 %441, label %442, label %443

442:                                              ; preds = %440
  call void @abort() #13
  unreachable

443:                                              ; preds = %440, %430
  %444 = phi i64 [ %438, %440 ], [ 4611686018427387903, %430 ]
  %445 = shl i64 %444, 2
  %446 = call i8* @_Znwm(i64 %445) #14
  %447 = bitcast i8* %446 to i32*
  br label %448

448:                                              ; preds = %443, %435
  %449 = phi i64 [ %444, %443 ], [ 0, %435 ]
  %450 = phi i8* [ %446, %443 ], [ null, %435 ]
  %451 = phi i32* [ %447, %443 ], [ null, %435 ]
  %452 = getelementptr inbounds i32, i32* %451, i64 %425
  %453 = getelementptr inbounds i32, i32* %451, i64 %449
  %454 = ptrtoint i32* %453 to i64
  store i32 12440, i32* %452, align 4
  %455 = getelementptr inbounds i32, i32* %452, i64 1
  %456 = ptrtoint i32* %455 to i64
  %457 = ptrtoint i32* %451 to i64
  %458 = icmp sgt i64 %424, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %448
  %460 = inttoptr i64 %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %450, i8* align 4 %460, i64 %424, i1 false) #12
  br label %461

461:                                              ; preds = %459, %448
  store i64 %457, i64* %422, align 8
  store i64 %456, i64* %421, align 8
  store i64 %454, i64* %431, align 8
  %462 = icmp eq i64 %423, 0
  br i1 %462, label %467, label %463

463:                                              ; preds = %461
  %464 = inttoptr i64 %423 to i8*
  call void @_ZdlPv(i8* %464) #14
  %465 = load i32*, i32** %53, align 8
  %466 = ptrtoint i32* %465 to i64
  br label %467

467:                                              ; preds = %416, %461, %463
  %468 = phi i64 [ %418, %416 ], [ %456, %461 ], [ %466, %463 ]
  %469 = phi i32* [ %417, %416 ], [ %455, %461 ], [ %465, %463 ]
  %470 = load i32*, i32** %54, align 8
  %471 = icmp eq i32* %469, %470
  br i1 %471, label %476, label %472

472:                                              ; preds = %467
  store i32 %50, i32* %469, align 4
  %473 = getelementptr inbounds i32, i32* %469, i64 1
  %474 = ptrtoint i32* %473 to i64
  %475 = bitcast i32** %53 to i64*
  store i64 %474, i64* %475, align 8
  br label %524

476:                                              ; preds = %467
  %477 = ptrtoint i32* %470 to i64
  %478 = bitcast i32** %53 to i64*
  %479 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = sub i64 %477, %480
  %482 = ashr exact i64 %481, 2
  %483 = add nsw i64 %482, 1
  %484 = icmp ugt i64 %483, 4611686018427387903
  br i1 %484, label %485, label %487

485:                                              ; preds = %476
  %486 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %486) #13
  unreachable

487:                                              ; preds = %476
  %488 = bitcast i32** %54 to i64*
  %489 = icmp ult i64 %482, 2305843009213693951
  br i1 %489, label %490, label %498

490:                                              ; preds = %487
  %491 = ashr exact i64 %481, 1
  %492 = icmp ult i64 %491, %483
  %493 = select i1 %492, i64 %483, i64 %491
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %503, label %495

495:                                              ; preds = %490
  %496 = icmp ugt i64 %493, 4611686018427387903
  br i1 %496, label %497, label %498

497:                                              ; preds = %495
  call void @abort() #13
  unreachable

498:                                              ; preds = %495, %487
  %499 = phi i64 [ %493, %495 ], [ 4611686018427387903, %487 ]
  %500 = shl i64 %499, 2
  %501 = call i8* @_Znwm(i64 %500) #14
  %502 = bitcast i8* %501 to i32*
  br label %503

503:                                              ; preds = %498, %490
  %504 = phi i64 [ %499, %498 ], [ 0, %490 ]
  %505 = phi i32* [ %502, %498 ], [ null, %490 ]
  %506 = getelementptr inbounds i32, i32* %505, i64 %482
  %507 = getelementptr inbounds i32, i32* %505, i64 %504
  %508 = ptrtoint i32* %507 to i64
  store i32 %50, i32* %506, align 4
  %509 = getelementptr inbounds i32, i32* %506, i64 1
  %510 = ptrtoint i32* %509 to i64
  %511 = sub i64 %468, %480
  %512 = ashr exact i64 %511, 2
  %513 = sub nsw i64 0, %512
  %514 = getelementptr inbounds i32, i32* %506, i64 %513
  %515 = ptrtoint i32* %514 to i64
  %516 = icmp sgt i64 %511, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %503
  %518 = bitcast i32* %514 to i8*
  %519 = inttoptr i64 %480 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %518, i8* align 4 %519, i64 %511, i1 false) #12
  br label %520

520:                                              ; preds = %517, %503
  store i64 %515, i64* %479, align 8
  store i64 %510, i64* %478, align 8
  store i64 %508, i64* %488, align 8
  %521 = icmp eq i64 %480, 0
  br i1 %521, label %524, label %522

522:                                              ; preds = %520
  %523 = inttoptr i64 %480 to i8*
  call void @_ZdlPv(i8* %523) #14
  br label %524

524:                                              ; preds = %522, %520, %472, %413, %411, %363
  %525 = call zeroext i1 @_ZN2gl12GLSurfaceEGL34IsCreateContextRobustnessSupportedEv() #12
  br i1 %525, label %526, label %886

526:                                              ; preds = %524
  %527 = load i32*, i32** %53, align 8
  %528 = load i32*, i32** %54, align 8
  %529 = icmp ult i32* %527, %528
  %530 = ptrtoint i32* %528 to i64
  br i1 %529, label %531, label %535

531:                                              ; preds = %526
  store i32 12479, i32* %527, align 4
  %532 = getelementptr inbounds i32, i32* %527, i64 1
  %533 = ptrtoint i32* %532 to i64
  %534 = bitcast i32** %53 to i64*
  store i64 %533, i64* %534, align 8
  br label %583

535:                                              ; preds = %526
  %536 = ptrtoint i32* %527 to i64
  %537 = bitcast i32** %53 to i64*
  %538 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = sub i64 %536, %539
  %541 = ashr exact i64 %540, 2
  %542 = add nsw i64 %541, 1
  %543 = icmp ugt i64 %542, 4611686018427387903
  br i1 %543, label %544, label %546

544:                                              ; preds = %535
  %545 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %545) #13
  unreachable

546:                                              ; preds = %535
  %547 = bitcast i32** %54 to i64*
  %548 = sub i64 %530, %539
  %549 = ashr exact i64 %548, 2
  %550 = icmp ult i64 %549, 2305843009213693951
  br i1 %550, label %551, label %559

551:                                              ; preds = %546
  %552 = ashr exact i64 %548, 1
  %553 = icmp ult i64 %552, %542
  %554 = select i1 %553, i64 %542, i64 %552
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %564, label %556

556:                                              ; preds = %551
  %557 = icmp ugt i64 %554, 4611686018427387903
  br i1 %557, label %558, label %559

558:                                              ; preds = %556
  call void @abort() #13
  unreachable

559:                                              ; preds = %556, %546
  %560 = phi i64 [ %554, %556 ], [ 4611686018427387903, %546 ]
  %561 = shl i64 %560, 2
  %562 = call i8* @_Znwm(i64 %561) #14
  %563 = bitcast i8* %562 to i32*
  br label %564

564:                                              ; preds = %559, %551
  %565 = phi i64 [ %560, %559 ], [ 0, %551 ]
  %566 = phi i8* [ %562, %559 ], [ null, %551 ]
  %567 = phi i32* [ %563, %559 ], [ null, %551 ]
  %568 = getelementptr inbounds i32, i32* %567, i64 %541
  %569 = getelementptr inbounds i32, i32* %567, i64 %565
  %570 = ptrtoint i32* %569 to i64
  store i32 12479, i32* %568, align 4
  %571 = getelementptr inbounds i32, i32* %568, i64 1
  %572 = ptrtoint i32* %571 to i64
  %573 = ptrtoint i32* %567 to i64
  %574 = icmp sgt i64 %540, 0
  br i1 %574, label %575, label %577

575:                                              ; preds = %564
  %576 = inttoptr i64 %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %566, i8* align 4 %576, i64 %540, i1 false) #12
  br label %577

577:                                              ; preds = %575, %564
  store i64 %573, i64* %538, align 8
  store i64 %572, i64* %537, align 8
  store i64 %570, i64* %547, align 8
  %578 = icmp eq i64 %539, 0
  br i1 %578, label %583, label %579

579:                                              ; preds = %577
  %580 = inttoptr i64 %539 to i8*
  call void @_ZdlPv(i8* %580) #14
  %581 = load i32*, i32** %53, align 8
  %582 = ptrtoint i32* %581 to i64
  br label %583

583:                                              ; preds = %531, %577, %579
  %584 = phi i64 [ %533, %531 ], [ %572, %577 ], [ %582, %579 ]
  %585 = phi i32* [ %532, %531 ], [ %571, %577 ], [ %581, %579 ]
  %586 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 6
  %587 = load i8, i8* %586, align 1, !range !2
  %588 = zext i8 %587 to i32
  %589 = load i32*, i32** %54, align 8
  %590 = icmp ult i32* %585, %589
  %591 = ptrtoint i32* %589 to i64
  br i1 %590, label %592, label %596

592:                                              ; preds = %583
  store i32 %588, i32* %585, align 4
  %593 = getelementptr inbounds i32, i32* %585, i64 1
  %594 = ptrtoint i32* %593 to i64
  %595 = bitcast i32** %53 to i64*
  store i64 %594, i64* %595, align 8
  br label %646

596:                                              ; preds = %583
  %597 = ptrtoint i32* %585 to i64
  %598 = bitcast i32** %53 to i64*
  %599 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = sub i64 %597, %600
  %602 = ashr exact i64 %601, 2
  %603 = add nsw i64 %602, 1
  %604 = icmp ugt i64 %603, 4611686018427387903
  br i1 %604, label %605, label %607

605:                                              ; preds = %596
  %606 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %606) #13
  unreachable

607:                                              ; preds = %596
  %608 = bitcast i32** %54 to i64*
  %609 = sub i64 %591, %600
  %610 = ashr exact i64 %609, 2
  %611 = icmp ult i64 %610, 2305843009213693951
  br i1 %611, label %612, label %620

612:                                              ; preds = %607
  %613 = ashr exact i64 %609, 1
  %614 = icmp ult i64 %613, %603
  %615 = select i1 %614, i64 %603, i64 %613
  %616 = icmp eq i64 %615, 0
  br i1 %616, label %625, label %617

617:                                              ; preds = %612
  %618 = icmp ugt i64 %615, 4611686018427387903
  br i1 %618, label %619, label %620

619:                                              ; preds = %617
  call void @abort() #13
  unreachable

620:                                              ; preds = %617, %607
  %621 = phi i64 [ %615, %617 ], [ 4611686018427387903, %607 ]
  %622 = shl i64 %621, 2
  %623 = call i8* @_Znwm(i64 %622) #14
  %624 = bitcast i8* %623 to i32*
  br label %625

625:                                              ; preds = %620, %612
  %626 = phi i64 [ %621, %620 ], [ 0, %612 ]
  %627 = phi i32* [ %624, %620 ], [ null, %612 ]
  %628 = getelementptr inbounds i32, i32* %627, i64 %602
  %629 = getelementptr inbounds i32, i32* %627, i64 %626
  %630 = ptrtoint i32* %629 to i64
  store i32 %588, i32* %628, align 4
  %631 = getelementptr inbounds i32, i32* %628, i64 1
  %632 = ptrtoint i32* %631 to i64
  %633 = sub i64 %584, %600
  %634 = ashr exact i64 %633, 2
  %635 = sub nsw i64 0, %634
  %636 = getelementptr inbounds i32, i32* %628, i64 %635
  %637 = ptrtoint i32* %636 to i64
  %638 = icmp sgt i64 %633, 0
  br i1 %638, label %639, label %642

639:                                              ; preds = %625
  %640 = bitcast i32* %636 to i8*
  %641 = inttoptr i64 %600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %640, i8* align 4 %641, i64 %633, i1 false) #12
  br label %642

642:                                              ; preds = %639, %625
  store i64 %637, i64* %599, align 8
  store i64 %632, i64* %598, align 8
  store i64 %630, i64* %608, align 8
  %643 = icmp eq i64 %600, 0
  br i1 %643, label %646, label %644

644:                                              ; preds = %642
  %645 = inttoptr i64 %600 to i8*
  call void @_ZdlPv(i8* %645) #14
  br label %646

646:                                              ; preds = %592, %642, %644
  %647 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 10
  %648 = load i8, i8* %647, align 1, !range !2
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %886, label %650

650:                                              ; preds = %646
  %651 = load i32*, i32** %53, align 8
  %652 = load i32*, i32** %54, align 8
  %653 = icmp ult i32* %651, %652
  %654 = ptrtoint i32* %652 to i64
  br i1 %653, label %655, label %659

655:                                              ; preds = %650
  store i32 12600, i32* %651, align 4
  %656 = getelementptr inbounds i32, i32* %651, i64 1
  %657 = ptrtoint i32* %656 to i64
  %658 = bitcast i32** %53 to i64*
  store i64 %657, i64* %658, align 8
  br label %707

659:                                              ; preds = %650
  %660 = ptrtoint i32* %651 to i64
  %661 = bitcast i32** %53 to i64*
  %662 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = sub i64 %660, %663
  %665 = ashr exact i64 %664, 2
  %666 = add nsw i64 %665, 1
  %667 = icmp ugt i64 %666, 4611686018427387903
  br i1 %667, label %668, label %670

668:                                              ; preds = %659
  %669 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %669) #13
  unreachable

670:                                              ; preds = %659
  %671 = bitcast i32** %54 to i64*
  %672 = sub i64 %654, %663
  %673 = ashr exact i64 %672, 2
  %674 = icmp ult i64 %673, 2305843009213693951
  br i1 %674, label %675, label %683

675:                                              ; preds = %670
  %676 = ashr exact i64 %672, 1
  %677 = icmp ult i64 %676, %666
  %678 = select i1 %677, i64 %666, i64 %676
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %688, label %680

680:                                              ; preds = %675
  %681 = icmp ugt i64 %678, 4611686018427387903
  br i1 %681, label %682, label %683

682:                                              ; preds = %680
  call void @abort() #13
  unreachable

683:                                              ; preds = %680, %670
  %684 = phi i64 [ %678, %680 ], [ 4611686018427387903, %670 ]
  %685 = shl i64 %684, 2
  %686 = call i8* @_Znwm(i64 %685) #14
  %687 = bitcast i8* %686 to i32*
  br label %688

688:                                              ; preds = %683, %675
  %689 = phi i64 [ %684, %683 ], [ 0, %675 ]
  %690 = phi i8* [ %686, %683 ], [ null, %675 ]
  %691 = phi i32* [ %687, %683 ], [ null, %675 ]
  %692 = getelementptr inbounds i32, i32* %691, i64 %665
  %693 = getelementptr inbounds i32, i32* %691, i64 %689
  %694 = ptrtoint i32* %693 to i64
  store i32 12600, i32* %692, align 4
  %695 = getelementptr inbounds i32, i32* %692, i64 1
  %696 = ptrtoint i32* %695 to i64
  %697 = ptrtoint i32* %691 to i64
  %698 = icmp sgt i64 %664, 0
  br i1 %698, label %699, label %701

699:                                              ; preds = %688
  %700 = inttoptr i64 %663 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %690, i8* align 4 %700, i64 %664, i1 false) #12
  br label %701

701:                                              ; preds = %699, %688
  store i64 %697, i64* %662, align 8
  store i64 %696, i64* %661, align 8
  store i64 %694, i64* %671, align 8
  %702 = icmp eq i64 %663, 0
  br i1 %702, label %707, label %703

703:                                              ; preds = %701
  %704 = inttoptr i64 %663 to i8*
  call void @_ZdlPv(i8* %704) #14
  %705 = load i32*, i32** %53, align 8
  %706 = ptrtoint i32* %705 to i64
  br label %707

707:                                              ; preds = %655, %701, %703
  %708 = phi i64 [ %657, %655 ], [ %696, %701 ], [ %706, %703 ]
  %709 = phi i32* [ %656, %655 ], [ %695, %701 ], [ %705, %703 ]
  %710 = load i32*, i32** %54, align 8
  %711 = icmp ult i32* %709, %710
  %712 = ptrtoint i32* %710 to i64
  br i1 %711, label %713, label %717

713:                                              ; preds = %707
  store i32 12735, i32* %709, align 4
  %714 = getelementptr inbounds i32, i32* %709, i64 1
  %715 = ptrtoint i32* %714 to i64
  %716 = bitcast i32** %53 to i64*
  store i64 %715, i64* %716, align 8
  br label %767

717:                                              ; preds = %707
  %718 = ptrtoint i32* %709 to i64
  %719 = bitcast i32** %53 to i64*
  %720 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %721 = load i64, i64* %720, align 8
  %722 = sub i64 %718, %721
  %723 = ashr exact i64 %722, 2
  %724 = add nsw i64 %723, 1
  %725 = icmp ugt i64 %724, 4611686018427387903
  br i1 %725, label %726, label %728

726:                                              ; preds = %717
  %727 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %727) #13
  unreachable

728:                                              ; preds = %717
  %729 = bitcast i32** %54 to i64*
  %730 = sub i64 %712, %721
  %731 = ashr exact i64 %730, 2
  %732 = icmp ult i64 %731, 2305843009213693951
  br i1 %732, label %733, label %741

733:                                              ; preds = %728
  %734 = ashr exact i64 %730, 1
  %735 = icmp ult i64 %734, %724
  %736 = select i1 %735, i64 %724, i64 %734
  %737 = icmp eq i64 %736, 0
  br i1 %737, label %746, label %738

738:                                              ; preds = %733
  %739 = icmp ugt i64 %736, 4611686018427387903
  br i1 %739, label %740, label %741

740:                                              ; preds = %738
  call void @abort() #13
  unreachable

741:                                              ; preds = %738, %728
  %742 = phi i64 [ %736, %738 ], [ 4611686018427387903, %728 ]
  %743 = shl i64 %742, 2
  %744 = call i8* @_Znwm(i64 %743) #14
  %745 = bitcast i8* %744 to i32*
  br label %746

746:                                              ; preds = %741, %733
  %747 = phi i64 [ %742, %741 ], [ 0, %733 ]
  %748 = phi i32* [ %745, %741 ], [ null, %733 ]
  %749 = getelementptr inbounds i32, i32* %748, i64 %723
  %750 = getelementptr inbounds i32, i32* %748, i64 %747
  %751 = ptrtoint i32* %750 to i64
  store i32 12735, i32* %749, align 4
  %752 = getelementptr inbounds i32, i32* %749, i64 1
  %753 = ptrtoint i32* %752 to i64
  %754 = sub i64 %708, %721
  %755 = ashr exact i64 %754, 2
  %756 = sub nsw i64 0, %755
  %757 = getelementptr inbounds i32, i32* %749, i64 %756
  %758 = ptrtoint i32* %757 to i64
  %759 = icmp sgt i64 %754, 0
  br i1 %759, label %760, label %763

760:                                              ; preds = %746
  %761 = bitcast i32* %757 to i8*
  %762 = inttoptr i64 %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %761, i8* align 4 %762, i64 %754, i1 false) #12
  br label %763

763:                                              ; preds = %760, %746
  store i64 %758, i64* %720, align 8
  store i64 %753, i64* %719, align 8
  store i64 %751, i64* %729, align 8
  %764 = icmp eq i64 %721, 0
  br i1 %764, label %767, label %765

765:                                              ; preds = %763
  %766 = inttoptr i64 %721 to i8*
  call void @_ZdlPv(i8* %766) #14
  br label %767

767:                                              ; preds = %713, %763, %765
  %768 = call zeroext i1 @_ZN2gl12GLSurfaceEGL37IsRobustnessVideoMemoryPurgeSupportedEv() #12
  br i1 %768, label %769, label %886

769:                                              ; preds = %767
  %770 = load i32*, i32** %53, align 8
  %771 = load i32*, i32** %54, align 8
  %772 = icmp ult i32* %770, %771
  %773 = ptrtoint i32* %771 to i64
  br i1 %772, label %774, label %778

774:                                              ; preds = %769
  store i32 13132, i32* %770, align 4
  %775 = getelementptr inbounds i32, i32* %770, i64 1
  %776 = ptrtoint i32* %775 to i64
  %777 = bitcast i32** %53 to i64*
  store i64 %776, i64* %777, align 8
  br label %826

778:                                              ; preds = %769
  %779 = ptrtoint i32* %770 to i64
  %780 = bitcast i32** %53 to i64*
  %781 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %782 = load i64, i64* %781, align 8
  %783 = sub i64 %779, %782
  %784 = ashr exact i64 %783, 2
  %785 = add nsw i64 %784, 1
  %786 = icmp ugt i64 %785, 4611686018427387903
  br i1 %786, label %787, label %789

787:                                              ; preds = %778
  %788 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %788) #13
  unreachable

789:                                              ; preds = %778
  %790 = bitcast i32** %54 to i64*
  %791 = sub i64 %773, %782
  %792 = ashr exact i64 %791, 2
  %793 = icmp ult i64 %792, 2305843009213693951
  br i1 %793, label %794, label %802

794:                                              ; preds = %789
  %795 = ashr exact i64 %791, 1
  %796 = icmp ult i64 %795, %785
  %797 = select i1 %796, i64 %785, i64 %795
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %807, label %799

799:                                              ; preds = %794
  %800 = icmp ugt i64 %797, 4611686018427387903
  br i1 %800, label %801, label %802

801:                                              ; preds = %799
  call void @abort() #13
  unreachable

802:                                              ; preds = %799, %789
  %803 = phi i64 [ %797, %799 ], [ 4611686018427387903, %789 ]
  %804 = shl i64 %803, 2
  %805 = call i8* @_Znwm(i64 %804) #14
  %806 = bitcast i8* %805 to i32*
  br label %807

807:                                              ; preds = %802, %794
  %808 = phi i64 [ %803, %802 ], [ 0, %794 ]
  %809 = phi i8* [ %805, %802 ], [ null, %794 ]
  %810 = phi i32* [ %806, %802 ], [ null, %794 ]
  %811 = getelementptr inbounds i32, i32* %810, i64 %784
  %812 = getelementptr inbounds i32, i32* %810, i64 %808
  %813 = ptrtoint i32* %812 to i64
  store i32 13132, i32* %811, align 4
  %814 = getelementptr inbounds i32, i32* %811, i64 1
  %815 = ptrtoint i32* %814 to i64
  %816 = ptrtoint i32* %810 to i64
  %817 = icmp sgt i64 %783, 0
  br i1 %817, label %818, label %820

818:                                              ; preds = %807
  %819 = inttoptr i64 %782 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %809, i8* align 4 %819, i64 %783, i1 false) #12
  br label %820

820:                                              ; preds = %818, %807
  store i64 %816, i64* %781, align 8
  store i64 %815, i64* %780, align 8
  store i64 %813, i64* %790, align 8
  %821 = icmp eq i64 %782, 0
  br i1 %821, label %826, label %822

822:                                              ; preds = %820
  %823 = inttoptr i64 %782 to i8*
  call void @_ZdlPv(i8* %823) #14
  %824 = load i32*, i32** %53, align 8
  %825 = ptrtoint i32* %824 to i64
  br label %826

826:                                              ; preds = %774, %820, %822
  %827 = phi i64 [ %776, %774 ], [ %815, %820 ], [ %825, %822 ]
  %828 = phi i32* [ %775, %774 ], [ %814, %820 ], [ %824, %822 ]
  %829 = load i32*, i32** %54, align 8
  %830 = icmp ult i32* %828, %829
  %831 = ptrtoint i32* %829 to i64
  br i1 %830, label %832, label %836

832:                                              ; preds = %826
  store i32 1, i32* %828, align 4
  %833 = getelementptr inbounds i32, i32* %828, i64 1
  %834 = ptrtoint i32* %833 to i64
  %835 = bitcast i32** %53 to i64*
  store i64 %834, i64* %835, align 8
  br label %886

836:                                              ; preds = %826
  %837 = ptrtoint i32* %828 to i64
  %838 = bitcast i32** %53 to i64*
  %839 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %840 = load i64, i64* %839, align 8
  %841 = sub i64 %837, %840
  %842 = ashr exact i64 %841, 2
  %843 = add nsw i64 %842, 1
  %844 = icmp ugt i64 %843, 4611686018427387903
  br i1 %844, label %845, label %847

845:                                              ; preds = %836
  %846 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %846) #13
  unreachable

847:                                              ; preds = %836
  %848 = bitcast i32** %54 to i64*
  %849 = sub i64 %831, %840
  %850 = ashr exact i64 %849, 2
  %851 = icmp ult i64 %850, 2305843009213693951
  br i1 %851, label %852, label %860

852:                                              ; preds = %847
  %853 = ashr exact i64 %849, 1
  %854 = icmp ult i64 %853, %843
  %855 = select i1 %854, i64 %843, i64 %853
  %856 = icmp eq i64 %855, 0
  br i1 %856, label %865, label %857

857:                                              ; preds = %852
  %858 = icmp ugt i64 %855, 4611686018427387903
  br i1 %858, label %859, label %860

859:                                              ; preds = %857
  call void @abort() #13
  unreachable

860:                                              ; preds = %857, %847
  %861 = phi i64 [ %855, %857 ], [ 4611686018427387903, %847 ]
  %862 = shl i64 %861, 2
  %863 = call i8* @_Znwm(i64 %862) #14
  %864 = bitcast i8* %863 to i32*
  br label %865

865:                                              ; preds = %860, %852
  %866 = phi i64 [ %861, %860 ], [ 0, %852 ]
  %867 = phi i32* [ %864, %860 ], [ null, %852 ]
  %868 = getelementptr inbounds i32, i32* %867, i64 %842
  %869 = getelementptr inbounds i32, i32* %867, i64 %866
  %870 = ptrtoint i32* %869 to i64
  store i32 1, i32* %868, align 4
  %871 = getelementptr inbounds i32, i32* %868, i64 1
  %872 = ptrtoint i32* %871 to i64
  %873 = sub i64 %827, %840
  %874 = ashr exact i64 %873, 2
  %875 = sub nsw i64 0, %874
  %876 = getelementptr inbounds i32, i32* %868, i64 %875
  %877 = ptrtoint i32* %876 to i64
  %878 = icmp sgt i64 %873, 0
  br i1 %878, label %879, label %882

879:                                              ; preds = %865
  %880 = bitcast i32* %876 to i8*
  %881 = inttoptr i64 %840 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %880, i8* align 4 %881, i64 %873, i1 false) #12
  br label %882

882:                                              ; preds = %879, %865
  store i64 %877, i64* %839, align 8
  store i64 %872, i64* %838, align 8
  store i64 %870, i64* %848, align 8
  %883 = icmp eq i64 %840, 0
  br i1 %883, label %886, label %884

884:                                              ; preds = %882
  %885 = inttoptr i64 %840 to i8*
  call void @_ZdlPv(i8* %885) #14
  br label %886

886:                                              ; preds = %884, %882, %832, %646, %524, %767
  %887 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %888 = bitcast %"class.gl::EGLApi"* %887 to i32 (%"class.gl::EGLApi"*, i32)***
  %889 = load i32 (%"class.gl::EGLApi"*, i32)**, i32 (%"class.gl::EGLApi"*, i32)*** %888, align 8
  %890 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i32)*, i32 (%"class.gl::EGLApi"*, i32)** %889, i64 3
  %891 = load i32 (%"class.gl::EGLApi"*, i32)*, i32 (%"class.gl::EGLApi"*, i32)** %890, align 8
  %892 = call i32 %891(%"class.gl::EGLApi"* %887, i32 12448) #12
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %904

894:                                              ; preds = %886
  %895 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %895, label %896, label %2622

896:                                              ; preds = %894
  %897 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %897) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 166, i32 2) #12
  %898 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %899 = bitcast %"class.std::__1::basic_ostringstream"* %898 to %"class.std::__1::basic_ostream"*
  %900 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %899, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 29) #12
  %901 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %902 = call i64 @strlen(i8* %901) #12
  %903 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %900, i8* %901, i64 %902) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %897) #12
  br label %2622

904:                                              ; preds = %886
  %905 = call zeroext i1 @_ZN2gl12GLSurfaceEGL45IsCreateContextBindGeneratesResourceSupportedEv() #12
  br i1 %905, label %906, label %1026

906:                                              ; preds = %904
  %907 = load i32*, i32** %53, align 8
  %908 = load i32*, i32** %54, align 8
  %909 = icmp ult i32* %907, %908
  %910 = ptrtoint i32* %908 to i64
  br i1 %909, label %911, label %915

911:                                              ; preds = %906
  store i32 13229, i32* %907, align 4
  %912 = getelementptr inbounds i32, i32* %907, i64 1
  %913 = ptrtoint i32* %912 to i64
  %914 = bitcast i32** %53 to i64*
  store i64 %913, i64* %914, align 8
  br label %963

915:                                              ; preds = %906
  %916 = ptrtoint i32* %907 to i64
  %917 = bitcast i32** %53 to i64*
  %918 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %919 = load i64, i64* %918, align 8
  %920 = sub i64 %916, %919
  %921 = ashr exact i64 %920, 2
  %922 = add nsw i64 %921, 1
  %923 = icmp ugt i64 %922, 4611686018427387903
  br i1 %923, label %924, label %926

924:                                              ; preds = %915
  %925 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %925) #13
  unreachable

926:                                              ; preds = %915
  %927 = bitcast i32** %54 to i64*
  %928 = sub i64 %910, %919
  %929 = ashr exact i64 %928, 2
  %930 = icmp ult i64 %929, 2305843009213693951
  br i1 %930, label %931, label %939

931:                                              ; preds = %926
  %932 = ashr exact i64 %928, 1
  %933 = icmp ult i64 %932, %922
  %934 = select i1 %933, i64 %922, i64 %932
  %935 = icmp eq i64 %934, 0
  br i1 %935, label %944, label %936

936:                                              ; preds = %931
  %937 = icmp ugt i64 %934, 4611686018427387903
  br i1 %937, label %938, label %939

938:                                              ; preds = %936
  call void @abort() #13
  unreachable

939:                                              ; preds = %936, %926
  %940 = phi i64 [ %934, %936 ], [ 4611686018427387903, %926 ]
  %941 = shl i64 %940, 2
  %942 = call i8* @_Znwm(i64 %941) #14
  %943 = bitcast i8* %942 to i32*
  br label %944

944:                                              ; preds = %939, %931
  %945 = phi i64 [ %940, %939 ], [ 0, %931 ]
  %946 = phi i8* [ %942, %939 ], [ null, %931 ]
  %947 = phi i32* [ %943, %939 ], [ null, %931 ]
  %948 = getelementptr inbounds i32, i32* %947, i64 %921
  %949 = getelementptr inbounds i32, i32* %947, i64 %945
  %950 = ptrtoint i32* %949 to i64
  store i32 13229, i32* %948, align 4
  %951 = getelementptr inbounds i32, i32* %948, i64 1
  %952 = ptrtoint i32* %951 to i64
  %953 = ptrtoint i32* %947 to i64
  %954 = icmp sgt i64 %920, 0
  br i1 %954, label %955, label %957

955:                                              ; preds = %944
  %956 = inttoptr i64 %919 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %946, i8* align 4 %956, i64 %920, i1 false) #12
  br label %957

957:                                              ; preds = %955, %944
  store i64 %953, i64* %918, align 8
  store i64 %952, i64* %917, align 8
  store i64 %950, i64* %927, align 8
  %958 = icmp eq i64 %919, 0
  br i1 %958, label %963, label %959

959:                                              ; preds = %957
  %960 = inttoptr i64 %919 to i8*
  call void @_ZdlPv(i8* %960) #14
  %961 = load i32*, i32** %53, align 8
  %962 = ptrtoint i32* %961 to i64
  br label %963

963:                                              ; preds = %911, %957, %959
  %964 = phi i64 [ %913, %911 ], [ %952, %957 ], [ %962, %959 ]
  %965 = phi i32* [ %912, %911 ], [ %951, %957 ], [ %961, %959 ]
  %966 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 1
  %967 = load i8, i8* %966, align 4, !range !2
  %968 = zext i8 %967 to i32
  %969 = load i32*, i32** %54, align 8
  %970 = icmp ult i32* %965, %969
  %971 = ptrtoint i32* %969 to i64
  br i1 %970, label %972, label %976

972:                                              ; preds = %963
  store i32 %968, i32* %965, align 4
  %973 = getelementptr inbounds i32, i32* %965, i64 1
  %974 = ptrtoint i32* %973 to i64
  %975 = bitcast i32** %53 to i64*
  store i64 %974, i64* %975, align 8
  br label %1026

976:                                              ; preds = %963
  %977 = ptrtoint i32* %965 to i64
  %978 = bitcast i32** %53 to i64*
  %979 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %980 = load i64, i64* %979, align 8
  %981 = sub i64 %977, %980
  %982 = ashr exact i64 %981, 2
  %983 = add nsw i64 %982, 1
  %984 = icmp ugt i64 %983, 4611686018427387903
  br i1 %984, label %985, label %987

985:                                              ; preds = %976
  %986 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %986) #13
  unreachable

987:                                              ; preds = %976
  %988 = bitcast i32** %54 to i64*
  %989 = sub i64 %971, %980
  %990 = ashr exact i64 %989, 2
  %991 = icmp ult i64 %990, 2305843009213693951
  br i1 %991, label %992, label %1000

992:                                              ; preds = %987
  %993 = ashr exact i64 %989, 1
  %994 = icmp ult i64 %993, %983
  %995 = select i1 %994, i64 %983, i64 %993
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %1005, label %997

997:                                              ; preds = %992
  %998 = icmp ugt i64 %995, 4611686018427387903
  br i1 %998, label %999, label %1000

999:                                              ; preds = %997
  call void @abort() #13
  unreachable

1000:                                             ; preds = %997, %987
  %1001 = phi i64 [ %995, %997 ], [ 4611686018427387903, %987 ]
  %1002 = shl i64 %1001, 2
  %1003 = call i8* @_Znwm(i64 %1002) #14
  %1004 = bitcast i8* %1003 to i32*
  br label %1005

1005:                                             ; preds = %1000, %992
  %1006 = phi i64 [ %1001, %1000 ], [ 0, %992 ]
  %1007 = phi i32* [ %1004, %1000 ], [ null, %992 ]
  %1008 = getelementptr inbounds i32, i32* %1007, i64 %982
  %1009 = getelementptr inbounds i32, i32* %1007, i64 %1006
  %1010 = ptrtoint i32* %1009 to i64
  store i32 %968, i32* %1008, align 4
  %1011 = getelementptr inbounds i32, i32* %1008, i64 1
  %1012 = ptrtoint i32* %1011 to i64
  %1013 = sub i64 %964, %980
  %1014 = ashr exact i64 %1013, 2
  %1015 = sub nsw i64 0, %1014
  %1016 = getelementptr inbounds i32, i32* %1008, i64 %1015
  %1017 = ptrtoint i32* %1016 to i64
  %1018 = icmp sgt i64 %1013, 0
  br i1 %1018, label %1019, label %1022

1019:                                             ; preds = %1005
  %1020 = bitcast i32* %1016 to i8*
  %1021 = inttoptr i64 %980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1020, i8* align 4 %1021, i64 %1013, i1 false) #12
  br label %1022

1022:                                             ; preds = %1019, %1005
  store i64 %1017, i64* %979, align 8
  store i64 %1012, i64* %978, align 8
  store i64 %1010, i64* %988, align 8
  %1023 = icmp eq i64 %980, 0
  br i1 %1023, label %1026, label %1024

1024:                                             ; preds = %1022
  %1025 = inttoptr i64 %980 to i8*
  call void @_ZdlPv(i8* %1025) #14
  br label %1026

1026:                                             ; preds = %1024, %1022, %972, %904
  %1027 = call zeroext i1 @_ZN2gl12GLSurfaceEGL42IsCreateContextWebGLCompatabilitySupportedEv() #12
  br i1 %1027, label %1028, label %1148

1028:                                             ; preds = %1026
  %1029 = load i32*, i32** %53, align 8
  %1030 = load i32*, i32** %54, align 8
  %1031 = icmp ult i32* %1029, %1030
  %1032 = ptrtoint i32* %1030 to i64
  br i1 %1031, label %1033, label %1037

1033:                                             ; preds = %1028
  store i32 13228, i32* %1029, align 4
  %1034 = getelementptr inbounds i32, i32* %1029, i64 1
  %1035 = ptrtoint i32* %1034 to i64
  %1036 = bitcast i32** %53 to i64*
  store i64 %1035, i64* %1036, align 8
  br label %1085

1037:                                             ; preds = %1028
  %1038 = ptrtoint i32* %1029 to i64
  %1039 = bitcast i32** %53 to i64*
  %1040 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1041 = load i64, i64* %1040, align 8
  %1042 = sub i64 %1038, %1041
  %1043 = ashr exact i64 %1042, 2
  %1044 = add nsw i64 %1043, 1
  %1045 = icmp ugt i64 %1044, 4611686018427387903
  br i1 %1045, label %1046, label %1048

1046:                                             ; preds = %1037
  %1047 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1047) #13
  unreachable

1048:                                             ; preds = %1037
  %1049 = bitcast i32** %54 to i64*
  %1050 = sub i64 %1032, %1041
  %1051 = ashr exact i64 %1050, 2
  %1052 = icmp ult i64 %1051, 2305843009213693951
  br i1 %1052, label %1053, label %1061

1053:                                             ; preds = %1048
  %1054 = ashr exact i64 %1050, 1
  %1055 = icmp ult i64 %1054, %1044
  %1056 = select i1 %1055, i64 %1044, i64 %1054
  %1057 = icmp eq i64 %1056, 0
  br i1 %1057, label %1066, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp ugt i64 %1056, 4611686018427387903
  br i1 %1059, label %1060, label %1061

1060:                                             ; preds = %1058
  call void @abort() #13
  unreachable

1061:                                             ; preds = %1058, %1048
  %1062 = phi i64 [ %1056, %1058 ], [ 4611686018427387903, %1048 ]
  %1063 = shl i64 %1062, 2
  %1064 = call i8* @_Znwm(i64 %1063) #14
  %1065 = bitcast i8* %1064 to i32*
  br label %1066

1066:                                             ; preds = %1061, %1053
  %1067 = phi i64 [ %1062, %1061 ], [ 0, %1053 ]
  %1068 = phi i8* [ %1064, %1061 ], [ null, %1053 ]
  %1069 = phi i32* [ %1065, %1061 ], [ null, %1053 ]
  %1070 = getelementptr inbounds i32, i32* %1069, i64 %1043
  %1071 = getelementptr inbounds i32, i32* %1069, i64 %1067
  %1072 = ptrtoint i32* %1071 to i64
  store i32 13228, i32* %1070, align 4
  %1073 = getelementptr inbounds i32, i32* %1070, i64 1
  %1074 = ptrtoint i32* %1073 to i64
  %1075 = ptrtoint i32* %1069 to i64
  %1076 = icmp sgt i64 %1042, 0
  br i1 %1076, label %1077, label %1079

1077:                                             ; preds = %1066
  %1078 = inttoptr i64 %1041 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1068, i8* align 4 %1078, i64 %1042, i1 false) #12
  br label %1079

1079:                                             ; preds = %1077, %1066
  store i64 %1075, i64* %1040, align 8
  store i64 %1074, i64* %1039, align 8
  store i64 %1072, i64* %1049, align 8
  %1080 = icmp eq i64 %1041, 0
  br i1 %1080, label %1085, label %1081

1081:                                             ; preds = %1079
  %1082 = inttoptr i64 %1041 to i8*
  call void @_ZdlPv(i8* %1082) #14
  %1083 = load i32*, i32** %53, align 8
  %1084 = ptrtoint i32* %1083 to i64
  br label %1085

1085:                                             ; preds = %1033, %1079, %1081
  %1086 = phi i64 [ %1035, %1033 ], [ %1074, %1079 ], [ %1084, %1081 ]
  %1087 = phi i32* [ %1034, %1033 ], [ %1073, %1079 ], [ %1083, %1081 ]
  %1088 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 2
  %1089 = load i8, i8* %1088, align 1, !range !2
  %1090 = zext i8 %1089 to i32
  %1091 = load i32*, i32** %54, align 8
  %1092 = icmp ult i32* %1087, %1091
  %1093 = ptrtoint i32* %1091 to i64
  br i1 %1092, label %1094, label %1098

1094:                                             ; preds = %1085
  store i32 %1090, i32* %1087, align 4
  %1095 = getelementptr inbounds i32, i32* %1087, i64 1
  %1096 = ptrtoint i32* %1095 to i64
  %1097 = bitcast i32** %53 to i64*
  store i64 %1096, i64* %1097, align 8
  br label %1148

1098:                                             ; preds = %1085
  %1099 = ptrtoint i32* %1087 to i64
  %1100 = bitcast i32** %53 to i64*
  %1101 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1102 = load i64, i64* %1101, align 8
  %1103 = sub i64 %1099, %1102
  %1104 = ashr exact i64 %1103, 2
  %1105 = add nsw i64 %1104, 1
  %1106 = icmp ugt i64 %1105, 4611686018427387903
  br i1 %1106, label %1107, label %1109

1107:                                             ; preds = %1098
  %1108 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1108) #13
  unreachable

1109:                                             ; preds = %1098
  %1110 = bitcast i32** %54 to i64*
  %1111 = sub i64 %1093, %1102
  %1112 = ashr exact i64 %1111, 2
  %1113 = icmp ult i64 %1112, 2305843009213693951
  br i1 %1113, label %1114, label %1122

1114:                                             ; preds = %1109
  %1115 = ashr exact i64 %1111, 1
  %1116 = icmp ult i64 %1115, %1105
  %1117 = select i1 %1116, i64 %1105, i64 %1115
  %1118 = icmp eq i64 %1117, 0
  br i1 %1118, label %1127, label %1119

1119:                                             ; preds = %1114
  %1120 = icmp ugt i64 %1117, 4611686018427387903
  br i1 %1120, label %1121, label %1122

1121:                                             ; preds = %1119
  call void @abort() #13
  unreachable

1122:                                             ; preds = %1119, %1109
  %1123 = phi i64 [ %1117, %1119 ], [ 4611686018427387903, %1109 ]
  %1124 = shl i64 %1123, 2
  %1125 = call i8* @_Znwm(i64 %1124) #14
  %1126 = bitcast i8* %1125 to i32*
  br label %1127

1127:                                             ; preds = %1122, %1114
  %1128 = phi i64 [ %1123, %1122 ], [ 0, %1114 ]
  %1129 = phi i32* [ %1126, %1122 ], [ null, %1114 ]
  %1130 = getelementptr inbounds i32, i32* %1129, i64 %1104
  %1131 = getelementptr inbounds i32, i32* %1129, i64 %1128
  %1132 = ptrtoint i32* %1131 to i64
  store i32 %1090, i32* %1130, align 4
  %1133 = getelementptr inbounds i32, i32* %1130, i64 1
  %1134 = ptrtoint i32* %1133 to i64
  %1135 = sub i64 %1086, %1102
  %1136 = ashr exact i64 %1135, 2
  %1137 = sub nsw i64 0, %1136
  %1138 = getelementptr inbounds i32, i32* %1130, i64 %1137
  %1139 = ptrtoint i32* %1138 to i64
  %1140 = icmp sgt i64 %1135, 0
  br i1 %1140, label %1141, label %1144

1141:                                             ; preds = %1127
  %1142 = bitcast i32* %1138 to i8*
  %1143 = inttoptr i64 %1102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1142, i8* align 4 %1143, i64 %1135, i1 false) #12
  br label %1144

1144:                                             ; preds = %1141, %1127
  store i64 %1139, i64* %1101, align 8
  store i64 %1134, i64* %1100, align 8
  store i64 %1132, i64* %1110, align 8
  %1145 = icmp eq i64 %1102, 0
  br i1 %1145, label %1148, label %1146

1146:                                             ; preds = %1144
  %1147 = inttoptr i64 %1102 to i8*
  call void @_ZdlPv(i8* %1147) #14
  br label %1148

1148:                                             ; preds = %1146, %1144, %1094, %1026
  %1149 = call zeroext i1 @_ZN2gl12GLSurfaceEGL29IsEGLContextPrioritySupportedEv() #12
  br i1 %1149, label %1150, label %1387

1150:                                             ; preds = %1148
  %1151 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 13
  %1152 = load i32, i32* %1151, align 4
  switch i32 %1152, label %1387 [
    i32 0, label %1153
    i32 2, label %1270
  ]

1153:                                             ; preds = %1150
  %1154 = load i32*, i32** %53, align 8
  %1155 = load i32*, i32** %54, align 8
  %1156 = icmp ult i32* %1154, %1155
  %1157 = ptrtoint i32* %1155 to i64
  br i1 %1156, label %1158, label %1162

1158:                                             ; preds = %1153
  store i32 12544, i32* %1154, align 4
  %1159 = getelementptr inbounds i32, i32* %1154, i64 1
  %1160 = ptrtoint i32* %1159 to i64
  %1161 = bitcast i32** %53 to i64*
  store i64 %1160, i64* %1161, align 8
  br label %1210

1162:                                             ; preds = %1153
  %1163 = ptrtoint i32* %1154 to i64
  %1164 = bitcast i32** %53 to i64*
  %1165 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1166 = load i64, i64* %1165, align 8
  %1167 = sub i64 %1163, %1166
  %1168 = ashr exact i64 %1167, 2
  %1169 = add nsw i64 %1168, 1
  %1170 = icmp ugt i64 %1169, 4611686018427387903
  br i1 %1170, label %1171, label %1173

1171:                                             ; preds = %1162
  %1172 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1172) #13
  unreachable

1173:                                             ; preds = %1162
  %1174 = bitcast i32** %54 to i64*
  %1175 = sub i64 %1157, %1166
  %1176 = ashr exact i64 %1175, 2
  %1177 = icmp ult i64 %1176, 2305843009213693951
  br i1 %1177, label %1178, label %1186

1178:                                             ; preds = %1173
  %1179 = ashr exact i64 %1175, 1
  %1180 = icmp ult i64 %1179, %1169
  %1181 = select i1 %1180, i64 %1169, i64 %1179
  %1182 = icmp eq i64 %1181, 0
  br i1 %1182, label %1191, label %1183

1183:                                             ; preds = %1178
  %1184 = icmp ugt i64 %1181, 4611686018427387903
  br i1 %1184, label %1185, label %1186

1185:                                             ; preds = %1183
  call void @abort() #13
  unreachable

1186:                                             ; preds = %1183, %1173
  %1187 = phi i64 [ %1181, %1183 ], [ 4611686018427387903, %1173 ]
  %1188 = shl i64 %1187, 2
  %1189 = call i8* @_Znwm(i64 %1188) #14
  %1190 = bitcast i8* %1189 to i32*
  br label %1191

1191:                                             ; preds = %1186, %1178
  %1192 = phi i64 [ %1187, %1186 ], [ 0, %1178 ]
  %1193 = phi i8* [ %1189, %1186 ], [ null, %1178 ]
  %1194 = phi i32* [ %1190, %1186 ], [ null, %1178 ]
  %1195 = getelementptr inbounds i32, i32* %1194, i64 %1168
  %1196 = getelementptr inbounds i32, i32* %1194, i64 %1192
  %1197 = ptrtoint i32* %1196 to i64
  store i32 12544, i32* %1195, align 4
  %1198 = getelementptr inbounds i32, i32* %1195, i64 1
  %1199 = ptrtoint i32* %1198 to i64
  %1200 = ptrtoint i32* %1194 to i64
  %1201 = icmp sgt i64 %1167, 0
  br i1 %1201, label %1202, label %1204

1202:                                             ; preds = %1191
  %1203 = inttoptr i64 %1166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1193, i8* align 4 %1203, i64 %1167, i1 false) #12
  br label %1204

1204:                                             ; preds = %1202, %1191
  store i64 %1200, i64* %1165, align 8
  store i64 %1199, i64* %1164, align 8
  store i64 %1197, i64* %1174, align 8
  %1205 = icmp eq i64 %1166, 0
  br i1 %1205, label %1210, label %1206

1206:                                             ; preds = %1204
  %1207 = inttoptr i64 %1166 to i8*
  call void @_ZdlPv(i8* %1207) #14
  %1208 = load i32*, i32** %53, align 8
  %1209 = ptrtoint i32* %1208 to i64
  br label %1210

1210:                                             ; preds = %1158, %1204, %1206
  %1211 = phi i64 [ %1160, %1158 ], [ %1199, %1204 ], [ %1209, %1206 ]
  %1212 = phi i32* [ %1159, %1158 ], [ %1198, %1204 ], [ %1208, %1206 ]
  %1213 = load i32*, i32** %54, align 8
  %1214 = icmp ult i32* %1212, %1213
  %1215 = ptrtoint i32* %1213 to i64
  br i1 %1214, label %1216, label %1220

1216:                                             ; preds = %1210
  store i32 12547, i32* %1212, align 4
  %1217 = getelementptr inbounds i32, i32* %1212, i64 1
  %1218 = ptrtoint i32* %1217 to i64
  %1219 = bitcast i32** %53 to i64*
  store i64 %1218, i64* %1219, align 8
  br label %1387

1220:                                             ; preds = %1210
  %1221 = ptrtoint i32* %1212 to i64
  %1222 = bitcast i32** %53 to i64*
  %1223 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1224 = load i64, i64* %1223, align 8
  %1225 = sub i64 %1221, %1224
  %1226 = ashr exact i64 %1225, 2
  %1227 = add nsw i64 %1226, 1
  %1228 = icmp ugt i64 %1227, 4611686018427387903
  br i1 %1228, label %1229, label %1231

1229:                                             ; preds = %1220
  %1230 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1230) #13
  unreachable

1231:                                             ; preds = %1220
  %1232 = bitcast i32** %54 to i64*
  %1233 = sub i64 %1215, %1224
  %1234 = ashr exact i64 %1233, 2
  %1235 = icmp ult i64 %1234, 2305843009213693951
  br i1 %1235, label %1236, label %1244

1236:                                             ; preds = %1231
  %1237 = ashr exact i64 %1233, 1
  %1238 = icmp ult i64 %1237, %1227
  %1239 = select i1 %1238, i64 %1227, i64 %1237
  %1240 = icmp eq i64 %1239, 0
  br i1 %1240, label %1249, label %1241

1241:                                             ; preds = %1236
  %1242 = icmp ugt i64 %1239, 4611686018427387903
  br i1 %1242, label %1243, label %1244

1243:                                             ; preds = %1241
  call void @abort() #13
  unreachable

1244:                                             ; preds = %1241, %1231
  %1245 = phi i64 [ %1239, %1241 ], [ 4611686018427387903, %1231 ]
  %1246 = shl i64 %1245, 2
  %1247 = call i8* @_Znwm(i64 %1246) #14
  %1248 = bitcast i8* %1247 to i32*
  br label %1249

1249:                                             ; preds = %1244, %1236
  %1250 = phi i64 [ %1245, %1244 ], [ 0, %1236 ]
  %1251 = phi i32* [ %1248, %1244 ], [ null, %1236 ]
  %1252 = getelementptr inbounds i32, i32* %1251, i64 %1226
  %1253 = getelementptr inbounds i32, i32* %1251, i64 %1250
  %1254 = ptrtoint i32* %1253 to i64
  store i32 12547, i32* %1252, align 4
  %1255 = getelementptr inbounds i32, i32* %1252, i64 1
  %1256 = ptrtoint i32* %1255 to i64
  %1257 = sub i64 %1211, %1224
  %1258 = ashr exact i64 %1257, 2
  %1259 = sub nsw i64 0, %1258
  %1260 = getelementptr inbounds i32, i32* %1252, i64 %1259
  %1261 = ptrtoint i32* %1260 to i64
  %1262 = icmp sgt i64 %1257, 0
  br i1 %1262, label %1263, label %1266

1263:                                             ; preds = %1249
  %1264 = bitcast i32* %1260 to i8*
  %1265 = inttoptr i64 %1224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1264, i8* align 4 %1265, i64 %1257, i1 false) #12
  br label %1266

1266:                                             ; preds = %1263, %1249
  store i64 %1261, i64* %1223, align 8
  store i64 %1256, i64* %1222, align 8
  store i64 %1254, i64* %1232, align 8
  %1267 = icmp eq i64 %1224, 0
  br i1 %1267, label %1387, label %1268

1268:                                             ; preds = %1266
  %1269 = inttoptr i64 %1224 to i8*
  call void @_ZdlPv(i8* %1269) #14
  br label %1387

1270:                                             ; preds = %1150
  %1271 = load i32*, i32** %53, align 8
  %1272 = load i32*, i32** %54, align 8
  %1273 = icmp ult i32* %1271, %1272
  %1274 = ptrtoint i32* %1272 to i64
  br i1 %1273, label %1275, label %1279

1275:                                             ; preds = %1270
  store i32 12544, i32* %1271, align 4
  %1276 = getelementptr inbounds i32, i32* %1271, i64 1
  %1277 = ptrtoint i32* %1276 to i64
  %1278 = bitcast i32** %53 to i64*
  store i64 %1277, i64* %1278, align 8
  br label %1327

1279:                                             ; preds = %1270
  %1280 = ptrtoint i32* %1271 to i64
  %1281 = bitcast i32** %53 to i64*
  %1282 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1283 = load i64, i64* %1282, align 8
  %1284 = sub i64 %1280, %1283
  %1285 = ashr exact i64 %1284, 2
  %1286 = add nsw i64 %1285, 1
  %1287 = icmp ugt i64 %1286, 4611686018427387903
  br i1 %1287, label %1288, label %1290

1288:                                             ; preds = %1279
  %1289 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1289) #13
  unreachable

1290:                                             ; preds = %1279
  %1291 = bitcast i32** %54 to i64*
  %1292 = sub i64 %1274, %1283
  %1293 = ashr exact i64 %1292, 2
  %1294 = icmp ult i64 %1293, 2305843009213693951
  br i1 %1294, label %1295, label %1303

1295:                                             ; preds = %1290
  %1296 = ashr exact i64 %1292, 1
  %1297 = icmp ult i64 %1296, %1286
  %1298 = select i1 %1297, i64 %1286, i64 %1296
  %1299 = icmp eq i64 %1298, 0
  br i1 %1299, label %1308, label %1300

1300:                                             ; preds = %1295
  %1301 = icmp ugt i64 %1298, 4611686018427387903
  br i1 %1301, label %1302, label %1303

1302:                                             ; preds = %1300
  call void @abort() #13
  unreachable

1303:                                             ; preds = %1300, %1290
  %1304 = phi i64 [ %1298, %1300 ], [ 4611686018427387903, %1290 ]
  %1305 = shl i64 %1304, 2
  %1306 = call i8* @_Znwm(i64 %1305) #14
  %1307 = bitcast i8* %1306 to i32*
  br label %1308

1308:                                             ; preds = %1303, %1295
  %1309 = phi i64 [ %1304, %1303 ], [ 0, %1295 ]
  %1310 = phi i8* [ %1306, %1303 ], [ null, %1295 ]
  %1311 = phi i32* [ %1307, %1303 ], [ null, %1295 ]
  %1312 = getelementptr inbounds i32, i32* %1311, i64 %1285
  %1313 = getelementptr inbounds i32, i32* %1311, i64 %1309
  %1314 = ptrtoint i32* %1313 to i64
  store i32 12544, i32* %1312, align 4
  %1315 = getelementptr inbounds i32, i32* %1312, i64 1
  %1316 = ptrtoint i32* %1315 to i64
  %1317 = ptrtoint i32* %1311 to i64
  %1318 = icmp sgt i64 %1284, 0
  br i1 %1318, label %1319, label %1321

1319:                                             ; preds = %1308
  %1320 = inttoptr i64 %1283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1310, i8* align 4 %1320, i64 %1284, i1 false) #12
  br label %1321

1321:                                             ; preds = %1319, %1308
  store i64 %1317, i64* %1282, align 8
  store i64 %1316, i64* %1281, align 8
  store i64 %1314, i64* %1291, align 8
  %1322 = icmp eq i64 %1283, 0
  br i1 %1322, label %1327, label %1323

1323:                                             ; preds = %1321
  %1324 = inttoptr i64 %1283 to i8*
  call void @_ZdlPv(i8* %1324) #14
  %1325 = load i32*, i32** %53, align 8
  %1326 = ptrtoint i32* %1325 to i64
  br label %1327

1327:                                             ; preds = %1275, %1321, %1323
  %1328 = phi i64 [ %1277, %1275 ], [ %1316, %1321 ], [ %1326, %1323 ]
  %1329 = phi i32* [ %1276, %1275 ], [ %1315, %1321 ], [ %1325, %1323 ]
  %1330 = load i32*, i32** %54, align 8
  %1331 = icmp ult i32* %1329, %1330
  %1332 = ptrtoint i32* %1330 to i64
  br i1 %1331, label %1333, label %1337

1333:                                             ; preds = %1327
  store i32 12545, i32* %1329, align 4
  %1334 = getelementptr inbounds i32, i32* %1329, i64 1
  %1335 = ptrtoint i32* %1334 to i64
  %1336 = bitcast i32** %53 to i64*
  store i64 %1335, i64* %1336, align 8
  br label %1387

1337:                                             ; preds = %1327
  %1338 = ptrtoint i32* %1329 to i64
  %1339 = bitcast i32** %53 to i64*
  %1340 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1341 = load i64, i64* %1340, align 8
  %1342 = sub i64 %1338, %1341
  %1343 = ashr exact i64 %1342, 2
  %1344 = add nsw i64 %1343, 1
  %1345 = icmp ugt i64 %1344, 4611686018427387903
  br i1 %1345, label %1346, label %1348

1346:                                             ; preds = %1337
  %1347 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1347) #13
  unreachable

1348:                                             ; preds = %1337
  %1349 = bitcast i32** %54 to i64*
  %1350 = sub i64 %1332, %1341
  %1351 = ashr exact i64 %1350, 2
  %1352 = icmp ult i64 %1351, 2305843009213693951
  br i1 %1352, label %1353, label %1361

1353:                                             ; preds = %1348
  %1354 = ashr exact i64 %1350, 1
  %1355 = icmp ult i64 %1354, %1344
  %1356 = select i1 %1355, i64 %1344, i64 %1354
  %1357 = icmp eq i64 %1356, 0
  br i1 %1357, label %1366, label %1358

1358:                                             ; preds = %1353
  %1359 = icmp ugt i64 %1356, 4611686018427387903
  br i1 %1359, label %1360, label %1361

1360:                                             ; preds = %1358
  call void @abort() #13
  unreachable

1361:                                             ; preds = %1358, %1348
  %1362 = phi i64 [ %1356, %1358 ], [ 4611686018427387903, %1348 ]
  %1363 = shl i64 %1362, 2
  %1364 = call i8* @_Znwm(i64 %1363) #14
  %1365 = bitcast i8* %1364 to i32*
  br label %1366

1366:                                             ; preds = %1361, %1353
  %1367 = phi i64 [ %1362, %1361 ], [ 0, %1353 ]
  %1368 = phi i32* [ %1365, %1361 ], [ null, %1353 ]
  %1369 = getelementptr inbounds i32, i32* %1368, i64 %1343
  %1370 = getelementptr inbounds i32, i32* %1368, i64 %1367
  %1371 = ptrtoint i32* %1370 to i64
  store i32 12545, i32* %1369, align 4
  %1372 = getelementptr inbounds i32, i32* %1369, i64 1
  %1373 = ptrtoint i32* %1372 to i64
  %1374 = sub i64 %1328, %1341
  %1375 = ashr exact i64 %1374, 2
  %1376 = sub nsw i64 0, %1375
  %1377 = getelementptr inbounds i32, i32* %1369, i64 %1376
  %1378 = ptrtoint i32* %1377 to i64
  %1379 = icmp sgt i64 %1374, 0
  br i1 %1379, label %1380, label %1383

1380:                                             ; preds = %1366
  %1381 = bitcast i32* %1377 to i8*
  %1382 = inttoptr i64 %1341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1381, i8* align 4 %1382, i64 %1374, i1 false) #12
  br label %1383

1383:                                             ; preds = %1380, %1366
  store i64 %1378, i64* %1340, align 8
  store i64 %1373, i64* %1339, align 8
  store i64 %1371, i64* %1349, align 8
  %1384 = icmp eq i64 %1341, 0
  br i1 %1384, label %1387, label %1385

1385:                                             ; preds = %1383
  %1386 = inttoptr i64 %1341 to i8*
  call void @_ZdlPv(i8* %1386) #14
  br label %1387

1387:                                             ; preds = %1385, %1383, %1333, %1268, %1266, %1216, %1150, %1148
  %1388 = call zeroext i1 @_ZN2gl12GLSurfaceEGL35IsDisplayTextureShareGroupSupportedEv() #12
  br i1 %1388, label %1389, label %1509

1389:                                             ; preds = %1387
  %1390 = load i32*, i32** %53, align 8
  %1391 = load i32*, i32** %54, align 8
  %1392 = icmp ult i32* %1390, %1391
  %1393 = ptrtoint i32* %1391 to i64
  br i1 %1392, label %1394, label %1398

1394:                                             ; preds = %1389
  store i32 13231, i32* %1390, align 4
  %1395 = getelementptr inbounds i32, i32* %1390, i64 1
  %1396 = ptrtoint i32* %1395 to i64
  %1397 = bitcast i32** %53 to i64*
  store i64 %1396, i64* %1397, align 8
  br label %1446

1398:                                             ; preds = %1389
  %1399 = ptrtoint i32* %1390 to i64
  %1400 = bitcast i32** %53 to i64*
  %1401 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1402 = load i64, i64* %1401, align 8
  %1403 = sub i64 %1399, %1402
  %1404 = ashr exact i64 %1403, 2
  %1405 = add nsw i64 %1404, 1
  %1406 = icmp ugt i64 %1405, 4611686018427387903
  br i1 %1406, label %1407, label %1409

1407:                                             ; preds = %1398
  %1408 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1408) #13
  unreachable

1409:                                             ; preds = %1398
  %1410 = bitcast i32** %54 to i64*
  %1411 = sub i64 %1393, %1402
  %1412 = ashr exact i64 %1411, 2
  %1413 = icmp ult i64 %1412, 2305843009213693951
  br i1 %1413, label %1414, label %1422

1414:                                             ; preds = %1409
  %1415 = ashr exact i64 %1411, 1
  %1416 = icmp ult i64 %1415, %1405
  %1417 = select i1 %1416, i64 %1405, i64 %1415
  %1418 = icmp eq i64 %1417, 0
  br i1 %1418, label %1427, label %1419

1419:                                             ; preds = %1414
  %1420 = icmp ugt i64 %1417, 4611686018427387903
  br i1 %1420, label %1421, label %1422

1421:                                             ; preds = %1419
  call void @abort() #13
  unreachable

1422:                                             ; preds = %1419, %1409
  %1423 = phi i64 [ %1417, %1419 ], [ 4611686018427387903, %1409 ]
  %1424 = shl i64 %1423, 2
  %1425 = call i8* @_Znwm(i64 %1424) #14
  %1426 = bitcast i8* %1425 to i32*
  br label %1427

1427:                                             ; preds = %1422, %1414
  %1428 = phi i64 [ %1423, %1422 ], [ 0, %1414 ]
  %1429 = phi i8* [ %1425, %1422 ], [ null, %1414 ]
  %1430 = phi i32* [ %1426, %1422 ], [ null, %1414 ]
  %1431 = getelementptr inbounds i32, i32* %1430, i64 %1404
  %1432 = getelementptr inbounds i32, i32* %1430, i64 %1428
  %1433 = ptrtoint i32* %1432 to i64
  store i32 13231, i32* %1431, align 4
  %1434 = getelementptr inbounds i32, i32* %1431, i64 1
  %1435 = ptrtoint i32* %1434 to i64
  %1436 = ptrtoint i32* %1430 to i64
  %1437 = icmp sgt i64 %1403, 0
  br i1 %1437, label %1438, label %1440

1438:                                             ; preds = %1427
  %1439 = inttoptr i64 %1402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1429, i8* align 4 %1439, i64 %1403, i1 false) #12
  br label %1440

1440:                                             ; preds = %1438, %1427
  store i64 %1436, i64* %1401, align 8
  store i64 %1435, i64* %1400, align 8
  store i64 %1433, i64* %1410, align 8
  %1441 = icmp eq i64 %1402, 0
  br i1 %1441, label %1446, label %1442

1442:                                             ; preds = %1440
  %1443 = inttoptr i64 %1402 to i8*
  call void @_ZdlPv(i8* %1443) #14
  %1444 = load i32*, i32** %53, align 8
  %1445 = ptrtoint i32* %1444 to i64
  br label %1446

1446:                                             ; preds = %1394, %1440, %1442
  %1447 = phi i64 [ %1396, %1394 ], [ %1435, %1440 ], [ %1445, %1442 ]
  %1448 = phi i32* [ %1395, %1394 ], [ %1434, %1440 ], [ %1444, %1442 ]
  %1449 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 3
  %1450 = load i8, i8* %1449, align 2, !range !2
  %1451 = zext i8 %1450 to i32
  %1452 = load i32*, i32** %54, align 8
  %1453 = icmp ult i32* %1448, %1452
  %1454 = ptrtoint i32* %1452 to i64
  br i1 %1453, label %1455, label %1459

1455:                                             ; preds = %1446
  store i32 %1451, i32* %1448, align 4
  %1456 = getelementptr inbounds i32, i32* %1448, i64 1
  %1457 = ptrtoint i32* %1456 to i64
  %1458 = bitcast i32** %53 to i64*
  store i64 %1457, i64* %1458, align 8
  br label %1509

1459:                                             ; preds = %1446
  %1460 = ptrtoint i32* %1448 to i64
  %1461 = bitcast i32** %53 to i64*
  %1462 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1463 = load i64, i64* %1462, align 8
  %1464 = sub i64 %1460, %1463
  %1465 = ashr exact i64 %1464, 2
  %1466 = add nsw i64 %1465, 1
  %1467 = icmp ugt i64 %1466, 4611686018427387903
  br i1 %1467, label %1468, label %1470

1468:                                             ; preds = %1459
  %1469 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1469) #13
  unreachable

1470:                                             ; preds = %1459
  %1471 = bitcast i32** %54 to i64*
  %1472 = sub i64 %1454, %1463
  %1473 = ashr exact i64 %1472, 2
  %1474 = icmp ult i64 %1473, 2305843009213693951
  br i1 %1474, label %1475, label %1483

1475:                                             ; preds = %1470
  %1476 = ashr exact i64 %1472, 1
  %1477 = icmp ult i64 %1476, %1466
  %1478 = select i1 %1477, i64 %1466, i64 %1476
  %1479 = icmp eq i64 %1478, 0
  br i1 %1479, label %1488, label %1480

1480:                                             ; preds = %1475
  %1481 = icmp ugt i64 %1478, 4611686018427387903
  br i1 %1481, label %1482, label %1483

1482:                                             ; preds = %1480
  call void @abort() #13
  unreachable

1483:                                             ; preds = %1480, %1470
  %1484 = phi i64 [ %1478, %1480 ], [ 4611686018427387903, %1470 ]
  %1485 = shl i64 %1484, 2
  %1486 = call i8* @_Znwm(i64 %1485) #14
  %1487 = bitcast i8* %1486 to i32*
  br label %1488

1488:                                             ; preds = %1483, %1475
  %1489 = phi i64 [ %1484, %1483 ], [ 0, %1475 ]
  %1490 = phi i32* [ %1487, %1483 ], [ null, %1475 ]
  %1491 = getelementptr inbounds i32, i32* %1490, i64 %1465
  %1492 = getelementptr inbounds i32, i32* %1490, i64 %1489
  %1493 = ptrtoint i32* %1492 to i64
  store i32 %1451, i32* %1491, align 4
  %1494 = getelementptr inbounds i32, i32* %1491, i64 1
  %1495 = ptrtoint i32* %1494 to i64
  %1496 = sub i64 %1447, %1463
  %1497 = ashr exact i64 %1496, 2
  %1498 = sub nsw i64 0, %1497
  %1499 = getelementptr inbounds i32, i32* %1491, i64 %1498
  %1500 = ptrtoint i32* %1499 to i64
  %1501 = icmp sgt i64 %1496, 0
  br i1 %1501, label %1502, label %1505

1502:                                             ; preds = %1488
  %1503 = bitcast i32* %1499 to i8*
  %1504 = inttoptr i64 %1463 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1503, i8* align 4 %1504, i64 %1496, i1 false) #12
  br label %1505

1505:                                             ; preds = %1502, %1488
  store i64 %1500, i64* %1462, align 8
  store i64 %1495, i64* %1461, align 8
  store i64 %1493, i64* %1471, align 8
  %1506 = icmp eq i64 %1463, 0
  br i1 %1506, label %1509, label %1507

1507:                                             ; preds = %1505
  %1508 = inttoptr i64 %1463 to i8*
  call void @_ZdlPv(i8* %1508) #14
  br label %1509

1509:                                             ; preds = %1507, %1505, %1455, %1387
  %1510 = call zeroext i1 @_ZN2gl12GLSurfaceEGL37IsDisplaySemaphoreShareGroupSupportedEv() #12
  br i1 %1510, label %1511, label %1631

1511:                                             ; preds = %1509
  %1512 = load i32*, i32** %53, align 8
  %1513 = load i32*, i32** %54, align 8
  %1514 = icmp ult i32* %1512, %1513
  %1515 = ptrtoint i32* %1513 to i64
  br i1 %1514, label %1516, label %1520

1516:                                             ; preds = %1511
  store i32 13453, i32* %1512, align 4
  %1517 = getelementptr inbounds i32, i32* %1512, i64 1
  %1518 = ptrtoint i32* %1517 to i64
  %1519 = bitcast i32** %53 to i64*
  store i64 %1518, i64* %1519, align 8
  br label %1568

1520:                                             ; preds = %1511
  %1521 = ptrtoint i32* %1512 to i64
  %1522 = bitcast i32** %53 to i64*
  %1523 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1524 = load i64, i64* %1523, align 8
  %1525 = sub i64 %1521, %1524
  %1526 = ashr exact i64 %1525, 2
  %1527 = add nsw i64 %1526, 1
  %1528 = icmp ugt i64 %1527, 4611686018427387903
  br i1 %1528, label %1529, label %1531

1529:                                             ; preds = %1520
  %1530 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1530) #13
  unreachable

1531:                                             ; preds = %1520
  %1532 = bitcast i32** %54 to i64*
  %1533 = sub i64 %1515, %1524
  %1534 = ashr exact i64 %1533, 2
  %1535 = icmp ult i64 %1534, 2305843009213693951
  br i1 %1535, label %1536, label %1544

1536:                                             ; preds = %1531
  %1537 = ashr exact i64 %1533, 1
  %1538 = icmp ult i64 %1537, %1527
  %1539 = select i1 %1538, i64 %1527, i64 %1537
  %1540 = icmp eq i64 %1539, 0
  br i1 %1540, label %1549, label %1541

1541:                                             ; preds = %1536
  %1542 = icmp ugt i64 %1539, 4611686018427387903
  br i1 %1542, label %1543, label %1544

1543:                                             ; preds = %1541
  call void @abort() #13
  unreachable

1544:                                             ; preds = %1541, %1531
  %1545 = phi i64 [ %1539, %1541 ], [ 4611686018427387903, %1531 ]
  %1546 = shl i64 %1545, 2
  %1547 = call i8* @_Znwm(i64 %1546) #14
  %1548 = bitcast i8* %1547 to i32*
  br label %1549

1549:                                             ; preds = %1544, %1536
  %1550 = phi i64 [ %1545, %1544 ], [ 0, %1536 ]
  %1551 = phi i8* [ %1547, %1544 ], [ null, %1536 ]
  %1552 = phi i32* [ %1548, %1544 ], [ null, %1536 ]
  %1553 = getelementptr inbounds i32, i32* %1552, i64 %1526
  %1554 = getelementptr inbounds i32, i32* %1552, i64 %1550
  %1555 = ptrtoint i32* %1554 to i64
  store i32 13453, i32* %1553, align 4
  %1556 = getelementptr inbounds i32, i32* %1553, i64 1
  %1557 = ptrtoint i32* %1556 to i64
  %1558 = ptrtoint i32* %1552 to i64
  %1559 = icmp sgt i64 %1525, 0
  br i1 %1559, label %1560, label %1562

1560:                                             ; preds = %1549
  %1561 = inttoptr i64 %1524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1551, i8* align 4 %1561, i64 %1525, i1 false) #12
  br label %1562

1562:                                             ; preds = %1560, %1549
  store i64 %1558, i64* %1523, align 8
  store i64 %1557, i64* %1522, align 8
  store i64 %1555, i64* %1532, align 8
  %1563 = icmp eq i64 %1524, 0
  br i1 %1563, label %1568, label %1564

1564:                                             ; preds = %1562
  %1565 = inttoptr i64 %1524 to i8*
  call void @_ZdlPv(i8* %1565) #14
  %1566 = load i32*, i32** %53, align 8
  %1567 = ptrtoint i32* %1566 to i64
  br label %1568

1568:                                             ; preds = %1516, %1562, %1564
  %1569 = phi i64 [ %1518, %1516 ], [ %1557, %1562 ], [ %1567, %1564 ]
  %1570 = phi i32* [ %1517, %1516 ], [ %1556, %1562 ], [ %1566, %1564 ]
  %1571 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 4
  %1572 = load i8, i8* %1571, align 1, !range !2
  %1573 = zext i8 %1572 to i32
  %1574 = load i32*, i32** %54, align 8
  %1575 = icmp ult i32* %1570, %1574
  %1576 = ptrtoint i32* %1574 to i64
  br i1 %1575, label %1577, label %1581

1577:                                             ; preds = %1568
  store i32 %1573, i32* %1570, align 4
  %1578 = getelementptr inbounds i32, i32* %1570, i64 1
  %1579 = ptrtoint i32* %1578 to i64
  %1580 = bitcast i32** %53 to i64*
  store i64 %1579, i64* %1580, align 8
  br label %1631

1581:                                             ; preds = %1568
  %1582 = ptrtoint i32* %1570 to i64
  %1583 = bitcast i32** %53 to i64*
  %1584 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1585 = load i64, i64* %1584, align 8
  %1586 = sub i64 %1582, %1585
  %1587 = ashr exact i64 %1586, 2
  %1588 = add nsw i64 %1587, 1
  %1589 = icmp ugt i64 %1588, 4611686018427387903
  br i1 %1589, label %1590, label %1592

1590:                                             ; preds = %1581
  %1591 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1591) #13
  unreachable

1592:                                             ; preds = %1581
  %1593 = bitcast i32** %54 to i64*
  %1594 = sub i64 %1576, %1585
  %1595 = ashr exact i64 %1594, 2
  %1596 = icmp ult i64 %1595, 2305843009213693951
  br i1 %1596, label %1597, label %1605

1597:                                             ; preds = %1592
  %1598 = ashr exact i64 %1594, 1
  %1599 = icmp ult i64 %1598, %1588
  %1600 = select i1 %1599, i64 %1588, i64 %1598
  %1601 = icmp eq i64 %1600, 0
  br i1 %1601, label %1610, label %1602

1602:                                             ; preds = %1597
  %1603 = icmp ugt i64 %1600, 4611686018427387903
  br i1 %1603, label %1604, label %1605

1604:                                             ; preds = %1602
  call void @abort() #13
  unreachable

1605:                                             ; preds = %1602, %1592
  %1606 = phi i64 [ %1600, %1602 ], [ 4611686018427387903, %1592 ]
  %1607 = shl i64 %1606, 2
  %1608 = call i8* @_Znwm(i64 %1607) #14
  %1609 = bitcast i8* %1608 to i32*
  br label %1610

1610:                                             ; preds = %1605, %1597
  %1611 = phi i64 [ %1606, %1605 ], [ 0, %1597 ]
  %1612 = phi i32* [ %1609, %1605 ], [ null, %1597 ]
  %1613 = getelementptr inbounds i32, i32* %1612, i64 %1587
  %1614 = getelementptr inbounds i32, i32* %1612, i64 %1611
  %1615 = ptrtoint i32* %1614 to i64
  store i32 %1573, i32* %1613, align 4
  %1616 = getelementptr inbounds i32, i32* %1613, i64 1
  %1617 = ptrtoint i32* %1616 to i64
  %1618 = sub i64 %1569, %1585
  %1619 = ashr exact i64 %1618, 2
  %1620 = sub nsw i64 0, %1619
  %1621 = getelementptr inbounds i32, i32* %1613, i64 %1620
  %1622 = ptrtoint i32* %1621 to i64
  %1623 = icmp sgt i64 %1618, 0
  br i1 %1623, label %1624, label %1627

1624:                                             ; preds = %1610
  %1625 = bitcast i32* %1621 to i8*
  %1626 = inttoptr i64 %1585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1625, i8* align 4 %1626, i64 %1618, i1 false) #12
  br label %1627

1627:                                             ; preds = %1624, %1610
  store i64 %1622, i64* %1584, align 8
  store i64 %1617, i64* %1583, align 8
  store i64 %1615, i64* %1593, align 8
  %1628 = icmp eq i64 %1585, 0
  br i1 %1628, label %1631, label %1629

1629:                                             ; preds = %1627
  %1630 = inttoptr i64 %1585 to i8*
  call void @_ZdlPv(i8* %1630) #14
  br label %1631

1631:                                             ; preds = %1629, %1627, %1577, %1509
  %1632 = call zeroext i1 @_ZN2gl12GLSurfaceEGL36IsCreateContextClientArraysSupportedEv() #12
  br i1 %1632, label %1633, label %1750

1633:                                             ; preds = %1631
  %1634 = load i32*, i32** %53, align 8
  %1635 = load i32*, i32** %54, align 8
  %1636 = icmp ult i32* %1634, %1635
  %1637 = ptrtoint i32* %1635 to i64
  br i1 %1636, label %1638, label %1642

1638:                                             ; preds = %1633
  store i32 13394, i32* %1634, align 4
  %1639 = getelementptr inbounds i32, i32* %1634, i64 1
  %1640 = ptrtoint i32* %1639 to i64
  %1641 = bitcast i32** %53 to i64*
  store i64 %1640, i64* %1641, align 8
  br label %1690

1642:                                             ; preds = %1633
  %1643 = ptrtoint i32* %1634 to i64
  %1644 = bitcast i32** %53 to i64*
  %1645 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1646 = load i64, i64* %1645, align 8
  %1647 = sub i64 %1643, %1646
  %1648 = ashr exact i64 %1647, 2
  %1649 = add nsw i64 %1648, 1
  %1650 = icmp ugt i64 %1649, 4611686018427387903
  br i1 %1650, label %1651, label %1653

1651:                                             ; preds = %1642
  %1652 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1652) #13
  unreachable

1653:                                             ; preds = %1642
  %1654 = bitcast i32** %54 to i64*
  %1655 = sub i64 %1637, %1646
  %1656 = ashr exact i64 %1655, 2
  %1657 = icmp ult i64 %1656, 2305843009213693951
  br i1 %1657, label %1658, label %1666

1658:                                             ; preds = %1653
  %1659 = ashr exact i64 %1655, 1
  %1660 = icmp ult i64 %1659, %1649
  %1661 = select i1 %1660, i64 %1649, i64 %1659
  %1662 = icmp eq i64 %1661, 0
  br i1 %1662, label %1671, label %1663

1663:                                             ; preds = %1658
  %1664 = icmp ugt i64 %1661, 4611686018427387903
  br i1 %1664, label %1665, label %1666

1665:                                             ; preds = %1663
  call void @abort() #13
  unreachable

1666:                                             ; preds = %1663, %1653
  %1667 = phi i64 [ %1661, %1663 ], [ 4611686018427387903, %1653 ]
  %1668 = shl i64 %1667, 2
  %1669 = call i8* @_Znwm(i64 %1668) #14
  %1670 = bitcast i8* %1669 to i32*
  br label %1671

1671:                                             ; preds = %1666, %1658
  %1672 = phi i64 [ %1667, %1666 ], [ 0, %1658 ]
  %1673 = phi i8* [ %1669, %1666 ], [ null, %1658 ]
  %1674 = phi i32* [ %1670, %1666 ], [ null, %1658 ]
  %1675 = getelementptr inbounds i32, i32* %1674, i64 %1648
  %1676 = getelementptr inbounds i32, i32* %1674, i64 %1672
  %1677 = ptrtoint i32* %1676 to i64
  store i32 13394, i32* %1675, align 4
  %1678 = getelementptr inbounds i32, i32* %1675, i64 1
  %1679 = ptrtoint i32* %1678 to i64
  %1680 = ptrtoint i32* %1674 to i64
  %1681 = icmp sgt i64 %1647, 0
  br i1 %1681, label %1682, label %1684

1682:                                             ; preds = %1671
  %1683 = inttoptr i64 %1646 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1673, i8* align 4 %1683, i64 %1647, i1 false) #12
  br label %1684

1684:                                             ; preds = %1682, %1671
  store i64 %1680, i64* %1645, align 8
  store i64 %1679, i64* %1644, align 8
  store i64 %1677, i64* %1654, align 8
  %1685 = icmp eq i64 %1646, 0
  br i1 %1685, label %1690, label %1686

1686:                                             ; preds = %1684
  %1687 = inttoptr i64 %1646 to i8*
  call void @_ZdlPv(i8* %1687) #14
  %1688 = load i32*, i32** %53, align 8
  %1689 = ptrtoint i32* %1688 to i64
  br label %1690

1690:                                             ; preds = %1638, %1684, %1686
  %1691 = phi i64 [ %1640, %1638 ], [ %1679, %1684 ], [ %1689, %1686 ]
  %1692 = phi i32* [ %1639, %1638 ], [ %1678, %1684 ], [ %1688, %1686 ]
  %1693 = load i32*, i32** %54, align 8
  %1694 = icmp ult i32* %1692, %1693
  %1695 = ptrtoint i32* %1693 to i64
  br i1 %1694, label %1696, label %1700

1696:                                             ; preds = %1690
  store i32 0, i32* %1692, align 4
  %1697 = getelementptr inbounds i32, i32* %1692, i64 1
  %1698 = ptrtoint i32* %1697 to i64
  %1699 = bitcast i32** %53 to i64*
  store i64 %1698, i64* %1699, align 8
  br label %1750

1700:                                             ; preds = %1690
  %1701 = ptrtoint i32* %1692 to i64
  %1702 = bitcast i32** %53 to i64*
  %1703 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1704 = load i64, i64* %1703, align 8
  %1705 = sub i64 %1701, %1704
  %1706 = ashr exact i64 %1705, 2
  %1707 = add nsw i64 %1706, 1
  %1708 = icmp ugt i64 %1707, 4611686018427387903
  br i1 %1708, label %1709, label %1711

1709:                                             ; preds = %1700
  %1710 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1710) #13
  unreachable

1711:                                             ; preds = %1700
  %1712 = bitcast i32** %54 to i64*
  %1713 = sub i64 %1695, %1704
  %1714 = ashr exact i64 %1713, 2
  %1715 = icmp ult i64 %1714, 2305843009213693951
  br i1 %1715, label %1716, label %1724

1716:                                             ; preds = %1711
  %1717 = ashr exact i64 %1713, 1
  %1718 = icmp ult i64 %1717, %1707
  %1719 = select i1 %1718, i64 %1707, i64 %1717
  %1720 = icmp eq i64 %1719, 0
  br i1 %1720, label %1729, label %1721

1721:                                             ; preds = %1716
  %1722 = icmp ugt i64 %1719, 4611686018427387903
  br i1 %1722, label %1723, label %1724

1723:                                             ; preds = %1721
  call void @abort() #13
  unreachable

1724:                                             ; preds = %1721, %1711
  %1725 = phi i64 [ %1719, %1721 ], [ 4611686018427387903, %1711 ]
  %1726 = shl i64 %1725, 2
  %1727 = call i8* @_Znwm(i64 %1726) #14
  %1728 = bitcast i8* %1727 to i32*
  br label %1729

1729:                                             ; preds = %1724, %1716
  %1730 = phi i64 [ %1725, %1724 ], [ 0, %1716 ]
  %1731 = phi i32* [ %1728, %1724 ], [ null, %1716 ]
  %1732 = getelementptr inbounds i32, i32* %1731, i64 %1706
  %1733 = getelementptr inbounds i32, i32* %1731, i64 %1730
  %1734 = ptrtoint i32* %1733 to i64
  store i32 0, i32* %1732, align 4
  %1735 = getelementptr inbounds i32, i32* %1732, i64 1
  %1736 = ptrtoint i32* %1735 to i64
  %1737 = sub i64 %1691, %1704
  %1738 = ashr exact i64 %1737, 2
  %1739 = sub nsw i64 0, %1738
  %1740 = getelementptr inbounds i32, i32* %1732, i64 %1739
  %1741 = ptrtoint i32* %1740 to i64
  %1742 = icmp sgt i64 %1737, 0
  br i1 %1742, label %1743, label %1746

1743:                                             ; preds = %1729
  %1744 = bitcast i32* %1740 to i8*
  %1745 = inttoptr i64 %1704 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1744, i8* align 4 %1745, i64 %1737, i1 false) #12
  br label %1746

1746:                                             ; preds = %1743, %1729
  store i64 %1741, i64* %1703, align 8
  store i64 %1736, i64* %1702, align 8
  store i64 %1734, i64* %1712, align 8
  %1747 = icmp eq i64 %1704, 0
  br i1 %1747, label %1750, label %1748

1748:                                             ; preds = %1746
  %1749 = inttoptr i64 %1704 to i8*
  call void @_ZdlPv(i8* %1749) #14
  br label %1750

1750:                                             ; preds = %1748, %1746, %1696, %1631
  %1751 = call zeroext i1 @_ZN2gl12GLSurfaceEGL29IsRobustResourceInitSupportedEv() #12
  br i1 %1751, label %1752, label %1872

1752:                                             ; preds = %1750
  %1753 = load i32*, i32** %53, align 8
  %1754 = load i32*, i32** %54, align 8
  %1755 = icmp ult i32* %1753, %1754
  %1756 = ptrtoint i32* %1754 to i64
  br i1 %1755, label %1757, label %1761

1757:                                             ; preds = %1752
  store i32 13395, i32* %1753, align 4
  %1758 = getelementptr inbounds i32, i32* %1753, i64 1
  %1759 = ptrtoint i32* %1758 to i64
  %1760 = bitcast i32** %53 to i64*
  store i64 %1759, i64* %1760, align 8
  br label %1809

1761:                                             ; preds = %1752
  %1762 = ptrtoint i32* %1753 to i64
  %1763 = bitcast i32** %53 to i64*
  %1764 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1765 = load i64, i64* %1764, align 8
  %1766 = sub i64 %1762, %1765
  %1767 = ashr exact i64 %1766, 2
  %1768 = add nsw i64 %1767, 1
  %1769 = icmp ugt i64 %1768, 4611686018427387903
  br i1 %1769, label %1770, label %1772

1770:                                             ; preds = %1761
  %1771 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1771) #13
  unreachable

1772:                                             ; preds = %1761
  %1773 = bitcast i32** %54 to i64*
  %1774 = sub i64 %1756, %1765
  %1775 = ashr exact i64 %1774, 2
  %1776 = icmp ult i64 %1775, 2305843009213693951
  br i1 %1776, label %1777, label %1785

1777:                                             ; preds = %1772
  %1778 = ashr exact i64 %1774, 1
  %1779 = icmp ult i64 %1778, %1768
  %1780 = select i1 %1779, i64 %1768, i64 %1778
  %1781 = icmp eq i64 %1780, 0
  br i1 %1781, label %1790, label %1782

1782:                                             ; preds = %1777
  %1783 = icmp ugt i64 %1780, 4611686018427387903
  br i1 %1783, label %1784, label %1785

1784:                                             ; preds = %1782
  call void @abort() #13
  unreachable

1785:                                             ; preds = %1782, %1772
  %1786 = phi i64 [ %1780, %1782 ], [ 4611686018427387903, %1772 ]
  %1787 = shl i64 %1786, 2
  %1788 = call i8* @_Znwm(i64 %1787) #14
  %1789 = bitcast i8* %1788 to i32*
  br label %1790

1790:                                             ; preds = %1785, %1777
  %1791 = phi i64 [ %1786, %1785 ], [ 0, %1777 ]
  %1792 = phi i8* [ %1788, %1785 ], [ null, %1777 ]
  %1793 = phi i32* [ %1789, %1785 ], [ null, %1777 ]
  %1794 = getelementptr inbounds i32, i32* %1793, i64 %1767
  %1795 = getelementptr inbounds i32, i32* %1793, i64 %1791
  %1796 = ptrtoint i32* %1795 to i64
  store i32 13395, i32* %1794, align 4
  %1797 = getelementptr inbounds i32, i32* %1794, i64 1
  %1798 = ptrtoint i32* %1797 to i64
  %1799 = ptrtoint i32* %1793 to i64
  %1800 = icmp sgt i64 %1766, 0
  br i1 %1800, label %1801, label %1803

1801:                                             ; preds = %1790
  %1802 = inttoptr i64 %1765 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1792, i8* align 4 %1802, i64 %1766, i1 false) #12
  br label %1803

1803:                                             ; preds = %1801, %1790
  store i64 %1799, i64* %1764, align 8
  store i64 %1798, i64* %1763, align 8
  store i64 %1796, i64* %1773, align 8
  %1804 = icmp eq i64 %1765, 0
  br i1 %1804, label %1809, label %1805

1805:                                             ; preds = %1803
  %1806 = inttoptr i64 %1765 to i8*
  call void @_ZdlPv(i8* %1806) #14
  %1807 = load i32*, i32** %53, align 8
  %1808 = ptrtoint i32* %1807 to i64
  br label %1809

1809:                                             ; preds = %1757, %1803, %1805
  %1810 = phi i64 [ %1759, %1757 ], [ %1798, %1803 ], [ %1808, %1805 ]
  %1811 = phi i32* [ %1758, %1757 ], [ %1797, %1803 ], [ %1807, %1805 ]
  %1812 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 5
  %1813 = load i8, i8* %1812, align 4, !range !2
  %1814 = zext i8 %1813 to i32
  %1815 = load i32*, i32** %54, align 8
  %1816 = icmp ult i32* %1811, %1815
  %1817 = ptrtoint i32* %1815 to i64
  br i1 %1816, label %1818, label %1822

1818:                                             ; preds = %1809
  store i32 %1814, i32* %1811, align 4
  %1819 = getelementptr inbounds i32, i32* %1811, i64 1
  %1820 = ptrtoint i32* %1819 to i64
  %1821 = bitcast i32** %53 to i64*
  store i64 %1820, i64* %1821, align 8
  br label %1872

1822:                                             ; preds = %1809
  %1823 = ptrtoint i32* %1811 to i64
  %1824 = bitcast i32** %53 to i64*
  %1825 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1826 = load i64, i64* %1825, align 8
  %1827 = sub i64 %1823, %1826
  %1828 = ashr exact i64 %1827, 2
  %1829 = add nsw i64 %1828, 1
  %1830 = icmp ugt i64 %1829, 4611686018427387903
  br i1 %1830, label %1831, label %1833

1831:                                             ; preds = %1822
  %1832 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1832) #13
  unreachable

1833:                                             ; preds = %1822
  %1834 = bitcast i32** %54 to i64*
  %1835 = sub i64 %1817, %1826
  %1836 = ashr exact i64 %1835, 2
  %1837 = icmp ult i64 %1836, 2305843009213693951
  br i1 %1837, label %1838, label %1846

1838:                                             ; preds = %1833
  %1839 = ashr exact i64 %1835, 1
  %1840 = icmp ult i64 %1839, %1829
  %1841 = select i1 %1840, i64 %1829, i64 %1839
  %1842 = icmp eq i64 %1841, 0
  br i1 %1842, label %1851, label %1843

1843:                                             ; preds = %1838
  %1844 = icmp ugt i64 %1841, 4611686018427387903
  br i1 %1844, label %1845, label %1846

1845:                                             ; preds = %1843
  call void @abort() #13
  unreachable

1846:                                             ; preds = %1843, %1833
  %1847 = phi i64 [ %1841, %1843 ], [ 4611686018427387903, %1833 ]
  %1848 = shl i64 %1847, 2
  %1849 = call i8* @_Znwm(i64 %1848) #14
  %1850 = bitcast i8* %1849 to i32*
  br label %1851

1851:                                             ; preds = %1846, %1838
  %1852 = phi i64 [ %1847, %1846 ], [ 0, %1838 ]
  %1853 = phi i32* [ %1850, %1846 ], [ null, %1838 ]
  %1854 = getelementptr inbounds i32, i32* %1853, i64 %1828
  %1855 = getelementptr inbounds i32, i32* %1853, i64 %1852
  %1856 = ptrtoint i32* %1855 to i64
  store i32 %1814, i32* %1854, align 4
  %1857 = getelementptr inbounds i32, i32* %1854, i64 1
  %1858 = ptrtoint i32* %1857 to i64
  %1859 = sub i64 %1810, %1826
  %1860 = ashr exact i64 %1859, 2
  %1861 = sub nsw i64 0, %1860
  %1862 = getelementptr inbounds i32, i32* %1854, i64 %1861
  %1863 = ptrtoint i32* %1862 to i64
  %1864 = icmp sgt i64 %1859, 0
  br i1 %1864, label %1865, label %1868

1865:                                             ; preds = %1851
  %1866 = bitcast i32* %1862 to i8*
  %1867 = inttoptr i64 %1826 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1866, i8* align 4 %1867, i64 %1859, i1 false) #12
  br label %1868

1868:                                             ; preds = %1865, %1851
  store i64 %1863, i64* %1825, align 8
  store i64 %1858, i64* %1824, align 8
  store i64 %1856, i64* %1834, align 8
  %1869 = icmp eq i64 %1826, 0
  br i1 %1869, label %1872, label %1870

1870:                                             ; preds = %1868
  %1871 = inttoptr i64 %1826 to i8*
  call void @_ZdlPv(i8* %1871) #14
  br label %1872

1872:                                             ; preds = %1870, %1868, %1818, %1750
  %1873 = call zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0)) #12
  br i1 %1873, label %1874, label %1991

1874:                                             ; preds = %1872
  %1875 = load i32*, i32** %53, align 8
  %1876 = load i32*, i32** %54, align 8
  %1877 = icmp ult i32* %1875, %1876
  %1878 = ptrtoint i32* %1876 to i64
  br i1 %1877, label %1879, label %1883

1879:                                             ; preds = %1874
  store i32 13443, i32* %1875, align 4
  %1880 = getelementptr inbounds i32, i32* %1875, i64 1
  %1881 = ptrtoint i32* %1880 to i64
  %1882 = bitcast i32** %53 to i64*
  store i64 %1881, i64* %1882, align 8
  br label %1931

1883:                                             ; preds = %1874
  %1884 = ptrtoint i32* %1875 to i64
  %1885 = bitcast i32** %53 to i64*
  %1886 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1887 = load i64, i64* %1886, align 8
  %1888 = sub i64 %1884, %1887
  %1889 = ashr exact i64 %1888, 2
  %1890 = add nsw i64 %1889, 1
  %1891 = icmp ugt i64 %1890, 4611686018427387903
  br i1 %1891, label %1892, label %1894

1892:                                             ; preds = %1883
  %1893 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1893) #13
  unreachable

1894:                                             ; preds = %1883
  %1895 = bitcast i32** %54 to i64*
  %1896 = sub i64 %1878, %1887
  %1897 = ashr exact i64 %1896, 2
  %1898 = icmp ult i64 %1897, 2305843009213693951
  br i1 %1898, label %1899, label %1907

1899:                                             ; preds = %1894
  %1900 = ashr exact i64 %1896, 1
  %1901 = icmp ult i64 %1900, %1890
  %1902 = select i1 %1901, i64 %1890, i64 %1900
  %1903 = icmp eq i64 %1902, 0
  br i1 %1903, label %1912, label %1904

1904:                                             ; preds = %1899
  %1905 = icmp ugt i64 %1902, 4611686018427387903
  br i1 %1905, label %1906, label %1907

1906:                                             ; preds = %1904
  call void @abort() #13
  unreachable

1907:                                             ; preds = %1904, %1894
  %1908 = phi i64 [ %1902, %1904 ], [ 4611686018427387903, %1894 ]
  %1909 = shl i64 %1908, 2
  %1910 = call i8* @_Znwm(i64 %1909) #14
  %1911 = bitcast i8* %1910 to i32*
  br label %1912

1912:                                             ; preds = %1907, %1899
  %1913 = phi i64 [ %1908, %1907 ], [ 0, %1899 ]
  %1914 = phi i8* [ %1910, %1907 ], [ null, %1899 ]
  %1915 = phi i32* [ %1911, %1907 ], [ null, %1899 ]
  %1916 = getelementptr inbounds i32, i32* %1915, i64 %1889
  %1917 = getelementptr inbounds i32, i32* %1915, i64 %1913
  %1918 = ptrtoint i32* %1917 to i64
  store i32 13443, i32* %1916, align 4
  %1919 = getelementptr inbounds i32, i32* %1916, i64 1
  %1920 = ptrtoint i32* %1919 to i64
  %1921 = ptrtoint i32* %1915 to i64
  %1922 = icmp sgt i64 %1888, 0
  br i1 %1922, label %1923, label %1925

1923:                                             ; preds = %1912
  %1924 = inttoptr i64 %1887 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1914, i8* align 4 %1924, i64 %1888, i1 false) #12
  br label %1925

1925:                                             ; preds = %1923, %1912
  store i64 %1921, i64* %1886, align 8
  store i64 %1920, i64* %1885, align 8
  store i64 %1918, i64* %1895, align 8
  %1926 = icmp eq i64 %1887, 0
  br i1 %1926, label %1931, label %1927

1927:                                             ; preds = %1925
  %1928 = inttoptr i64 %1887 to i8*
  call void @_ZdlPv(i8* %1928) #14
  %1929 = load i32*, i32** %53, align 8
  %1930 = ptrtoint i32* %1929 to i64
  br label %1931

1931:                                             ; preds = %1879, %1925, %1927
  %1932 = phi i64 [ %1881, %1879 ], [ %1920, %1925 ], [ %1930, %1927 ]
  %1933 = phi i32* [ %1880, %1879 ], [ %1919, %1925 ], [ %1929, %1927 ]
  %1934 = load i32*, i32** %54, align 8
  %1935 = icmp ult i32* %1933, %1934
  %1936 = ptrtoint i32* %1934 to i64
  br i1 %1935, label %1937, label %1941

1937:                                             ; preds = %1931
  store i32 0, i32* %1933, align 4
  %1938 = getelementptr inbounds i32, i32* %1933, i64 1
  %1939 = ptrtoint i32* %1938 to i64
  %1940 = bitcast i32** %53 to i64*
  store i64 %1939, i64* %1940, align 8
  br label %1991

1941:                                             ; preds = %1931
  %1942 = ptrtoint i32* %1933 to i64
  %1943 = bitcast i32** %53 to i64*
  %1944 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %1945 = load i64, i64* %1944, align 8
  %1946 = sub i64 %1942, %1945
  %1947 = ashr exact i64 %1946, 2
  %1948 = add nsw i64 %1947, 1
  %1949 = icmp ugt i64 %1948, 4611686018427387903
  br i1 %1949, label %1950, label %1952

1950:                                             ; preds = %1941
  %1951 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1951) #13
  unreachable

1952:                                             ; preds = %1941
  %1953 = bitcast i32** %54 to i64*
  %1954 = sub i64 %1936, %1945
  %1955 = ashr exact i64 %1954, 2
  %1956 = icmp ult i64 %1955, 2305843009213693951
  br i1 %1956, label %1957, label %1965

1957:                                             ; preds = %1952
  %1958 = ashr exact i64 %1954, 1
  %1959 = icmp ult i64 %1958, %1948
  %1960 = select i1 %1959, i64 %1948, i64 %1958
  %1961 = icmp eq i64 %1960, 0
  br i1 %1961, label %1970, label %1962

1962:                                             ; preds = %1957
  %1963 = icmp ugt i64 %1960, 4611686018427387903
  br i1 %1963, label %1964, label %1965

1964:                                             ; preds = %1962
  call void @abort() #13
  unreachable

1965:                                             ; preds = %1962, %1952
  %1966 = phi i64 [ %1960, %1962 ], [ 4611686018427387903, %1952 ]
  %1967 = shl i64 %1966, 2
  %1968 = call i8* @_Znwm(i64 %1967) #14
  %1969 = bitcast i8* %1968 to i32*
  br label %1970

1970:                                             ; preds = %1965, %1957
  %1971 = phi i64 [ %1966, %1965 ], [ 0, %1957 ]
  %1972 = phi i32* [ %1969, %1965 ], [ null, %1957 ]
  %1973 = getelementptr inbounds i32, i32* %1972, i64 %1947
  %1974 = getelementptr inbounds i32, i32* %1972, i64 %1971
  %1975 = ptrtoint i32* %1974 to i64
  store i32 0, i32* %1973, align 4
  %1976 = getelementptr inbounds i32, i32* %1973, i64 1
  %1977 = ptrtoint i32* %1976 to i64
  %1978 = sub i64 %1932, %1945
  %1979 = ashr exact i64 %1978, 2
  %1980 = sub nsw i64 0, %1979
  %1981 = getelementptr inbounds i32, i32* %1973, i64 %1980
  %1982 = ptrtoint i32* %1981 to i64
  %1983 = icmp sgt i64 %1978, 0
  br i1 %1983, label %1984, label %1987

1984:                                             ; preds = %1970
  %1985 = bitcast i32* %1981 to i8*
  %1986 = inttoptr i64 %1945 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1985, i8* align 4 %1986, i64 %1978, i1 false) #12
  br label %1987

1987:                                             ; preds = %1984, %1970
  store i64 %1982, i64* %1944, align 8
  store i64 %1977, i64* %1943, align 8
  store i64 %1975, i64* %1953, align 8
  %1988 = icmp eq i64 %1945, 0
  br i1 %1988, label %1991, label %1989

1989:                                             ; preds = %1987
  %1990 = inttoptr i64 %1945 to i8*
  call void @_ZdlPv(i8* %1990) #14
  br label %1991

1991:                                             ; preds = %1989, %1987, %1937, %1872
  %1992 = call zeroext i1 @_ZN2gl12GLSurfaceEGL31IsANGLEPowerPreferenceSupportedEv() #12
  br i1 %1992, label %1993, label %2231

1993:                                             ; preds = %1991
  %1994 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 0
  %1995 = load i32, i32* %1994, align 4
  %1996 = call i32 @_ZN2gl9GLContext19AdjustGpuPreferenceENS_13GpuPreferenceE(i32 %1995) #12
  switch i32 %1996, label %2231 [
    i32 2, label %2114
    i32 1, label %1997
  ]

1997:                                             ; preds = %1993
  %1998 = load i32*, i32** %53, align 8
  %1999 = load i32*, i32** %54, align 8
  %2000 = icmp ult i32* %1998, %1999
  %2001 = ptrtoint i32* %1999 to i64
  br i1 %2000, label %2002, label %2006

2002:                                             ; preds = %1997
  store i32 13442, i32* %1998, align 4
  %2003 = getelementptr inbounds i32, i32* %1998, i64 1
  %2004 = ptrtoint i32* %2003 to i64
  %2005 = bitcast i32** %53 to i64*
  store i64 %2004, i64* %2005, align 8
  br label %2054

2006:                                             ; preds = %1997
  %2007 = ptrtoint i32* %1998 to i64
  %2008 = bitcast i32** %53 to i64*
  %2009 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2010 = load i64, i64* %2009, align 8
  %2011 = sub i64 %2007, %2010
  %2012 = ashr exact i64 %2011, 2
  %2013 = add nsw i64 %2012, 1
  %2014 = icmp ugt i64 %2013, 4611686018427387903
  br i1 %2014, label %2015, label %2017

2015:                                             ; preds = %2006
  %2016 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2016) #13
  unreachable

2017:                                             ; preds = %2006
  %2018 = bitcast i32** %54 to i64*
  %2019 = sub i64 %2001, %2010
  %2020 = ashr exact i64 %2019, 2
  %2021 = icmp ult i64 %2020, 2305843009213693951
  br i1 %2021, label %2022, label %2030

2022:                                             ; preds = %2017
  %2023 = ashr exact i64 %2019, 1
  %2024 = icmp ult i64 %2023, %2013
  %2025 = select i1 %2024, i64 %2013, i64 %2023
  %2026 = icmp eq i64 %2025, 0
  br i1 %2026, label %2035, label %2027

2027:                                             ; preds = %2022
  %2028 = icmp ugt i64 %2025, 4611686018427387903
  br i1 %2028, label %2029, label %2030

2029:                                             ; preds = %2027
  call void @abort() #13
  unreachable

2030:                                             ; preds = %2027, %2017
  %2031 = phi i64 [ %2025, %2027 ], [ 4611686018427387903, %2017 ]
  %2032 = shl i64 %2031, 2
  %2033 = call i8* @_Znwm(i64 %2032) #14
  %2034 = bitcast i8* %2033 to i32*
  br label %2035

2035:                                             ; preds = %2030, %2022
  %2036 = phi i64 [ %2031, %2030 ], [ 0, %2022 ]
  %2037 = phi i8* [ %2033, %2030 ], [ null, %2022 ]
  %2038 = phi i32* [ %2034, %2030 ], [ null, %2022 ]
  %2039 = getelementptr inbounds i32, i32* %2038, i64 %2012
  %2040 = getelementptr inbounds i32, i32* %2038, i64 %2036
  %2041 = ptrtoint i32* %2040 to i64
  store i32 13442, i32* %2039, align 4
  %2042 = getelementptr inbounds i32, i32* %2039, i64 1
  %2043 = ptrtoint i32* %2042 to i64
  %2044 = ptrtoint i32* %2038 to i64
  %2045 = icmp sgt i64 %2011, 0
  br i1 %2045, label %2046, label %2048

2046:                                             ; preds = %2035
  %2047 = inttoptr i64 %2010 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2037, i8* align 4 %2047, i64 %2011, i1 false) #12
  br label %2048

2048:                                             ; preds = %2046, %2035
  store i64 %2044, i64* %2009, align 8
  store i64 %2043, i64* %2008, align 8
  store i64 %2041, i64* %2018, align 8
  %2049 = icmp eq i64 %2010, 0
  br i1 %2049, label %2054, label %2050

2050:                                             ; preds = %2048
  %2051 = inttoptr i64 %2010 to i8*
  call void @_ZdlPv(i8* %2051) #14
  %2052 = load i32*, i32** %53, align 8
  %2053 = ptrtoint i32* %2052 to i64
  br label %2054

2054:                                             ; preds = %2002, %2048, %2050
  %2055 = phi i64 [ %2004, %2002 ], [ %2043, %2048 ], [ %2053, %2050 ]
  %2056 = phi i32* [ %2003, %2002 ], [ %2042, %2048 ], [ %2052, %2050 ]
  %2057 = load i32*, i32** %54, align 8
  %2058 = icmp ult i32* %2056, %2057
  %2059 = ptrtoint i32* %2057 to i64
  br i1 %2058, label %2060, label %2064

2060:                                             ; preds = %2054
  store i32 1, i32* %2056, align 4
  %2061 = getelementptr inbounds i32, i32* %2056, i64 1
  %2062 = ptrtoint i32* %2061 to i64
  %2063 = bitcast i32** %53 to i64*
  store i64 %2062, i64* %2063, align 8
  br label %2231

2064:                                             ; preds = %2054
  %2065 = ptrtoint i32* %2056 to i64
  %2066 = bitcast i32** %53 to i64*
  %2067 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2068 = load i64, i64* %2067, align 8
  %2069 = sub i64 %2065, %2068
  %2070 = ashr exact i64 %2069, 2
  %2071 = add nsw i64 %2070, 1
  %2072 = icmp ugt i64 %2071, 4611686018427387903
  br i1 %2072, label %2073, label %2075

2073:                                             ; preds = %2064
  %2074 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2074) #13
  unreachable

2075:                                             ; preds = %2064
  %2076 = bitcast i32** %54 to i64*
  %2077 = sub i64 %2059, %2068
  %2078 = ashr exact i64 %2077, 2
  %2079 = icmp ult i64 %2078, 2305843009213693951
  br i1 %2079, label %2080, label %2088

2080:                                             ; preds = %2075
  %2081 = ashr exact i64 %2077, 1
  %2082 = icmp ult i64 %2081, %2071
  %2083 = select i1 %2082, i64 %2071, i64 %2081
  %2084 = icmp eq i64 %2083, 0
  br i1 %2084, label %2093, label %2085

2085:                                             ; preds = %2080
  %2086 = icmp ugt i64 %2083, 4611686018427387903
  br i1 %2086, label %2087, label %2088

2087:                                             ; preds = %2085
  call void @abort() #13
  unreachable

2088:                                             ; preds = %2085, %2075
  %2089 = phi i64 [ %2083, %2085 ], [ 4611686018427387903, %2075 ]
  %2090 = shl i64 %2089, 2
  %2091 = call i8* @_Znwm(i64 %2090) #14
  %2092 = bitcast i8* %2091 to i32*
  br label %2093

2093:                                             ; preds = %2088, %2080
  %2094 = phi i64 [ %2089, %2088 ], [ 0, %2080 ]
  %2095 = phi i32* [ %2092, %2088 ], [ null, %2080 ]
  %2096 = getelementptr inbounds i32, i32* %2095, i64 %2070
  %2097 = getelementptr inbounds i32, i32* %2095, i64 %2094
  %2098 = ptrtoint i32* %2097 to i64
  store i32 1, i32* %2096, align 4
  %2099 = getelementptr inbounds i32, i32* %2096, i64 1
  %2100 = ptrtoint i32* %2099 to i64
  %2101 = sub i64 %2055, %2068
  %2102 = ashr exact i64 %2101, 2
  %2103 = sub nsw i64 0, %2102
  %2104 = getelementptr inbounds i32, i32* %2096, i64 %2103
  %2105 = ptrtoint i32* %2104 to i64
  %2106 = icmp sgt i64 %2101, 0
  br i1 %2106, label %2107, label %2110

2107:                                             ; preds = %2093
  %2108 = bitcast i32* %2104 to i8*
  %2109 = inttoptr i64 %2068 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2108, i8* align 4 %2109, i64 %2101, i1 false) #12
  br label %2110

2110:                                             ; preds = %2107, %2093
  store i64 %2105, i64* %2067, align 8
  store i64 %2100, i64* %2066, align 8
  store i64 %2098, i64* %2076, align 8
  %2111 = icmp eq i64 %2068, 0
  br i1 %2111, label %2231, label %2112

2112:                                             ; preds = %2110
  %2113 = inttoptr i64 %2068 to i8*
  call void @_ZdlPv(i8* %2113) #14
  br label %2231

2114:                                             ; preds = %1993
  %2115 = load i32*, i32** %53, align 8
  %2116 = load i32*, i32** %54, align 8
  %2117 = icmp ult i32* %2115, %2116
  %2118 = ptrtoint i32* %2116 to i64
  br i1 %2117, label %2119, label %2123

2119:                                             ; preds = %2114
  store i32 13442, i32* %2115, align 4
  %2120 = getelementptr inbounds i32, i32* %2115, i64 1
  %2121 = ptrtoint i32* %2120 to i64
  %2122 = bitcast i32** %53 to i64*
  store i64 %2121, i64* %2122, align 8
  br label %2171

2123:                                             ; preds = %2114
  %2124 = ptrtoint i32* %2115 to i64
  %2125 = bitcast i32** %53 to i64*
  %2126 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2127 = load i64, i64* %2126, align 8
  %2128 = sub i64 %2124, %2127
  %2129 = ashr exact i64 %2128, 2
  %2130 = add nsw i64 %2129, 1
  %2131 = icmp ugt i64 %2130, 4611686018427387903
  br i1 %2131, label %2132, label %2134

2132:                                             ; preds = %2123
  %2133 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2133) #13
  unreachable

2134:                                             ; preds = %2123
  %2135 = bitcast i32** %54 to i64*
  %2136 = sub i64 %2118, %2127
  %2137 = ashr exact i64 %2136, 2
  %2138 = icmp ult i64 %2137, 2305843009213693951
  br i1 %2138, label %2139, label %2147

2139:                                             ; preds = %2134
  %2140 = ashr exact i64 %2136, 1
  %2141 = icmp ult i64 %2140, %2130
  %2142 = select i1 %2141, i64 %2130, i64 %2140
  %2143 = icmp eq i64 %2142, 0
  br i1 %2143, label %2152, label %2144

2144:                                             ; preds = %2139
  %2145 = icmp ugt i64 %2142, 4611686018427387903
  br i1 %2145, label %2146, label %2147

2146:                                             ; preds = %2144
  call void @abort() #13
  unreachable

2147:                                             ; preds = %2144, %2134
  %2148 = phi i64 [ %2142, %2144 ], [ 4611686018427387903, %2134 ]
  %2149 = shl i64 %2148, 2
  %2150 = call i8* @_Znwm(i64 %2149) #14
  %2151 = bitcast i8* %2150 to i32*
  br label %2152

2152:                                             ; preds = %2147, %2139
  %2153 = phi i64 [ %2148, %2147 ], [ 0, %2139 ]
  %2154 = phi i8* [ %2150, %2147 ], [ null, %2139 ]
  %2155 = phi i32* [ %2151, %2147 ], [ null, %2139 ]
  %2156 = getelementptr inbounds i32, i32* %2155, i64 %2129
  %2157 = getelementptr inbounds i32, i32* %2155, i64 %2153
  %2158 = ptrtoint i32* %2157 to i64
  store i32 13442, i32* %2156, align 4
  %2159 = getelementptr inbounds i32, i32* %2156, i64 1
  %2160 = ptrtoint i32* %2159 to i64
  %2161 = ptrtoint i32* %2155 to i64
  %2162 = icmp sgt i64 %2128, 0
  br i1 %2162, label %2163, label %2165

2163:                                             ; preds = %2152
  %2164 = inttoptr i64 %2127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2154, i8* align 4 %2164, i64 %2128, i1 false) #12
  br label %2165

2165:                                             ; preds = %2163, %2152
  store i64 %2161, i64* %2126, align 8
  store i64 %2160, i64* %2125, align 8
  store i64 %2158, i64* %2135, align 8
  %2166 = icmp eq i64 %2127, 0
  br i1 %2166, label %2171, label %2167

2167:                                             ; preds = %2165
  %2168 = inttoptr i64 %2127 to i8*
  call void @_ZdlPv(i8* %2168) #14
  %2169 = load i32*, i32** %53, align 8
  %2170 = ptrtoint i32* %2169 to i64
  br label %2171

2171:                                             ; preds = %2119, %2165, %2167
  %2172 = phi i64 [ %2121, %2119 ], [ %2160, %2165 ], [ %2170, %2167 ]
  %2173 = phi i32* [ %2120, %2119 ], [ %2159, %2165 ], [ %2169, %2167 ]
  %2174 = load i32*, i32** %54, align 8
  %2175 = icmp ult i32* %2173, %2174
  %2176 = ptrtoint i32* %2174 to i64
  br i1 %2175, label %2177, label %2181

2177:                                             ; preds = %2171
  store i32 2, i32* %2173, align 4
  %2178 = getelementptr inbounds i32, i32* %2173, i64 1
  %2179 = ptrtoint i32* %2178 to i64
  %2180 = bitcast i32** %53 to i64*
  store i64 %2179, i64* %2180, align 8
  br label %2231

2181:                                             ; preds = %2171
  %2182 = ptrtoint i32* %2173 to i64
  %2183 = bitcast i32** %53 to i64*
  %2184 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2185 = load i64, i64* %2184, align 8
  %2186 = sub i64 %2182, %2185
  %2187 = ashr exact i64 %2186, 2
  %2188 = add nsw i64 %2187, 1
  %2189 = icmp ugt i64 %2188, 4611686018427387903
  br i1 %2189, label %2190, label %2192

2190:                                             ; preds = %2181
  %2191 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2191) #13
  unreachable

2192:                                             ; preds = %2181
  %2193 = bitcast i32** %54 to i64*
  %2194 = sub i64 %2176, %2185
  %2195 = ashr exact i64 %2194, 2
  %2196 = icmp ult i64 %2195, 2305843009213693951
  br i1 %2196, label %2197, label %2205

2197:                                             ; preds = %2192
  %2198 = ashr exact i64 %2194, 1
  %2199 = icmp ult i64 %2198, %2188
  %2200 = select i1 %2199, i64 %2188, i64 %2198
  %2201 = icmp eq i64 %2200, 0
  br i1 %2201, label %2210, label %2202

2202:                                             ; preds = %2197
  %2203 = icmp ugt i64 %2200, 4611686018427387903
  br i1 %2203, label %2204, label %2205

2204:                                             ; preds = %2202
  call void @abort() #13
  unreachable

2205:                                             ; preds = %2202, %2192
  %2206 = phi i64 [ %2200, %2202 ], [ 4611686018427387903, %2192 ]
  %2207 = shl i64 %2206, 2
  %2208 = call i8* @_Znwm(i64 %2207) #14
  %2209 = bitcast i8* %2208 to i32*
  br label %2210

2210:                                             ; preds = %2205, %2197
  %2211 = phi i64 [ %2206, %2205 ], [ 0, %2197 ]
  %2212 = phi i32* [ %2209, %2205 ], [ null, %2197 ]
  %2213 = getelementptr inbounds i32, i32* %2212, i64 %2187
  %2214 = getelementptr inbounds i32, i32* %2212, i64 %2211
  %2215 = ptrtoint i32* %2214 to i64
  store i32 2, i32* %2213, align 4
  %2216 = getelementptr inbounds i32, i32* %2213, i64 1
  %2217 = ptrtoint i32* %2216 to i64
  %2218 = sub i64 %2172, %2185
  %2219 = ashr exact i64 %2218, 2
  %2220 = sub nsw i64 0, %2219
  %2221 = getelementptr inbounds i32, i32* %2213, i64 %2220
  %2222 = ptrtoint i32* %2221 to i64
  %2223 = icmp sgt i64 %2218, 0
  br i1 %2223, label %2224, label %2227

2224:                                             ; preds = %2210
  %2225 = bitcast i32* %2221 to i8*
  %2226 = inttoptr i64 %2185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2225, i8* align 4 %2226, i64 %2218, i1 false) #12
  br label %2227

2227:                                             ; preds = %2224, %2210
  store i64 %2222, i64* %2184, align 8
  store i64 %2217, i64* %2183, align 8
  store i64 %2215, i64* %2193, align 8
  %2228 = icmp eq i64 %2185, 0
  br i1 %2228, label %2231, label %2229

2229:                                             ; preds = %2227
  %2230 = inttoptr i64 %2185 to i8*
  call void @_ZdlPv(i8* %2230) #14
  br label %2231

2231:                                             ; preds = %2229, %2227, %2177, %2112, %2110, %2060, %1993, %1991
  %2232 = call zeroext i1 @_ZN2gl12GLSurfaceEGL41IsANGLEExternalContextAndSurfaceSupportedEv() #12
  br i1 %2232, label %2233, label %2475

2233:                                             ; preds = %2231
  %2234 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 11
  %2235 = load i8, i8* %2234, align 2, !range !2
  %2236 = icmp eq i8 %2235, 0
  br i1 %2236, label %2354, label %2237

2237:                                             ; preds = %2233
  %2238 = load i32*, i32** %53, align 8
  %2239 = load i32*, i32** %54, align 8
  %2240 = icmp ult i32* %2238, %2239
  %2241 = ptrtoint i32* %2239 to i64
  br i1 %2240, label %2242, label %2246

2242:                                             ; preds = %2237
  store i32 13454, i32* %2238, align 4
  %2243 = getelementptr inbounds i32, i32* %2238, i64 1
  %2244 = ptrtoint i32* %2243 to i64
  %2245 = bitcast i32** %53 to i64*
  store i64 %2244, i64* %2245, align 8
  br label %2294

2246:                                             ; preds = %2237
  %2247 = ptrtoint i32* %2238 to i64
  %2248 = bitcast i32** %53 to i64*
  %2249 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2250 = load i64, i64* %2249, align 8
  %2251 = sub i64 %2247, %2250
  %2252 = ashr exact i64 %2251, 2
  %2253 = add nsw i64 %2252, 1
  %2254 = icmp ugt i64 %2253, 4611686018427387903
  br i1 %2254, label %2255, label %2257

2255:                                             ; preds = %2246
  %2256 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2256) #13
  unreachable

2257:                                             ; preds = %2246
  %2258 = bitcast i32** %54 to i64*
  %2259 = sub i64 %2241, %2250
  %2260 = ashr exact i64 %2259, 2
  %2261 = icmp ult i64 %2260, 2305843009213693951
  br i1 %2261, label %2262, label %2270

2262:                                             ; preds = %2257
  %2263 = ashr exact i64 %2259, 1
  %2264 = icmp ult i64 %2263, %2253
  %2265 = select i1 %2264, i64 %2253, i64 %2263
  %2266 = icmp eq i64 %2265, 0
  br i1 %2266, label %2275, label %2267

2267:                                             ; preds = %2262
  %2268 = icmp ugt i64 %2265, 4611686018427387903
  br i1 %2268, label %2269, label %2270

2269:                                             ; preds = %2267
  call void @abort() #13
  unreachable

2270:                                             ; preds = %2267, %2257
  %2271 = phi i64 [ %2265, %2267 ], [ 4611686018427387903, %2257 ]
  %2272 = shl i64 %2271, 2
  %2273 = call i8* @_Znwm(i64 %2272) #14
  %2274 = bitcast i8* %2273 to i32*
  br label %2275

2275:                                             ; preds = %2270, %2262
  %2276 = phi i64 [ %2271, %2270 ], [ 0, %2262 ]
  %2277 = phi i8* [ %2273, %2270 ], [ null, %2262 ]
  %2278 = phi i32* [ %2274, %2270 ], [ null, %2262 ]
  %2279 = getelementptr inbounds i32, i32* %2278, i64 %2252
  %2280 = getelementptr inbounds i32, i32* %2278, i64 %2276
  %2281 = ptrtoint i32* %2280 to i64
  store i32 13454, i32* %2279, align 4
  %2282 = getelementptr inbounds i32, i32* %2279, i64 1
  %2283 = ptrtoint i32* %2282 to i64
  %2284 = ptrtoint i32* %2278 to i64
  %2285 = icmp sgt i64 %2251, 0
  br i1 %2285, label %2286, label %2288

2286:                                             ; preds = %2275
  %2287 = inttoptr i64 %2250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2277, i8* align 4 %2287, i64 %2251, i1 false) #12
  br label %2288

2288:                                             ; preds = %2286, %2275
  store i64 %2284, i64* %2249, align 8
  store i64 %2283, i64* %2248, align 8
  store i64 %2281, i64* %2258, align 8
  %2289 = icmp eq i64 %2250, 0
  br i1 %2289, label %2294, label %2290

2290:                                             ; preds = %2288
  %2291 = inttoptr i64 %2250 to i8*
  call void @_ZdlPv(i8* %2291) #14
  %2292 = load i32*, i32** %53, align 8
  %2293 = ptrtoint i32* %2292 to i64
  br label %2294

2294:                                             ; preds = %2242, %2288, %2290
  %2295 = phi i64 [ %2244, %2242 ], [ %2283, %2288 ], [ %2293, %2290 ]
  %2296 = phi i32* [ %2243, %2242 ], [ %2282, %2288 ], [ %2292, %2290 ]
  %2297 = load i32*, i32** %54, align 8
  %2298 = icmp ult i32* %2296, %2297
  %2299 = ptrtoint i32* %2297 to i64
  br i1 %2298, label %2300, label %2304

2300:                                             ; preds = %2294
  store i32 1, i32* %2296, align 4
  %2301 = getelementptr inbounds i32, i32* %2296, i64 1
  %2302 = ptrtoint i32* %2301 to i64
  %2303 = bitcast i32** %53 to i64*
  store i64 %2302, i64* %2303, align 8
  br label %2354

2304:                                             ; preds = %2294
  %2305 = ptrtoint i32* %2296 to i64
  %2306 = bitcast i32** %53 to i64*
  %2307 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2308 = load i64, i64* %2307, align 8
  %2309 = sub i64 %2305, %2308
  %2310 = ashr exact i64 %2309, 2
  %2311 = add nsw i64 %2310, 1
  %2312 = icmp ugt i64 %2311, 4611686018427387903
  br i1 %2312, label %2313, label %2315

2313:                                             ; preds = %2304
  %2314 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2314) #13
  unreachable

2315:                                             ; preds = %2304
  %2316 = bitcast i32** %54 to i64*
  %2317 = sub i64 %2299, %2308
  %2318 = ashr exact i64 %2317, 2
  %2319 = icmp ult i64 %2318, 2305843009213693951
  br i1 %2319, label %2320, label %2328

2320:                                             ; preds = %2315
  %2321 = ashr exact i64 %2317, 1
  %2322 = icmp ult i64 %2321, %2311
  %2323 = select i1 %2322, i64 %2311, i64 %2321
  %2324 = icmp eq i64 %2323, 0
  br i1 %2324, label %2333, label %2325

2325:                                             ; preds = %2320
  %2326 = icmp ugt i64 %2323, 4611686018427387903
  br i1 %2326, label %2327, label %2328

2327:                                             ; preds = %2325
  call void @abort() #13
  unreachable

2328:                                             ; preds = %2325, %2315
  %2329 = phi i64 [ %2323, %2325 ], [ 4611686018427387903, %2315 ]
  %2330 = shl i64 %2329, 2
  %2331 = call i8* @_Znwm(i64 %2330) #14
  %2332 = bitcast i8* %2331 to i32*
  br label %2333

2333:                                             ; preds = %2328, %2320
  %2334 = phi i64 [ %2329, %2328 ], [ 0, %2320 ]
  %2335 = phi i32* [ %2332, %2328 ], [ null, %2320 ]
  %2336 = getelementptr inbounds i32, i32* %2335, i64 %2310
  %2337 = getelementptr inbounds i32, i32* %2335, i64 %2334
  %2338 = ptrtoint i32* %2337 to i64
  store i32 1, i32* %2336, align 4
  %2339 = getelementptr inbounds i32, i32* %2336, i64 1
  %2340 = ptrtoint i32* %2339 to i64
  %2341 = sub i64 %2295, %2308
  %2342 = ashr exact i64 %2341, 2
  %2343 = sub nsw i64 0, %2342
  %2344 = getelementptr inbounds i32, i32* %2336, i64 %2343
  %2345 = ptrtoint i32* %2344 to i64
  %2346 = icmp sgt i64 %2341, 0
  br i1 %2346, label %2347, label %2350

2347:                                             ; preds = %2333
  %2348 = bitcast i32* %2344 to i8*
  %2349 = inttoptr i64 %2308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2348, i8* align 4 %2349, i64 %2341, i1 false) #12
  br label %2350

2350:                                             ; preds = %2347, %2333
  store i64 %2345, i64* %2307, align 8
  store i64 %2340, i64* %2306, align 8
  store i64 %2338, i64* %2316, align 8
  %2351 = icmp eq i64 %2308, 0
  br i1 %2351, label %2354, label %2352

2352:                                             ; preds = %2350
  %2353 = inttoptr i64 %2308 to i8*
  call void @_ZdlPv(i8* %2353) #14
  br label %2354

2354:                                             ; preds = %2352, %2350, %2300, %2233
  %2355 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %2, i64 0, i32 12
  %2356 = load i8, i8* %2355, align 1, !range !2
  %2357 = icmp eq i8 %2356, 0
  br i1 %2357, label %2475, label %2358

2358:                                             ; preds = %2354
  %2359 = load i32*, i32** %53, align 8
  %2360 = load i32*, i32** %54, align 8
  %2361 = icmp ult i32* %2359, %2360
  %2362 = ptrtoint i32* %2360 to i64
  br i1 %2361, label %2363, label %2367

2363:                                             ; preds = %2358
  store i32 13456, i32* %2359, align 4
  %2364 = getelementptr inbounds i32, i32* %2359, i64 1
  %2365 = ptrtoint i32* %2364 to i64
  %2366 = bitcast i32** %53 to i64*
  store i64 %2365, i64* %2366, align 8
  br label %2415

2367:                                             ; preds = %2358
  %2368 = ptrtoint i32* %2359 to i64
  %2369 = bitcast i32** %53 to i64*
  %2370 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2371 = load i64, i64* %2370, align 8
  %2372 = sub i64 %2368, %2371
  %2373 = ashr exact i64 %2372, 2
  %2374 = add nsw i64 %2373, 1
  %2375 = icmp ugt i64 %2374, 4611686018427387903
  br i1 %2375, label %2376, label %2378

2376:                                             ; preds = %2367
  %2377 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2377) #13
  unreachable

2378:                                             ; preds = %2367
  %2379 = bitcast i32** %54 to i64*
  %2380 = sub i64 %2362, %2371
  %2381 = ashr exact i64 %2380, 2
  %2382 = icmp ult i64 %2381, 2305843009213693951
  br i1 %2382, label %2383, label %2391

2383:                                             ; preds = %2378
  %2384 = ashr exact i64 %2380, 1
  %2385 = icmp ult i64 %2384, %2374
  %2386 = select i1 %2385, i64 %2374, i64 %2384
  %2387 = icmp eq i64 %2386, 0
  br i1 %2387, label %2396, label %2388

2388:                                             ; preds = %2383
  %2389 = icmp ugt i64 %2386, 4611686018427387903
  br i1 %2389, label %2390, label %2391

2390:                                             ; preds = %2388
  call void @abort() #13
  unreachable

2391:                                             ; preds = %2388, %2378
  %2392 = phi i64 [ %2386, %2388 ], [ 4611686018427387903, %2378 ]
  %2393 = shl i64 %2392, 2
  %2394 = call i8* @_Znwm(i64 %2393) #14
  %2395 = bitcast i8* %2394 to i32*
  br label %2396

2396:                                             ; preds = %2391, %2383
  %2397 = phi i64 [ %2392, %2391 ], [ 0, %2383 ]
  %2398 = phi i8* [ %2394, %2391 ], [ null, %2383 ]
  %2399 = phi i32* [ %2395, %2391 ], [ null, %2383 ]
  %2400 = getelementptr inbounds i32, i32* %2399, i64 %2373
  %2401 = getelementptr inbounds i32, i32* %2399, i64 %2397
  %2402 = ptrtoint i32* %2401 to i64
  store i32 13456, i32* %2400, align 4
  %2403 = getelementptr inbounds i32, i32* %2400, i64 1
  %2404 = ptrtoint i32* %2403 to i64
  %2405 = ptrtoint i32* %2399 to i64
  %2406 = icmp sgt i64 %2372, 0
  br i1 %2406, label %2407, label %2409

2407:                                             ; preds = %2396
  %2408 = inttoptr i64 %2371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2398, i8* align 4 %2408, i64 %2372, i1 false) #12
  br label %2409

2409:                                             ; preds = %2407, %2396
  store i64 %2405, i64* %2370, align 8
  store i64 %2404, i64* %2369, align 8
  store i64 %2402, i64* %2379, align 8
  %2410 = icmp eq i64 %2371, 0
  br i1 %2410, label %2415, label %2411

2411:                                             ; preds = %2409
  %2412 = inttoptr i64 %2371 to i8*
  call void @_ZdlPv(i8* %2412) #14
  %2413 = load i32*, i32** %53, align 8
  %2414 = ptrtoint i32* %2413 to i64
  br label %2415

2415:                                             ; preds = %2363, %2409, %2411
  %2416 = phi i64 [ %2365, %2363 ], [ %2404, %2409 ], [ %2414, %2411 ]
  %2417 = phi i32* [ %2364, %2363 ], [ %2403, %2409 ], [ %2413, %2411 ]
  %2418 = load i32*, i32** %54, align 8
  %2419 = icmp ult i32* %2417, %2418
  %2420 = ptrtoint i32* %2418 to i64
  br i1 %2419, label %2421, label %2425

2421:                                             ; preds = %2415
  store i32 1, i32* %2417, align 4
  %2422 = getelementptr inbounds i32, i32* %2417, i64 1
  %2423 = ptrtoint i32* %2422 to i64
  %2424 = bitcast i32** %53 to i64*
  store i64 %2423, i64* %2424, align 8
  br label %2475

2425:                                             ; preds = %2415
  %2426 = ptrtoint i32* %2417 to i64
  %2427 = bitcast i32** %53 to i64*
  %2428 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2429 = load i64, i64* %2428, align 8
  %2430 = sub i64 %2426, %2429
  %2431 = ashr exact i64 %2430, 2
  %2432 = add nsw i64 %2431, 1
  %2433 = icmp ugt i64 %2432, 4611686018427387903
  br i1 %2433, label %2434, label %2436

2434:                                             ; preds = %2425
  %2435 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2435) #13
  unreachable

2436:                                             ; preds = %2425
  %2437 = bitcast i32** %54 to i64*
  %2438 = sub i64 %2420, %2429
  %2439 = ashr exact i64 %2438, 2
  %2440 = icmp ult i64 %2439, 2305843009213693951
  br i1 %2440, label %2441, label %2449

2441:                                             ; preds = %2436
  %2442 = ashr exact i64 %2438, 1
  %2443 = icmp ult i64 %2442, %2432
  %2444 = select i1 %2443, i64 %2432, i64 %2442
  %2445 = icmp eq i64 %2444, 0
  br i1 %2445, label %2454, label %2446

2446:                                             ; preds = %2441
  %2447 = icmp ugt i64 %2444, 4611686018427387903
  br i1 %2447, label %2448, label %2449

2448:                                             ; preds = %2446
  call void @abort() #13
  unreachable

2449:                                             ; preds = %2446, %2436
  %2450 = phi i64 [ %2444, %2446 ], [ 4611686018427387903, %2436 ]
  %2451 = shl i64 %2450, 2
  %2452 = call i8* @_Znwm(i64 %2451) #14
  %2453 = bitcast i8* %2452 to i32*
  br label %2454

2454:                                             ; preds = %2449, %2441
  %2455 = phi i64 [ %2450, %2449 ], [ 0, %2441 ]
  %2456 = phi i32* [ %2453, %2449 ], [ null, %2441 ]
  %2457 = getelementptr inbounds i32, i32* %2456, i64 %2431
  %2458 = getelementptr inbounds i32, i32* %2456, i64 %2455
  %2459 = ptrtoint i32* %2458 to i64
  store i32 1, i32* %2457, align 4
  %2460 = getelementptr inbounds i32, i32* %2457, i64 1
  %2461 = ptrtoint i32* %2460 to i64
  %2462 = sub i64 %2416, %2429
  %2463 = ashr exact i64 %2462, 2
  %2464 = sub nsw i64 0, %2463
  %2465 = getelementptr inbounds i32, i32* %2457, i64 %2464
  %2466 = ptrtoint i32* %2465 to i64
  %2467 = icmp sgt i64 %2462, 0
  br i1 %2467, label %2468, label %2471

2468:                                             ; preds = %2454
  %2469 = bitcast i32* %2465 to i8*
  %2470 = inttoptr i64 %2429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2469, i8* align 4 %2470, i64 %2462, i1 false) #12
  br label %2471

2471:                                             ; preds = %2468, %2454
  store i64 %2466, i64* %2428, align 8
  store i64 %2461, i64* %2427, align 8
  store i64 %2459, i64* %2437, align 8
  %2472 = icmp eq i64 %2429, 0
  br i1 %2472, label %2475, label %2473

2473:                                             ; preds = %2471
  %2474 = inttoptr i64 %2429 to i8*
  call void @_ZdlPv(i8* %2474) #14
  br label %2475

2475:                                             ; preds = %2473, %2471, %2421, %2354, %2231
  %2476 = load i32*, i32** %53, align 8
  %2477 = load i32*, i32** %54, align 8
  %2478 = icmp ult i32* %2476, %2477
  %2479 = ptrtoint i32* %2477 to i64
  br i1 %2478, label %2480, label %2484

2480:                                             ; preds = %2475
  store i32 12344, i32* %2476, align 4
  %2481 = getelementptr inbounds i32, i32* %2476, i64 1
  %2482 = ptrtoint i32* %2481 to i64
  %2483 = bitcast i32** %53 to i64*
  store i64 %2482, i64* %2483, align 8
  br label %2532

2484:                                             ; preds = %2475
  %2485 = ptrtoint i32* %2476 to i64
  %2486 = bitcast i32** %53 to i64*
  %2487 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2488 = load i64, i64* %2487, align 8
  %2489 = sub i64 %2485, %2488
  %2490 = ashr exact i64 %2489, 2
  %2491 = add nsw i64 %2490, 1
  %2492 = icmp ugt i64 %2491, 4611686018427387903
  br i1 %2492, label %2493, label %2495

2493:                                             ; preds = %2484
  %2494 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2494) #13
  unreachable

2495:                                             ; preds = %2484
  %2496 = bitcast i32** %54 to i64*
  %2497 = sub i64 %2479, %2488
  %2498 = ashr exact i64 %2497, 2
  %2499 = icmp ult i64 %2498, 2305843009213693951
  br i1 %2499, label %2500, label %2508

2500:                                             ; preds = %2495
  %2501 = ashr exact i64 %2497, 1
  %2502 = icmp ult i64 %2501, %2491
  %2503 = select i1 %2502, i64 %2491, i64 %2501
  %2504 = icmp eq i64 %2503, 0
  br i1 %2504, label %2513, label %2505

2505:                                             ; preds = %2500
  %2506 = icmp ugt i64 %2503, 4611686018427387903
  br i1 %2506, label %2507, label %2508

2507:                                             ; preds = %2505
  call void @abort() #13
  unreachable

2508:                                             ; preds = %2505, %2495
  %2509 = phi i64 [ %2503, %2505 ], [ 4611686018427387903, %2495 ]
  %2510 = shl i64 %2509, 2
  %2511 = call i8* @_Znwm(i64 %2510) #14
  %2512 = bitcast i8* %2511 to i32*
  br label %2513

2513:                                             ; preds = %2508, %2500
  %2514 = phi i64 [ %2509, %2508 ], [ 0, %2500 ]
  %2515 = phi i8* [ %2511, %2508 ], [ null, %2500 ]
  %2516 = phi i32* [ %2512, %2508 ], [ null, %2500 ]
  %2517 = getelementptr inbounds i32, i32* %2516, i64 %2490
  %2518 = getelementptr inbounds i32, i32* %2516, i64 %2514
  %2519 = ptrtoint i32* %2518 to i64
  store i32 12344, i32* %2517, align 4
  %2520 = getelementptr inbounds i32, i32* %2517, i64 1
  %2521 = ptrtoint i32* %2520 to i64
  %2522 = ptrtoint i32* %2516 to i64
  %2523 = icmp sgt i64 %2489, 0
  br i1 %2523, label %2524, label %2526

2524:                                             ; preds = %2513
  %2525 = inttoptr i64 %2488 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2515, i8* align 4 %2525, i64 %2489, i1 false) #12
  br label %2526

2526:                                             ; preds = %2524, %2513
  store i64 %2522, i64* %2487, align 8
  store i64 %2521, i64* %2486, align 8
  store i64 %2519, i64* %2496, align 8
  %2527 = icmp eq i64 %2488, 0
  br i1 %2527, label %2532, label %2528

2528:                                             ; preds = %2526
  %2529 = inttoptr i64 %2488 to i8*
  call void @_ZdlPv(i8* %2529) #14
  %2530 = load i32*, i32** %53, align 8
  %2531 = ptrtoint i32* %2530 to i64
  br label %2532

2532:                                             ; preds = %2480, %2526, %2528
  %2533 = phi i64 [ %2482, %2480 ], [ %2521, %2526 ], [ %2531, %2528 ]
  %2534 = phi i32* [ %2481, %2480 ], [ %2520, %2526 ], [ %2530, %2528 ]
  %2535 = load i32*, i32** %54, align 8
  %2536 = icmp ult i32* %2534, %2535
  %2537 = ptrtoint i32* %2535 to i64
  br i1 %2536, label %2538, label %2542

2538:                                             ; preds = %2532
  store i32 12344, i32* %2534, align 4
  %2539 = getelementptr inbounds i32, i32* %2534, i64 1
  %2540 = ptrtoint i32* %2539 to i64
  %2541 = bitcast i32** %53 to i64*
  store i64 %2540, i64* %2541, align 8
  br label %2592

2542:                                             ; preds = %2532
  %2543 = ptrtoint i32* %2534 to i64
  %2544 = bitcast i32** %53 to i64*
  %2545 = bitcast %"class.std::__1::vector.91"* %6 to i64*
  %2546 = load i64, i64* %2545, align 8
  %2547 = sub i64 %2543, %2546
  %2548 = ashr exact i64 %2547, 2
  %2549 = add nsw i64 %2548, 1
  %2550 = icmp ugt i64 %2549, 4611686018427387903
  br i1 %2550, label %2551, label %2553

2551:                                             ; preds = %2542
  %2552 = bitcast %"class.std::__1::vector.91"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2552) #13
  unreachable

2553:                                             ; preds = %2542
  %2554 = bitcast i32** %54 to i64*
  %2555 = sub i64 %2537, %2546
  %2556 = ashr exact i64 %2555, 2
  %2557 = icmp ult i64 %2556, 2305843009213693951
  br i1 %2557, label %2558, label %2566

2558:                                             ; preds = %2553
  %2559 = ashr exact i64 %2555, 1
  %2560 = icmp ult i64 %2559, %2549
  %2561 = select i1 %2560, i64 %2549, i64 %2559
  %2562 = icmp eq i64 %2561, 0
  br i1 %2562, label %2571, label %2563

2563:                                             ; preds = %2558
  %2564 = icmp ugt i64 %2561, 4611686018427387903
  br i1 %2564, label %2565, label %2566

2565:                                             ; preds = %2563
  call void @abort() #13
  unreachable

2566:                                             ; preds = %2563, %2553
  %2567 = phi i64 [ %2561, %2563 ], [ 4611686018427387903, %2553 ]
  %2568 = shl i64 %2567, 2
  %2569 = call i8* @_Znwm(i64 %2568) #14
  %2570 = bitcast i8* %2569 to i32*
  br label %2571

2571:                                             ; preds = %2566, %2558
  %2572 = phi i64 [ %2567, %2566 ], [ 0, %2558 ]
  %2573 = phi i32* [ %2570, %2566 ], [ null, %2558 ]
  %2574 = getelementptr inbounds i32, i32* %2573, i64 %2548
  %2575 = getelementptr inbounds i32, i32* %2573, i64 %2572
  %2576 = ptrtoint i32* %2575 to i64
  store i32 12344, i32* %2574, align 4
  %2577 = getelementptr inbounds i32, i32* %2574, i64 1
  %2578 = ptrtoint i32* %2577 to i64
  %2579 = sub i64 %2533, %2546
  %2580 = ashr exact i64 %2579, 2
  %2581 = sub nsw i64 0, %2580
  %2582 = getelementptr inbounds i32, i32* %2574, i64 %2581
  %2583 = ptrtoint i32* %2582 to i64
  %2584 = icmp sgt i64 %2579, 0
  br i1 %2584, label %2585, label %2588

2585:                                             ; preds = %2571
  %2586 = bitcast i32* %2582 to i8*
  %2587 = inttoptr i64 %2546 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2586, i8* align 4 %2587, i64 %2579, i1 false) #12
  br label %2588

2588:                                             ; preds = %2585, %2571
  store i64 %2583, i64* %2545, align 8
  store i64 %2578, i64* %2544, align 8
  store i64 %2576, i64* %2554, align 8
  %2589 = icmp eq i64 %2546, 0
  br i1 %2589, label %2592, label %2590

2590:                                             ; preds = %2588
  %2591 = inttoptr i64 %2546 to i8*
  call void @_ZdlPv(i8* %2591) #14
  br label %2592

2592:                                             ; preds = %2538, %2588, %2590
  %2593 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %2594 = load i8*, i8** %14, align 8
  %2595 = load i8*, i8** %19, align 8
  %2596 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContext"*
  %2597 = call %"class.gl::GLShareGroup"* @_ZN2gl9GLContext11share_groupEv(%"class.gl::GLContext"* %2596) #12
  %2598 = icmp eq %"class.gl::GLShareGroup"* %2597, null
  br i1 %2598, label %2602, label %2599

2599:                                             ; preds = %2592
  %2600 = call %"class.gl::GLShareGroup"* @_ZN2gl9GLContext11share_groupEv(%"class.gl::GLContext"* %2596) #12
  %2601 = call i8* @_ZN2gl12GLShareGroup9GetHandleEv(%"class.gl::GLShareGroup"* %2600) #12
  br label %2602

2602:                                             ; preds = %2592, %2599
  %2603 = phi i8* [ %2601, %2599 ], [ null, %2592 ]
  %2604 = load i32*, i32** %52, align 8
  %2605 = bitcast %"class.gl::EGLApi"* %2593 to i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)***
  %2606 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)**, i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)*** %2605, align 8
  %2607 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)** %2606, i64 8
  %2608 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i8*, i32*)** %2607, align 8
  %2609 = call i8* %2608(%"class.gl::EGLApi"* %2593, i8* %2594, i8* %2595, i8* %2603, i32* %2604) #12
  %2610 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  store i8* %2609, i8** %2610, align 8
  %2611 = icmp eq i8* %2609, null
  br i1 %2611, label %2612, label %2622

2612:                                             ; preds = %2602
  %2613 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %2613, label %2614, label %2622

2614:                                             ; preds = %2612
  %2615 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %2615) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 279, i32 2) #12
  %2616 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %2617 = bitcast %"class.std::__1::basic_ostringstream"* %2616 to %"class.std::__1::basic_ostream"*
  %2618 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2617, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i64 35) #12
  %2619 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %2620 = call i64 @strlen(i8* %2619) #12
  %2621 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2618, i8* %2619, i64 %2620) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %2615) #12
  br label %2622

2622:                                             ; preds = %2614, %2612, %896, %894, %2602
  %2623 = phi i1 [ true, %2602 ], [ false, %894 ], [ false, %896 ], [ false, %2612 ], [ false, %2614 ]
  %2624 = load i32*, i32** %52, align 8
  %2625 = icmp eq i32* %2624, null
  br i1 %2625, label %2630, label %2626

2626:                                             ; preds = %2622
  %2627 = ptrtoint i32* %2624 to i64
  %2628 = bitcast i32** %53 to i64*
  store i64 %2627, i64* %2628, align 8
  %2629 = bitcast i32* %2624 to i8*
  call void @_ZdlPv(i8* %2629) #14
  br label %2630

2630:                                             ; preds = %2622, %2626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  br label %2631

2631:                                             ; preds = %31, %29, %2630
  %2632 = phi i1 [ %2623, %2630 ], [ false, %29 ], [ false, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  ret i1 %2632
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare i8* @_ZN2ui21GetLastEGLErrorStringEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL34IsCreateContextRobustnessSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL37IsRobustnessVideoMemoryPurgeSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL45IsCreateContextBindGeneratesResourceSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL42IsCreateContextWebGLCompatabilitySupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL29IsEGLContextPrioritySupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL35IsDisplayTextureShareGroupSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL37IsDisplaySemaphoreShareGroupSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL36IsCreateContextClientArraysSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL29IsRobustResourceInitSupportedEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL31IsANGLEPowerPreferenceSupportedEv() local_unnamed_addr #1

declare i32 @_ZN2gl9GLContext19AdjustGpuPreferenceENS_13GpuPreferenceE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL41IsANGLEExternalContextAndSurfaceSupportedEv() local_unnamed_addr #1

declare %"class.gl::GLShareGroup"* @_ZN2gl9GLContext11share_groupEv(%"class.gl::GLContext"*) local_unnamed_addr #1

declare i8* @_ZN2gl12GLShareGroup9GetHandleEv(%"class.gl::GLShareGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGL7DestroyEv(%"class.gl::GLContextEGL"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  tail call void @_ZN2gl12GLContextEGL46ReleaseYUVToRGBConvertersAndBackpressureFencesEv(%"class.gl::GLContextEGL"* %0)
  %3 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 18
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %9, i8* nonnull %4) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %6
  %17 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %17, label %18, label %26

18:                                               ; preds = %16
  %19 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 291, i32 2) #12
  %20 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i64 36) #12
  %23 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %24 = call i64 @strlen(i8* %23) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* %23, i64 %24) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #12
  br label %26

26:                                               ; preds = %18, %16, %6
  store i8* null, i8** %3, align 8
  br label %27

27:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGL46ReleaseYUVToRGBConvertersAndBackpressureFencesEv(%"class.gl::GLContextEGL"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %70, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext14GetRealCurrentEv() #12
  %8 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContext"*
  %9 = icmp ne %"class.gl::GLContext"* %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"* %8) #12
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* %11) #12
  br label %12

12:                                               ; preds = %10, %6
  %13 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %14 = bitcast %"class.gl::EGLApi"* %13 to i8* (%"class.gl::EGLApi"*)***
  %15 = load i8* (%"class.gl::EGLApi"*)**, i8* (%"class.gl::EGLApi"*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %15, i64 30
  %17 = load i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %16, align 8
  %18 = tail call i8* %17(%"class.gl::EGLApi"* %13) #12
  %19 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %18
  br i1 %21, label %44, label %22

22:                                               ; preds = %12
  %23 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %24 = bitcast %"class.gl::EGLApi"* %23 to i8* (%"class.gl::EGLApi"*, i32)***
  %25 = load i8* (%"class.gl::EGLApi"*, i32)**, i8* (%"class.gl::EGLApi"*, i32)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %25, i64 32
  %27 = load i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %26, align 8
  %28 = tail call i8* %27(%"class.gl::EGLApi"* %23, i32 12377) #12
  %29 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %30 = bitcast %"class.gl::EGLApi"* %29 to i8* (%"class.gl::EGLApi"*, i32)***
  %31 = load i8* (%"class.gl::EGLApi"*, i32)**, i8* (%"class.gl::EGLApi"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %31, i64 32
  %33 = load i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %32, align 8
  %34 = tail call i8* %33(%"class.gl::EGLApi"* %29, i32 12378) #12
  %35 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %36 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = load i8*, i8** %19, align 8
  %39 = bitcast %"class.gl::EGLApi"* %35 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)***
  %40 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %40, i64 48
  %42 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %41, align 8
  %43 = tail call i32 %42(%"class.gl::EGLApi"* %35, i8* %37, i8* null, i8* null, i8* %38) #12
  br label %44

44:                                               ; preds = %12, %22
  %45 = phi i8* [ %28, %22 ], [ null, %12 ]
  %46 = phi i8* [ %34, %22 ], [ null, %12 ]
  %47 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %48 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"* %47, %"class.std::__1::__tree_node"* %50) #12
  store i64 0, i64* %3, align 8
  %51 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = icmp eq %"class.gl::GLContext"* %7, null
  %54 = xor i1 %9, true
  %55 = or i1 %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %44
  %57 = tail call %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"* nonnull %7) #12
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* %57) #12
  br label %58

58:                                               ; preds = %44, %56
  %59 = load i8*, i8** %19, align 8
  %60 = icmp eq i8* %59, %18
  br i1 %60, label %70, label %61

61:                                               ; preds = %58
  %62 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %63 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.gl::EGLApi"* %62 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)***
  %66 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %66, i64 48
  %68 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %67, align 8
  %69 = tail call i32 %68(%"class.gl::EGLApi"* %62, i8* %64, i8* %45, i8* %46, i8* %18) #12
  br label %70

70:                                               ; preds = %61, %58, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::YUVToRGBConverter"* @_ZN2gl12GLContextEGL20GetYUVToRGBConverterERKN3gfx10ColorSpaceE(%"class.gl::GLContextEGL"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.107", align 1
  %5 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL32IsEGLSurfacelessContextSupportedEv() #12
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0
  %8 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.gfx::ColorSpace"* %1, %"class.gfx::ColorSpace"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.107", %"class.std::__1::tuple.107"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  %11 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.80"* %7, %"class.gfx::ColorSpace"* dereferenceable(68) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.107"* nonnull dereferenceable(1) %4) #12
  %12 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %11, 0
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.gl::YUVToRGBConverter"**
  %15 = load %"class.gl::YUVToRGBConverter"*, %"class.gl::YUVToRGBConverter"** %14, align 8
  %16 = icmp eq %"class.gl::YUVToRGBConverter"* %15, null
  br i1 %16, label %17, label %30

17:                                               ; preds = %6
  %18 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContext"*
  %19 = call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %18) #12
  %20 = call i8* @_Znwm(i64 44) #14
  %21 = bitcast i8* %20 to %"class.gl::YUVToRGBConverter"*
  call void @_ZN2gl17YUVToRGBConverterC1ERKNS_13GLVersionInfoERKN3gfx10ColorSpaceE(%"class.gl::YUVToRGBConverter"* nonnull %21, %"struct.gl::GLVersionInfo"* %19, %"class.gfx::ColorSpace"* dereferenceable(68) %1) #12
  %22 = ptrtoint i8* %20 to i64
  %23 = load %"class.gl::YUVToRGBConverter"*, %"class.gl::YUVToRGBConverter"** %14, align 8
  %24 = bitcast %"class.std::__1::__tree_end_node"* %13 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp eq %"class.gl::YUVToRGBConverter"* %23, null
  %26 = bitcast i8* %20 to %"class.gl::YUVToRGBConverter"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %17
  call void @_ZN2gl17YUVToRGBConverterD1Ev(%"class.gl::YUVToRGBConverter"* nonnull %23) #12
  %28 = bitcast %"class.gl::YUVToRGBConverter"* %23 to i8*
  call void @_ZdlPv(i8* %28) #14
  %29 = load %"class.gl::YUVToRGBConverter"*, %"class.gl::YUVToRGBConverter"** %14, align 8
  br label %30

30:                                               ; preds = %27, %17, %6, %2
  %31 = phi %"class.gl::YUVToRGBConverter"* [ null, %2 ], [ %15, %6 ], [ %26, %17 ], [ %29, %27 ]
  ret %"class.gl::YUVToRGBConverter"* %31
}

declare zeroext i1 @_ZN2gl12GLSurfaceEGL32IsEGLSurfacelessContextSupportedEv() local_unnamed_addr #1

declare %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGL13SetVisibilityEb(%"class.gl::GLContextEGL"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL31IsANGLEPowerPreferenceSupportedEv() #12
  br i1 %3, label %4, label %18

4:                                                ; preds = %2
  %5 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %6 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %5 to void (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load void (%"class.gl::EGLApi"*, i8*, i8*)**, void (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  br i1 %1, label %12, label %15

12:                                               ; preds = %4
  %13 = getelementptr inbounds void (%"class.gl::EGLApi"*, i8*, i8*)*, void (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 62
  %14 = load void (%"class.gl::EGLApi"*, i8*, i8*)*, void (%"class.gl::EGLApi"*, i8*, i8*)** %13, align 8
  tail call void %14(%"class.gl::EGLApi"* %5, i8* %7, i8* %9) #12
  br label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds void (%"class.gl::EGLApi"*, i8*, i8*)*, void (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 63
  %17 = load void (%"class.gl::EGLApi"*, i8*, i8*)*, void (%"class.gl::EGLApi"*, i8*, i8*)** %16, align 8
  tail call void %17(%"class.gl::EGLApi"* %5, i8* %7, i8* %9) #12
  br label %18

18:                                               ; preds = %12, %15, %2
  ret void
}

declare %"class.gl::GLContext"* @_ZN2gl9GLContext14GetRealCurrentEv() local_unnamed_addr #1

declare void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"*) local_unnamed_addr #1

declare %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLContextEGL15MakeCurrentImplEPNS_9GLSurfaceE(%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gl::GLContext::ScopedReleaseCurrent", align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %99

10:                                               ; preds = %2
  %11 = bitcast %"class.gl::GLContextEGL"* %0 to i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)***
  %12 = load i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)** %12, i64 2
  %14 = load i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.gl::GLContextEGL"* %0, %"class.gl::GLSurface"* %1) #12
  br i1 %15, label %99, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gl::GLContext::ScopedReleaseCurrent", %"class.gl::GLContext::ScopedReleaseCurrent"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  store i8 -86, i8* %17, align 1
  call void @_ZN2gl9GLContext20ScopedReleaseCurrentC1Ev(%"class.gl::GLContext::ScopedReleaseCurrent"* nonnull %3) #12
  %18 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %19 = and i8 %18, 25
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21, !prof !3

21:                                               ; preds = %16
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8** %4 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = bitcast i8** %5 to %"class.gl::GLSurface"**
  store %"class.gl::GLSurface"* %1, %"class.gl::GLSurface"** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8** nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %30

30:                                               ; preds = %16, %21
  %31 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %16 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), %21 ]
  %32 = phi i8* [ null, %16 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %21 ]
  %33 = phi i64 [ -6148914691236517206, %16 ], [ %29, %21 ]
  %34 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 5
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  %38 = call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #12
  %39 = icmp eq %"class.gl::GLContext"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %42 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %41, i64 0, i32 0
  %43 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %42) #12
  %44 = bitcast i8* %43 to %"class.gl::GLApi"**
  %45 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %44, align 8
  %46 = bitcast %"class.gl::GLApi"* %45 to void (%"class.gl::GLApi"*, i32, i32)***
  %47 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %47, i64 15
  %49 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %48, align 8
  call void %49(%"class.gl::GLApi"* %45, i32 36160, i32 0) #12
  br label %50

50:                                               ; preds = %37, %30, %40
  %51 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %52 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.gl::GLSurface"* %1 to i8* (%"class.gl::GLSurface"*)***
  %55 = load i8* (%"class.gl::GLSurface"*)**, i8* (%"class.gl::GLSurface"*)*** %54, align 8
  %56 = getelementptr inbounds i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %55, i64 9
  %57 = load i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %56, align 8
  %58 = call i8* %57(%"class.gl::GLSurface"* %1) #12
  %59 = load i8* (%"class.gl::GLSurface"*)**, i8* (%"class.gl::GLSurface"*)*** %54, align 8
  %60 = getelementptr inbounds i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %59, i64 9
  %61 = load i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %60, align 8
  %62 = call i8* %61(%"class.gl::GLSurface"* %1) #12
  %63 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.gl::EGLApi"* %51 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)***
  %66 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %66, i64 48
  %68 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %67, align 8
  %69 = call i32 %68(%"class.gl::EGLApi"* %51, i8* %53, i8* %58, i8* %62, i8* %64) #12
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %91, label %71

71:                                               ; preds = %50
  %72 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContext"*
  call void @_ZN2gl9GLContext9BindGLApiEv(%"class.gl::GLContext"* %72) #12
  %73 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContextReal"*
  %74 = bitcast %"class.gl::GLContextEGL"* %0 to void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)***
  %75 = load void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)** %75, i64 17
  %77 = load void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)** %76, align 8
  call void %77(%"class.gl::GLContextReal"* %73, %"class.gl::GLSurface"* %1) #12
  call void @_ZN2gl9GLContext25InitializeDynamicBindingsEv(%"class.gl::GLContext"* %72) #12
  %78 = bitcast %"class.gl::GLSurface"* %1 to i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)***
  %79 = load i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)**, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)** %79, i64 22
  %81 = load i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)** %80, align 8
  %82 = call zeroext i1 %81(%"class.gl::GLSurface"* %1, %"class.gl::GLContext"* %72) #12
  br i1 %82, label %90, label %83

83:                                               ; preds = %71
  %84 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %86) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 412, i32 2) #12
  %87 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %88 = bitcast %"class.std::__1::basic_ostringstream"* %87 to %"class.std::__1::basic_ostream"*
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i64 23) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %86) #12
  br label %91

90:                                               ; preds = %71
  call void @_ZN2gl9GLContext20ScopedReleaseCurrent6CancelEv(%"class.gl::GLContext::ScopedReleaseCurrent"* nonnull %3) #12
  br label %91

91:                                               ; preds = %85, %83, %50, %90
  %92 = phi i1 [ true, %90 ], [ false, %50 ], [ false, %83 ], [ false, %85 ]
  %93 = icmp eq i8* %32, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %91
  %95 = load i8, i8* %32, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %32, i8* %31, i64 %33) #12
  br label %98

98:                                               ; preds = %91, %94, %97
  call void @_ZN2gl9GLContext20ScopedReleaseCurrentD1Ev(%"class.gl::GLContext::ScopedReleaseCurrent"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  br label %99

99:                                               ; preds = %10, %2, %98
  %100 = phi i1 [ %92, %98 ], [ false, %2 ], [ true, %10 ]
  ret i1 %100
}

declare void @_ZN2gl9GLContext20ScopedReleaseCurrentC1Ev(%"class.gl::GLContext::ScopedReleaseCurrent"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8), i8*, i8** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #12
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247373054, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = bitcast i8** %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = bitcast i8** %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #12
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #12
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #12
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #12
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #12
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  ret i64 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #1

declare void @_ZN2gl9GLContext9BindGLApiEv(%"class.gl::GLContext"*) local_unnamed_addr #1

declare void @_ZN2gl9GLContext25InitializeDynamicBindingsEv(%"class.gl::GLContext"*) local_unnamed_addr #1

declare void @_ZN2gl9GLContext20ScopedReleaseCurrent6CancelEv(%"class.gl::GLContext::ScopedReleaseCurrent"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl9GLContext20ScopedReleaseCurrentD1Ev(%"class.gl::GLContext::ScopedReleaseCurrent"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl12GLContextEGL25SetUnbindFboOnMakeCurrentEv(%"class.gl::GLContextEGL"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGL14ReleaseCurrentEPNS_9GLSurfaceE(%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::GLContextEGL"* %0 to i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)***
  %4 = load i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)** %4, i64 2
  %6 = load i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContextEGL"*, %"class.gl::GLSurface"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.gl::GLContextEGL"* %0, %"class.gl::GLSurface"* %1) #12
  br i1 %7, label %8, label %39

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #12
  %16 = bitcast i8* %15 to %"class.gl::GLApi"**
  %17 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %18 = bitcast %"class.gl::GLApi"* %17 to void (%"class.gl::GLApi"*, i32, i32)***
  %19 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %19, i64 15
  %21 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %20, align 8
  tail call void %21(%"class.gl::GLApi"* %17, i32 36160, i32 0) #12
  br label %22

22:                                               ; preds = %8, %12
  %23 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContextReal"*
  %24 = bitcast %"class.gl::GLContextEGL"* %0 to void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)***
  %25 = load void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)** %25, i64 17
  %27 = load void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)** %26, align 8
  tail call void %27(%"class.gl::GLContextReal"* %23, %"class.gl::GLSurface"* null) #12
  %28 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %29 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.gl::EGLApi"* %28 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)***
  %32 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %32, i64 48
  %34 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i8*, i8*)** %33, align 8
  %35 = tail call i32 %34(%"class.gl::EGLApi"* %28, i8* %30, i8* null, i8* null, i8* null) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 6
  store i8 1, i8* %38, align 1
  br label %39

39:                                               ; preds = %22, %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLContextEGL9IsCurrentEPNS_9GLSurfaceE(%"class.gl::GLContextEGL"* nocapture readonly, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %10 = bitcast %"class.gl::EGLApi"* %9 to i8* (%"class.gl::EGLApi"*)***
  %11 = load i8* (%"class.gl::EGLApi"*)**, i8* (%"class.gl::EGLApi"*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %11, i64 30
  %13 = load i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %12, align 8
  %14 = tail call i8* %13(%"class.gl::EGLApi"* %9) #12
  %15 = icmp eq i8* %8, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %6
  %17 = icmp eq %"class.gl::GLSurface"* %1, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.gl::GLSurface"* %1 to i8* (%"class.gl::GLSurface"*)***
  %20 = load i8* (%"class.gl::GLSurface"*)**, i8* (%"class.gl::GLSurface"*)*** %19, align 8
  %21 = getelementptr inbounds i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %20, i64 9
  %22 = load i8* (%"class.gl::GLSurface"*)*, i8* (%"class.gl::GLSurface"*)** %21, align 8
  %23 = tail call i8* %22(%"class.gl::GLSurface"* nonnull %1) #12
  %24 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %25 = bitcast %"class.gl::EGLApi"* %24 to i8* (%"class.gl::EGLApi"*, i32)***
  %26 = load i8* (%"class.gl::EGLApi"*, i32)**, i8* (%"class.gl::EGLApi"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %26, i64 32
  %28 = load i8* (%"class.gl::EGLApi"*, i32)*, i8* (%"class.gl::EGLApi"*, i32)** %27, align 8
  %29 = tail call i8* %28(%"class.gl::EGLApi"* %24, i32 12377) #12
  %30 = icmp eq i8* %23, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %18, %16
  br label %32

32:                                               ; preds = %31, %6, %18, %2
  %33 = phi i1 [ false, %2 ], [ true, %31 ], [ false, %6 ], [ false, %18 ]
  ret i1 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl12GLContextEGL9GetHandleEv(%"class.gl::GLContextEGL"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl12GLContextEGL34CheckStickyGraphicsResetStatusImplEv(%"class.gl::GLContextEGL"* nocapture) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.gl::DriverGL"**
  %7 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL34IsCreateContextRobustnessSupportedEv() #12
  br i1 %12, label %13, label %36

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %7, i64 0, i32 1, i32 86
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %7, i64 0, i32 1, i32 68
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %7, i64 0, i32 1, i32 32
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %21, %17, %13
  %26 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %27 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %26, i64 0, i32 0
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #12
  %29 = bitcast i8* %28 to %"class.gl::GLApi"**
  %30 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %29, align 8
  %31 = bitcast %"class.gl::GLApi"* %30 to i32 (%"class.gl::GLApi"*)***
  %32 = load i32 (%"class.gl::GLApi"*)**, i32 (%"class.gl::GLApi"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.gl::GLApi"*)*, i32 (%"class.gl::GLApi"*)** %32, i64 186
  %34 = load i32 (%"class.gl::GLApi"*)*, i32 (%"class.gl::GLApi"*)** %33, align 8
  %35 = tail call i32 %34(%"class.gl::GLApi"* %30) #12
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %21, %25, %11, %1
  %37 = load i32, i32* %8, align 8
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGLD2Ev(%"class.gl::GLContextEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl12GLContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN2gl12GLContextEGL7DestroyEv(%"class.gl::GLContextEGL"* %0)
  %3 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContextReal"*
  tail call void @_ZN2gl13GLContextRealD2Ev(%"class.gl::GLContextReal"* %7) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl13GLContextRealD2Ev(%"class.gl::GLContextReal"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLContextEGLD0Ev(%"class.gl::GLContextEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl12GLContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN2gl12GLContextEGL7DestroyEv(%"class.gl::GLContextEGL"* %0) #12
  %3 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.gl::GLContextEGL", %"class.gl::GLContextEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = bitcast %"class.gl::GLContextEGL"* %0 to %"class.gl::GLContextReal"*
  tail call void @_ZN2gl13GLContextRealD2Ev(%"class.gl::GLContextReal"* %7) #12
  %8 = bitcast %"class.gl::GLContextEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2gl13GLContextReal21CreateGPUTimingClientEv() unnamed_addr

declare dereferenceable(24) %"class.base::internal::flat_tree"* @_ZN2gl13GLContextReal13GetExtensionsEv(%"class.gl::GLContextReal"*) unnamed_addr #1

declare void @_ZN2gl9GLContext23SetSafeToForceGpuSwitchEv(%"class.gl::GLContext"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv(%"class.gl::GLContext"*) unnamed_addr #1

declare void @_ZN2gl9GLContext12GetGLVersionEv(%"class.std::__1::basic_string"* sret, %"class.gl::GLContext"*) unnamed_addr #1

declare void @_ZN2gl9GLContext13GetGLRendererEv(%"class.std::__1::basic_string"* sret, %"class.gl::GLContext"*) unnamed_addr #1

declare void @_ZN2gl9GLContext28ForceReleaseVirtuallyCurrentEv(%"class.gl::GLContext"*) unnamed_addr #1

declare %"class.gl::GLApi"* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE(%"class.gl::GLContext"*, %"struct.gl::DriverGL"*) unnamed_addr #1

declare void @_ZN2gl13GLContextReal10SetCurrentEPNS_9GLSurfaceE(%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl13GLContextReal15ResetExtensionsEv(%"class.gl::GLContextReal"*) unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.80"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.gl::YUVToRGBConverter"*, %"class.gl::YUVToRGBConverter"** %10, align 8
  store %"class.gl::YUVToRGBConverter"* null, %"class.gl::YUVToRGBConverter"** %10, align 8
  %12 = icmp eq %"class.gl::YUVToRGBConverter"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN2gl17YUVToRGBConverterD1Ev(%"class.gl::YUVToRGBConverter"* nonnull %11) #12
  %14 = bitcast %"class.gl::YUVToRGBConverter"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.80"*, %"class.gfx::ColorSpace"* dereferenceable(68), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.107"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.80", %"class.std::__1::__tree.80"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.80", %"class.std::__1::__tree.80"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceltERKS0_(%"class.gfx::ColorSpace"* %1, %"class.gfx::ColorSpace"* dereferenceable(68) %15) #12
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceltERKS0_(%"class.gfx::ColorSpace"* %15, %"class.gfx::ColorSpace"* dereferenceable(68) %1) #12
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 112) #14, !noalias !4
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"** %48, align 8, !noalias !4
  %50 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %49, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %50, i64 68, i1 false) #12, !noalias !4
  %51 = getelementptr inbounds i8, i8* %46, i64 104
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8, !noalias !4
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree.80", %"class.std::__1::__tree.80"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree.80"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree.80", %"class.std::__1::__tree.80"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #12
  %71 = getelementptr inbounds %"class.std::__1::__tree.80", %"class.std::__1::__tree.80"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

declare zeroext i1 @_ZNK3gfx10ColorSpaceltERKS0_(%"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN2gl17YUVToRGBConverterC1ERKNS_13GLVersionInfoERKN3gfx10ColorSpaceE(%"class.gl::YUVToRGBConverter"*, %"struct.gl::GLVersionInfo"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl17YUVToRGBConverterD1Ev(%"class.gl::YUVToRGBConverter"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS4_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIN3gfx10ColorSpaceENS_10unique_ptrIN2gl17YUVToRGBConverterENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSM_IJEEEEEENS4_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_"}
