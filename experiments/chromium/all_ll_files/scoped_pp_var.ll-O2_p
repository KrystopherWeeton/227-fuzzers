; ModuleID = '../../ppapi/shared_impl/scoped_pp_var.cc'
source_filename = "../../ppapi/shared_impl/scoped_pp_var.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::ScopedPPVar" = type { %struct.PP_Var }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"struct.ppapi::ScopedPPVar::PassRef" = type { i8 }
%"class.ppapi::ScopedPPVarArray" = type { %struct.PP_Var*, i64 }
%"struct.ppapi::ScopedPPVarArray::PassPPBMemoryAllocatedArray" = type { i8 }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%struct.PPB_Memory_Dev_0_1 = type { i8* (i32)*, void (i8*)* }

@_ZN5ppapi11ScopedPPVarC1Ev = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVar"*), void (%"class.ppapi::ScopedPPVar"*)* @_ZN5ppapi11ScopedPPVarC2Ev
@_ZN5ppapi11ScopedPPVarC1ERK6PP_Var = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVar"*, %struct.PP_Var*), void (%"class.ppapi::ScopedPPVar"*, %struct.PP_Var*)* @_ZN5ppapi11ScopedPPVarC2ERK6PP_Var
@_ZN5ppapi11ScopedPPVarC1ERKNS0_7PassRefERK6PP_Var = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVar"*, %"struct.ppapi::ScopedPPVar::PassRef"*, %struct.PP_Var*), void (%"class.ppapi::ScopedPPVar"*, %"struct.ppapi::ScopedPPVar::PassRef"*, %struct.PP_Var*)* @_ZN5ppapi11ScopedPPVarC2ERKNS0_7PassRefERK6PP_Var
@_ZN5ppapi11ScopedPPVarC1ERKS0_ = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVar"*, %"class.ppapi::ScopedPPVar"*), void (%"class.ppapi::ScopedPPVar"*, %"class.ppapi::ScopedPPVar"*)* @_ZN5ppapi11ScopedPPVarC2ERKS0_
@_ZN5ppapi11ScopedPPVarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVar"*), void (%"class.ppapi::ScopedPPVar"*)* @_ZN5ppapi11ScopedPPVarD2Ev
@_ZN5ppapi16ScopedPPVarArrayC1ERKNS0_27PassPPBMemoryAllocatedArrayEP6PP_Varm = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVarArray"*, %"struct.ppapi::ScopedPPVarArray::PassPPBMemoryAllocatedArray"*, %struct.PP_Var*, i64), void (%"class.ppapi::ScopedPPVarArray"*, %"struct.ppapi::ScopedPPVarArray::PassPPBMemoryAllocatedArray"*, %struct.PP_Var*, i64)* @_ZN5ppapi16ScopedPPVarArrayC2ERKNS0_27PassPPBMemoryAllocatedArrayEP6PP_Varm
@_ZN5ppapi16ScopedPPVarArrayC1Em = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVarArray"*, i64), void (%"class.ppapi::ScopedPPVarArray"*, i64)* @_ZN5ppapi16ScopedPPVarArrayC2Em
@_ZN5ppapi16ScopedPPVarArrayD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPVarArray"*), void (%"class.ppapi::ScopedPPVarArray"*)* @_ZN5ppapi16ScopedPPVarArrayD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi11ScopedPPVarC2Ev(%"class.ppapi::ScopedPPVar"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ppapi::ScopedPPVar"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -6148914694099828736>, <2 x i64>* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ScopedPPVarC2ERK6PP_Var(%"class.ppapi::ScopedPPVar"*, %struct.PP_Var* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %0, i64 0, i32 0
  %4 = bitcast %"class.ppapi::ScopedPPVar"* %0 to i8*
  %5 = bitcast %struct.PP_Var* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 3
  %10 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::VarTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #5
  %12 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"* %11, %struct.PP_Var* dereferenceable(16) %3) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ScopedPPVarC2ERKNS0_7PassRefERK6PP_Var(%"class.ppapi::ScopedPPVar"* nocapture, %"struct.ppapi::ScopedPPVar::PassRef"* nocapture readnone dereferenceable(1), %struct.PP_Var* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.ppapi::ScopedPPVar"* %0 to i8*
  %5 = bitcast %struct.PP_Var* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ScopedPPVarC2ERKS0_(%"class.ppapi::ScopedPPVar"*, %"class.ppapi::ScopedPPVar"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %0, i64 0, i32 0
  %4 = bitcast %"class.ppapi::ScopedPPVar"* %0 to i8*
  %5 = bitcast %"class.ppapi::ScopedPPVar"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 3
  %10 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::VarTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #5
  %12 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"* %11, %struct.PP_Var* dereferenceable(16) %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ScopedPPVarD2Ev(%"class.ppapi::ScopedPPVar"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %0, i64 0, i32 0
  %3 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %4 = bitcast %"class.ppapi::PpapiGlobals"* %3 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %5 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, i64 3
  %7 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %6, align 8
  %8 = tail call %"class.ppapi::VarTracker"* %7(%"class.ppapi::PpapiGlobals"* %3) #5
  %9 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %8, %struct.PP_Var* dereferenceable(16) %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.ppapi::ScopedPPVar"* @_ZN5ppapi11ScopedPPVaraSERK6PP_Var(%"class.ppapi::ScopedPPVar"* returned, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %4 = bitcast %"class.ppapi::PpapiGlobals"* %3 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %5 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, i64 3
  %7 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %6, align 8
  %8 = tail call %"class.ppapi::VarTracker"* %7(%"class.ppapi::PpapiGlobals"* %3) #5
  %9 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"* %8, %struct.PP_Var* dereferenceable(16) %1) #5
  %10 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %0, i64 0, i32 0
  %11 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %12 = bitcast %"class.ppapi::PpapiGlobals"* %11 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %13 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %13, i64 3
  %15 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %14, align 8
  %16 = tail call %"class.ppapi::VarTracker"* %15(%"class.ppapi::PpapiGlobals"* %11) #5
  %17 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %16, %struct.PP_Var* dereferenceable(16) %10) #5
  %18 = bitcast %"class.ppapi::ScopedPPVar"* %0 to i8*
  %19 = bitcast %struct.PP_Var* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  ret %"class.ppapi::ScopedPPVar"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi11ScopedPPVar7ReleaseEv(%"class.ppapi::ScopedPPVar"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.ppapi::ScopedPPVar"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %union.PP_VarValue* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.ppapi::ScopedPPVar"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -6148914694099828736>, <2 x i64>* %7, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %3, 0
  %9 = insertvalue { i64, i64 } %8, i64 %6, 1
  ret { i64, i64 } %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi16ScopedPPVarArrayC2ERKNS0_27PassPPBMemoryAllocatedArrayEP6PP_Varm(%"class.ppapi::ScopedPPVarArray"* nocapture, %"struct.ppapi::ScopedPPVarArray::PassPPBMemoryAllocatedArray"* nocapture readnone dereferenceable(1), %struct.PP_Var*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 0
  store %struct.PP_Var* %2, %struct.PP_Var** %5, align 8
  %6 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 1
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPVarArrayC2Em(%"class.ppapi::ScopedPPVarArray"* nocapture, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %7 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %6, i64 0, i32 0
  %8 = load i8* (i32)*, i8* (i32)** %7, align 8
  %9 = trunc i64 %1 to i32
  %10 = shl i32 %9, 4
  %11 = tail call i8* %8(i32 %10) #5
  %12 = bitcast %"class.ppapi::ScopedPPVarArray"* %0 to i8**
  store i8* %11, i8** %12, align 8
  %13 = load i64, i64* %3, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %18, %2, %5
  ret void

18:                                               ; preds = %15, %18
  %19 = phi i64 [ 0, %15 ], [ %23, %18 ]
  %20 = load %struct.PP_Var*, %struct.PP_Var** %16, align 8
  %21 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %20, i64 %19
  %22 = bitcast %struct.PP_Var* %21 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -6148914694099828736>, <2 x i64>* %22, align 8
  %23 = add nuw i64 %19, 1
  %24 = load i64, i64* %3, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %18, label %17
}

declare %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPVarArrayD2Ev(%"class.ppapi::ScopedPPVarArray"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 0
  br label %9

7:                                                ; preds = %9
  %8 = icmp eq i64 %21, 0
  br i1 %8, label %29, label %23

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %20, %9 ]
  %11 = load %struct.PP_Var*, %struct.PP_Var** %6, align 8
  %12 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %11, i64 %10
  %13 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %14 = bitcast %"class.ppapi::PpapiGlobals"* %13 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %15 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %15, i64 3
  %17 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %16, align 8
  %18 = tail call %"class.ppapi::VarTracker"* %17(%"class.ppapi::PpapiGlobals"* %13) #5
  %19 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %18, %struct.PP_Var* dereferenceable(16) %12) #5
  %20 = add nuw i64 %10, 1
  %21 = load i64, i64* %2, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %9, label %7

23:                                               ; preds = %7
  %24 = tail call %struct.PPB_Memory_Dev_0_1* @_ZN5ppapi5thunk27GetPPB_Memory_Dev_0_1_ThunkEv() #5
  %25 = getelementptr inbounds %struct.PPB_Memory_Dev_0_1, %struct.PPB_Memory_Dev_0_1* %24, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = bitcast %"class.ppapi::ScopedPPVarArray"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void %26(i8* %28) #5
  br label %29

29:                                               ; preds = %1, %7, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.PP_Var* @_ZN5ppapi16ScopedPPVarArray7ReleaseERKNS0_27PassPPBMemoryAllocatedArrayE(%"class.ppapi::ScopedPPVarArray"* nocapture, %"struct.ppapi::ScopedPPVarArray::PassPPBMemoryAllocatedArray"* nocapture readnone dereferenceable(1)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 0
  %4 = load %struct.PP_Var*, %struct.PP_Var** %3, align 8
  %5 = bitcast %"class.ppapi::ScopedPPVarArray"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret %struct.PP_Var* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPVarArray3SetEmRKNS_11ScopedPPVarE(%"class.ppapi::ScopedPPVarArray"* nocapture readonly, i64, %"class.ppapi::ScopedPPVar"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %2, i64 0, i32 0
  %5 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %6 = bitcast %"class.ppapi::PpapiGlobals"* %5 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %7 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %7, i64 3
  %9 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, align 8
  %10 = tail call %"class.ppapi::VarTracker"* %9(%"class.ppapi::PpapiGlobals"* %5) #5
  %11 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"* %10, %struct.PP_Var* dereferenceable(16) %4) #5
  %12 = getelementptr inbounds %"class.ppapi::ScopedPPVarArray", %"class.ppapi::ScopedPPVarArray"* %0, i64 0, i32 0
  %13 = load %struct.PP_Var*, %struct.PP_Var** %12, align 8
  %14 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %13, i64 %1
  %15 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #5
  %16 = bitcast %"class.ppapi::PpapiGlobals"* %15 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %17 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %17, i64 3
  %19 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %18, align 8
  %20 = tail call %"class.ppapi::VarTracker"* %19(%"class.ppapi::PpapiGlobals"* %15) #5
  %21 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %20, %struct.PP_Var* dereferenceable(16) %14) #5
  %22 = load %struct.PP_Var*, %struct.PP_Var** %12, align 8
  %23 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %22, i64 %1
  %24 = bitcast %struct.PP_Var* %23 to i8*
  %25 = bitcast %"class.ppapi::ScopedPPVar"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  ret void
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #4

declare zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
