; ModuleID = '../../cc/layers/heads_up_display_layer.cc'
source_filename = "../../cc/layers/heads_up_display_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::HeadsUpDisplayLayer" = type { %"class.cc::Layer", %class.sk_sp.68, %"class.std::__1::vector.15", %"class.std::__1::unique_ptr.74" }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.42" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr", %class.scoped_refptr.92, %"class.std::__1::unique_ptr.93", i32, %"class.std::__1::unique_ptr.99", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", i32, %"class.std::__1::unique_ptr.117", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.0, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.159", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr, %"class.base::flat_map.309", %"class.base::internal::flat_tree.319", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.350", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.376", %"class.std::__1::unordered_map.384", %"class.std::__1::vector.408", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.416", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.437", %"class.std::__1::vector.443", %"class.base::flat_map.451", %"class.base::WeakPtrFactory.461" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.80", %class.scoped_refptr.88 }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.std::__1::unique_ptr.82"*, %"class.std::__1::unique_ptr.82"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::unique_ptr.82" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::unique_ptr.82"* }
%class.scoped_refptr.88 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.89" }>
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.91", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.69" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%class.scoped_refptr.92 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.88, %class.scoped_refptr.88 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.123", %"class.std::__1::set" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::unique_ptr.125"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i64 }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.142, %class.scoped_refptr.143, %class.scoped_refptr.88, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.144", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.142 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.143 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.150 }
%class.scoped_refptr.150 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.0 = type { %"class.cc::Layer"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.154" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.165", %"class.base::flat_map.165", %"class.base::flat_map.165", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.165" = type { %"class.base::internal::flat_tree.166" }
%"class.base::internal::flat_tree.166" = type { %"class.std::__1::vector.167" }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.std::__1::pair.169"*, %"struct.std::__1::pair.169"*, %"class.std::__1::__compressed_pair.170" }
%"struct.std::__1::pair.169" = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::pair.169"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.std::__1::vector.196" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.175", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.177" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { i32*, i32*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { i32* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.191" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.198" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.203", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.238" }
%"class.cc::PropertyTree.203" = type { i32 (...)**, %"class.std::__1::vector.204", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.214" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.27", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.22" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.15", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.14, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.14 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.206" }
%"class.base::internal::flat_tree.206" = type { %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { i32*, i32*, %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { i32* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.234", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { float }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"class.std::__1::unique_ptr.240"*, %"class.std::__1::unique_ptr.240"*, %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.243" }
%"class.cc::LayerTreeImpl" = type opaque
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::unique_ptr.240"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.257" }
%"class.cc::PropertyTree.257" = type { i32 (...)**, %"class.std::__1::vector.258", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.260" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.265", i32, %"class.base::flat_map.273", %"class.base::flat_map.283", %"class.base::WeakPtr.293" }
%"class.cc::PropertyTree.265" = type { i32 (...)**, %"class.std::__1::vector.266", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.268" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.273" = type { %"class.base::internal::flat_tree.274" }
%"class.base::internal::flat_tree.274" = type { %"class.std::__1::vector.275" }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"struct.std::__1::pair.277"*, %"struct.std::__1::pair.277"*, %"class.std::__1::__compressed_pair.278" }
%"struct.std::__1::pair.277" = type opaque
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::pair.277"* }
%"class.base::flat_map.283" = type { %"class.base::internal::flat_tree.284" }
%"class.base::internal::flat_tree.284" = type { %"class.std::__1::vector.285" }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"struct.std::__1::pair.287"*, %"struct.std::__1::pair.287"*, %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::pair.287" = type opaque
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::pair.287"* }
%"class.base::WeakPtr.293" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.294", %"class.std::__1::vector.301" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.296" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"class.std::__1::vector.303"*, %"class.std::__1::vector.303"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::vector.303" = type opaque
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::vector.303"* }
%class.scoped_refptr = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.base::flat_map.309" = type { %"class.base::internal::flat_tree.310" }
%"class.base::internal::flat_tree.310" = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.std::__1::pair.313"*, %"struct.std::__1::pair.313"*, %"class.std::__1::__compressed_pair.314" }
%"struct.std::__1::pair.313" = type opaque
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::pair.313"* }
%"class.base::internal::flat_tree.319" = type { %"class.std::__1::vector.320" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.327" }
%"class.std::__1::__hash_table.327" = type <{ %"class.std::__1::unique_ptr.328", %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.346", [4 x i8] }>
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330", %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::__hash_node_base.331"** }
%"struct.std::__1::__hash_node_base.331" = type { %"struct.std::__1::__hash_node_base.331"* }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::__bucket_list_deallocator.333" }
%"class.std::__1::__bucket_list_deallocator.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::__hash_node_base.331" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::unordered_map.350" = type { %"class.std::__1::__hash_table.351" }
%"class.std::__1::__hash_table.351" = type <{ %"class.std::__1::unique_ptr.352", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.355"** }
%"struct.std::__1::__hash_node_base.355" = type { %"struct.std::__1::__hash_node_base.355"* }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__bucket_list_deallocator.357" }
%"class.std::__1::__bucket_list_deallocator.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.355" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { %"struct.std::__1::pair.378"*, %"struct.std::__1::pair.378"*, %"class.std::__1::__compressed_pair.379" }
%"struct.std::__1::pair.378" = type opaque
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.std::__1::pair.378"* }
%"class.std::__1::unordered_map.384" = type { %"class.std::__1::__hash_table.385" }
%"class.std::__1::__hash_table.385" = type <{ %"class.std::__1::unique_ptr.386", %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.404", [4 x i8] }>
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388", %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.std::__1::__hash_node_base.389"** }
%"struct.std::__1::__hash_node_base.389" = type { %"struct.std::__1::__hash_node_base.389"* }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.std::__1::__bucket_list_deallocator.391" }
%"class.std::__1::__bucket_list_deallocator.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"struct.std::__1::__hash_node_base.389" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.410" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.base::OnceCallback"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.415" }
%"class.base::OnceCallback.415" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.422", %"class.std::__1::vector.429" }
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.424" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"*, %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.550", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.550" = type { %"class.absl::optional_internal::optional_data.551" }
%"class.absl::optional_internal::optional_data.551" = type { %"class.absl::optional_internal::optional_data_base.552" }
%"class.absl::optional_internal::optional_data_base.552" = type { %"class.absl::optional_internal::optional_data_dtor_base.553" }
%"class.absl::optional_internal::optional_data_dtor_base.553" = type { i8, %union.anon.554 }
%union.anon.554 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.std::__1::unique_ptr.431"* }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"class.std::__1::unique_ptr.445"*, %"class.std::__1::unique_ptr.445"*, %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::unique_ptr.445" = type opaque
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::unique_ptr.445"* }
%"class.base::flat_map.451" = type { %"class.base::internal::flat_tree.452" }
%"class.base::internal::flat_tree.452" = type { %"class.std::__1::vector.453" }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"struct.std::__1::pair.455"*, %"struct.std::__1::pair.455"*, %"class.std::__1::__compressed_pair.456" }
%"struct.std::__1::pair.455" = type opaque
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::pair.455"* }
%"class.base::WeakPtrFactory.461" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.0*, %class.scoped_refptr.0*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr.0* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.27", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.33" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.58" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i8**, i8**, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8** }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.60" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.sk_sp.68 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.69" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gfx::Rect"* }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.cc::WebVitalMetrics"* }
%"struct.cc::WebVitalMetrics" = type { i8, %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, double }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.465", i8, [7 x i8] }>
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.cc::Region"* }
%"class.cc::HeadsUpDisplayLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::ResourcePool::InUsePoolResource", %"class.std::__1::unique_ptr.491", %"class.viz::DrawQuad"*, %class.sk_sp.525, %class.sk_sp.68, %"class.std::__1::vector.15", float, %"class.gfx::Size", i32, %"class.absl::optional.526", %"struct.cc::MemoryHistory::Entry", i32, i32, %"class.std::__1::vector.531", %"class.std::__1::vector.531", %"class.std::__1::unique_ptr.74", %"class.base::TimeTicks" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.465", i8 }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.485" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.480", i64 }
%"class.util::IdType.480" = type { %"class.base::StrongAlias.481" }
%"class.base::StrongAlias.481" = type { i64 }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr.88, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.504", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.511" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.viz::ClientResourceProvider" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.494"*, i64 }
%"class.std::__1::unique_ptr.494" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback.507", %"class.base::RepeatingCallback.507", %"class.base::Location" }
%"class.base::RepeatingCallback.507" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.511" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.515", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.520", float, i8, [3 x i8] }>
%"class.absl::optional.515" = type { %"class.absl::optional_internal::optional_data.516" }
%"class.absl::optional_internal::optional_data.516" = type { %"class.absl::optional_internal::optional_data_base.517" }
%"class.absl::optional_internal::optional_data_base.517" = type { %"class.absl::optional_internal::optional_data_dtor_base.518" }
%"class.absl::optional_internal::optional_data_dtor_base.518" = type { i8, %union.anon.519 }
%union.anon.519 = type { %"class.gfx::Rect" }
%"class.absl::optional.520" = type { %"class.absl::optional_internal::optional_data.521" }
%"class.absl::optional_internal::optional_data.521" = type { %"class.absl::optional_internal::optional_data_base.522" }
%"class.absl::optional_internal::optional_data_base.522" = type { %"class.absl::optional_internal::optional_data_dtor_base.523" }
%"class.absl::optional_internal::optional_data_dtor_base.523" = type { i8, %union.anon.524 }
%union.anon.524 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%class.sk_sp.525 = type { %class.SkSurface* }
%class.SkSurface = type opaque
%"class.absl::optional.526" = type { %"class.absl::optional_internal::optional_data.527" }
%"class.absl::optional_internal::optional_data.527" = type { %"class.absl::optional_internal::optional_data_base.528" }
%"class.absl::optional_internal::optional_data_base.528" = type { %"class.absl::optional_internal::optional_data_dtor_base.529" }
%"class.absl::optional_internal::optional_data_dtor_base.529" = type { i8, %union.anon.530 }
%union.anon.530 = type { %"class.base::TimeDelta" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"*, %"class.std::__1::__compressed_pair.533" }
%"struct.cc::DebugRect" = type { i32, %"class.gfx::Rect", i32, i32 }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.cc::DebugRect"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.541" = type opaque
%class.sk_sp.542 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.543", [7 x i8] }>
%"struct.std::__1::atomic.543" = type { %"struct.std::__1::__atomic_base.544" }
%"struct.std::__1::__atomic_base.544" = type { %"struct.std::__1::__cxx_atomic_impl.545" }
%"struct.std::__1::__cxx_atomic_impl.545" = type { %"struct.std::__1::__cxx_atomic_base_impl.546" }
%"struct.std::__1::__cxx_atomic_base_impl.546" = type { i8 }
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback.547", i8, i8, i32 }
%"class.base::OnceCallback.547" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZTVN2cc19HeadsUpDisplayLayerE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::Layer"*, i32)* @_ZN2cc5Layer18SetBackgroundColorEj to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*)* @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.cc::Layer"*, float)* @_ZN2cc5Layer10SetOpacityEf to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer11HitTestableEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*, %"class.std::__1::vector.541"*)* @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%class.sk_sp.542*, %"class.cc::Layer"*)* @_ZNK2cc5Layer10GetPictureEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)* @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::HeadsUpDisplayLayer"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc19HeadsUpDisplayLayer15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::HeadsUpDisplayLayer"*, %"class.cc::LayerImpl"*)* @_ZN2cc19HeadsUpDisplayLayer16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer6UpdateEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv to i8*), i8* bitcast (void (%"class.cc::HeadsUpDisplayLayer"*)* @_ZN2cc19HeadsUpDisplayLayerD2Ev to i8*), i8* bitcast (void (%"class.cc::HeadsUpDisplayLayer"*)* @_ZN2cc19HeadsUpDisplayLayerD0Ev to i8*), i8* bitcast (i1 (%"class.cc::HeadsUpDisplayLayer"*)* @_ZNK2cc19HeadsUpDisplayLayer18HasDrawableContentEv to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"monospace\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [38 x i8] c"HeadsUpDisplayLayer::PushPropertiesTo\00", align 1

@_ZN2cc19HeadsUpDisplayLayerC1Ev = hidden unnamed_addr alias void (%"class.cc::HeadsUpDisplayLayer"*), void (%"class.cc::HeadsUpDisplayLayer"*)* @_ZN2cc19HeadsUpDisplayLayerC2Ev
@_ZN2cc19HeadsUpDisplayLayerD1Ev = hidden unnamed_addr alias void (%"class.cc::HeadsUpDisplayLayer"*), void (%"class.cc::HeadsUpDisplayLayer"*)* @_ZN2cc19HeadsUpDisplayLayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::HeadsUpDisplayLayer"* @_ZN2cc19HeadsUpDisplayLayer6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 272) #8
  %2 = bitcast i8* %1 to %"class.cc::HeadsUpDisplayLayer"*
  tail call void @_ZN2cc19HeadsUpDisplayLayerC2Ev(%"class.cc::HeadsUpDisplayLayer"* nonnull %2)
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %4) #9
  ret %"class.cc::HeadsUpDisplayLayer"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayerC2Ev(%"class.cc::HeadsUpDisplayLayer"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.68, align 8
  %3 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* %3) #9
  %4 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc19HeadsUpDisplayLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 1
  tail call void @_ZN10SkTypeface12MakeFromNameEPKc11SkFontStyle(%class.sk_sp.68* sret %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 328080) #9
  %6 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.sk_sp.68, %class.sk_sp.68* %5, i64 0, i32 0
  %8 = bitcast %"class.std::__1::vector.15"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  %9 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %10 = icmp eq %class.SkTypeface* %9, null
  br i1 %10, label %11, label %43

11:                                               ; preds = %1
  %12 = bitcast %class.sk_sp.68* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  call void @_ZN10SkTypeface12MakeFromNameEPKc11SkFontStyle(%class.sk_sp.68* nonnull sret %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 328380) #9
  %13 = getelementptr inbounds %class.sk_sp.68, %class.sk_sp.68* %2, i64 0, i32 0
  %14 = bitcast %class.sk_sp.68* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %13, align 8
  %16 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %17 = bitcast %class.sk_sp.68* %5 to i64*
  store i64 %15, i64* %17, align 8
  %18 = icmp eq %class.SkTypeface* %16, null
  br i1 %18, label %42, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkTypeface* %16 to %class.SkRefCntBase*
  %25 = bitcast %class.SkTypeface* %16 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  call void %28(%class.SkRefCntBase* nonnull %24) #9
  br label %29

29:                                               ; preds = %19, %23
  %30 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %31 = icmp eq %class.SkTypeface* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkTypeface* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkTypeface* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #9
  br label %42

42:                                               ; preds = %11, %29, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %43

43:                                               ; preds = %1, %42
  call void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"* %3, i1 zeroext true) #9
  %44 = bitcast %"class.cc::HeadsUpDisplayLayer"* %0 to i1 (%"class.cc::HeadsUpDisplayLayer"*)***
  %45 = load i1 (%"class.cc::HeadsUpDisplayLayer"*)**, i1 (%"class.cc::HeadsUpDisplayLayer"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.cc::HeadsUpDisplayLayer"*)*, i1 (%"class.cc::HeadsUpDisplayLayer"*)** %45, i64 16
  %47 = load i1 (%"class.cc::HeadsUpDisplayLayer"*)*, i1 (%"class.cc::HeadsUpDisplayLayer"*)** %46, align 8
  %48 = call zeroext i1 %47(%"class.cc::HeadsUpDisplayLayer"* %0) #9
  call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %3, i1 zeroext %48) #9
  ret void
}

declare void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN10SkTypeface12MakeFromNameEPKc11SkFontStyle(%class.sk_sp.68* sret, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayerD2Ev(%"class.cc::HeadsUpDisplayLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc19HeadsUpDisplayLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.cc::WebVitalMetrics"*, %"struct.cc::WebVitalMetrics"** %3, align 8
  store %"struct.cc::WebVitalMetrics"* null, %"struct.cc::WebVitalMetrics"** %3, align 8
  %5 = icmp eq %"struct.cc::WebVitalMetrics"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %9, align 8
  %11 = icmp eq %"class.gfx::Rect"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint %"class.gfx::Rect"* %10 to i64
  %14 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.gfx::Rect"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.gfx::Rect"* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 1, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #9
  br label %31

31:                                               ; preds = %17, %21, %25
  %32 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayerD0Ev(%"class.cc::HeadsUpDisplayLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc19HeadsUpDisplayLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.cc::WebVitalMetrics"*, %"struct.cc::WebVitalMetrics"** %3, align 8
  store %"struct.cc::WebVitalMetrics"* null, %"struct.cc::WebVitalMetrics"** %3, align 8
  %5 = icmp eq %"struct.cc::WebVitalMetrics"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %9, align 8
  %11 = icmp eq %"class.gfx::Rect"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint %"class.gfx::Rect"* %10 to i64
  %14 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.gfx::Rect"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.gfx::Rect"* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 1, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #9
  br label %31

31:                                               ; preds = %17, %21, %25
  %32 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %32) #9
  %33 = bitcast %"class.cc::HeadsUpDisplayLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayer21UpdateLocationAndSizeERKN3gfx4SizeEf(%"class.cc::HeadsUpDisplayLayer"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Size"*
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = fdiv float %8, %2
  %10 = fptosi float %9 to i32
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = fdiv float %13, %2
  %15 = fptosi float %14 to i32
  %16 = icmp sgt i32 %10, 0
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = bitcast i64* %4 to i32*
  %19 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  store i32 256, i32* %18, align 8
  store i32 256, i32* %19, align 4
  %20 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0, i32 4
  %22 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %21, align 8
  %23 = tail call dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeHost13GetDebugStateEv(%"class.cc::LayerTreeHost"* %22) #9
  %24 = tail call zeroext i1 @_ZNK2cc19LayerTreeDebugState14ShowDebugRectsEv(%"class.cc::LayerTreeDebugState"* %23) #9
  br i1 %24, label %25, label %33

25:                                               ; preds = %3
  %26 = select i1 %16, i32 %10, i32 0
  %27 = icmp sgt i32 %15, 0
  %28 = select i1 %27, i32 %15, i32 0
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 32
  %31 = zext i32 %26 to i64
  %32 = or i64 %30, %31
  store i64 %32, i64* %4, align 8
  br label %47

33:                                               ; preds = %3
  %34 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %21, align 8
  %35 = tail call dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeHost13GetDebugStateEv(%"class.cc::LayerTreeHost"* %34) #9
  %36 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %35, i64 0, i32 19
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %21, align 8
  %41 = tail call dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeHost13GetDebugStateEv(%"class.cc::LayerTreeHost"* %40) #9
  %42 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %41, i64 0, i32 20
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39, %33
  %46 = select i1 %16, i32 %10, i32 0
  store i32 %46, i32* %18, align 8
  store i32 512, i32* %19, align 4
  br label %47

47:                                               ; preds = %39, %45, %25
  call void @_ZN2cc5Layer9SetBoundsERKN3gfx4SizeE(%"class.cc::Layer"* %20, %"class.gfx::Size"* nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  ret void
}

declare dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeHost13GetDebugStateEv(%"class.cc::LayerTreeHost"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc19LayerTreeDebugState14ShowDebugRectsEv(%"class.cc::LayerTreeDebugState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2cc5Layer9SetBoundsERKN3gfx4SizeE(%"class.cc::Layer"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc19HeadsUpDisplayLayer18HasDrawableContentEv(%"class.cc::HeadsUpDisplayLayer"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LayerImpl"* @_ZN2cc19HeadsUpDisplayLayer15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::HeadsUpDisplayLayer"* nocapture readonly, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0, i32 5, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = tail call i8* @_Znwm(i64 840) #8
  %6 = bitcast i8* %5 to %"class.cc::HeadsUpDisplayLayerImpl"*
  tail call void @_ZN2cc23HeadsUpDisplayLayerImplC1EPNS_13LayerTreeImplEi(%"class.cc::HeadsUpDisplayLayerImpl"* nonnull %6, %"class.cc::LayerTreeImpl"* %1, i32 %4) #9
  %7 = bitcast i8* %5 to %"class.cc::LayerImpl"*
  ret %"class.cc::LayerImpl"* %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.15"* @_ZNK2cc19HeadsUpDisplayLayer16LayoutShiftRectsEv(%"class.cc::HeadsUpDisplayLayer"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2
  ret %"class.std::__1::vector.15"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayer19SetLayoutShiftRectsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEE(%"class.cc::HeadsUpDisplayLayer"*, %"class.std::__1::vector.15"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2
  %4 = icmp eq %"class.std::__1::vector.15"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.15"* %3, %"class.gfx::Rect"* %7, %"class.gfx::Rect"* %9) #9
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayer21UpdateWebVitalMetricsENSt3__110unique_ptrINS_15WebVitalMetricsENS1_14default_deleteIS3_EEEE(%"class.cc::HeadsUpDisplayLayer"* nocapture, %"struct.cc::WebVitalMetrics"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"struct.cc::WebVitalMetrics"* %1 to i64
  %4 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.cc::WebVitalMetrics"*, %"struct.cc::WebVitalMetrics"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.74"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"struct.cc::WebVitalMetrics"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %6, i64 0, i32 0
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19HeadsUpDisplayLayer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::HeadsUpDisplayLayer"*, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %class.sk_sp.68, align 8
  %5 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"* %5, %"class.cc::LayerImpl"* %1) #9
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !3

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %19 = bitcast %"class.cc::LayerImpl"* %1 to %"class.cc::HeadsUpDisplayLayerImpl"*
  %20 = getelementptr inbounds %class.sk_sp.68, %class.sk_sp.68* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 1, i32 0
  %22 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %23 = icmp eq %class.SkTypeface* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %15, %24
  store %class.SkTypeface* %22, %class.SkTypeface** %20, align 8
  call void @_ZN2cc23HeadsUpDisplayLayerImpl14SetHUDTypefaceE5sk_spI10SkTypefaceE(%"class.cc::HeadsUpDisplayLayerImpl"* %19, %class.sk_sp.68* nonnull %4) #9
  %28 = load %class.SkTypeface*, %class.SkTypeface** %20, align 8
  %29 = icmp eq %class.SkTypeface* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkTypeface* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkTypeface* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2
  call void @_ZN2cc23HeadsUpDisplayLayerImpl19SetLayoutShiftRectsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEE(%"class.cc::HeadsUpDisplayLayerImpl"* %19, %"class.std::__1::vector.15"* dereferenceable(24) %41) #9
  %42 = bitcast %"class.std::__1::vector.15"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast %"class.gfx::Rect"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.cc::HeadsUpDisplayLayer", %"class.cc::HeadsUpDisplayLayer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"struct.cc::WebVitalMetrics"*, %"struct.cc::WebVitalMetrics"** %46, align 8
  %48 = icmp eq %"struct.cc::WebVitalMetrics"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %47, i64 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %47, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.cc::WebVitalMetrics", %"struct.cc::WebVitalMetrics"* %47, i64 0, i32 4
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57, %49, %53
  store %"struct.cc::WebVitalMetrics"* null, %"struct.cc::WebVitalMetrics"** %46, align 8
  call void @_ZN2cc23HeadsUpDisplayLayerImpl18SetWebVitalMetricsENSt3__110unique_ptrINS_15WebVitalMetricsENS1_14default_deleteIS3_EEEE(%"class.cc::HeadsUpDisplayLayerImpl"* %19, %"struct.cc::WebVitalMetrics"* nonnull %47) #9
  br label %62

62:                                               ; preds = %57, %40, %61
  %63 = icmp eq i8* %17, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %17, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #9
  br label %68

68:                                               ; preds = %62, %64, %67
  ret void
}

declare void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"*, %"class.cc::LayerImpl"*) unnamed_addr #2

declare void @_ZN2cc23HeadsUpDisplayLayerImpl14SetHUDTypefaceE5sk_spI10SkTypefaceE(%"class.cc::HeadsUpDisplayLayerImpl"*, %class.sk_sp.68*) local_unnamed_addr #2

declare void @_ZN2cc23HeadsUpDisplayLayerImpl19SetLayoutShiftRectsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEE(%"class.cc::HeadsUpDisplayLayerImpl"*, %"class.std::__1::vector.15"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2cc23HeadsUpDisplayLayerImpl18SetWebVitalMetricsENSt3__110unique_ptrINS_15WebVitalMetricsENS1_14default_deleteIS3_EEEE(%"class.cc::HeadsUpDisplayLayerImpl"*, %"struct.cc::WebVitalMetrics"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer18SetBackgroundColorEj(%"class.cc::Layer"*, i32) unnamed_addr #2

declare void @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"*, float) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer11HitTestableEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.541"*) unnamed_addr #2

declare void @_ZNK2cc5Layer10GetPictureEv(%class.sk_sp.542* sret, %"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE(%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*) unnamed_addr #2

declare zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc23HeadsUpDisplayLayerImplC1EPNS_13LayerTreeImplEi(%"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::LayerTreeImpl"*, i32) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.15"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Rect"* %2 to i64
  %5 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Rect"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Rect"* %24, %"class.gfx::Rect"* %2
  %26 = ptrtoint %"class.gfx::Rect"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Rect"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Rect"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 %28
  store %"class.gfx::Rect"* %48, %"class.gfx::Rect"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  %55 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #10
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #8
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  %76 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Rect"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %72
  store %"class.gfx::Rect"* %79, %"class.gfx::Rect"** %8, align 8
  %80 = bitcast %"class.gfx::Rect"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Rect"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
