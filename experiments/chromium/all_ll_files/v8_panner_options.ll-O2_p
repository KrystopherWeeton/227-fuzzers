; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_panner_options.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_panner_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::PannerOptions" = type { %"class.blink::AudioNodeOptions", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, %"class.WTF::String", double, float, float, float, %"class.WTF::String", float, float, float, double, double }
%"class.blink::AudioNodeOptions" = type { %"class.blink::IDLDictionaryBase", i8, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Number" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"exponential\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"DistanceModelType\00", align 1
@_ZZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateEE12kValidValues_0 = internal constant [2 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [11 x i8] c"equalpower\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"HRTF\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"PanningModelType\00", align 1
@_ZZN5blinkL26eternalV8PannerOptionsKeysEPN2v87IsolateEE5kKeys = internal constant [14 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [15 x i8] c"coneInnerAngle\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"coneOuterAngle\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"coneOuterGain\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"distanceModel\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"maxDistance\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"orientationX\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"orientationY\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"orientationZ\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"panningModel\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"positionX\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"positionY\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"positionZ\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"refDistance\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"rolloffFactor\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 14, i8** getelementptr inbounds ([14 x i8*], [14 x i8*]* @_ZZN5blinkL26eternalV8PannerOptionsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::PannerOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = icmp eq %"class.v8::Value"* %1, null
  br i1 %14, label %1057, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::Value"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %36

20:                                               ; preds = %15
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %17, -4294967296
  %25 = zext i32 %23 to i64
  %26 = or i64 %24, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 67
  br i1 %30, label %31, label %36

31:                                               ; preds = %20
  %32 = add i64 %17, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = ashr i32 %34, 1
  switch i32 %35, label %36 [
    i32 5, label %1057
    i32 3, label %1057
  ]

36:                                               ; preds = %31, %20, %15
  %37 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %1057

39:                                               ; preds = %36
  %40 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %41 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 0
  tail call void @_ZN5blink18V8AudioNodeOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::AudioNodeOptions"* %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %1057

45:                                               ; preds = %39
  %46 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to %"class.blink::V8PerIsolateData"**
  %49 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %48, align 8
  %50 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %49, i8* bitcast ([14 x i8*]* @_ZZN5blinkL26eternalV8PannerOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %51 = extractvalue { i64, %"class.v8::Eternal"* } %50, 1
  %52 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #7
  %53 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %54 = bitcast %"class.v8::Eternal"* %51 to %"class.v8::Value"**
  %55 = load %"class.v8::Value"*, %"class.v8::Value"** %54, align 8
  %56 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %55) #7
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %45
  %59 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %60 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %61 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %61, i64 5
  %63 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %62, align 8
  call void %63(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %59) #7
  br label %1056

64:                                               ; preds = %45
  %65 = bitcast %"class.v8::Value"* %56 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 3
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %69, label %86

69:                                               ; preds = %64
  %70 = add i64 %66, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i64 %66, -4294967296
  %74 = zext i32 %72 to i64
  %75 = or i64 %73, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 67
  br i1 %79, label %80, label %86

80:                                               ; preds = %69
  %81 = add i64 %66, 23
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -2
  %85 = icmp eq i32 %84, 10
  br i1 %85, label %93, label %86

86:                                               ; preds = %69, %64, %80
  %87 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %56, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %88 = load i32, i32* %42, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %1056

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 13
  store double %87, double* %91, align 8
  %92 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 1
  store i8 1, i8* %92, align 8
  br label %93

93:                                               ; preds = %90, %80
  %94 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 1, i32 0
  %95 = bitcast %"class.v8::Name"** %94 to %"class.v8::Value"**
  %96 = load %"class.v8::Value"*, %"class.v8::Value"** %95, align 8
  %97 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %96) #7
  %98 = icmp eq %"class.v8::Value"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %101 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, i64 5
  %104 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %103, align 8
  call void %104(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %100) #7
  br label %1056

105:                                              ; preds = %93
  %106 = bitcast %"class.v8::Value"* %97 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %127

110:                                              ; preds = %105
  %111 = add i64 %107, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %107, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %127

121:                                              ; preds = %110
  %122 = add i64 %107, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, -2
  %126 = icmp eq i32 %125, 10
  br i1 %126, label %134, label %127

127:                                              ; preds = %110, %105, %121
  %128 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %97, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %129 = load i32, i32* %42, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %1056

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 14
  store double %128, double* %132, align 8
  %133 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 2
  store i8 1, i8* %133, align 1
  br label %134

134:                                              ; preds = %131, %121
  %135 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 2, i32 0
  %136 = bitcast %"class.v8::Name"** %135 to %"class.v8::Value"**
  %137 = load %"class.v8::Value"*, %"class.v8::Value"** %136, align 8
  %138 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %137) #7
  %139 = icmp eq %"class.v8::Value"* %138, null
  br i1 %139, label %140, label %146

140:                                              ; preds = %134
  %141 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %142 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %143 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %143, i64 5
  %145 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %144, align 8
  call void %145(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %141) #7
  br label %1056

146:                                              ; preds = %134
  %147 = bitcast %"class.v8::Value"* %138 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 1
  br i1 %150, label %151, label %168

151:                                              ; preds = %146
  %152 = add i64 %148, -1
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = and i64 %148, -4294967296
  %156 = zext i32 %154 to i64
  %157 = or i64 %155, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load i16, i16* %159, align 2
  %161 = icmp eq i16 %160, 67
  br i1 %161, label %162, label %168

162:                                              ; preds = %151
  %163 = add i64 %148, 23
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, -2
  %167 = icmp eq i32 %166, 10
  br i1 %167, label %175, label %168

168:                                              ; preds = %151, %146, %162
  %169 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %138, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %170 = load i32, i32* %42, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %1056

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 15
  store double %169, double* %173, align 8
  %174 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 3
  store i8 1, i8* %174, align 2
  br label %175

175:                                              ; preds = %172, %162
  %176 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 3, i32 0
  %177 = bitcast %"class.v8::Name"** %176 to %"class.v8::Value"**
  %178 = load %"class.v8::Value"*, %"class.v8::Value"** %177, align 8
  %179 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %178) #7
  %180 = icmp eq %"class.v8::Value"* %179, null
  br i1 %180, label %181, label %187

181:                                              ; preds = %175
  %182 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %183 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %184 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %184, i64 5
  %186 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %185, align 8
  call void %186(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %182) #7
  br label %1056

187:                                              ; preds = %175
  %188 = bitcast %"class.v8::Value"* %179 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, 3
  %191 = icmp eq i64 %190, 1
  br i1 %191, label %192, label %209

192:                                              ; preds = %187
  %193 = add i64 %189, -1
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = and i64 %189, -4294967296
  %197 = zext i32 %195 to i64
  %198 = or i64 %196, %197
  %199 = add i64 %198, 7
  %200 = inttoptr i64 %199 to i16*
  %201 = load i16, i16* %200, align 2
  %202 = icmp eq i16 %201, 67
  br i1 %202, label %203, label %209

203:                                              ; preds = %192
  %204 = add i64 %189, 23
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, -2
  %208 = icmp eq i32 %207, 10
  br i1 %208, label %431, label %209

209:                                              ; preds = %192, %187, %203
  %210 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %210) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 152, i1 false)
  %211 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %179, %"class.v8::Value"** %211, align 8
  %212 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %212, align 8
  %213 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %213, align 8
  %214 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %215 = bitcast %"class.std::__1::unique_ptr"* %214 to i64*
  store i64 0, i64* %215, align 8
  %216 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %8) #7
  br i1 %216, label %233, label %217

217:                                              ; preds = %209
  %218 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %219 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %219) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %218) #7
  %220 = load %"class.v8::Value"*, %"class.v8::Value"** %211, align 8
  %221 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %218) #7
  %222 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %220, %"class.v8::Context"* %221) #7
  %223 = ptrtoint %"class.v8::String"* %222 to i64
  %224 = bitcast %"class.blink::V8StringResource"* %8 to i64*
  store i64 %223, i64* %224, align 8
  %225 = icmp eq %"class.v8::String"* %222, null
  br i1 %225, label %227, label %226

226:                                              ; preds = %217
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %219) #7
  br label %233

227:                                              ; preds = %217
  %228 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %229 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %230 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %230, i64 5
  %232 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %231, align 8
  call void %232(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %228) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %219) #7
  br label %409

233:                                              ; preds = %209, %226
  %234 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #7
  %235 = load %"class.v8::Value"*, %"class.v8::Value"** %211, align 8
  %236 = icmp eq %"class.v8::Value"* %235, null
  br i1 %236, label %241, label %237, !prof !2

237:                                              ; preds = %233
  %238 = bitcast %"class.v8::Value"* %235 to %"class.v8::String"*
  %239 = load i32, i32* %212, align 8
  %240 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %238, i32 %239) #7
  br label %261

241:                                              ; preds = %233
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %261, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %261

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #7
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #7
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %261

261:                                              ; preds = %237, %241, %244, %259
  %262 = phi %"class.WTF::StringImpl"* [ %240, %237 ], [ null, %241 ], [ %242, %244 ], [ %242, %259 ]
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %262, %"class.WTF::StringImpl"** %263, align 8
  %264 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17) #7
  %265 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %9, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %261
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #7
  br label %282

282:                                              ; preds = %261, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #7
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #7
  br label %298

298:                                              ; preds = %282, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #7
  br i1 %265, label %299, label %409

299:                                              ; preds = %298
  %300 = load %"class.v8::Value"*, %"class.v8::Value"** %211, align 8
  %301 = icmp eq %"class.v8::Value"* %300, null
  br i1 %301, label %302, label %326, !prof !2

302:                                              ; preds = %299
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 16
  br label %351

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %324

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i33
  %316 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %315, i33 1) #7
  %317 = extractvalue { i33, i1 } %316, 1
  %318 = extractvalue { i33, i1 } %316, 0
  %319 = icmp slt i33 %318, 0
  %320 = or i1 %317, %319
  br i1 %320, label %321, label %322, !prof !2

321:                                              ; preds = %312
  call void @llvm.trap() #7
  unreachable

322:                                              ; preds = %312
  %323 = trunc i33 %318 to i32
  store i32 %323, i32* %313, align 4
  br label %324

324:                                              ; preds = %307, %322
  %325 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 16
  br label %332

326:                                              ; preds = %299
  %327 = bitcast %"class.v8::Value"* %300 to %"class.v8::String"*
  %328 = load i32, i32* %212, align 8
  %329 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %327, i32 %328) #7
  %330 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 16
  %331 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %331, label %351, label %332

332:                                              ; preds = %324, %326
  %333 = phi %"class.WTF::String"* [ %325, %324 ], [ %330, %326 ]
  %334 = phi %"class.WTF::StringImpl"* [ %303, %324 ], [ %329, %326 ]
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %351

339:                                              ; preds = %332
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = zext i32 %341 to i33
  %343 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %342, i33 1) #7
  %344 = extractvalue { i33, i1 } %343, 1
  %345 = extractvalue { i33, i1 } %343, 0
  %346 = icmp slt i33 %345, 0
  %347 = or i1 %344, %346
  br i1 %347, label %348, label %349, !prof !2

348:                                              ; preds = %339
  call void @llvm.trap() #7
  unreachable

349:                                              ; preds = %339
  %350 = trunc i33 %345 to i32
  store i32 %350, i32* %340, align 4
  br label %351

351:                                              ; preds = %305, %349, %332, %326
  %352 = phi i1 [ false, %349 ], [ false, %332 ], [ true, %326 ], [ true, %305 ]
  %353 = phi %"class.WTF::String"* [ %333, %349 ], [ %333, %332 ], [ %330, %326 ], [ %306, %305 ]
  %354 = phi %"class.WTF::StringImpl"* [ %334, %349 ], [ %334, %332 ], [ null, %326 ], [ null, %305 ]
  %355 = ptrtoint %"class.WTF::StringImpl"* %354 to i64
  %356 = bitcast %"class.WTF::String"* %353 to i64*
  %357 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %353, i64 0, i32 0, i32 0
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  store i64 %355, i64* %356, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %351
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #7
  br label %373

373:                                              ; preds = %351, %369, %372
  br i1 %352, label %387, label %374

374:                                              ; preds = %373
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #7
  br label %387

387:                                              ; preds = %373, %383, %386
  %388 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %389 = load i8*, i8** %388, align 8
  store i8* null, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %387
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %389) #7
  br label %392

392:                                              ; preds = %391, %387
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %392
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %393) #7
  br label %408

408:                                              ; preds = %392, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %210) #7
  br label %431

409:                                              ; preds = %227, %298
  %410 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8
  store i8* null, i8** %410, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %409
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %411) #7
  br label %414

414:                                              ; preds = %413, %409
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %430, label %417

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #7
  br label %430

430:                                              ; preds = %414, %426, %429
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %210) #7
  br label %1056

431:                                              ; preds = %408, %203
  %432 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 4, i32 0
  %433 = bitcast %"class.v8::Name"** %432 to %"class.v8::Value"**
  %434 = load %"class.v8::Value"*, %"class.v8::Value"** %433, align 8
  %435 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %434) #7
  %436 = icmp eq %"class.v8::Value"* %435, null
  br i1 %436, label %437, label %443

437:                                              ; preds = %431
  %438 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %439 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %440 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %439, align 8
  %441 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %440, i64 5
  %442 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %441, align 8
  call void %442(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %438) #7
  br label %1056

443:                                              ; preds = %431
  %444 = bitcast %"class.v8::Value"* %435 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = and i64 %445, 3
  %447 = icmp eq i64 %446, 1
  br i1 %447, label %448, label %465

448:                                              ; preds = %443
  %449 = add i64 %445, -1
  %450 = inttoptr i64 %449 to i32*
  %451 = load i32, i32* %450, align 4
  %452 = and i64 %445, -4294967296
  %453 = zext i32 %451 to i64
  %454 = or i64 %452, %453
  %455 = add i64 %454, 7
  %456 = inttoptr i64 %455 to i16*
  %457 = load i16, i16* %456, align 2
  %458 = icmp eq i16 %457, 67
  br i1 %458, label %459, label %465

459:                                              ; preds = %448
  %460 = add i64 %445, 23
  %461 = inttoptr i64 %460 to i32*
  %462 = load i32, i32* %461, align 4
  %463 = and i32 %462, -2
  %464 = icmp eq i32 %463, 10
  br i1 %464, label %472, label %465

465:                                              ; preds = %448, %443, %459
  %466 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %435, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %467 = load i32, i32* %42, align 8
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %1056

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 17
  store double %466, double* %470, align 8
  %471 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 4
  store i8 1, i8* %471, align 1
  br label %472

472:                                              ; preds = %469, %459
  %473 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 5, i32 0
  %474 = bitcast %"class.v8::Name"** %473 to %"class.v8::Value"**
  %475 = load %"class.v8::Value"*, %"class.v8::Value"** %474, align 8
  %476 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %475) #7
  %477 = icmp eq %"class.v8::Value"* %476, null
  br i1 %477, label %478, label %484

478:                                              ; preds = %472
  %479 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %480 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %481 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %480, align 8
  %482 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %481, i64 5
  %483 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %482, align 8
  call void %483(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %479) #7
  br label %1056

484:                                              ; preds = %472
  %485 = bitcast %"class.v8::Value"* %476 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = and i64 %486, 3
  %488 = icmp eq i64 %487, 1
  br i1 %488, label %489, label %506

489:                                              ; preds = %484
  %490 = add i64 %486, -1
  %491 = inttoptr i64 %490 to i32*
  %492 = load i32, i32* %491, align 4
  %493 = and i64 %486, -4294967296
  %494 = zext i32 %492 to i64
  %495 = or i64 %493, %494
  %496 = add i64 %495, 7
  %497 = inttoptr i64 %496 to i16*
  %498 = load i16, i16* %497, align 2
  %499 = icmp eq i16 %498, 67
  br i1 %499, label %500, label %506

500:                                              ; preds = %489
  %501 = add i64 %486, 23
  %502 = inttoptr i64 %501 to i32*
  %503 = load i32, i32* %502, align 4
  %504 = and i32 %503, -2
  %505 = icmp eq i32 %504, 10
  br i1 %505, label %513, label %506

506:                                              ; preds = %489, %484, %500
  %507 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %476, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %508 = load i32, i32* %42, align 8
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %1056

510:                                              ; preds = %506
  %511 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 18
  store float %507, float* %511, align 8
  %512 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 5
  store i8 1, i8* %512, align 4
  br label %513

513:                                              ; preds = %510, %500
  %514 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 6, i32 0
  %515 = bitcast %"class.v8::Name"** %514 to %"class.v8::Value"**
  %516 = load %"class.v8::Value"*, %"class.v8::Value"** %515, align 8
  %517 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %516) #7
  %518 = icmp eq %"class.v8::Value"* %517, null
  br i1 %518, label %519, label %525

519:                                              ; preds = %513
  %520 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %521 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %522 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %521, align 8
  %523 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %522, i64 5
  %524 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %523, align 8
  call void %524(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %520) #7
  br label %1056

525:                                              ; preds = %513
  %526 = bitcast %"class.v8::Value"* %517 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = and i64 %527, 3
  %529 = icmp eq i64 %528, 1
  br i1 %529, label %530, label %547

530:                                              ; preds = %525
  %531 = add i64 %527, -1
  %532 = inttoptr i64 %531 to i32*
  %533 = load i32, i32* %532, align 4
  %534 = and i64 %527, -4294967296
  %535 = zext i32 %533 to i64
  %536 = or i64 %534, %535
  %537 = add i64 %536, 7
  %538 = inttoptr i64 %537 to i16*
  %539 = load i16, i16* %538, align 2
  %540 = icmp eq i16 %539, 67
  br i1 %540, label %541, label %547

541:                                              ; preds = %530
  %542 = add i64 %527, 23
  %543 = inttoptr i64 %542 to i32*
  %544 = load i32, i32* %543, align 4
  %545 = and i32 %544, -2
  %546 = icmp eq i32 %545, 10
  br i1 %546, label %554, label %547

547:                                              ; preds = %530, %525, %541
  %548 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %517, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %549 = load i32, i32* %42, align 8
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %1056

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 19
  store float %548, float* %552, align 4
  %553 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 6
  store i8 1, i8* %553, align 1
  br label %554

554:                                              ; preds = %551, %541
  %555 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 7, i32 0
  %556 = bitcast %"class.v8::Name"** %555 to %"class.v8::Value"**
  %557 = load %"class.v8::Value"*, %"class.v8::Value"** %556, align 8
  %558 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %557) #7
  %559 = icmp eq %"class.v8::Value"* %558, null
  br i1 %559, label %560, label %566

560:                                              ; preds = %554
  %561 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %562 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %563 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %563, i64 5
  %565 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %564, align 8
  call void %565(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %561) #7
  br label %1056

566:                                              ; preds = %554
  %567 = bitcast %"class.v8::Value"* %558 to i64*
  %568 = load i64, i64* %567, align 8
  %569 = and i64 %568, 3
  %570 = icmp eq i64 %569, 1
  br i1 %570, label %571, label %588

571:                                              ; preds = %566
  %572 = add i64 %568, -1
  %573 = inttoptr i64 %572 to i32*
  %574 = load i32, i32* %573, align 4
  %575 = and i64 %568, -4294967296
  %576 = zext i32 %574 to i64
  %577 = or i64 %575, %576
  %578 = add i64 %577, 7
  %579 = inttoptr i64 %578 to i16*
  %580 = load i16, i16* %579, align 2
  %581 = icmp eq i16 %580, 67
  br i1 %581, label %582, label %588

582:                                              ; preds = %571
  %583 = add i64 %568, 23
  %584 = inttoptr i64 %583 to i32*
  %585 = load i32, i32* %584, align 4
  %586 = and i32 %585, -2
  %587 = icmp eq i32 %586, 10
  br i1 %587, label %595, label %588

588:                                              ; preds = %571, %566, %582
  %589 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %558, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %590 = load i32, i32* %42, align 8
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %1056

592:                                              ; preds = %588
  %593 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 20
  store float %589, float* %593, align 8
  %594 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 7
  store i8 1, i8* %594, align 2
  br label %595

595:                                              ; preds = %592, %582
  %596 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 8, i32 0
  %597 = bitcast %"class.v8::Name"** %596 to %"class.v8::Value"**
  %598 = load %"class.v8::Value"*, %"class.v8::Value"** %597, align 8
  %599 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %598) #7
  %600 = icmp eq %"class.v8::Value"* %599, null
  br i1 %600, label %601, label %607

601:                                              ; preds = %595
  %602 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %603 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %604 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %603, align 8
  %605 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %604, i64 5
  %606 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %605, align 8
  call void %606(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %602) #7
  br label %1056

607:                                              ; preds = %595
  %608 = bitcast %"class.v8::Value"* %599 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = and i64 %609, 3
  %611 = icmp eq i64 %610, 1
  br i1 %611, label %612, label %629

612:                                              ; preds = %607
  %613 = add i64 %609, -1
  %614 = inttoptr i64 %613 to i32*
  %615 = load i32, i32* %614, align 4
  %616 = and i64 %609, -4294967296
  %617 = zext i32 %615 to i64
  %618 = or i64 %616, %617
  %619 = add i64 %618, 7
  %620 = inttoptr i64 %619 to i16*
  %621 = load i16, i16* %620, align 2
  %622 = icmp eq i16 %621, 67
  br i1 %622, label %623, label %629

623:                                              ; preds = %612
  %624 = add i64 %609, 23
  %625 = inttoptr i64 %624 to i32*
  %626 = load i32, i32* %625, align 4
  %627 = and i32 %626, -2
  %628 = icmp eq i32 %627, 10
  br i1 %628, label %851, label %629

629:                                              ; preds = %612, %607, %623
  %630 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %630) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %630, i8 -86, i64 152, i1 false)
  %631 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %599, %"class.v8::Value"** %631, align 8
  %632 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %632, align 8
  %633 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %633, align 8
  %634 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %635 = bitcast %"class.std::__1::unique_ptr"* %634 to i64*
  store i64 0, i64* %635, align 8
  %636 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %11) #7
  br i1 %636, label %653, label %637

637:                                              ; preds = %629
  %638 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %639 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %639) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %639, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %638) #7
  %640 = load %"class.v8::Value"*, %"class.v8::Value"** %631, align 8
  %641 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %638) #7
  %642 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %640, %"class.v8::Context"* %641) #7
  %643 = ptrtoint %"class.v8::String"* %642 to i64
  %644 = bitcast %"class.blink::V8StringResource"* %11 to i64*
  store i64 %643, i64* %644, align 8
  %645 = icmp eq %"class.v8::String"* %642, null
  br i1 %645, label %647, label %646

646:                                              ; preds = %637
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %639) #7
  br label %653

647:                                              ; preds = %637
  %648 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %649 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %650 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %649, align 8
  %651 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %650, i64 5
  %652 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %651, align 8
  call void %652(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %648) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %639) #7
  br label %829

653:                                              ; preds = %629, %646
  %654 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %654) #7
  %655 = load %"class.v8::Value"*, %"class.v8::Value"** %631, align 8
  %656 = icmp eq %"class.v8::Value"* %655, null
  br i1 %656, label %661, label %657, !prof !2

657:                                              ; preds = %653
  %658 = bitcast %"class.v8::Value"* %655 to %"class.v8::String"*
  %659 = load i32, i32* %632, align 8
  %660 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %658, i32 %659) #7
  br label %681

661:                                              ; preds = %653
  %662 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %633, align 8
  %663 = icmp eq %"class.WTF::StringImpl"* %662, null
  br i1 %663, label %681, label %664

664:                                              ; preds = %661
  %665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %666 = load atomic i32, i32* %665 monotonic, align 4
  %667 = and i32 %666, 2
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %681

669:                                              ; preds = %664
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %662, i64 0, i32 0
  %671 = load i32, i32* %670, align 4
  %672 = zext i32 %671 to i33
  %673 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %672, i33 1) #7
  %674 = extractvalue { i33, i1 } %673, 1
  %675 = extractvalue { i33, i1 } %673, 0
  %676 = icmp slt i33 %675, 0
  %677 = or i1 %674, %676
  br i1 %677, label %678, label %679, !prof !2

678:                                              ; preds = %669
  call void @llvm.trap() #7
  unreachable

679:                                              ; preds = %669
  %680 = trunc i33 %675 to i32
  store i32 %680, i32* %670, align 4
  br label %681

681:                                              ; preds = %657, %661, %664, %679
  %682 = phi %"class.WTF::StringImpl"* [ %660, %657 ], [ null, %661 ], [ %662, %664 ], [ %662, %679 ]
  %683 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %682, %"class.WTF::StringImpl"** %683, align 8
  %684 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %684) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16) #7
  %685 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %686 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %686, align 8
  %688 = icmp eq %"class.WTF::StringImpl"* %687, null
  br i1 %688, label %702, label %689

689:                                              ; preds = %681
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = load atomic i32, i32* %690 monotonic, align 4
  %692 = and i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %687, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  br i1 %693, label %696, label %698

696:                                              ; preds = %689
  %697 = add i32 %695, -1
  store i32 %697, i32* %694, align 4
  br label %698

698:                                              ; preds = %696, %689
  %699 = phi i32 [ %697, %696 ], [ %695, %689 ]
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %702

701:                                              ; preds = %698
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %687) #7
  br label %702

702:                                              ; preds = %681, %698, %701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %684) #7
  %703 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  %704 = icmp eq %"class.WTF::StringImpl"* %703, null
  br i1 %704, label %718, label %705

705:                                              ; preds = %702
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %707 = load atomic i32, i32* %706 monotonic, align 4
  %708 = and i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 0
  %711 = load i32, i32* %710, align 4
  br i1 %709, label %712, label %714

712:                                              ; preds = %705
  %713 = add i32 %711, -1
  store i32 %713, i32* %710, align 4
  br label %714

714:                                              ; preds = %712, %705
  %715 = phi i32 [ %713, %712 ], [ %711, %705 ]
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %718

717:                                              ; preds = %714
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %703) #7
  br label %718

718:                                              ; preds = %702, %714, %717
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %654) #7
  br i1 %685, label %719, label %829

719:                                              ; preds = %718
  %720 = load %"class.v8::Value"*, %"class.v8::Value"** %631, align 8
  %721 = icmp eq %"class.v8::Value"* %720, null
  br i1 %721, label %722, label %746, !prof !2

722:                                              ; preds = %719
  %723 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %633, align 8
  %724 = icmp eq %"class.WTF::StringImpl"* %723, null
  br i1 %724, label %725, label %727

725:                                              ; preds = %722
  %726 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 21
  br label %771

727:                                              ; preds = %722
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %723, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = and i32 %729, 2
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %744

732:                                              ; preds = %727
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %723, i64 0, i32 0
  %734 = load i32, i32* %733, align 4
  %735 = zext i32 %734 to i33
  %736 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %735, i33 1) #7
  %737 = extractvalue { i33, i1 } %736, 1
  %738 = extractvalue { i33, i1 } %736, 0
  %739 = icmp slt i33 %738, 0
  %740 = or i1 %737, %739
  br i1 %740, label %741, label %742, !prof !2

741:                                              ; preds = %732
  call void @llvm.trap() #7
  unreachable

742:                                              ; preds = %732
  %743 = trunc i33 %738 to i32
  store i32 %743, i32* %733, align 4
  br label %744

744:                                              ; preds = %727, %742
  %745 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 21
  br label %752

746:                                              ; preds = %719
  %747 = bitcast %"class.v8::Value"* %720 to %"class.v8::String"*
  %748 = load i32, i32* %632, align 8
  %749 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %747, i32 %748) #7
  %750 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 21
  %751 = icmp eq %"class.WTF::StringImpl"* %749, null
  br i1 %751, label %771, label %752

752:                                              ; preds = %744, %746
  %753 = phi %"class.WTF::String"* [ %745, %744 ], [ %750, %746 ]
  %754 = phi %"class.WTF::StringImpl"* [ %723, %744 ], [ %749, %746 ]
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %756 = load atomic i32, i32* %755 monotonic, align 4
  %757 = and i32 %756, 2
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %771

759:                                              ; preds = %752
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  %762 = zext i32 %761 to i33
  %763 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %762, i33 1) #7
  %764 = extractvalue { i33, i1 } %763, 1
  %765 = extractvalue { i33, i1 } %763, 0
  %766 = icmp slt i33 %765, 0
  %767 = or i1 %764, %766
  br i1 %767, label %768, label %769, !prof !2

768:                                              ; preds = %759
  call void @llvm.trap() #7
  unreachable

769:                                              ; preds = %759
  %770 = trunc i33 %765 to i32
  store i32 %770, i32* %760, align 4
  br label %771

771:                                              ; preds = %725, %769, %752, %746
  %772 = phi i1 [ false, %769 ], [ false, %752 ], [ true, %746 ], [ true, %725 ]
  %773 = phi %"class.WTF::String"* [ %753, %769 ], [ %753, %752 ], [ %750, %746 ], [ %726, %725 ]
  %774 = phi %"class.WTF::StringImpl"* [ %754, %769 ], [ %754, %752 ], [ null, %746 ], [ null, %725 ]
  %775 = ptrtoint %"class.WTF::StringImpl"* %774 to i64
  %776 = bitcast %"class.WTF::String"* %773 to i64*
  %777 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %773, i64 0, i32 0, i32 0
  %778 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %777, align 8
  store i64 %775, i64* %776, align 8
  %779 = icmp eq %"class.WTF::StringImpl"* %778, null
  br i1 %779, label %793, label %780

780:                                              ; preds = %771
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %782 = load atomic i32, i32* %781 monotonic, align 4
  %783 = and i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  br i1 %784, label %787, label %789

787:                                              ; preds = %780
  %788 = add i32 %786, -1
  store i32 %788, i32* %785, align 4
  br label %789

789:                                              ; preds = %787, %780
  %790 = phi i32 [ %788, %787 ], [ %786, %780 ]
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %793

792:                                              ; preds = %789
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %778) #7
  br label %793

793:                                              ; preds = %771, %789, %792
  br i1 %772, label %807, label %794

794:                                              ; preds = %793
  %795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %796 = load atomic i32, i32* %795 monotonic, align 4
  %797 = and i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 0
  %800 = load i32, i32* %799, align 4
  br i1 %798, label %801, label %803

801:                                              ; preds = %794
  %802 = add i32 %800, -1
  store i32 %802, i32* %799, align 4
  br label %803

803:                                              ; preds = %801, %794
  %804 = phi i32 [ %802, %801 ], [ %800, %794 ]
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %806, label %807

806:                                              ; preds = %803
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %774) #7
  br label %807

807:                                              ; preds = %793, %803, %806
  %808 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %809 = load i8*, i8** %808, align 8
  store i8* null, i8** %808, align 8
  %810 = icmp eq i8* %809, null
  br i1 %810, label %812, label %811

811:                                              ; preds = %807
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %809) #7
  br label %812

812:                                              ; preds = %811, %807
  %813 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %633, align 8
  %814 = icmp eq %"class.WTF::StringImpl"* %813, null
  br i1 %814, label %828, label %815

815:                                              ; preds = %812
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %813, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %817 = load atomic i32, i32* %816 monotonic, align 4
  %818 = and i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %813, i64 0, i32 0
  %821 = load i32, i32* %820, align 4
  br i1 %819, label %822, label %824

822:                                              ; preds = %815
  %823 = add i32 %821, -1
  store i32 %823, i32* %820, align 4
  br label %824

824:                                              ; preds = %822, %815
  %825 = phi i32 [ %823, %822 ], [ %821, %815 ]
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %827, label %828

827:                                              ; preds = %824
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %813) #7
  br label %828

828:                                              ; preds = %812, %824, %827
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %630) #7
  br label %851

829:                                              ; preds = %647, %718
  %830 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %831 = load i8*, i8** %830, align 8
  store i8* null, i8** %830, align 8
  %832 = icmp eq i8* %831, null
  br i1 %832, label %834, label %833

833:                                              ; preds = %829
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %831) #7
  br label %834

834:                                              ; preds = %833, %829
  %835 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %633, align 8
  %836 = icmp eq %"class.WTF::StringImpl"* %835, null
  br i1 %836, label %850, label %837

837:                                              ; preds = %834
  %838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %835, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %839 = load atomic i32, i32* %838 monotonic, align 4
  %840 = and i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %835, i64 0, i32 0
  %843 = load i32, i32* %842, align 4
  br i1 %841, label %844, label %846

844:                                              ; preds = %837
  %845 = add i32 %843, -1
  store i32 %845, i32* %842, align 4
  br label %846

846:                                              ; preds = %844, %837
  %847 = phi i32 [ %845, %844 ], [ %843, %837 ]
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %850

849:                                              ; preds = %846
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %835) #7
  br label %850

850:                                              ; preds = %834, %846, %849
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %630) #7
  br label %1056

851:                                              ; preds = %828, %623
  %852 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 9, i32 0
  %853 = bitcast %"class.v8::Name"** %852 to %"class.v8::Value"**
  %854 = load %"class.v8::Value"*, %"class.v8::Value"** %853, align 8
  %855 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %854) #7
  %856 = icmp eq %"class.v8::Value"* %855, null
  br i1 %856, label %857, label %863

857:                                              ; preds = %851
  %858 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %859 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %860 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %859, align 8
  %861 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %860, i64 5
  %862 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %861, align 8
  call void %862(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %858) #7
  br label %1056

863:                                              ; preds = %851
  %864 = bitcast %"class.v8::Value"* %855 to i64*
  %865 = load i64, i64* %864, align 8
  %866 = and i64 %865, 3
  %867 = icmp eq i64 %866, 1
  br i1 %867, label %868, label %885

868:                                              ; preds = %863
  %869 = add i64 %865, -1
  %870 = inttoptr i64 %869 to i32*
  %871 = load i32, i32* %870, align 4
  %872 = and i64 %865, -4294967296
  %873 = zext i32 %871 to i64
  %874 = or i64 %872, %873
  %875 = add i64 %874, 7
  %876 = inttoptr i64 %875 to i16*
  %877 = load i16, i16* %876, align 2
  %878 = icmp eq i16 %877, 67
  br i1 %878, label %879, label %885

879:                                              ; preds = %868
  %880 = add i64 %865, 23
  %881 = inttoptr i64 %880 to i32*
  %882 = load i32, i32* %881, align 4
  %883 = and i32 %882, -2
  %884 = icmp eq i32 %883, 10
  br i1 %884, label %892, label %885

885:                                              ; preds = %868, %863, %879
  %886 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %855, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %887 = load i32, i32* %42, align 8
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %1056

889:                                              ; preds = %885
  %890 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 22
  store float %886, float* %890, align 8
  %891 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 8
  store i8 1, i8* %891, align 1
  br label %892

892:                                              ; preds = %889, %879
  %893 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 10, i32 0
  %894 = bitcast %"class.v8::Name"** %893 to %"class.v8::Value"**
  %895 = load %"class.v8::Value"*, %"class.v8::Value"** %894, align 8
  %896 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %895) #7
  %897 = icmp eq %"class.v8::Value"* %896, null
  br i1 %897, label %898, label %904

898:                                              ; preds = %892
  %899 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %900 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %901 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %900, align 8
  %902 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %901, i64 5
  %903 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %902, align 8
  call void %903(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %899) #7
  br label %1056

904:                                              ; preds = %892
  %905 = bitcast %"class.v8::Value"* %896 to i64*
  %906 = load i64, i64* %905, align 8
  %907 = and i64 %906, 3
  %908 = icmp eq i64 %907, 1
  br i1 %908, label %909, label %926

909:                                              ; preds = %904
  %910 = add i64 %906, -1
  %911 = inttoptr i64 %910 to i32*
  %912 = load i32, i32* %911, align 4
  %913 = and i64 %906, -4294967296
  %914 = zext i32 %912 to i64
  %915 = or i64 %913, %914
  %916 = add i64 %915, 7
  %917 = inttoptr i64 %916 to i16*
  %918 = load i16, i16* %917, align 2
  %919 = icmp eq i16 %918, 67
  br i1 %919, label %920, label %926

920:                                              ; preds = %909
  %921 = add i64 %906, 23
  %922 = inttoptr i64 %921 to i32*
  %923 = load i32, i32* %922, align 4
  %924 = and i32 %923, -2
  %925 = icmp eq i32 %924, 10
  br i1 %925, label %933, label %926

926:                                              ; preds = %909, %904, %920
  %927 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %896, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %928 = load i32, i32* %42, align 8
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %930, label %1056

930:                                              ; preds = %926
  %931 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 23
  store float %927, float* %931, align 4
  %932 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 9
  store i8 1, i8* %932, align 8
  br label %933

933:                                              ; preds = %930, %920
  %934 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 11, i32 0
  %935 = bitcast %"class.v8::Name"** %934 to %"class.v8::Value"**
  %936 = load %"class.v8::Value"*, %"class.v8::Value"** %935, align 8
  %937 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %936) #7
  %938 = icmp eq %"class.v8::Value"* %937, null
  br i1 %938, label %939, label %945

939:                                              ; preds = %933
  %940 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %941 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %942 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %941, align 8
  %943 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %942, i64 5
  %944 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %943, align 8
  call void %944(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %940) #7
  br label %1056

945:                                              ; preds = %933
  %946 = bitcast %"class.v8::Value"* %937 to i64*
  %947 = load i64, i64* %946, align 8
  %948 = and i64 %947, 3
  %949 = icmp eq i64 %948, 1
  br i1 %949, label %950, label %967

950:                                              ; preds = %945
  %951 = add i64 %947, -1
  %952 = inttoptr i64 %951 to i32*
  %953 = load i32, i32* %952, align 4
  %954 = and i64 %947, -4294967296
  %955 = zext i32 %953 to i64
  %956 = or i64 %954, %955
  %957 = add i64 %956, 7
  %958 = inttoptr i64 %957 to i16*
  %959 = load i16, i16* %958, align 2
  %960 = icmp eq i16 %959, 67
  br i1 %960, label %961, label %967

961:                                              ; preds = %950
  %962 = add i64 %947, 23
  %963 = inttoptr i64 %962 to i32*
  %964 = load i32, i32* %963, align 4
  %965 = and i32 %964, -2
  %966 = icmp eq i32 %965, 10
  br i1 %966, label %974, label %967

967:                                              ; preds = %950, %945, %961
  %968 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %937, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %969 = load i32, i32* %42, align 8
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %971, label %1056

971:                                              ; preds = %967
  %972 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 24
  store float %968, float* %972, align 8
  %973 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 10
  store i8 1, i8* %973, align 1
  br label %974

974:                                              ; preds = %971, %961
  %975 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 12, i32 0
  %976 = bitcast %"class.v8::Name"** %975 to %"class.v8::Value"**
  %977 = load %"class.v8::Value"*, %"class.v8::Value"** %976, align 8
  %978 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %977) #7
  %979 = icmp eq %"class.v8::Value"* %978, null
  br i1 %979, label %980, label %986

980:                                              ; preds = %974
  %981 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %982 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %983 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %982, align 8
  %984 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %983, i64 5
  %985 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %984, align 8
  call void %985(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %981) #7
  br label %1056

986:                                              ; preds = %974
  %987 = bitcast %"class.v8::Value"* %978 to i64*
  %988 = load i64, i64* %987, align 8
  %989 = and i64 %988, 3
  %990 = icmp eq i64 %989, 1
  br i1 %990, label %991, label %1008

991:                                              ; preds = %986
  %992 = add i64 %988, -1
  %993 = inttoptr i64 %992 to i32*
  %994 = load i32, i32* %993, align 4
  %995 = and i64 %988, -4294967296
  %996 = zext i32 %994 to i64
  %997 = or i64 %995, %996
  %998 = add i64 %997, 7
  %999 = inttoptr i64 %998 to i16*
  %1000 = load i16, i16* %999, align 2
  %1001 = icmp eq i16 %1000, 67
  br i1 %1001, label %1002, label %1008

1002:                                             ; preds = %991
  %1003 = add i64 %988, 23
  %1004 = inttoptr i64 %1003 to i32*
  %1005 = load i32, i32* %1004, align 4
  %1006 = and i32 %1005, -2
  %1007 = icmp eq i32 %1006, 10
  br i1 %1007, label %1015, label %1008

1008:                                             ; preds = %991, %986, %1002
  %1009 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %978, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1010 = load i32, i32* %42, align 8
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1056

1012:                                             ; preds = %1008
  %1013 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 25
  store double %1009, double* %1013, align 8
  %1014 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 11
  store i8 1, i8* %1014, align 2
  br label %1015

1015:                                             ; preds = %1012, %1002
  %1016 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %51, i64 13, i32 0
  %1017 = bitcast %"class.v8::Name"** %1016 to %"class.v8::Value"**
  %1018 = load %"class.v8::Value"*, %"class.v8::Value"** %1017, align 8
  %1019 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %53, %"class.v8::Value"* %1018) #7
  %1020 = icmp eq %"class.v8::Value"* %1019, null
  br i1 %1020, label %1021, label %1027

1021:                                             ; preds = %1015
  %1022 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %1023 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1024 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1023, align 8
  %1025 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1024, i64 5
  %1026 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1025, align 8
  call void %1026(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1022) #7
  br label %1056

1027:                                             ; preds = %1015
  %1028 = bitcast %"class.v8::Value"* %1019 to i64*
  %1029 = load i64, i64* %1028, align 8
  %1030 = and i64 %1029, 3
  %1031 = icmp eq i64 %1030, 1
  br i1 %1031, label %1032, label %1049

1032:                                             ; preds = %1027
  %1033 = add i64 %1029, -1
  %1034 = inttoptr i64 %1033 to i32*
  %1035 = load i32, i32* %1034, align 4
  %1036 = and i64 %1029, -4294967296
  %1037 = zext i32 %1035 to i64
  %1038 = or i64 %1036, %1037
  %1039 = add i64 %1038, 7
  %1040 = inttoptr i64 %1039 to i16*
  %1041 = load i16, i16* %1040, align 2
  %1042 = icmp eq i16 %1041, 67
  br i1 %1042, label %1043, label %1049

1043:                                             ; preds = %1032
  %1044 = add i64 %1029, 23
  %1045 = inttoptr i64 %1044 to i32*
  %1046 = load i32, i32* %1045, align 4
  %1047 = and i32 %1046, -2
  %1048 = icmp eq i32 %1047, 10
  br i1 %1048, label %1056, label %1049

1049:                                             ; preds = %1032, %1027, %1043
  %1050 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1019, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1051 = load i32, i32* %42, align 8
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1053, label %1056

1053:                                             ; preds = %1049
  %1054 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 26
  store double %1050, double* %1054, align 8
  %1055 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %2, i64 0, i32 12
  store i8 1, i8* %1055, align 1
  br label %1056

1056:                                             ; preds = %1049, %1008, %967, %926, %885, %588, %547, %506, %465, %168, %127, %86, %99, %181, %430, %478, %560, %857, %939, %1021, %1053, %1043, %980, %898, %850, %601, %519, %437, %140, %58
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #7
  br label %1057

1057:                                             ; preds = %39, %31, %31, %4, %1056, %38
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink18V8AudioNodeOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::AudioNodeOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink13PannerOptions8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::PannerOptions"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink17toV8PannerOptionsEPKNS_13PannerOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::PannerOptions"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17toV8PannerOptionsEPKNS_13PannerOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::PannerOptions"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink20toV8AudioNodeOptionsEPKNS_16AudioNodeOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::AudioNodeOptions"* %7, %"class.v8::Object"* %1, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br i1 %8, label %9, label %294

9:                                                ; preds = %4
  %10 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %11 = add i64 %10, 8
  %12 = inttoptr i64 %11 to %"class.blink::V8PerIsolateData"**
  %13 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %12, align 8
  %14 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %13, i8* bitcast ([14 x i8*]* @_ZZN5blinkL26eternalV8PannerOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %15 = extractvalue { i64, %"class.v8::Eternal"* } %14, 1
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %17 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 13
  %22 = load double, double* %21, align 8
  br label %23

23:                                               ; preds = %9, %20
  %24 = phi double [ %22, %20 ], [ 3.600000e+02, %9 ]
  %25 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %24) #7
  %26 = bitcast %"class.v8::Number"* %25 to %"class.v8::Value"*
  %27 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 0, i32 0
  %28 = load %"class.v8::Name"*, %"class.v8::Name"** %27, align 8
  %29 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %28, %"class.v8::Value"* %26) #7
  %30 = trunc i16 %29 to i8
  %31 = icmp ne i8 %30, 0
  %32 = icmp ugt i16 %29, 255
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %294

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 2
  %36 = load i8, i8* %35, align 1, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 14
  %40 = load double, double* %39, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi double [ %40, %38 ], [ 3.600000e+02, %34 ]
  %43 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %42) #7
  %44 = bitcast %"class.v8::Number"* %43 to %"class.v8::Value"*
  %45 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 1, i32 0
  %46 = load %"class.v8::Name"*, %"class.v8::Name"** %45, align 8
  %47 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %46, %"class.v8::Value"* %44) #7
  %48 = trunc i16 %47 to i8
  %49 = icmp ne i8 %48, 0
  %50 = icmp ugt i16 %47, 255
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %294

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 3
  %54 = load i8, i8* %53, align 2, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 15
  %58 = load double, double* %57, align 8
  br label %59

59:                                               ; preds = %52, %56
  %60 = phi double [ %58, %56 ], [ 0.000000e+00, %52 ]
  %61 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %60) #7
  %62 = bitcast %"class.v8::Number"* %61 to %"class.v8::Value"*
  %63 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 2, i32 0
  %64 = load %"class.v8::Name"*, %"class.v8::Name"** %63, align 8
  %65 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %64, %"class.v8::Value"* %62) #7
  %66 = trunc i16 %65 to i8
  %67 = icmp ne i8 %66, 0
  %68 = icmp ugt i16 %65, 255
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %294

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 16, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %81 = bitcast i8** %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %78, i32* %82, align 8
  %83 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #7
  br label %88

84:                                               ; preds = %70
  %85 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 7) #7
  %86 = icmp eq %"class.v8::String"* %85, null
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %84
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %88

88:                                               ; preds = %87, %84, %74
  %89 = phi %"class.v8::String"* [ %83, %74 ], [ %85, %84 ], [ null, %87 ]
  %90 = bitcast %"class.v8::String"* %89 to %"class.v8::Value"*
  %91 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 3, i32 0
  %92 = load %"class.v8::Name"*, %"class.v8::Name"** %91, align 8
  %93 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %92, %"class.v8::Value"* %90) #7
  %94 = trunc i16 %93 to i8
  %95 = icmp ne i8 %94, 0
  %96 = icmp ugt i16 %93, 255
  %97 = and i1 %96, %95
  br i1 %97, label %98, label %294

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !range !3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 17
  %104 = load double, double* %103, align 8
  br label %105

105:                                              ; preds = %98, %102
  %106 = phi double [ %104, %102 ], [ 1.000000e+04, %98 ]
  %107 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %106) #7
  %108 = bitcast %"class.v8::Number"* %107 to %"class.v8::Value"*
  %109 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 4, i32 0
  %110 = load %"class.v8::Name"*, %"class.v8::Name"** %109, align 8
  %111 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %110, %"class.v8::Value"* %108) #7
  %112 = trunc i16 %111 to i8
  %113 = icmp ne i8 %112, 0
  %114 = icmp ugt i16 %111, 255
  %115 = and i1 %114, %113
  br i1 %115, label %116, label %294

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 5
  %118 = load i8, i8* %117, align 4, !range !3
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 18
  %122 = load float, float* %121, align 8
  %123 = fpext float %122 to double
  br label %124

124:                                              ; preds = %116, %120
  %125 = phi double [ %123, %120 ], [ 1.000000e+00, %116 ]
  %126 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %125) #7
  %127 = bitcast %"class.v8::Number"* %126 to %"class.v8::Value"*
  %128 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 5, i32 0
  %129 = load %"class.v8::Name"*, %"class.v8::Name"** %128, align 8
  %130 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %129, %"class.v8::Value"* %127) #7
  %131 = trunc i16 %130 to i8
  %132 = icmp ne i8 %131, 0
  %133 = icmp ugt i16 %130, 255
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %294

135:                                              ; preds = %124
  %136 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 6
  %137 = load i8, i8* %136, align 1, !range !3
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 19
  %141 = load float, float* %140, align 4
  %142 = fpext float %141 to double
  br label %143

143:                                              ; preds = %135, %139
  %144 = phi double [ %142, %139 ], [ 0.000000e+00, %135 ]
  %145 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %144) #7
  %146 = bitcast %"class.v8::Number"* %145 to %"class.v8::Value"*
  %147 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 6, i32 0
  %148 = load %"class.v8::Name"*, %"class.v8::Name"** %147, align 8
  %149 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %148, %"class.v8::Value"* %146) #7
  %150 = trunc i16 %149 to i8
  %151 = icmp ne i8 %150, 0
  %152 = icmp ugt i16 %149, 255
  %153 = and i1 %152, %151
  br i1 %153, label %154, label %294

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 7
  %156 = load i8, i8* %155, align 2, !range !3
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 20
  %160 = load float, float* %159, align 8
  %161 = fpext float %160 to double
  br label %162

162:                                              ; preds = %154, %158
  %163 = phi double [ %161, %158 ], [ 0.000000e+00, %154 ]
  %164 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %163) #7
  %165 = bitcast %"class.v8::Number"* %164 to %"class.v8::Value"*
  %166 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 7, i32 0
  %167 = load %"class.v8::Name"*, %"class.v8::Name"** %166, align 8
  %168 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %167, %"class.v8::Value"* %165) #7
  %169 = trunc i16 %168 to i8
  %170 = icmp ne i8 %169, 0
  %171 = icmp ugt i16 %168, 255
  %172 = and i1 %171, %170
  br i1 %172, label %173, label %294

173:                                              ; preds = %162
  %174 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 21, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %187, label %177

177:                                              ; preds = %173
  %178 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #7
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 1
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %184 = bitcast i8** %183 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %181, i32* %185, align 8
  %186 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #7
  br label %191

187:                                              ; preds = %173
  %188 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 10) #7
  %189 = icmp eq %"class.v8::String"* %188, null
  br i1 %189, label %190, label %191, !prof !2

190:                                              ; preds = %187
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %191

191:                                              ; preds = %190, %187, %177
  %192 = phi %"class.v8::String"* [ %186, %177 ], [ %188, %187 ], [ null, %190 ]
  %193 = bitcast %"class.v8::String"* %192 to %"class.v8::Value"*
  %194 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 8, i32 0
  %195 = load %"class.v8::Name"*, %"class.v8::Name"** %194, align 8
  %196 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %195, %"class.v8::Value"* %193) #7
  %197 = trunc i16 %196 to i8
  %198 = icmp ne i8 %197, 0
  %199 = icmp ugt i16 %196, 255
  %200 = and i1 %199, %198
  br i1 %200, label %201, label %294

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 8
  %203 = load i8, i8* %202, align 1, !range !3
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %209, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 22
  %207 = load float, float* %206, align 8
  %208 = fpext float %207 to double
  br label %209

209:                                              ; preds = %201, %205
  %210 = phi double [ %208, %205 ], [ 0.000000e+00, %201 ]
  %211 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %210) #7
  %212 = bitcast %"class.v8::Number"* %211 to %"class.v8::Value"*
  %213 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 9, i32 0
  %214 = load %"class.v8::Name"*, %"class.v8::Name"** %213, align 8
  %215 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %214, %"class.v8::Value"* %212) #7
  %216 = trunc i16 %215 to i8
  %217 = icmp ne i8 %216, 0
  %218 = icmp ugt i16 %215, 255
  %219 = and i1 %218, %217
  br i1 %219, label %220, label %294

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 9
  %222 = load i8, i8* %221, align 8, !range !3
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 23
  %226 = load float, float* %225, align 4
  %227 = fpext float %226 to double
  br label %228

228:                                              ; preds = %220, %224
  %229 = phi double [ %227, %224 ], [ 0.000000e+00, %220 ]
  %230 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %229) #7
  %231 = bitcast %"class.v8::Number"* %230 to %"class.v8::Value"*
  %232 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 10, i32 0
  %233 = load %"class.v8::Name"*, %"class.v8::Name"** %232, align 8
  %234 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %233, %"class.v8::Value"* %231) #7
  %235 = trunc i16 %234 to i8
  %236 = icmp ne i8 %235, 0
  %237 = icmp ugt i16 %234, 255
  %238 = and i1 %237, %236
  br i1 %238, label %239, label %294

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 10
  %241 = load i8, i8* %240, align 1, !range !3
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 24
  %245 = load float, float* %244, align 8
  %246 = fpext float %245 to double
  br label %247

247:                                              ; preds = %239, %243
  %248 = phi double [ %246, %243 ], [ 0.000000e+00, %239 ]
  %249 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %248) #7
  %250 = bitcast %"class.v8::Number"* %249 to %"class.v8::Value"*
  %251 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 11, i32 0
  %252 = load %"class.v8::Name"*, %"class.v8::Name"** %251, align 8
  %253 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %252, %"class.v8::Value"* %250) #7
  %254 = trunc i16 %253 to i8
  %255 = icmp ne i8 %254, 0
  %256 = icmp ugt i16 %253, 255
  %257 = and i1 %256, %255
  br i1 %257, label %258, label %294

258:                                              ; preds = %247
  %259 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 11
  %260 = load i8, i8* %259, align 2, !range !3
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %265, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 25
  %264 = load double, double* %263, align 8
  br label %265

265:                                              ; preds = %258, %262
  %266 = phi double [ %264, %262 ], [ 1.000000e+00, %258 ]
  %267 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %266) #7
  %268 = bitcast %"class.v8::Number"* %267 to %"class.v8::Value"*
  %269 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 12, i32 0
  %270 = load %"class.v8::Name"*, %"class.v8::Name"** %269, align 8
  %271 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %270, %"class.v8::Value"* %268) #7
  %272 = trunc i16 %271 to i8
  %273 = icmp ne i8 %272, 0
  %274 = icmp ugt i16 %271, 255
  %275 = and i1 %274, %273
  br i1 %275, label %276, label %294

276:                                              ; preds = %265
  %277 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 12
  %278 = load i8, i8* %277, align 1, !range !3
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %283, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.blink::PannerOptions", %"class.blink::PannerOptions"* %0, i64 0, i32 26
  %282 = load double, double* %281, align 8
  br label %283

283:                                              ; preds = %276, %280
  %284 = phi double [ %282, %280 ], [ 1.000000e+00, %276 ]
  %285 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %284) #7
  %286 = bitcast %"class.v8::Number"* %285 to %"class.v8::Value"*
  %287 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 13, i32 0
  %288 = load %"class.v8::Name"*, %"class.v8::Name"** %287, align 8
  %289 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %288, %"class.v8::Value"* %286) #7
  %290 = trunc i16 %289 to i8
  %291 = icmp ne i8 %290, 0
  %292 = icmp ugt i16 %289, 255
  %293 = and i1 %292, %291
  br label %294

294:                                              ; preds = %23, %59, %105, %143, %191, %228, %283, %265, %247, %209, %162, %124, %88, %41, %4
  %295 = phi i1 [ false, %4 ], [ false, %23 ], [ false, %41 ], [ false, %59 ], [ false, %88 ], [ false, %105 ], [ false, %124 ], [ false, %143 ], [ false, %162 ], [ false, %191 ], [ false, %209 ], [ false, %228 ], [ false, %247 ], [ %293, %283 ], [ false, %265 ]
  ret i1 %295
}

declare zeroext i1 @_ZN5blink20toV8AudioNodeOptionsEPKNS_16AudioNodeOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::AudioNodeOptions"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PannerOptions"* @_ZN5blink17NativeValueTraitsINS_13PannerOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 144) #7
  %5 = bitcast i8* %4 to %"class.blink::PannerOptions"*
  tail call void @_ZN5blink13PannerOptionsC1Ev(%"class.blink::PannerOptions"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink15V8PannerOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13PannerOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::PannerOptions"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::PannerOptions"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink13PannerOptionsC1Ev(%"class.blink::PannerOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !4

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !5

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !5

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
