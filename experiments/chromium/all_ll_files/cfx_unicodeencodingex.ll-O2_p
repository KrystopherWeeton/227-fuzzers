; ModuleID = '../../third_party/pdfium/core/fxge/cfx_unicodeencodingex.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_unicodeencodingex.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_UnicodeEncodingEx = type <{ %class.CFX_UnicodeEncoding, i32, [4 x i8] }>
%class.CFX_UnicodeEncoding = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.1", %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.15", %"class.fxcrt::RetainPtr.19" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.45", i64 }
%"class.fxcrt::UnownedPtr.45" = type { i8* }

@_ZTV21CFX_UnicodeEncodingEx = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_UnicodeEncodingEx*)* @_ZN21CFX_UnicodeEncodingExD2Ev to i8*), i8* bitcast (void (%class.CFX_UnicodeEncodingEx*)* @_ZN21CFX_UnicodeEncodingExD0Ev to i8*), i8* bitcast (i32 (%class.CFX_UnicodeEncodingEx*, i32)* @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj to i8*)] }, align 8

@_ZN21CFX_UnicodeEncodingExC1EP8CFX_Fontj = hidden unnamed_addr alias void (%class.CFX_UnicodeEncodingEx*, %class.CFX_Font*, i32), void (%class.CFX_UnicodeEncodingEx*, %class.CFX_Font*, i32)* @_ZN21CFX_UnicodeEncodingExC2EP8CFX_Fontj
@_ZN21CFX_UnicodeEncodingExD1Ev = hidden unnamed_addr alias void (%class.CFX_UnicodeEncodingEx*), void (%class.CFX_UnicodeEncodingEx*)* @_ZN21CFX_UnicodeEncodingExD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFX_UnicodeEncodingExC2EP8CFX_Fontj(%class.CFX_UnicodeEncodingEx*, %class.CFX_Font*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0
  tail call void @_ZN19CFX_UnicodeEncodingC2EPK8CFX_Font(%class.CFX_UnicodeEncoding* %4, %class.CFX_Font* %1) #6
  %5 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21CFX_UnicodeEncodingEx, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  ret void
}

declare void @_ZN19CFX_UnicodeEncodingC2EPK8CFX_Font(%class.CFX_UnicodeEncoding*, %class.CFX_Font*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN19CFX_UnicodeEncodingD2Ev(%class.CFX_UnicodeEncoding*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFX_UnicodeEncodingExD2Ev(%class.CFX_UnicodeEncodingEx*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0
  tail call void @_ZN19CFX_UnicodeEncodingD2Ev(%class.CFX_UnicodeEncoding* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFX_UnicodeEncodingExD0Ev(%class.CFX_UnicodeEncodingEx*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0
  tail call void @_ZN19CFX_UnicodeEncodingD2Ev(%class.CFX_UnicodeEncoding* %2) #6
  %3 = bitcast %class.CFX_UnicodeEncodingEx* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj(%class.CFX_UnicodeEncodingEx* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.CFX_Font*, %class.CFX_Font** %3, align 8
  %5 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %7 = icmp eq %class.CFX_Face* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %struct.FT_FaceRec_* [ %10, %8 ], [ null, %2 ]
  %13 = zext i32 %1 to i64
  %14 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %12, i64 %13) #6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %47

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %12, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %12, i64 0, i32 10
  %22 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 1
  %23 = zext i32 %18 to i64
  br label %24

24:                                               ; preds = %41, %20
  %25 = phi i64 [ 0, %20 ], [ %27, %41 ]
  %26 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %21, align 8
  %27 = add nuw nsw i64 %25, 1
  %28 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %26, i64 %25
  %29 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = load i32, i32* %22, align 8
  %33 = icmp eq i32 %32, %31
  br i1 %33, label %41, label %34

34:                                               ; preds = %24
  %35 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %12, i32 %31) #6
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %12, i64 %13) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  store i32 %31, i32* %22, align 8
  br label %47

41:                                               ; preds = %34, %37, %24
  %42 = icmp eq i64 %27, %23
  br i1 %42, label %43, label %24

43:                                               ; preds = %41, %16
  %44 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %12, i32 %45) #6
  br label %47

47:                                               ; preds = %40, %43, %11
  %48 = phi i32 [ %14, %11 ], [ 0, %43 ], [ %38, %40 ]
  ret i32 %48
}

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #1

declare i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK21CFX_UnicodeEncodingEx19CharCodeFromUnicodeEw(%class.CFX_UnicodeEncodingEx* nocapture readonly, i32 signext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %5 [
    i32 1970170211, label %32
    i32 1937337698, label %32
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CFX_UnicodeEncodingEx, %class.CFX_UnicodeEncodingEx* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %class.CFX_Font*, %class.CFX_Font** %6, align 8
  %8 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %10 = icmp eq %class.CFX_Face* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  br label %14

14:                                               ; preds = %5, %11
  %15 = phi %struct.FT_FaceRec_* [ %13, %11 ], [ null, %5 ]
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %15, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %15, i64 0, i32 10
  %21 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %20, align 8
  %22 = zext i32 %17 to i64
  br label %23

23:                                               ; preds = %29, %19
  %24 = phi i64 [ 0, %19 ], [ %30, %29 ]
  %25 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %21, i64 %24
  %26 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %25, align 8
  %27 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %29 [
    i32 1970170211, label %32
    i32 1937337698, label %32
  ]

29:                                               ; preds = %23
  %30 = add nuw nsw i64 %24, 1
  %31 = icmp eq i64 %30, %22
  br i1 %31, label %32, label %23

32:                                               ; preds = %23, %23, %29, %14, %2, %2
  %33 = phi i32 [ %1, %2 ], [ %1, %2 ], [ -1, %14 ], [ -1, %29 ], [ %1, %23 ], [ %1, %23 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_UnicodeEncodingEx* @_Z23FX_CreateFontEncodingExP8CFX_Font(%class.CFX_Font*) local_unnamed_addr #0 {
  %2 = icmp eq %class.CFX_Font* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %6 = icmp eq %class.CFX_Face* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  br i1 %10, label %25, label %14

11:                                               ; preds = %14
  %12 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %13 = icmp eq %class.CFX_Face* %12, null
  br i1 %13, label %30, label %27

14:                                               ; preds = %7
  %15 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %9, i32 1937337698) #6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %11

17:                                               ; preds = %140, %130, %120, %110, %100, %90, %80, %70, %60, %50, %40, %30, %14
  %18 = phi i32 [ 1937337698, %14 ], [ 1970170211, %30 ], [ 1936353651, %40 ], [ 1734484000, %50 ], [ 1651074869, %60 ], [ 2002873971, %70 ], [ 1785686113, %80 ], [ 1094995778, %90 ], [ 1094992453, %100 ], [ 1094992451, %110 ], [ 1818326065, %120 ], [ 1818326066, %130 ], [ 1634889070, %140 ]
  %19 = tail call i8* @_Znwm(i64 24) #7
  %20 = bitcast i8* %19 to %class.CFX_UnicodeEncoding*
  tail call void @_ZN19CFX_UnicodeEncodingC2EPK8CFX_Font(%class.CFX_UnicodeEncoding* nonnull %20, %class.CFX_Font* nonnull %0) #6
  %21 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21CFX_UnicodeEncodingEx, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 16
  %23 = bitcast i8* %22 to i32*
  store i32 %18, i32* %23, align 8
  %24 = bitcast i8* %19 to %class.CFX_UnicodeEncodingEx*
  br label %25

25:                                               ; preds = %140, %3, %17, %1, %7
  %26 = phi %class.CFX_UnicodeEncodingEx* [ null, %7 ], [ null, %1 ], [ %24, %17 ], [ null, %3 ], [ null, %140 ]
  ret %class.CFX_UnicodeEncodingEx* %26

27:                                               ; preds = %11
  %28 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %28, align 8
  br label %30

30:                                               ; preds = %27, %11
  %31 = phi %struct.FT_FaceRec_* [ %29, %27 ], [ null, %11 ]
  %32 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %31, i32 1970170211) #6
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %17, label %34

34:                                               ; preds = %30
  %35 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %36 = icmp eq %class.CFX_Face* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %35, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %38, align 8
  br label %40

40:                                               ; preds = %37, %34
  %41 = phi %struct.FT_FaceRec_* [ %39, %37 ], [ null, %34 ]
  %42 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %41, i32 1936353651) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %17, label %44

44:                                               ; preds = %40
  %45 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %46 = icmp eq %class.CFX_Face* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %45, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %48, align 8
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi %struct.FT_FaceRec_* [ %49, %47 ], [ null, %44 ]
  %52 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %51, i32 1734484000) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %17, label %54

54:                                               ; preds = %50
  %55 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %56 = icmp eq %class.CFX_Face* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %55, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %58, align 8
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi %struct.FT_FaceRec_* [ %59, %57 ], [ null, %54 ]
  %62 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %61, i32 1651074869) #6
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %17, label %64

64:                                               ; preds = %60
  %65 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %66 = icmp eq %class.CFX_Face* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %69 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %68, align 8
  br label %70

70:                                               ; preds = %67, %64
  %71 = phi %struct.FT_FaceRec_* [ %69, %67 ], [ null, %64 ]
  %72 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %71, i32 2002873971) #6
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %17, label %74

74:                                               ; preds = %70
  %75 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %76 = icmp eq %class.CFX_Face* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %75, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %78, align 8
  br label %80

80:                                               ; preds = %77, %74
  %81 = phi %struct.FT_FaceRec_* [ %79, %77 ], [ null, %74 ]
  %82 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %81, i32 1785686113) #6
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %17, label %84

84:                                               ; preds = %80
  %85 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %86 = icmp eq %class.CFX_Face* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %85, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %88, align 8
  br label %90

90:                                               ; preds = %87, %84
  %91 = phi %struct.FT_FaceRec_* [ %89, %87 ], [ null, %84 ]
  %92 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %91, i32 1094995778) #6
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %17, label %94

94:                                               ; preds = %90
  %95 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %96 = icmp eq %class.CFX_Face* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %95, i64 0, i32 2, i32 0, i32 0, i32 0
  %99 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %98, align 8
  br label %100

100:                                              ; preds = %97, %94
  %101 = phi %struct.FT_FaceRec_* [ %99, %97 ], [ null, %94 ]
  %102 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %101, i32 1094992453) #6
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %17, label %104

104:                                              ; preds = %100
  %105 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %106 = icmp eq %class.CFX_Face* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %105, i64 0, i32 2, i32 0, i32 0, i32 0
  %109 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %108, align 8
  br label %110

110:                                              ; preds = %107, %104
  %111 = phi %struct.FT_FaceRec_* [ %109, %107 ], [ null, %104 ]
  %112 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %111, i32 1094992451) #6
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %17, label %114

114:                                              ; preds = %110
  %115 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %116 = icmp eq %class.CFX_Face* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %115, i64 0, i32 2, i32 0, i32 0, i32 0
  %119 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %118, align 8
  br label %120

120:                                              ; preds = %117, %114
  %121 = phi %struct.FT_FaceRec_* [ %119, %117 ], [ null, %114 ]
  %122 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %121, i32 1818326065) #6
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %17, label %124

124:                                              ; preds = %120
  %125 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %126 = icmp eq %class.CFX_Face* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %125, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %128, align 8
  br label %130

130:                                              ; preds = %127, %124
  %131 = phi %struct.FT_FaceRec_* [ %129, %127 ], [ null, %124 ]
  %132 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %131, i32 1818326066) #6
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %17, label %134

134:                                              ; preds = %130
  %135 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %136 = icmp eq %class.CFX_Face* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %135, i64 0, i32 2, i32 0, i32 0, i32 0
  %139 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %138, align 8
  br label %140

140:                                              ; preds = %137, %134
  %141 = phi %struct.FT_FaceRec_* [ %139, %137 ], [ null, %134 ]
  %142 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %141, i32 1634889070) #6
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %17, label %25
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
