; ModuleID = '../../third_party/skia/src/fonts/SkFontMgr_indirect.cpp'
source_filename = "../../third_party/skia/src/fonts/SkFontMgr_indirect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkFontMgr_Indirect = type { %class.SkFontMgr.base, %class.sk_sp, %class.sk_sp.1, %class.SkTArray, %class.SkMutex }
%class.SkFontMgr.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkRemotableFontMgr* }
%class.SkRemotableFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkTArray = type { %"struct.SkFontMgr_Indirect::DataEntry"*, i64 }
%"struct.SkFontMgr_Indirect::DataEntry" = type { i32, i32, %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkString = type { %class.sk_sp.7 }
%class.sk_sp.7 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkFontStyleSet = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRemotableFontIdentitySet = type { %class.SkRefCnt.base, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.SkFontIdentity* }
%struct.SkFontIdentity = type { i32, i32, %class.SkFontStyle }
%class.sk_sp.11 = type { %class.SkTypeface* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.sk_sp.18 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkStyleSet_Indirect = type { %class.SkFontStyleSet.base, %class.sk_sp.8, i32, %class.sk_sp.9 }
%class.SkFontStyleSet.base = type { %class.SkRefCnt.base }
%class.sk_sp.8 = type { %class.SkFontMgr_Indirect* }
%class.sk_sp.9 = type { %class.SkRemotableFontIdentitySet* }

$_ZN18SkFontMgr_IndirectD2Ev = comdat any

$_ZN18SkFontMgr_IndirectD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle = comdat any

$_ZN19SkStyleSet_IndirectD2Ev = comdat any

$_ZN19SkStyleSet_IndirectD0Ev = comdat any

$_ZN19SkStyleSet_Indirect5countEv = comdat any

$_ZN19SkStyleSet_Indirect8getStyleEiP11SkFontStyleP8SkString = comdat any

$_ZN19SkStyleSet_Indirect14createTypefaceEi = comdat any

$_ZN19SkStyleSet_Indirect10matchStyleERK11SkFontStyle = comdat any

$_ZN8SkTArrayIN18SkFontMgr_Indirect9DataEntryELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZTV19SkStyleSet_Indirect = comdat any

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/skia/src/fonts/SkFontMgr_indirect.cpp\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Not implemented\00", align 1
@_ZTV18SkFontMgr_Indirect = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkFontMgr_Indirect*)* @_ZN18SkFontMgr_IndirectD2Ev to i8*), i8* bitcast (void (%class.SkFontMgr_Indirect*)* @_ZN18SkFontMgr_IndirectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkFontMgr_Indirect*)* @_ZNK18SkFontMgr_Indirect15onCountFamiliesEv to i8*), i8* bitcast (void (%class.SkFontMgr_Indirect*, i32, %class.SkString*)* @_ZNK18SkFontMgr_Indirect15onGetFamilyNameEiP8SkString to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkFontMgr_Indirect*, i32)* @_ZNK18SkFontMgr_Indirect16onCreateStyleSetEi to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkFontMgr_Indirect*, i8*)* @_ZNK18SkFontMgr_Indirect13onMatchFamilyEPKc to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr_Indirect*, i8*, %class.SkFontStyle*)* @_ZNK18SkFontMgr_Indirect18onMatchFamilyStyleEPKcRK11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr_Indirect*, i8*, %class.SkFontStyle*, i8**, i32, i32)* @_ZNK18SkFontMgr_Indirect27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkFontMgr_Indirect*, %class.sk_sp.18*, i32)* @_ZNK18SkFontMgr_Indirect14onMakeFromDataE5sk_spI6SkDataEi to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkFontMgr_Indirect*, %class.SkStreamAsset*, i32)* @_ZNK18SkFontMgr_Indirect21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkFontMgr_Indirect*, %class.SkStreamAsset*, %struct.SkFontArguments*)* @_ZNK18SkFontMgr_Indirect20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments to i8*), i8* bitcast (void ()* @_ZNK9SkFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkFontMgr_Indirect*, i8*, i32)* @_ZNK18SkFontMgr_Indirect14onMakeFromFileEPKci to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkFontMgr_Indirect*, i8*, i32)* @_ZNK18SkFontMgr_Indirect20onLegacyMakeTypefaceEPKc11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle*)* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle to i8*)] }, align 8
@_ZTV19SkStyleSet_Indirect = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkStyleSet_Indirect*)* @_ZN19SkStyleSet_IndirectD2Ev to i8*), i8* bitcast (void (%class.SkStyleSet_Indirect*)* @_ZN19SkStyleSet_IndirectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkStyleSet_Indirect*)* @_ZN19SkStyleSet_Indirect5countEv to i8*), i8* bitcast (void (%class.SkStyleSet_Indirect*, i32, %class.SkFontStyle*, %class.SkString*)* @_ZN19SkStyleSet_Indirect8getStyleEiP11SkFontStyleP8SkString to i8*), i8* bitcast (%class.SkTypeface* (%class.SkStyleSet_Indirect*, i32)* @_ZN19SkStyleSet_Indirect14createTypefaceEi to i8*), i8* bitcast (%class.SkTypeface* (%class.SkStyleSet_Indirect*, %class.SkFontStyle*)* @_ZN19SkStyleSet_Indirect10matchStyleERK11SkFontStyle to i8*)] }, comdat, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK18SkFontMgr_Indirect15onCountFamiliesEv(%class.SkFontMgr_Indirect* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect15onGetFamilyNameEiP8SkString(%class.SkFontMgr_Indirect* nocapture readnone, i32, %class.SkString* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden noalias nonnull %class.SkFontStyleSet* @_ZNK18SkFontMgr_Indirect16onCreateStyleSetEi(%class.SkFontMgr_Indirect* nocapture readnone, i32) unnamed_addr #1 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %class.SkFontStyleSet* @_ZNK18SkFontMgr_Indirect13onMatchFamilyEPKc(%class.SkFontMgr_Indirect*, i8*) unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #11
  %4 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %5 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %4, align 8
  %6 = bitcast %class.SkRemotableFontMgr* %5 to %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)***
  %7 = load %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)**, %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)*** %6, align 8
  %8 = getelementptr inbounds %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)*, %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)** %7, i64 5
  %9 = load %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)*, %class.SkRemotableFontIdentitySet* (%class.SkRemotableFontMgr*, i8*)** %8, align 8
  %10 = tail call %class.SkRemotableFontIdentitySet* %9(%class.SkRemotableFontMgr* %5, i8* %1) #12
  %11 = getelementptr inbounds i8, i8* %3, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkStyleSet_Indirect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = getelementptr inbounds i8, i8* %3, i64 16
  %17 = bitcast i8* %16 to %class.SkFontMgr_Indirect**
  store %class.SkFontMgr_Indirect* %0, %class.SkFontMgr_Indirect** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 -1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 32
  %21 = bitcast i8* %20 to %class.SkRemotableFontIdentitySet**
  store %class.SkRemotableFontIdentitySet* %10, %class.SkRemotableFontIdentitySet** %21, align 8
  %22 = bitcast i8* %3 to %class.SkFontStyleSet*
  ret %class.SkFontStyleSet* %22
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect*, %struct.SkFontIdentity* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.sk_sp.11, align 8
  %4 = alloca %class.sk_sp.11, align 8
  %5 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %237, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acquire
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %14) #12
  br label %15

15:                                               ; preds = %8, %13
  %16 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3
  %17 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 4294967294
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %169, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %16, i64 0, i32 0
  %23 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %21, %148
  %25 = phi i32 [ 0, %21 ], [ %150, %148 ]
  %26 = phi i32 [ 0, %21 ], [ %85, %148 ]
  %27 = phi %class.SkTypeface* [ null, %21 ], [ %84, %148 ]
  %28 = phi %class.SkRefCntBase* [ null, %21 ], [ %83, %148 ]
  %29 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %22, align 8
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %29, i64 %30, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = load i32, i32* %5, align 4
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %82

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %29, i64 %30, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %23, align 4
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %58

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %29, i64 %30, i32 2
  %42 = bitcast %class.SkTypeface** %41 to %class.SkWeakRefCnt**
  %43 = load %class.SkWeakRefCnt*, %class.SkWeakRefCnt** %42, align 8
  %44 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = load atomic i32, i32* %44 monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %47, %55
  %51 = phi i32 [ %56, %55 ], [ %48, %47 ]
  %52 = add nsw i32 %51, 1
  %53 = cmpxchg weak i32* %44, i32 %51, i32 %52 acquire monotonic
  %54 = extractvalue { i32, i1 } %53, 1
  br i1 %54, label %156, label %55

55:                                               ; preds = %50
  %56 = extractvalue { i32, i1 } %53, 0
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %50

58:                                               ; preds = %55, %47, %40, %35
  %59 = icmp eq %class.SkTypeface* %27, null
  br i1 %59, label %60, label %82

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %29, i64 %30, i32 2
  %62 = bitcast %class.SkTypeface** %61 to %class.SkWeakRefCnt**
  %63 = load %class.SkWeakRefCnt*, %class.SkWeakRefCnt** %62, align 8
  %64 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %60
  %68 = load atomic i32, i32* %64 monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %67, %75
  %71 = phi i32 [ %76, %75 ], [ %68, %67 ]
  %72 = add nsw i32 %71, 1
  %73 = cmpxchg weak i32* %64, i32 %71, i32 %72 acquire monotonic
  %74 = extractvalue { i32, i1 } %73, 1
  br i1 %74, label %78, label %75

75:                                               ; preds = %70
  %76 = extractvalue { i32, i1 } %73, 0
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %70

78:                                               ; preds = %70
  %79 = load %class.SkTypeface*, %class.SkTypeface** %61, align 8
  %80 = bitcast %class.SkTypeface* %79 to %class.SkRefCntBase*
  %81 = load i32, i32* %36, align 4
  br label %82

82:                                               ; preds = %75, %67, %58, %60, %78, %24
  %83 = phi %class.SkRefCntBase* [ null, %60 ], [ %80, %78 ], [ %28, %58 ], [ %28, %24 ], [ null, %67 ], [ %28, %75 ]
  %84 = phi %class.SkTypeface* [ null, %60 ], [ %79, %78 ], [ %27, %58 ], [ %27, %24 ], [ null, %67 ], [ null, %75 ]
  %85 = phi i32 [ %26, %60 ], [ %81, %78 ], [ %26, %58 ], [ %26, %24 ], [ %26, %67 ], [ %26, %75 ]
  %86 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %29, i64 %30, i32 2
  %87 = bitcast %class.SkTypeface** %86 to %class.SkWeakRefCnt**
  %88 = load %class.SkWeakRefCnt*, %class.SkWeakRefCnt** %87, align 8
  %89 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %88, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %148

92:                                               ; preds = %82
  %93 = load i64, i64* %17, align 8
  %94 = lshr i64 %93, 1
  %95 = trunc i64 %94 to i32
  %96 = and i32 %95, 2147483647
  %97 = add nsw i32 %96, -1
  %98 = shl i32 %97, 1
  %99 = zext i32 %98 to i64
  %100 = and i64 %93, -4294967295
  %101 = or i64 %100, %99
  store i64 %101, i64* %17, align 8
  %102 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %22, align 8
  %103 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %102, i64 %30, i32 2
  %104 = load %class.SkTypeface*, %class.SkTypeface** %103, align 8
  %105 = icmp eq %class.SkTypeface* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %92
  %107 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %104, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %class.SkTypeface* %104 to %class.SkRefCntBase*
  %112 = bitcast %class.SkTypeface* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 1
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  tail call void %115(%class.SkRefCntBase* nonnull %111) #12
  br label %116

116:                                              ; preds = %110, %106, %92
  %117 = icmp eq i32 %97, %25
  br i1 %117, label %146, label %118

118:                                              ; preds = %116
  %119 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %22, align 8
  %120 = sext i32 %97 to i64
  %121 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %120, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %30, i32 0
  store i32 %122, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %120, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %30, i32 1
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %120, i32 2
  %128 = bitcast %class.SkTypeface** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %119, i64 %30, i32 2
  %131 = bitcast %class.SkTypeface** %130 to i64*
  store i64 %129, i64* %131, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %127, align 8
  %132 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %22, align 8
  %133 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %132, i64 %120, i32 2
  %134 = load %class.SkTypeface*, %class.SkTypeface** %133, align 8
  %135 = icmp eq %class.SkTypeface* %134, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %118
  %137 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %134, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = bitcast %class.SkTypeface* %134 to %class.SkRefCntBase*
  %142 = bitcast %class.SkTypeface* %134 to void (%class.SkRefCntBase*)***
  %143 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %142, align 8
  %144 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, i64 1
  %145 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, align 8
  tail call void %145(%class.SkRefCntBase* nonnull %141) #12
  br label %146

146:                                              ; preds = %116, %118, %136, %140
  %147 = add nsw i32 %25, -1
  br label %148

148:                                              ; preds = %146, %82
  %149 = phi i32 [ %25, %82 ], [ %147, %146 ]
  %150 = add nsw i32 %149, 1
  %151 = load i64, i64* %17, align 8
  %152 = lshr i64 %151, 1
  %153 = trunc i64 %152 to i32
  %154 = and i32 %153, 2147483647
  %155 = icmp slt i32 %150, %154
  br i1 %155, label %24, label %158

156:                                              ; preds = %50
  %157 = load %class.SkTypeface*, %class.SkTypeface** %41, align 8
  br label %214

158:                                              ; preds = %148
  %159 = icmp eq %class.SkTypeface* %84, null
  br i1 %159, label %169, label %160

160:                                              ; preds = %158
  %161 = tail call %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface* nonnull %84, i32* null) #12
  %162 = icmp eq %class.SkStreamAsset* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = bitcast %class.sk_sp.11* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #12
  %165 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 1, i32 0
  %166 = load %class.SkFontMgr*, %class.SkFontMgr** %165, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.11* nonnull sret %3, %class.SkFontMgr* %166, %class.SkStreamAsset* nonnull %161, i32 %85) #12
  %167 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %3, i64 0, i32 0
  %168 = load %class.SkTypeface*, %class.SkTypeface** %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #12
  br label %219

169:                                              ; preds = %15, %160, %158
  %170 = phi %class.SkTypeface* [ %84, %160 ], [ null, %158 ], [ null, %15 ]
  %171 = phi %class.SkRefCntBase* [ %83, %160 ], [ %83, %158 ], [ null, %15 ]
  %172 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %173 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %172, align 8
  %174 = load i32, i32* %5, align 4
  %175 = bitcast %class.SkRemotableFontMgr* %173 to %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)***
  %176 = load %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)**, %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)*** %175, align 8
  %177 = getelementptr inbounds %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)*, %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)** %176, i64 8
  %178 = load %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)*, %class.SkStreamAsset* (%class.SkRemotableFontMgr*, i32)** %177, align 8
  %179 = tail call %class.SkStreamAsset* %178(%class.SkRemotableFontMgr* %173, i32 %174) #12
  %180 = icmp eq %class.SkStreamAsset* %179, null
  br i1 %180, label %214, label %181

181:                                              ; preds = %169
  %182 = bitcast %class.sk_sp.11* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #12
  %183 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %4, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %183, align 8
  %184 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 1, i32 0
  %185 = load %class.SkFontMgr*, %class.SkFontMgr** %184, align 8
  %186 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %1, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.11* nonnull sret %4, %class.SkFontMgr* %185, %class.SkStreamAsset* nonnull %179, i32 %187) #12
  %188 = load %class.SkTypeface*, %class.SkTypeface** %183, align 8
  %189 = icmp eq %class.SkTypeface* %188, null
  br i1 %189, label %212, label %190

190:                                              ; preds = %181
  call void @_ZN8SkTArrayIN18SkFontMgr_Indirect9DataEntryELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %16, i32 1, i32 1) #12
  %191 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %16, i64 0, i32 0
  %192 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %191, align 8
  %193 = load i64, i64* %17, align 8
  %194 = lshr i64 %193, 1
  %195 = and i64 %194, 2147483647
  %196 = add i64 %193, 2
  %197 = and i64 %196, 4294967294
  %198 = and i64 %193, -4294967295
  %199 = or i64 %197, %198
  store i64 %199, i64* %17, align 8
  %200 = load %class.SkTypeface*, %class.SkTypeface** %183, align 8
  %201 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %200, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw add i32* %201, i32 1 monotonic
  %203 = load i32, i32* %5, align 4
  %204 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %192, i64 %195, i32 0
  store i32 %203, i32* %204, align 8
  %205 = load i32, i32* %186, align 4
  %206 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %192, i64 %195, i32 1
  store i32 %205, i32* %206, align 4
  %207 = bitcast %class.sk_sp.11* %4 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %192, i64 %195, i32 2
  %210 = bitcast %class.SkTypeface** %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = load %class.SkTypeface*, %class.SkTypeface** %183, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %183, align 8
  br label %212

212:                                              ; preds = %181, %190
  %213 = phi %class.SkTypeface* [ %211, %190 ], [ null, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #12
  br label %214

214:                                              ; preds = %169, %212, %156
  %215 = phi %class.SkRefCntBase* [ %28, %156 ], [ %171, %212 ], [ %171, %169 ]
  %216 = phi %class.SkTypeface* [ %27, %156 ], [ %170, %212 ], [ %170, %169 ]
  %217 = phi %class.SkTypeface* [ %157, %156 ], [ %213, %212 ], [ null, %169 ]
  %218 = icmp eq %class.SkTypeface* %216, null
  br i1 %218, label %231, label %219

219:                                              ; preds = %163, %214
  %220 = phi %class.SkRefCntBase* [ %83, %163 ], [ %215, %214 ]
  %221 = phi %class.SkTypeface* [ %84, %163 ], [ %216, %214 ]
  %222 = phi %class.SkTypeface* [ %168, %163 ], [ %217, %214 ]
  %223 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %221, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw add i32* %223, i32 -1 acq_rel
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %231

226:                                              ; preds = %219
  %227 = bitcast %class.SkTypeface* %221 to void (%class.SkRefCntBase*)***
  %228 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %227, align 8
  %229 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, i64 2
  %230 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, align 8
  call void %230(%class.SkRefCntBase* nonnull %220) #12
  br label %231

231:                                              ; preds = %214, %219, %226
  %232 = phi %class.SkTypeface* [ %217, %214 ], [ %222, %219 ], [ %222, %226 ]
  %233 = atomicrmw add i32* %10, i32 1 release
  %234 = icmp slt i32 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %231
  %236 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %236, i32 1) #12
  br label %237

237:                                              ; preds = %235, %231, %2
  %238 = phi %class.SkTypeface* [ null, %2 ], [ %232, %231 ], [ %232, %235 ]
  ret %class.SkTypeface* %238
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #6

declare void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.11* sret, %class.SkFontMgr*, %class.SkStreamAsset*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK18SkFontMgr_Indirect18onMatchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr_Indirect*, i8*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #3 align 2 {
  %4 = alloca %struct.SkFontIdentity, align 8
  %5 = bitcast %struct.SkFontIdentity* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %4, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %8 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %7, align 8
  %9 = bitcast %class.SkRemotableFontMgr* %8 to { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)***
  %10 = load { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)**, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)*** %9, align 8
  %11 = getelementptr inbounds { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)** %10, i64 6
  %12 = load { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*)** %11, align 8
  %13 = tail call { i64, i32 } %12(%class.SkRemotableFontMgr* %8, i8* %1, %class.SkFontStyle* dereferenceable(4) %2) #12
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = bitcast %struct.SkFontIdentity* %4 to i64*
  store i64 %14, i64* %16, align 8
  store i32 %15, i32* %6, align 8
  %17 = call %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect* %0, %struct.SkFontIdentity* nonnull dereferenceable(12) %4)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #12
  ret %class.SkTypeface* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK18SkFontMgr_Indirect27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr_Indirect*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) unnamed_addr #3 align 2 {
  %7 = alloca %struct.SkFontIdentity, align 8
  %8 = bitcast %struct.SkFontIdentity* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #12
  %9 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %7, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %11 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %10, align 8
  %12 = bitcast %class.SkRemotableFontMgr* %11 to { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)***
  %13 = load { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)**, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*** %12, align 8
  %14 = getelementptr inbounds { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)** %13, i64 7
  %15 = load { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*, { i64, i32 } (%class.SkRemotableFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)** %14, align 8
  %16 = tail call { i64, i32 } %15(%class.SkRemotableFontMgr* %11, i8* %1, %class.SkFontStyle* dereferenceable(4) %2, i8** %3, i32 %4, i32 %5) #12
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = bitcast %struct.SkFontIdentity* %7 to i64*
  store i64 %17, i64* %19, align 8
  store i32 %18, i32* %9, align 8
  %20 = call %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect* %0, %struct.SkFontIdentity* nonnull dereferenceable(12) %7)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #12
  ret %class.SkTypeface* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.11* noalias sret, %class.SkFontMgr_Indirect* nocapture readonly, %class.SkStreamAsset*, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %1, i64 0, i32 1, i32 0
  %6 = load %class.SkFontMgr*, %class.SkFontMgr** %5, align 8
  tail call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.11* sret %0, %class.SkFontMgr* %6, %class.SkStreamAsset* %2, i32 %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.11* noalias sret, %class.SkFontMgr_Indirect* nocapture readonly, %class.SkStreamAsset*, %struct.SkFontArguments* dereferenceable(24)) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %1, i64 0, i32 1, i32 0
  %6 = load %class.SkFontMgr*, %class.SkFontMgr** %5, align 8
  tail call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.11* sret %0, %class.SkFontMgr* %6, %class.SkStreamAsset* %2, %struct.SkFontArguments* dereferenceable(24) %3) #12
  ret void
}

declare void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.11* sret, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect14onMakeFromFileEPKci(%class.sk_sp.11* noalias sret, %class.SkFontMgr_Indirect* nocapture readonly, i8*, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %1, i64 0, i32 1, i32 0
  %6 = load %class.SkFontMgr*, %class.SkFontMgr** %5, align 8
  tail call void @_ZNK9SkFontMgr12makeFromFileEPKci(%class.sk_sp.11* sret %0, %class.SkFontMgr* %6, i8* %2, i32 %3) #12
  ret void
}

declare void @_ZNK9SkFontMgr12makeFromFileEPKci(%class.sk_sp.11* sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect14onMakeFromDataE5sk_spI6SkDataEi(%class.sk_sp.11* noalias sret, %class.SkFontMgr_Indirect* nocapture readonly, %class.sk_sp.18* nocapture, i32) unnamed_addr #3 align 2 {
  %5 = alloca %class.sk_sp.18, align 8
  %6 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %1, i64 0, i32 1, i32 0
  %7 = load %class.SkFontMgr*, %class.SkFontMgr** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %2, i64 0, i32 0
  %9 = bitcast %class.sk_sp.18* %2 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkData* null, %class.SkData** %8, align 8
  %11 = bitcast %class.sk_sp.18* %5 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZNK9SkFontMgr12makeFromDataE5sk_spI6SkDataEi(%class.sk_sp.11* sret %0, %class.SkFontMgr* %7, %class.sk_sp.18* nonnull %5, i32 %3) #12
  %12 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %5, i64 0, i32 0
  %13 = load %class.SkData*, %class.SkData** %12, align 8
  %14 = icmp eq %class.SkData* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %13) #12
  %20 = bitcast %class.SkData* %13 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %20) #12
  br label %21

21:                                               ; preds = %4, %15, %19
  ret void
}

declare void @_ZNK9SkFontMgr12makeFromDataE5sk_spI6SkDataEi(%class.sk_sp.11* sret, %class.SkFontMgr*, %class.sk_sp.18*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18SkFontMgr_Indirect20onLegacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp.11* noalias nocapture sret, %class.SkFontMgr_Indirect*, i8*, i32) unnamed_addr #3 align 2 {
  %5 = alloca %class.SkFontStyle, align 4
  %6 = alloca %struct.SkFontIdentity, align 8
  %7 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %5, i64 0, i32 0
  store i32 %3, i32* %7, align 4
  %8 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %0, i64 0, i32 0
  %9 = bitcast %class.SkFontMgr_Indirect* %1 to %class.SkFontMgr*
  %10 = call %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr* %9, i8* %2, %class.SkFontStyle* nonnull dereferenceable(4) %5) #12
  store %class.SkTypeface* %10, %class.SkTypeface** %8, align 8
  %11 = icmp eq %class.SkTypeface* %10, null
  br i1 %11, label %12, label %29

12:                                               ; preds = %4
  %13 = call %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr* %9, i8* null, %class.SkFontStyle* nonnull dereferenceable(4) %5) #12
  store %class.SkTypeface* %13, %class.SkTypeface** %8, align 8
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %15, label %29

15:                                               ; preds = %12
  %16 = bitcast %struct.SkFontIdentity* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #12
  %17 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %6, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %1, i64 0, i32 2, i32 0
  %19 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %18, align 8
  %20 = bitcast %class.SkRemotableFontMgr* %19 to { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)***
  %21 = load { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)**, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*** %20, align 8
  %22 = getelementptr inbounds { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)** %21, i64 4
  %23 = load { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)** %22, align 8
  %24 = call { i64, i32 } %23(%class.SkRemotableFontMgr* %19, i32 0, %class.SkFontStyle* nonnull dereferenceable(4) %5) #12
  %25 = extractvalue { i64, i32 } %24, 0
  %26 = extractvalue { i64, i32 } %24, 1
  %27 = bitcast %struct.SkFontIdentity* %6 to i64*
  store i64 %25, i64* %27, align 8
  store i32 %26, i32* %17, align 8
  %28 = call %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect* %1, %struct.SkFontIdentity* nonnull dereferenceable(12) %6)
  store %class.SkTypeface* %28, %class.SkTypeface** %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #12
  br label %29

29:                                               ; preds = %4, %12, %15
  ret void
}

declare %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkFontMgr_IndirectD2Ev(%class.SkFontMgr_Indirect*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV18SkFontMgr_Indirect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 4, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %3) #12
  %4 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %15

11:                                               ; preds = %31, %1
  %12 = phi i64 [ %6, %1 ], [ %33, %31 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %40, label %37

15:                                               ; preds = %31, %9
  %16 = phi i64 [ 0, %9 ], [ %32, %31 ]
  %17 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %10, align 8
  %18 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %17, i64 %16, i32 2
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 1
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #12
  br label %31

31:                                               ; preds = %25, %21, %15
  %32 = add nuw nsw i64 %16, 1
  %33 = load i64, i64* %5, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = icmp ult i64 %32, %35
  br i1 %36, label %15, label %11

37:                                               ; preds = %11
  %38 = bitcast %class.SkTArray* %4 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #12
  br label %40

40:                                               ; preds = %11, %37
  %41 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %42 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %41, align 8
  %43 = icmp eq %class.SkRemotableFontMgr* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkRemotableFontMgr, %class.SkRemotableFontMgr* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkRemotableFontMgr* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkRemotableFontMgr* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #12
  br label %54

54:                                               ; preds = %40, %44, %48
  %55 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 1, i32 0
  %56 = load %class.SkFontMgr*, %class.SkFontMgr** %55, align 8
  %57 = icmp eq %class.SkFontMgr* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkFontMgr* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkFontMgr* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  tail call void %67(%class.SkRefCntBase* nonnull %63) #12
  br label %68

68:                                               ; preds = %54, %58, %62
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkFontMgr_IndirectD0Ev(%class.SkFontMgr_Indirect*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV18SkFontMgr_Indirect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 4, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %3) #12
  %4 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %15

11:                                               ; preds = %31, %1
  %12 = phi i64 [ %6, %1 ], [ %33, %31 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %40, label %37

15:                                               ; preds = %31, %9
  %16 = phi i64 [ 0, %9 ], [ %32, %31 ]
  %17 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %10, align 8
  %18 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %17, i64 %16, i32 2
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 1
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #12
  br label %31

31:                                               ; preds = %25, %21, %15
  %32 = add nuw nsw i64 %16, 1
  %33 = load i64, i64* %5, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = icmp ult i64 %32, %35
  br i1 %36, label %15, label %11

37:                                               ; preds = %11
  %38 = bitcast %class.SkTArray* %4 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #12
  br label %40

40:                                               ; preds = %37, %11
  %41 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 2, i32 0
  %42 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %41, align 8
  %43 = icmp eq %class.SkRemotableFontMgr* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkRemotableFontMgr, %class.SkRemotableFontMgr* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkRemotableFontMgr* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkRemotableFontMgr* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #12
  br label %54

54:                                               ; preds = %48, %44, %40
  %55 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %0, i64 0, i32 1, i32 0
  %56 = load %class.SkFontMgr*, %class.SkFontMgr** %55, align 8
  %57 = icmp eq %class.SkFontMgr* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkFontMgr* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkFontMgr* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  tail call void %67(%class.SkRefCntBase* nonnull %63) #12
  br label %68

68:                                               ; preds = %54, %58, %62
  %69 = bitcast %class.SkFontMgr_Indirect* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_ZNK9SkFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle(%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #3 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkStyleSet_IndirectD2Ev(%class.SkStyleSet_Indirect*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkStyleSet_Indirect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** %3, align 8
  %5 = icmp eq %class.SkRemotableFontIdentitySet* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRemotableFontIdentitySet* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRemotableFontIdentitySet* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkFontMgr_Indirect*, %class.SkFontMgr_Indirect** %17, align 8
  %19 = icmp eq %class.SkFontMgr_Indirect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkFontMgr_Indirect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkFontMgr_Indirect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkStyleSet_IndirectD0Ev(%class.SkStyleSet_Indirect*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkStyleSet_Indirect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** %3, align 8
  %5 = icmp eq %class.SkRemotableFontIdentitySet* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRemotableFontIdentitySet* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRemotableFontIdentitySet* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkFontMgr_Indirect*, %class.SkFontMgr_Indirect** %17, align 8
  %19 = icmp eq %class.SkFontMgr_Indirect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkFontMgr_Indirect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkFontMgr_Indirect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.SkStyleSet_Indirect* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN19SkStyleSet_Indirect5countEv(%class.SkStyleSet_Indirect*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 3, i32 0
  %3 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** %2, align 8
  %4 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkStyleSet_Indirect8getStyleEiP11SkFontStyleP8SkString(%class.SkStyleSet_Indirect*, i32, %class.SkFontStyle*, %class.SkString*) unnamed_addr #3 comdat align 2 {
  %5 = icmp eq %class.SkFontStyle* %2, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 3, i32 0
  %8 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %struct.SkFontIdentity*, %struct.SkFontIdentity** %10, align 8
  %12 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %11, i64 %9, i32 2, i32 0
  %13 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %2, i64 0, i32 0
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  br label %15

15:                                               ; preds = %4, %6
  %16 = icmp eq %class.SkString* %3, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  tail call void @_ZN8SkString5resetEv(%class.SkString* nonnull %3) #12
  br label %18

18:                                               ; preds = %15, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZN19SkStyleSet_Indirect14createTypefaceEi(%class.SkStyleSet_Indirect*, i32) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkFontMgr_Indirect*, %class.SkFontMgr_Indirect** %3, align 8
  %5 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 3, i32 0
  %6 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.SkFontIdentity*, %struct.SkFontIdentity** %8, align 8
  %10 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %9, i64 %7
  %11 = tail call %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect* %4, %struct.SkFontIdentity* dereferenceable(12) %10)
  ret %class.SkTypeface* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZN19SkStyleSet_Indirect10matchStyleERK11SkFontStyle(%class.SkStyleSet_Indirect*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %struct.SkFontIdentity, align 8
  %4 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = bitcast %struct.SkFontIdentity* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #12
  %9 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %3, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.SkStyleSet_Indirect, %class.SkStyleSet_Indirect* %0, i64 0, i32 1, i32 0
  %11 = load %class.SkFontMgr_Indirect*, %class.SkFontMgr_Indirect** %10, align 8
  %12 = getelementptr inbounds %class.SkFontMgr_Indirect, %class.SkFontMgr_Indirect* %11, i64 0, i32 2, i32 0
  %13 = load %class.SkRemotableFontMgr*, %class.SkRemotableFontMgr** %12, align 8
  %14 = bitcast %class.SkRemotableFontMgr* %13 to { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)***
  %15 = load { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)**, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*** %14, align 8
  %16 = getelementptr inbounds { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)** %15, i64 4
  %17 = load { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)*, { i64, i32 } (%class.SkRemotableFontMgr*, i32, %class.SkFontStyle*)** %16, align 8
  %18 = tail call { i64, i32 } %17(%class.SkRemotableFontMgr* %13, i32 %5, %class.SkFontStyle* dereferenceable(4) %1) #12
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = extractvalue { i64, i32 } %18, 1
  %21 = bitcast %struct.SkFontIdentity* %3 to i64*
  store i64 %19, i64* %21, align 8
  store i32 %20, i32* %9, align 8
  %22 = load %class.SkFontMgr_Indirect*, %class.SkFontMgr_Indirect** %10, align 8
  %23 = call %class.SkTypeface* @_ZNK18SkFontMgr_Indirect24createTypefaceFromFontIdERK14SkFontIdentity(%class.SkFontMgr_Indirect* %22, %struct.SkFontIdentity* nonnull dereferenceable(12) %3)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #12
  br label %27

24:                                               ; preds = %2
  %25 = bitcast %class.SkStyleSet_Indirect* %0 to %class.SkFontStyleSet*
  %26 = tail call %class.SkTypeface* @_ZN14SkFontStyleSet14matchStyleCSS3ERK11SkFontStyle(%class.SkFontStyleSet* %25, %class.SkFontStyle* dereferenceable(4) %1) #12
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi %class.SkTypeface* [ %23, %7 ], [ %26, %24 ]
  ret %class.SkTypeface* %28
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN8SkString5resetEv(%class.SkString*) local_unnamed_addr #6

declare %class.SkTypeface* @_ZN14SkFontStyleSet14matchStyleCSS3ERK11SkFontStyle(%class.SkFontStyleSet*, %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #6

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #6

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #9

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN18SkFontMgr_Indirect9DataEntryELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %105

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %105, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %93, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %87, %48
  %51 = phi i64 [ 0, %48 ], [ %88, %87 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %"struct.SkFontMgr_Indirect::DataEntry"*
  %55 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %49, align 8
  %56 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %55, i64 %51
  %57 = icmp eq %"struct.SkFontMgr_Indirect::DataEntry"* %56, %54
  br i1 %57, label %72, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %56, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = bitcast i8* %53 to i32*
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %55, i64 %51, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i8, i8* %53, i64 4
  %65 = bitcast i8* %64 to i32*
  store i32 %63, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %55, i64 %51, i32 2
  %67 = bitcast %class.SkTypeface** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %53, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %66, align 8
  %71 = load %"struct.SkFontMgr_Indirect::DataEntry"*, %"struct.SkFontMgr_Indirect::DataEntry"** %49, align 8
  br label %72

72:                                               ; preds = %58, %50
  %73 = phi %"struct.SkFontMgr_Indirect::DataEntry"* [ %55, %50 ], [ %71, %58 ]
  %74 = getelementptr inbounds %"struct.SkFontMgr_Indirect::DataEntry", %"struct.SkFontMgr_Indirect::DataEntry"* %73, i64 %51, i32 2
  %75 = load %class.SkTypeface*, %class.SkTypeface** %74, align 8
  %76 = icmp eq %class.SkTypeface* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %75, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkTypeface* %75 to %class.SkRefCntBase*
  %83 = bitcast %class.SkTypeface* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 1
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  tail call void %86(%class.SkRefCntBase* nonnull %82) #12
  br label %87

87:                                               ; preds = %81, %77, %72
  %88 = add nuw nsw i64 %51, 1
  %89 = load i64, i64* %4, align 8
  %90 = lshr i64 %89, 1
  %91 = and i64 %90, 2147483647
  %92 = icmp ult i64 %88, %91
  br i1 %92, label %50, label %93

93:                                               ; preds = %87, %35
  %94 = phi i64 [ %45, %35 ], [ %89, %87 ]
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  %97 = bitcast %class.SkTArray* %0 to i8**
  br i1 %96, label %101, label %98

98:                                               ; preds = %93
  %99 = load i8*, i8** %97, align 8
  tail call void @_Z7sk_freePv(i8* %99) #12
  %100 = load i64, i64* %4, align 8
  br label %101

101:                                              ; preds = %93, %98
  %102 = phi i64 [ %100, %98 ], [ %94, %93 ]
  store i8* %44, i8** %97, align 8
  %103 = and i64 %102, -4294967298
  %104 = or i64 %103, 1
  store i64 %104, i64* %4, align 8
  br label %105

105:                                              ; preds = %101, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
