; ModuleID = '../../third_party/webrtc/net/dcsctp/packet/chunk/sack_chunk.cc'
source_filename = "../../third_party/webrtc/net/dcsctp/packet/chunk/sack_chunk.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.dcsctp::SackChunk" }
%"class.dcsctp::SackChunk" = type { %"class.dcsctp::Chunk", %"class.dcsctp::StrongAlias", i32, %"class.std::__1::vector", %"class.std::__1::set" }
%"class.dcsctp::Chunk" = type { i32 (...)** }
%"class.dcsctp::StrongAlias" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"*, %"class.std::__1::__compressed_pair" }
%"struct.dcsctp::SackChunk::GapAckBlock" = type { i16, i16 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.dcsctp::SackChunk::GapAckBlock"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"class.dcsctp::BoundedByteReader" }
%"class.dcsctp::BoundedByteReader" = type { %"class.rtc::ArrayView" }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { i8*, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.dcsctp::StrongAlias" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i8*, i8*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.29 }
%union.anon.29 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::StringBuilder" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6dcsctp8TLVTraitINS_15SackChunkConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE = comdat any

$_ZN6dcsctp9SackChunkD2Ev = comdat any

$_ZN6dcsctp9SackChunkD0Ev = comdat any

$_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZN6dcsctp9SackChunk5kTypeE = hidden local_unnamed_addr constant i32 3, align 4
@.str = private unnamed_addr constant [19 x i8] c"SACK, cum_ack_tsn=\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c", a_rwnd=\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c", gap=\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c", dup_tsns=\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZTVN6dcsctp9SackChunkE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dcsctp::SackChunk"*)* @_ZN6dcsctp9SackChunkD2Ev to i8*), i8* bitcast (void (%"class.dcsctp::SackChunk"*)* @_ZN6dcsctp9SackChunkD0Ev to i8*), i8* bitcast (void (%"class.dcsctp::SackChunk"*, %"class.std::__1::vector.17"*)* @_ZNK6dcsctp9SackChunk11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.dcsctp::SackChunk"*)* @_ZNK6dcsctp9SackChunk8ToStringEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6dcsctp9SackChunk5ParseEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.9", align 8
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.std::__1::set", align 8
  %7 = alloca %"class.dcsctp::SackChunk", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::set", align 8
  %10 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = icmp eq i64 %2, 0
  %12 = select i1 %11, i8* null, i8* %1
  call void @_ZN6dcsctp8TLVTraitINS_15SackChunkConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional.9"* nonnull sret %4, i8* %12, i64 %2)
  %13 = load i8, i8* %10, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %union.anon* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 64, i1 false) #9
  br label %591

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw i32 %24, 24
  %26 = getelementptr inbounds i8, i8* %21, i64 5
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %29, %25
  %31 = getelementptr inbounds i8, i8* %21, i64 6
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = or i32 %30, %34
  %36 = getelementptr inbounds i8, i8* %21, i64 7
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %35, %38
  %40 = getelementptr inbounds i8, i8* %21, i64 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw i32 %42, 24
  %44 = getelementptr inbounds i8, i8* %21, i64 9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 16
  %48 = or i32 %47, %43
  %49 = getelementptr inbounds i8, i8* %21, i64 10
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %48, %52
  %54 = getelementptr inbounds i8, i8* %21, i64 11
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  %58 = getelementptr inbounds i8, i8* %21, i64 12
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = shl nuw i16 %60, 8
  %62 = getelementptr inbounds i8, i8* %21, i64 13
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = or i16 %61, %64
  %66 = getelementptr inbounds i8, i8* %21, i64 14
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = shl nuw i16 %68, 8
  %70 = getelementptr inbounds i8, i8* %21, i64 15
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = or i16 %69, %72
  %74 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, -16
  %77 = zext i16 %65 to i64
  %78 = zext i16 %73 to i64
  %79 = add nuw nsw i64 %78, %77
  %80 = shl nuw nsw i64 %79, 2
  %81 = icmp eq i64 %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %19
  %83 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 8
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %union.anon* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 64, i1 false) #9
  br label %591

86:                                               ; preds = %19
  %87 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #9
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 0, i64 24, i1 false) #9
  %91 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %90 to i64*
  %92 = bitcast %"class.std::__1::vector"* %5 to i64*
  %93 = icmp eq i16 %65, 0
  br i1 %93, label %106, label %94

94:                                               ; preds = %86
  %95 = shl nuw nsw i64 %77, 2
  %96 = call i8* @_Znwm(i64 %95) #10
  %97 = bitcast i8* %96 to %"struct.dcsctp::SackChunk::GapAckBlock"*
  %98 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %97, i64 %77
  %99 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %98 to i64
  %100 = insertelement <2 x i8*> undef, i8* %96, i32 0
  %101 = shufflevector <2 x i8*> %100, <2 x i8*> undef, <2 x i32> zeroinitializer
  %102 = ptrtoint <2 x i8*> %101 to <2 x i64>
  %103 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %103, align 16
  store i64 %99, i64* %91, align 16
  %104 = zext i16 %65 to i32
  %105 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %89 to i64*
  br label %121

106:                                              ; preds = %199, %86
  %107 = phi i64 [ 0, %86 ], [ %200, %199 ]
  %108 = bitcast %"class.std::__1::set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #9
  %109 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %113 = bitcast %"class.std::__1::__tree_node_base"** %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %109, align 8
  %114 = zext i16 %73 to i32
  %115 = icmp eq i16 %73, 0
  br i1 %115, label %206, label %116

116:                                              ; preds = %106
  %117 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"**
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %119 = bitcast %"class.std::__1::set"* %6 to i64*
  br label %503

120:                                              ; preds = %203
  call void @llvm.trap() #9
  unreachable

121:                                              ; preds = %94, %203
  %122 = phi i64 [ 0, %94 ], [ %200, %203 ]
  %123 = phi i32 [ 0, %94 ], [ %201, %203 ]
  %124 = add nuw nsw i64 %122, 16
  %125 = load i64, i64* %74, align 8
  %126 = icmp ugt i64 %125, %124
  %127 = load i8*, i8** %20, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 %124
  %129 = select i1 %126, i8* %128, i8* null
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = shl nuw i16 %131, 8
  %133 = getelementptr inbounds i8, i8* %129, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = or i16 %132, %135
  %137 = getelementptr inbounds i8, i8* %129, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i16
  %140 = shl nuw i16 %139, 8
  %141 = getelementptr inbounds i8, i8* %129, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i16
  %144 = or i16 %140, %143
  %145 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %89, align 8
  %146 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %90, align 16
  %147 = icmp ult %"struct.dcsctp::SackChunk::GapAckBlock"* %145, %146
  %148 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %146 to i64
  br i1 %147, label %149, label %154

149:                                              ; preds = %121
  %150 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %145, i64 0, i32 0
  store i16 %136, i16* %150, align 2
  %151 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %145, i64 0, i32 1
  store i16 %144, i16* %151, align 2
  %152 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %145, i64 1
  %153 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %152 to i64
  store i64 %153, i64* %105, align 8
  br label %199

154:                                              ; preds = %121
  %155 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %145 to i64
  %156 = load i64, i64* %92, align 16
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 2
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 4611686018427387903
  br i1 %160, label %161, label %163

161:                                              ; preds = %154
  %162 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %162) #11
  unreachable

163:                                              ; preds = %154
  %164 = sub i64 %148, %156
  %165 = ashr exact i64 %164, 2
  %166 = icmp ult i64 %165, 2305843009213693951
  br i1 %166, label %167, label %175

167:                                              ; preds = %163
  %168 = ashr exact i64 %164, 1
  %169 = icmp ult i64 %168, %159
  %170 = select i1 %169, i64 %159, i64 %168
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %167
  %173 = icmp ugt i64 %170, 4611686018427387903
  br i1 %173, label %174, label %175

174:                                              ; preds = %172
  call void @abort() #11
  unreachable

175:                                              ; preds = %172, %163
  %176 = phi i64 [ %170, %172 ], [ 4611686018427387903, %163 ]
  %177 = shl i64 %176, 2
  %178 = call i8* @_Znwm(i64 %177) #10
  %179 = bitcast i8* %178 to %"struct.dcsctp::SackChunk::GapAckBlock"*
  br label %180

180:                                              ; preds = %175, %167
  %181 = phi i64 [ %176, %175 ], [ 0, %167 ]
  %182 = phi i8* [ %178, %175 ], [ null, %167 ]
  %183 = phi %"struct.dcsctp::SackChunk::GapAckBlock"* [ %179, %175 ], [ null, %167 ]
  %184 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %183, i64 %158
  %185 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %183, i64 %181
  %186 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %185 to i64
  %187 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %184, i64 0, i32 0
  store i16 %136, i16* %187, align 2
  %188 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %183, i64 %158, i32 1
  store i16 %144, i16* %188, align 2
  %189 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %184, i64 1
  %190 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %189 to i64
  %191 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %183 to i64
  %192 = icmp sgt i64 %157, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %180
  %194 = inttoptr i64 %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %182, i8* align 2 %194, i64 %157, i1 false) #9
  br label %195

195:                                              ; preds = %193, %180
  store i64 %191, i64* %92, align 16
  store i64 %190, i64* %105, align 8
  store i64 %186, i64* %91, align 16
  %196 = icmp eq i64 %156, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %156 to i8*
  call void @_ZdlPv(i8* %198) #10
  br label %199

199:                                              ; preds = %197, %195, %149
  %200 = add nuw nsw i64 %122, 4
  %201 = add nuw nsw i32 %123, 1
  %202 = icmp eq i32 %201, %104
  br i1 %202, label %106, label %203

203:                                              ; preds = %199
  %204 = load i8, i8* %10, align 8, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %120, label %121, !prof !3

206:                                              ; preds = %587, %106
  %207 = bitcast %"class.dcsctp::SackChunk"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %207) #9
  %208 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #9
  %209 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %89 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = load i64, i64* %92, align 16
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 2
  %214 = icmp eq i64 %212, 0
  br i1 %214, label %238, label %215

215:                                              ; preds = %206
  %216 = icmp ugt i64 %213, 4611686018427387903
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %218) #11
  unreachable

219:                                              ; preds = %215
  %220 = call i8* @_Znwm(i64 %212) #10
  %221 = bitcast i8* %220 to %"struct.dcsctp::SackChunk::GapAckBlock"*
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %223 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %222 to i8**
  store i8* %220, i8** %223, align 8
  %224 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %220, i8** %224, align 8
  %225 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %221, i64 %213
  %226 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.dcsctp::SackChunk::GapAckBlock"* %225, %"struct.dcsctp::SackChunk::GapAckBlock"** %226, align 8
  %227 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %222 to i64*
  %228 = ptrtoint i8* %220 to i64
  %229 = icmp sgt i64 %212, 0
  %230 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %225 to i64
  br i1 %229, label %231, label %236

231:                                              ; preds = %219
  %232 = lshr exact i64 %212, 2
  %233 = inttoptr i64 %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %220, i8* align 2 %233, i64 %212, i1 false) #9
  %234 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %221, i64 %232
  %235 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %234 to i64
  br label %236

236:                                              ; preds = %231, %219
  %237 = phi i64 [ %235, %231 ], [ %228, %219 ]
  store i64 %237, i64* %227, align 8
  br label %238

238:                                              ; preds = %206, %236
  %239 = phi i64 [ 0, %206 ], [ %230, %236 ]
  %240 = phi i64 [ 0, %206 ], [ %237, %236 ]
  %241 = phi i64 [ 0, %206 ], [ %228, %236 ]
  %242 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0
  %243 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %245 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1
  %246 = bitcast %"class.std::__1::__compressed_pair.1"* %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %244, %"class.std::__1::__tree_end_node"** %243, align 8
  %247 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %248 = icmp eq %"class.std::__1::__tree_end_node"* %247, %112
  %249 = ptrtoint %"class.std::__1::__tree_end_node"* %244 to i64
  br i1 %248, label %401, label %250

250:                                              ; preds = %238
  %251 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %244, i64 0, i32 0
  %252 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %253 = bitcast %"class.std::__1::set"* %9 to i64*
  %254 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %255

255:                                              ; preds = %385, %250
  %256 = phi i64 [ %354, %385 ], [ 0, %250 ]
  %257 = phi %"class.std::__1::__tree_node"* [ %388, %385 ], [ null, %250 ]
  %258 = phi %"class.std::__1::__tree_node_base"* [ %387, %385 ], [ null, %250 ]
  %259 = phi %"class.std::__1::__tree_end_node"* [ %386, %385 ], [ %244, %250 ]
  %260 = phi %"class.std::__1::__tree_end_node"* [ %383, %385 ], [ %247, %250 ]
  %261 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node"*
  %262 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 1
  %263 = icmp eq %"class.std::__1::__tree_end_node"* %259, %244
  br i1 %263, label %291, label %264

264:                                              ; preds = %255
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %258, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %264, %266
  %267 = phi %"class.std::__1::__tree_node_base"* [ %269, %266 ], [ %258, %264 ]
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %267, i64 0, i32 1
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node_base"* %269, null
  br i1 %270, label %282, label %266

271:                                              ; preds = %264, %271
  %272 = phi %"class.std::__1::__tree_end_node"* [ %276, %271 ], [ %244, %264 ]
  %273 = bitcast %"class.std::__1::__tree_end_node"* %272 to %"class.std::__1::__tree_node_base"*
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 2
  %275 = bitcast %"class.std::__1::__tree_end_node"* %274 to %"class.std::__1::__tree_end_node"**
  %276 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %275, align 8
  %277 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %276, i64 0, i32 0
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %277, align 8
  %279 = icmp eq %"class.std::__1::__tree_node_base"* %278, %273
  br i1 %279, label %271, label %280

280:                                              ; preds = %271
  %281 = bitcast %"class.std::__1::__tree_end_node"* %276 to %"class.std::__1::__tree_node_base"*
  br label %282

282:                                              ; preds = %266, %280
  %283 = phi %"class.std::__1::__tree_node_base"* [ %281, %280 ], [ %267, %266 ]
  %284 = ptrtoint %"class.std::__1::__tree_node_base"* %283 to i64
  %285 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %283, i64 0, i32 4, i64 3
  %286 = bitcast i8* %285 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"class.dcsctp::StrongAlias", %"class.dcsctp::StrongAlias"* %262, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = icmp ult i32 %287, %289
  br i1 %290, label %291, label %297

291:                                              ; preds = %282, %255
  %292 = phi i64 [ %284, %282 ], [ %249, %255 ]
  %293 = icmp eq %"class.std::__1::__tree_node_base"* %258, null
  br i1 %293, label %325, label %294

294:                                              ; preds = %291
  %295 = inttoptr i64 %292 to %"class.std::__1::__tree_node_base"*
  %296 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %295, i64 0, i32 1
  br label %325

297:                                              ; preds = %282
  %298 = icmp eq %"class.std::__1::__tree_node"* %257, null
  br i1 %298, label %325, label %299

299:                                              ; preds = %297, %321
  %300 = phi %"class.std::__1::__tree_node"* [ %324, %321 ], [ %257, %297 ]
  %301 = phi %"class.std::__1::__tree_node_base"** [ %323, %321 ], [ %252, %297 ]
  %302 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %300, i64 0, i32 1, i32 0
  %303 = load i32, i32* %302, align 4
  %304 = icmp ult i32 %289, %303
  br i1 %304, label %305, label %311

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %300, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %306, align 8
  %308 = icmp eq %"class.std::__1::__tree_node_base"* %307, null
  br i1 %308, label %309, label %321

309:                                              ; preds = %305
  %310 = ptrtoint %"class.std::__1::__tree_node"* %300 to i64
  br label %325

311:                                              ; preds = %299
  %312 = icmp ult i32 %303, %289
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  %314 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %300, i64 0, i32 0, i32 1
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  %316 = icmp eq %"class.std::__1::__tree_node_base"* %315, null
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = ptrtoint %"class.std::__1::__tree_node"* %300 to i64
  br label %325

319:                                              ; preds = %311
  %320 = ptrtoint %"class.std::__1::__tree_node"* %300 to i64
  br label %325

321:                                              ; preds = %313, %305
  %322 = phi %"class.std::__1::__tree_node_base"* [ %307, %305 ], [ %315, %313 ]
  %323 = phi %"class.std::__1::__tree_node_base"** [ %306, %305 ], [ %314, %313 ]
  %324 = bitcast %"class.std::__1::__tree_node_base"* %322 to %"class.std::__1::__tree_node"*
  br label %299

325:                                              ; preds = %297, %291, %294, %309, %317, %319
  %326 = phi i64 [ %292, %294 ], [ %310, %309 ], [ %318, %317 ], [ %320, %319 ], [ %249, %291 ], [ %249, %297 ]
  %327 = phi %"class.std::__1::__tree_node_base"** [ %296, %294 ], [ %306, %309 ], [ %314, %317 ], [ %301, %319 ], [ %251, %291 ], [ %251, %297 ]
  %328 = bitcast %"class.std::__1::__tree_node_base"** %327 to %"class.std::__1::__tree_node"**
  %329 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node"* %329, null
  br i1 %330, label %331, label %353

331:                                              ; preds = %325
  %332 = call i8* @_Znwm(i64 32) #10, !noalias !4
  %333 = getelementptr inbounds i8, i8* %332, i64 28
  %334 = getelementptr inbounds %"class.dcsctp::StrongAlias", %"class.dcsctp::StrongAlias"* %262, i64 0, i32 0
  %335 = bitcast i8* %333 to i32*
  %336 = load i32, i32* %334, align 4, !noalias !4
  store i32 %336, i32* %335, align 4, !noalias !4
  %337 = bitcast i8* %332 to %"class.std::__1::__tree_node_base"*
  %338 = getelementptr inbounds i8, i8* %332, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 16, i1 false) #9
  %339 = bitcast i8* %338 to i64*
  store i64 %326, i64* %339, align 8
  %340 = bitcast %"class.std::__1::__tree_node_base"** %327 to i8**
  store i8* %332, i8** %340, align 8
  %341 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %243, align 8
  %342 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %341, i64 0, i32 0
  %343 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %342, align 8
  %344 = icmp eq %"class.std::__1::__tree_node_base"* %343, null
  br i1 %344, label %348, label %345

345:                                              ; preds = %331
  %346 = ptrtoint %"class.std::__1::__tree_node_base"* %343 to i64
  store i64 %346, i64* %253, align 8
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  br label %348

348:                                              ; preds = %345, %331
  %349 = phi %"class.std::__1::__tree_node_base"* [ %337, %331 ], [ %347, %345 ]
  %350 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %350, %"class.std::__1::__tree_node_base"* %349) #9
  %351 = load i64, i64* %254, align 8
  %352 = add i64 %351, 1
  store i64 %352, i64* %254, align 8
  br label %353

353:                                              ; preds = %325, %348
  %354 = phi i64 [ %256, %325 ], [ %352, %348 ]
  %355 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 1, i32 0
  %356 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  %357 = icmp eq %"class.std::__1::__tree_node_base"* %356, null
  br i1 %357, label %358, label %366

358:                                              ; preds = %353
  %359 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node_base"*
  %360 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 2
  %361 = bitcast %"class.std::__1::__tree_end_node"* %360 to %"class.std::__1::__tree_end_node"**
  %362 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %361, align 8
  %363 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %362, i64 0, i32 0
  %364 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  %365 = icmp eq %"class.std::__1::__tree_node_base"* %364, %359
  br i1 %365, label %382, label %373

366:                                              ; preds = %353, %366
  %367 = phi %"class.std::__1::__tree_node_base"* [ %369, %366 ], [ %356, %353 ]
  %368 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %367, i64 0, i32 0, i32 0
  %369 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %368, align 8
  %370 = icmp eq %"class.std::__1::__tree_node_base"* %369, null
  br i1 %370, label %371, label %366

371:                                              ; preds = %366
  %372 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %367, i64 0, i32 0
  br label %382

373:                                              ; preds = %358, %373
  %374 = phi %"class.std::__1::__tree_end_node"** [ %377, %373 ], [ %361, %358 ]
  %375 = bitcast %"class.std::__1::__tree_end_node"** %374 to %"class.std::__1::__tree_node_base"**
  %376 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %375, align 8
  %377 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %376, i64 0, i32 2
  %378 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %377, align 8
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %378, i64 0, i32 0
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, %376
  br i1 %381, label %382, label %373

382:                                              ; preds = %373, %371, %358
  %383 = phi %"class.std::__1::__tree_end_node"* [ %372, %371 ], [ %362, %358 ], [ %378, %373 ]
  %384 = icmp eq %"class.std::__1::__tree_end_node"* %383, %112
  br i1 %384, label %389, label %385

385:                                              ; preds = %382
  %386 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %243, align 8
  %387 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %251, align 8
  %388 = bitcast %"class.std::__1::__tree_node_base"* %387 to %"class.std::__1::__tree_node"*
  br label %255

389:                                              ; preds = %382
  %390 = bitcast %"class.std::__1::vector"* %8 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %393 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %396 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = load i64, i64* %253, align 8
  %399 = bitcast %"class.std::__1::__compressed_pair.1"* %245 to i64*
  %400 = load i64, i64* %399, align 8
  br label %401

401:                                              ; preds = %238, %389
  %402 = phi i64 [ %354, %389 ], [ 0, %238 ]
  %403 = phi i64 [ %400, %389 ], [ 0, %238 ]
  %404 = phi i64 [ %398, %389 ], [ %249, %238 ]
  %405 = phi i64 [ %397, %389 ], [ %239, %238 ]
  %406 = phi i64 [ %394, %389 ], [ %240, %238 ]
  %407 = phi i64 [ %391, %389 ], [ %241, %238 ]
  %408 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp9SackChunkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %408, align 8
  %409 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 1, i32 0
  store i32 %39, i32* %409, align 8
  %410 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 2
  store i32 %57, i32* %410, align 4
  %411 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 3
  %412 = bitcast %"class.std::__1::vector"* %411 to i8*
  %413 = bitcast %"class.std::__1::vector"* %411 to i64*
  store i64 %407, i64* %413, align 8
  %414 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %415 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %414 to i64*
  %416 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 3, i32 0, i32 1
  %417 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %416 to i64*
  store i64 %406, i64* %417, align 8
  %418 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %419 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %418 to i64*
  store i64 %405, i64* %419, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #9
  %420 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 4
  %421 = bitcast %"class.std::__1::set"* %420 to i64*
  store i64 %404, i64* %421, align 8
  %422 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 4, i32 0, i32 1
  %423 = bitcast %"class.std::__1::__compressed_pair.1"* %422 to i64*
  store i64 %403, i64* %423, align 8
  %424 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 %402, i64* %424, align 8
  %425 = icmp eq i64 %402, 0
  %426 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br i1 %425, label %427, label %430

427:                                              ; preds = %401
  %428 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %420, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %426, %"class.std::__1::__tree_end_node"** %428, align 8
  %429 = ptrtoint %"class.std::__1::__tree_end_node"* %426 to i64
  br label %440

430:                                              ; preds = %401
  %431 = inttoptr i64 %403 to %"class.std::__1::__tree_node_base"*
  %432 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %431, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %426, %"class.std::__1::__tree_end_node"** %432, align 8
  store %"class.std::__1::__tree_end_node"* %244, %"class.std::__1::__tree_end_node"** %243, align 8
  %433 = bitcast %"class.std::__1::__tree_end_node"* %244 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %433, i8 0, i64 16, i1 false) #9
  %434 = load i64, i64* %413, align 8
  %435 = load i64, i64* %417, align 8
  %436 = load i64, i64* %419, align 8
  %437 = load i64, i64* %421, align 8
  %438 = load i64, i64* %423, align 8
  %439 = load i64, i64* %424, align 8
  br label %440

440:                                              ; preds = %427, %430
  %441 = phi i64 [ %403, %427 ], [ %438, %430 ]
  %442 = phi i64 [ 0, %427 ], [ %439, %430 ]
  %443 = phi i64 [ %429, %427 ], [ %437, %430 ]
  %444 = phi i64 [ %405, %427 ], [ %436, %430 ]
  %445 = phi i64 [ %406, %427 ], [ %435, %430 ]
  %446 = phi i64 [ %407, %427 ], [ %434, %430 ]
  %447 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %447, align 8
  %448 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp9SackChunkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %448, align 8
  %449 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %450 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 1
  %451 = bitcast %"class.dcsctp::StrongAlias"* %450 to i64*
  %452 = bitcast %"class.dcsctp::StrongAlias"* %449 to i64*
  %453 = load i64, i64* %451, align 8
  store i64 %453, i64* %452, align 8
  %454 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %455 = bitcast %"class.std::__1::vector"* %454 to i64*
  store i64 %446, i64* %455, align 8
  %456 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %457 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %456 to i64*
  store i64 %445, i64* %457, align 8
  %458 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %459 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %458 to i64*
  store i64 %444, i64* %459, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %412, i8 0, i64 24, i1 false) #9
  %460 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %461 = bitcast %"class.std::__1::set"* %460 to i64*
  store i64 %443, i64* %461, align 8
  %462 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1
  %463 = bitcast %"class.std::__1::__compressed_pair.1"* %462 to i64*
  store i64 %441, i64* %463, align 8
  %464 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 %442, i64* %464, align 8
  %465 = icmp eq i64 %442, 0
  %466 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br i1 %465, label %467, label %470

467:                                              ; preds = %440
  %468 = inttoptr i64 %441 to %"class.std::__1::__tree_node"*
  %469 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %460, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %466, %"class.std::__1::__tree_end_node"** %469, align 8
  br label %475

470:                                              ; preds = %440
  %471 = inttoptr i64 %441 to %"class.std::__1::__tree_node_base"*
  %472 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %420, i64 0, i32 0, i32 0
  %473 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %471, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %466, %"class.std::__1::__tree_end_node"** %473, align 8
  store %"class.std::__1::__tree_end_node"* %426, %"class.std::__1::__tree_end_node"** %472, align 8
  %474 = bitcast %"class.std::__1::__tree_end_node"* %426 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %474, i8 0, i64 16, i1 false) #9
  br label %475

475:                                              ; preds = %467, %470
  %476 = phi %"class.std::__1::__tree_node"* [ %468, %467 ], [ null, %470 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp9SackChunkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %408, align 8
  %477 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 4, i32 0
  call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %477, %"class.std::__1::__tree_node"* %476) #9
  %478 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %7, i64 0, i32 3, i32 0, i32 0
  %479 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %478, align 8
  %480 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %479, null
  br i1 %480, label %484, label %481

481:                                              ; preds = %475
  %482 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %479 to i64
  store i64 %482, i64* %417, align 8
  %483 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"* %479 to i8*
  call void @_ZdlPv(i8* %483) #10
  br label %484

484:                                              ; preds = %475, %481
  %485 = bitcast %"class.std::__1::__tree_end_node"* %244 to %"class.std::__1::__tree_node"**
  %486 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %485, align 8
  call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %242, %"class.std::__1::__tree_node"* %486) #9
  %487 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %488 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %487, align 8
  %489 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %488, null
  br i1 %489, label %493, label %490

490:                                              ; preds = %484
  %491 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %488 to i64
  store i64 %491, i64* %415, align 8
  %492 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"* %488 to i8*
  call void @_ZdlPv(i8* %492) #10
  br label %493

493:                                              ; preds = %484, %490
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %207) #9
  %494 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  %495 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"**
  %496 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %495, align 8
  call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %494, %"class.std::__1::__tree_node"* %496) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #9
  %497 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %88, align 16
  %498 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %497, null
  br i1 %498, label %502, label %499

499:                                              ; preds = %493
  %500 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %497 to i64
  store i64 %500, i64* %209, align 8
  %501 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"* %497 to i8*
  call void @_ZdlPv(i8* %501) #10
  br label %502

502:                                              ; preds = %493, %499
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #9
  br label %591

503:                                              ; preds = %587, %116
  %504 = phi i32 [ 0, %116 ], [ %589, %587 ]
  %505 = phi i64 [ %107, %116 ], [ %588, %587 ]
  %506 = load i8, i8* %10, align 8, !range !2
  %507 = icmp eq i8 %506, 0
  br i1 %507, label %508, label %509, !prof !3

508:                                              ; preds = %503
  call void @llvm.trap() #9
  unreachable

509:                                              ; preds = %503
  %510 = add nuw nsw i64 %505, 16
  %511 = load i64, i64* %74, align 8
  %512 = icmp ugt i64 %511, %510
  %513 = load i8*, i8** %20, align 8
  %514 = getelementptr inbounds i8, i8* %513, i64 %510
  %515 = select i1 %512, i8* %514, i8* null
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = shl nuw i32 %517, 24
  %519 = getelementptr inbounds i8, i8* %515, i64 1
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = shl nuw nsw i32 %521, 16
  %523 = or i32 %522, %518
  %524 = getelementptr inbounds i8, i8* %515, i64 2
  %525 = load i8, i8* %524, align 1
  %526 = zext i8 %525 to i32
  %527 = shl nuw nsw i32 %526, 8
  %528 = or i32 %523, %527
  %529 = getelementptr inbounds i8, i8* %515, i64 3
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = or i32 %528, %531
  %533 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %117, align 8
  %534 = icmp eq %"class.std::__1::__tree_node"* %533, null
  br i1 %534, label %561, label %535

535:                                              ; preds = %509, %557
  %536 = phi %"class.std::__1::__tree_node"* [ %560, %557 ], [ %533, %509 ]
  %537 = phi %"class.std::__1::__tree_node_base"** [ %559, %557 ], [ %110, %509 ]
  %538 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 1, i32 0
  %539 = load i32, i32* %538, align 4
  %540 = icmp ult i32 %532, %539
  br i1 %540, label %541, label %547

541:                                              ; preds = %535
  %542 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %542, align 8
  %544 = icmp eq %"class.std::__1::__tree_node_base"* %543, null
  br i1 %544, label %545, label %557

545:                                              ; preds = %541
  %546 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 0, i32 0
  br label %561

547:                                              ; preds = %535
  %548 = icmp ult i32 %539, %532
  br i1 %548, label %549, label %555

549:                                              ; preds = %547
  %550 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 0, i32 1
  %551 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %550, align 8
  %552 = icmp eq %"class.std::__1::__tree_node_base"* %551, null
  br i1 %552, label %553, label %557

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 0, i32 0
  br label %561

555:                                              ; preds = %547
  %556 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %536, i64 0, i32 0, i32 0
  br label %561

557:                                              ; preds = %549, %541
  %558 = phi %"class.std::__1::__tree_node_base"* [ %543, %541 ], [ %551, %549 ]
  %559 = phi %"class.std::__1::__tree_node_base"** [ %542, %541 ], [ %550, %549 ]
  %560 = bitcast %"class.std::__1::__tree_node_base"* %558 to %"class.std::__1::__tree_node"*
  br label %535

561:                                              ; preds = %509, %555, %553, %545
  %562 = phi %"class.std::__1::__tree_end_node"* [ %546, %545 ], [ %554, %553 ], [ %556, %555 ], [ %112, %509 ]
  %563 = phi %"class.std::__1::__tree_node_base"** [ %542, %545 ], [ %550, %553 ], [ %537, %555 ], [ %118, %509 ]
  %564 = bitcast %"class.std::__1::__tree_node_base"** %563 to %"class.std::__1::__tree_node"**
  %565 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %564, align 8
  %566 = icmp eq %"class.std::__1::__tree_node"* %565, null
  br i1 %566, label %567, label %587

567:                                              ; preds = %561
  %568 = call i8* @_Znwm(i64 32) #10, !noalias !7
  %569 = getelementptr inbounds i8, i8* %568, i64 28
  %570 = bitcast i8* %569 to i32*
  store i32 %532, i32* %570, align 4, !noalias !7
  %571 = bitcast i8* %568 to %"class.std::__1::__tree_node_base"*
  %572 = getelementptr inbounds i8, i8* %568, i64 16
  %573 = bitcast i8* %572 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %568, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %562, %"class.std::__1::__tree_end_node"** %573, align 8
  %574 = bitcast %"class.std::__1::__tree_node_base"** %563 to i8**
  store i8* %568, i8** %574, align 8
  %575 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %576 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %575, i64 0, i32 0
  %577 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %576, align 8
  %578 = icmp eq %"class.std::__1::__tree_node_base"* %577, null
  br i1 %578, label %582, label %579

579:                                              ; preds = %567
  %580 = ptrtoint %"class.std::__1::__tree_node_base"* %577 to i64
  store i64 %580, i64* %119, align 8
  %581 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %563, align 8
  br label %582

582:                                              ; preds = %579, %567
  %583 = phi %"class.std::__1::__tree_node_base"* [ %571, %567 ], [ %581, %579 ]
  %584 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %584, %"class.std::__1::__tree_node_base"* %583) #9
  %585 = load i64, i64* %111, align 8
  %586 = add i64 %585, 1
  store i64 %586, i64* %111, align 8
  br label %587

587:                                              ; preds = %561, %582
  %588 = add nuw nsw i64 %505, 4
  %589 = add nuw nsw i32 %504, 1
  %590 = icmp eq i32 %589, %114
  br i1 %590, label %206, label %503

591:                                              ; preds = %82, %502, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp8TLVTraitINS_15SackChunkConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional.9"* noalias sret, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 16
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64 %2, i64 16) #9
  %6 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  br label %42

7:                                                ; preds = %3
  %8 = load i8, i8* %1, align 1
  %9 = icmp eq i8 %8, 3
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = zext i8 %8 to i32
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32 %11, i32 3) #9
  %12 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  br label %42

13:                                               ; preds = %7
  %14 = getelementptr inbounds i8, i8* %1, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i16
  %17 = shl nuw i16 %16, 8
  %18 = getelementptr inbounds i8, i8* %1, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = or i16 %17, %20
  %22 = zext i16 %21 to i64
  %23 = icmp ugt i64 %22, %2
  %24 = icmp ult i16 %21, 16
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  tail call void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64 %22, i64 %2) #9
  %27 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 8
  br label %42

28:                                               ; preds = %13
  %29 = sub i64 %2, %22
  %30 = icmp ugt i64 %29, 3
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  tail call void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64 %29) #9
  %32 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  br label %42

33:                                               ; preds = %28
  %34 = and i16 %20, 3
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  tail call void @_ZN6dcsctp14tlv_trait_impl27ReportInvalidLengthMultipleEmm(i64 %22, i64 4) #9
  %37 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 8
  br label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8* %1, i8** %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %41, align 8
  br label %42

42:                                               ; preds = %10, %36, %31, %38, %26, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp9SackChunkD2Ev(%"class.dcsctp::SackChunk"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp9SackChunkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %7, align 8
  %9 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %8 to i64
  %12 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp9SackChunk11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.dcsctp::SackChunk"*, %"class.std::__1::vector.17"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = shl i64 %9, 30
  %15 = ashr exact i64 %14, 30
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 30
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %1, i64 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.17"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = add nsw i64 %17, 16
  %25 = add nsw i64 %24, %15
  %26 = add i64 %25, %23
  %27 = icmp ult i64 %23, %26
  %28 = inttoptr i64 %22 to i8*
  br i1 %27, label %29, label %32

29:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.17"* %1, i64 %25) #9
  %30 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %1, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %36

32:                                               ; preds = %2
  %33 = icmp ugt i64 %23, %26
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %28, i64 %26
  store i8* %35, i8** %18, align 8
  br label %36

36:                                               ; preds = %29, %32, %34
  %37 = phi i8* [ %31, %29 ], [ %28, %32 ], [ %28, %34 ]
  %38 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %1, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds i8, i8* %37, i64 %23
  store i8 3, i8* %39, align 1
  %40 = trunc i64 %25 to i16
  %41 = getelementptr inbounds i8, i8* %39, i64 2
  %42 = lshr i16 %40, 8
  %43 = trunc i16 %42 to i8
  store i8 %43, i8* %41, align 1
  %44 = trunc i64 %25 to i8
  %45 = getelementptr inbounds i8, i8* %39, i64 3
  store i8 %44, i8* %45, align 1
  %46 = load i8*, i8** %38, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %23
  %48 = icmp eq i64 %25, 0
  %49 = select i1 %48, i8* null, i8* %47
  %50 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i8, i8* %49, i64 4
  %53 = lshr i32 %51, 24
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %52, align 1
  %55 = lshr i32 %51, 16
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %49, i64 5
  store i8 %56, i8* %57, align 1
  %58 = lshr i32 %51, 8
  %59 = trunc i32 %58 to i8
  %60 = getelementptr inbounds i8, i8* %49, i64 6
  store i8 %59, i8* %60, align 1
  %61 = trunc i32 %51 to i8
  %62 = getelementptr inbounds i8, i8* %49, i64 7
  store i8 %61, i8* %62, align 1
  %63 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %49, i64 8
  %66 = lshr i32 %64, 24
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %65, align 1
  %68 = lshr i32 %64, 16
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, i8* %49, i64 9
  store i8 %69, i8* %70, align 1
  %71 = lshr i32 %64, 8
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %49, i64 10
  store i8 %72, i8* %73, align 1
  %74 = trunc i32 %64 to i8
  %75 = getelementptr inbounds i8, i8* %49, i64 11
  store i8 %74, i8* %75, align 1
  %76 = getelementptr inbounds i8, i8* %49, i64 12
  %77 = lshr i64 %10, 8
  %78 = trunc i64 %77 to i8
  store i8 %78, i8* %76, align 1
  %79 = trunc i64 %10 to i8
  %80 = getelementptr inbounds i8, i8* %49, i64 13
  store i8 %79, i8* %80, align 1
  %81 = trunc i64 %13 to i16
  %82 = getelementptr inbounds i8, i8* %49, i64 14
  %83 = lshr i16 %81, 8
  %84 = trunc i16 %83 to i8
  store i8 %84, i8* %82, align 1
  %85 = trunc i64 %13 to i8
  %86 = getelementptr inbounds i8, i8* %49, i64 15
  store i8 %85, i8* %86, align 1
  %87 = icmp sgt i32 %11, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %36
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %90 = and i64 %10, 4294967295
  br label %97

91:                                               ; preds = %97, %36
  %92 = phi i64 [ 0, %36 ], [ %119, %97 ]
  %93 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %94, %95
  br i1 %96, label %122, label %123

97:                                               ; preds = %97, %88
  %98 = phi i64 [ 0, %88 ], [ %120, %97 ]
  %99 = phi i64 [ 0, %88 ], [ %119, %97 ]
  %100 = add nuw nsw i64 %99, 16
  %101 = icmp ugt i64 %25, %100
  %102 = getelementptr inbounds i8, i8* %49, i64 %100
  %103 = select i1 %101, i8* %102, i8* null
  %104 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %89, align 8
  %105 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %104, i64 %98, i32 0
  %106 = load i16, i16* %105, align 2
  %107 = lshr i16 %106, 8
  %108 = trunc i16 %107 to i8
  store i8 %108, i8* %103, align 1
  %109 = trunc i16 %106 to i8
  %110 = getelementptr inbounds i8, i8* %103, i64 1
  store i8 %109, i8* %110, align 1
  %111 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %89, align 8
  %112 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %111, i64 %98, i32 1
  %113 = load i16, i16* %112, align 2
  %114 = getelementptr inbounds i8, i8* %103, i64 2
  %115 = lshr i16 %113, 8
  %116 = trunc i16 %115 to i8
  store i8 %116, i8* %114, align 1
  %117 = trunc i16 %113 to i8
  %118 = getelementptr inbounds i8, i8* %103, i64 3
  store i8 %117, i8* %118, align 1
  %119 = add nuw nsw i64 %99, 4
  %120 = add nuw nsw i64 %98, 1
  %121 = icmp eq i64 %120, %90
  br i1 %121, label %91, label %97

122:                                              ; preds = %171, %91
  ret void

123:                                              ; preds = %91, %171
  %124 = phi i64 [ %143, %171 ], [ %92, %91 ]
  %125 = phi %"class.std::__1::__tree_end_node"* [ %172, %171 ], [ %94, %91 ]
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_node"*
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %126, i64 0, i32 1, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = add i64 %124, 16
  %130 = icmp ugt i64 %25, %129
  %131 = getelementptr inbounds i8, i8* %49, i64 %129
  %132 = select i1 %130, i8* %131, i8* null
  %133 = lshr i32 %128, 24
  %134 = trunc i32 %133 to i8
  store i8 %134, i8* %132, align 1
  %135 = lshr i32 %128, 16
  %136 = trunc i32 %135 to i8
  %137 = getelementptr inbounds i8, i8* %132, i64 1
  store i8 %136, i8* %137, align 1
  %138 = lshr i32 %128, 8
  %139 = trunc i32 %138 to i8
  %140 = getelementptr inbounds i8, i8* %132, i64 2
  store i8 %139, i8* %140, align 1
  %141 = trunc i32 %128 to i8
  %142 = getelementptr inbounds i8, i8* %132, i64 3
  store i8 %141, i8* %142, align 1
  %143 = add i64 %124, 4
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 1, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %155

147:                                              ; preds = %123
  %148 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_node_base"*
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 2
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to %"class.std::__1::__tree_end_node"**
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, %148
  br i1 %154, label %171, label %162

155:                                              ; preds = %123, %155
  %156 = phi %"class.std::__1::__tree_node_base"* [ %158, %155 ], [ %145, %123 ]
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %160, label %155

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 0
  br label %171

162:                                              ; preds = %147, %162
  %163 = phi %"class.std::__1::__tree_end_node"** [ %166, %162 ], [ %150, %147 ]
  %164 = bitcast %"class.std::__1::__tree_end_node"** %163 to %"class.std::__1::__tree_node_base"**
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 2
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, %165
  br i1 %170, label %171, label %162

171:                                              ; preds = %162, %147, %160
  %172 = phi %"class.std::__1::__tree_end_node"* [ %161, %160 ], [ %151, %147 ], [ %167, %162 ]
  %173 = icmp eq %"class.std::__1::__tree_end_node"* %172, %95
  br i1 %173, label %122, label %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp9SackChunk8ToStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.dcsctp::SackChunk"* readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.rtc::StringBuilder", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.rtc::StringBuilder", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.rtc::StringBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %9, i64 0, i32 0
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i64 18) #9
  %14 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* nonnull sret %8, i32 %15) #9
  %17 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %19 to i64
  %26 = select i1 %20, i8* %22, i8* %16
  %27 = select i1 %20, i64 %24, i64 %25
  %28 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %26, i64 %27) #9
  %29 = load i8, i8* %18, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %2
  %32 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %2, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #9
  %35 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  call void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* nonnull sret %7, i32 %36) #9
  %38 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %40 to i64
  %47 = select i1 %41, i8* %43, i8* %37
  %48 = select i1 %41, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %47, i64 %48) #9
  %50 = load i8, i8* %39, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %33
  %53 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %33, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  %55 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %55, align 8
  %57 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 3, i32 0, i32 1
  %58 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %57, align 8
  %59 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %56, %58
  br i1 %59, label %71, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %75

71:                                               ; preds = %113, %54
  %72 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %211, label %116

75:                                               ; preds = %60, %113
  %76 = phi %"struct.dcsctp::SackChunk::GapAckBlock"* [ %56, %60 ], [ %114, %113 ]
  %77 = load i32, i32* %14, align 4
  %78 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %76, i64 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add i32 %77, %80
  %82 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %76, i64 0, i32 0
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add i32 %77, %84
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  call void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %85) #9
  %87 = load i8, i8* %63, align 1
  %88 = icmp slt i8 %87, 0
  %89 = load i8*, i8** %64, align 8
  %90 = load i64, i64* %65, align 8
  %91 = zext i8 %87 to i64
  %92 = select i1 %88, i8* %89, i8* %61
  %93 = select i1 %88, i64 %90, i64 %91
  %94 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %92, i64 %93) #9
  %95 = load i8, i8* %63, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %75
  %98 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %75, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  call void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* nonnull sret %3, i32 %81) #9
  %101 = load i8, i8* %68, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %69, align 8
  %104 = load i64, i64* %70, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i8* %103, i8* %66
  %107 = select i1 %102, i64 %104, i64 %105
  %108 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %106, i64 %107) #9
  %109 = load i8, i8* %68, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %99
  %112 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %112) #10
  br label %113

113:                                              ; preds = %99, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  %114 = getelementptr inbounds %"struct.dcsctp::SackChunk::GapAckBlock", %"struct.dcsctp::SackChunk::GapAckBlock"* %76, i64 1
  %115 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %114, %58
  br i1 %115, label %71, label %75

116:                                              ; preds = %71
  %117 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #9
  %118 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #9
  %119 = bitcast %"class.rtc::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #9, !noalias !10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #9, !noalias !10
  %120 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 4, i32 0, i32 0
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8, !noalias !10
  %122 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %123 = icmp eq %"class.std::__1::__tree_end_node"* %121, %122
  br i1 %123, label %185, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %6, i64 0, i32 0
  %126 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %127 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %131

131:                                              ; preds = %182, %124
  %132 = phi i32 [ 0, %124 ], [ %154, %182 ]
  %133 = phi %"class.std::__1::__tree_end_node"* [ %121, %124 ], [ %183, %182 ]
  %134 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node"*
  %135 = icmp eq i32 %132, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #9, !noalias !10
  br label %138

138:                                              ; preds = %136, %131
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %134, i64 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4, !noalias !10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #9, !noalias !10
  call void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* nonnull sret %5, i32 %140) #9, !noalias !10
  %141 = load i8, i8* %128, align 1, !noalias !10
  %142 = icmp slt i8 %141, 0
  %143 = load i8*, i8** %129, align 8, !noalias !10
  %144 = load i64, i64* %130, align 8, !noalias !10
  %145 = zext i8 %141 to i64
  %146 = select i1 %142, i8* %143, i8* %126
  %147 = select i1 %142, i64 %144, i64 %145
  %148 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %125, i8* %146, i64 %147) #9, !noalias !10
  %149 = load i8, i8* %128, align 1, !noalias !10
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %138
  %152 = load i8*, i8** %129, align 8, !noalias !10
  call void @_ZdlPv(i8* %152) #10, !noalias !10
  br label %153

153:                                              ; preds = %151, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #9, !noalias !10
  %154 = add nuw nsw i32 %132, 1
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 1, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8, !noalias !10
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, null
  br i1 %157, label %158, label %166

158:                                              ; preds = %153
  %159 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node_base"*
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 2
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_end_node"**
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8, !noalias !10
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8, !noalias !10
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %159
  br i1 %165, label %182, label %173

166:                                              ; preds = %153, %166
  %167 = phi %"class.std::__1::__tree_node_base"* [ %169, %166 ], [ %156, %153 ]
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8, !noalias !10
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %166

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0
  br label %182

173:                                              ; preds = %158, %173
  %174 = phi %"class.std::__1::__tree_end_node"** [ %177, %173 ], [ %161, %158 ]
  %175 = bitcast %"class.std::__1::__tree_end_node"** %174 to %"class.std::__1::__tree_node_base"**
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8, !noalias !10
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 2
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8, !noalias !10
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 0, i32 0
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %179, align 8, !noalias !10
  %181 = icmp eq %"class.std::__1::__tree_node_base"* %180, %176
  br i1 %181, label %182, label %173

182:                                              ; preds = %173, %171, %158
  %183 = phi %"class.std::__1::__tree_end_node"* [ %172, %171 ], [ %162, %158 ], [ %178, %173 ]
  %184 = icmp eq %"class.std::__1::__tree_end_node"* %183, %122
  br i1 %184, label %185, label %131

185:                                              ; preds = %182, %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* nonnull align 8 %119, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #9, !noalias !10
  %186 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %185
  %191 = zext i8 %188 to i64
  %192 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  br label %200

193:                                              ; preds = %185
  %194 = bitcast %"class.std::__1::basic_string"* %10 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = icmp sgt i64 %197, -1
  br i1 %198, label %200, label %199, !prof !13

199:                                              ; preds = %193
  call void @llvm.trap() #9
  unreachable

200:                                              ; preds = %190, %193
  %201 = phi i64 [ %195, %193 ], [ %192, %190 ]
  %202 = phi i64 [ %197, %193 ], [ %191, %190 ]
  %203 = inttoptr i64 %201 to i8*
  %204 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %203, i64 %202) #9
  %205 = load i8, i8* %187, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #10
  br label %210

210:                                              ; preds = %200, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #9
  br label %211

211:                                              ; preds = %71, %210
  %212 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* nonnull align 8 %11, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp9SackChunkD0Ev(%"class.dcsctp::SackChunk"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp9SackChunkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"struct.dcsctp::SackChunk::GapAckBlock"*, %"struct.dcsctp::SackChunk::GapAckBlock"** %7, align 8
  %9 = icmp eq %"struct.dcsctp::SackChunk::GapAckBlock"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.dcsctp::SackChunk::GapAckBlock"* %8 to i64
  %12 = getelementptr inbounds %"class.dcsctp::SackChunk", %"class.dcsctp::SackChunk"* %0, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.dcsctp::SackChunk::GapAckBlock"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.dcsctp::SackChunk"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZN3rtc8ToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64, i64) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32, i32) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64, i64) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl27ReportInvalidLengthMultipleEmm(i64, i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.17"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIN6dcsctp11StrongAliasINS1_6TSNTagEjEENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN6dcsctp7StrJoinINSt3__13setINS_11StrongAliasINS_6TSNTagEjEENS1_4lessIS5_EENS1_9allocatorIS5_EEEEZNKS_9SackChunk8ToStringEvE3$_0EENS1_12basic_stringIcNS1_11char_traitsIcEENS8_IcEEEERKT_N4absl11string_viewERKT0_: argument 0"}
!12 = distinct !{!12, !"_ZN6dcsctp7StrJoinINSt3__13setINS_11StrongAliasINS_6TSNTagEjEENS1_4lessIS5_EENS1_9allocatorIS5_EEEEZNKS_9SackChunk8ToStringEvE3$_0EENS1_12basic_stringIcNS1_11char_traitsIcEENS8_IcEEEERKT_N4absl11string_viewERKT0_"}
!13 = !{!"branch_weights", i32 2000, i32 1}
