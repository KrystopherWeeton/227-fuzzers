; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLExtensions.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLExtensions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLExtensions = type { i8, %class.SkTArray }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrGLFunction = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.1 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.2 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.3 = type { i8* (i8*, i8*, i32)*, [4 x i64] }
%class.SkJSONWriter = type { i8*, i8*, i8*, %class.SkWStream*, i32, i32, %class.SkSTArray, %class.SkSTArray.5 }
%class.SkWStream = type { i32 (...)** }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.4 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.4 = type { i32*, i64 }
%class.SkSTArray.5 = type { %class.SkAlignedSTStorage.6, %class.SkTArray.7 }
%class.SkAlignedSTStorage.6 = type { [16 x i8] }
%class.SkTArray.7 = type { i8*, i64 }

$_ZN8SkTArrayI8SkStringLb0EEaSERKS1_ = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_Z12SkTIntroSortI8SkStringFbRKS0_S2_EEviPT_iRKT0_ = comdat any

$_Z20SkTHeapSort_SiftDownI8SkStringFbRKS0_S2_EEvPT_mmRKT0_ = comdat any

$_Z18SkTHeapSort_SiftUpI8SkStringFbRKS0_S2_EEvPT_mmRKT0_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c" \00", align 1

@_ZN14GrGLExtensionsC1ERKS_ = hidden unnamed_addr alias void (%class.GrGLExtensions*, %class.GrGLExtensions*), void (%class.GrGLExtensions*, %class.GrGLExtensions*)* @_ZN14GrGLExtensionsC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrGLExtensionsC2ERKS_(%class.GrGLExtensions*, %class.GrGLExtensions* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  store %class.SkString* null, %class.SkString** %6, align 8
  store i64 1, i64* %5, align 8
  %7 = icmp eq %class.GrGLExtensions* %0, %1
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %1, i64 0, i32 1
  %10 = tail call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayI8SkStringLb0EEaSERKS1_(%class.SkTArray* %4, %class.SkTArray* dereferenceable(16) %9) #8
  %11 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  store i8 %12, i8* %3, align 8
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.GrGLExtensions* @_ZN14GrGLExtensionsaSERKS_(%class.GrGLExtensions* returned, %class.GrGLExtensions* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.GrGLExtensions* %0, %1
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %1, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %7 = tail call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayI8SkStringLb0EEaSERKS1_(%class.SkTArray* %6, %class.SkTArray* dereferenceable(16) %5)
  %8 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 0
  store i8 %9, i8* %10, align 8
  br label %11

11:                                               ; preds = %2, %4
  ret %class.GrGLExtensions* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayI8SkStringLb0EEaSERKS1_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %48, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %39

11:                                               ; preds = %39, %4
  %12 = phi i64 [ %6, %4 ], [ %44, %39 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  %25 = load %class.SkString*, %class.SkString** %24, align 8
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %34, %29 ]
  %31 = load %class.SkString*, %class.SkString** %28, align 8
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %31, i64 %30
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 %30
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %32, %class.SkString* dereferenceable(8) %33) #8
  %34 = add nuw nsw i64 %30, 1
  %35 = load i64, i64* %5, align 8
  %36 = lshr i64 %35, 1
  %37 = and i64 %36, 2147483647
  %38 = icmp ult i64 %34, %37
  br i1 %38, label %29, label %48

39:                                               ; preds = %9, %39
  %40 = phi i64 [ 0, %9 ], [ %43, %39 ]
  %41 = load %class.SkString*, %class.SkString** %10, align 8
  %42 = getelementptr inbounds %class.SkString, %class.SkString* %41, i64 %40
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %42) #8
  %43 = add nuw nsw i64 %40, 1
  %44 = load i64, i64* %5, align 8
  %45 = lshr i64 %44, 1
  %46 = and i64 %45, 2147483647
  %47 = icmp ult i64 %43, %46
  br i1 %47, label %39, label %11

48:                                               ; preds = %29, %11, %2
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14GrGLExtensions4initE12GrGLStandard12GrGLFunctionIFPKhjEES1_IFS3_jjEES1_IFvjPiEES1_IFPKcPviEESD_(%class.GrGLExtensions*, i32, %class.GrGLFunction* byval(%class.GrGLFunction) align 8, %class.GrGLFunction.1* byval(%class.GrGLFunction.1) align 8, %class.GrGLFunction.2* byval(%class.GrGLFunction.2) align 8, %class.GrGLFunction.3* byval(%class.GrGLFunction.3) align 8, i8*) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 2147483647
  %16 = and i64 %12, -4294967295
  store i64 %16, i64* %11, align 8
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %10, i64 0, i32 0
  %20 = load %class.SkString*, %class.SkString** %19, align 8
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #8
  %21 = icmp eq i32 %15, 1
  br i1 %21, label %34, label %22

22:                                               ; preds = %18, %22
  %23 = phi i32 [ %32, %22 ], [ 1, %18 ]
  %24 = load i64, i64* %11, align 8
  %25 = load %class.SkString*, %class.SkString** %19, align 8
  %26 = lshr i64 %24, 1
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, 2147483647
  %29 = add nuw nsw i32 %28, %23
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 %30
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %31) #8
  %32 = add nuw nsw i32 %23, 1
  %33 = icmp eq i32 %32, %15
  br i1 %33, label %34, label %22

34:                                               ; preds = %22, %7, %18
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %10, i32 0, i32 2) #8
  %35 = load i64, i64* %11, align 8
  %36 = and i64 %35, -4294967297
  store i64 %36, i64* %11, align 8
  %37 = getelementptr inbounds %class.GrGLFunction, %class.GrGLFunction* %2, i64 0, i32 0
  %38 = load i8* (i8*, i32)*, i8* (i8*, i32)** %37, align 8
  %39 = icmp eq i8* (i8*, i32)* %38, null
  br i1 %39, label %186, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.GrGLFunction, %class.GrGLFunction* %2, i64 0, i32 1, i64 0
  %42 = bitcast i64* %41 to i8*
  %43 = call i8* %38(i8* %42, i32 7938) #8
  %44 = call i32 @_Z24GrGLGetVersionFromStringPKc(i8* %43) #8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %186, label %46

46:                                               ; preds = %40
  %47 = add i32 %1, -1
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = icmp ugt i32 %44, 196607
  br i1 %50, label %55, label %107

51:                                               ; preds = %46
  %52 = icmp eq i32 %1, 3
  %53 = icmp ugt i32 %44, 131071
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %107

55:                                               ; preds = %49, %51
  %56 = getelementptr inbounds %class.GrGLFunction.1, %class.GrGLFunction.1* %3, i64 0, i32 0
  %57 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %56, align 8
  %58 = icmp eq i8* (i8*, i32, i32)* %57, null
  br i1 %58, label %186, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.GrGLFunction.2, %class.GrGLFunction.2* %4, i64 0, i32 0
  %61 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %60, align 8
  %62 = icmp eq void (i8*, i32, i32*)* %61, null
  br i1 %62, label %186, label %63

63:                                               ; preds = %59
  %64 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #8
  store i32 0, i32* %8, align 4
  %65 = getelementptr inbounds %class.GrGLFunction.2, %class.GrGLFunction.2* %4, i64 0, i32 1, i64 0
  %66 = bitcast i64* %65 to i8*
  call void %61(i8* %66, i32 33309, i32* nonnull %8) #8
  %67 = load i32, i32* %8, align 4
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %10, i32 %67, i32 1) #8
  %68 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %10, i64 0, i32 0
  %69 = load %class.SkString*, %class.SkString** %68, align 8
  %70 = load i64, i64* %11, align 8
  %71 = lshr i64 %70, 1
  %72 = trunc i64 %71 to i32
  %73 = and i64 %71, 2147483647
  %74 = getelementptr inbounds %class.SkString, %class.SkString* %69, i64 %73
  %75 = add i32 %67, %72
  %76 = shl i32 %75, 1
  %77 = zext i32 %76 to i64
  %78 = and i64 %70, -4294967295
  %79 = or i64 %78, %77
  store i64 %79, i64* %11, align 8
  %80 = icmp sgt i32 %67, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %63
  %82 = zext i32 %67 to i64
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %86, %83 ]
  %85 = getelementptr inbounds %class.SkString, %class.SkString* %74, i64 %84
  call void @_ZN8SkStringC1Ev(%class.SkString* %85) #8
  %86 = add nuw nsw i64 %84, 1
  %87 = icmp eq i64 %86, %82
  br i1 %87, label %88, label %83

88:                                               ; preds = %83, %63
  %89 = load i32, i32* %8, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.GrGLFunction.1, %class.GrGLFunction.1* %3, i64 0, i32 1, i64 0
  %93 = bitcast i64* %92 to i8*
  br label %95

94:                                               ; preds = %95, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #8
  br label %132

95:                                               ; preds = %91, %95
  %96 = phi i64 [ 0, %91 ], [ %103, %95 ]
  %97 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %56, align 8
  %98 = trunc i64 %96 to i32
  %99 = call i8* %97(i8* %93, i32 7939, i32 %98) #8
  %100 = load %class.SkString*, %class.SkString** %68, align 8
  %101 = getelementptr inbounds %class.SkString, %class.SkString* %100, i64 %96
  %102 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %101, i8* %99) #8
  %103 = add nuw nsw i64 %96, 1
  %104 = load i32, i32* %8, align 4
  %105 = sext i32 %104 to i64
  %106 = icmp slt i64 %103, %105
  br i1 %106, label %95, label %94

107:                                              ; preds = %49, %51
  %108 = load i8* (i8*, i32)*, i8* (i8*, i32)** %37, align 8
  %109 = call i8* %108(i8* %42, i32 7939) #8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %186, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %10, i64 0, i32 0
  br label %113

113:                                              ; preds = %118, %111
  %114 = phi i8* [ %109, %111 ], [ %119, %118 ]
  %115 = load i8, i8* %114, align 1
  switch i8 %115, label %120 [
    i8 32, label %116
    i8 0, label %132
  ]

116:                                              ; preds = %113
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  br label %118

118:                                              ; preds = %116, %120
  %119 = phi i8* [ %117, %116 ], [ %131, %120 ]
  br label %113

120:                                              ; preds = %113
  %121 = call i64 @strcspn(i8* %114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #9
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %10, i32 1, i32 1) #8
  %122 = load %class.SkString*, %class.SkString** %112, align 8
  %123 = load i64, i64* %11, align 8
  %124 = lshr i64 %123, 1
  %125 = and i64 %124, 2147483647
  %126 = getelementptr inbounds %class.SkString, %class.SkString* %122, i64 %125
  %127 = add i64 %123, 2
  %128 = and i64 %127, 4294967294
  %129 = and i64 %123, -4294967295
  %130 = or i64 %128, %129
  store i64 %130, i64* %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* %126) #8
  call void @_ZN8SkString3setEPKcm(%class.SkString* %126, i8* %114, i64 %121) #8
  %131 = getelementptr inbounds i8, i8* %114, i64 %121
  br label %118

132:                                              ; preds = %113, %94
  %133 = getelementptr inbounds %class.GrGLFunction.3, %class.GrGLFunction.3* %5, i64 0, i32 0
  %134 = load i8* (i8*, i8*, i32)*, i8* (i8*, i8*, i32)** %133, align 8
  %135 = icmp eq i8* (i8*, i8*, i32)* %134, null
  br i1 %135, label %162, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %class.GrGLFunction.3, %class.GrGLFunction.3* %5, i64 0, i32 1, i64 0
  %138 = bitcast i64* %137 to i8*
  %139 = call i8* %134(i8* %138, i8* %6, i32 12373) #8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %162, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %10, i64 0, i32 0
  br label %143

143:                                              ; preds = %148, %141
  %144 = phi i8* [ %139, %141 ], [ %149, %148 ]
  %145 = load i8, i8* %144, align 1
  switch i8 %145, label %150 [
    i8 32, label %146
    i8 0, label %162
  ]

146:                                              ; preds = %143
  %147 = getelementptr inbounds i8, i8* %144, i64 1
  br label %148

148:                                              ; preds = %146, %150
  %149 = phi i8* [ %147, %146 ], [ %161, %150 ]
  br label %143

150:                                              ; preds = %143
  %151 = call i64 @strcspn(i8* %144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #9
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %10, i32 1, i32 1) #8
  %152 = load %class.SkString*, %class.SkString** %142, align 8
  %153 = load i64, i64* %11, align 8
  %154 = lshr i64 %153, 1
  %155 = and i64 %154, 2147483647
  %156 = getelementptr inbounds %class.SkString, %class.SkString* %152, i64 %155
  %157 = add i64 %153, 2
  %158 = and i64 %157, 4294967294
  %159 = and i64 %153, -4294967295
  %160 = or i64 %158, %159
  store i64 %160, i64* %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* %156) #8
  call void @_ZN8SkString3setEPKcm(%class.SkString* %156, i8* %144, i64 %151) #8
  %161 = getelementptr inbounds i8, i8* %144, i64 %151
  br label %148

162:                                              ; preds = %143, %132, %136
  %163 = load i64, i64* %11, align 8
  %164 = and i64 %163, 4294967294
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %185, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %10, i64 0, i32 0
  %168 = load %class.SkString*, %class.SkString** %167, align 8
  %169 = icmp eq %class.SkString* %168, null
  %170 = lshr i64 %163, 1
  %171 = and i64 %170, 2147483647
  %172 = getelementptr inbounds %class.SkString, %class.SkString* %168, i64 %171
  %173 = select i1 %169, %class.SkString* null, %class.SkString* %172
  %174 = ptrtoint %class.SkString* %173 to i64
  %175 = ptrtoint %class.SkString* %168 to i64
  %176 = sub i64 %174, %175
  %177 = lshr exact i64 %176, 3
  %178 = trunc i64 %177 to i32
  %179 = icmp slt i32 %178, 2
  br i1 %179, label %185, label %180

180:                                              ; preds = %166
  %181 = add nsw i32 %178, -2
  %182 = call i32 @llvm.ctlz.i32(i32 %181, i1 false) #8, !range !3
  %183 = shl nuw nsw i32 %182, 1
  %184 = sub nsw i32 64, %183
  call void @_Z12SkTIntroSortI8SkStringFbRKS0_S2_EEviPT_iRKT0_(i32 %184, %class.SkString* %168, i32 %178, i1 (%class.SkString*, %class.SkString*)* nonnull @_ZN12_GLOBAL__N_117extension_compareERK8SkStringS2_) #8
  br label %185

185:                                              ; preds = %180, %166, %162
  store i8 1, i8* %9, align 8
  br label %186

186:                                              ; preds = %59, %55, %34, %40, %107, %185
  %187 = phi i1 [ false, %34 ], [ false, %40 ], [ true, %185 ], [ false, %59 ], [ false, %55 ], [ false, %107 ]
  ret i1 %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_Z24GrGLGetVersionFromStringPKc(i8*) local_unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_117extension_compareERK8SkStringS2_(%class.SkString* nocapture readonly dereferenceable(8), %class.SkString* nocapture readonly dereferenceable(8)) #3 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %7, i64 0, i32 2
  %9 = tail call i32 @strcmp(i8* %5, i8* %8) #9
  %10 = icmp slt i32 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %4 = tail call fastcc i32 @_ZL11find_stringRK8SkTArrayI8SkStringLb0EEPKc(%class.SkTArray* dereferenceable(16) %3, i8* %1)
  %5 = icmp sgt i32 %4, -1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL11find_stringRK8SkTArrayI8SkStringLb0EEPKc(%class.SkTArray* nocapture readonly dereferenceable(16), i8*) unnamed_addr #0 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %57, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %10, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %3, i8* %1) #8
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  %12 = load %class.SkString*, %class.SkString** %11, align 8
  %13 = load i64, i64* %4, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %55, label %18

18:                                               ; preds = %8
  %19 = add nsw i32 %16, -1
  %20 = icmp sgt i32 %19, 0
  %21 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %10, align 8
  br i1 %20, label %22, label %40

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 2
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %38, %24 ]
  %26 = phi i32 [ %19, %22 ], [ %37, %24 ]
  %27 = sub nsw i32 %26, %25
  %28 = ashr i32 %27, 1
  %29 = add nsw i32 %28, %25
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %12, i64 %30, i32 0, i32 0
  %32 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %31, align 8
  %33 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %32, i64 0, i32 2
  %34 = call i32 @strcmp(i8* %33, i8* %23) #9
  %35 = icmp slt i32 %34, 0
  %36 = add nsw i32 %29, 1
  %37 = select i1 %35, i32 %26, i32 %29
  %38 = select i1 %35, i32 %36, i32 %25
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %24, label %40

40:                                               ; preds = %24, %18
  %41 = phi i32 [ 0, %18 ], [ %37, %24 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.SkString, %class.SkString* %12, i64 %42, i32 0, i32 0
  %44 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %43, align 8
  %45 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %44, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %21, i64 0, i32 2
  %47 = call i32 @strcmp(i8* %45, i8* %46) #9
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %40
  %50 = sub i32 -2, %41
  br label %55

51:                                               ; preds = %40
  %52 = call i32 @strcmp(i8* %46, i8* %45) #9
  %53 = ashr i32 %52, 31
  %54 = xor i32 %53, %41
  br label %55

55:                                               ; preds = %8, %49, %51
  %56 = phi i32 [ %54, %51 ], [ -1, %8 ], [ %50, %49 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %57

57:                                               ; preds = %2, %55
  %58 = phi i32 [ %56, %55 ], [ -1, %2 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14GrGLExtensions6removeEPKc(%class.GrGLExtensions* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %5 = tail call fastcc i32 @_ZL11find_stringRK8SkTArrayI8SkStringLb0EEPKc(%class.SkTArray* dereferenceable(16) %4, i8* %1)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = add nsw i32 %12, -1
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = and i64 %9, -4294967295
  %17 = or i64 %16, %15
  store i64 %17, i64* %8, align 8
  %18 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  %19 = load %class.SkString*, %class.SkString** %18, align 8
  %20 = sext i32 %5 to i64
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %19, i64 %20
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #8
  %22 = icmp eq i32 %13, %5
  br i1 %22, label %30, label %23

23:                                               ; preds = %7
  %24 = load %class.SkString*, %class.SkString** %18, align 8
  %25 = getelementptr inbounds %class.SkString, %class.SkString* %24, i64 %20
  %26 = sext i32 %13 to i64
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %24, i64 %26
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %25, %class.SkString* dereferenceable(8) %27) #8
  %28 = load %class.SkString*, %class.SkString** %18, align 8
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %28, i64 %26
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %29) #8
  br label %30

30:                                               ; preds = %7, %23
  %31 = load i64, i64* %8, align 8
  %32 = lshr i64 %31, 1
  %33 = trunc i64 %32 to i32
  %34 = and i32 %33, 2147483647
  %35 = icmp eq i32 %34, %5
  br i1 %35, label %78, label %36

36:                                               ; preds = %30
  %37 = load %class.SkString*, %class.SkString** %18, align 8
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %37, i64 %20
  %39 = sub nsw i32 %34, %5
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, -1
  %42 = getelementptr inbounds %class.SkString, %class.SkString* %38, i64 %41
  %43 = icmp slt i32 %39, 2
  br i1 %43, label %78, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %class.SkString, %class.SkString* %38, i64 1
  %46 = bitcast %class.SkString* %3 to i8*
  %47 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %75, %44
  %49 = phi %class.SkString* [ %45, %44 ], [ %76, %75 ]
  %50 = phi %class.SkString* [ %38, %44 ], [ %49, %75 ]
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %49, i64 0, i32 0, i32 0
  %52 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %52, i64 0, i32 2
  %54 = getelementptr inbounds %class.SkString, %class.SkString* %50, i64 0, i32 0, i32 0
  %55 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %54, align 8
  %56 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %55, i64 0, i32 2
  %57 = call i32 @strcmp(i8* %53, i8* %56) #9
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %75

59:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %47, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* dereferenceable(8) %49) #8
  br label %60

60:                                               ; preds = %65, %59
  %61 = phi %class.SkString* [ %49, %59 ], [ %62, %65 ]
  %62 = getelementptr inbounds %class.SkString, %class.SkString* %61, i64 -1
  %63 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %61, %class.SkString* dereferenceable(8) %62) #8
  %64 = icmp ugt %class.SkString* %62, %38
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %47, align 8
  %67 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %66, i64 0, i32 2
  %68 = getelementptr inbounds %class.SkString, %class.SkString* %61, i64 -2, i32 0, i32 0
  %69 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %68, align 8
  %70 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %69, i64 0, i32 2
  %71 = call i32 @strcmp(i8* %67, i8* %70) #9
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %60, label %73

73:                                               ; preds = %65, %60
  %74 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %62, %class.SkString* nonnull dereferenceable(8) %3) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %75

75:                                               ; preds = %73, %48
  %76 = getelementptr inbounds %class.SkString, %class.SkString* %49, i64 1
  %77 = icmp ugt %class.SkString* %76, %42
  br i1 %77, label %78, label %48

78:                                               ; preds = %75, %36, %30, %2
  %79 = phi i1 [ false, %2 ], [ true, %30 ], [ true, %36 ], [ true, %75 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrGLExtensions3addEPKc(%class.GrGLExtensions*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1
  %5 = tail call fastcc i32 @_ZL11find_stringRK8SkTArrayI8SkStringLb0EEPKc(%class.SkTArray* dereferenceable(16) %4, i8* %1)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %62

7:                                                ; preds = %2
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %4, i32 1, i32 1) #8
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  %9 = load %class.SkString*, %class.SkString** %8, align 8
  %10 = getelementptr inbounds %class.GrGLExtensions, %class.GrGLExtensions* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = and i64 %12, 2147483647
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 %13
  %15 = add i64 %11, 2
  %16 = and i64 %15, 4294967294
  %17 = and i64 %11, -4294967295
  %18 = or i64 %16, %17
  store i64 %18, i64* %10, align 8
  tail call void @_ZN8SkStringC1EPKc(%class.SkString* %14, i8* %1) #8
  %19 = load %class.SkString*, %class.SkString** %8, align 8
  %20 = load i64, i64* %10, align 8
  %21 = lshr i64 %20, 1
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 2147483647
  %24 = zext i32 %23 to i64
  %25 = add nsw i64 %24, -1
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %19, i64 %25
  %27 = icmp ult i32 %23, 2
  br i1 %27, label %62, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %19, i64 1
  %30 = bitcast %class.SkString* %3 to i8*
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %59, %28
  %33 = phi %class.SkString* [ %29, %28 ], [ %60, %59 ]
  %34 = phi %class.SkString* [ %19, %28 ], [ %33, %59 ]
  %35 = getelementptr inbounds %class.SkString, %class.SkString* %33, i64 0, i32 0, i32 0
  %36 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %35, align 8
  %37 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %36, i64 0, i32 2
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %34, i64 0, i32 0, i32 0
  %39 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 2
  %41 = call i32 @strcmp(i8* %37, i8* %40) #9
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %59

43:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %31, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* dereferenceable(8) %33) #8
  br label %44

44:                                               ; preds = %49, %43
  %45 = phi %class.SkString* [ %33, %43 ], [ %46, %49 ]
  %46 = getelementptr inbounds %class.SkString, %class.SkString* %45, i64 -1
  %47 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %45, %class.SkString* dereferenceable(8) %46) #8
  %48 = icmp ugt %class.SkString* %46, %19
  br i1 %48, label %49, label %57

49:                                               ; preds = %44
  %50 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %31, align 8
  %51 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %50, i64 0, i32 2
  %52 = getelementptr inbounds %class.SkString, %class.SkString* %45, i64 -2, i32 0, i32 0
  %53 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %52, align 8
  %54 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %53, i64 0, i32 2
  %55 = call i32 @strcmp(i8* %51, i8* %54) #9
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %44, label %57

57:                                               ; preds = %49, %44
  %58 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %46, %class.SkString* nonnull dereferenceable(8) %3) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br label %59

59:                                               ; preds = %57, %32
  %60 = getelementptr inbounds %class.SkString, %class.SkString* %33, i64 1
  %61 = icmp ugt %class.SkString* %60, %26
  br i1 %61, label %62, label %32

62:                                               ; preds = %59, %7, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK14GrGLExtensions8dumpJSONEP12SkJSONWriter(%class.GrGLExtensions* nocapture, %class.SkJSONWriter* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare void @_ZN8SkString3setEPKcm(%class.SkString*, i8*, i64) local_unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #8
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #8
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #8
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortI8SkStringFbRKS0_S2_EEviPT_iRKT0_(i32, %class.SkString*, i32, i1 (%class.SkString*, %class.SkString*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = icmp slt i32 %2, 33
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.SkString* %5 to i8*
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  br label %40

11:                                               ; preds = %85, %4
  %12 = phi i32 [ %2, %4 ], [ %95, %85 ]
  %13 = phi %class.SkString* [ %1, %4 ], [ %94, %85 ]
  %14 = sext i32 %12 to i64
  %15 = add nsw i64 %14, -1
  %16 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 %15
  %17 = icmp slt i32 %12, 2
  br i1 %17, label %97, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 1
  %20 = bitcast %class.SkString* %6 to i8*
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %37, %18
  %23 = phi %class.SkString* [ %19, %18 ], [ %38, %37 ]
  %24 = phi %class.SkString* [ %13, %18 ], [ %23, %37 ]
  %25 = call zeroext i1 %3(%class.SkString* dereferenceable(8) %23, %class.SkString* dereferenceable(8) %24) #8
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %21, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %6, %class.SkString* dereferenceable(8) %23) #8
  br label %27

27:                                               ; preds = %32, %26
  %28 = phi %class.SkString* [ %23, %26 ], [ %29, %32 ]
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %28, i64 -1
  %30 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %28, %class.SkString* dereferenceable(8) %29) #8
  %31 = icmp ugt %class.SkString* %29, %13
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %28, i64 -2
  %34 = call zeroext i1 %3(%class.SkString* nonnull dereferenceable(8) %6, %class.SkString* dereferenceable(8) %33) #8
  br i1 %34, label %27, label %35

35:                                               ; preds = %32, %27
  %36 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %29, %class.SkString* nonnull dereferenceable(8) %6) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %37

37:                                               ; preds = %35, %22
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %23, i64 1
  %39 = icmp ugt %class.SkString* %38, %16
  br i1 %39, label %97, label %22

40:                                               ; preds = %8, %85
  %41 = phi i32 [ %0, %8 ], [ %66, %85 ]
  %42 = phi %class.SkString* [ %1, %8 ], [ %94, %85 ]
  %43 = phi i32 [ %2, %8 ], [ %95, %85 ]
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %45, label %65

45:                                               ; preds = %40
  %46 = sext i32 %43 to i64
  %47 = lshr i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = add nsw i64 %46, -1
  br label %54

51:                                               ; preds = %56
  %52 = add nsw i64 %46, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %97, label %54

54:                                               ; preds = %49, %51
  %55 = phi i64 [ %52, %51 ], [ %50, %49 ]
  br label %60

56:                                               ; preds = %45, %56
  %57 = phi i64 [ %58, %56 ], [ %47, %45 ]
  call void @_Z20SkTHeapSort_SiftDownI8SkStringFbRKS0_S2_EEvPT_mmRKT0_(%class.SkString* %42, i64 %57, i64 %46, i1 (%class.SkString*, %class.SkString*)* %3) #8
  %58 = add nsw i64 %57, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %51, label %56

60:                                               ; preds = %54, %60
  %61 = phi i64 [ %63, %60 ], [ %55, %54 ]
  %62 = getelementptr inbounds %class.SkString, %class.SkString* %42, i64 %61
  call void @_ZN8SkString4swapERS_(%class.SkString* %42, %class.SkString* dereferenceable(8) %62) #8
  call void @_Z18SkTHeapSort_SiftUpI8SkStringFbRKS0_S2_EEvPT_mmRKT0_(%class.SkString* %42, i64 1, i64 %61, i1 (%class.SkString*, %class.SkString*)* %3) #8
  %63 = add i64 %61, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %97, label %60

65:                                               ; preds = %40
  %66 = add nsw i32 %41, -1
  %67 = add nsw i32 %43, -1
  %68 = ashr i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.SkString, %class.SkString* %42, i64 %69
  %71 = sext i32 %43 to i64
  %72 = getelementptr inbounds %class.SkString, %class.SkString* %42, i64 -1
  %73 = getelementptr inbounds %class.SkString, %class.SkString* %72, i64 %71
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %10, align 8
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %5, %class.SkString* dereferenceable(8) %70) #8
  call void @_ZN8SkString4swapERS_(%class.SkString* %70, %class.SkString* dereferenceable(8) %73) #8
  %74 = icmp ugt %class.SkString* %73, %42
  br i1 %74, label %75, label %85

75:                                               ; preds = %65, %81
  %76 = phi %class.SkString* [ %82, %81 ], [ %42, %65 ]
  %77 = phi %class.SkString* [ %83, %81 ], [ %42, %65 ]
  %78 = call zeroext i1 %3(%class.SkString* dereferenceable(8) %77, %class.SkString* nonnull dereferenceable(8) %5) #8
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  call void @_ZN8SkString4swapERS_(%class.SkString* %77, %class.SkString* dereferenceable(8) %76) #8
  %80 = getelementptr inbounds %class.SkString, %class.SkString* %76, i64 1
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi %class.SkString* [ %80, %79 ], [ %76, %75 ]
  %83 = getelementptr inbounds %class.SkString, %class.SkString* %77, i64 1
  %84 = icmp ult %class.SkString* %83, %73
  br i1 %84, label %75, label %85

85:                                               ; preds = %81, %65
  %86 = phi %class.SkString* [ %42, %65 ], [ %82, %81 ]
  call void @_ZN8SkString4swapERS_(%class.SkString* %86, %class.SkString* dereferenceable(8) %73) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %87 = ptrtoint %class.SkString* %86 to i64
  %88 = ptrtoint %class.SkString* %42 to i64
  %89 = sub i64 %87, %88
  %90 = lshr exact i64 %89, 3
  %91 = trunc i64 %90 to i32
  call void @_Z12SkTIntroSortI8SkStringFbRKS0_S2_EEviPT_iRKT0_(i32 %66, %class.SkString* %42, i32 %91, i1 (%class.SkString*, %class.SkString*)* %3)
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %class.SkString, %class.SkString* %42, i64 %93
  %95 = sub nsw i32 %43, %92
  %96 = icmp slt i32 %95, 33
  br i1 %96, label %11, label %40

97:                                               ; preds = %60, %37, %51, %11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z20SkTHeapSort_SiftDownI8SkStringFbRKS0_S2_EEvPT_mmRKT0_(%class.SkString*, i64, i64, i1 (%class.SkString*, %class.SkString*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %class.SkString, align 8
  %6 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %7, align 8
  %8 = add i64 %1, -1
  %9 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %8
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %5, %class.SkString* dereferenceable(8) %9) #8
  %10 = shl i64 %1, 1
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %34, label %12

12:                                               ; preds = %4, %29
  %13 = phi i64 [ %32, %29 ], [ %10, %4 ]
  %14 = phi i64 [ %24, %29 ], [ %1, %4 ]
  %15 = icmp ult i64 %13, %2
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = add i64 %13, -1
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %17
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %13
  %20 = call zeroext i1 %3(%class.SkString* dereferenceable(8) %18, %class.SkString* dereferenceable(8) %19) #8
  %21 = zext i1 %20 to i64
  %22 = or i64 %13, %21
  br label %23

23:                                               ; preds = %16, %12
  %24 = phi i64 [ %13, %12 ], [ %22, %16 ]
  %25 = add i64 %24, -1
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %25
  %27 = call zeroext i1 %3(%class.SkString* nonnull dereferenceable(8) %5, %class.SkString* dereferenceable(8) %26) #8
  %28 = add i64 %14, -1
  br i1 %27, label %29, label %34

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %28
  %31 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %30, %class.SkString* dereferenceable(8) %26) #8
  %32 = shl i64 %24, 1
  %33 = icmp ugt i64 %32, %2
  br i1 %33, label %34, label %12

34:                                               ; preds = %29, %23, %4
  %35 = phi i64 [ %8, %4 ], [ %25, %29 ], [ %28, %23 ]
  %36 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %35
  %37 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %36, %class.SkString* nonnull dereferenceable(8) %5) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z18SkTHeapSort_SiftUpI8SkStringFbRKS0_S2_EEvPT_mmRKT0_(%class.SkString*, i64, i64, i1 (%class.SkString*, %class.SkString*)*) local_unnamed_addr #0 comdat {
  %5 = alloca %class.SkString, align 8
  %6 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %7, align 8
  %8 = add i64 %1, -1
  %9 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %8
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %5, %class.SkString* dereferenceable(8) %9) #8
  %10 = shl i64 %1, 1
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %27, %4
  %13 = phi i64 [ %1, %4 ], [ %28, %27 ]
  %14 = lshr i64 %13, 1
  %15 = icmp ult i64 %14, %1
  br i1 %15, label %48, label %36

16:                                               ; preds = %4, %27
  %17 = phi i64 [ %34, %27 ], [ %10, %4 ]
  %18 = phi i64 [ %28, %27 ], [ %1, %4 ]
  %19 = icmp ult i64 %17, %2
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = add i64 %17, -1
  %22 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %21
  %23 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %17
  %24 = call zeroext i1 %3(%class.SkString* dereferenceable(8) %22, %class.SkString* dereferenceable(8) %23) #8
  %25 = zext i1 %24 to i64
  %26 = or i64 %17, %25
  br label %27

27:                                               ; preds = %20, %16
  %28 = phi i64 [ %17, %16 ], [ %26, %20 ]
  %29 = add i64 %28, -1
  %30 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %29
  %31 = add i64 %18, -1
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %31
  %33 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %32, %class.SkString* dereferenceable(8) %30) #8
  %34 = shl i64 %28, 1
  %35 = icmp ugt i64 %34, %2
  br i1 %35, label %12, label %16

36:                                               ; preds = %12, %42
  %37 = phi i64 [ %46, %42 ], [ %14, %12 ]
  %38 = phi i64 [ %37, %42 ], [ %13, %12 ]
  %39 = add nsw i64 %37, -1
  %40 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %39
  %41 = call zeroext i1 %3(%class.SkString* dereferenceable(8) %40, %class.SkString* nonnull dereferenceable(8) %5) #8
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = add i64 %38, -1
  %44 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %43
  %45 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %44, %class.SkString* dereferenceable(8) %40) #8
  %46 = lshr i64 %37, 1
  %47 = icmp ult i64 %46, %1
  br i1 %47, label %48, label %36

48:                                               ; preds = %36, %42, %12
  %49 = phi i64 [ %13, %12 ], [ %37, %42 ], [ %38, %36 ]
  %50 = add i64 %49, -1
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 %50
  %52 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %51, %class.SkString* nonnull dereferenceable(8) %5) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8SkString4swapERS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
