; ModuleID = '../../extensions/browser/core_extensions_browser_api_provider.cc'
source_filename = "../../extensions/browser/core_extensions_browser_api_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.extensions::CoreExtensionsBrowserAPIProvider" = type { %"class.extensions::ExtensionsBrowserAPIProvider" }
%"class.extensions::ExtensionsBrowserAPIProvider" = type { i32 (...)** }
%class.ExtensionFunctionRegistry = type opaque

@_ZTVN10extensions32CoreExtensionsBrowserAPIProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*)* @_ZN10extensions32CoreExtensionsBrowserAPIProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*)* @_ZN10extensions32CoreExtensionsBrowserAPIProviderD0Ev to i8*), i8* bitcast (void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*, %class.ExtensionFunctionRegistry*)* @_ZN10extensions32CoreExtensionsBrowserAPIProvider26RegisterExtensionFunctionsEP25ExtensionFunctionRegistry to i8*)] }, align 8

@_ZN10extensions32CoreExtensionsBrowserAPIProviderC1Ev = hidden unnamed_addr alias void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*), void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*)* @_ZN10extensions32CoreExtensionsBrowserAPIProviderC2Ev
@_ZN10extensions32CoreExtensionsBrowserAPIProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*), void (%"class.extensions::CoreExtensionsBrowserAPIProvider"*)* @_ZN10extensions32CoreExtensionsBrowserAPIProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions32CoreExtensionsBrowserAPIProviderC2Ev(%"class.extensions::CoreExtensionsBrowserAPIProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::CoreExtensionsBrowserAPIProvider", %"class.extensions::CoreExtensionsBrowserAPIProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions32CoreExtensionsBrowserAPIProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions32CoreExtensionsBrowserAPIProviderD2Ev(%"class.extensions::CoreExtensionsBrowserAPIProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions32CoreExtensionsBrowserAPIProviderD0Ev(%"class.extensions::CoreExtensionsBrowserAPIProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::CoreExtensionsBrowserAPIProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions32CoreExtensionsBrowserAPIProvider26RegisterExtensionFunctionsEP25ExtensionFunctionRegistry(%"class.extensions::CoreExtensionsBrowserAPIProvider"* nocapture readnone, %class.ExtensionFunctionRegistry*) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions3api25GeneratedFunctionRegistry11RegisterAllEP25ExtensionFunctionRegistry(%class.ExtensionFunctionRegistry* %1) #6
  ret void
}

declare void @_ZN10extensions3api25GeneratedFunctionRegistry11RegisterAllEP25ExtensionFunctionRegistry(%class.ExtensionFunctionRegistry*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
