; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_preload_scanner.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_preload_scanner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.29", i32, [4 x i8], %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.207", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { i64 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { float }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.148", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.157" }
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"struct.std::__1::pair.175"*, i32, i32 }
%"struct.std::__1::pair.175" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.188" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.104"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1217", i64 }
%"class.std::__1::vector.1217" = type { %"class.std::__1::__vector_base.1218" }
%"class.std::__1::__vector_base.1218" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1219" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.268", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.268" = type { %"class.base::RefCounted.269" }
%"class.base::RefCounted.269" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"class.blink::Length" = type <{ %union.anon.28, i8, i8, i8, i8 }>
%union.anon.28 = type { i32 }
%union.anon.634 = type { i32 }
%"class.blink::ImageCandidate" = type <{ %"class.WTF::String", %"class.WTF::StringView", float, i32, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::MediaValuesCached" = type { %"class.blink::MediaValues", %"struct.blink::MediaValuesCached::MediaValuesCachedData" }
%"class.blink::MediaValues" = type { i32 (...)** }
%"struct.blink::MediaValuesCached::MediaValuesCachedData" = type <{ double, double, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::HashSet.222" = type { %"class.WTF::HashTable.223" }
%"class.WTF::HashTable.223" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::TokenPreloadScanner" = type { %"class.blink::CSSPreloadScanner", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.24, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::TokenPreloadScanner::PictureData", i64, %"class.std::__1::unique_ptr.25", %"class.blink::Persistent", %"class.blink::ClientHintsPreferences", i32, i8, i8, %"class.WTF::Vector.233" }
%"class.blink::CSSPreloadScanner" = type { i32, [4 x i8], %"class.WTF::StringBuilder", %"class.WTF::StringBuilder", i32, %"class.WTF::Vector.6"*, %"class.blink::KURL"*, %"class.blink::PreloadRequest::ExclusionInfo"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PreloadRequest"* }
%"class.blink::PreloadRequest" = type <{ %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, %"class.WTF::String", i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i32, %"class.WTF::HashSet", i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::PreloadRequest::ExclusionInfo" = type { i32 (...)**, %"class.WTF::RefCounted", %"class.blink::KURL", %"class.WTF::HashSet.20", %"class.WTF::HashSet.20" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashSet.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.9" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::KURL"* }
%class.scoped_refptr.24 = type { %"class.blink::PreloadRequest::ExclusionInfo"* }
%"struct.blink::TokenPreloadScanner::PictureData" = type <{ %"class.WTF::String", float, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.blink::CachedDocumentParameters"* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.229" }
%"class.blink::PersistentBase.229" = type { %"class.blink::MediaValuesCached"*, %"class.blink::PersistentNodePtr.232" }
%"class.blink::PersistentNodePtr.232" = type { %"class.blink::PersistentNode"* }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::Vector.233" = type { %"class.WTF::VectorBuffer.234" }
%"class.WTF::VectorBuffer.234" = type { %"class.WTF::VectorBufferBase.235" }
%"class.WTF::VectorBufferBase.235" = type { %"struct.blink::TokenPreloadScanner::Checkpoint"*, i32, i32 }
%"struct.blink::TokenPreloadScanner::Checkpoint" = type { %"class.blink::KURL", i8, i8, i64, %class.scoped_refptr.24 }
%"struct.blink::CachedDocumentParameters" = type { i8, [3 x i8], %"class.blink::Length", i8, i8, i32, i32, i32, %"class.blink::WeakPersistent", %"class.blink::WeakPersistent.211", %"class.WTF::HashSet.222" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::LazyLoadImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member", %"class.blink::Member", i32, i8, [3 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.211" = type { %"class.blink::PersistentBase.212" }
%"class.blink::PersistentBase.212" = type { %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SubresourceRedirectOriginsPreloader" = type { %"class.blink::Supplement", %"class.WTF::HashSet.217" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.215" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.371", %"class.WTF::Vector.371", i8, i32, %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::Member.388", %"class.blink::Member.390", %"class.blink::Member.392", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.394", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::Member.311", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.405", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.265", %"class.blink::Member.436", %"class.blink::Member.265", %"class.blink::Member.265", %"class.blink::Member.265", %"class.blink::UserActionElementSet", %"class.blink::Member.445", double, double, i64, i64, %"class.blink::HeapHashSet.447", %"class.blink::HeapHashSet.454", i16, i8, %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::TextLinkColors", %"class.blink::Member.469", i8, [7 x i8], %"class.blink::HeapHashMap.471", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.265", %"class.WTF::Vector.478", %"class.blink::Member.483", %"class.blink::Member.487", i8, %"class.blink::Member.265", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.489", %"class.blink::HeapVector.523", %"class.std::__1::unique_ptr.530", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.536", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.549", %"class.WTF::Vector.551", i8, i8, %"class.std::__1::unique_ptr.556", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.562", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.570", i8, i32, %"class.blink::Member.572", %"class.blink::Member.574", %"class.blink::Member.576", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.578", %"class.WTF::HashMap.580", %"class.blink::Member.585", %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::Member.215", %"class.blink::Member.215", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.593", i8, i32, %"class.blink::Member.600", %"class.blink::Member.602", i32, %"class.blink::Member.604", %"class.blink::Member.606", %"class.blink::Member.608", %"class.std::__1::unique_ptr.610", i64, %"class.std::__1::unique_ptr.616", i32, i32, %"class.blink::Member.622", %"class.blink::Member.624", %"class.blink::Member.626", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.707", %"class.WTF::Vector.709", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.714", %"class.blink::Member.721", %"class.std::__1::unique_ptr.723", %"class.blink::Member.729", i8, i8, %"class.WTF::String", %"class.blink::Member.731", i8, [7 x i8], %"class.blink::HeapHashMap.733", %"class.blink::HeapObserverSet.740", %"class.blink::Member.748", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.750", i32, i8, i8, %"class.blink::WeakMember.752", %"class.blink::Member.753" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.243", %"class.blink::Member.243" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.243", %"class.blink::Member.245", %"class.blink::Member.243", %"class.blink::Member.243", %"class.blink::Member.247" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.251", %"class.blink::Member.215", %"class.blink::Member.245", %"class.blink::Member.253", %"class.blink::Member.253", %"class.blink::Member.294", %"class.blink::Member.296", %"class.blink::Member.298", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.303", %"class.blink::HeapVector.305" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.261" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.265", i32, %"class.blink::HeapVector" }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.300" }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::HeapHashMap.302"* }
%"class.blink::HeapHashMap.302" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.305" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::Member.311"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.364" }
%"class.blink::HeapHashMap.364" = type { %"class.WTF::HashMap.367" }
%"class.WTF::HashMap.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"struct.WTF::KeyValuePair.370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.370" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.374 }
%class.scoped_refptr.374 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.375" }
%"struct.std::__1::atomic.375" = type { %"struct.std::__1::__atomic_base.376" }
%"struct.std::__1::__atomic_base.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__cxx_atomic_impl.378" }
%"struct.std::__1::__cxx_atomic_impl.378" = type { %"struct.std::__1::__cxx_atomic_base_impl.379" }
%"struct.std::__1::__cxx_atomic_base_impl.379" = type { i32 }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1062", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1125", i32, i8, [3 x i8], %"class.blink::HeapVector.1127", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1146", %"class.blink::Member.1203", %"class.blink::Member.1205", i8, [7 x i8] }>
%"class.blink::Supplementable.1062" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1063" }
%"class.blink::HeapHashMap.1063" = type { %"class.WTF::HashMap.1066" }
%"class.WTF::HashMap.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ %"struct.WTF::KeyValuePair.1069"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1069" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1070" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.495" }
%"class.blink::HeapHashSet.495" = type { %"class.WTF::HashSet.498" }
%"class.WTF::HashSet.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"class.blink::WeakMember.501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.501" = type opaque
%"class.blink::Supplementable.1070" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1071" }
%"class.blink::HeapHashMap.1071" = type { %"class.WTF::HashMap.1074" }
%"class.WTF::HashMap.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"struct.WTF::KeyValuePair.1077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1077" = type { i8*, %"class.blink::Member.2461" }
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::Supplement.2463"* }
%"class.blink::Supplement.2463" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2464" }
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1078, %"class.std::__1::unique_ptr.1079", %"class.std::__1::unique_ptr.1079", %"class.std::__1::unique_ptr.1106", %"class.std::__1::unique_ptr.1106", %"class.blink::Member.384", i32, [4 x i8], %"class.WTF::HashSet.1121", i32, i32 }
%class.scoped_refptr.1078 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.238", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.221 }
%"class.WTF::RefCounted.238" = type { %"class.base::RefCounted.239" }
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.240 }
%union.anon.240 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.221 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1082", %"class.std::__1::map.1093", %"class.std::__1::map.1102"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.869 }
%union.anon.869 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1082" = type { %"class.std::__1::__tree.1083" }
%"class.std::__1::__tree.1083" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1084", %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::map.1093" = type { %"class.std::__1::__tree.1094" }
%"class.std::__1::__tree.1094" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1095", %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::map.1102" = type opaque
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.1109", %"class.base::flat_map" }
%"struct.std::__1::array.1109" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1110" }
%"class.std::__1::vector.1110" = type { %"class.std::__1::__vector_base.1111" }
%"class.std::__1::__vector_base.1111" = type { %"struct.std::__1::pair.1112"*, %"struct.std::__1::pair.1112"*, %"class.std::__1::__compressed_pair.1113" }
%"struct.std::__1::pair.1112" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"struct.std::__1::pair.1112"* }
%"class.WTF::HashSet.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1127" = type { %"class.WTF::Vector.1130" }
%"class.WTF::Vector.1130" = type { %"class.WTF::VectorBuffer.1131" }
%"class.WTF::VectorBuffer.1131" = type { %"class.WTF::VectorBufferBase.1132" }
%"class.WTF::VectorBufferBase.1132" = type { %"class.blink::Member.1133"*, i32, i32 }
%"class.blink::Member.1133" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1139", i32, i32 }
%"class.blink::HeapHashMap.1139" = type { %"class.WTF::HashMap.1142" }
%"class.WTF::HashMap.1142" = type { %"class.WTF::HashTable.1143" }
%"class.WTF::HashTable.1143" = type <{ %"struct.WTF::KeyValuePair.1145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1145" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote.1192" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1149" }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"class.mojo::StructPtr.1155"*, i32, i32 }
%"class.mojo::StructPtr.1155" = type { %"class.std::__1::unique_ptr.1156" }
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1159", %"class.WTF::HashMap.1166", %"class.WTF::HashMap.1171", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1176", i8, %"class.WTF::Vector.883", i32, %"class.mojo::StructPtr.1177", %"class.WTF::Vector.883" }
%"class.mojo::StructPtr.1159" = type { %"class.std::__1::unique_ptr.1160" }
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"struct.WTF::KeyValuePair.1170"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1170" = type opaque
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1175" = type opaque
%"class.mojo::InlinedStructPtr.1176" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1177" = type { %"class.std::__1::unique_ptr.1178" }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.883", i8, i8, [6 x i8] }>
%"class.WTF::Vector.883" = type { %"class.WTF::VectorBuffer.884" }
%"class.WTF::VectorBuffer.884" = type { %"class.WTF::VectorBufferBase.885" }
%"class.WTF::VectorBufferBase.885" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote.1192" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1193" }
%"class.mojo::internal::AssociatedInterfacePtrState.1193" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1194" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.635", i32 }>
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.638", %"class.absl::optional.639", %"class.absl::optional.644", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.657", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.687", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.696", i8, %class.scoped_refptr.649, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.697" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.638" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.639" = type { %"class.absl::optional_internal::optional_data.640" }
%"class.absl::optional_internal::optional_data.640" = type { %"class.absl::optional_internal::optional_data_base.641" }
%"class.absl::optional_internal::optional_data_base.641" = type { %"class.absl::optional_internal::optional_data_dtor_base.642" }
%"class.absl::optional_internal::optional_data_dtor_base.642" = type { i8, %union.anon.643 }
%union.anon.643 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.644" = type { %"class.absl::optional_internal::optional_data.645" }
%"class.absl::optional_internal::optional_data.645" = type { %"class.absl::optional_internal::optional_data_base.646" }
%"class.absl::optional_internal::optional_data_base.646" = type { %"class.absl::optional_internal::optional_data_dtor_base.647" }
%"class.absl::optional_internal::optional_data_dtor_base.647" = type { i8, %union.anon.648 }
%union.anon.648 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.649, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.650" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.428 }
%class.scoped_refptr.428 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.429", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.429" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.430" }
%"struct.std::__1::atomic.430" = type { %"struct.std::__1::__atomic_base.431" }
%"struct.std::__1::__atomic_base.431" = type { %"struct.std::__1::__atomic_base.432" }
%"struct.std::__1::__atomic_base.432" = type { %"struct.std::__1::__cxx_atomic_impl.433" }
%"struct.std::__1::__cxx_atomic_impl.433" = type { %"struct.std::__1::__cxx_atomic_base_impl.434" }
%"struct.std::__1::__cxx_atomic_base_impl.434" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.655 }
%class.scoped_refptr.655 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.766", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.649, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.766" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.660", %class.scoped_refptr.661 }
%"class.base::RepeatingCallback.660" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.661 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.662", [4 x i8] }>
%"class.base::RefCountedThreadSafe.662" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.672", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.678" }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.678" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::map.687" = type { %"class.std::__1::__tree.688" }
%"class.std::__1::__tree.688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.base::OnceCallback.696" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.649 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.427" }>
%"class.base::RefCountedThreadSafe.427" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.697" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1206" }
%"class.blink::MemberBase.1206" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1137", i8, [7 x i8], %"class.WTF::Vector.1152", %"class.blink::HeapVector.1209", i8, [7 x i8], %"class.WTF::HashSet.1121", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1209" = type { %"class.WTF::Vector.1212" }
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { %"class.blink::Member.1215"*, i32, i32 }
%"class.blink::Member.1215" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.769", %"class.blink::Member.771", %"class.blink::Member.773", %class.scoped_refptr.426, %class.scoped_refptr.426, %"class.blink::Member.775", %"class.blink::Member.777", %"class.blink::Member.783", %"class.blink::Member.787", %"class.blink::Member.838", %"class.blink::HeapHashMap.840", %"class.blink::HeapHashSet.847", %"class.blink::HeapHashSet.847", %"class.blink::HeapHashMap.1013", %"class.blink::HeapVector.1020", %"class.blink::Member.1028", %"class.blink::HeapTaskRunnerTimer.1030", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1032", %"class.WTF::Vector.1039", %"class.blink::HeapHashSet.1045", %"class.blink::HeapHashSet.1045", %"class.std::__1::unique_ptr.1051", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1059", i8, i8, %"class.base::WeakPtrFactory.1061" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.426 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.781" }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.791", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.793", %"class.WTF::HashSet.798", i8, [3 x i8], i32, %"class.blink::HeapHashMap.802", %"class.std::__1::map.809", %"class.std::__1::map.820", %"class.std::__1::unique_ptr.829", %"class.blink::Member.777", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.836", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.797" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.798" = type { %"class.WTF::HashTable.799" }
%"class.WTF::HashTable.799" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.802" = type { %"class.WTF::HashMap.805" }
%"class.WTF::HashMap.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"struct.WTF::KeyValuePair.808"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.808" = type opaque
%"class.std::__1::map.809" = type { %"class.std::__1::__tree.810" }
%"class.std::__1::__tree.810" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.811", %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::map.820" = type { %"class.std::__1::__tree.821" }
%"class.std::__1::__tree.821" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.822", %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.840" = type { %"class.WTF::HashMap.843" }
%"class.WTF::HashMap.843" = type { %"class.WTF::HashTable.844" }
%"class.WTF::HashTable.844" = type <{ %"struct.WTF::KeyValuePair.846"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.846" = type opaque
%"class.blink::HeapHashSet.847" = type { %"class.WTF::HashSet.850" }
%"class.WTF::HashSet.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"class.blink::WeakMember.853"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.857", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.888", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.977", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.988", %"class.blink::ResourceResponse", %class.scoped_refptr.990, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.857" = type { %"class.absl::optional_internal::optional_data.858" }
%"class.absl::optional_internal::optional_data.858" = type { %"class.absl::optional_internal::optional_data_base.859" }
%"class.absl::optional_internal::optional_data_base.859" = type { %"class.absl::optional_internal::optional_data_dtor_base.860" }
%"class.absl::optional_internal::optional_data_dtor_base.860" = type { i8, %union.anon.861 }
%union.anon.861 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.862", i8, %"class.absl::optional.873", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.862" = type { %"class.absl::optional_internal::optional_data.863" }
%"class.absl::optional_internal::optional_data.863" = type { %"class.absl::optional_internal::optional_data_base.864" }
%"class.absl::optional_internal::optional_data_base.864" = type { %"class.absl::optional_internal::optional_data_dtor_base.865" }
%"class.absl::optional_internal::optional_data_dtor_base.865" = type { i8, [7 x i8], %union.anon.866 }
%union.anon.866 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.873" = type { %"class.absl::optional_internal::optional_data.874" }
%"class.absl::optional_internal::optional_data.874" = type { %"class.absl::optional_internal::optional_data_base.875" }
%"class.absl::optional_internal::optional_data_base.875" = type { %"class.absl::optional_internal::optional_data_dtor_base.876" }
%"class.absl::optional_internal::optional_data_dtor_base.876" = type { i8, %union.anon.877 }
%union.anon.877 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.878", %"class.WTF::Vector.883" }
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.880" }
%"class.WTF::VectorBufferBase.880" = type { i32*, i32, i32 }
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.973" }
%"class.WTF::HashMap.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"struct.WTF::KeyValuePair.976"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.976" = type <{ %"class.blink::WeakMember.2541", i32, [4 x i8] }>
%"class.blink::WeakMember.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.977" = type { %"class.WTF::HashSet.980" }
%"class.WTF::HashSet.980" = type { %"class.WTF::HashTable.981" }
%"class.WTF::HashTable.981" = type <{ %"class.blink::WeakMember.983"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.983" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.408, %class.scoped_refptr.984, %class.scoped_refptr.986 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%class.scoped_refptr.408 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.409", i32, i32, %"class.blink::Persistent.411" }
%"class.WTF::RefCounted.409" = type { %"class.base::RefCounted.410" }
%"class.base::RefCounted.410" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.411" = type { %"class.blink::PersistentBase.412" }
%"class.blink::PersistentBase.412" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.232" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.415" }
%"class.blink::HeapHashMap.415" = type { %"class.WTF::HashMap.418" }
%"class.WTF::HashMap.418" = type { %"class.WTF::HashTable.419" }
%"class.WTF::HashTable.419" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type { %"class.blink::WeakMember.422", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ScriptWrappable"* }
%class.scoped_refptr.984 = type { %"class.base::RefCountedData.985"* }
%"class.base::RefCountedData.985" = type opaque
%class.scoped_refptr.986 = type { %"class.base::RefCountedData.987"* }
%"class.base::RefCountedData.987" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.937" }
%"class.base::time_internal::TimeBase.937" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.221, %class.scoped_refptr.221, %class.scoped_refptr.221, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.896, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.906", %"class.absl::optional.911", %"class.absl::optional.921", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.926", %"class.absl::optional.921", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.921", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.926", %"class.absl::optional.931", i8, %class.scoped_refptr.936 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.891" }
%"class.WTF::HashMap.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ %"struct.WTF::KeyValuePair.895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.895" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.896 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.897", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.904, i8, %"class.url::Origin" }
%"class.base::RefCounted.897" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.898"*, %"class.std::__1::unique_ptr.898"*, %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.2527" }
%"class.std::__1::__compressed_pair.2527" = type { %"struct.std::__1::__compressed_pair_elem.2528" }
%"struct.std::__1::__compressed_pair_elem.2528" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::unique_ptr.898"* }
%class.scoped_refptr.904 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.905", [4 x i8] }>
%"class.base::RefCountedThreadSafe.905" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.906" = type { %"class.absl::optional_internal::optional_data.907" }
%"class.absl::optional_internal::optional_data.907" = type { %"class.absl::optional_internal::optional_data_base.908" }
%"class.absl::optional_internal::optional_data_base.908" = type { %"class.absl::optional_internal::optional_data_dtor_base.909" }
%"class.absl::optional_internal::optional_data_dtor_base.909" = type { i8, %union.anon.910 }
%union.anon.910 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.911" = type { %"class.absl::optional_internal::optional_data.912" }
%"class.absl::optional_internal::optional_data.912" = type { %"class.absl::optional_internal::optional_data_base.913" }
%"class.absl::optional_internal::optional_data_base.913" = type { %"class.absl::optional_internal::optional_data_dtor_base.914" }
%"class.absl::optional_internal::optional_data_dtor_base.914" = type { i8, %union.anon.915 }
%union.anon.915 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.916", %"class.WTF::Vector.883", %"class.WTF::String" }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918" }
%"class.WTF::VectorBufferBase.918" = type { %class.scoped_refptr.221*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.639", %"class.absl::optional.639" }
%"class.absl::optional.921" = type { %"class.absl::optional_internal::optional_data.922" }
%"class.absl::optional_internal::optional_data.922" = type { %"class.absl::optional_internal::optional_data_base.923" }
%"class.absl::optional_internal::optional_data_base.923" = type { %"class.absl::optional_internal::optional_data_dtor_base.924" }
%"class.absl::optional_internal::optional_data_dtor_base.924" = type { i8, %union.anon.925 }
%union.anon.925 = type { %"class.WTF::String" }
%"class.absl::optional.926" = type { %"class.absl::optional_internal::optional_data.927" }
%"class.absl::optional_internal::optional_data.927" = type { %"class.absl::optional_internal::optional_data_base.928" }
%"class.absl::optional_internal::optional_data_base.928" = type { %"class.absl::optional_internal::optional_data_dtor_base.929" }
%"class.absl::optional_internal::optional_data_dtor_base.929" = type { i8, %union.anon.930 }
%union.anon.930 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.931" = type { %"class.absl::optional_internal::optional_data.932" }
%"class.absl::optional_internal::optional_data.932" = type { %"class.absl::optional_internal::optional_data_base.933" }
%"class.absl::optional_internal::optional_data_base.933" = type { %"class.absl::optional_internal::optional_data_dtor_base.934" }
%"class.absl::optional_internal::optional_data_dtor_base.934" = type { i8, %union.anon.935 }
%union.anon.935 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.936 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2532", %"class.base::internal::flat_tree.2533" }
%"class.base::RefCountedThreadSafe.2532" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2533" = type { %"class.std::__1::vector.2534" }
%"class.std::__1::vector.2534" = type { %"class.std::__1::__vector_base.2535" }
%"class.std::__1::__vector_base.2535" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2536" }
%"class.std::__1::__compressed_pair.2536" = type { %"struct.std::__1::__compressed_pair_elem.2537" }
%"struct.std::__1::__compressed_pair_elem.2537" = type { i32* }
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.938", %class.scoped_refptr.952, %class.scoped_refptr.953, %"struct.blink::CacheControlHeader", %"class.absl::optional.639", %"class.absl::optional.954", %"class.absl::optional.954", %"class.absl::optional.954", i64, %"class.blink::KURL", %"class.WTF::Vector.959", %"class.WTF::String", %"class.WTF::Vector.883", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.926", %"class.WTF::Vector.883", %"class.blink::KURL", %"class.absl::optional.964" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.938" = type { %"class.absl::optional_internal::optional_data.939" }
%"class.absl::optional_internal::optional_data.939" = type { %"class.absl::optional_internal::optional_data_base.940" }
%"class.absl::optional_internal::optional_data_base.940" = type { %"class.absl::optional_internal::optional_data_dtor_base.941" }
%"class.absl::optional_internal::optional_data_dtor_base.941" = type { i8, %union.anon.942 }
%union.anon.942 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.883", %"class.WTF::String", i64, i64, %"class.WTF::Vector.943", %"class.WTF::Vector.947" }
%"class.WTF::Vector.943" = type { %"class.WTF::VectorBuffer.944" }
%"class.WTF::VectorBuffer.944" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.947" = type { %"class.WTF::VectorBuffer.948" }
%"class.WTF::VectorBuffer.948" = type { %"class.WTF::VectorBufferBase.949" }
%"class.WTF::VectorBufferBase.949" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.952 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.953 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.954" = type { %"class.absl::optional_internal::optional_data.955" }
%"class.absl::optional_internal::optional_data.955" = type { %"class.absl::optional_internal::optional_data_base.956" }
%"class.absl::optional_internal::optional_data_base.956" = type { %"class.absl::optional_internal::optional_data_dtor_base.957" }
%"class.absl::optional_internal::optional_data_dtor_base.957" = type { i8, %union.anon.958 }
%union.anon.958 = type { %"class.base::Time" }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.964" = type { %"class.absl::optional_internal::optional_data.965" }
%"class.absl::optional_internal::optional_data.965" = type { %"class.absl::optional_internal::optional_data_base.966" }
%"class.absl::optional_internal::optional_data_base.966" = type { %"class.absl::optional_internal::optional_data_dtor_base.967" }
%"class.absl::optional_internal::optional_data_dtor_base.967" = type { i8, %union.anon.968 }
%union.anon.968 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.990 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.991", i64, %"class.WTF::Vector.993", %"class.WTF::Vector.998" }
%"class.WTF::RefCounted.991" = type { %"class.base::RefCounted.992" }
%"class.base::RefCounted.992" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { i8*, i32, i32 }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"class.std::__1::unique_ptr.1001"*, i32, i32 }
%"class.std::__1::unique_ptr.1001" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1004" }
%"class.std::__1::__tree.1004" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.blink::HeapHashMap.1013" = type { %"class.WTF::HashMap.1016" }
%"class.WTF::HashMap.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"struct.WTF::KeyValuePair.1019"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1019" = type opaque
%"class.blink::HeapVector.1020" = type { %"class.WTF::Vector.1023" }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::Member.1026"*, i32, i32 }
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.854" }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1030" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1031", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.426, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1031" = type { %"class.blink::MemberBase.387" }
%"class.blink::HeapHashMap.1032" = type { %"class.WTF::HashMap.1035" }
%"class.WTF::HashMap.1035" = type { %"class.WTF::HashTable.1036" }
%"class.WTF::HashTable.1036" = type <{ %"struct.WTF::KeyValuePair.1038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1038" = type opaque
%"class.WTF::Vector.1039" = type { %"class.WTF::VectorBuffer.1040" }
%"class.WTF::VectorBuffer.1040" = type { %"class.WTF::VectorBufferBase.1041" }
%"class.WTF::VectorBufferBase.1041" = type { %class.scoped_refptr.1042*, i32, i32 }
%class.scoped_refptr.1042 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1045" = type { %"class.WTF::HashSet.1048" }
%"class.WTF::HashSet.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"class.blink::Member.988"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.WTF::HashSet.222"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.832 }
%class.scoped_refptr.832 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1057" }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1061" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.313", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.315, %"class.WTF::Vector.334", %"class.WTF::Vector.334", %"class.blink::Member.243", %"class.blink::Member.339", %"class.blink::HeapHashSet", %"class.blink::Member.215", %"class.WTF::HashSet.348", %"class.WTF::TextPosition", %"class.blink::Member.352", %"class.blink::HeapVector.354", %"class.blink::Member.361" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.315 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.316", %"class.WTF::Vector.318" }
%"class.WTF::RefCounted.316" = type { %"class.base::RefCounted.317" }
%"class.base::RefCounted.317" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.318" = type { %"class.WTF::VectorBuffer.319" }
%"class.WTF::VectorBuffer.319" = type { %"class.WTF::VectorBufferBase.320" }
%"class.WTF::VectorBufferBase.320" = type { %"class.std::__1::unique_ptr.321"*, i32, i32 }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.324", %"class.WTF::String" }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.341" }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.246" }
%"class.WTF::HashSet.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.315, %"class.blink::Member.311", %"class.blink::Member.339" }
%"class.blink::HeapVector.354" = type { %"class.WTF::Vector.357" }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::Member.339"*, i32, i32 }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.404 }
%class.scoped_refptr.404 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.408 }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.215", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.243", %"class.blink::Member.243", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.438" }
%"class.blink::HeapHashMap.438" = type { %"class.WTF::HashMap.441" }
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.447" = type { %"class.WTF::HashSet.450" }
%"class.WTF::HashSet.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"class.blink::WeakMember.453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.453" = type opaque
%"class.blink::HeapHashSet.454" = type { %"class.WTF::HashSet.457" }
%"class.WTF::HashSet.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"class.blink::WeakMember.460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.245", %"class.blink::HeapVector.305" }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.471" = type { %"class.WTF::HashMap.474" }
%"class.WTF::HashMap.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"struct.WTF::KeyValuePair.477"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.477" = type opaque
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.270" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.274", %"class.blink::Member.276", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.274" = type { %"class.WTF::SingleThreadedBitField.275" }
%"class.WTF::SingleThreadedBitField.275" = type { i32 }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.281", %"class.WTF::AtomicString", %"class.WTF::Vector.283" }
%"class.WTF::RefCounted.281" = type { %"class.base::RefCounted.282" }
%"class.base::RefCounted.282" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.215", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.517", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.426, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.493" }
%"class.blink::WeakMember.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.517" = type { %"class.WTF::HashSet.520" }
%"class.WTF::HashSet.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"class.blink::Member.508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.512", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.514", %"class.blink::WeakMember.435", %"class.blink::WeakMember.516", i8, [7 x i8] }>
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.435" = type { %"class.blink::MemberBase.216" }
%"class.blink::WeakMember.516" = type { %"class.blink::MemberBase.385" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.504" }
%"class.WTF::Deque.504" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.506" }
%"class.WTF::VectorBuffer.506" = type { %"class.WTF::VectorBufferBase.507" }
%"class.WTF::VectorBufferBase.507" = type { %"class.blink::Member.508"*, i32, i32 }
%"class.blink::HeapVector.523" = type { %"class.WTF::Vector.526" }
%"class.WTF::Vector.526" = type { %"class.WTF::VectorBuffer.527" }
%"class.WTF::VectorBuffer.527" = type { %"class.WTF::VectorBufferBase.528" }
%"class.WTF::VectorBufferBase.528" = type { %"class.blink::Member.512"*, i32, i32 }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.536" = type { %"class.WTF::HashSet.539" }
%"class.WTF::HashSet.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"class.blink::WeakMember.542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.542" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.543", i32, [4 x i8] }>
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"struct.std::__1::pair.546"*, i32, i32 }
%"struct.std::__1::pair.546" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.551" = type { %"class.WTF::VectorBuffer.552" }
%"class.WTF::VectorBuffer.552" = type { %"class.WTF::VectorBufferBase.553" }
%"class.WTF::VectorBufferBase.553" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::Member.265"*, i32, i32 }
%"class.blink::HeapVector.562" = type { %"class.WTF::Vector.565" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::Member.568"*, i32, i32 }
%"class.blink::Member.568" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.215" }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.435", { i64, i64 } }
%"class.blink::HeapHashSet.593" = type { %"class.WTF::HashSet.596" }
%"class.WTF::HashSet.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"class.blink::Member.599"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.599" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type { %"class.blink::Member.215", %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription", %"class.blink::Length", i32, i8, %"class.mojo::AssociatedRemote" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.630" }
%"class.absl::optional.630" = type { %"class.absl::optional_internal::optional_data.631" }
%"class.absl::optional_internal::optional_data.631" = type { %"class.absl::optional_internal::optional_data_base.632" }
%"class.absl::optional_internal::optional_data_base.632" = type { %"class.absl::optional_internal::optional_data_dtor_base.633" }
%"class.absl::optional_internal::optional_data_dtor_base.633" = type { i8, %union.anon.634 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.701" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::mojom::blink::DisplayCutoutHostProxy"* }
%"class.blink::mojom::blink::DisplayCutoutHostProxy" = type { %"class.blink::mojom::blink::DisplayCutoutHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::DisplayCutoutHost" = type { i32 (...)** }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.714" = type { %"class.WTF::HashMap.717" }
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.720" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.733" = type { %"class.WTF::HashMap.736" }
%"class.WTF::HashMap.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ %"struct.WTF::KeyValuePair.739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.739" = type opaque
%"class.blink::HeapObserverSet.740" = type { i32, [4 x i8], %"class.blink::HeapHashSet.741" }
%"class.blink::HeapHashSet.741" = type { %"class.WTF::HashSet.744" }
%"class.WTF::HashSet.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ %"class.blink::WeakMember.747"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.747" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.215", %"class.blink::HeapHashSet.757", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.764", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.757" = type { %"class.WTF::HashSet.760" }
%"class.WTF::HashSet.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"class.blink::Member.763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.763" = type opaque
%"class.blink::HeapTaskRunnerTimer.764" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.765", { i64, i64 } }
%"class.blink::WeakMember.765" = type { %"class.blink::MemberBase.751" }
%"class.blink::WeakMember.752" = type { %"class.blink::MemberBase.244" }
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.217" = type { %"class.WTF::HashTable.218" }
%"class.WTF::HashTable.218" = type <{ %class.scoped_refptr.221*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLPreloadScanner" = type { %"class.blink::TokenPreloadScanner", %"class.blink::SegmentedString", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.1256" }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque.1241", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.1240, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.1240 = type { i8* }
%"class.WTF::Deque.1241" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.1224", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.1230" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.1224" = type { %"class.WTF::VectorBuffer.1225" }
%"class.WTF::VectorBuffer.1225" = type { %"class.WTF::VectorBufferBase.1226", [1920 x i8] }
%"class.WTF::VectorBufferBase.1226" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.1227, %class.LiteralBuffer.1227, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.1227 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.1233", %"class.WTF::Vector.1233", i8, [7 x i8] }>
%"class.WTF::Vector.1233" = type { %"class.WTF::VectorBuffer.1234" }
%"class.WTF::VectorBuffer.1234" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.1227, %class.LiteralBuffer.1259, %class.LiteralBuffer.1259, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.1259 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.absl::optional.1246" = type { %"class.absl::optional_internal::optional_data.1247" }
%"class.absl::optional_internal::optional_data.1247" = type { %"class.absl::optional_internal::optional_data_base.1248" }
%"class.absl::optional_internal::optional_data_base.1248" = type { %"class.absl::optional_internal::optional_data_dtor_base.1249" }
%"class.absl::optional_internal::optional_data_dtor_base.1249" = type { i8, %union.anon.1250 }
%union.anon.1250 = type { %"struct.blink::ViewportDescription" }
%"class.blink::TokenPreloadScanner::StartTagScanner" = type { %"class.WTF::StringImpl"*, %"class.WTF::String", %"class.blink::ImageCandidate", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, float, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.blink::MediaValuesCached"*, i8, i32, i8, i8, [6 x i8], %"class.WTF::HashSet", i32, i32, i32, i32, i32, i32, i8, %"class.WTF::HashSet.222"* }
%"class.blink::ClientHintsPreferences::Context" = type { i32 (...)** }
%"class.blink::CompactHTMLToken" = type { i8, %"class.WTF::String", %"class.WTF::Vector.1251", %"class.WTF::TextPosition" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { %"struct.blink::CompactHTMLToken::Attribute"*, i32, i32 }
%"struct.blink::CompactHTMLToken::Attribute" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2625", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.2625" = type { %"class.std::__1::__vector_base.2626" }
%"class.std::__1::__vector_base.2626" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2627" }
%"class.std::__1::__compressed_pair.2627" = type { %"struct.std::__1::__compressed_pair_elem.2628" }
%"struct.std::__1::__compressed_pair_elem.2628" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2555", i64, i64 }
%"class.std::__1::unique_ptr.2555" = type { %"class.std::__1::__compressed_pair.2556" }
%"class.std::__1::__compressed_pair.2556" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2632" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2632" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1263" }
%"class.std::__1::unique_ptr.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.WTF::HashMap.1269", %"class.std::__1::unique_ptr.1274" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1273" = type opaque
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.WTF::Vector.1277"* }
%"class.WTF::Vector.1277" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.959", %"class.blink::Member.1028", %"class.std::__1::unique_ptr.1283", %"class.std::__1::unique_ptr.1146", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1456, %"class.WTF::AtomicString", i32, %"class.absl::optional.1336", %class.scoped_refptr.221, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1301", i8, %"class.absl::optional.1308", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.388", %"class.blink::Member.1542", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote", %class.scoped_refptr.1078, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1650", %"class.std::__1::unique_ptr.1313", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1652", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.990, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1042, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1657", %"class.blink::Member.1672", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1685", %"class.WTF::Vector.883", i8, i8, i8, %"class.blink::WebVector.1445", %"class.blink::WebVector.1445", %"class.mojo::Remote.1690" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1287", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1301", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1308", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1313", %"class.base::UnguessableToken", %"class.blink::WebVector.1319", %"class.base::TickClock"*, %"class.blink::WebVector.1328", %"class.absl::optional.1336", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1349", %"class.blink::WebVector.1341", i8, %"class.blink::WebVector.1378", i8, %"class.std::__1::unique_ptr.1386", %"class.blink::WebVector.1445", %"class.blink::WebVector.1445" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1287" = type { %"class.std::__1::vector.1288" }
%"class.std::__1::vector.1288" = type { %"class.std::__1::__vector_base.1289" }
%"class.std::__1::__vector_base.1289" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1296" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1290", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1307", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1307" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1286" }
%"class.blink::WebPrivatePtr.1286" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1319" = type { %"class.std::__1::vector.1320" }
%"class.std::__1::vector.1320" = type { %"class.std::__1::__vector_base.1321" }
%"class.std::__1::__vector_base.1321" = type { %"class.std::__1::unique_ptr.1322"*, %"class.std::__1::unique_ptr.1322"*, %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::unique_ptr.1322" = type opaque
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.std::__1::unique_ptr.1322"* }
%"class.blink::WebVector.1328" = type { %"class.std::__1::vector.1329" }
%"class.std::__1::vector.1329" = type { %"class.std::__1::__vector_base.1330" }
%"class.std::__1::__vector_base.1330" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, [7 x i8], %union.anon.1353 }
%union.anon.1353 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1341" = type { %"class.std::__1::vector.1342" }
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1378" = type { %"class.std::__1::vector.1379" }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { i32* }
%"class.std::__1::unique_ptr.1386" = type { %"class.std::__1::__compressed_pair.1387" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1389" }
%"class.blink::WebVector.1389" = type { %"class.std::__1::vector.1390" }
%"class.std::__1::vector.1390" = type { %"class.std::__1::__vector_base.1391" }
%"class.std::__1::__vector_base.1391" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1437" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1392", %"class.blink::WebVector.1400", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1341", i32, [4 x i8], %"class.absl::optional.1432", %"class.blink::WebVector.1341" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1392" = type { %"class.std::__1::vector.1393" }
%"class.std::__1::vector.1393" = type { %"class.std::__1::__vector_base.1394" }
%"class.std::__1::__vector_base.1394" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1395" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1400" = type { %"class.std::__1::vector.1401" }
%"class.std::__1::vector.1401" = type { %"class.std::__1::__vector_base.1402" }
%"class.std::__1::__vector_base.1402" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1427" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1403", %"class.blink::WebVector.1341", %"class.blink::WebVector.1411", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1403" = type { %"class.std::__1::vector.1404" }
%"class.std::__1::vector.1404" = type { %"class.std::__1::__vector_base.1405" }
%"class.std::__1::__vector_base.1405" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1411" = type { %"class.std::__1::vector.1412" }
%"class.std::__1::vector.1412" = type { %"class.std::__1::__vector_base.1413" }
%"class.std::__1::__vector_base.1413" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1422" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1414" }
%"class.blink::WebVector.1414" = type { %"class.std::__1::vector.1415" }
%"class.std::__1::vector.1415" = type { %"class.std::__1::__vector_base.1416" }
%"class.std::__1::__vector_base.1416" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.1423" }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1432" = type { %"class.absl::optional_internal::optional_data.1433" }
%"class.absl::optional_internal::optional_data.1433" = type { %"class.absl::optional_internal::optional_data_base.1434" }
%"class.absl::optional_internal::optional_data_base.1434" = type { %"class.absl::optional_internal::optional_data_dtor_base.1435" }
%"class.absl::optional_internal::optional_data_dtor_base.1435" = type { i8, [7 x i8], %union.anon.1436 }
%union.anon.1436 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1341", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.1456 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1336" = type { %"class.absl::optional_internal::optional_data.1337" }
%"class.absl::optional_internal::optional_data.1337" = type { %"class.absl::optional_internal::optional_data_base.1338" }
%"class.absl::optional_internal::optional_data_base.1338" = type { %"class.absl::optional_internal::optional_data_dtor_base.1339" }
%"class.absl::optional_internal::optional_data_dtor_base.1339" = type { i8, %union.anon.1340 }
%union.anon.1340 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1341", %"class.blink::WebString", %"class.blink::WebVector.1341", %"class.blink::WebVector.1341" }
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1308" = type { %"class.absl::optional_internal::optional_data.1309" }
%"class.absl::optional_internal::optional_data.1309" = type { %"class.absl::optional_internal::optional_data_base.1310" }
%"class.absl::optional_internal::optional_data_base.1310" = type { %"class.absl::optional_internal::optional_data_dtor_base.1311" }
%"class.absl::optional_internal::optional_data_dtor_base.1311" = type { i8, %union.anon.1312 }
%union.anon.1312 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1354", %"class.base::flat_map.1368", i8, [7 x i8] }>
%"class.std::__1::vector.1354" = type { %"class.std::__1::__vector_base.1355" }
%"class.std::__1::__vector_base.1355" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1363" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1356", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.base::flat_map.1368" = type { %"class.base::internal::flat_tree.1369" }
%"class.base::internal::flat_tree.1369" = type { %"class.std::__1::vector.1370" }
%"class.std::__1::vector.1370" = type { %"class.std::__1::__vector_base.1371" }
%"class.std::__1::__vector_base.1371" = type { %"struct.std::__1::pair.1372"*, %"struct.std::__1::pair.1372"*, %"class.std::__1::__compressed_pair.1373" }
%"struct.std::__1::pair.1372" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"struct.std::__1::pair.1372"* }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1765", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1773", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1787", %"class.blink::FrameLoader", %"class.blink::Member.1802", %"class.blink::Member.265", %"class.blink::Member.1804", %"class.blink::Member.1806", %"class.blink::Member.1808", %"class.blink::Member.1810", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1812", %class.scoped_refptr.2032, %"class.blink::Member.2033", %"class.blink::Member.2035", %"class.blink::Member.2046", %"class.blink::Member.2048", %"class.blink::Member.2050", %"class.blink::Member.2052", %"class.blink::Member.2054", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2056", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2059", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2065", %"class.std::__1::unique_ptr.2066", %"class.absl::optional.926", i32, [4 x i8], %"class.std::__1::unique_ptr.2072", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2080", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2085", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2090", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2093", %"class.blink::Member.2095", %"class.blink::Member.2097", %"class.blink::Member.2099", %"class.mojo::StructPtr.2102", %"class.blink::Member.2110", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2112", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1702", %"class.blink::Member.1704", %"class.blink::Member.1706", i8, i32, i8, i32, %"class.blink::Member.1749", %"class.blink::Member.1729", %"class.blink::FrameLifecycle", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1457", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1368", %"class.blink::Member.1751", i8, %"class.base::UnguessableToken", %"class.absl::optional.1753", %"class.absl::optional.926", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1700", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1700", %"class.blink::Member.1729", %"class.blink::Member.1731", %"class.blink::Member.1733", i8, %"class.WTF::Vector.1735" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1722" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1710" }
%"class.blink::HeapVector.1710" = type { %"class.WTF::Vector.1713" }
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715", [32 x i8] }
%"class.WTF::VectorBufferBase.1715" = type { %"struct.std::__1::pair.1716"*, i32, i32 }
%"struct.std::__1::pair.1716" = type { %"class.WTF::AtomicString", %"class.blink::Member.1717" }
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::HeapVector.1719"* }
%"class.blink::HeapVector.1719" = type opaque
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.WTF::Vector.1725"* }
%"class.WTF::Vector.1725" = type opaque
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1735" = type { %"class.WTF::VectorBuffer.1736" }
%"class.WTF::VectorBuffer.1736" = type { %"class.WTF::VectorBufferBase.1737" }
%"class.WTF::VectorBufferBase.1737" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote.1739", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1738" }
%"class.base::StrongAlias.1738" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote.1739" = type { %"class.mojo::internal::InterfacePtrState.1740" }
%"class.mojo::internal::InterfacePtrState.1740" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1741" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1544, %"class.std::__1::unique_ptr.635", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.649, i32 }>
%class.scoped_refptr.1544 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.649, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1603", %"class.absl::optional.1608", %"class.absl::optional.1561", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1628", i8, [7 x i8], %class.scoped_refptr.649, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.662" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.649, %"class.std::__1::unique_ptr.1545", %"class.absl::optional.1555", %"struct.std::__1::atomic.207", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1561", %"class.std::__1::unique_ptr.1566", i8, i64, %class.scoped_refptr.1600, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1601", %"class.base::WeakPtrFactory.1602" }
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.649, i8, %"class.mojo::ScopedHandleBase.1548", %class.scoped_refptr.1549, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1550", i8*, %"class.base::WeakPtrFactory.1551" }
%"class.mojo::ScopedHandleBase.1548" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1549 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1550" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1551" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1555" = type { %"class.absl::optional_internal::optional_data.1556" }
%"class.absl::optional_internal::optional_data.1556" = type { %"class.absl::optional_internal::optional_data_base.1557" }
%"class.absl::optional_internal::optional_data_base.1557" = type { %"class.absl::optional_internal::optional_data_dtor_base.1558" }
%"class.absl::optional_internal::optional_data_dtor_base.1558" = type { i8, %union.anon.1559 }
%union.anon.1559 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1560", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1560" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1566" = type { %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"struct.std::__1::__compressed_pair_elem.1568" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1569", i8, i64, %class.scoped_refptr.1570, %class.scoped_refptr.1595 }
%"class.base::RepeatingCallback.1569" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1570 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1571", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1573", %"class.std::__1::map.1584", i8, [7 x i8] }>
%"class.base::RefCounted.1571" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1572 }
%class.scoped_refptr.1572 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1573" = type { %"class.std::__1::__tree.1574" }
%"class.std::__1::__tree.1574" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1575", %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::map.1584" = type { %"class.std::__1::__tree.1585" }
%"class.std::__1::__tree.1585" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1586", %"class.std::__1::__compressed_pair.1590" }
%"class.std::__1::__compressed_pair.1586" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%class.scoped_refptr.1595 = type { %"class.base::RefCountedData.1596"* }
%"class.base::RefCountedData.1596" = type opaque
%class.scoped_refptr.1600 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1601" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1602" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1603" = type { %"class.absl::optional_internal::optional_data.1604" }
%"class.absl::optional_internal::optional_data.1604" = type { %"class.absl::optional_internal::optional_data_base.1605" }
%"class.absl::optional_internal::optional_data_base.1605" = type { %"class.absl::optional_internal::optional_data_dtor_base.1606" }
%"class.absl::optional_internal::optional_data_dtor_base.1606" = type { i8, %union.anon.1607 }
%union.anon.1607 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1608" = type { %"class.absl::optional_internal::optional_data.1609" }
%"class.absl::optional_internal::optional_data.1609" = type { %"class.absl::optional_internal::optional_data_base.1610" }
%"class.absl::optional_internal::optional_data_base.1610" = type { %"class.absl::optional_internal::optional_data_dtor_base.1611" }
%"class.absl::optional_internal::optional_data_dtor_base.1611" = type { i8, [7 x i8], %union.anon.1612 }
%union.anon.1612 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1561" = type { %"class.absl::optional_internal::optional_data.1562" }
%"class.absl::optional_internal::optional_data.1562" = type { %"class.absl::optional_internal::optional_data_base.1563" }
%"class.absl::optional_internal::optional_data_base.1563" = type { %"class.absl::optional_internal::optional_data_dtor_base.1564" }
%"class.absl::optional_internal::optional_data_dtor_base.1564" = type { i8, %union.anon.1565 }
%union.anon.1565 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1613 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1613 = type { %"class.std::__1::map.1616" }
%"class.std::__1::map.1616" = type { %"class.std::__1::__tree.1617" }
%"class.std::__1::__tree.1617" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1618", %"class.std::__1::__compressed_pair.1622" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1627"*, i64 }
%"class.std::__1::unique_ptr.1627" = type opaque
%"class.std::__1::map.1628" = type { %"class.std::__1::__tree.1629" }
%"class.std::__1::__tree.1629" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1630", %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1700", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1753" = type { %"class.absl::optional_internal::optional_data.1754" }
%"class.absl::optional_internal::optional_data.1754" = type { %"class.absl::optional_internal::optional_data_base.1755" }
%"class.absl::optional_internal::optional_data_base.1755" = type { %"class.absl::optional_internal::optional_data_dtor_base.1756" }
%"class.absl::optional_internal::optional_data_dtor_base.1756" = type { i8, %union.anon.1757 }
%union.anon.1757 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1758" }
%"class.blink::HeapHashSet.1758" = type { %"class.WTF::HashSet.1761" }
%"class.WTF::HashSet.1761" = type { %"class.WTF::HashTable.1762" }
%"class.WTF::HashTable.1762" = type <{ %"class.blink::WeakMember.1764"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1764" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1765" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1766" }
%"class.blink::HeapHashMap.1766" = type { %"class.WTF::HashMap.1769" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1773" = type { %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1776", %"class.base::WeakPtrFactory.1781" }
%"class.WTF::HashMap.1776" = type { %"class.WTF::HashTable.1777" }
%"class.WTF::HashTable.1777" = type <{ %"struct.WTF::KeyValuePair.1780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1780" = type opaque
%"class.base::WeakPtrFactory.1781" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1785" }
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2468", i64, %"class.std::__1::map.2469", i8*, i64, %"class.base::WeakPtrFactory.2478" }
%"class.base::RepeatingCallback.2468" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2469" = type { %"class.std::__1::__tree.2470" }
%"class.std::__1::__tree.2470" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2471", %"class.std::__1::__compressed_pair.2475" }
%"class.std::__1::__compressed_pair.2471" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"class.std::__1::__compressed_pair.2475" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.base::WeakPtrFactory.2478" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1787" = type { %"class.WTF::HashSet.1790" }
%"class.WTF::HashSet.1790" = type { %"class.WTF::HashTable.1791" }
%"class.WTF::HashTable.1791" = type <{ %"class.blink::WeakMember.1793"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1793" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1457", %"class.blink::Member.1794", %"class.blink::Member.1648", %"class.std::__1::unique_ptr.1796", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.222" }
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::DocumentLoader"* }
%"class.std::__1::unique_ptr.1796" = type { %"class.std::__1::__compressed_pair.1797" }
%"class.std::__1::__compressed_pair.1797" = type { %"struct.std::__1::__compressed_pair_elem.1798" }
%"struct.std::__1::__compressed_pair_elem.1798" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2191", %"class.blink::Member.1457", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2196", i8, i32, %"class.blink::Color", %"class.absl::optional.2198", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2203", %"class.blink::Member.2205", %"class.blink::Member.2205", %"class.std::__1::unique_ptr.2208", i32, [4 x i8], %"class.WTF::HashSet.2211", %"class.blink::Member.2218", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2220", %"class.blink::HeapHashSet.2227", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2235", i8, %"class.blink::Member.2241", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2253", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2267", i8, %"class.std::__1::unique_ptr.2273", %"class.std::__1::unique_ptr.2390", %"class.WTF::Vector.2396", i32, %class.scoped_refptr.2401, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2402", %"class.blink::Member.2404", %"class.blink::Member.2406", %"class.blink::HeapHashSet.2408", %"class.blink::HeapHashSet.2415", %"class.std::__1::unique_ptr.2422", %"class.std::__1::unique_ptr.2428", %"class.WTF::Vector.371" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %class.scoped_refptr.2195*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2195 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2196" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2197", { i64, i64 } }
%"class.blink::WeakMember.2197" = type { %"class.blink::MemberBase.1803" }
%"class.absl::optional.2198" = type { %"class.absl::optional_internal::optional_data.2199" }
%"class.absl::optional_internal::optional_data.2199" = type { %"class.absl::optional_internal::optional_data_base.2200" }
%"class.absl::optional_internal::optional_data_base.2200" = type { %"class.absl::optional_internal::optional_data_dtor_base.2201" }
%"class.absl::optional_internal::optional_data_dtor_base.2201" = type { i8, %union.anon.2202 }
%union.anon.2202 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.2206" }
%"class.blink::MemberBase.2206" = type { %"class.blink::HeapHashSet.2207"* }
%"class.blink::HeapHashSet.2207" = type opaque
%"class.std::__1::unique_ptr.2208" = type { %"class.std::__1::__compressed_pair.2209" }
%"class.std::__1::__compressed_pair.2209" = type { %"struct.std::__1::__compressed_pair_elem.2210" }
%"struct.std::__1::__compressed_pair_elem.2210" = type { %"class.WTF::HashSet.2211"* }
%"class.WTF::HashSet.2211" = type { %"class.WTF::HashTable.2212" }
%"class.WTF::HashTable.2212" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2220" = type { %"class.WTF::HashSet.2223" }
%"class.WTF::HashSet.2223" = type { %"class.WTF::HashTable.2224" }
%"class.WTF::HashTable.2224" = type <{ %"class.blink::Member.2226"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2226" = type opaque
%"class.blink::HeapHashSet.2227" = type { %"class.WTF::HashSet.2230" }
%"class.WTF::HashSet.2230" = type { %"class.WTF::HashTable.2231" }
%"class.WTF::HashTable.2231" = type <{ %"class.blink::Member.2233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.2235" = type { %"class.std::__1::__compressed_pair.2236" }
%"class.std::__1::__compressed_pair.2236" = type { %"struct.std::__1::__compressed_pair_elem.2237" }
%"struct.std::__1::__compressed_pair_elem.2237" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2241" = type { %"class.blink::MemberBase.2242" }
%"class.blink::MemberBase.2242" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2245", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2245" = type { %"class.WTF::HashTable.2246" }
%"class.WTF::HashTable.2246" = type <{ %"struct.WTF::KeyValuePair.2248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2248" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2249", i32, i32 }
%"class.WTF::Vector.2249" = type { %"class.WTF::VectorBuffer.2250" }
%"class.WTF::VectorBuffer.2250" = type { %"class.WTF::VectorBufferBase.2251" }
%"class.WTF::VectorBufferBase.2251" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2253" = type { %"class.WTF::LinkedHashSet.2256" }
%"class.WTF::LinkedHashSet.2256" = type { %"class.WTF::HashMap.2257", %"class.WTF::VectorBackedLinkedList.2261" }
%"class.WTF::HashMap.2257" = type { %"class.WTF::HashTable.2258" }
%"class.WTF::HashTable.2258" = type <{ %"struct.WTF::KeyValuePair.2260"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2260" = type opaque
%"class.WTF::VectorBackedLinkedList.2261" = type { %"class.WTF::Vector.2262", i32, i32 }
%"class.WTF::Vector.2262" = type { %"class.WTF::VectorBuffer.2263" }
%"class.WTF::VectorBuffer.2263" = type { %"class.WTF::VectorBufferBase.2264" }
%"class.WTF::VectorBufferBase.2264" = type { %"class.WTF::VectorBackedLinkedListNode.2265"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2265" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2267" = type { %"class.std::__1::__compressed_pair.2268" }
%"class.std::__1::__compressed_pair.2268" = type { %"struct.std::__1::__compressed_pair_elem.2269" }
%"struct.std::__1::__compressed_pair_elem.2269" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2276, %class.scoped_refptr.2276, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2367", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2372", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2276 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2277", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2284" }
%"class.WTF::RefCounted.2277" = type { %"class.base::RefCounted.2278" }
%"class.base::RefCounted.2278" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2279", i32, [4 x i8] }>
%"class.WTF::Vector.2279" = type { %"class.WTF::VectorBuffer.2280" }
%"class.WTF::VectorBuffer.2280" = type { %"class.WTF::VectorBufferBase.2281" }
%"class.WTF::VectorBufferBase.2281" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2284" = type { %"class.WTF::VectorBuffer.2285" }
%"class.WTF::VectorBuffer.2285" = type { %"class.WTF::VectorBufferBase.2286" }
%"class.WTF::VectorBufferBase.2286" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2290", %"class.std::__1::unique_ptr.2339", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2287, %class.scoped_refptr.2288, %class.scoped_refptr.2289 }
%class.scoped_refptr.2287 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2303", i8, i8, %class.scoped_refptr.2287, i32, i32 }
%"class.WTF::RefCounted.2303" = type { %"class.base::RefCounted.2304" }
%"class.base::RefCounted.2304" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2288 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2452" }
%"class.blink::PaintPropertyNode.2452" = type { %"class.WTF::RefCounted.2453", i8, i8, %class.scoped_refptr.2288, i32, i32 }
%"class.WTF::RefCounted.2453" = type { %"class.base::RefCounted.2454" }
%"class.base::RefCounted.2454" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2289 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2449" }
%"class.blink::PaintPropertyNode.2449" = type { %"class.WTF::RefCounted.2450", i8, i8, %class.scoped_refptr.2289, i32, i32 }
%"class.WTF::RefCounted.2450" = type { %"class.base::RefCounted.2451" }
%"class.base::RefCounted.2451" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2293", %"class.WTF::Vector.2298", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2293" = type { %"class.WTF::VectorBuffer.2294" }
%"class.WTF::VectorBuffer.2294" = type { %"class.WTF::VectorBufferBase.2295" }
%"class.WTF::VectorBufferBase.2295" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2298" = type { %"class.WTF::VectorBuffer.2299" }
%"class.WTF::VectorBuffer.2299" = type { %"class.WTF::VectorBufferBase.2300" }
%"class.WTF::VectorBufferBase.2300" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2318" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2311, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2312", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2305" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2305" = type { %"class.std::__1::__compressed_pair.2306" }
%"class.std::__1::__compressed_pair.2306" = type { %"struct.std::__1::__compressed_pair_elem.2307" }
%"struct.std::__1::__compressed_pair_elem.2307" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2311 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2434", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2434" = type { %"class.WTF::RefCounted.2435", i8, i8, %class.scoped_refptr.2311, i32, i32 }
%"class.WTF::RefCounted.2435" = type { %"class.base::RefCounted.2436" }
%"class.base::RefCounted.2436" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2437" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2437" = type { %"class.absl::optional_internal::optional_data.2438" }
%"class.absl::optional_internal::optional_data.2438" = type { %"class.absl::optional_internal::optional_data_base.2439" }
%"class.absl::optional_internal::optional_data_base.2439" = type { %"class.absl::optional_internal::optional_data_dtor_base.2440" }
%"class.absl::optional_internal::optional_data_dtor_base.2440" = type { i8, %union.anon.2441 }
%union.anon.2441 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2442", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2442" = type { %"class.std::__1::__vector_base.2443" }
%"class.std::__1::__vector_base.2443" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2444" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2444" = type { %"struct.std::__1::__compressed_pair_elem.2445" }
%"struct.std::__1::__compressed_pair_elem.2445" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2312" = type { %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.2314" }
%"struct.std::__1::__compressed_pair_elem.2314" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2318" = type { %"class.std::__1::__compressed_pair.2319" }
%"class.std::__1::__compressed_pair.2319" = type { %"struct.std::__1::__compressed_pair_elem.2320" }
%"struct.std::__1::__compressed_pair_elem.2320" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2321", %"class.std::__1::unique_ptr.2327", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2321" = type { %"class.std::__1::__compressed_pair.2322" }
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2327" = type { %"class.std::__1::__compressed_pair.2328" }
%"class.std::__1::__compressed_pair.2328" = type { %"struct.std::__1::__compressed_pair_elem.2329" }
%"struct.std::__1::__compressed_pair_elem.2329" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2339" = type { %"class.std::__1::__compressed_pair.2340" }
%"class.std::__1::__compressed_pair.2340" = type { %"struct.std::__1::__compressed_pair_elem.2341" }
%"struct.std::__1::__compressed_pair_elem.2341" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2342", %"class.absl::optional.2342" }
%"class.absl::optional.2342" = type { %"class.absl::optional_internal::optional_data.2343" }
%"class.absl::optional_internal::optional_data.2343" = type { %"class.absl::optional_internal::optional_data_base.2344" }
%"class.absl::optional_internal::optional_data_base.2344" = type { %"class.absl::optional_internal::optional_data_dtor_base.2345" }
%"class.absl::optional_internal::optional_data_dtor_base.2345" = type { i8, [3 x i8], %union.anon.2346 }
%union.anon.2346 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2284"*, %"class.absl::optional.2352", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2352" = type { %"class.absl::optional_internal::optional_data.2353" }
%"class.absl::optional_internal::optional_data.2353" = type { %"class.absl::optional_internal::optional_data_base.2354" }
%"class.absl::optional_internal::optional_data_base.2354" = type { %"class.absl::optional_internal::optional_data_dtor_base.2355" }
%"class.absl::optional_internal::optional_data_dtor_base.2355" = type { i8, %union.anon.2356 }
%union.anon.2356 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2357", %"class.WTF::Vector.2362" }
%"class.WTF::Vector.2357" = type { %"class.WTF::VectorBuffer.2358" }
%"class.WTF::VectorBuffer.2358" = type { %"class.WTF::VectorBufferBase.2359", [128 x i8] }
%"class.WTF::VectorBufferBase.2359" = type { i32*, i32, i32 }
%"class.WTF::Vector.2362" = type { %"class.WTF::VectorBuffer.2363" }
%"class.WTF::VectorBuffer.2363" = type { %"class.WTF::VectorBufferBase.2364", [128 x i8] }
%"class.WTF::VectorBufferBase.2364" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2367" = type { %"class.WTF::VectorBuffer.2368" }
%"class.WTF::VectorBuffer.2368" = type { %"class.WTF::VectorBufferBase.2369" }
%"class.WTF::VectorBufferBase.2369" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2372" = type { %"class.WTF::HashTable.2373" }
%"class.WTF::HashTable.2373" = type <{ %"struct.WTF::KeyValuePair.2376"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2376" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2377", %"class.WTF::Vector.2382" }
%"class.WTF::HashMap.2377" = type { %"class.WTF::HashTable.2378" }
%"class.WTF::HashTable.2378" = type <{ %"struct.WTF::KeyValuePair.2381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2381" = type opaque
%"class.WTF::Vector.2382" = type { %"class.WTF::VectorBuffer.2383" }
%"class.WTF::VectorBuffer.2383" = type { %"class.WTF::VectorBufferBase.2384" }
%"class.WTF::VectorBufferBase.2384" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2390" = type { %"class.std::__1::__compressed_pair.2391" }
%"class.std::__1::__compressed_pair.2391" = type { %"struct.std::__1::__compressed_pair_elem.2392" }
%"struct.std::__1::__compressed_pair_elem.2392" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2396" = type { %"class.WTF::VectorBuffer.2397" }
%"class.WTF::VectorBuffer.2397" = type { %"class.WTF::VectorBufferBase.2398" }
%"class.WTF::VectorBufferBase.2398" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2401 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2404" = type { %"class.blink::MemberBase.2405" }
%"class.blink::MemberBase.2405" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2408" = type { %"class.WTF::HashSet.2411" }
%"class.WTF::HashSet.2411" = type { %"class.WTF::HashTable.2412" }
%"class.WTF::HashTable.2412" = type <{ %"class.blink::WeakMember.2414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2414" = type opaque
%"class.blink::HeapHashSet.2415" = type { %"class.WTF::HashSet.2418" }
%"class.WTF::HashSet.2418" = type { %"class.WTF::HashTable.2419" }
%"class.WTF::HashTable.2419" = type <{ %"class.blink::WeakMember.2421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2421" = type opaque
%"class.std::__1::unique_ptr.2422" = type { %"class.std::__1::__compressed_pair.2423" }
%"class.std::__1::__compressed_pair.2423" = type { %"struct.std::__1::__compressed_pair_elem.2424" }
%"struct.std::__1::__compressed_pair_elem.2424" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2428" = type { %"class.std::__1::__compressed_pair.2429" }
%"class.std::__1::__compressed_pair.2429" = type { %"struct.std::__1::__compressed_pair_elem.2430" }
%"struct.std::__1::__compressed_pair_elem.2430" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.954", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1823", %"class.blink::HeapListHashSet.1834", %"class.blink::HeapListHashSet.1845", %"class.blink::HeapListHashSet.1856", %"class.blink::HeapListHashSet.1867", %"class.blink::HeapListHashSet.1878", %"class.blink::HeapListHashSet.1889", %"class.blink::HeapListHashSet.1900", %"class.blink::HeapListHashSet.1911", %"class.blink::HeapListHashSet.1922", %"class.blink::HeapListHashSet.1933", %"class.blink::HeapListHashSet.1944", %"class.blink::HeapListHashSet.1955", %"class.blink::HeapListHashSet.1966", %"class.blink::HeapListHashSet.1977", %"class.blink::HeapListHashSet.1988", %"class.blink::HeapListHashSet.1999", %"class.blink::HeapListHashSet.2010", %"class.blink::HeapListHashSet.2021" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1819", %"class.blink::Member.1821", %"class.blink::Member.1821", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1819" = type <{ %"class.blink::Member.1821"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1821" = type { %"class.blink::MemberBase.1822" }
%"class.blink::MemberBase.1822" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2035", %"class.blink::Member.1821", %"class.blink::Member.1821" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1823" = type { %"class.WTF::ListHashSet.base.1833", [7 x i8] }
%"class.WTF::ListHashSet.base.1833" = type <{ %"class.WTF::HashTable.1828", %"class.blink::Member.1830", %"class.blink::Member.1830", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1828" = type <{ %"class.blink::Member.1830"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::HeapListHashSetNode.1832"* }
%"class.blink::HeapListHashSetNode.1832" = type { %"class.blink::Member.2185", %"class.blink::Member.1830", %"class.blink::Member.1830" }
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1834" = type { %"class.WTF::ListHashSet.base.1844", [7 x i8] }
%"class.WTF::ListHashSet.base.1844" = type <{ %"class.WTF::HashTable.1839", %"class.blink::Member.1841", %"class.blink::Member.1841", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1839" = type <{ %"class.blink::Member.1841"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::HeapListHashSetNode.1843"* }
%"class.blink::HeapListHashSetNode.1843" = type { %"class.blink::Member.2181", %"class.blink::Member.1841", %"class.blink::Member.1841" }
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1845" = type { %"class.WTF::ListHashSet.base.1855", [7 x i8] }
%"class.WTF::ListHashSet.base.1855" = type <{ %"class.WTF::HashTable.1850", %"class.blink::Member.1852", %"class.blink::Member.1852", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1850" = type <{ %"class.blink::Member.1852"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::HeapListHashSetNode.1854"* }
%"class.blink::HeapListHashSetNode.1854" = type { %"class.blink::Member.2177", %"class.blink::Member.1852", %"class.blink::Member.1852" }
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1856" = type { %"class.WTF::ListHashSet.base.1866", [7 x i8] }
%"class.WTF::ListHashSet.base.1866" = type <{ %"class.WTF::HashTable.1861", %"class.blink::Member.1863", %"class.blink::Member.1863", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1861" = type <{ %"class.blink::Member.1863"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::HeapListHashSetNode.1865"* }
%"class.blink::HeapListHashSetNode.1865" = type { %"class.blink::Member.2173", %"class.blink::Member.1863", %"class.blink::Member.1863" }
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1867" = type { %"class.WTF::ListHashSet.base.1877", [7 x i8] }
%"class.WTF::ListHashSet.base.1877" = type <{ %"class.WTF::HashTable.1872", %"class.blink::Member.1874", %"class.blink::Member.1874", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1872" = type <{ %"class.blink::Member.1874"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::HeapListHashSetNode.1876"* }
%"class.blink::HeapListHashSetNode.1876" = type { %"class.blink::Member.2169", %"class.blink::Member.1874", %"class.blink::Member.1874" }
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1878" = type { %"class.WTF::ListHashSet.base.1888", [7 x i8] }
%"class.WTF::ListHashSet.base.1888" = type <{ %"class.WTF::HashTable.1883", %"class.blink::Member.1885", %"class.blink::Member.1885", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1883" = type <{ %"class.blink::Member.1885"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::HeapListHashSetNode.1887"* }
%"class.blink::HeapListHashSetNode.1887" = type { %"class.blink::Member.2165", %"class.blink::Member.1885", %"class.blink::Member.1885" }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1889" = type { %"class.WTF::ListHashSet.base.1899", [7 x i8] }
%"class.WTF::ListHashSet.base.1899" = type <{ %"class.WTF::HashTable.1894", %"class.blink::Member.1896", %"class.blink::Member.1896", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1894" = type <{ %"class.blink::Member.1896"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::HeapListHashSetNode.1898"* }
%"class.blink::HeapListHashSetNode.1898" = type { %"class.blink::Member.2161", %"class.blink::Member.1896", %"class.blink::Member.1896" }
%"class.blink::Member.2161" = type { %"class.blink::MemberBase.2162" }
%"class.blink::MemberBase.2162" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1900" = type { %"class.WTF::ListHashSet.base.1910", [7 x i8] }
%"class.WTF::ListHashSet.base.1910" = type <{ %"class.WTF::HashTable.1905", %"class.blink::Member.1907", %"class.blink::Member.1907", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1905" = type <{ %"class.blink::Member.1907"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::HeapListHashSetNode.1909"* }
%"class.blink::HeapListHashSetNode.1909" = type { %"class.blink::Member.2157", %"class.blink::Member.1907", %"class.blink::Member.1907" }
%"class.blink::Member.2157" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1911" = type { %"class.WTF::ListHashSet.base.1921", [7 x i8] }
%"class.WTF::ListHashSet.base.1921" = type <{ %"class.WTF::HashTable.1916", %"class.blink::Member.1918", %"class.blink::Member.1918", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1916" = type <{ %"class.blink::Member.1918"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::HeapListHashSetNode.1920"* }
%"class.blink::HeapListHashSetNode.1920" = type { %"class.blink::Member.2153", %"class.blink::Member.1918", %"class.blink::Member.1918" }
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1922" = type { %"class.WTF::ListHashSet.base.1932", [7 x i8] }
%"class.WTF::ListHashSet.base.1932" = type <{ %"class.WTF::HashTable.1927", %"class.blink::Member.1929", %"class.blink::Member.1929", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1927" = type <{ %"class.blink::Member.1929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::HeapListHashSetNode.1931"* }
%"class.blink::HeapListHashSetNode.1931" = type { %"class.blink::Member.2048", %"class.blink::Member.1929", %"class.blink::Member.1929" }
%"class.blink::HeapListHashSet.1933" = type { %"class.WTF::ListHashSet.base.1943", [7 x i8] }
%"class.WTF::ListHashSet.base.1943" = type <{ %"class.WTF::HashTable.1938", %"class.blink::Member.1940", %"class.blink::Member.1940", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1938" = type <{ %"class.blink::Member.1940"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::HeapListHashSetNode.1942"* }
%"class.blink::HeapListHashSetNode.1942" = type { %"class.blink::Member.2147", %"class.blink::Member.1940", %"class.blink::Member.1940" }
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1944" = type { %"class.WTF::ListHashSet.base.1954", [7 x i8] }
%"class.WTF::ListHashSet.base.1954" = type <{ %"class.WTF::HashTable.1949", %"class.blink::Member.1951", %"class.blink::Member.1951", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1949" = type <{ %"class.blink::Member.1951"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::HeapListHashSetNode.1953"* }
%"class.blink::HeapListHashSetNode.1953" = type { %"class.blink::Member.2143", %"class.blink::Member.1951", %"class.blink::Member.1951" }
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1955" = type { %"class.WTF::ListHashSet.base.1965", [7 x i8] }
%"class.WTF::ListHashSet.base.1965" = type <{ %"class.WTF::HashTable.1960", %"class.blink::Member.1962", %"class.blink::Member.1962", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1960" = type <{ %"class.blink::Member.1962"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::HeapListHashSetNode.1964"* }
%"class.blink::HeapListHashSetNode.1964" = type { %"class.blink::Member.2139", %"class.blink::Member.1962", %"class.blink::Member.1962" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1966" = type { %"class.WTF::ListHashSet.base.1976", [7 x i8] }
%"class.WTF::ListHashSet.base.1976" = type <{ %"class.WTF::HashTable.1971", %"class.blink::Member.1973", %"class.blink::Member.1973", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1971" = type <{ %"class.blink::Member.1973"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::HeapListHashSetNode.1975"* }
%"class.blink::HeapListHashSetNode.1975" = type { %"class.blink::Member.2135", %"class.blink::Member.1973", %"class.blink::Member.1973" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1977" = type { %"class.WTF::ListHashSet.base.1987", [7 x i8] }
%"class.WTF::ListHashSet.base.1987" = type <{ %"class.WTF::HashTable.1982", %"class.blink::Member.1984", %"class.blink::Member.1984", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1982" = type <{ %"class.blink::Member.1984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::HeapListHashSetNode.1986"* }
%"class.blink::HeapListHashSetNode.1986" = type { %"class.blink::Member.2131", %"class.blink::Member.1984", %"class.blink::Member.1984" }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1988" = type { %"class.WTF::ListHashSet.base.1998", [7 x i8] }
%"class.WTF::ListHashSet.base.1998" = type <{ %"class.WTF::HashTable.1993", %"class.blink::Member.1995", %"class.blink::Member.1995", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1993" = type <{ %"class.blink::Member.1995"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::HeapListHashSetNode.1997"* }
%"class.blink::HeapListHashSetNode.1997" = type { %"class.blink::Member.2127", %"class.blink::Member.1995", %"class.blink::Member.1995" }
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1999" = type { %"class.WTF::ListHashSet.base.2009", [7 x i8] }
%"class.WTF::ListHashSet.base.2009" = type <{ %"class.WTF::HashTable.2004", %"class.blink::Member.2006", %"class.blink::Member.2006", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2004" = type <{ %"class.blink::Member.2006"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::HeapListHashSetNode.2008"* }
%"class.blink::HeapListHashSetNode.2008" = type { %"class.blink::Member.2123", %"class.blink::Member.2006", %"class.blink::Member.2006" }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2010" = type { %"class.WTF::ListHashSet.base.2020", [7 x i8] }
%"class.WTF::ListHashSet.base.2020" = type <{ %"class.WTF::HashTable.2015", %"class.blink::Member.2017", %"class.blink::Member.2017", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2015" = type <{ %"class.blink::Member.2017"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2017" = type { %"class.blink::MemberBase.2018" }
%"class.blink::MemberBase.2018" = type { %"class.blink::HeapListHashSetNode.2019"* }
%"class.blink::HeapListHashSetNode.2019" = type { %"class.blink::Member.2050", %"class.blink::Member.2017", %"class.blink::Member.2017" }
%"class.blink::HeapListHashSet.2021" = type { %"class.WTF::ListHashSet.base.2031", [7 x i8] }
%"class.WTF::ListHashSet.base.2031" = type <{ %"class.WTF::HashTable.2026", %"class.blink::Member.2028", %"class.blink::Member.2028", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2026" = type <{ %"class.blink::Member.2028"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::HeapListHashSetNode.2030"* }
%"class.blink::HeapListHashSetNode.2030" = type { %"class.blink::Member.2033", %"class.blink::Member.2028", %"class.blink::Member.2028" }
%class.scoped_refptr.2032 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1457", %"class.WTF::Vector.709", i32, [4 x i8], %"class.blink::HeapHashMap.2039", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2039" = type { %"class.WTF::HashMap.2042" }
%"class.WTF::HashMap.2042" = type { %"class.WTF::HashTable.2043" }
%"class.WTF::HashTable.2043" = type <{ %"struct.WTF::KeyValuePair.2045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2045" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2056" = type { %"class.blink::Member.2057" }
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2481" }
%"class.mojo::Remote.2481" = type { %"class.mojo::internal::InterfacePtrState.2482" }
%"class.mojo::internal::InterfacePtrState.2482" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2483" }
%"class.std::__1::unique_ptr.2483" = type { %"class.std::__1::__compressed_pair.2484" }
%"class.std::__1::__compressed_pair.2484" = type { %"struct.std::__1::__compressed_pair_elem.2485" }
%"struct.std::__1::__compressed_pair_elem.2485" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2059" = type { %"class.std::__1::__compressed_pair.2060" }
%"class.std::__1::__compressed_pair.2060" = type { %"struct.std::__1::__compressed_pair_elem.2061" }
%"struct.std::__1::__compressed_pair_elem.2061" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.2065" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2066" = type { %"class.std::__1::__compressed_pair.2067" }
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.2068" }
%"struct.std::__1::__compressed_pair_elem.2068" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2072" = type { %"class.std::__1::__compressed_pair.2073" }
%"class.std::__1::__compressed_pair.2073" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"struct.std::__1::__compressed_pair_elem.2074" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2078" }
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2491" }
%"class.mojo::AssociatedRemote.2491" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2492" }
%"class.mojo::internal::AssociatedInterfacePtrState.2492" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2493" }
%"class.std::__1::unique_ptr.2493" = type { %"class.std::__1::__compressed_pair.2494" }
%"class.std::__1::__compressed_pair.2494" = type { %"struct.std::__1::__compressed_pair_elem.2495" }
%"struct.std::__1::__compressed_pair_elem.2495" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2080" = type { %"class.blink::Member.2081" }
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2501" }
%"class.mojo::AssociatedRemote.2501" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2502" }
%"class.mojo::internal::AssociatedInterfacePtrState.2502" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2503" }
%"class.std::__1::unique_ptr.2503" = type { %"class.std::__1::__compressed_pair.2504" }
%"class.std::__1::__compressed_pair.2504" = type { %"struct.std::__1::__compressed_pair_elem.2505" }
%"struct.std::__1::__compressed_pair_elem.2505" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2083" }
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2511", %"class.blink::Member.1457", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2511" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2512" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.635" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2512" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2085" = type { %"class.blink::Member.2086" }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2515", %"class.blink::Member.1457", %"class.mojo::AssociatedReceiver.2516" }
%"class.blink::ThreadState::PrefinalizerRegistration.2515" = type { i8 }
%"class.mojo::AssociatedReceiver.2516" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2517" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2517" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2088" }
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2520", %"class.blink::Member.1457", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2520" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1544, %"class.std::__1::unique_ptr.635", %"class.base::WeakPtrFactory.2521" }
%"class.base::WeakPtrFactory.2521" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2090" = type { %"class.blink::Member.2091" }
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2524", %"class.blink::Member.1457", %"class.mojo::AssociatedReceiver.2525" }
%"class.blink::ThreadState::PrefinalizerRegistration.2524" = type { i8 }
%"class.mojo::AssociatedReceiver.2525" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2526" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2097" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::HeapHashMap.2101"* }
%"class.blink::HeapHashMap.2101" = type opaque
%"class.mojo::StructPtr.2102" = type { %"class.std::__1::unique_ptr.2103" }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2106", %"class.mojo::InlinedStructPtr" }
%"class.mojo::InlinedStructPtr.2106" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2112" = type { %"class.absl::optional_internal::optional_data.2113" }
%"class.absl::optional_internal::optional_data.2113" = type { %"class.absl::optional_internal::optional_data_base.2114" }
%"class.absl::optional_internal::optional_data_base.2114" = type { %"class.absl::optional_internal::optional_data_dtor_base.2115" }
%"class.absl::optional_internal::optional_data_dtor_base.2115" = type { i8, %union.anon.2116 }
%union.anon.2116 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.883", %"class.blink::Member.1463", %"class.absl::optional.1465", i64, i64, i32, %class.scoped_refptr.1470, %class.scoped_refptr.1456, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1470 }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1465" = type { %"class.absl::optional_internal::optional_data.1466" }
%"class.absl::optional_internal::optional_data.1466" = type { %"class.absl::optional_internal::optional_data_base.1467" }
%"class.absl::optional_internal::optional_data_base.1467" = type { %"class.absl::optional_internal::optional_data_dtor_base.1468" }
%"class.absl::optional_internal::optional_data_dtor_base.1468" = type { i8, %union.anon.1469 }
%union.anon.1469 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%class.scoped_refptr.1470 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1472", i64, %"class.WTF::Vector.1475", %"class.WTF::Vector.1480", %"class.WTF::Vector.1496", %"class.WTF::Vector.1514", %class.scoped_refptr.1078, %"class.WTF::HashMap.1520", %"class.WTF::Vector.1525", %"class.WTF::Vector.1475", %"class.WTF::Vector.1531", %"class.WTF::HashMap.1537", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1471" }
%"class.base::RefCountedThreadSafe.1471" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"class.WTF::Vector.1480" = type { %"class.WTF::VectorBuffer.1481" }
%"class.WTF::VectorBuffer.1481" = type { %"class.WTF::VectorBufferBase.1482", [8 x i8] }
%"class.WTF::VectorBufferBase.1482" = type { %class.scoped_refptr.1483*, i32, i32 }
%class.scoped_refptr.1483 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1484", i8, %class.scoped_refptr.990, %"class.blink::WeakPersistent.1486", i32, i8, %"class.std::__1::unique_ptr.1488" }
%"class.WTF::ThreadSafeRefCounted.1484" = type { %"class.base::RefCountedThreadSafe.1485" }
%"class.base::RefCountedThreadSafe.1485" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent.1486" = type { %"class.blink::PersistentBase.1487" }
%"class.blink::PersistentBase.1487" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.1496" = type { %"class.WTF::VectorBuffer.1497" }
%"class.WTF::VectorBuffer.1497" = type { %"class.WTF::VectorBufferBase.1498" }
%"class.WTF::VectorBufferBase.1498" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1500", %"class.std::__1::unique_ptr.1506" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1499 }
%class.scoped_refptr.1499 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1517", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1517" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1520" = type { %"class.WTF::HashTable.1521" }
%"class.WTF::HashTable.1521" = type <{ %"struct.WTF::KeyValuePair.1524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1524" = type opaque
%"class.WTF::Vector.1525" = type { %"class.WTF::VectorBuffer.1526" }
%"class.WTF::VectorBuffer.1526" = type { %"class.WTF::VectorBufferBase.1527" }
%"class.WTF::VectorBufferBase.1527" = type { %"class.mojo::ScopedHandleBase.1528"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1528" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1475" = type { %"class.WTF::VectorBuffer.1476" }
%"class.WTF::VectorBuffer.1476" = type { %"class.WTF::VectorBufferBase.1477", [16 x i8] }
%"class.WTF::VectorBufferBase.1477" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533" }
%"class.WTF::VectorBufferBase.1533" = type { %"class.mojo::PendingRemote.1534"*, i32, i32 }
%"class.mojo::PendingRemote.1534" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1541" = type { i8**, %"class.std::__1::unique_ptr.2455" }
%"class.std::__1::unique_ptr.2455" = type { %"class.std::__1::__compressed_pair.2456" }
%"class.std::__1::__compressed_pair.2456" = type { %"struct.std::__1::__compressed_pair_elem.2457" }
%"struct.std::__1::__compressed_pair_elem.2457" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1637" }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.639", %"class.absl::optional.639", %"class.absl::optional.639", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1643", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1648" }
%"class.WTF::Vector.1643" = type { %"class.WTF::VectorBuffer.1644" }
%"class.WTF::VectorBuffer.1644" = type { %"class.WTF::VectorBufferBase.1645" }
%"class.WTF::VectorBufferBase.1645" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1313" = type { %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1368", %"class.base::flat_map" }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654" }
%"class.WTF::VectorBufferBase.1654" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.1657" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1661", %"class.std::__1::unique_ptr.1666", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1661" = type { %"class.WTF::HashTable.1662" }
%"class.WTF::HashTable.1662" = type <{ %"struct.WTF::KeyValuePair.1665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1665" = type { %"class.WTF::Vector.2544", %class.scoped_refptr.2548 }
%"class.WTF::Vector.2544" = type { %"class.WTF::VectorBuffer.2545" }
%"class.WTF::VectorBuffer.2545" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%class.scoped_refptr.2548 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2549", %"class.WTF::Vector.2551", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2549" = type { %"class.base::RefCounted.2550" }
%"class.base::RefCounted.2550" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2551" = type { %"class.WTF::VectorBuffer.2552" }
%"class.WTF::VectorBuffer.2552" = type { %"class.WTF::VectorBufferBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2555", i64, %"class.absl::optional.2560" }
%"class.absl::optional.2560" = type { %"class.absl::optional_internal::optional_data.2561" }
%"class.absl::optional_internal::optional_data.2561" = type { %"class.absl::optional_internal::optional_data_base.2562" }
%"class.absl::optional_internal::optional_data_base.2562" = type { %"class.absl::optional_internal::optional_data_dtor_base.2563" }
%"class.absl::optional_internal::optional_data_dtor_base.2563" = type { i8, %union.anon.2564 }
%union.anon.2564 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2565", %"class.std::__1::unique_ptr.2566" }
%"class.mojo::ScopedHandleBase.2565" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2566" = type { %"class.std::__1::__compressed_pair.2567" }
%"class.std::__1::__compressed_pair.2567" = type { %"struct.std::__1::__compressed_pair_elem.2568" }
%"struct.std::__1::__compressed_pair_elem.2568" = type { i8* }
%"class.std::__1::unique_ptr.1666" = type { %"class.std::__1::__compressed_pair.1667" }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1678" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1674", %"class.std::__1::bitset.1674", %"class.std::__1::bitset.1676" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1674" = type { %"class.std::__1::__bitset.1675" }
%"class.std::__1::__bitset.1675" = type { [11 x i64] }
%"class.std::__1::bitset.1676" = type { %"class.std::__1::__bitset.1677" }
%"class.std::__1::__bitset.1677" = type { [2 x i64] }
%"class.blink::HeapHashSet.1678" = type { %"class.WTF::HashSet.1681" }
%"class.WTF::HashSet.1681" = type { %"class.WTF::HashTable.1682" }
%"class.WTF::HashTable.1682" = type <{ %"class.blink::Member.1684"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1684" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1685" = type { %"class.WTF::VectorBuffer.1686" }
%"class.WTF::VectorBuffer.1686" = type { %"class.WTF::VectorBufferBase.1687" }
%"class.WTF::VectorBufferBase.1687" = type { i32*, i32, i32 }
%"class.blink::WebVector.1445" = type { %"class.std::__1::vector.1446" }
%"class.std::__1::vector.1446" = type { %"class.std::__1::__vector_base.1447" }
%"class.std::__1::__vector_base.1447" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1690" = type { %"class.mojo::internal::InterfacePtrState.1691" }
%"class.mojo::internal::InterfacePtrState.1691" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1692" }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::SizesAttributeParser" = type <{ %class.scoped_refptr.315, %"class.blink::MediaValues"*, %"class.blink::ExecutionContext"*, float, i8, i8, [2 x i8] }>
%"class.absl::optional.2608" = type { %"class.absl::optional_internal::optional_data.2609" }
%"class.absl::optional_internal::optional_data.2609" = type { %"class.absl::optional_internal::optional_data_base.2610" }
%"class.absl::optional_internal::optional_data_base.2610" = type { %"class.absl::optional_internal::optional_data_dtor_base.2611" }
%"class.absl::optional_internal::optional_data_dtor_base.2611" = type { i8, %union.anon.2612 }
%union.anon.2612 = type { i8 }
%"struct.blink::PageScaleConstraints" = type { %"class.blink::FloatSize", float, float, float }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.2596", i8, [7 x i8] }>
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::MediaValues"* }
%"class.blink::ContentType" = type { %"class.WTF::String" }

$_ZN5blink19TokenPreloadScanner10ScanCommonINS_9HTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb = comdat any

$_ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb = comdat any

$_ZN5blink9HTMLTokenD2Ev = comdat any

$_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN5blink14PreloadRequestD2Ev = comdat any

$_ZN5blink24CachedDocumentParametersD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11MediaValuesEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11MediaValuesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11MediaValuesEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11MediaValuesEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17MediaValuesCachedELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17MediaValuesCachedEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19TokenPreloadScanner10CheckpointEEEmm = comdat any

$_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_9HTMLTokenEEEvRKT_ = comdat any

$_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScannerC2EPKN3WTF10StringImplEPNS_17MediaValuesCachedENS_20SubresourceIntegrity17IntegrityFeaturesENS0_11ScannerTypeEbPKNS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsISC_EENS2_18PartitionAllocatorEEE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner17ProcessAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS2_18PartitionAllocatorEEE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner24MaybeUpdateExclusionInfoERKNS_4KURLER13scoped_refptrIKNS_14PreloadRequest13ExclusionInfoEE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner22HandlePictureSourceURLERNS0_11PictureDataE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner20CreatePreloadRequestERKNS_4KURLERKNS_15SegmentedStringERKNS_22ClientHintsPreferencesERKNS0_11PictureDataERKNS_24CachedDocumentParametersEPKNS_14PreloadRequest13ExclusionInfoEb = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScannerD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink19ViewportDescriptionaSERKS0_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner25SetUrlFromImageAttributesEv = comdat any

$_ZN4base14MakeRefCountedIN5blink14PreloadRequest13ExclusionInfoEJRKNS1_4KURLEN3WTF7HashSetIS4_NS1_8KURLHashENS7_10HashTraitsIS4_EENS7_18PartitionAllocatorEEESD_EEE13scoped_refptrIT_EDpOT0_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEaSERKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEC2ERKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZNK5blink19TokenPreloadScanner15StartTagScanner13ShouldPreloadERN4absl8optionalINS_12ResourceTypeEEE = comdat any

$_ZNK5blink19TokenPreloadScanner15StartTagScanner17ShouldPreloadLinkERN4absl8optionalINS_12ResourceTypeEEE = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_16CompactHTMLTokenEEEvRKT_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner21ProcessInputAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF6StringEEEvRKT_RKS4_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [25 x i8] c"HTMLPreloadScanner::scan\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"source_length\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11MediaValuesEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11MediaValuesEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11MediaValuesEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19TokenPreloadScanner10CheckpointEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TokenPreloadScanner::Checkpoint]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kPictureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kHttpEquivAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.10 = private unnamed_addr constant [24 x i8] c"content-security-policy\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"accept-ch\00", align 1
@_ZN5blink10html_names12kContentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSourceTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.12 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.13 = private unnamed_addr constant [9 x i8] c"viewport\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"referrer\00", align 1
@__const._ZN5blinkL18HandleMetaViewportERKN3WTF6StringEPKNS_24CachedDocumentParametersEPNS_17MediaValuesCachedEPN4absl8optionalINS_19ViewportDescriptionEEE.description = private unnamed_addr constant { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, [3 x i8], float, float, i8, i8, i8, i8, { { { { i8, [3 x i8], %union.anon.634 } } } } } { i32 -1431655766, %"class.blink::Length" <{ %union.anon.28 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, %"class.blink::Length" <{ %union.anon.28 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, %"class.blink::Length" <{ %union.anon.28 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, %"class.blink::Length" <{ %union.anon.28 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86, { { { { i8, [3 x i8], %union.anon.634 } } } } { { { { i8, [3 x i8], %union.anon.634 } } } { { { i8, [3 x i8], %union.anon.634 } } { { i8, [3 x i8], %union.anon.634 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.634 { i32 -1431655766 } } } } } }, align 4
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kCharsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kCrossoriginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kNonceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAsyncAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kDeferAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kIntegrityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kLanguageAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kNomoduleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kImportanceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kSrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kSizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kLoadingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names8kRelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kMediaAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kAsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kImagesrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kImagesizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kScopesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kResourcesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names6kImageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kPosterAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.15 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::KURL]\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [141 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::PreloadRequest, std::__1::default_delete<blink::PreloadRequest> >]\00", align 1
@__const._ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb.scanner = private unnamed_addr constant { %"class.WTF::StringImpl"*, %"class.WTF::String", %"class.blink::ImageCandidate", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, [1 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], float, i8, [3 x i8], i32, i32, i32, i8, [7 x i8], %"class.WTF::String", %"class.blink::MediaValuesCached"*, i8, [3 x i8], i32, i8, i8, [6 x i8], %"class.WTF::HashSet", i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.WTF::HashSet.222"* } { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.blink::ImageCandidate" <{ %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::StringView" <{ %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.blink::MediaValuesCached"* inttoptr (i64 -6148914691236517206 to %"class.blink::MediaValuesCached"*), i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::HashSet" { %"class.WTF::HashTable" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::HashSet.222"* inttoptr (i64 -6148914691236517206 to %"class.WTF::HashSet.222"*) }, align 8

@_ZN5blink19TokenPreloadScannerC1ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb = hidden unnamed_addr alias void (%"class.blink::TokenPreloadScanner"*, %"class.blink::KURL"*, %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"*, i32, i1), void (%"class.blink::TokenPreloadScanner"*, %"class.blink::KURL"*, %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"*, i32, i1)* @_ZN5blink19TokenPreloadScannerC2ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb
@_ZN5blink19TokenPreloadScannerD1Ev = hidden unnamed_addr alias void (%"class.blink::TokenPreloadScanner"*), void (%"class.blink::TokenPreloadScanner"*)* @_ZN5blink19TokenPreloadScannerD2Ev
@_ZN5blink18HTMLPreloadScannerC1ERKNS_17HTMLParserOptionsERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS7_14default_deleteIS9_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS_19TokenPreloadScanner11ScannerTypeE = hidden unnamed_addr alias void (%"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLParserOptions"*, %"class.blink::KURL"*, %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"*, i32), void (%"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLParserOptions"*, %"class.blink::KURL"*, %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"*, i32)* @_ZN5blink18HTMLPreloadScannerC2ERKNS_17HTMLParserOptionsERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS7_14default_deleteIS9_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS_19TokenPreloadScanner11ScannerTypeE
@_ZN5blink18HTMLPreloadScannerD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLPreloadScanner"*), void (%"class.blink::HTMLPreloadScanner"*)* @_ZN5blink18HTMLPreloadScannerD2Ev
@_ZN5blink24CachedDocumentParametersC1EPNS_8DocumentE = hidden unnamed_addr alias void (%"struct.blink::CachedDocumentParameters"*, %"class.blink::Document"*), void (%"struct.blink::CachedDocumentParameters"*, %"class.blink::Document"*)* @_ZN5blink24CachedDocumentParametersC2EPNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19TokenPreloadScannerC2ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb(%"class.blink::TokenPreloadScanner"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"struct.blink::CachedDocumentParameters"* %2 to i64
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSPreloadScannerC1Ev(%"class.blink::CSSPreloadScanner"* %9) #10
  %10 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %10, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %11 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %11) #10
  %12 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  %14 = bitcast %"struct.blink::TokenPreloadScanner::PictureData"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 14, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 12
  %17 = bitcast %"class.std::__1::unique_ptr.25"* %16 to i64*
  %18 = bitcast %"class.blink::PreloadRequest::ExclusionInfo"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 13, i1 false)
  store i64 %7, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11MediaValuesEEEPhm(i64 120) #10
  %21 = bitcast i8* %20 to %"class.blink::MediaValuesCached"*
  tail call void @_ZN5blink17MediaValuesCachedC1ERKNS0_21MediaValuesCachedDataE(%"class.blink::MediaValuesCached"* %21, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112) %3) #10
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %19, i64 0, i32 0
  %27 = bitcast %"class.blink::Persistent"* %19 to i8**
  store i8* %20, i8** %27, align 8
  %28 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8
  %29 = ptrtoint i8* %20 to i64
  switch i64 %29, label %30 [
    i64 0, label %56
    i64 -1, label %56
  ]

30:                                               ; preds = %6
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %46, label %49, !prof !2

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %47) #10
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi %"class.blink::PersistentNode"* [ %48, %46 ], [ %44, %37 ]
  %51 = bitcast %"class.blink::PersistentNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  store i64 %52, i64* %53, align 8
  %54 = bitcast %"class.blink::PersistentNode"* %50 to %"class.blink::PersistentBase.229"**
  store %"class.blink::PersistentBase.229"* %26, %"class.blink::PersistentBase.229"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %50, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17MediaValuesCachedELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %50, %"class.blink::PersistentNode"** %28, align 8
  br label %56

56:                                               ; preds = %49, %6, %6
  %57 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 14
  tail call void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"* %57) #10
  %58 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 15
  store i32 %4, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 16
  store i8 %8, i8* %59, align 4
  %60 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 17
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18
  %62 = bitcast %"class.WTF::Vector.233"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #10
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %16, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %63, align 8
  %65 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %64, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  tail call void @_ZN5blink17CSSPreloadScanner17SetReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::CSSPreloadScanner"* %9, i32 %66) #10
  ret void
}

declare void @_ZN5blink17CSSPreloadScannerC1Ev(%"class.blink::CSSPreloadScanner"*) unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"*) unnamed_addr #1

declare void @_ZN5blink17CSSPreloadScanner17SetReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::CSSPreloadScanner"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19TokenPreloadScannerD2Ev(%"class.blink::TokenPreloadScanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %2, align 8
  %4 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %3, null
  br i1 %4, label %39, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %36, label %9, !prof !2

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  %11 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %3, i64 %10
  br label %12

12:                                               ; preds = %30, %9
  %13 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %32, %30 ], [ %3, %9 ]
  %14 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %13, i64 0, i32 4, i32 0
  %15 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %14, align 8
  %16 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %15, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 -2
  %25 = bitcast %"class.base::RefCounted"* %24 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %26 = bitcast %"class.base::RefCounted"* %24 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %27 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %27, i64 1
  %29 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %28, align 8
  tail call void %29(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %25) #10
  br label %30

30:                                               ; preds = %23, %17, %12
  %31 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %13, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %31) #10
  %32 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %13, i64 1
  %33 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %32, %11
  br i1 %33, label %34, label %12

34:                                               ; preds = %30
  store i32 0, i32* %6, align 4
  %35 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %2, align 8
  br label %36

36:                                               ; preds = %34, %5
  %37 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %3, %5 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %37, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #10
  store %"struct.blink::TokenPreloadScanner::Checkpoint"* null, %"struct.blink::TokenPreloadScanner::Checkpoint"** %2, align 8
  br label %39

39:                                               ; preds = %1, %36
  %40 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 1, i32 0
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8
  %42 = icmp eq %"class.blink::PersistentNode"* %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %39
  %44 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %45 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %44, i64 0, i32 1
  %46 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %45) #10
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %43
  %49 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %45, i8* %49) #10
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i8* [ %49, %48 ], [ %46, %43 ]
  %52 = bitcast i8* %51 to %"class.blink::ThreadState"**
  %53 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %54, align 8
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %55, i64 0, i32 0, i32 0
  %58 = bitcast %"class.blink::PersistentRegion"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %57, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %40, align 8
  br label %62

62:                                               ; preds = %39, %50
  %63 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %63, align 8
  store %"struct.blink::CachedDocumentParameters"* null, %"struct.blink::CachedDocumentParameters"** %63, align 8
  %65 = icmp eq %"struct.blink::CachedDocumentParameters"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  tail call void @_ZN5blink24CachedDocumentParametersD2Ev(%"struct.blink::CachedDocumentParameters"* nonnull %64) #10
  %67 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %64, i64 0, i32 0
  tail call void @free(i8* %67) #10
  br label %68

68:                                               ; preds = %62, %66
  %69 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %85

85:                                               ; preds = %68, %81, %84
  %86 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3, i32 0
  %87 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %86, align 8
  %88 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %87, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #10
  %92 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 -2
  %97 = bitcast %"class.base::RefCounted"* %96 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %98 = bitcast %"class.base::RefCounted"* %96 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %99 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %99, i64 1
  %101 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %100, align 8
  tail call void %101(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %97) #10
  br label %102

102:                                              ; preds = %85, %89, %95
  %103 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %103) #10
  %104 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %104) #10
  %105 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSPreloadScannerD1Ev(%"class.blink::CSSPreloadScanner"* %105) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17CSSPreloadScannerD1Ev(%"class.blink::CSSPreloadScanner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19TokenPreloadScanner16CreateCheckpointEv(%"class.blink::TokenPreloadScanner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::TokenPreloadScanner::Checkpoint", align 8
  %3 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18
  %4 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 2, !range !4
  %12 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3, i32 0
  %15 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %14, align 8
  %16 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %15, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  %20 = ptrtoint %"class.blink::PreloadRequest::ExclusionInfo"* %15 to i64
  %21 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %21, %"class.blink::KURL"* dereferenceable(112) %7) #10
  %22 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 1
  store i8 %9, i8* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 2
  store i8 %11, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 3
  store i64 %13, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 4
  %26 = bitcast %class.scoped_refptr.24* %25 to i64*
  store i64 %20, i64* %26, align 8
  %27 = load i32, i32* %4, align 4
  %28 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %44, label %31, !prof !2

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %33, i64 %34, i32 0, i32 0
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %36, %"class.blink::KURL"* nonnull dereferenceable(112) %21) #10
  %37 = getelementptr inbounds i8, i8* %35, i64 112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %22, i64 16, i1 false) #10
  %38 = getelementptr inbounds i8, i8* %35, i64 128
  %39 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %25, i64 0, i32 0
  %40 = load i64, i64* %26, align 8
  %41 = bitcast i8* %38 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.blink::PreloadRequest::ExclusionInfo"* null, %"class.blink::PreloadRequest::ExclusionInfo"** %39, align 8
  %42 = load i32, i32* %4, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %4, align 4
  br label %61

44:                                               ; preds = %19
  call void @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.233"* %3, %"struct.blink::TokenPreloadScanner::Checkpoint"* nonnull dereferenceable(136) %2) #10
  %45 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %2, i64 0, i32 4, i32 0
  %46 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %45, align 8
  %47 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %46, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %49, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #10
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %49, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %49, i64 -2
  %56 = bitcast %"class.base::RefCounted"* %55 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %57 = bitcast %"class.base::RefCounted"* %55 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %58 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %58, i64 1
  %60 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %59, align 8
  call void %60(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %56) #10
  br label %61

61:                                               ; preds = %31, %44, %48, %54
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %6) #10
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19TokenPreloadScanner8RewindToEj(%"class.blink::TokenPreloadScanner"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18
  %4 = tail call dereferenceable(136) %"struct.blink::TokenPreloadScanner::Checkpoint"* @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.233"* %3, i32 %1) #10
  %5 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %7 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %6, %"class.blink::KURL"* dereferenceable(112) %5) #10
  %8 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %4, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  store i8 %9, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %4, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %4, i64 0, i32 4, i32 0
  %15 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %14, align 8
  %16 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %15, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  br label %19

19:                                               ; preds = %2, %17
  %20 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3
  %21 = ptrtoint %"class.blink::PreloadRequest::ExclusionInfo"* %15 to i64
  %22 = bitcast %class.scoped_refptr.24* %20 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %20, i64 0, i32 0
  %24 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %23, align 8
  store i64 %21, i64* %22, align 8
  %25 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %24, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #10
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -2
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %35 = bitcast %"class.base::RefCounted"* %33 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %36 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %36, i64 1
  %38 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %37, align 8
  tail call void %38(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %34) #10
  br label %39

39:                                               ; preds = %19, %26, %32
  %40 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 17
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %4, i64 0, i32 2
  %42 = load i8, i8* %41, align 1, !range !4
  %43 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  store i8 %42, i8* %43, align 2
  %44 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSPreloadScanner5ResetEv(%"class.blink::CSSPreloadScanner"* %44) #10
  %45 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %85, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %80, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %3, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %53, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %54, i64 %55
  br label %57

57:                                               ; preds = %75, %52
  %58 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %77, %75 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %58, i64 0, i32 4, i32 0
  %60 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %59, align 8
  %61 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #10
  %65 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 -2
  %70 = bitcast %"class.base::RefCounted"* %69 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %71 = bitcast %"class.base::RefCounted"* %69 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %72 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %72, i64 1
  %74 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %73, align 8
  tail call void %74(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %70) #10
  br label %75

75:                                               ; preds = %68, %62, %57
  %76 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %58, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %76) #10
  %77 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %58, i64 1
  %78 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %77, %56
  br i1 %78, label %79, label %57

79:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  br label %80

80:                                               ; preds = %79, %48
  %81 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %3, i64 0, i32 0, i32 0, i32 0
  %82 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %81, align 8
  %83 = bitcast %"class.WTF::Vector.233"* %3 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store i32 0, i32* %45, align 8
  %84 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %82, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #10
  br label %85

85:                                               ; preds = %39, %80
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink17CSSPreloadScanner5ResetEv(%"class.blink::CSSPreloadScanner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19TokenPreloadScanner4ScanERKNS_9HTMLTokenERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"*, %"class.blink::HTMLToken"* dereferenceable(2512), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.absl::optional.1246"*, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19TokenPreloadScanner10ScanCommonINS_9HTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"* %0, %"class.blink::HTMLToken"* dereferenceable(2512) %1, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.WTF::Vector.6"* dereferenceable(16) %3, %"class.absl::optional.1246"* %4, i8* %5)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner10ScanCommonINS_9HTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"*, %"class.blink::HTMLToken"* dereferenceable(2512), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.absl::optional.1246"*, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca [6 x i8], align 8
  %20 = alloca %"class.blink::TokenPreloadScanner::StartTagScanner", align 8
  %21 = alloca %"class.std::__1::unique_ptr", align 8
  %22 = getelementptr inbounds [6 x i8], [6 x i8]* %19, i64 0, i64 0
  %23 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %592, label %28

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %592 [
    i32 5, label %31
    i32 3, label %41
    i32 2, label %118
  ]

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %592, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %39, align 8
  tail call void @_ZN5blink17CSSPreloadScanner4ScanERK13LiteralBufferIDsLj256EERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSA_14default_deleteISC_EEEELj0ENS8_18PartitionAllocatorEEERKNS_4KURLEPKNSC_13ExclusionInfoE(%"class.blink::CSSPreloadScanner"* %36, %class.LiteralBuffer* dereferenceable(536) %37, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.WTF::Vector.6"* dereferenceable(16) %3, %"class.blink::KURL"* dereferenceable(112) %38, %"class.blink::PreloadRequest::ExclusionInfo"* %40) #10
  br label %592

41:                                               ; preds = %28
  %42 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %46 = bitcast i16** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = ptrtoint i16* %44 to i64
  %49 = sub i64 %47, %48
  %50 = lshr exact i64 %49, 1
  %51 = trunc i64 %50 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %16, i16* %44, i32 %51) #10
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"* %53
  %59 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %41
  %61 = load atomic i32, i32* %54 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %60
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i32 [ %67, %66 ], [ %65, %60 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #10
  br label %72

72:                                               ; preds = %41, %68, %71
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, %58
  br i1 %78, label %79, label %85

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %592, label %83

83:                                               ; preds = %79
  %84 = add i64 %81, -1
  store i64 %84, i64* %80, align 8
  br label %592

85:                                               ; preds = %72
  %86 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, %58
  br i1 %91, label %92, label %99

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  %94 = load i8, i8* %93, align 8, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  call void @_ZN5blink17CSSPreloadScanner5ResetEv(%"class.blink::CSSPreloadScanner"* %97) #10
  br label %98

98:                                               ; preds = %92, %96
  store i8 0, i8* %93, align 8
  br label %592

99:                                               ; preds = %85
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %58
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  store i8 0, i8* %107, align 2
  br label %592

108:                                              ; preds = %99
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE to %"class.blink::QualifiedName"**), align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, %58
  br i1 %114, label %115, label %592

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 0, i8* %116, align 1
  %117 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 3
  store i8 0, i8* %117, align 1
  br label %592

118:                                              ; preds = %28
  %119 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #10
  %120 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 0
  %121 = load i16*, i16** %120, align 8
  %122 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %123 = bitcast i16** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = ptrtoint i16* %121 to i64
  %126 = sub i64 %124, %125
  %127 = lshr exact i64 %126, 1
  %128 = trunc i64 %127 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %15, i16* %121, i32 %128) #10
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #10
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = select i1 %134, %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"* %130
  %136 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %136, label %149, label %137

137:                                              ; preds = %118
  %138 = load atomic i32, i32* %131 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %137
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %137
  %146 = phi i32 [ %144, %143 ], [ %142, %137 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #10
  br label %149

149:                                              ; preds = %118, %145, %148
  %150 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, %135
  %156 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  %157 = load i64, i64* %156, align 8
  br i1 %155, label %158, label %160

158:                                              ; preds = %149
  %159 = add i64 %157, 1
  store i64 %159, i64* %156, align 8
  br label %592

160:                                              ; preds = %149
  %161 = icmp eq i64 %157, 0
  br i1 %161, label %162, label %592

162:                                              ; preds = %160
  %163 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %164 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %165, i64 0, i32 3, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, %135
  br i1 %168, label %169, label %171

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  store i8 1, i8* %170, align 8
  br label %592

171:                                              ; preds = %162
  %172 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %172, i64 0, i32 0, i32 0
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 3, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, %135
  br i1 %177, label %178, label %180

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  store i8 1, i8* %179, align 2
  br label %180

180:                                              ; preds = %178, %171
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, %135
  br i1 %186, label %187, label %191

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %189 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %188) #10
  br i1 %189, label %190, label %592

190:                                              ; preds = %187
  call void @_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_9HTMLTokenEEEvRKT_(%"class.blink::TokenPreloadScanner"* %0, %"class.blink::HTMLToken"* dereferenceable(2512) %1)
  br label %592

191:                                              ; preds = %180
  %192 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %194, i64 0, i32 3, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, %135
  br i1 %197, label %198, label %463

198:                                              ; preds = %191
  %199 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kHttpEquivAttrE, align 8
  %200 = call %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %199)
  %201 = icmp eq %"class.blink::HTMLToken::Attribute"* %200, null
  br i1 %201, label %340, label %202

202:                                              ; preds = %198
  %203 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203)
  %204 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %200, i64 0, i32 1, i32 0
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %200, i64 0, i32 1, i32 1
  %207 = bitcast i16** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = ptrtoint i16* %205 to i64
  %210 = sub i64 %208, %209
  %211 = lshr exact i64 %210, 1
  %212 = trunc i64 %211 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %8, i16* %205, i32 %212) #10
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203)
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %272, label %216

216:                                              ; preds = %202
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 1
  %220 = bitcast %"class.WTF::StringImpl"* %219 to i8*
  %221 = icmp eq i32 %218, 23
  br i1 %221, label %224, label %222

222:                                              ; preds = %216
  %223 = bitcast %"class.WTF::StringView"* %17 to i8*
  br label %277

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %247, label %231

229:                                              ; preds = %231
  %230 = icmp eq i64 %246, 23
  br i1 %230, label %269, label %611

231:                                              ; preds = %224, %625
  %232 = phi i64 [ %626, %625 ], [ 0, %224 ]
  %233 = getelementptr inbounds i8, i8* %220, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i64
  %236 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %232
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i64
  %242 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = sext i8 %243 to i32
  %245 = icmp eq i32 %238, %244
  %246 = or i64 %232, 1
  br i1 %245, label %229, label %270

247:                                              ; preds = %224
  %248 = bitcast %"class.WTF::StringImpl"* %219 to i16*
  br label %251

249:                                              ; preds = %251
  %250 = icmp eq i64 %268, 23
  br i1 %250, label %269, label %593

251:                                              ; preds = %609, %247
  %252 = phi i64 [ 0, %247 ], [ %610, %609 ]
  %253 = getelementptr inbounds i16, i16* %248, i64 %252
  %254 = load i16, i16* %253, align 2
  %255 = add i16 %254, -65
  %256 = icmp ult i16 %255, 26
  %257 = zext i1 %256 to i16
  %258 = shl nuw nsw i16 %257, 5
  %259 = or i16 %258, %254
  %260 = zext i16 %259 to i32
  %261 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %252
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = sext i8 %265 to i32
  %267 = icmp eq i32 %260, %266
  %268 = or i64 %252, 1
  br i1 %267, label %249, label %270

269:                                              ; preds = %229, %249
  store i8 1, i8* %5, align 1
  br label %326

270:                                              ; preds = %231, %611, %251, %593
  %271 = bitcast %"class.WTF::StringView"* %17 to i8*
  br label %277

272:                                              ; preds = %202
  %273 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #10
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %274, align 8
  %275 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %276 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %275, i64* %276, align 8
  br label %283

277:                                              ; preds = %270, %222
  %278 = phi i8* [ %271, %270 ], [ %223, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #10
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %279, align 8
  %280 = load i32, i32* %217, align 4
  %281 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %282 = bitcast i8** %281 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %282, align 8
  br label %283

283:                                              ; preds = %272, %277
  %284 = phi i8* [ %278, %277 ], [ %273, %272 ]
  %285 = phi i32 [ %280, %277 ], [ 0, %272 ]
  %286 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %285, i32* %286, align 8
  %287 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, [10 x i8]* nonnull dereferenceable(10) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #10
  br i1 %287, label %288, label %326

288:                                              ; preds = %283
  %289 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kContentAttrE, align 8
  %290 = call %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %289)
  %291 = icmp eq %"class.blink::HTMLToken::Attribute"* %290, null
  br i1 %291, label %326, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 14
  %294 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #10
  %295 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295)
  %296 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %290, i64 0, i32 1, i32 0
  %297 = load i16*, i16** %296, align 8
  %298 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %290, i64 0, i32 1, i32 1
  %299 = bitcast i16** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = ptrtoint i16* %297 to i64
  %302 = sub i64 %300, %301
  %303 = lshr exact i64 %302, 1
  %304 = trunc i64 %303 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %7, i16* %297, i32 %304) #10
  %305 = bitcast %"class.WTF::String"* %7 to i64*
  %306 = load i64, i64* %305, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295)
  %307 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %308 = bitcast %"class.WTF::String"* %18 to i64*
  store i64 %306, i64* %308, align 8
  %309 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  call void @_ZN5blink22ClientHintsPreferences27UpdateFromHttpEquivAcceptCHERKN3WTF6StringERKNS_4KURLEPNS0_7ContextE(%"class.blink::ClientHintsPreferences"* %293, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.blink::KURL"* dereferenceable(112) %309, %"class.blink::ClientHintsPreferences::Context"* null) #10
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %292
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #10
  br label %325

325:                                              ; preds = %292, %321, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #10
  br label %326

326:                                              ; preds = %325, %288, %283, %269
  br i1 %215, label %592, label %327

327:                                              ; preds = %326
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %592

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #10
  br label %592

340:                                              ; preds = %198
  %341 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %23, align 8
  %342 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %343 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %342, align 8
  %344 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  %345 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %346 = call %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %345) #10
  %347 = icmp eq %"class.blink::HTMLToken::Attribute"* %346, null
  br i1 %347, label %463, label %348

348:                                              ; preds = %340
  %349 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #10
  %350 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %346, i64 0, i32 1, i32 0
  %351 = load i16*, i16** %350, align 8
  %352 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %346, i64 0, i32 1, i32 1
  %353 = bitcast i16** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = ptrtoint i16* %351 to i64
  %356 = sub i64 %354, %355
  %357 = lshr exact i64 %356, 1
  %358 = trunc i64 %357 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %11, i16* %351, i32 %358) #10
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #10
  %361 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kContentAttrE, align 8
  %362 = call %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %361) #10
  %363 = icmp eq %"class.blink::HTMLToken::Attribute"* %362, null
  br i1 %363, label %448, label %364

364:                                              ; preds = %348
  %365 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #10
  %366 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %367 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #10
  %368 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %362, i64 0, i32 1, i32 0
  %369 = load i16*, i16** %368, align 8
  %370 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %362, i64 0, i32 1, i32 1
  %371 = bitcast i16** %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = ptrtoint i16* %369 to i64
  %374 = sub i64 %372, %373
  %375 = lshr exact i64 %374, 1
  %376 = trunc i64 %375 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %10, i16* %369, i32 %376) #10
  %377 = bitcast %"class.WTF::String"* %10 to i64*
  %378 = load i64, i64* %377, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #10
  %379 = bitcast %"class.WTF::String"* %12 to i64*
  store i64 %378, i64* %379, align 8
  %380 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %380) #10
  %381 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %364
  %383 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %383, align 8
  %384 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %385 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %384, i64* %385, align 8
  br label %393

386:                                              ; preds = %364
  %387 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %387, align 8
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 1
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %392 = bitcast i8** %391 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %390, %"class.WTF::StringImpl"** %392, align 8
  br label %393

393:                                              ; preds = %386, %382
  %394 = phi i32 [ %389, %386 ], [ 0, %382 ]
  %395 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %394, i32* %395, align 8
  %396 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, [9 x i8]* nonnull dereferenceable(9) @.str.13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %380) #10
  br i1 %396, label %397, label %398

397:                                              ; preds = %393
  call fastcc void @_ZN5blinkL18HandleMetaViewportERKN3WTF6StringEPKNS_24CachedDocumentParametersEPNS_17MediaValuesCachedEPN4absl8optionalINS_19ViewportDescriptionEEE(%"class.WTF::String"* nonnull dereferenceable(8) %12, %"struct.blink::CachedDocumentParameters"* %341, %"class.blink::MediaValuesCached"* %343, %"class.absl::optional.1246"* %4) #10
  br label %431

398:                                              ; preds = %393
  %399 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #10
  br i1 %381, label %400, label %404

400:                                              ; preds = %398
  %401 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %401, align 8
  %402 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %403 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %402, i64* %403, align 8
  br label %411

404:                                              ; preds = %398
  %405 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %405, align 8
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 1
  %407 = load i32, i32* %406, align 4
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 1
  %409 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %410 = bitcast i8** %409 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %408, %"class.WTF::StringImpl"** %410, align 8
  br label %411

411:                                              ; preds = %404, %400
  %412 = phi i32 [ %407, %404 ], [ 0, %400 ]
  %413 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %412, i32* %413, align 8
  %414 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, [9 x i8]* nonnull dereferenceable(9) @.str.14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #10
  br i1 %414, label %415, label %431

415:                                              ; preds = %411
  %416 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %416) #10
  store i32 1, i32* %9, align 4
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %428, label %423

423:                                              ; preds = %419
  %424 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i32 0, i32* nonnull %9) #10
  br i1 %424, label %425, label %428

425:                                              ; preds = %423
  %426 = load i32, i32* %9, align 4
  %427 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %341, i64 0, i32 5
  store i32 %426, i32* %427, align 8
  br label %428

428:                                              ; preds = %425, %423, %419, %415
  %429 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %341, i64 0, i32 5
  %430 = load i32, i32* %429, align 8
  call void @_ZN5blink17CSSPreloadScanner17SetReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::CSSPreloadScanner"* %344, i32 %430) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %416) #10
  br label %431

431:                                              ; preds = %428, %411, %397
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %432, null
  br i1 %433, label %447, label %434

434:                                              ; preds = %431
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 0
  %440 = load i32, i32* %439, align 4
  br i1 %438, label %441, label %443

441:                                              ; preds = %434
  %442 = add i32 %440, -1
  store i32 %442, i32* %439, align 4
  br label %443

443:                                              ; preds = %441, %434
  %444 = phi i32 [ %442, %441 ], [ %440, %434 ]
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %432) #10
  br label %447

447:                                              ; preds = %446, %443, %431
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #10
  br label %448

448:                                              ; preds = %447, %348
  %449 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %449, label %463, label %450

450:                                              ; preds = %448
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load atomic i32, i32* %451 monotonic, align 4
  %453 = and i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  br i1 %454, label %457, label %459

457:                                              ; preds = %450
  %458 = add i32 %456, -1
  store i32 %458, i32* %455, align 4
  br label %459

459:                                              ; preds = %457, %450
  %460 = phi i32 [ %458, %457 ], [ %456, %450 ]
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %463

462:                                              ; preds = %459
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #10
  br label %463

463:                                              ; preds = %462, %459, %448, %340, %191
  %464 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %465 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %464, i64 0, i32 0, i32 0
  %466 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %466, i64 0, i32 3, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %468, %135
  br i1 %469, label %470, label %472

470:                                              ; preds = %463
  %471 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 7
  store i8 1, i8* %471, align 1
  br label %521

472:                                              ; preds = %463
  %473 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %474 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %473, i64 0, i32 0, i32 0
  %475 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %474, align 8
  %476 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %475, i64 0, i32 3, i32 0, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, %135
  br i1 %478, label %479, label %481

479:                                              ; preds = %472
  %480 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 8
  store i8 1, i8* %480, align 4
  br label %521

481:                                              ; preds = %472
  %482 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE to %"class.blink::QualifiedName"**), align 8
  %483 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %482, i64 0, i32 0, i32 0
  %484 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %483, align 8
  %485 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %484, i64 0, i32 3, i32 0, i32 0, i32 0
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %485, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, %135
  br i1 %487, label %488, label %511

488:                                              ; preds = %481
  %489 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 1, i8* %489, align 1
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %22)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 6, i1 false)
  %490 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  %491 = bitcast %"struct.blink::TokenPreloadScanner::PictureData"* %490 to i64*
  %492 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %490, i64 0, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  store i64 0, i64* %491, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %488
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #10
  br label %508

508:                                              ; preds = %507, %504, %488
  %509 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 1
  %510 = bitcast float* %509 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %510, i8* nonnull align 8 %22, i64 6, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %22)
  br label %592

511:                                              ; preds = %481
  %512 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %513 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %512, i64 0, i32 0, i32 0
  %514 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %513, align 8
  %515 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %514, i64 0, i32 3, i32 0, i32 0, i32 0
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %515, align 8
  %517 = icmp eq %"class.WTF::StringImpl"* %516, %135
  br i1 %517, label %521, label %518

518:                                              ; preds = %511
  %519 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 0, i8* %519, align 1
  %520 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 3
  store i8 0, i8* %520, align 1
  br label %521

521:                                              ; preds = %479, %511, %518, %470
  %522 = bitcast %"class.blink::TokenPreloadScanner::StartTagScanner"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %522) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %522, i8* align 8 bitcast ({ %"class.WTF::StringImpl"*, %"class.WTF::String", %"class.blink::ImageCandidate", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, [1 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], float, i8, [3 x i8], i32, i32, i32, i8, [7 x i8], %"class.WTF::String", %"class.blink::MediaValuesCached"*, i8, [3 x i8], i32, i8, i8, [6 x i8], %"class.WTF::HashSet", i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.WTF::HashSet.222"* }* @__const._ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb.scanner to i8*), i64 264, i1 false)
  %523 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %524 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %523, align 8
  %525 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %23, align 8
  %526 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %525, i64 0, i32 6
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 15
  %529 = load i32, i32* %528, align 8
  %530 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 16
  %531 = load i8, i8* %530, align 4, !range !4
  %532 = icmp ne i8 %531, 0
  %533 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %525, i64 0, i32 10
  call void @_ZN5blink19TokenPreloadScanner15StartTagScannerC2EPKN3WTF10StringImplEPNS_17MediaValuesCachedENS_20SubresourceIntegrity17IntegrityFeaturesENS0_11ScannerTypeEbPKNS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsISC_EENS2_18PartitionAllocatorEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20, %"class.WTF::StringImpl"* %135, %"class.blink::MediaValuesCached"* %524, i32 %527, i32 %529, i1 zeroext %532, %"class.WTF::HashSet.222"* %533)
  %534 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 6
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner17ProcessAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS2_18PartitionAllocatorEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20, %"class.WTF::Vector.1224"* dereferenceable(1936) %534)
  %535 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  %536 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3
  %537 = call zeroext i1 @_ZN5blink19TokenPreloadScanner15StartTagScanner24MaybeUpdateExclusionInfoERKNS_4KURLER13scoped_refptrIKNS_14PreloadRequest13ExclusionInfoEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20, %"class.blink::KURL"* dereferenceable(112) %535, %class.scoped_refptr.24* dereferenceable(8) %536)
  br i1 %537, label %591, label %538

538:                                              ; preds = %521
  %539 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  %540 = load i8, i8* %539, align 1, !range !4
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %548, label %542

542:                                              ; preds = %538
  %543 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %523, align 8
  %544 = call double @_ZNK5blink17MediaValuesCached13ViewportWidthEv(%"class.blink::MediaValuesCached"* %543) #10
  %545 = fcmp une double %544, 0.000000e+00
  br i1 %545, label %546, label %548

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22HandlePictureSourceURLERNS0_11PictureDataE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20, %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16) %547)
  br label %548

548:                                              ; preds = %538, %546, %542
  %549 = bitcast %"class.std::__1::unique_ptr"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #10
  %550 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::PreloadRequest"* inttoptr (i64 -6148914691236517206 to %"class.blink::PreloadRequest"*), %"class.blink::PreloadRequest"** %550, align 8
  %551 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %552 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 14
  %553 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  %554 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %23, align 8
  %555 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %536, i64 0, i32 0
  %556 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %555, align 8
  %557 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 8
  %558 = load i8, i8* %557, align 4, !range !4
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %560, label %564

560:                                              ; preds = %548
  %561 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 7
  %562 = load i8, i8* %561, align 1, !range !4
  %563 = icmp ne i8 %562, 0
  br label %564

564:                                              ; preds = %548, %560
  %565 = phi i1 [ true, %548 ], [ %563, %560 ]
  %566 = call %"class.blink::PreloadRequest"* @_ZN5blink19TokenPreloadScanner15StartTagScanner20CreatePreloadRequestERKNS_4KURLERKNS_15SegmentedStringERKNS_22ClientHintsPreferencesERKNS0_11PictureDataERKNS_24CachedDocumentParametersEPKNS_14PreloadRequest13ExclusionInfoEb(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20, %"class.blink::KURL"* dereferenceable(112) %551, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.blink::ClientHintsPreferences"* dereferenceable(16) %552, %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16) %553, %"struct.blink::CachedDocumentParameters"* dereferenceable(88) %554, %"class.blink::PreloadRequest::ExclusionInfo"* %556, i1 zeroext %565)
  store %"class.blink::PreloadRequest"* %566, %"class.blink::PreloadRequest"** %550, align 8
  %567 = icmp eq %"class.blink::PreloadRequest"* %566, null
  %568 = ptrtoint %"class.blink::PreloadRequest"* %566 to i64
  br i1 %567, label %569, label %570

569:                                              ; preds = %564
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %550, align 8
  br label %590

570:                                              ; preds = %564
  %571 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 2
  %572 = load i32, i32* %571, align 4
  %573 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 1
  %574 = load i32, i32* %573, align 8
  %575 = icmp eq i32 %572, %574
  br i1 %575, label %584, label %576, !prof !2

576:                                              ; preds = %570
  %577 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 0
  %578 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %577, align 8
  %579 = zext i32 %572 to i64
  %580 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %578, i64 %579
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %550, align 8
  %581 = bitcast %"class.std::__1::unique_ptr"* %580 to i64*
  store i64 %568, i64* %581, align 8
  %582 = load i32, i32* %571, align 4
  %583 = add i32 %582, 1
  store i32 %583, i32* %571, align 4
  br label %585

584:                                              ; preds = %570
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.6"* %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %21) #10
  br label %585

585:                                              ; preds = %584, %576
  %586 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %550, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %550, align 8
  %587 = icmp eq %"class.blink::PreloadRequest"* %586, null
  br i1 %587, label %590, label %588

588:                                              ; preds = %585
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %586) #10
  %589 = bitcast %"class.blink::PreloadRequest"* %586 to i8*
  call void @free(i8* %589) #10
  br label %590

590:                                              ; preds = %569, %585, %588
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #10
  br label %591

591:                                              ; preds = %521, %590
  call void @_ZN5blink19TokenPreloadScanner15StartTagScannerD2Ev(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %522) #10
  br label %592

592:                                              ; preds = %339, %336, %326, %158, %169, %190, %508, %591, %160, %187, %98, %106, %79, %83, %115, %108, %31, %6, %28, %35
  ret void

593:                                              ; preds = %249
  %594 = getelementptr inbounds i16, i16* %248, i64 %268
  %595 = load i16, i16* %594, align 2
  %596 = add i16 %595, -65
  %597 = icmp ult i16 %596, 26
  %598 = zext i1 %597 to i16
  %599 = shl nuw nsw i16 %598, 5
  %600 = or i16 %599, %595
  %601 = zext i16 %600 to i32
  %602 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %268
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i64
  %605 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %604
  %606 = load i8, i8* %605, align 1
  %607 = sext i8 %606 to i32
  %608 = icmp eq i32 %601, %607
  br i1 %608, label %609, label %270

609:                                              ; preds = %593
  %610 = add nuw nsw i64 %252, 2
  br label %251

611:                                              ; preds = %229
  %612 = getelementptr inbounds i8, i8* %220, i64 %246
  %613 = load i8, i8* %612, align 1
  %614 = zext i8 %613 to i64
  %615 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %614
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %246
  %619 = load i8, i8* %618, align 1
  %620 = zext i8 %619 to i64
  %621 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %620
  %622 = load i8, i8* %621, align 1
  %623 = sext i8 %622 to i32
  %624 = icmp eq i32 %617, %623
  br i1 %624, label %625, label %270

625:                                              ; preds = %611
  %626 = add nuw nsw i64 %232, 2
  br label %231
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19TokenPreloadScanner4ScanERKNS_16CompactHTMLTokenERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"*, %"class.blink::CompactHTMLToken"* dereferenceable(40), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.absl::optional.1246"*, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"* %0, %"class.blink::CompactHTMLToken"* dereferenceable(40) %1, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.WTF::Vector.6"* dereferenceable(16) %3, %"class.absl::optional.1246"* %4, i8* %5)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"*, %"class.blink::CompactHTMLToken"* dereferenceable(40), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.absl::optional.1246"*, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca [6 x i8], align 8
  %15 = alloca %"class.blink::TokenPreloadScanner::StartTagScanner", align 8
  %16 = alloca %"class.std::__1::unique_ptr", align 8
  %17 = getelementptr inbounds [6 x i8], [6 x i8]* %14, i64 0, i64 0
  %18 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %590, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 15
  %27 = zext i8 %26 to i32
  switch i32 %27, label %590 [
    i32 5, label %28
    i32 3, label %38
    i32 2, label %91
  ]

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 8, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %590, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1
  %35 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %36 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3, i32 0
  %37 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %36, align 8
  tail call void @_ZN5blink17CSSPreloadScanner4ScanERKN3WTF6StringERKNS_15SegmentedStringERNS1_6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS1_18PartitionAllocatorEEERKNS_4KURLEPKNSB_13ExclusionInfoE(%"class.blink::CSSPreloadScanner"* %33, %"class.WTF::String"* dereferenceable(8) %34, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.WTF::Vector.6"* dereferenceable(16) %3, %"class.blink::KURL"* dereferenceable(112) %35, %"class.blink::PreloadRequest::ExclusionInfo"* %37) #10
  br label %590

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"* %40
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, %45
  br i1 %51, label %52, label %58

52:                                               ; preds = %38
  %53 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %590, label %56

56:                                               ; preds = %52
  %57 = add i64 %54, -1
  store i64 %57, i64* %53, align 8
  br label %590

58:                                               ; preds = %38
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %45
  br i1 %64, label %65, label %72

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  %67 = load i8, i8* %66, align 8, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSPreloadScanner5ResetEv(%"class.blink::CSSPreloadScanner"* %70) #10
  br label %71

71:                                               ; preds = %65, %69
  store i8 0, i8* %66, align 8
  br label %590

72:                                               ; preds = %58
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, %45
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  store i8 0, i8* %80, align 2
  br label %590

81:                                               ; preds = %72
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, %45
  br i1 %87, label %88, label %590

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 3
  store i8 0, i8* %90, align 1
  br label %590

91:                                               ; preds = %23
  %92 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = select i1 %97, %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"* %93
  %99 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, %98
  %105 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 11
  %106 = load i64, i64* %105, align 8
  br i1 %104, label %107, label %109

107:                                              ; preds = %91
  %108 = add i64 %106, 1
  store i64 %108, i64* %105, align 8
  br label %590

109:                                              ; preds = %91
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %111, label %590

111:                                              ; preds = %109
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, %98
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 4
  store i8 1, i8* %119, align 8
  br label %590

120:                                              ; preds = %111
  %121 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, %98
  br i1 %126, label %127, label %129

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 6
  store i8 1, i8* %128, align 2
  br label %129

129:                                              ; preds = %127, %120
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, %98
  br i1 %135, label %136, label %140

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %138 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %137) #10
  br i1 %138, label %139, label %590

139:                                              ; preds = %136
  tail call void @_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_16CompactHTMLTokenEEEvRKT_(%"class.blink::TokenPreloadScanner"* %0, %"class.blink::CompactHTMLToken"* dereferenceable(40) %1)
  br label %590

140:                                              ; preds = %129
  %141 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, %98
  br i1 %146, label %147, label %403

147:                                              ; preds = %140
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kHttpEquivAttrE, align 8
  %149 = tail call %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %148) #10
  %150 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %149, null
  br i1 %150, label %265, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %149, i64 0, i32 1, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %227, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #10
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !2

169:                                              ; preds = %160
  tail call void @llvm.trap() #10
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %170, %155
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 1
  %176 = bitcast %"class.WTF::StringImpl"* %175 to i8*
  %177 = icmp eq i32 %174, 23
  br i1 %177, label %180, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.WTF::StringView"* %13 to i8*
  br label %232

180:                                              ; preds = %172
  %181 = load atomic i32, i32* %156 monotonic, align 4
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %202, label %186

184:                                              ; preds = %186
  %185 = icmp eq i64 %201, 23
  br i1 %185, label %224, label %609

186:                                              ; preds = %180, %623
  %187 = phi i64 [ %624, %623 ], [ 0, %180 ]
  %188 = getelementptr inbounds i8, i8* %176, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %187
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  %201 = or i64 %187, 1
  br i1 %200, label %184, label %225

202:                                              ; preds = %180
  %203 = bitcast %"class.WTF::StringImpl"* %175 to i16*
  br label %206

204:                                              ; preds = %206
  %205 = icmp eq i64 %223, 23
  br i1 %205, label %224, label %591

206:                                              ; preds = %607, %202
  %207 = phi i64 [ 0, %202 ], [ %608, %607 ]
  %208 = getelementptr inbounds i16, i16* %203, i64 %207
  %209 = load i16, i16* %208, align 2
  %210 = add i16 %209, -65
  %211 = icmp ult i16 %210, 26
  %212 = zext i1 %211 to i16
  %213 = shl nuw nsw i16 %212, 5
  %214 = or i16 %213, %209
  %215 = zext i16 %214 to i32
  %216 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %207
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = sext i8 %220 to i32
  %222 = icmp eq i32 %215, %221
  %223 = or i64 %207, 1
  br i1 %222, label %204, label %225

224:                                              ; preds = %184, %204
  store i8 1, i8* %5, align 1
  br label %251

225:                                              ; preds = %186, %609, %206, %591
  %226 = bitcast %"class.WTF::StringView"* %13 to i8*
  br label %232

227:                                              ; preds = %151
  %228 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #10
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %229, align 8
  %230 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %231 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %230, i64* %231, align 8
  br label %238

232:                                              ; preds = %225, %178
  %233 = phi i8* [ %226, %225 ], [ %179, %178 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #10
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %234, align 8
  %235 = load i32, i32* %173, align 4
  %236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %237 = bitcast i8** %236 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %237, align 8
  br label %238

238:                                              ; preds = %227, %232
  %239 = phi i8* [ %233, %232 ], [ %228, %227 ]
  %240 = phi i32 [ %235, %232 ], [ 0, %227 ]
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %240, i32* %241, align 8
  %242 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, [10 x i8]* nonnull dereferenceable(10) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %239) #10
  br i1 %242, label %243, label %251

243:                                              ; preds = %238
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kContentAttrE, align 8
  %245 = call %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %244) #10
  %246 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %245, null
  br i1 %246, label %251, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 14
  %249 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %245, i64 0, i32 1
  %250 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  call void @_ZN5blink22ClientHintsPreferences27UpdateFromHttpEquivAcceptCHERKN3WTF6StringERKNS_4KURLEPNS0_7ContextE(%"class.blink::ClientHintsPreferences"* %248, %"class.WTF::String"* dereferenceable(8) %249, %"class.blink::KURL"* dereferenceable(112) %250, %"class.blink::ClientHintsPreferences::Context"* null) #10
  br label %251

251:                                              ; preds = %247, %243, %238, %224
  br i1 %154, label %590, label %252

252:                                              ; preds = %251
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %590

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %590

265:                                              ; preds = %147
  %266 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %18, align 8
  %267 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %268 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 0
  %270 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %271 = tail call %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %270) #10
  %272 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %271, null
  br i1 %272, label %403, label %273

273:                                              ; preds = %265
  %274 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %271, i64 0, i32 1, i32 0, i32 0
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %294, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %294

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = zext i32 %284 to i33
  %286 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %285, i33 1) #10
  %287 = extractvalue { i33, i1 } %286, 1
  %288 = extractvalue { i33, i1 } %286, 0
  %289 = icmp slt i33 %288, 0
  %290 = or i1 %287, %289
  br i1 %290, label %291, label %292, !prof !2

291:                                              ; preds = %282
  tail call void @llvm.trap() #10
  unreachable

292:                                              ; preds = %282
  %293 = trunc i33 %288 to i32
  store i32 %293, i32* %283, align 4
  br label %294

294:                                              ; preds = %292, %277, %273
  %295 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kContentAttrE, align 8
  %296 = tail call %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %295) #10
  %297 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %296, null
  br i1 %297, label %389, label %298

298:                                              ; preds = %294
  %299 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #10
  %300 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %296, i64 0, i32 1, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  store %"class.WTF::StringImpl"* %302, %"class.WTF::StringImpl"** %300, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %321, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %321

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i33
  %313 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %312, i33 1) #10
  %314 = extractvalue { i33, i1 } %313, 1
  %315 = extractvalue { i33, i1 } %313, 0
  %316 = icmp slt i33 %315, 0
  %317 = or i1 %314, %316
  br i1 %317, label %318, label %319, !prof !2

318:                                              ; preds = %309
  tail call void @llvm.trap() #10
  unreachable

319:                                              ; preds = %309
  %320 = trunc i33 %315 to i32
  store i32 %320, i32* %310, align 4
  br label %321

321:                                              ; preds = %319, %304, %298
  %322 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %322) #10
  br i1 %276, label %323, label %327

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %324, align 8
  %325 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %326 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %325, i64* %326, align 8
  br label %334

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %328, align 8
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 1
  %332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %333 = bitcast i8** %332 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %331, %"class.WTF::StringImpl"** %333, align 8
  br label %334

334:                                              ; preds = %327, %323
  %335 = phi i32 [ %330, %327 ], [ 0, %323 ]
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %335, i32* %336, align 8
  %337 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [9 x i8]* nonnull dereferenceable(9) @.str.13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %322) #10
  br i1 %337, label %338, label %339

338:                                              ; preds = %334
  call fastcc void @_ZN5blinkL18HandleMetaViewportERKN3WTF6StringEPKNS_24CachedDocumentParametersEPNS_17MediaValuesCachedEPN4absl8optionalINS_19ViewportDescriptionEEE(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"struct.blink::CachedDocumentParameters"* %266, %"class.blink::MediaValuesCached"* %268, %"class.absl::optional.1246"* %4) #10
  br label %372

339:                                              ; preds = %334
  %340 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #10
  br i1 %276, label %341, label %345

341:                                              ; preds = %339
  %342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %342, align 8
  %343 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %344 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %343, i64* %344, align 8
  br label %352

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 1
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %351 = bitcast i8** %350 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %349, %"class.WTF::StringImpl"** %351, align 8
  br label %352

352:                                              ; preds = %345, %341
  %353 = phi i32 [ %348, %345 ], [ 0, %341 ]
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %353, i32* %354, align 8
  %355 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [9 x i8]* nonnull dereferenceable(9) @.str.14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #10
  br i1 %355, label %356, label %372

356:                                              ; preds = %352
  %357 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %357) #10
  store i32 1, i32* %7, align 4
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %369, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %369, label %364

364:                                              ; preds = %360
  %365 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %8, i32 0, i32* nonnull %7) #10
  br i1 %365, label %366, label %369

366:                                              ; preds = %364
  %367 = load i32, i32* %7, align 4
  %368 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %266, i64 0, i32 5
  store i32 %367, i32* %368, align 8
  br label %369

369:                                              ; preds = %366, %364, %360, %356
  %370 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %266, i64 0, i32 5
  %371 = load i32, i32* %370, align 8
  call void @_ZN5blink17CSSPreloadScanner17SetReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::CSSPreloadScanner"* %269, i32 %371) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %357) #10
  br label %372

372:                                              ; preds = %369, %352, %338
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %373, null
  br i1 %374, label %388, label %375

375:                                              ; preds = %372
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  br i1 %379, label %382, label %384

382:                                              ; preds = %375
  %383 = add i32 %381, -1
  store i32 %383, i32* %380, align 4
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32 [ %383, %382 ], [ %381, %375 ]
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %373) #10
  br label %388

388:                                              ; preds = %387, %384, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #10
  br label %389

389:                                              ; preds = %388, %294
  br i1 %276, label %403, label %390

390:                                              ; preds = %389
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #10
  br label %403

403:                                              ; preds = %402, %399, %389, %265, %140
  %404 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %405 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %404, i64 0, i32 0, i32 0
  %406 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %405, align 8
  %407 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %406, i64 0, i32 3, i32 0, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, %98
  br i1 %409, label %410, label %412

410:                                              ; preds = %403
  %411 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 7
  store i8 1, i8* %411, align 1
  br label %461

412:                                              ; preds = %403
  %413 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %414 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %413, i64 0, i32 0, i32 0
  %415 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %415, i64 0, i32 3, i32 0, i32 0, i32 0
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %416, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, %98
  br i1 %418, label %419, label %421

419:                                              ; preds = %412
  %420 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 8
  store i8 1, i8* %420, align 4
  br label %461

421:                                              ; preds = %412
  %422 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE to %"class.blink::QualifiedName"**), align 8
  %423 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %423, align 8
  %425 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %424, i64 0, i32 3, i32 0, i32 0, i32 0
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %425, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %426, %98
  br i1 %427, label %428, label %451

428:                                              ; preds = %421
  %429 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 1, i8* %429, align 1
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %17)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 6, i1 false)
  %430 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  %431 = bitcast %"struct.blink::TokenPreloadScanner::PictureData"* %430 to i64*
  %432 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %430, i64 0, i32 0, i32 0, i32 0
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  store i64 0, i64* %431, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %428
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #10
  br label %448

448:                                              ; preds = %447, %444, %428
  %449 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 1
  %450 = bitcast float* %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* nonnull align 8 %17, i64 6, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %17)
  br label %590

451:                                              ; preds = %421
  %452 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %452, i64 0, i32 0, i32 0
  %454 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %454, i64 0, i32 3, i32 0, i32 0, i32 0
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, %98
  br i1 %457, label %461, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  store i8 0, i8* %459, align 1
  %460 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10, i32 3
  store i8 0, i8* %460, align 1
  br label %461

461:                                              ; preds = %419, %451, %458, %410
  %462 = bitcast %"class.blink::TokenPreloadScanner::StartTagScanner"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %462) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %462, i8* align 8 bitcast ({ %"class.WTF::StringImpl"*, %"class.WTF::String", %"class.blink::ImageCandidate", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, [1 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], float, i8, [3 x i8], i32, i32, i32, i8, [7 x i8], %"class.WTF::String", %"class.blink::MediaValuesCached"*, i8, [3 x i8], i32, i8, i8, [6 x i8], %"class.WTF::HashSet", i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.WTF::HashSet.222"* }* @__const._ZN5blink19TokenPreloadScanner10ScanCommonINS_16CompactHTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb.scanner to i8*), i64 264, i1 false)
  %463 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %464 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %463, align 8
  %465 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %18, align 8
  %466 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %465, i64 0, i32 6
  %467 = load i32, i32* %466, align 4
  %468 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 15
  %469 = load i32, i32* %468, align 8
  %470 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 16
  %471 = load i8, i8* %470, align 4, !range !4
  %472 = icmp ne i8 %471, 0
  %473 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %465, i64 0, i32 10
  call void @_ZN5blink19TokenPreloadScanner15StartTagScannerC2EPKN3WTF10StringImplEPNS_17MediaValuesCachedENS_20SubresourceIntegrity17IntegrityFeaturesENS0_11ScannerTypeEbPKNS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsISC_EENS2_18PartitionAllocatorEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15, %"class.WTF::StringImpl"* %98, %"class.blink::MediaValuesCached"* %464, i32 %467, i32 %469, i1 zeroext %472, %"class.WTF::HashSet.222"* %473)
  %474 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %15, i64 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %532, label %477

477:                                              ; preds = %461
  %478 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %479 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %481 = load i32, i32* %480, align 4
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %479, i64 %482
  %484 = icmp eq i32 %481, 0
  br i1 %484, label %487, label %526

485:                                              ; preds = %526
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  br label %487

487:                                              ; preds = %485, %477
  %488 = phi %"class.WTF::StringImpl"* [ %486, %485 ], [ %475, %477 ]
  %489 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %490 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %489, i64 0, i32 0, i32 0
  %491 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %491, i64 0, i32 3, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, %488
  br i1 %494, label %525, label %495

495:                                              ; preds = %487
  %496 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %15, i64 0, i32 6
  %497 = load i8, i8* %496, align 2, !range !4
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %532, label %499

499:                                              ; preds = %495
  %500 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %500) #10
  %501 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %15, i64 0, i32 13, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %503 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %503, label %504, label %508

504:                                              ; preds = %499
  %505 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %505, align 8
  %506 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %507 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %506, i64* %507, align 8
  br label %516

508:                                              ; preds = %499
  %509 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %502, %"class.WTF::StringImpl"** %509, align 8
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 1
  %511 = load i32, i32* %510, align 4
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 1
  %513 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %514 = bitcast i8** %513 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %512, %"class.WTF::StringImpl"** %514, align 8
  %515 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %516

516:                                              ; preds = %508, %504
  %517 = phi i64 [ %515, %508 ], [ %506, %504 ]
  %518 = phi i32 [ %511, %508 ], [ 0, %504 ]
  %519 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %518, i32* %519, align 8
  %520 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #10
  %521 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %517, i64* %521, align 8
  %522 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8** %522, align 8
  %523 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 5, i32* %523, align 8
  %524 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %500) #10
  br i1 %524, label %525, label %532

525:                                              ; preds = %516, %487
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner25SetUrlFromImageAttributesEv(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15) #10
  br label %532

526:                                              ; preds = %477, %526
  %527 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %530, %526 ], [ %479, %477 ]
  %528 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %527, i64 0, i32 0
  %529 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %527, i64 0, i32 1
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15, %"class.WTF::String"* dereferenceable(8) %528, %"class.WTF::String"* dereferenceable(8) %529) #10
  %530 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %527, i64 1
  %531 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %530, %483
  br i1 %531, label %485, label %526

532:                                              ; preds = %525, %516, %495, %461
  %533 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  %534 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 3
  %535 = call zeroext i1 @_ZN5blink19TokenPreloadScanner15StartTagScanner24MaybeUpdateExclusionInfoERKNS_4KURLER13scoped_refptrIKNS_14PreloadRequest13ExclusionInfoEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15, %"class.blink::KURL"* dereferenceable(112) %533, %class.scoped_refptr.24* dereferenceable(8) %534)
  br i1 %535, label %589, label %536

536:                                              ; preds = %532
  %537 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 5
  %538 = load i8, i8* %537, align 1, !range !4
  %539 = icmp eq i8 %538, 0
  br i1 %539, label %546, label %540

540:                                              ; preds = %536
  %541 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %463, align 8
  %542 = call double @_ZNK5blink17MediaValuesCached13ViewportWidthEv(%"class.blink::MediaValuesCached"* %541) #10
  %543 = fcmp une double %542, 0.000000e+00
  br i1 %543, label %544, label %546

544:                                              ; preds = %540
  %545 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22HandlePictureSourceURLERNS0_11PictureDataE(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15, %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16) %545)
  br label %546

546:                                              ; preds = %536, %544, %540
  %547 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #10
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::PreloadRequest"* inttoptr (i64 -6148914691236517206 to %"class.blink::PreloadRequest"*), %"class.blink::PreloadRequest"** %548, align 8
  %549 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %550 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 14
  %551 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 10
  %552 = load %"struct.blink::CachedDocumentParameters"*, %"struct.blink::CachedDocumentParameters"** %18, align 8
  %553 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %534, i64 0, i32 0
  %554 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %553, align 8
  %555 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 8
  %556 = load i8, i8* %555, align 4, !range !4
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %558, label %562

558:                                              ; preds = %546
  %559 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 7
  %560 = load i8, i8* %559, align 1, !range !4
  %561 = icmp ne i8 %560, 0
  br label %562

562:                                              ; preds = %546, %558
  %563 = phi i1 [ true, %546 ], [ %561, %558 ]
  %564 = call %"class.blink::PreloadRequest"* @_ZN5blink19TokenPreloadScanner15StartTagScanner20CreatePreloadRequestERKNS_4KURLERKNS_15SegmentedStringERKNS_22ClientHintsPreferencesERKNS0_11PictureDataERKNS_24CachedDocumentParametersEPKNS_14PreloadRequest13ExclusionInfoEb(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15, %"class.blink::KURL"* dereferenceable(112) %549, %"class.blink::SegmentedString"* dereferenceable(88) %2, %"class.blink::ClientHintsPreferences"* dereferenceable(16) %550, %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16) %551, %"struct.blink::CachedDocumentParameters"* dereferenceable(88) %552, %"class.blink::PreloadRequest::ExclusionInfo"* %554, i1 zeroext %563)
  store %"class.blink::PreloadRequest"* %564, %"class.blink::PreloadRequest"** %548, align 8
  %565 = icmp eq %"class.blink::PreloadRequest"* %564, null
  %566 = ptrtoint %"class.blink::PreloadRequest"* %564 to i64
  br i1 %565, label %567, label %568

567:                                              ; preds = %562
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %548, align 8
  br label %588

568:                                              ; preds = %562
  %569 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 2
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 1
  %572 = load i32, i32* %571, align 8
  %573 = icmp eq i32 %570, %572
  br i1 %573, label %582, label %574, !prof !2

574:                                              ; preds = %568
  %575 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 0
  %576 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %575, align 8
  %577 = zext i32 %570 to i64
  %578 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %576, i64 %577
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %548, align 8
  %579 = bitcast %"class.std::__1::unique_ptr"* %578 to i64*
  store i64 %566, i64* %579, align 8
  %580 = load i32, i32* %569, align 4
  %581 = add i32 %580, 1
  store i32 %581, i32* %569, align 4
  br label %583

582:                                              ; preds = %568
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.6"* %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %16) #10
  br label %583

583:                                              ; preds = %582, %574
  %584 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %548, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %548, align 8
  %585 = icmp eq %"class.blink::PreloadRequest"* %584, null
  br i1 %585, label %588, label %586

586:                                              ; preds = %583
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %584) #10
  %587 = bitcast %"class.blink::PreloadRequest"* %584 to i8*
  call void @free(i8* %587) #10
  br label %588

588:                                              ; preds = %567, %583, %586
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #10
  br label %589

589:                                              ; preds = %532, %588
  call void @_ZN5blink19TokenPreloadScanner15StartTagScannerD2Ev(%"class.blink::TokenPreloadScanner::StartTagScanner"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %462) #10
  br label %590

590:                                              ; preds = %264, %261, %251, %107, %118, %139, %448, %589, %109, %136, %71, %79, %52, %56, %88, %81, %28, %6, %23, %32
  ret void

591:                                              ; preds = %204
  %592 = getelementptr inbounds i16, i16* %203, i64 %223
  %593 = load i16, i16* %592, align 2
  %594 = add i16 %593, -65
  %595 = icmp ult i16 %594, 26
  %596 = zext i1 %595 to i16
  %597 = shl nuw nsw i16 %596, 5
  %598 = or i16 %597, %593
  %599 = zext i16 %598 to i32
  %600 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %223
  %601 = load i8, i8* %600, align 1
  %602 = zext i8 %601 to i64
  %603 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %602
  %604 = load i8, i8* %603, align 1
  %605 = sext i8 %604 to i32
  %606 = icmp eq i32 %599, %605
  br i1 %606, label %607, label %225

607:                                              ; preds = %591
  %608 = add nuw nsw i64 %207, 2
  br label %206

609:                                              ; preds = %184
  %610 = getelementptr inbounds i8, i8* %176, i64 %201
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i64
  %613 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %612
  %614 = load i8, i8* %613, align 1
  %615 = zext i8 %614 to i32
  %616 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.10, i64 0, i64 %201
  %617 = load i8, i8* %616, align 1
  %618 = zext i8 %617 to i64
  %619 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %618
  %620 = load i8, i8* %619, align 1
  %621 = sext i8 %620 to i32
  %622 = icmp eq i32 %615, %621
  br i1 %622, label %623, label %225

623:                                              ; preds = %609
  %624 = add nuw nsw i64 %187, 2
  br label %186
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLPreloadScannerC2ERKNS_17HTMLParserOptionsERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS7_14default_deleteIS9_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLParserOptions"* dereferenceable(2), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLParserOptions", %"class.blink::HTMLParserOptions"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp ne i8 %9, 0
  tail call void @_ZN5blink19TokenPreloadScannerC2ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb(%"class.blink::TokenPreloadScanner"* %7, %"class.blink::KURL"* dereferenceable(112) %2, %"struct.blink::CachedDocumentParameters"* %3, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112) %4, i32 %5, i1 zeroext %10)
  %11 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 0, i32 3
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 0, i32 4
  %14 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  store i8 1, i8* %13, align 1
  %15 = bitcast %"class.blink::SegmentedString"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 5
  %20 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 7
  %21 = bitcast %"class.WTF::Deque.1241"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 25, i1 false) #10
  store i8 1, i8* %20, align 1
  %22 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 3, i32 0
  %23 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 3, i32 3, i64 0
  store i16* %23, i16** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 3, i32 1
  %25 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 3, i32 2
  %26 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 3, i32 3, i64 256
  store i16* %26, i16** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 6
  %28 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 6, i32 0, i32 1, i64 0
  %29 = bitcast %"class.WTF::Vector.1224"* %27 to i8**
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 1
  store i32 10, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 8
  %33 = bitcast %"class.std::__1::unique_ptr.1230"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 1, i32 0
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %36, align 4
  %37 = ptrtoint i16* %23 to i64
  %38 = bitcast i16** %24 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2, i32 4
  store i16 0, i16* %39, align 8
  %40 = tail call noalias i8* @malloc(i64 248) #10
  %41 = bitcast i8* %40 to %"class.blink::HTMLTokenizer"*
  tail call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %41, %"class.blink::HTMLParserOptions"* dereferenceable(2) %1) #10
  %42 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = bitcast %"class.blink::HTMLTokenizer"** %42 to i8**
  store i8* %40, i8** %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLPreloadScannerD2Ev(%"class.blink::HTMLPreloadScanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %2, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLTokenizer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %3) #10
  %6 = bitcast %"class.blink::HTMLTokenizer"* %3 to i8*
  tail call void @free(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 2
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* %8) #10
  %9 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 5
  %10 = getelementptr inbounds %"class.WTF::Deque.1241", %"class.WTF::Deque.1241"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %10, align 8
  %12 = icmp eq %"class.blink::SegmentedSubstring"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.blink::SegmentedSubstring"* %11 to i8*
  %15 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 5, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 5, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.1241"* %9) #10
  %21 = bitcast %"class.WTF::Deque.1241"* %9 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %13
  %24 = phi i8* [ %22, %20 ], [ %14, %13 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #10
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %10, align 8
  br label %25

25:                                               ; preds = %23, %7
  %26 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 0
  tail call void @_ZN5blink19TokenPreloadScannerD2Ev(%"class.blink::TokenPreloadScanner"* %43) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %2, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %2, align 8
  %4 = icmp eq %"class.blink::DoctypeData"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %7, null
  %9 = bitcast i16* %7 to i8*
  br i1 %8, label %16, label %10, !prof !3

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #10
  store i16* null, i16** %6, align 8
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  %20 = bitcast i16* %18 to i8*
  br i1 %19, label %27, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #10
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 0
  tail call void @free(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %30, i64 0, i32 0, i32 0, i32 0
  br i1 %33, label %58, label %35, !prof !2

35:                                               ; preds = %29
  %36 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %36, i64 %37
  br label %39

39:                                               ; preds = %54, %35
  %40 = phi %"class.blink::HTMLToken::Attribute"* [ %55, %54 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 3, i64 0
  %44 = icmp eq i16* %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast i16* %42 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %46) #10
  br label %47

47:                                               ; preds = %45, %39
  %48 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 3, i64 0
  %51 = icmp eq i16* %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = bitcast i16* %49 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %53) #10
  br label %54

54:                                               ; preds = %52, %47
  %55 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::HTMLToken::Attribute"* %55, %38
  br i1 %56, label %57, label %39

57:                                               ; preds = %54
  store i32 0, i32* %31, align 4
  br label %58

58:                                               ; preds = %57, %29
  %59 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"class.blink::HTMLToken::Attribute"*
  %62 = icmp eq %"class.blink::HTMLToken::Attribute"* %59, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1225"* %64, %"class.blink::HTMLToken::Attribute"* %59) #10
  br label %65

65:                                               ; preds = %58, %63
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 3, i64 0
  %69 = icmp eq i16* %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast i16* %67 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %71) #10
  br label %72

72:                                               ; preds = %65, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %0, i64 0, i32 1
  tail call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %3, %"class.blink::SegmentedString"* dereferenceable(88) %1) #10
  ret void
}

declare void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLPreloadScanner4ScanERKNS_4KURLEPN4absl8optionalINS_19ViewportDescriptionEEERb(%"class.WTF::Vector.6"* noalias sret, %"class.blink::HTMLPreloadScanner"*, %"class.blink::KURL"* dereferenceable(112), %"class.absl::optional.1246"*, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i8, align 1
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12, !prof !3

12:                                               ; preds = %5
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 1
  %15 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %14) #10
  store i32 %15, i32* %6, align 4
  %16 = call i64 @_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  br label %17

17:                                               ; preds = %5, %12
  %18 = phi i64 [ -6148914691236517206, %5 ], [ %16, %12 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), %12 ]
  %20 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %12 ]
  %21 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %2) #10
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 0, i32 2
  %24 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %23, %"class.blink::KURL"* dereferenceable(112) %2) #10
  br label %25

25:                                               ; preds = %22, %17
  %26 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2
  %31 = call zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"* %28, %"class.blink::SegmentedString"* dereferenceable(88) %29, %"class.blink::HTMLToken"* dereferenceable(2512) %30) #10
  br i1 %31, label %32, label %84

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %30, i64 0, i32 0
  %34 = bitcast %"class.WTF::String"* %7 to i8*
  %35 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 3, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 3, i32 1
  %37 = bitcast i16** %36 to i64*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 1, i32 0
  %41 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 2
  %42 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 3
  %43 = bitcast %class.LiteralBuffer* %42 to i64*
  %44 = getelementptr inbounds %"class.blink::HTMLPreloadScanner", %"class.blink::HTMLPreloadScanner"* %1, i64 0, i32 2, i32 4
  br label %45

45:                                               ; preds = %32, %79
  %46 = load i32, i32* %33, align 8
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %73

48:                                               ; preds = %45
  %49 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %50 = load i16*, i16** %35, align 8
  %51 = load i64, i64* %37, align 8
  %52 = ptrtoint i16* %50 to i64
  %53 = sub i64 %51, %52
  %54 = lshr exact i64 %53, 1
  %55 = trunc i64 %54 to i32
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink27AttemptStaticStringCreationEPKDsjNS_14CharacterWidthE(i16* %50, i32 %55, i32 0) #10
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink13HTMLTokenizer14UpdateStateForERKN3WTF6StringE(%"class.blink::HTMLTokenizer"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %48, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %73

73:                                               ; preds = %72, %45
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #10
  store i8 0, i8* %8, align 1
  call void @_ZN5blink19TokenPreloadScanner10ScanCommonINS_9HTMLTokenEEEvRKT_RKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSB_14default_deleteISD_EEEELj0ENS9_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"* %39, %"class.blink::HTMLToken"* dereferenceable(2512) %30, %"class.blink::SegmentedString"* dereferenceable(88) %29, %"class.WTF::Vector.6"* dereferenceable(16) %0, %"class.absl::optional.1246"* %3, i8* nonnull %8) #10
  %74 = load i8, i8* %8, align 1, !range !4
  %75 = load i8, i8* %4, align 1, !range !4
  %76 = or i8 %75, %74
  store i8 %76, i8* %4, align 1
  store i32 0, i32* %33, align 8
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 4
  %77 = load i64, i64* %43, align 8
  store i64 %77, i64* %37, align 8
  store i16 0, i16* %44, align 8
  %78 = icmp eq i8 %74, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  %80 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %27, align 8
  %81 = call zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"* %80, %"class.blink::SegmentedString"* dereferenceable(88) %29, %"class.blink::HTMLToken"* dereferenceable(2512) %30) #10
  br i1 %81, label %45, label %84

82:                                               ; preds = %73
  call void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"* %29) #10
  %83 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %27, align 8
  call void @_ZN5blink13HTMLTokenizer5ResetEv(%"class.blink::HTMLTokenizer"* %83) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  br label %84

84:                                               ; preds = %79, %25, %82
  %85 = icmp eq i8* %20, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %84
  %87 = load i8, i8* %20, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %18) #10
  br label %90

90:                                               ; preds = %84, %86, %89
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

declare i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"*, %"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::HTMLToken"* dereferenceable(2512)) local_unnamed_addr #1

declare void @_ZN5blink13HTMLTokenizer14UpdateStateForERKN3WTF6StringE(%"class.blink::HTMLTokenizer"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"*) local_unnamed_addr #1

declare void @_ZN5blink13HTMLTokenizer5ResetEv(%"class.blink::HTMLTokenizer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CachedDocumentParametersC2EPNS_8DocumentE(%"struct.blink::CachedDocumentParameters"*, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca %"class.blink::WeakPersistent", align 8
  %6 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::Length"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 7, i1 false) #10
  %8 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 10
  %10 = bitcast %"class.blink::WeakPersistent"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 52, i1 false)
  %11 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %12 = icmp eq %"class.blink::Settings"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %15 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %14, i64 0, i32 71
  %16 = bitcast [14 x i8]* %15 to i112*
  %17 = load i112, i112* %16, align 8
  %18 = lshr i112 %17, 29
  %19 = trunc i112 %18 to i8
  %20 = and i8 %19, 1
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi i8 [ 1, %2 ], [ %20, %13 ]
  %23 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 0
  store i8 %22, i8* %23, align 8
  %24 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 153, i32 0, i32 0
  %26 = load %"class.blink::ViewportData"*, %"class.blink::ViewportData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ViewportData", %"class.blink::ViewportData"* %26, i64 0, i32 3
  %28 = bitcast %"class.blink::Length"* %27 to i64*
  %29 = load i64, i64* %28, align 4, !noalias !5
  store i64 %29, i64* %3, align 8, !alias.scope !5
  %30 = and i64 %29, 280375465082880
  %31 = icmp eq i64 %30, 8796093022208
  %32 = lshr i64 %29, 40
  %33 = trunc i64 %32 to i8
  br i1 %31, label %34, label %37

34:                                               ; preds = %21
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #10
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %36 = load i8, i8* %35, align 1
  br label %37

37:                                               ; preds = %21, %34
  %38 = phi i8 [ %33, %21 ], [ %36, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %40 = icmp eq i8 %38, 8
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #10
  br label %42

42:                                               ; preds = %41, %37
  %43 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 2, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %47

47:                                               ; preds = %42, %46
  %48 = bitcast %"class.blink::Length"* %6 to i64*
  %49 = load i64, i64* %3, align 8
  store i64 %49, i64* %48, align 4
  %50 = load i8, i8* %39, align 1
  %51 = icmp eq i8 %50, 8
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #10
  br label %53

53:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %54 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %55 = icmp eq %"class.blink::Settings"* %54, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %53
  %57 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %58 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %57, i64 0, i32 71
  %59 = bitcast [14 x i8]* %58 to i112*
  %60 = load i112, i112* %59, align 8
  %61 = lshr i112 %60, 104
  %62 = trunc i112 %61 to i8
  %63 = and i8 %62, 1
  br label %64

64:                                               ; preds = %53, %56
  %65 = phi i8 [ 0, %53 ], [ %63, %56 ]
  %66 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 3
  store i8 %65, i8* %66, align 4
  %67 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %68 = icmp eq %"class.blink::Settings"* %67, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %1) #10
  %71 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %70, i64 0, i32 71
  %72 = bitcast [14 x i8]* %71 to i112*
  %73 = load i112, i112* %72, align 8
  %74 = lshr i112 %73, 102
  %75 = trunc i112 %74 to i8
  %76 = and i8 %75, 1
  br label %77

77:                                               ; preds = %64, %69
  %78 = phi i8 [ 0, %64 ], [ %76, %69 ]
  %79 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 4
  store i8 %78, i8* %79, align 1
  %80 = call i32 @_ZNK5blink8Document17GetReferrerPolicyEv(%"class.blink::Document"* %1) #10
  %81 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 5
  store i32 %80, i32* %81, align 8
  %82 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %83 = call i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %82) #10
  %84 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 6
  store i32 %83, i32* %84, align 4
  %85 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %1) #10
  %86 = icmp eq %"class.blink::DocumentLoader"* %85, null
  br i1 %86, label %156, label %87

87:                                               ; preds = %77
  %88 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %1) #10
  %89 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %88, i64 0, i32 21, i32 0, i32 0
  %90 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %89, align 8
  %91 = icmp eq %"class.blink::LocalFrame"* %90, null
  br i1 %91, label %156, label %92

92:                                               ; preds = %87
  %93 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %1) #10
  %94 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %93, i64 0, i32 21, i32 0, i32 0
  %95 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %94, align 8
  %96 = call i32 @_ZNK5blink10LocalFrame23GetLazyLoadImageSettingEv(%"class.blink::LocalFrame"* %95) #10
  %97 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 7
  store i32 %96, i32* %97, align 8
  %98 = bitcast %"class.blink::WeakPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  %99 = call dereferenceable(24) %"class.blink::LazyLoadImageObserver"* @_ZN5blink8Document27EnsureLazyLoadImageObserverEv(%"class.blink::Document"* %1) #10
  %100 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0
  %101 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::LazyLoadImageObserver"* %99, %"class.blink::LazyLoadImageObserver"** %101, align 8
  %102 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %102, align 8
  %103 = ptrtoint %"class.blink::LazyLoadImageObserver"* %99 to i64
  switch i64 %103, label %104 [
    i64 0, label %131
    i64 -1, label %131
  ]

104:                                              ; preds = %92
  %105 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %106 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %105, i64 0, i32 1
  %107 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %106) #10
  %108 = icmp eq i8* %107, null
  br i1 %108, label %109, label %111, !prof !2

109:                                              ; preds = %104
  %110 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %106, i8* %110) #10
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i8* [ %110, %109 ], [ %107, %104 ]
  %113 = bitcast i8* %112 to %"class.blink::ThreadState"**
  %114 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %114, i64 0, i32 4, i32 0, i32 0, i32 0
  %116 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %117, align 8
  %119 = icmp eq %"class.blink::PersistentNode"* %118, null
  br i1 %119, label %120, label %123, !prof !2

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %116, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %121) #10
  %122 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %117, align 8
  br label %123

123:                                              ; preds = %120, %111
  %124 = phi %"class.blink::PersistentNode"* [ %122, %120 ], [ %118, %111 ]
  %125 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.blink::PersistentRegion"* %116 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %100, %"class.blink::PersistentBase"** %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %102, align 8
  %130 = load %"class.blink::LazyLoadImageObserver"*, %"class.blink::LazyLoadImageObserver"** %101, align 8
  br label %131

131:                                              ; preds = %92, %92, %123
  %132 = phi %"class.blink::LazyLoadImageObserver"* [ %99, %92 ], [ %99, %92 ], [ %130, %123 ]
  %133 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %8, i64 0, i32 0
  call void @_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %133, %"class.blink::LazyLoadImageObserver"* %132) #10
  %134 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %102, align 8
  %135 = icmp eq %"class.blink::PersistentNode"* %134, null
  br i1 %135, label %155, label %136

136:                                              ; preds = %131
  %137 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %138 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %137, i64 0, i32 1
  %139 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %138) #10
  %140 = icmp eq i8* %139, null
  br i1 %140, label %141, label %143, !prof !2

141:                                              ; preds = %136
  %142 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %138, i8* %142) #10
  br label %143

143:                                              ; preds = %141, %136
  %144 = phi i8* [ %142, %141 ], [ %139, %136 ]
  %145 = bitcast i8* %144 to %"class.blink::ThreadState"**
  %146 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %146, i64 0, i32 4, i32 0, i32 0, i32 0
  %148 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %147, align 8
  %149 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %102, align 8
  %150 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %148, i64 0, i32 0, i32 0
  %151 = bitcast %"class.blink::PersistentRegion"* %148 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.blink::PersistentNode"* %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %149, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %154, align 8
  store %"class.blink::PersistentNode"* %149, %"class.blink::PersistentNode"** %150, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %102, align 8
  br label %155

155:                                              ; preds = %131, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  br label %158

156:                                              ; preds = %87, %77
  %157 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 7
  store i32 0, i32* %157, align 8
  br label %158

158:                                              ; preds = %156, %155
  %159 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #10
  %160 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %161 = and i32 %160, 512
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %158
  call void @_ZN5blink5probe25GetDisabledImageTypesImplEPNS_16ExecutionContextEPN3WTF7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %159, %"class.WTF::HashSet.222"* %9) #10
  br label %164

164:                                              ; preds = %158, %163
  %165 = call %"class.blink::SubresourceRedirectOriginsPreloader"* @_ZN5blink35SubresourceRedirectOriginsPreloader4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %1) #10
  %166 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 9, i32 0
  call void @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.212"* %166, %"class.blink::SubresourceRedirectOriginsPreloader"* %165) #10
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8Document17GetReferrerPolicyEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZNK5blink10LocalFrame23GetLazyLoadImageSettingEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::LazyLoadImageObserver"* @_ZN5blink8Document27EnsureLazyLoadImageObserverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::SubresourceRedirectOriginsPreloader"* @_ZN5blink35SubresourceRedirectOriginsPreloader4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1225"*, %"class.blink::HTMLToken::Attribute"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::HTMLToken::Attribute"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.1241"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.1241", %"class.WTF::Deque.1241"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.1241", %"class.WTF::Deque.1241"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque.1241", %"class.WTF::Deque.1241"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #10
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque.1241", %"class.WTF::Deque.1241"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #10
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %37, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 %12
  %14 = bitcast %"struct.std::__1::pair"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #10
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 10, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %37, %50, %53
  %55 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %54, %67, %70
  %72 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %72) #10
  %73 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #10
  br label %89

89:                                               ; preds = %71, %85, %88
  %90 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %89, %102, %105
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZN5blink5probe25GetDisabledImageTypesImplEPNS_16ExecutionContextEPN3WTF7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"*, %"class.WTF::HashSet.222"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CachedDocumentParametersD2Ev(%"struct.blink::CachedDocumentParameters"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.WTF::String"*, %"class.WTF::String"** %2, align 8
  %4 = icmp eq %"class.WTF::String"* %3, null
  br i1 %4, label %37, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 10, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 %12
  %14 = bitcast %"class.WTF::String"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %39 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %40 = icmp eq %"class.blink::PersistentNode"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %37
  %42 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %43 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %42, i64 0, i32 1
  %44 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %43) #10
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %48, !prof !2

46:                                               ; preds = %41
  %47 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %43, i8* %47) #10
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i8* [ %47, %46 ], [ %44, %41 ]
  %50 = bitcast i8* %49 to %"class.blink::ThreadState"**
  %51 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %52, align 8
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %53, i64 0, i32 0, i32 0
  %56 = bitcast %"class.blink::PersistentRegion"* %53 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::PersistentNode"* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  store %"class.blink::PersistentNode"* %54, %"class.blink::PersistentNode"** %55, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8
  br label %60

60:                                               ; preds = %37, %48
  %61 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %60
  %65 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #10
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %64
  %70 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #10
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::ThreadState"**
  %74 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %75, align 8
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  %78 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %76, i64 0, i32 0, i32 0
  %79 = bitcast %"class.blink::PersistentRegion"* %76 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %78, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %61, align 8
  br label %83

83:                                               ; preds = %60, %71
  %84 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 2, i32 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 8
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %88) #10
  br label %89

89:                                               ; preds = %83, %87
  ret void
}

declare void @_ZN5blink17MediaValuesCachedC1ERKNS0_21MediaValuesCachedDataE(%"class.blink::MediaValuesCached"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11MediaValuesEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11MediaValuesEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MediaValuesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaValues"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaValues"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaValues"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11MediaValuesEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::MediaValues"*
  %3 = bitcast i8* %0 to void (%"class.blink::MediaValues"*)***
  %4 = load void (%"class.blink::MediaValues"*)**, void (%"class.blink::MediaValues"*)*** %3, align 8
  %5 = load void (%"class.blink::MediaValues"*)*, void (%"class.blink::MediaValues"*)** %4, align 8
  tail call void %5(%"class.blink::MediaValues"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11MediaValuesEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17MediaValuesCachedELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::MediaValuesCached"**
  %5 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::MediaValuesCached"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MediaValuesCached"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17MediaValuesCachedEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17MediaValuesCachedEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.233"*, %"struct.blink::TokenPreloadScanner::Checkpoint"* dereferenceable(136)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %6, align 8
  %8 = icmp ugt %"struct.blink::TokenPreloadScanner::Checkpoint"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::TokenPreloadScanner::Checkpoint"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19TokenPreloadScanner10CheckpointEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19TokenPreloadScanner10CheckpointEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.233"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 136
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::TokenPreloadScanner::Checkpoint"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.233"* %0, i32 %22) #10
  %36 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::TokenPreloadScanner::Checkpoint"* %1 to i64
  %39 = ptrtoint %"struct.blink::TokenPreloadScanner::Checkpoint"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 136
  %42 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19TokenPreloadScanner10CheckpointEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19TokenPreloadScanner10CheckpointEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.233"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 136
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::TokenPreloadScanner::Checkpoint"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.233"* %0, i32 %50) #10
  %64 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %69, i64 %72, i32 0, i32 0
  %74 = bitcast i8* %73 to %"class.blink::KURL"*
  %75 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %70, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %74, %"class.blink::KURL"* dereferenceable(112) %75) #10
  %76 = getelementptr inbounds i8, i8* %73, i64 112
  %77 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %70, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false) #10
  %78 = getelementptr inbounds i8, i8* %73, i64 128
  %79 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %70, i64 0, i32 4
  %80 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %79, i64 0, i32 0
  %81 = bitcast %class.scoped_refptr.24* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast i8* %78 to i64*
  store i64 %82, i64* %83, align 8
  store %"class.blink::PreloadRequest::ExclusionInfo"* null, %"class.blink::PreloadRequest::ExclusionInfo"** %80, align 8
  %84 = load i32, i32* %3, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.233"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %33

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.233"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %29, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %28, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %16, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %15, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %18, %"class.blink::KURL"* dereferenceable(112) %19) #10
  %20 = getelementptr inbounds i8, i8* %17, i64 112
  %21 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %15, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false) #10
  %22 = getelementptr inbounds i8, i8* %17, i64 128
  %23 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %15, i64 0, i32 4
  %24 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %23, i64 0, i32 0
  %25 = bitcast %class.scoped_refptr.24* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8* %22 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.blink::PreloadRequest::ExclusionInfo"* null, %"class.blink::PreloadRequest::ExclusionInfo"** %24, align 8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #10
  %28 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %16, i64 1
  %29 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %15, i64 1
  %30 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %29, %10
  br i1 %30, label %31, label %14

31:                                               ; preds = %14, %4
  %32 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #10
  br label %73

33:                                               ; preds = %2
  %34 = zext i32 %1 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19TokenPreloadScanner10CheckpointEEEmm(i64 %34) #10
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19TokenPreloadScanner10CheckpointEEEPKcv, i64 0, i64 0)) #10
  %37 = udiv i64 %35, 136
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %40, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %67, label %46

46:                                               ; preds = %33
  %47 = bitcast i8* %36 to %"struct.blink::TokenPreloadScanner::Checkpoint"*
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %63, %48 ], [ %40, %46 ]
  %50 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %62, %48 ], [ %47, %46 ]
  %51 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %50, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %50, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %49, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %52, %"class.blink::KURL"* dereferenceable(112) %53) #10
  %54 = getelementptr inbounds i8, i8* %51, i64 112
  %55 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %49, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #10
  %56 = getelementptr inbounds i8, i8* %51, i64 128
  %57 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %49, i64 0, i32 4
  %58 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %57, i64 0, i32 0
  %59 = bitcast %class.scoped_refptr.24* %57 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8* %56 to i64*
  store i64 %60, i64* %61, align 8
  store %"class.blink::PreloadRequest::ExclusionInfo"* null, %"class.blink::PreloadRequest::ExclusionInfo"** %58, align 8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %53) #10
  %62 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %50, i64 1
  %63 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %49, i64 1
  %64 = icmp eq %"struct.blink::TokenPreloadScanner::Checkpoint"* %63, %44
  br i1 %64, label %65, label %48

65:                                               ; preds = %48
  %66 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %39, align 8
  br label %67

67:                                               ; preds = %65, %33
  %68 = phi %"struct.blink::TokenPreloadScanner::Checkpoint"* [ %66, %65 ], [ %40, %33 ]
  %69 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %68, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #10
  %70 = bitcast %"class.WTF::Vector.233"* %0 to i64*
  store atomic i64 %38, i64* %70 monotonic, align 8
  %71 = trunc i64 %37 to i32
  %72 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %71, i32* %72, align 8
  br label %73

73:                                               ; preds = %67, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19TokenPreloadScanner10CheckpointEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 15774900
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 15774900) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 136
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(136) %"struct.blink::TokenPreloadScanner::Checkpoint"* @_ZN3WTF6VectorIN5blink19TokenPreloadScanner10CheckpointELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.233"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.233", %"class.WTF::Vector.233"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::TokenPreloadScanner::Checkpoint"*, %"struct.blink::TokenPreloadScanner::Checkpoint"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::Checkpoint", %"struct.blink::TokenPreloadScanner::Checkpoint"* %24, i64 %25
  ret %"struct.blink::TokenPreloadScanner::Checkpoint"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN5blink17CSSPreloadScanner4ScanERK13LiteralBufferIDsLj256EERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENSA_14default_deleteISC_EEEELj0ENS8_18PartitionAllocatorEEERKNS_4KURLEPKNSC_13ExclusionInfoE(%"class.blink::CSSPreloadScanner"*, %class.LiteralBuffer* dereferenceable(536), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.blink::KURL"* dereferenceable(112), %"class.blink::PreloadRequest::ExclusionInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_9HTMLTokenEEEvRKT_(%"class.blink::TokenPreloadScanner"*, %"class.blink::HTMLToken"* dereferenceable(2512)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %9 = tail call %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %8)
  %10 = icmp eq %"class.blink::HTMLToken::Attribute"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 112, i1 false)
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  %14 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %9, i64 0, i32 1, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %9, i64 0, i32 1, i32 1
  %19 = bitcast i16** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = ptrtoint i16* %17 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 1
  %24 = trunc i64 %23 to i32
  %25 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %17, i32 %24) #10
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %26, i64* %27, align 8
  %28 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %13, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %11, %41, %44
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #10
  br label %62

62:                                               ; preds = %45, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %63 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %63) #10
  %64 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #10
  br i1 %64, label %65, label %73

65:                                               ; preds = %62
  %66 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66)
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %70, align 8
  %71 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %4, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66)
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %7, %"class.blink::KURL"* nonnull %4) #10
  br label %74

73:                                               ; preds = %65, %62
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #10
  br label %74

74:                                               ; preds = %73, %72
  %75 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %76 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %75, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %63) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #10
  br label %77

77:                                               ; preds = %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLToken::Attribute"* @_ZNK5blink9HTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::HTMLToken"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %8, %44
  %13 = phi i32 [ 0, %8 ], [ %45, %44 ]
  %14 = call dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1224"* %4, i32 %13)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %15 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %14, i64 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %14, i64 0, i32 0, i32 1
  %18 = bitcast i16** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i16* %16 to i64
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 1
  %23 = trunc i64 %22 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* %16, i32 %23) #10
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %24, %27
  %29 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %43

43:                                               ; preds = %12, %39, %42
  br i1 %28, label %48, label %44

44:                                               ; preds = %43
  %45 = add nuw i32 %13, 1
  %46 = load i32, i32* %5, align 4
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %12, label %50

48:                                               ; preds = %43
  %49 = call dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1224"* %4, i32 %13)
  br label %50

50:                                               ; preds = %44, %2, %48
  %51 = phi %"class.blink::HTMLToken::Attribute"* [ %49, %48 ], [ null, %2 ], [ null, %44 ]
  ret %"class.blink::HTMLToken::Attribute"* %51
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

declare void @_ZN5blink22ClientHintsPreferences27UpdateFromHttpEquivAcceptCHERKN3WTF6StringERKNS_4KURLEPNS0_7ContextE(%"class.blink::ClientHintsPreferences"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ClientHintsPreferences::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScannerC2EPKN3WTF10StringImplEPNS_17MediaValuesCachedENS_20SubresourceIntegrity17IntegrityFeaturesENS0_11ScannerTypeEbPKNS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsISC_EENS2_18PartitionAllocatorEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::StringImpl"*, %"class.blink::MediaValuesCached"*, i32, i32, i1 zeroext, %"class.WTF::HashSet.222"*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.blink::SizesAttributeParser", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = zext i1 %5 to i8
  %11 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %14 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 1
  store i8* null, i8** %15, align 8
  %16 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 2
  store float 1.000000e+00, float* %19, align 8
  %20 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 3
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %24 = bitcast %"class.WTF::StringImpl"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 13, i1 false)
  store i8 1, i8* %23, align 1
  %25 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 10
  store i8 0, i8* %25, align 2
  %26 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  %32 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 57, i1 false)
  store i32 1, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  store %"class.blink::MediaValuesCached"* %2, %"class.blink::MediaValuesCached"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 29
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 30
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32
  %41 = bitcast %"class.WTF::HashSet"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 20, i1 false) #10
  %42 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 33
  store i32 %3, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 34
  %44 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 38
  %45 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 16, i1 false)
  store i32 %4, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  store i8 %10, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 40
  store %"class.WTF::HashSet.222"* %6, %"class.WTF::HashSet.222"** %47, align 8
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, %1
  %54 = getelementptr inbounds %"class.blink::MediaValuesCached", %"class.blink::MediaValuesCached"* %2, i64 0, i32 0
  br i1 %53, label %69, label %55

55:                                               ; preds = %7
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %1
  br i1 %61, label %69, label %62

62:                                               ; preds = %55
  %63 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, %1
  br i1 %68, label %69, label %129

69:                                               ; preds = %62, %55, %7
  %70 = bitcast %"class.blink::SizesAttributeParser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #10
  %71 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  call void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"* nonnull %8, %"class.blink::MediaValues"* %54, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::ExecutionContext"* null) #10
  %73 = call float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"* nonnull %8) #10
  store float %73, float* %27, align 4
  %74 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %8, i64 0, i32 0, i32 0
  %75 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %74, align 8
  %76 = icmp eq %"class.blink::MediaQuerySet"* %75, null
  br i1 %76, label %112, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %78) #10
  %79 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %112

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %75, i64 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::Vector.318", %"class.WTF::Vector.318"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"** %84, align 8
  %86 = icmp eq %"class.std::__1::unique_ptr.321"* %85, null
  br i1 %86, label %110, label %87, !prof !3

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::unique_ptr.321"* %85 to i8*
  %89 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %75, i64 0, i32 1, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %108, label %92, !prof !2

92:                                               ; preds = %87
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %85, i64 %93
  br label %95

95:                                               ; preds = %102, %92
  %96 = phi %"class.std::__1::unique_ptr.321"* [ %103, %102 ], [ %85, %92 ]
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %97, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %97, align 8
  %99 = icmp eq %"class.blink::MediaQuery"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %98) #10
  %101 = bitcast %"class.blink::MediaQuery"* %98 to i8*
  call void @free(i8* %101) #10
  br label %102

102:                                              ; preds = %100, %95
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %96, i64 1
  %104 = icmp eq %"class.std::__1::unique_ptr.321"* %103, %94
  br i1 %104, label %105, label %95

105:                                              ; preds = %102
  store i32 0, i32* %89, align 4
  %106 = bitcast %"class.WTF::Vector.318"* %83 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %105, %87
  %109 = phi i8* [ %107, %105 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #10
  br label %110

110:                                              ; preds = %108, %82
  %111 = bitcast %"class.blink::MediaQuerySet"* %75 to i8*
  call void @free(i8* %111) #10
  br label %112

112:                                              ; preds = %69, %77, %110
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #10
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #10
  br label %151

129:                                              ; preds = %62
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, %1
  br i1 %135, label %151, label %136

136:                                              ; preds = %129
  %137 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, %1
  br i1 %142, label %151, label %143

143:                                              ; preds = %136
  %144 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %145 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %146, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, %1
  br i1 %149, label %151, label %150

150:                                              ; preds = %143
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  br label %151

151:                                              ; preds = %128, %150, %143, %136, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner17ProcessAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS2_18PartitionAllocatorEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::Vector.1224"* dereferenceable(1936)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %126, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %23 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %24 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %25 = bitcast %"class.WTF::String"* %7 to i8*
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::String"* %7 to i64*
  br label %69

28:                                               ; preds = %123
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi %"class.WTF::StringImpl"* [ %29, %28 ], [ %9, %11 ]
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, %31
  br i1 %37, label %68, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 2, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %126, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %48, align 8
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %50, align 8
  br label %59

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %57 = bitcast i8** %56 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %59

59:                                               ; preds = %51, %47
  %60 = phi i64 [ %58, %51 ], [ %49, %47 ]
  %61 = phi i32 [ %54, %51 ], [ 0, %47 ]
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %61, i32* %62, align 8
  %63 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %60, i64* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 5, i32* %66, align 8
  %67 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #10
  br i1 %67, label %68, label %126

68:                                               ; preds = %59, %30
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner25SetUrlFromImageAttributesEv(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0) #10
  br label %126

69:                                               ; preds = %19, %123
  %70 = phi %"class.blink::HTMLToken::Attribute"* [ %13, %19 ], [ %124, %123 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %71 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %70, i64 0, i32 0, i32 0
  %72 = load i16*, i16** %71, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %70, i64 0, i32 0, i32 1
  %74 = bitcast i16** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = ptrtoint i16* %72 to i64
  %77 = sub i64 %75, %76
  %78 = lshr exact i64 %77, 1
  %79 = trunc i64 %78 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* %72, i32 %79) #10
  %80 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  store i64 %80, i64* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %26, align 8
  %81 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %70, i64 0, i32 1, i32 0
  %82 = load i16*, i16** %81, align 8
  %83 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %70, i64 0, i32 1, i32 1
  %84 = bitcast i16** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint i16* %82 to i64
  %87 = sub i64 %85, %86
  %88 = lshr exact i64 %87, 1
  %89 = trunc i64 %88 to i32
  %90 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %82, i32 %89) #10
  %91 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  store i64 %91, i64* %27, align 8
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %69
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %69, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #10
  br label %123

123:                                              ; preds = %107, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %124 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %70, i64 1
  %125 = icmp eq %"class.blink::HTMLToken::Attribute"* %124, %17
  br i1 %125, label %28, label %69

126:                                              ; preds = %68, %59, %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink19TokenPreloadScanner15StartTagScanner24MaybeUpdateExclusionInfoERKNS_4KURLER13scoped_refptrIKNS_14PreloadRequest13ExclusionInfoEE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.blink::KURL"* dereferenceable(112), %class.scoped_refptr.24* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::HashSet.20", align 8
  %5 = alloca %"class.WTF::HashSet.20", align 8
  %6 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, %7
  br i1 %13, label %14, label %102

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 8
  %16 = load i8, i8* %15, align 4, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %102, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.WTF::HashSet.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 1
  %22 = bitcast %"class.WTF::HashSet.20"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 20, i1 false) #10
  %23 = bitcast %"class.WTF::HashSet.20"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 1
  %26 = bitcast %"class.WTF::HashSet.20"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 20, i1 false) #10
  %27 = getelementptr inbounds %class.scoped_refptr.24, %class.scoped_refptr.24* %2, i64 0, i32 0
  %28 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %27, align 8
  %29 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %28, i64 0, i32 3, i32 0
  %33 = call dereferenceable(24) %"class.WTF::HashTable.21"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEaSERKS8_(%"class.WTF::HashTable.21"* nonnull %31, %"class.WTF::HashTable.21"* dereferenceable(24) %32) #10
  %34 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %27, align 8
  %35 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %34, i64 0, i32 4, i32 0
  %37 = call dereferenceable(24) %"class.WTF::HashTable.21"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEaSERKS8_(%"class.WTF::HashTable.21"* nonnull %35, %"class.WTF::HashTable.21"* dereferenceable(24) %36) #10
  br label %38

38:                                               ; preds = %18, %30
  %39 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 16
  call fastcc void @_ZN5blink12_GLOBAL__N_129ParseWebBundleUrlsAndFillHashERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.WTF::HashSet.20"* nonnull dereferenceable(24) %4)
  %40 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 17
  call fastcc void @_ZN5blink12_GLOBAL__N_129ParseWebBundleUrlsAndFillHashERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8) %40, %"class.WTF::HashSet.20"* nonnull dereferenceable(24) %5)
  %41 = call %"class.blink::PreloadRequest::ExclusionInfo"* @_ZN4base14MakeRefCountedIN5blink14PreloadRequest13ExclusionInfoEJRKNS1_4KURLEN3WTF7HashSetIS4_NS1_8KURLHashENS7_10HashTraitsIS4_EENS7_18PartitionAllocatorEEESD_EEE13scoped_refptrIT_EDpOT0_(%"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::HashSet.20"* nonnull dereferenceable(24) %4, %"class.WTF::HashSet.20"* nonnull dereferenceable(24) %5)
  %42 = ptrtoint %"class.blink::PreloadRequest::ExclusionInfo"* %41 to i64
  %43 = bitcast %class.scoped_refptr.24* %2 to i64*
  %44 = load %"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::PreloadRequest::ExclusionInfo"** %27, align 8
  store i64 %42, i64* %43, align 8
  %45 = icmp eq %"class.blink::PreloadRequest::ExclusionInfo"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::PreloadRequest::ExclusionInfo", %"class.blink::PreloadRequest::ExclusionInfo"* %44, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 -2
  %54 = bitcast %"class.base::RefCounted"* %53 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %55 = bitcast %"class.base::RefCounted"* %53 to void (%"class.blink::PreloadRequest::ExclusionInfo"*)***
  %56 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)**, void (%"class.blink::PreloadRequest::ExclusionInfo"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %56, i64 1
  %58 = load void (%"class.blink::PreloadRequest::ExclusionInfo"*)*, void (%"class.blink::PreloadRequest::ExclusionInfo"*)** %57, align 8
  call void %58(%"class.blink::PreloadRequest::ExclusionInfo"* nonnull %54) #10
  br label %59

59:                                               ; preds = %52, %46, %38
  %60 = load %"class.blink::KURL"*, %"class.blink::KURL"** %24, align 8
  %61 = icmp eq %"class.blink::KURL"* %60, null
  br i1 %61, label %80, label %62, !prof !3

62:                                               ; preds = %59
  %63 = load i32, i32* %25, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = zext i32 %63 to i64
  br label %67

67:                                               ; preds = %75, %65
  %68 = phi i64 [ 0, %65 ], [ %76, %75 ]
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 %68, i32 4
  %70 = bitcast %"class.WTF::String"* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, inttoptr (i64 -1 to i8*)
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 %68
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %74) #10
  br label %75

75:                                               ; preds = %73, %67
  %76 = add nuw nsw i64 %68, 1
  %77 = icmp eq i64 %76, %66
  br i1 %77, label %78, label %67

78:                                               ; preds = %75, %62
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #10
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %24, align 8
  br label %80

80:                                               ; preds = %59, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %81 = load %"class.blink::KURL"*, %"class.blink::KURL"** %20, align 8
  %82 = icmp eq %"class.blink::KURL"* %81, null
  br i1 %82, label %101, label %83, !prof !3

83:                                               ; preds = %80
  %84 = load i32, i32* %21, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = zext i32 %84 to i64
  br label %88

88:                                               ; preds = %96, %86
  %89 = phi i64 [ 0, %86 ], [ %97, %96 ]
  %90 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %81, i64 %89, i32 4
  %91 = bitcast %"class.WTF::String"* %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, inttoptr (i64 -1 to i8*)
  br i1 %93, label %96, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %81, i64 %89
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %95) #10
  br label %96

96:                                               ; preds = %94, %88
  %97 = add nuw nsw i64 %89, 1
  %98 = icmp eq i64 %97, %87
  br i1 %98, label %99, label %88

99:                                               ; preds = %96, %83
  %100 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %81, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #10
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %20, align 8
  br label %101

101:                                              ; preds = %80, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br label %102

102:                                              ; preds = %14, %3, %101
  %103 = phi i1 [ true, %101 ], [ false, %14 ], [ false, %3 ]
  ret i1 %103
}

declare double @_ZNK5blink17MediaValuesCached13ViewportWidthEv(%"class.blink::MediaValuesCached"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner22HandlePictureSourceURLERNS0_11PictureDataE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, %5
  br i1 %11, label %12, label %73

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %14 = load i8, i8* %13, align 1, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %73, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %73

24:                                               ; preds = %16, %20
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %27 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %26) #10
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nonnull %3) #10
  %30 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %31 = bitcast %"struct.blink::TokenPreloadScanner::PictureData"* %1 to i64*
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %30, i64* %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %46, %43, %24
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %47, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %64 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %65 = load i8, i8* %64, align 8, !range !4
  %66 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 2
  store i8 %65, i8* %66, align 4
  %67 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 1
  %71 = bitcast float* %70 to i32*
  store i32 %69, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 3
  store i8 1, i8* %72, align 1
  br label %90

73:                                               ; preds = %12, %20, %2
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, %5
  br i1 %79, label %80, label %90

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %1, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %81, i32 0)
  br label %90

90:                                               ; preds = %80, %73, %85, %89, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PreloadRequest"* @_ZN5blink19TokenPreloadScanner15StartTagScanner20CreatePreloadRequestERKNS_4KURLERKNS_15SegmentedStringERKNS_22ClientHintsPreferencesERKNS0_11PictureDataERKNS_24CachedDocumentParametersEPKNS_14PreloadRequest13ExclusionInfoEb(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::ClientHintsPreferences"* dereferenceable(16), %"struct.blink::TokenPreloadScanner::PictureData"* dereferenceable(16), %"struct.blink::CachedDocumentParameters"* dereferenceable(88), %"class.blink::PreloadRequest::ExclusionInfo"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca i16, align 2
  %12 = bitcast i16* %11 to %"class.absl::optional.2608"*
  %13 = alloca %"class.WTF::TextPosition", align 4
  %14 = alloca %"struct.blink::FetchParameters::ResourceWidth", align 4
  %15 = alloca %"class.WTF::String", align 8
  %16 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.absl::optional.2608", %"class.absl::optional.2608"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 -86, i8* %17, align 1
  store i8 0, i8* %16, align 2
  %18 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, %19
  br i1 %25, label %26, label %68

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 5
  %28 = load i8, i8* %27, align 1, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %71

38:                                               ; preds = %34, %30, %26
  %39 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 2, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 13
  %52 = tail call i16 @_ZN5blink13PreloadHelper30GetResourceTypeFromAsAttributeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %51) #10
  store i16 %52, i16* %11, align 2
  %53 = trunc i16 %52 to i8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %597, label %68

55:                                               ; preds = %46, %42, %38
  %56 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 7
  %57 = load i8, i8* %56, align 1, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  store i16 769, i16* %11, align 2
  br label %68

68:                                               ; preds = %63, %8, %59, %55, %67, %50
  %69 = phi i32 [ 2, %50 ], [ 2, %67 ], [ 0, %63 ], [ 0, %55 ], [ 0, %59 ], [ 0, %8 ]
  %70 = call zeroext i1 @_ZNK5blink19TokenPreloadScanner15StartTagScanner13ShouldPreloadERN4absl8optionalINS_12ResourceTypeEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.absl::optional.2608"* nonnull dereferenceable(2) %12)
  br i1 %70, label %71, label %597

71:                                               ; preds = %34, %68
  %72 = phi i32 [ %69, %68 ], [ 1, %34 ]
  %73 = bitcast %"class.WTF::TextPosition"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %13, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %13, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %75, align 4
  %76 = call i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"* %2) #10
  %77 = call i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"* %2) #10
  store i32 %76, i32* %74, align 4
  store i32 %77, i32* %75, align 4
  %78 = bitcast %"struct.blink::FetchParameters::ResourceWidth"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #10
  %79 = getelementptr inbounds %"struct.blink::FetchParameters::ResourceWidth", %"struct.blink::FetchParameters::ResourceWidth"* %14, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.blink::FetchParameters::ResourceWidth", %"struct.blink::FetchParameters::ResourceWidth"* %14, i64 0, i32 1
  %81 = bitcast i8* %80 to i32*
  store i32 -1431655936, i32* %81, align 4
  store float 0.000000e+00, float* %79, align 4
  %82 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %83 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %84 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %4, i64 0, i32 3
  %85 = load i8, i8* %84, align 1, !range !4
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %4, i64 0, i32 2
  %88 = getelementptr inbounds %"struct.blink::TokenPreloadScanner::PictureData", %"struct.blink::TokenPreloadScanner::PictureData"* %4, i64 0, i32 1
  %89 = select i1 %86, float* %82, float* %88
  %90 = select i1 %86, i8* %83, i8* %87
  %91 = load i8, i8* %90, align 4, !range !4
  %92 = bitcast float* %89 to i32*
  %93 = load i32, i32* %92, align 4
  br i1 %86, label %94, label %98

94:                                               ; preds = %71
  %95 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = icmp ne i32 %96, 0
  br label %98

98:                                               ; preds = %71, %94
  %99 = phi i1 [ true, %71 ], [ %97, %94 ]
  %100 = zext i1 %99 to i32
  %101 = icmp eq i8 %91, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = bitcast %"struct.blink::FetchParameters::ResourceWidth"* %14 to i32*
  store i32 %93, i32* %103, align 4
  store i8 1, i8* %80, align 4
  br label %104

104:                                              ; preds = %98, %102
  %105 = load i8, i8* %16, align 2, !range !4
  %106 = icmp eq i8 %105, 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  br i1 %106, label %108, label %152

108:                                              ; preds = %104
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, %107
  br i1 %114, label %150, label %115

115:                                              ; preds = %108
  %116 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, %107
  br i1 %121, label %150, label %122

122:                                              ; preds = %115
  %123 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %125, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, %107
  br i1 %128, label %150, label %129

129:                                              ; preds = %122
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, %107
  br i1 %135, label %136, label %140

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 10
  %138 = load i8, i8* %137, align 2, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %150

140:                                              ; preds = %136, %129
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, %107
  br i1 %144, label %145, label %149

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 4
  %147 = load i8, i8* %146, align 8, !range !4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %145, %140
  br label %150

150:                                              ; preds = %108, %115, %122, %136, %145, %149
  %151 = phi i16 [ 1281, %149 ], [ 769, %108 ], [ 257, %136 ], [ 257, %122 ], [ 257, %115 ], [ 513, %145 ]
  store i16 %151, i16* %11, align 2
  br label %152

152:                                              ; preds = %104, %150
  %153 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 1
  %156 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %5, i64 0, i32 5
  %157 = load i32, i32* %156, align 8
  %158 = select i1 %155, i32 %157, i32 %154
  %159 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #10
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, %107
  br i1 %165, label %166, label %185

166:                                              ; preds = %152
  %167 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %167, label %309, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %309

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i33
  %177 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %176, i33 1) #10
  %178 = extractvalue { i33, i1 } %177, 1
  %179 = extractvalue { i33, i1 } %177, 0
  %180 = icmp slt i33 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %183, !prof !2

182:                                              ; preds = %173
  call void @llvm.trap() #10
  unreachable

183:                                              ; preds = %173
  %184 = trunc i33 %179 to i32
  store i32 %184, i32* %174, align 4
  br label %309

185:                                              ; preds = %152
  %186 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %187 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 3, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, %107
  br i1 %191, label %192, label %211

192:                                              ; preds = %185
  %193 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %193, label %309, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %309

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #10
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #10
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %309

211:                                              ; preds = %185
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 3, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, %107
  br i1 %215, label %216, label %235

216:                                              ; preds = %211
  %217 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %217, label %309, label %218

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %309

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #10
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %223
  call void @llvm.trap() #10
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %309

235:                                              ; preds = %211
  %236 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %237 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %236, i64 0, i32 0, i32 0
  %238 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %238, i64 0, i32 3, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, %107
  br i1 %241, label %242, label %261

242:                                              ; preds = %235
  %243 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %243, label %309, label %244

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %309

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #10
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #10
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %309

261:                                              ; preds = %235
  %262 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %264, i64 0, i32 3, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, %107
  br i1 %267, label %268, label %287

268:                                              ; preds = %261
  %269 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %269, label %309, label %270

270:                                              ; preds = %268
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %309

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #10
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !2

284:                                              ; preds = %275
  call void @llvm.trap() #10
  unreachable

285:                                              ; preds = %275
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %276, align 4
  br label %309

287:                                              ; preds = %261
  %288 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %288, i64 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %309, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %309

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i33
  %301 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %300, i33 1) #10
  %302 = extractvalue { i33, i1 } %301, 1
  %303 = extractvalue { i33, i1 } %301, 0
  %304 = icmp slt i33 %303, 0
  %305 = or i1 %302, %304
  br i1 %305, label %306, label %307, !prof !2

306:                                              ; preds = %297
  call void @llvm.trap() #10
  unreachable

307:                                              ; preds = %297
  %308 = trunc i33 %303 to i32
  store i32 %308, i32* %298, align 4
  br label %309

309:                                              ; preds = %307, %292, %287, %285, %270, %268, %259, %244, %242, %233, %218, %216, %209, %194, %192, %183, %168, %166
  %310 = phi %"class.WTF::StringImpl"* [ null, %166 ], [ %107, %168 ], [ %107, %183 ], [ null, %192 ], [ %107, %194 ], [ %107, %209 ], [ null, %216 ], [ %107, %218 ], [ %107, %233 ], [ null, %242 ], [ %107, %244 ], [ %107, %259 ], [ null, %268 ], [ %107, %270 ], [ %107, %285 ], [ null, %287 ], [ %290, %292 ], [ %290, %307 ]
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %311, align 8
  %312 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1
  %313 = load i8, i8* %17, align 1
  %314 = call %"class.blink::PreloadRequest"* @_ZN5blink14PreloadRequest14CreateIfNeededERKN3WTF6StringERKNS1_12TextPositionES4_RKNS_4KURLENS_12ResourceTypeEN7network5mojom14ReferrerPolicyENS0_14ReferrerSourceENS_15ResourceFetcher10IsImageSetEPKNS0_13ExclusionInfoERKNS_15FetchParameters13ResourceWidthERKNS_22ClientHintsPreferencesENS0_11RequestTypeE(%"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %13, %"class.WTF::String"* dereferenceable(8) %312, %"class.blink::KURL"* dereferenceable(112) %1, i8 zeroext %313, i32 %158, i32 0, i32 %100, %"class.blink::PreloadRequest::ExclusionInfo"* %6, %"struct.blink::FetchParameters::ResourceWidth"* nonnull dereferenceable(8) %14, %"class.blink::ClientHintsPreferences"* dereferenceable(16) %3, i32 %72) #10
  %315 = ptrtoint %"class.blink::PreloadRequest"* %314 to i64
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %309
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %316) #10
  br label %331

331:                                              ; preds = %309, %327, %330
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #10
  %332 = icmp eq %"class.blink::PreloadRequest"* %314, null
  br i1 %332, label %595, label %333

333:                                              ; preds = %331
  %334 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #10
  %335 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %338, label %342

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %339, align 8
  %340 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %341 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %340, i64* %341, align 8
  br label %350

342:                                              ; preds = %333
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %336, %"class.WTF::StringImpl"** %343, align 8
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 1
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %348 = bitcast i8** %347 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %346, %"class.WTF::StringImpl"** %348, align 8
  %349 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %350

350:                                              ; preds = %342, %338
  %351 = phi i64 [ %349, %342 ], [ %340, %338 ]
  %352 = phi i32 [ %345, %342 ], [ 0, %338 ]
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %352, i32* %353, align 8
  %354 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #10
  %355 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %351, i64* %355, align 8
  %356 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8** %356, align 8
  %357 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 6, i32* %357, align 8
  %358 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #10
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %360 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %361 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %360, i64 0, i32 0, i32 0
  %362 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %361, align 8
  %363 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %362, i64 0, i32 3, i32 0, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, %359
  %366 = and i1 %358, %365
  br i1 %366, label %384, label %367

367:                                              ; preds = %350
  %368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %368, i64 0, i32 3, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, %359
  br i1 %371, label %372, label %386

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 7
  %374 = load i8, i8* %373, align 1, !range !4
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %386, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 1
  %382 = load i32, i32* %381, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %380, %350
  %385 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 7
  store i32 1, i32* %385, align 4
  br label %386

386:                                              ; preds = %380, %376, %367, %372, %384
  %387 = phi i1 [ true, %384 ], [ %358, %380 ], [ %358, %372 ], [ %358, %367 ], [ %358, %376 ]
  %388 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  %389 = load i32, i32* %388, align 8
  %390 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 8
  store i32 %389, i32* %390, align 8
  %391 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  %392 = load i32, i32* %391, align 4
  %393 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 9
  store i32 %392, i32* %393, align 4
  %394 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 10
  %395 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25, i32 0, i32 0
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %415, label %398

398:                                              ; preds = %386
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %415

403:                                              ; preds = %398
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = zext i32 %405 to i33
  %407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %406, i33 1) #10
  %408 = extractvalue { i33, i1 } %407, 1
  %409 = extractvalue { i33, i1 } %407, 0
  %410 = icmp slt i33 %409, 0
  %411 = or i1 %408, %410
  br i1 %411, label %412, label %413, !prof !2

412:                                              ; preds = %403
  call void @llvm.trap() #10
  unreachable

413:                                              ; preds = %403
  %414 = trunc i33 %409 to i32
  store i32 %414, i32* %404, align 4
  br label %415

415:                                              ; preds = %413, %398, %386
  %416 = ptrtoint %"class.WTF::StringImpl"* %396 to i64
  %417 = bitcast %"class.WTF::String"* %394 to i64*
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %394, i64 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  store i64 %416, i64* %417, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #10
  br label %434

434:                                              ; preds = %415, %430, %433
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %436 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %437 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %436, i64 0, i32 3, i32 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, %435
  br i1 %439, label %447, label %440

440:                                              ; preds = %434
  %441 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %442 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %441, i64 0, i32 0, i32 0
  %443 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %442, align 8
  %444 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %443, i64 0, i32 3, i32 0, i32 0, i32 0
  %445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %446 = icmp eq %"class.WTF::StringImpl"* %445, %435
  br i1 %446, label %447, label %449

447:                                              ; preds = %440, %434
  %448 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  br label %451

449:                                              ; preds = %440
  %450 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 3
  br label %451

451:                                              ; preds = %447, %449
  %452 = phi %"class.WTF::String"* [ %448, %447 ], [ %450, %449 ]
  %453 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 4
  %454 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %452, i64 0, i32 0, i32 0
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %474, label %457

457:                                              ; preds = %451
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %474

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = zext i32 %464 to i33
  %466 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %465, i33 1) #10
  %467 = extractvalue { i33, i1 } %466, 1
  %468 = extractvalue { i33, i1 } %466, 0
  %469 = icmp slt i33 %468, 0
  %470 = or i1 %467, %469
  br i1 %470, label %471, label %472, !prof !2

471:                                              ; preds = %462
  call void @llvm.trap() #10
  unreachable

472:                                              ; preds = %462
  %473 = trunc i33 %468 to i32
  store i32 %473, i32* %463, align 4
  br label %474

474:                                              ; preds = %472, %457, %451
  %475 = ptrtoint %"class.WTF::StringImpl"* %455 to i64
  %476 = bitcast %"class.WTF::String"* %453 to i64*
  %477 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %453, i64 0, i32 0, i32 0
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %477, align 8
  store i64 %475, i64* %476, align 8
  %479 = icmp eq %"class.WTF::StringImpl"* %478, null
  br i1 %479, label %493, label %480

480:                                              ; preds = %474
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  br i1 %484, label %487, label %489

487:                                              ; preds = %480
  %488 = add i32 %486, -1
  store i32 %488, i32* %485, align 4
  br label %489

489:                                              ; preds = %487, %480
  %490 = phi i32 [ %488, %487 ], [ %486, %480 ]
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %489
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #10
  br label %493

493:                                              ; preds = %474, %489, %492
  %494 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 11
  store i32 %495, i32* %496, align 8
  %497 = icmp eq i32 %72, 2
  br i1 %497, label %520, label %498

498:                                              ; preds = %493
  br i1 %365, label %499, label %508

499:                                              ; preds = %498
  br i1 %387, label %503, label %500

500:                                              ; preds = %499
  %501 = load i32, i32* %494, align 4
  %502 = icmp eq i32 %501, 1
  br i1 %502, label %503, label %518

503:                                              ; preds = %500, %499
  %504 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 30
  %505 = load i8, i8* %504, align 1, !range !4
  %506 = icmp eq i8 %505, 0
  %507 = select i1 %506, i8 2, i8 4
  br label %520

508:                                              ; preds = %498
  %509 = load i8, i8* %16, align 2, !range !4
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %508
  %512 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 18
  store i8 0, i8* %512, align 8
  br label %587

513:                                              ; preds = %508
  %514 = load i8, i8* %17, align 1
  %515 = icmp eq i8 %514, 2
  br i1 %515, label %518, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 18
  store i8 0, i8* %517, align 8
  br label %527

518:                                              ; preds = %500, %513
  %519 = select i1 %7, i8 5, i8 1
  br label %520

520:                                              ; preds = %493, %503, %518
  %521 = phi i8 [ 2, %493 ], [ %519, %518 ], [ %507, %503 ]
  %522 = load i8, i8* %16, align 2
  %523 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 18
  store i8 %521, i8* %523, align 8
  %524 = icmp eq i8 %522, 0
  br i1 %524, label %587, label %525

525:                                              ; preds = %520
  %526 = load i8, i8* %17, align 1
  br label %527

527:                                              ; preds = %525, %516
  %528 = phi i8 [ %526, %525 ], [ %514, %516 ]
  %529 = icmp eq i8 %528, 1
  br i1 %529, label %530, label %537

530:                                              ; preds = %527
  %531 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %5, i64 0, i32 9, i32 0, i32 0
  %532 = load %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::SubresourceRedirectOriginsPreloader"** %531, align 8
  %533 = icmp eq %"class.blink::SubresourceRedirectOriginsPreloader"* %532, null
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  call void @_ZN5blink35SubresourceRedirectOriginsPreloader22AddImagePreloadRequestERKNS_4KURLERKN3WTF6StringE(%"class.blink::SubresourceRedirectOriginsPreloader"* nonnull %532, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %312) #10
  %535 = load i8, i8* %16, align 2
  %536 = icmp eq i8 %535, 0
  br i1 %536, label %587, label %537

537:                                              ; preds = %527, %530, %534
  %538 = load i8, i8* %17, align 1
  %539 = icmp eq i8 %538, 1
  br i1 %539, label %540, label %579

540:                                              ; preds = %537
  %541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %542 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %543 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %542, i64 0, i32 3, i32 0, i32 0, i32 0
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %543, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, %541
  br i1 %545, label %546, label %574

546:                                              ; preds = %540
  %547 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %5, i64 0, i32 8, i32 0, i32 0
  %548 = load %"class.blink::LazyLoadImageObserver"*, %"class.blink::LazyLoadImageObserver"** %547, align 8
  %549 = icmp eq %"class.blink::LazyLoadImageObserver"* %548, null
  br i1 %549, label %574, label %550

550:                                              ; preds = %546
  %551 = call zeroext i1 @_ZN5blink21LazyLoadImageObserver43IsFullyLoadableFirstKImageAndDecrementCountEv(%"class.blink::LazyLoadImageObserver"* nonnull %548) #10
  %552 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %5, i64 0, i32 7
  %553 = load i32, i32* %552, align 8
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %574, label %555

555:                                              ; preds = %550
  %556 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 34
  %557 = load i32, i32* %556, align 4
  switch i32 %557, label %593 [
    i32 2, label %574
    i32 0, label %558
  ]

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 35
  %560 = load i32, i32* %559, align 8
  %561 = icmp eq i32 %560, 2
  br i1 %561, label %562, label %566

562:                                              ; preds = %558
  %563 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 36
  %564 = load i32, i32* %563, align 4
  %565 = icmp eq i32 %564, 2
  br i1 %565, label %574, label %566

566:                                              ; preds = %562, %558
  %567 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 37
  %568 = load i32, i32* %567, align 8
  %569 = icmp eq i32 %568, 2
  br i1 %569, label %574, label %570

570:                                              ; preds = %566
  %571 = xor i1 %551, true
  %572 = icmp eq i32 %553, 2
  %573 = and i1 %572, %571
  br i1 %573, label %593, label %574

574:                                              ; preds = %570, %562, %566, %555, %550, %546, %540
  %575 = load i8, i8* %16, align 2
  %576 = icmp eq i8 %575, 0
  br i1 %576, label %587, label %577

577:                                              ; preds = %574
  %578 = load i8, i8* %17, align 1
  br label %579

579:                                              ; preds = %537, %577
  %580 = phi i8 [ %578, %577 ], [ %538, %537 ]
  %581 = or i8 %580, 1
  %582 = icmp eq i8 %581, 3
  br i1 %582, label %583, label %587

583:                                              ; preds = %579
  %584 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 17, i32 0
  %585 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32, i32 0
  %586 = call dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable"* %584, %"class.WTF::HashTable"* dereferenceable(24) %585) #10
  br label %587

587:                                              ; preds = %579, %574, %520, %511, %534, %583
  %588 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 38
  %589 = load i32, i32* %588, align 4
  %590 = icmp eq i32 %589, 1
  br i1 %590, label %591, label %595

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %314, i64 0, i32 19
  store i8 1, i8* %592, align 1
  br label %595

593:                                              ; preds = %570, %555
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %314) #10
  %594 = bitcast %"class.blink::PreloadRequest"* %314 to i8*
  call void @free(i8* %594) #10
  br label %595

595:                                              ; preds = %331, %587, %591, %593
  %596 = phi i64 [ 0, %593 ], [ %315, %591 ], [ %315, %587 ], [ 0, %331 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #10
  br label %597

597:                                              ; preds = %68, %50, %595
  %598 = phi i64 [ %596, %595 ], [ 0, %50 ], [ 0, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #10
  %599 = inttoptr i64 %598 to %"class.blink::PreloadRequest"*
  ret %"class.blink::PreloadRequest"* %599
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScannerD2Ev(%"class.blink::TokenPreloadScanner::StartTagScanner"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %37, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 %12
  %14 = bitcast %"struct.std::__1::pair"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #10
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %37, %50, %53
  %55 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %54, %67, %70
  %72 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 15, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %88, %101, %104
  %106 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #10
  br label %122

122:                                              ; preds = %105, %118, %121
  %123 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 13, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #10
  br label %139

139:                                              ; preds = %122, %135, %138
  %140 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #10
  br label %156

156:                                              ; preds = %139, %152, %155
  %157 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #10
  br label %173

173:                                              ; preds = %156, %169, %172
  %174 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 3, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #10
  br label %190

190:                                              ; preds = %173, %186, %189
  %191 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #10
  br label %207

207:                                              ; preds = %190, %203, %206
  %208 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #10
  br label %224

224:                                              ; preds = %207, %220, %223
  ret void
}

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(192) %"class.blink::HTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1224"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1224", %"class.WTF::Vector.1224"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %24, i64 %25
  ret %"class.blink::HTMLToken::Attribute"* %26
}

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL18HandleMetaViewportERKN3WTF6StringEPKNS_24CachedDocumentParametersEPNS_17MediaValuesCachedEPN4absl8optionalINS_19ViewportDescriptionEEE(%"class.WTF::String"* dereferenceable(8), %"struct.blink::CachedDocumentParameters"*, %"class.blink::MediaValuesCached"*, %"class.absl::optional.1246"*) unnamed_addr #0 {
  %5 = alloca %"struct.blink::ViewportDescription", align 4
  %6 = alloca %"class.blink::FloatSize", align 4
  %7 = alloca %"struct.blink::PageScaleConstraints", align 4
  %8 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %115, label %11

11:                                               ; preds = %4
  %12 = bitcast %"struct.blink::ViewportDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 bitcast ({ i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, [3 x i8], float, float, i8, i8, i8, i8, { { { { i8, [3 x i8], %union.anon.634 } } } } }* @__const._ZN5blinkL18HandleMetaViewportERKN3WTF6StringEPKNS_24CachedDocumentParametersEPNS_17MediaValuesCachedEPN4absl8optionalINS_19ViewportDescriptionEEE.description to i8*), i64 72, i1 false)
  %13 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 0
  store i32 3, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 1
  %15 = bitcast %"class.blink::Length"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 7, i1 false) #10
  %16 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 2
  %17 = bitcast %"class.blink::Length"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 7, i1 false) #10
  %18 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 3
  %19 = bitcast %"class.blink::Length"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 7, i1 false) #10
  %20 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 4
  %21 = bitcast %"class.blink::Length"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 7, i1 false) #10
  %22 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 5
  store float -1.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 6
  store float -1.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 7
  store float -1.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 8
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 9
  store float -1.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 10
  store float -1.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 11
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 5, i1 false) #10
  %29 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !4
  %31 = icmp ne i8 %30, 0
  call void @_ZN5blink15HTMLMetaElement42GetViewportDescriptionFromContentAttributeERKN3WTF6StringERNS_19ViewportDescriptionEPNS_8DocumentEb(%"class.WTF::String"* dereferenceable(8) %0, %"struct.blink::ViewportDescription"* nonnull dereferenceable(72) %5, %"class.blink::Document"* null, i1 zeroext %31) #10
  %32 = icmp eq %"class.absl::optional.1246"* %3, null
  br i1 %32, label %78, label %33

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 4, !range !4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = call dereferenceable(72) %"struct.blink::ViewportDescription"* @_ZN5blink19ViewportDescriptionaSERKS0_(%"struct.blink::ViewportDescription"* %38, %"struct.blink::ViewportDescription"* nonnull dereferenceable(72) %5) #10
  br label %78

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i32, i32* %13, align 4
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %44 = bitcast %"class.blink::Length"* %14 to i64*
  %45 = bitcast %"class.blink::Length"* %43 to i64*
  %46 = load i64, i64* %44, align 4
  store i64 %46, i64* %45, align 4
  %47 = and i64 %46, 280375465082880
  %48 = icmp eq i64 %47, 8796093022208
  br i1 %48, label %49, label %50

49:                                               ; preds = %40
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %43) #10
  br label %50

50:                                               ; preds = %49, %40
  %51 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %52 = bitcast %"class.blink::Length"* %16 to i64*
  %53 = bitcast %"class.blink::Length"* %51 to i64*
  %54 = load i64, i64* %52, align 4
  store i64 %54, i64* %53, align 4
  %55 = and i64 %54, 280375465082880
  %56 = icmp eq i64 %55, 8796093022208
  br i1 %56, label %57, label %58

57:                                               ; preds = %50
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %51) #10
  br label %58

58:                                               ; preds = %57, %50
  %59 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %60 = bitcast %"class.blink::Length"* %18 to i64*
  %61 = bitcast %"class.blink::Length"* %59 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 4
  %63 = and i64 %62, 280375465082880
  %64 = icmp eq i64 %63, 8796093022208
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %59) #10
  br label %66

66:                                               ; preds = %65, %58
  %67 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %68 = bitcast %"class.blink::Length"* %20 to i64*
  %69 = bitcast %"class.blink::Length"* %67 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = and i64 %70, 280375465082880
  %72 = icmp eq i64 %71, 8796093022208
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %67) #10
  br label %74

74:                                               ; preds = %66, %73
  %75 = getelementptr inbounds %"class.absl::optional.1246", %"class.absl::optional.1246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %76 = bitcast float* %75 to i8*
  %77 = bitcast float* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 36, i1 false) #10
  store i8 1, i8* %34, align 4
  br label %78

78:                                               ; preds = %74, %37, %11
  %79 = bitcast %"class.blink::FloatSize"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %6, i64 0, i32 0
  %81 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %6, i64 0, i32 1
  %82 = call i32 @_ZNK5blink17MediaValuesCached11DeviceWidthEv(%"class.blink::MediaValuesCached"* %2) #10
  %83 = sitofp i32 %82 to float
  %84 = call i32 @_ZNK5blink17MediaValuesCached12DeviceHeightEv(%"class.blink::MediaValuesCached"* %2) #10
  %85 = sitofp i32 %84 to float
  store float %83, float* %80, align 4
  store float %85, float* %81, align 4
  %86 = bitcast %"struct.blink::PageScaleConstraints"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints"* %7, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints"* %7, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.blink::CachedDocumentParameters", %"struct.blink::CachedDocumentParameters"* %1, i64 0, i32 2
  %90 = bitcast %"struct.blink::PageScaleConstraints"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %90, i8 -1, i64 20, i1 false)
  call void @_ZNK5blink19ViewportDescription7ResolveERKNS_9FloatSizeERKNS_6LengthE(%"struct.blink::PageScaleConstraints"* nonnull sret %7, %"struct.blink::ViewportDescription"* nonnull %5, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %89) #10
  %91 = load float, float* %87, align 4
  %92 = fpext float %91 to double
  %93 = load float, float* %88, align 4
  %94 = fpext float %93 to double
  call void @_ZN5blink17MediaValuesCached26OverrideViewportDimensionsEdd(%"class.blink::MediaValuesCached"* %2, double %92, double %94) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #10
  %95 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 4, i32 2
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 8
  br i1 %97, label %98, label %99

98:                                               ; preds = %78
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #10
  br label %99

99:                                               ; preds = %98, %78
  %100 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 3, i32 2
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 8
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %104

104:                                              ; preds = %103, %99
  %105 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 2, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #10
  br label %109

109:                                              ; preds = %108, %104
  %110 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %5, i64 0, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %14) #10
  br label %114

114:                                              ; preds = %109, %113
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #10
  br label %115

115:                                              ; preds = %4, %114
  ret void
}

declare void @_ZN5blink15HTMLMetaElement42GetViewportDescriptionFromContentAttributeERKN3WTF6StringERNS_19ViewportDescriptionEPNS_8DocumentEb(%"class.WTF::String"* dereferenceable(8), %"struct.blink::ViewportDescription"* dereferenceable(72), %"class.blink::Document"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK5blink17MediaValuesCached11DeviceWidthEv(%"class.blink::MediaValuesCached"*) unnamed_addr #1

declare i32 @_ZNK5blink17MediaValuesCached12DeviceHeightEv(%"class.blink::MediaValuesCached"*) unnamed_addr #1

declare void @_ZNK5blink19ViewportDescription7ResolveERKNS_9FloatSizeERKNS_6LengthE(%"struct.blink::PageScaleConstraints"* sret, %"struct.blink::ViewportDescription"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink17MediaValuesCached26OverrideViewportDimensionsEdd(%"class.blink::MediaValuesCached"*, double, double) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"struct.blink::ViewportDescription"* @_ZN5blink19ViewportDescriptionaSERKS0_(%"struct.blink::ViewportDescription"*, %"struct.blink::ViewportDescription"* dereferenceable(72)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 1, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %7) #10
  br label %12

12:                                               ; preds = %11, %2
  %13 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 1, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 8
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %17

17:                                               ; preds = %12, %16
  %18 = bitcast %"class.blink::Length"* %7 to i64*
  %19 = bitcast %"class.blink::Length"* %6 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 2, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 8
  br i1 %25, label %26, label %27

26:                                               ; preds = %17
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %22) #10
  br label %27

27:                                               ; preds = %26, %17
  %28 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 2, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %21) #10
  br label %32

32:                                               ; preds = %27, %31
  %33 = bitcast %"class.blink::Length"* %22 to i64*
  %34 = bitcast %"class.blink::Length"* %21 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %42

41:                                               ; preds = %32
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %37) #10
  br label %42

42:                                               ; preds = %41, %32
  %43 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 3, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %47

47:                                               ; preds = %42, %46
  %48 = bitcast %"class.blink::Length"* %37 to i64*
  %49 = bitcast %"class.blink::Length"* %36 to i64*
  %50 = load i64, i64* %48, align 4
  store i64 %50, i64* %49, align 4
  %51 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 4
  %52 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 4
  %53 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 4, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 8
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %52) #10
  br label %57

57:                                               ; preds = %56, %47
  %58 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 4, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 8
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %51) #10
  br label %62

62:                                               ; preds = %57, %61
  %63 = bitcast %"class.blink::Length"* %52 to i64*
  %64 = bitcast %"class.blink::Length"* %51 to i64*
  %65 = load i64, i64* %63, align 4
  store i64 %65, i64* %64, align 4
  %66 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %0, i64 0, i32 5
  %67 = getelementptr inbounds %"struct.blink::ViewportDescription", %"struct.blink::ViewportDescription"* %1, i64 0, i32 5
  %68 = bitcast float* %66 to i8*
  %69 = bitcast float* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 36, i1 false)
  ret %"struct.blink::ViewportDescription"* %0
}

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #1

declare void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"*, %"class.blink::MediaValues"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) unnamed_addr #1

declare float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCharsetAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %55

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #10
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #10
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %14
  %37 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  %38 = bitcast %"class.WTF::String"* %15 to i64*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %54, %51, %36, %3
  %56 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, %57
  br i1 %63, label %64, label %65

64:                                               ; preds = %55
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %179

65:                                               ; preds = %55
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, %57
  br i1 %71, label %72, label %73

72:                                               ; preds = %65
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %179

73:                                               ; preds = %65
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, %57
  br i1 %79, label %80, label %81

80:                                               ; preds = %73
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %179

81:                                               ; preds = %73
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, %57
  br i1 %87, label %88, label %145

88:                                               ; preds = %81
  %89 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %93, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1) #10
  br label %179

97:                                               ; preds = %88
  %98 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, %94
  br i1 %103, label %104, label %179

104:                                              ; preds = %97
  %105 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #10
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %110, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %111, i64* %112, align 8
  br label %120

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 1
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %119 = bitcast i8** %118 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %119, align 8
  br label %120

120:                                              ; preds = %113, %109
  %121 = phi i32 [ %116, %113 ], [ 0, %109 ]
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %121, i32* %122, align 8
  %123 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #10
  %124 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %129, align 8
  %130 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %131 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %130, i64* %131, align 8
  br label %139

132:                                              ; preds = %120
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 1
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %138 = bitcast i8** %137 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %138, align 8
  br label %139

139:                                              ; preds = %132, %128
  %140 = phi i32 [ %135, %132 ], [ 0, %128 ]
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %140, i32* %141, align 8
  %142 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  %143 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 10
  %144 = zext i1 %142 to i8
  store i8 %144, i8* %143, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #10
  br label %179

145:                                              ; preds = %81
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, %57
  br i1 %151, label %152, label %153

152:                                              ; preds = %145
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %179

153:                                              ; preds = %145
  %154 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, %57
  br i1 %159, label %160, label %179

160:                                              ; preds = %153
  %161 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kPosterAttrE, align 8
  %162 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %163, i64 0, i32 3, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %165, %166
  br i1 %167, label %168, label %169

168:                                              ; preds = %160
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1) #10
  br label %179

169:                                              ; preds = %160
  %170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %171 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %172, i64 0, i32 3, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, %166
  br i1 %175, label %176, label %179

176:                                              ; preds = %169
  %177 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %178 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %177, i32* %178, align 8
  br label %179

179:                                              ; preds = %176, %169, %168, %139, %97, %96, %72, %153, %152, %80, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1)
  br label %247

13:                                               ; preds = %3
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, %10
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %22 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %21, i32* %22, align 8
  br label %247

23:                                               ; preds = %13
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, %10
  br i1 %29, label %30, label %71

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #10
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #10
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %30
  %53 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %54 = bitcast %"class.WTF::String"* %31 to i64*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %247, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %247

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %247

71:                                               ; preds = %23
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAsyncAttrE, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, %10
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 30
  store i8 1, i8* %79, align 1
  %80 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  store i32 1, i32* %80, align 4
  br label %247

81:                                               ; preds = %71
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kDeferAttrE, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, %10
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  store i32 1, i32* %89, align 4
  br label %247

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 29
  %92 = load i8, i8* %91, align 8, !range !4
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, %10
  br i1 %100, label %101, label %106

101:                                              ; preds = %94
  store i8 1, i8* %91, align 8
  %102 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 33
  %103 = load i32, i32* %102, align 8
  %104 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32
  %105 = tail call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, i32 %103, %"class.WTF::HashSet"* dereferenceable(24) %104) #10
  br label %247

106:                                              ; preds = %90, %94
  %107 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, %10
  br i1 %112, label %113, label %154

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #10
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  tail call void @llvm.trap() #10
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %133, %118, %113
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = bitcast %"class.WTF::String"* %114 to i64*
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store i64 %136, i64* %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %247, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %247

153:                                              ; preds = %150
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #10
  br label %247

154:                                              ; preds = %106
  %155 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLanguageAttrE, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, %10
  br i1 %160, label %161, label %202

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 15
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %183, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i33
  %175 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #10
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !2

180:                                              ; preds = %171
  tail call void @llvm.trap() #10
  unreachable

181:                                              ; preds = %171
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %172, align 4
  br label %183

183:                                              ; preds = %181, %166, %161
  %184 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  %185 = bitcast %"class.WTF::String"* %162 to i64*
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  store i64 %184, i64* %185, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %247, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %247

201:                                              ; preds = %198
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #10
  br label %247

202:                                              ; preds = %154
  %203 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kNomoduleAttrE, align 8
  %204 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, %10
  br i1 %208, label %209, label %211

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 18
  store i8 1, i8* %210, align 8
  br label %247

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %213 = load i8, i8* %212, align 8, !range !4
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %229

215:                                              ; preds = %211
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, %10
  br i1 %221, label %222, label %229

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  store i8 1, i8* %212, align 8
  %227 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %228 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 1, i32* %227) #10
  br label %247

229:                                              ; preds = %211, %222, %215
  %230 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %231 = load i8, i8* %230, align 8, !range !4
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %247

233:                                              ; preds = %229
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %236, i64 0, i32 3, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, %10
  br i1 %239, label %240, label %247

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %242 = load i8, i8* %241, align 8, !range !4
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %240
  store i8 1, i8* %230, align 8
  %245 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %246 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %245, i32* %246, align 4
  br label %247

247:                                              ; preds = %201, %198, %183, %153, %150, %135, %70, %67, %52, %240, %229, %20, %78, %101, %226, %244, %233, %209, %88, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %12, label %58

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %58

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %39, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %21, %17
  %37 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %38 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %37, i64* %38, align 8
  br label %240

39:                                               ; preds = %26
  %40 = trunc i33 %32 to i32
  store i32 %40, i32* %27, align 4
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %42 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %43 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %42, i64* %43, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %44, label %240, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %240

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %240

58:                                               ; preds = %12, %3
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %10
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %67 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %66, i32* %67, align 8
  br label %240

68:                                               ; preds = %58
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, %10
  br i1 %74, label %75, label %121

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %80, label %121

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %99

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #10
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %102, !prof !2

98:                                               ; preds = %89
  tail call void @llvm.trap() #10
  unreachable

99:                                               ; preds = %84, %80
  %100 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %101 = bitcast %"class.WTF::String"* %76 to i64*
  store i64 %100, i64* %101, align 8
  br label %240

102:                                              ; preds = %89
  %103 = trunc i33 %95 to i32
  store i32 %103, i32* %90, align 4
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %106 = bitcast %"class.WTF::String"* %76 to i64*
  store i64 %105, i64* %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %107, label %240, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %240

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %240

121:                                              ; preds = %75, %68
  %122 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, %10
  br i1 %127, label %128, label %133

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %130 = load i8, i8* %129, align 8, !range !4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %128
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  br label %240

133:                                              ; preds = %128, %121
  %134 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %135 = load i8, i8* %134, align 8, !range !4
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %151

137:                                              ; preds = %133
  %138 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 3, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, %10
  br i1 %143, label %144, label %151

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  store i8 1, i8* %134, align 8
  %149 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %150 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 0, i32* %149) #10
  br label %240

151:                                              ; preds = %133, %144, %137
  %152 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %153 = load i8, i8* %152, align 8, !range !4
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %169

155:                                              ; preds = %151
  %156 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %157 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, %10
  br i1 %161, label %162, label %169

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %164 = load i8, i8* %163, align 8, !range !4
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %162
  store i8 1, i8* %152, align 8
  %167 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %168 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %167, i32* %168, align 4
  br label %240

169:                                              ; preds = %162, %151, %155
  %170 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 34
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %169
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kLoadingAttrE, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, %10
  %180 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %181 = icmp ne i8 %180, 0
  %182 = and i1 %179, %181
  br i1 %182, label %183, label %185

183:                                              ; preds = %173
  %184 = tail call i32 @_ZN5blink24GetLoadingAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %184, i32* %170, align 4
  br label %240

185:                                              ; preds = %173, %169
  %186 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 35
  %187 = load i32, i32* %186, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %185
  %190 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 3, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, %10
  %196 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %197 = icmp ne i8 %196, 0
  %198 = and i1 %195, %197
  br i1 %198, label %199, label %201

199:                                              ; preds = %189
  %200 = tail call i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %200, i32* %186, align 8
  br label %240

201:                                              ; preds = %189, %185
  %202 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 36
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %207 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, %10
  %212 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %213 = icmp ne i8 %212, 0
  %214 = and i1 %211, %213
  br i1 %214, label %215, label %217

215:                                              ; preds = %205
  %216 = tail call i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %216, i32* %202, align 4
  br label %240

217:                                              ; preds = %205, %201
  %218 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 37
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %240

221:                                              ; preds = %217
  %222 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %223 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 3, i32 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, %10
  %228 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %229 = icmp ne i8 %228, 0
  %230 = and i1 %227, %229
  br i1 %230, label %231, label %240

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %233 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %232, align 8
  %234 = tail call zeroext i1 @_ZNK5blink17MediaValuesCached10StrictModeEv(%"class.blink::MediaValuesCached"* %233) #10
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i8
  %237 = tail call %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink9CSSParser27ParseInlineStyleDeclarationERKN3WTF6StringENS_13CSSParserModeENS_17SecureContextModeE(%"class.WTF::String"* dereferenceable(8) %2, i8 zeroext %236, i32 0) #10
  %238 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %237, i64 0, i32 0
  %239 = tail call i32 @_ZN5blink16HTMLImageElement28GetInlineStyleDimensionsTypeEPKNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"* %238) #10
  store i32 %239, i32* %218, align 8
  br label %240

240:                                              ; preds = %99, %36, %120, %117, %102, %57, %54, %39, %65, %132, %166, %199, %217, %221, %231, %215, %183, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LinkRelAttribute"*
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %55

14:                                               ; preds = %3
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1)
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #10
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #10
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %14
  %37 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  %38 = bitcast %"class.WTF::String"* %15 to i64*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %472, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %472

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %472

55:                                               ; preds = %3
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %12
  br i1 %61, label %62, label %96

62:                                               ; preds = %55
  %63 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  %64 = bitcast i64* %4 to i32*
  %65 = getelementptr inbounds %"class.blink::LinkRelAttribute", %"class.blink::LinkRelAttribute"* %5, i64 0, i32 1
  store i64 -6148914691236517206, i64* %4, align 8
  call void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2) #10
  %66 = load i16, i16* %65, align 4
  %67 = and i16 %66, 3
  %68 = icmp eq i16 %67, 1
  %69 = load i32, i32* %64, align 8
  %70 = icmp eq i32 %69, 0
  %71 = and i1 %68, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %62
  %73 = lshr i16 %66, 2
  %74 = trunc i16 %73 to i8
  %75 = and i8 %74, 1
  %76 = xor i8 %75, 1
  br label %77

77:                                               ; preds = %62, %72
  %78 = phi i8 [ 0, %62 ], [ %76, %72 ]
  %79 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 4
  store i8 %78, i8* %79, align 8
  %80 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 5
  %81 = lshr i16 %66, 3
  %82 = trunc i16 %81 to i8
  %83 = and i8 %82, 1
  store i8 %83, i8* %80, align 1
  %84 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 6
  %85 = lshr i16 %66, 5
  %86 = trunc i16 %85 to i8
  %87 = and i8 %86, 1
  store i8 %87, i8* %84, align 2
  %88 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 7
  %89 = lshr i16 %66, 9
  %90 = trunc i16 %89 to i8
  %91 = and i8 %90, 1
  store i8 %91, i8* %88, align 1
  %92 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 8
  %93 = lshr i16 %66, 13
  %94 = trunc i16 %93 to i8
  %95 = and i8 %94, 1
  store i8 %95, i8* %92, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #10
  br label %472

96:                                               ; preds = %55
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, %12
  br i1 %102, label %103, label %111

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %105 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %104, align 8
  %106 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121MediaAttributeMatchesERKNS_17MediaValuesCachedERKN3WTF6StringE(%"class.blink::MediaValuesCached"* dereferenceable(120) %105, %"class.WTF::String"* dereferenceable(8) %2)
  %107 = zext i1 %106 to i8
  %108 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %109 = load i8, i8* %108, align 1, !range !4
  %110 = and i8 %109, %107
  store i8 %110, i8* %108, align 1
  br label %472

111:                                              ; preds = %96
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, %12
  br i1 %117, label %118, label %121

118:                                              ; preds = %111
  %119 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %120 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %119, i32* %120, align 8
  br label %472

121:                                              ; preds = %111
  %122 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, %12
  br i1 %127, label %128, label %169

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #10
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  tail call void @llvm.trap() #10
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %150

150:                                              ; preds = %148, %133, %128
  %151 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %152 = bitcast %"class.WTF::String"* %129 to i64*
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  store i64 %151, i64* %152, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %472, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %472

168:                                              ; preds = %165
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #10
  br label %472

169:                                              ; preds = %121
  %170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kAsAttrE, align 8
  %171 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %172, i64 0, i32 3, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, %12
  br i1 %175, label %176, label %197

176:                                              ; preds = %169
  %177 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* %2) #10
  %178 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %179 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 13
  %180 = bitcast %"class.WTF::String"* %179 to i64*
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  store i64 %178, i64* %180, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %472, label %184

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %472

196:                                              ; preds = %193
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #10
  br label %472

197:                                              ; preds = %169
  %198 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, %12
  br i1 %203, label %204, label %245

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %226, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i33
  %218 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %217, i33 1) #10
  %219 = extractvalue { i33, i1 } %218, 1
  %220 = extractvalue { i33, i1 } %218, 0
  %221 = icmp slt i33 %220, 0
  %222 = or i1 %219, %221
  br i1 %222, label %223, label %224, !prof !2

223:                                              ; preds = %214
  tail call void @llvm.trap() #10
  unreachable

224:                                              ; preds = %214
  %225 = trunc i33 %220 to i32
  store i32 %225, i32* %215, align 4
  br label %226

226:                                              ; preds = %224, %209, %204
  %227 = ptrtoint %"class.WTF::StringImpl"* %207 to i64
  %228 = bitcast %"class.WTF::String"* %205 to i64*
  %229 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %205, i64 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  store i64 %227, i64* %228, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %472, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %472

244:                                              ; preds = %241
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #10
  br label %472

245:                                              ; preds = %197
  %246 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %247 = load i8, i8* %246, align 8, !range !4
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %263

249:                                              ; preds = %245
  %250 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %250, i64 0, i32 0, i32 0
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 3, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, %12
  br i1 %255, label %256, label %263

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %263, label %260

260:                                              ; preds = %256
  store i8 1, i8* %246, align 8
  %261 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %262 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 1, i32* %261) #10
  br label %472

263:                                              ; preds = %245, %256, %249
  %264 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 29
  %265 = load i8, i8* %264, align 8, !range !4
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %263
  %268 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %269 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %268, i64 0, i32 0, i32 0
  %270 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %270, i64 0, i32 3, i32 0, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, %12
  br i1 %273, label %274, label %279

274:                                              ; preds = %267
  store i8 1, i8* %264, align 8
  %275 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 33
  %276 = load i32, i32* %275, align 8
  %277 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32
  %278 = tail call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, i32 %276, %"class.WTF::HashSet"* dereferenceable(24) %277) #10
  br label %472

279:                                              ; preds = %263, %267
  %280 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kImagesrcsetAttrE, align 8
  %281 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %280, i64 0, i32 0, i32 0
  %282 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %282, i64 0, i32 3, i32 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, %12
  br i1 %285, label %286, label %332

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %288 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %287, i64 0, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %291, label %332

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %310, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %310

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  %303 = zext i32 %302 to i33
  %304 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %303, i33 1) #10
  %305 = extractvalue { i33, i1 } %304, 1
  %306 = extractvalue { i33, i1 } %304, 0
  %307 = icmp slt i33 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %309, label %313, !prof !2

309:                                              ; preds = %300
  tail call void @llvm.trap() #10
  unreachable

310:                                              ; preds = %295, %291
  %311 = ptrtoint %"class.WTF::StringImpl"* %293 to i64
  %312 = bitcast %"class.WTF::String"* %287 to i64*
  store i64 %311, i64* %312, align 8
  br label %472

313:                                              ; preds = %300
  %314 = trunc i33 %306 to i32
  store i32 %314, i32* %301, align 4
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %316 = ptrtoint %"class.WTF::StringImpl"* %293 to i64
  %317 = bitcast %"class.WTF::String"* %287 to i64*
  store i64 %316, i64* %317, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %318, label %472, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %328

326:                                              ; preds = %319
  %327 = add i32 %325, -1
  store i32 %327, i32* %324, align 4
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i32 [ %327, %326 ], [ %325, %319 ]
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %472

331:                                              ; preds = %328
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #10
  br label %472

332:                                              ; preds = %286, %279
  %333 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImagesizesAttrE, align 8
  %334 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %333, i64 0, i32 0, i32 0
  %335 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 3, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, %12
  br i1 %338, label %339, label %344

339:                                              ; preds = %332
  %340 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %341 = load i8, i8* %340, align 8, !range !4
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %339
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  br label %472

344:                                              ; preds = %339, %332
  %345 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %346 = load i8, i8* %345, align 8, !range !4
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %348, label %362

348:                                              ; preds = %344
  %349 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %350 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %351, i64 0, i32 3, i32 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, %12
  br i1 %354, label %355, label %362

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %357 = load i8, i8* %356, align 8, !range !4
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %362, label %359

359:                                              ; preds = %355
  store i8 1, i8* %345, align 8
  %360 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %361 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %360, i32* %361, align 4
  br label %472

362:                                              ; preds = %355, %344, %348
  %363 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kScopesAttrE, align 8
  %364 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %363, i64 0, i32 0, i32 0
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %365, i64 0, i32 3, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, %12
  br i1 %368, label %369, label %417

369:                                              ; preds = %362
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %396, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 acquire, align 4
  %376 = and i32 %375, 4
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %394, label %378

378:                                              ; preds = %373
  %379 = load atomic i32, i32* %374 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %396

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  %385 = zext i32 %384 to i33
  %386 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %385, i33 1) #10
  %387 = extractvalue { i33, i1 } %386, 1
  %388 = extractvalue { i33, i1 } %386, 0
  %389 = icmp slt i33 %388, 0
  %390 = or i1 %387, %389
  br i1 %390, label %391, label %392, !prof !2

391:                                              ; preds = %382
  tail call void @llvm.trap() #10
  unreachable

392:                                              ; preds = %382
  %393 = trunc i33 %388 to i32
  store i32 %393, i32* %383, align 4
  br label %396

394:                                              ; preds = %373
  %395 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %371) #10
  br label %396

396:                                              ; preds = %369, %378, %392, %394
  %397 = phi %"class.WTF::StringImpl"* [ %395, %394 ], [ %371, %378 ], [ %371, %392 ], [ null, %369 ]
  %398 = ptrtoint %"class.WTF::StringImpl"* %397 to i64
  %399 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 16
  %400 = bitcast %"class.WTF::AtomicString"* %399 to i64*
  %401 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %399, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  store i64 %398, i64* %400, align 8
  %403 = icmp eq %"class.WTF::StringImpl"* %402, null
  br i1 %403, label %472, label %404

404:                                              ; preds = %396
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load atomic i32, i32* %405 monotonic, align 4
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 0
  %410 = load i32, i32* %409, align 4
  br i1 %408, label %411, label %413

411:                                              ; preds = %404
  %412 = add i32 %410, -1
  store i32 %412, i32* %409, align 4
  br label %413

413:                                              ; preds = %411, %404
  %414 = phi i32 [ %412, %411 ], [ %410, %404 ]
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %472

416:                                              ; preds = %413
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %402) #10
  br label %472

417:                                              ; preds = %362
  %418 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kResourcesAttrE, align 8
  %419 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %418, i64 0, i32 0, i32 0
  %420 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %419, align 8
  %421 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %420, i64 0, i32 3, i32 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, %12
  br i1 %423, label %424, label %472

424:                                              ; preds = %417
  %425 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %425, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %426, null
  br i1 %427, label %451, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 acquire, align 4
  %431 = and i32 %430, 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %449, label %433

433:                                              ; preds = %428
  %434 = load atomic i32, i32* %429 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %451

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = zext i32 %439 to i33
  %441 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %440, i33 1) #10
  %442 = extractvalue { i33, i1 } %441, 1
  %443 = extractvalue { i33, i1 } %441, 0
  %444 = icmp slt i33 %443, 0
  %445 = or i1 %442, %444
  br i1 %445, label %446, label %447, !prof !2

446:                                              ; preds = %437
  tail call void @llvm.trap() #10
  unreachable

447:                                              ; preds = %437
  %448 = trunc i33 %443 to i32
  store i32 %448, i32* %438, align 4
  br label %451

449:                                              ; preds = %428
  %450 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %426) #10
  br label %451

451:                                              ; preds = %424, %433, %447, %449
  %452 = phi %"class.WTF::StringImpl"* [ %450, %449 ], [ %426, %433 ], [ %426, %447 ], [ null, %424 ]
  %453 = ptrtoint %"class.WTF::StringImpl"* %452 to i64
  %454 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 17
  %455 = bitcast %"class.WTF::AtomicString"* %454 to i64*
  %456 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %454, i64 0, i32 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  store i64 %453, i64* %455, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %451
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #10
  br label %472

472:                                              ; preds = %310, %451, %468, %471, %396, %413, %416, %331, %328, %313, %244, %241, %226, %176, %193, %196, %168, %165, %150, %54, %51, %36, %77, %118, %260, %359, %417, %343, %274, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF12AtomicStringEEEvRKT_RKNS3_6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::ImageCandidate", align 8
  %5 = alloca %"class.blink::ImageCandidate", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %14, label %108

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %108

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #10
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %19
  %42 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %43 = bitcast %"class.WTF::String"* %20 to i64*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %60

60:                                               ; preds = %41, %56, %59
  %61 = bitcast %"class.blink::ImageCandidate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %63 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %62, align 8
  %64 = tail call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %63) #10
  %65 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %66 = load float, float* %65, align 4
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %4, float %64, float %66, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Document"* null) #10
  %67 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  %69 = load i64, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %70 = bitcast %"class.blink::ImageCandidate"* %15 to i64*
  %71 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #10
  br label %87

87:                                               ; preds = %60, %83, %86
  %88 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %89 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %90 = bitcast %"class.WTF::StringView"* %88 to i8*
  %91 = bitcast %"class.WTF::StringView"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 36, i1 false) #10
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %87, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #10
  br label %203

108:                                              ; preds = %14, %3
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, %12
  br i1 %114, label %115, label %173

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %117 = load i8, i8* %116, align 8, !range !4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %173

119:                                              ; preds = %115
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  %120 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2
  %121 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %203, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.blink::ImageCandidate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %125) #10
  %126 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %127 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %126, align 8
  %128 = tail call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %127) #10
  %129 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %130 = load float, float* %129, align 4
  %131 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %5, float %128, float %130, %"class.WTF::String"* dereferenceable(8) %131, %"class.blink::Document"* null) #10
  %132 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.blink::ImageCandidate"* %5 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %132, align 8
  %135 = bitcast %"class.blink::ImageCandidate"* %120 to i64*
  %136 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %120, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  store i64 %134, i64* %135, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %124
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #10
  br label %152

152:                                              ; preds = %124, %148, %151
  %153 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %154 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 1
  %155 = bitcast %"class.WTF::StringView"* %153 to i8*
  %156 = bitcast %"class.WTF::StringView"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 36, i1 false) #10
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %172

172:                                              ; preds = %152, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %125) #10
  br label %203

173:                                              ; preds = %115, %108
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, %12
  br i1 %179, label %180, label %188

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %182 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %181, align 8
  %183 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121MediaAttributeMatchesERKNS_17MediaValuesCachedERKN3WTF6StringE(%"class.blink::MediaValuesCached"* dereferenceable(120) %182, %"class.WTF::String"* dereferenceable(8) %2)
  %184 = zext i1 %183 to i8
  %185 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %186 = load i8, i8* %185, align 1, !range !4
  %187 = and i8 %186, %184
  store i8 %187, i8* %185, align 1
  br label %203

188:                                              ; preds = %173
  %189 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %190 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 3, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, %12
  br i1 %194, label %195, label %203

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 40
  %197 = load %"class.WTF::HashSet.222"*, %"class.WTF::HashSet.222"** %196, align 8
  %198 = tail call zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::HashSet.222"* %197) #10
  %199 = zext i1 %198 to i8
  %200 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %201 = load i8, i8* %200, align 1, !range !4
  %202 = and i8 %201, %199
  store i8 %202, i8* %200, align 1
  br label %203

203:                                              ; preds = %172, %119, %188, %195, %180, %107
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %70

13:                                               ; preds = %5, %9, %3
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #10
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %70, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %57, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %20
  %39 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %40 = bitcast %"class.WTF::String"* %21 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53, %38, %16
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %70

70:                                               ; preds = %69, %66, %13, %9
  ret void
}

declare i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::HashSet"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::SizesAttributeParser", align 8
  %4 = bitcast %"class.blink::SizesAttributeParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %6 = bitcast %"class.blink::MediaValuesCached"** %5 to %"class.blink::MediaValues"**
  %7 = load %"class.blink::MediaValues"*, %"class.blink::MediaValues"** %6, align 8
  call void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"* nonnull %3, %"class.blink::MediaValues"* %7, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExecutionContext"* null) #10
  %8 = call float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"* nonnull %3) #10
  %9 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  store float %8, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %10, align 8
  %12 = icmp eq %"class.blink::MediaQuerySet"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %11, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #10
  %15 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %48

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %11, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.318", %"class.WTF::Vector.318"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.321"* %21, null
  br i1 %22, label %46, label %23, !prof !3

23:                                               ; preds = %18
  %24 = bitcast %"class.std::__1::unique_ptr.321"* %21 to i8*
  %25 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28, !prof !2

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %21, i64 %29
  br label %31

31:                                               ; preds = %38, %28
  %32 = phi %"class.std::__1::unique_ptr.321"* [ %39, %38 ], [ %21, %28 ]
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %33, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %33, align 8
  %35 = icmp eq %"class.blink::MediaQuery"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %34) #10
  %37 = bitcast %"class.blink::MediaQuery"* %34 to i8*
  call void @free(i8* %37) #10
  br label %38

38:                                               ; preds = %36, %31
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %32, i64 1
  %40 = icmp eq %"class.std::__1::unique_ptr.321"* %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38
  store i32 0, i32* %25, align 4
  %42 = bitcast %"class.WTF::Vector.318"* %19 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %23
  %45 = phi i8* [ %43, %41 ], [ %24, %23 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #10
  br label %46

46:                                               ; preds = %44, %18
  %47 = bitcast %"class.blink::MediaQuerySet"* %11 to i8*
  call void @free(i8* %47) #10
  br label %48

48:                                               ; preds = %2, %13, %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  %49 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  store i8 1, i8* %49, align 8
  ret void
}

declare i32 @_ZN5blink24GetLoadingAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17MediaValuesCached10StrictModeEv(%"class.blink::MediaValuesCached"*) unnamed_addr #1

declare %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink9CSSParser27ParseInlineStyleDeclarationERKN3WTF6StringENS_13CSSParserModeENS_17SecureContextModeE(%"class.WTF::String"* dereferenceable(8), i8 zeroext, i32) local_unnamed_addr #1

declare i32 @_ZN5blink16HTMLImageElement28GetInlineStyleDimensionsTypeEPKNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121MediaAttributeMatchesERKNS_17MediaValuesCachedERKN3WTF6StringE(%"class.blink::MediaValuesCached"* dereferenceable(120), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.blink::MediaQueryEvaluator", align 8
  %4 = tail call %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExecutionContext"* null) #10
  %5 = bitcast %"class.blink::MediaQueryEvaluator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::MediaValuesCached", %"class.blink::MediaValuesCached"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::MediaQueryEvaluator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"* nonnull %3, %"class.blink::MediaValues"* dereferenceable(8) %6) #10
  %8 = call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* nonnull %3, %"class.blink::MediaQuerySet"* dereferenceable(24) %4, %"class.WTF::Vector.334"* null, %"class.WTF::Vector.334"* null) #10
  call void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  %9 = icmp eq %"class.blink::MediaQuerySet"* %4, null
  br i1 %9, label %45, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  %12 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %45

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.318", %"class.WTF::Vector.318"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.321"* %18, null
  br i1 %19, label %43, label %20, !prof !3

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr.321"* %18 to i8*
  %22 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25, !prof !2

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %18, i64 %26
  br label %28

28:                                               ; preds = %35, %25
  %29 = phi %"class.std::__1::unique_ptr.321"* [ %36, %35 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %30, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %30, align 8
  %32 = icmp eq %"class.blink::MediaQuery"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %31) #10
  %34 = bitcast %"class.blink::MediaQuery"* %31 to i8*
  call void @free(i8* %34) #10
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %29, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr.321"* %36, %27
  br i1 %37, label %38, label %28

38:                                               ; preds = %35
  store i32 0, i32* %22, align 4
  %39 = bitcast %"class.WTF::Vector.318"* %16 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %20
  %42 = phi i8* [ %40, %38 ], [ %21, %20 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  br label %43

43:                                               ; preds = %15, %41
  %44 = bitcast %"class.blink::MediaQuerySet"* %4 to i8*
  call void @free(i8* %44) #10
  br label %45

45:                                               ; preds = %2, %10, %43
  ret i1 %8
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #1

declare %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink19MediaQueryEvaluatorC1ERKNS_11MediaValuesE(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaValues"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuerySet"* dereferenceable(24), %"class.WTF::Vector.334"*, %"class.WTF::Vector.334"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* sret, float, float, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #1

declare float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet.222"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner25SetUrlFromImageAttributesEv(%"class.blink::TokenPreloadScanner::StartTagScanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ImageCandidate", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::ImageCandidate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %6 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %5, align 8
  %7 = tail call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %6) #10
  %8 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %2, float %7, float %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::Document"* null) #10
  %11 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::ImageCandidate"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"class.blink::ImageCandidate"* %11 to i64*
  %16 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %1, %28, %31
  %33 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %34 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %2, i64 0, i32 1
  %35 = bitcast %"class.WTF::StringView"* %33 to i8*
  %36 = bitcast %"class.WTF::StringView"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 36, i1 false) #10
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %32, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #10
  %53 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %5, align 8
  %55 = call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %54) #10
  %56 = load float, float* %8, align 4
  %57 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11
  %58 = call %"class.WTF::StringImpl"* @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringERNS_14ImageCandidateE(float %55, float %56, %"class.WTF::String"* dereferenceable(8) %57, %"class.blink::ImageCandidate"* dereferenceable(48) %11) #10
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 0)
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %52, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringERNS_14ImageCandidateE(float, float, %"class.WTF::String"* dereferenceable(8), %"class.blink::ImageCandidate"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129ParseWebBundleUrlsAndFillHashERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::HashSet.20"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.blink::SpaceSplitString", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = bitcast %"class.blink::SpaceSplitString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %3, i64 0, i32 0, i32 0
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %6, align 8
  call void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %0) #10
  %7 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %1, i64 0, i32 0
  br label %9

9:                                                ; preds = %34, %2
  %10 = phi i32 [ 0, %2 ], [ %35, %34 ]
  %11 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %6, align 8
  %12 = icmp eq %"class.blink::SpaceSplitString::Data"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %11, i64 0, i32 2, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %9 ]
  %18 = icmp ult i32 %10, %17
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  br i1 %12, label %27, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %11, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #10
  %22 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %11) #10
  %26 = bitcast %"class.blink::SpaceSplitString::Data"* %11 to i8*
  call void @free(i8* %26) #10
  br label %27

27:                                               ; preds = %19, %20, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void

28:                                               ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 112, i1 false)
  %29 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %11, i64 0, i32 2
  %30 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.283"* %29, i32 %10) #10
  call void @_ZN5blink13LinkWebBundle16ParseResourceUrlERKN3WTF12AtomicStringE(%"class.blink::KURL"* nonnull sret %4, %"class.WTF::AtomicString"* dereferenceable(8) %30) #10
  %31 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #10
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = call { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.21"* %8, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  br label %34

34:                                               ; preds = %32, %28
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #10
  %35 = add nuw i32 %10, 1
  br label %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PreloadRequest::ExclusionInfo"* @_ZN4base14MakeRefCountedIN5blink14PreloadRequest13ExclusionInfoEJRKNS1_4KURLEN3WTF7HashSetIS4_NS1_8KURLHashENS7_10HashTraitsIS4_EENS7_18PartitionAllocatorEEESD_EEE13scoped_refptrIT_EDpOT0_(%"class.blink::KURL"* dereferenceable(112), %"class.WTF::HashSet.20"* dereferenceable(24), %"class.WTF::HashSet.20"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::HashSet.20", align 8
  %5 = alloca %"class.WTF::HashSet.20", align 8
  %6 = tail call noalias i8* @malloc(i64 176) #10
  %7 = bitcast i8* %6 to %"class.blink::PreloadRequest::ExclusionInfo"*
  %8 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 3
  %11 = bitcast %"class.WTF::HashSet.20"* %1 to i64*
  %12 = bitcast %"class.WTF::HashSet.20"* %4 to i64*
  store i64 0, i64* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::HashSet.20"* %4 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %8, align 8
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %1, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %9, align 4
  store i32 0, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %1, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2147483647
  store i32 %21, i32* %10, align 8
  %22 = and i32 %20, -2147483648
  store i32 %22, i32* %19, align 8
  %23 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 3
  %26 = bitcast %"class.WTF::HashSet.20"* %2 to i64*
  %27 = bitcast %"class.WTF::HashSet.20"* %5 to i64*
  store i64 0, i64* %27, align 8
  %28 = load i64, i64* %26, align 8
  %29 = bitcast %"class.WTF::HashSet.20"* %5 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %2, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %23, align 8
  store i32 0, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %2, i64 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %24, align 4
  store i32 0, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %2, i64 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 2147483647
  store i32 %36, i32* %25, align 8
  %37 = and i32 %35, -2147483648
  store i32 %37, i32* %34, align 8
  call void @_ZN5blink14PreloadRequest13ExclusionInfoC1ERKNS_4KURLEN3WTF7HashSetIS2_NS_8KURLHashENS5_10HashTraitsIS2_EENS5_18PartitionAllocatorEEESB_(%"class.blink::PreloadRequest::ExclusionInfo"* %7, %"class.blink::KURL"* dereferenceable(112) %0, %"class.WTF::HashSet.20"* nonnull %4, %"class.WTF::HashSet.20"* nonnull %5) #10
  %38 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %5, i64 0, i32 0, i32 0
  %39 = load %"class.blink::KURL"*, %"class.blink::KURL"** %38, align 8
  %40 = icmp eq %"class.blink::KURL"* %39, null
  br i1 %40, label %59, label %41, !prof !3

41:                                               ; preds = %3
  %42 = load i32, i32* %23, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = zext i32 %42 to i64
  br label %46

46:                                               ; preds = %54, %44
  %47 = phi i64 [ 0, %44 ], [ %55, %54 ]
  %48 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %39, i64 %47, i32 4
  %49 = bitcast %"class.WTF::String"* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %39, i64 %47
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %53) #10
  br label %54

54:                                               ; preds = %52, %46
  %55 = add nuw nsw i64 %47, 1
  %56 = icmp eq i64 %55, %45
  br i1 %56, label %57, label %46

57:                                               ; preds = %54, %41
  %58 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %39, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %58) #10
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %38, align 8
  br label %59

59:                                               ; preds = %3, %57
  %60 = getelementptr inbounds %"class.WTF::HashSet.20", %"class.WTF::HashSet.20"* %4, i64 0, i32 0, i32 0
  %61 = load %"class.blink::KURL"*, %"class.blink::KURL"** %60, align 8
  %62 = icmp eq %"class.blink::KURL"* %61, null
  br i1 %62, label %81, label %63, !prof !3

63:                                               ; preds = %59
  %64 = load i32, i32* %8, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = zext i32 %64 to i64
  br label %68

68:                                               ; preds = %76, %66
  %69 = phi i64 [ 0, %66 ], [ %77, %76 ]
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %61, i64 %69, i32 4
  %71 = bitcast %"class.WTF::String"* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, inttoptr (i64 -1 to i8*)
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %61, i64 %69
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %75) #10
  br label %76

76:                                               ; preds = %74, %68
  %77 = add nuw nsw i64 %69, 1
  %78 = icmp eq i64 %77, %67
  br i1 %78, label %79, label %68

79:                                               ; preds = %76, %63
  %80 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %61, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %60, align 8
  br label %81

81:                                               ; preds = %59, %79
  ret %"class.blink::PreloadRequest::ExclusionInfo"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.21"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEaSERKS8_(%"class.WTF::HashTable.21"*, %"class.WTF::HashTable.21"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.21", align 8
  %4 = bitcast %"class.WTF::HashTable.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %3, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashTable.21"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEC2ERKS8_(%"class.WTF::HashTable.21"* nonnull %3, %"class.WTF::HashTable.21"* dereferenceable(24) %1)
  %10 = bitcast %"class.WTF::HashTable.21"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::HashTable.21"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %6, align 8
  store i32 %16, i32* %14, align 4
  store i32 %15, i32* %6, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %7, align 4
  store i32 %19, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %20 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2147483647
  %23 = load i32, i32* %8, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %20, align 8
  %27 = and i32 %23, -2147483648
  %28 = or i32 %27, %22
  store i32 %28, i32* %8, align 8
  %29 = inttoptr i64 %13 to %"class.blink::KURL"*
  %30 = icmp eq i64 %13, 0
  br i1 %30, label %48, label %31, !prof !3

31:                                               ; preds = %2
  %32 = icmp eq i32 %15, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %31
  %34 = zext i32 %15 to i64
  br label %35

35:                                               ; preds = %43, %33
  %36 = phi i64 [ 0, %33 ], [ %44, %43 ]
  %37 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 %36, i32 4
  %38 = bitcast %"class.WTF::String"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, inttoptr (i64 -1 to i8*)
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 %36
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %42) #10
  br label %43

43:                                               ; preds = %41, %35
  %44 = add nuw nsw i64 %36, 1
  %45 = icmp eq i64 %44, %34
  br i1 %45, label %46, label %35

46:                                               ; preds = %43, %31
  %47 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %5, align 8
  br label %48

48:                                               ; preds = %2, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.WTF::HashTable.21"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEEC2ERKS8_(%"class.WTF::HashTable.21"*, %"class.WTF::HashTable.21"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %1, i64 0, i32 2
  %6 = bitcast %"class.WTF::HashTable.21"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %1, i64 0, i32 0
  %11 = load %"class.blink::KURL"*, %"class.blink::KURL"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 %14
  br label %44

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.21"* %0, i32 %7)
  %17 = load i32, i32* %5, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %1, i64 0, i32 0
  %20 = load %"class.blink::KURL"*, %"class.blink::KURL"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %20, i64 %23
  br i1 %18, label %44, label %25

25:                                               ; preds = %16
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  br label %29

29:                                               ; preds = %37, %27
  %30 = phi %"class.blink::KURL"* [ %20, %27 ], [ %38, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %28) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #10
  %31 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %30, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %28) #10
  %32 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %30, i64 0, i32 4
  %33 = bitcast %"class.WTF::String"* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, inttoptr (i64 -1 to i8*)
  %36 = or i1 %31, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %30, i64 1
  %39 = icmp eq %"class.blink::KURL"* %38, %24
  br i1 %39, label %40, label %29

40:                                               ; preds = %37, %29
  %41 = phi %"class.blink::KURL"* [ %24, %37 ], [ %30, %29 ]
  %42 = load %"class.blink::KURL"*, %"class.blink::KURL"** %19, align 8
  %43 = load i32, i32* %21, align 8
  br label %44

44:                                               ; preds = %9, %40, %16, %25
  %45 = phi %"class.blink::KURL"* [ %24, %16 ], [ %24, %25 ], [ %24, %40 ], [ %15, %9 ]
  %46 = phi i32 [ %22, %16 ], [ 0, %25 ], [ %43, %40 ], [ %13, %9 ]
  %47 = phi %"class.blink::KURL"* [ %20, %16 ], [ %20, %25 ], [ %42, %40 ], [ %11, %9 ]
  %48 = phi %"class.blink::KURL"* [ %24, %16 ], [ %20, %25 ], [ %41, %40 ], [ %15, %9 ]
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %47, i64 %49
  %51 = icmp eq %"class.blink::KURL"* %48, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  br label %55

54:                                               ; preds = %71, %44
  ret void

55:                                               ; preds = %52, %71
  %56 = phi %"class.blink::KURL"* [ %48, %52 ], [ %72, %71 ]
  %57 = call { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* dereferenceable(112) %56, %"class.blink::KURL"* dereferenceable(112) %56) #10
  %58 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %56, i64 1
  %59 = icmp eq %"class.blink::KURL"* %58, %45
  br i1 %59, label %71, label %60

60:                                               ; preds = %55, %68
  %61 = phi %"class.blink::KURL"* [ %69, %68 ], [ %58, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %53) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %62 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %61, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %53) #10
  %63 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %61, i64 0, i32 4
  %64 = bitcast %"class.WTF::String"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, inttoptr (i64 -1 to i8*)
  %67 = or i1 %62, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %61, i64 1
  %70 = icmp eq %"class.blink::KURL"* %69, %45
  br i1 %70, label %71, label %60

71:                                               ; preds = %60, %68, %55
  %72 = phi %"class.blink::KURL"* [ %45, %55 ], [ %61, %60 ], [ %45, %68 ]
  %73 = icmp eq %"class.blink::KURL"* %72, %50
  br i1 %73, label %54, label %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = mul nuw nsw i64 %27, 112
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to %"class.blink::KURL"*
  %31 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* %30, i32 %17, %"class.blink::KURL"* null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.21"*, %"class.blink::KURL"*, i32, %"class.blink::KURL"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::HashTable.21", align 8
  %7 = bitcast %"class.WTF::HashTable.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.21"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::KURL"* %1, %"class.blink::KURL"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::KURL"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.21"* %6 to i64*
  br label %25

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  br label %55

22:                                               ; preds = %76
  %23 = bitcast %"class.WTF::HashTable.21"* %6 to i64*
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi i64* [ %19, %17 ], [ %23, %22 ]
  %27 = phi i64 [ %18, %17 ], [ %24, %22 ]
  %28 = phi %"class.blink::KURL"* [ null, %17 ], [ %77, %22 ]
  %29 = phi i32 [ 0, %17 ], [ %78, %22 ]
  %30 = bitcast %"class.WTF::HashTable.21"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  store atomic i64 %27, i64* %30 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %31, i64* %26, align 8
  store i32 %29, i32* %9, align 8
  %32 = inttoptr i64 %31 to %"class.blink::KURL"*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %34
  %37 = zext i32 %29 to i64
  br label %38

38:                                               ; preds = %46, %36
  %39 = phi i64 [ 0, %36 ], [ %47, %46 ]
  %40 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 %39, i32 4
  %41 = bitcast %"class.WTF::String"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, inttoptr (i64 -1 to i8*)
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 %39
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %45) #10
  br label %46

46:                                               ; preds = %44, %38
  %47 = add nuw nsw i64 %39, 1
  %48 = icmp eq i64 %47, %37
  br i1 %48, label %49, label %38

49:                                               ; preds = %46, %34
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %51

51:                                               ; preds = %25, %49
  %52 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -2147483648
  store i32 %54, i32* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"class.blink::KURL"* %28

55:                                               ; preds = %20, %76
  %56 = phi %"class.blink::KURL"* [ null, %20 ], [ %77, %76 ]
  %57 = phi i32 [ 0, %20 ], [ %78, %76 ]
  %58 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %58, i64 %59
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #10
  %61 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %60, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #10
  %62 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %58, i64 %59, i32 4
  %63 = bitcast %"class.WTF::String"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  %66 = or i1 %61, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %55
  %68 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %68, i64 %59
  %70 = call { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.21"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %69) #10
  %71 = extractvalue { %"class.blink::KURL"*, i8 } %70, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %71) #10
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %71, %"class.blink::KURL"* dereferenceable(112) %69) #10
  %72 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %73 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %72, i64 %59
  %74 = icmp eq %"class.blink::KURL"* %73, %3
  %75 = select i1 %74, %"class.blink::KURL"* %71, %"class.blink::KURL"* %56
  br label %76

76:                                               ; preds = %55, %67
  %77 = phi %"class.blink::KURL"* [ %56, %55 ], [ %75, %67 ]
  %78 = add i32 %57, 1
  %79 = load i32, i32* %13, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %22, label %55
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.21"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %5 = load %"class.blink::KURL"*, %"class.blink::KURL"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = lshr i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %11) #10
  br label %18

18:                                               ; preds = %2, %16
  %19 = phi i32 [ %17, %16 ], [ %14, %2 ]
  %20 = and i32 %19, %8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %21
  %23 = ptrtoint %"class.blink::KURL"* %22 to i64
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #10
  %25 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %22, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #10
  br i1 %25, label %42, label %26

26:                                               ; preds = %18
  %27 = xor i32 %19, -1
  %28 = lshr i32 %19, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %62
  %41 = ptrtoint %"class.blink::KURL"* %68 to i64
  br label %42

42:                                               ; preds = %40, %18
  %43 = phi i64 [ %23, %18 ], [ %41, %40 ]
  %44 = phi %"class.blink::KURL"* [ null, %18 ], [ %63, %40 ]
  %45 = icmp eq %"class.blink::KURL"* %44, null
  %46 = ptrtoint %"class.blink::KURL"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %71

48:                                               ; preds = %26, %62
  %49 = phi %"class.blink::KURL"* [ null, %26 ], [ %63, %62 ]
  %50 = phi i64 [ %23, %26 ], [ %69, %62 ]
  %51 = phi %"class.blink::KURL"* [ %22, %26 ], [ %68, %62 ]
  %52 = phi i64 [ %21, %26 ], [ %67, %62 ]
  %53 = phi i64 [ 0, %26 ], [ %65, %62 ]
  %54 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %52, i32 4
  %55 = bitcast %"class.WTF::String"* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %62, label %58

58:                                               ; preds = %48
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %61 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"* %60) #10
  br i1 %61, label %71, label %62

62:                                               ; preds = %48, %58
  %63 = phi %"class.blink::KURL"* [ %49, %58 ], [ %51, %48 ]
  %64 = icmp eq i64 %53, 0
  %65 = select i1 %64, i64 %39, i64 %53
  %66 = add i64 %65, %52
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %67
  %69 = ptrtoint %"class.blink::KURL"* %68 to i64
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #10
  %70 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %68, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #10
  br i1 %70, label %40, label %48

71:                                               ; preds = %58, %42
  %72 = phi i64 [ %47, %42 ], [ %50, %58 ]
  %73 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %74 = inttoptr i64 %72 to %"class.blink::KURL"*
  %75 = insertvalue { %"class.blink::KURL"*, i8 } undef, %"class.blink::KURL"* %74, 0
  %76 = insertvalue { %"class.blink::KURL"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::KURL"*, i8 } %76
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.21"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %6 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  %7 = icmp eq %"class.blink::KURL"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* null)
  %10 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::KURL"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #10
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %28
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %31 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %29, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #10
  br i1 %31, label %77, label %32

32:                                               ; preds = %25
  %33 = xor i32 %26, -1
  %34 = lshr i32 %26, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %59
  %47 = phi %"class.blink::KURL"* [ %29, %32 ], [ %65, %59 ]
  %48 = phi %"class.blink::KURL"* [ null, %32 ], [ %60, %59 ]
  %49 = phi i64 [ %28, %32 ], [ %64, %59 ]
  %50 = phi i64 [ 0, %32 ], [ %62, %59 ]
  %51 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %49, i32 4
  %52 = bitcast %"class.WTF::String"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #10
  br i1 %58, label %91, label %59

59:                                               ; preds = %46, %55
  %60 = phi %"class.blink::KURL"* [ %48, %55 ], [ %47, %46 ]
  %61 = icmp eq i64 %50, 0
  %62 = select i1 %61, i64 %45, i64 %50
  %63 = add i64 %62, %49
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %64
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %66 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %65, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #10
  br i1 %66, label %67, label %46

67:                                               ; preds = %59
  %68 = icmp eq %"class.blink::KURL"* %60, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 112, i1 false) #10
  %71 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %25, %67, %69
  %78 = phi %"class.blink::KURL"* [ %60, %69 ], [ %65, %67 ], [ %29, %25 ]
  %79 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %78, %"class.blink::KURL"* dereferenceable(112) %2) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %13, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  %90 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* %78)
  br label %91

91:                                               ; preds = %55, %77, %89
  %92 = phi i8 [ 1, %77 ], [ 1, %89 ], [ 0, %55 ]
  %93 = phi %"class.blink::KURL"* [ %78, %77 ], [ %90, %89 ], [ %47, %55 ]
  %94 = insertvalue { %"class.blink::KURL"*, i8 } undef, %"class.blink::KURL"* %93, 0
  %95 = insertvalue { %"class.blink::KURL"*, i8 } %94, i8 %92, 1
  ret { %"class.blink::KURL"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.21"*, %"class.blink::KURL"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 112
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  %37 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* %36, i32 %32, %"class.blink::KURL"* %1) #10
  ret %"class.blink::KURL"* %37
}

declare void @_ZN5blink13LinkWebBundle16ParseResourceUrlERKN3WTF12AtomicStringE(%"class.blink::KURL"* sret, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.283"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.21"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 0
  %6 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  %7 = icmp eq %"class.blink::KURL"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* null)
  %10 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::KURL"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #10
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %28
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %31 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %29, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #10
  br i1 %31, label %77, label %32

32:                                               ; preds = %25
  %33 = xor i32 %26, -1
  %34 = lshr i32 %26, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %59
  %47 = phi %"class.blink::KURL"* [ %29, %32 ], [ %65, %59 ]
  %48 = phi %"class.blink::KURL"* [ null, %32 ], [ %60, %59 ]
  %49 = phi i64 [ %28, %32 ], [ %64, %59 ]
  %50 = phi i64 [ 0, %32 ], [ %62, %59 ]
  %51 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %49, i32 4
  %52 = bitcast %"class.WTF::String"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #10
  br i1 %58, label %91, label %59

59:                                               ; preds = %46, %55
  %60 = phi %"class.blink::KURL"* [ %48, %55 ], [ %47, %46 ]
  %61 = icmp eq i64 %50, 0
  %62 = select i1 %61, i64 %45, i64 %50
  %63 = add i64 %62, %49
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %64
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #10
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %66 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %65, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #10
  br i1 %66, label %67, label %46

67:                                               ; preds = %59
  %68 = icmp eq %"class.blink::KURL"* %60, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 112, i1 false) #10
  %71 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %25, %67, %69
  %78 = phi %"class.blink::KURL"* [ %60, %69 ], [ %65, %67 ], [ %29, %25 ]
  %79 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %78, %"class.blink::KURL"* dereferenceable(112) %2) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.21", %"class.WTF::HashTable.21"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %13, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  %90 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.21"* %0, %"class.blink::KURL"* %78)
  br label %91

91:                                               ; preds = %55, %77, %89
  %92 = phi i8 [ 1, %77 ], [ 1, %89 ], [ 0, %55 ]
  %93 = phi %"class.blink::KURL"* [ %78, %77 ], [ %90, %89 ], [ %47, %55 ]
  %94 = insertvalue { %"class.blink::KURL"*, i8 } undef, %"class.blink::KURL"* %93, 0
  %95 = insertvalue { %"class.blink::KURL"*, i8 } %94, i8 %92, 1
  ret { %"class.blink::KURL"*, i8 } %95
}

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #2

declare void @_ZN5blink14PreloadRequest13ExclusionInfoC1ERKNS_4KURLEN3WTF7HashSetIS2_NS_8KURLHashENS5_10HashTraitsIS2_EENS5_18PartitionAllocatorEEESB_(%"class.blink::PreloadRequest::ExclusionInfo"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::HashSet.20"*, %"class.WTF::HashSet.20"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19TokenPreloadScanner15StartTagScanner13ShouldPreloadERN4absl8optionalINS_12ResourceTypeEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.absl::optional.2608"* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, %16
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = tail call zeroext i1 @_ZNK5blink19TokenPreloadScanner15StartTagScanner17ShouldPreloadLinkERN4absl8optionalINS_12ResourceTypeEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.absl::optional.2608"* dereferenceable(2) %1)
  br label %53

25:                                               ; preds = %14
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, %16
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 10
  %34 = load i8, i8* %33, align 2, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %32, %25
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, %16
  br i1 %42, label %43, label %53

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %45 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 15
  %46 = tail call i32 @_ZN5blink12ScriptLoader22GetScriptTypeAtPrepareERKN3WTF6StringES4_NS0_17LegacyTypeSupportE(%"class.WTF::String"* dereferenceable(8) %44, %"class.WTF::String"* dereferenceable(8) %45, i32 1) #10
  switch i32 %46, label %52 [
    i32 4, label %53
    i32 2, label %53
    i32 3, label %53
    i32 0, label %47
    i32 1, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 18
  %49 = load i8, i8* %48, align 8, !range !4
  %50 = icmp ne i8 %49, 0
  %51 = tail call zeroext i1 @_ZN5blink12ScriptLoader16BlockForNoModuleENS0_19ScriptTypeAtPrepareEb(i32 %46, i1 zeroext %50) #10
  br i1 %51, label %53, label %52

52:                                               ; preds = %43, %47
  br label %53

53:                                               ; preds = %2, %36, %52, %43, %43, %43, %47, %32, %10, %6, %23
  %54 = phi i1 [ %24, %23 ], [ false, %6 ], [ false, %10 ], [ false, %32 ], [ false, %47 ], [ false, %43 ], [ false, %43 ], [ false, %43 ], [ true, %52 ], [ true, %36 ], [ false, %2 ]
  ret i1 %54
}

declare i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"*) local_unnamed_addr #1

declare i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"*) local_unnamed_addr #1

declare %"class.blink::PreloadRequest"* @_ZN5blink14PreloadRequest14CreateIfNeededERKN3WTF6StringERKNS1_12TextPositionES4_RKNS_4KURLENS_12ResourceTypeEN7network5mojom14ReferrerPolicyENS0_14ReferrerSourceENS_15ResourceFetcher10IsImageSetEPKNS0_13ExclusionInfoERKNS_15FetchParameters13ResourceWidthERKNS_22ClientHintsPreferencesENS0_11RequestTypeE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::TextPosition"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, i32, i32, %"class.blink::PreloadRequest::ExclusionInfo"*, %"struct.blink::FetchParameters::ResourceWidth"* dereferenceable(8), %"class.blink::ClientHintsPreferences"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN5blink35SubresourceRedirectOriginsPreloader22AddImagePreloadRequestERKNS_4KURLERKN3WTF6StringE(%"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare i16 @_ZN5blink13PreloadHelper30GetResourceTypeFromAsAttributeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19TokenPreloadScanner15StartTagScanner17ShouldPreloadLinkERN4absl8optionalINS_12ResourceTypeEEE(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.absl::optional.2608"* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ContentType", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ContentType", align 8
  %7 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %149, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %149, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.blink::ContentType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %11) #10
  %22 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"* nonnull %4) #10
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedStyleSheetMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #10
  br label %40

40:                                               ; preds = %19, %36, %39
  %41 = getelementptr inbounds %"class.blink::ContentType", %"class.blink::ContentType"* %4, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %40, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %149

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 6
  %60 = load i8, i8* %59, align 2, !range !4
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %145, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.absl::optional.2608", %"class.absl::optional.2608"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8, i8* %63, align 1, !range !4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  br label %77

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.absl::optional.2608", %"class.absl::optional.2608"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 1
  %72 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  br i1 %71, label %73, label %77

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 40
  %75 = load %"class.WTF::HashSet.222"*, %"class.WTF::HashSet.222"** %74, align 8
  %76 = tail call zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %72, %"class.WTF::HashSet.222"* %75) #10
  br label %149

77:                                               ; preds = %66, %68
  %78 = phi %"class.WTF::String"* [ %67, %66 ], [ %72, %68 ]
  %79 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %149, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %149, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #10
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %89 = bitcast %"class.blink::ContentType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #10
  call void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %78) #10
  %90 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"* nonnull %6) #10
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %88, align 8
  %91 = getelementptr inbounds %"class.blink::ContentType", %"class.blink::ContentType"* %6, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %86, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #10
  %108 = load i8, i8* %63, align 1, !range !4
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %126, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.absl::optional.2608", %"class.absl::optional.2608"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 4
  br i1 %113, label %114, label %121

114:                                              ; preds = %110
  %115 = call zeroext i1 @_ZN5blink16MIMETypeRegistry23IsSupportedFontMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  br i1 %115, label %116, label %127

116:                                              ; preds = %114
  %117 = load i8, i8* %63, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = load i8, i8* %111, align 1
  br label %121

121:                                              ; preds = %110, %119
  %122 = phi i8 [ %120, %119 ], [ %112, %110 ]
  %123 = icmp eq i8 %122, 2
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedStyleSheetMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  br i1 %125, label %126, label %127

126:                                              ; preds = %107, %116, %121, %124
  br label %127

127:                                              ; preds = %114, %124, %126
  %128 = phi i1 [ true, %126 ], [ false, %124 ], [ false, %114 ]
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #10
  br label %144

144:                                              ; preds = %127, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #10
  br label %149

145:                                              ; preds = %58
  %146 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 7
  %147 = load i8, i8* %146, align 1, !range !4
  %148 = icmp ne i8 %147, 0
  br label %149

149:                                              ; preds = %77, %10, %15, %145, %82, %57, %144, %73
  %150 = phi i1 [ %24, %57 ], [ %76, %73 ], [ %128, %144 ], [ true, %82 ], [ %148, %145 ], [ true, %15 ], [ true, %10 ], [ true, %77 ]
  ret i1 %150
}

declare i32 @_ZN5blink12ScriptLoader22GetScriptTypeAtPrepareERKN3WTF6StringES4_NS0_17LegacyTypeSupportE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12ScriptLoader16BlockForNoModuleENS0_19ScriptTypeAtPrepareEb(i32, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedStyleSheetMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16MIMETypeRegistry23IsSupportedFontMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21LazyLoadImageObserver43IsFullyLoadableFirstKImageAndDecrementCountEv(%"class.blink::LazyLoadImageObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEaSERKSD_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable", align 8
  %4 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable"* nonnull %3, %"class.WTF::HashTable"* dereferenceable(24) %1)
  %10 = bitcast %"class.WTF::HashTable"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %6, align 8
  store i32 %16, i32* %14, align 4
  store i32 %15, i32* %6, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %7, align 4
  store i32 %19, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2147483647
  %23 = load i32, i32* %8, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %20, align 8
  %27 = and i32 %23, -2147483648
  %28 = or i32 %27, %22
  store i32 %28, i32* %8, align 8
  %29 = inttoptr i64 %13 to %"struct.std::__1::pair"*
  %30 = icmp eq i64 %13, 0
  br i1 %30, label %61, label %31, !prof !3

31:                                               ; preds = %2
  %32 = icmp eq i32 %15, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %31
  %34 = zext i32 %15 to i64
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %36
  %38 = bitcast %"struct.std::__1::pair"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %39 to %"class.WTF::StringImpl"*
  %41 = ptrtoint i8* %39 to i64
  switch i64 %41, label %42 [
    i64 -1, label %56
    i64 0, label %56
  ]

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %39, i64 8
  %44 = bitcast i8* %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = bitcast i8* %39 to i32*
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %42
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %42
  %53 = phi i32 [ %51, %50 ], [ %49, %42 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %56

56:                                               ; preds = %55, %52, %35, %35
  %57 = add nuw nsw i64 %36, 1
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %59, label %35

59:                                               ; preds = %56, %31
  %60 = inttoptr i64 %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #10
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  br label %61

61:                                               ; preds = %2, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.WTF::HashTable"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %4 = bitcast %"class.WTF::HashTable"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %0, i32 %5)
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %14
  br i1 %9, label %35, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair"* %30, %15
  br i1 %31, label %35, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair"* [ %11, %16 ], [ %19, %18 ]
  %34 = icmp eq %"struct.std::__1::pair"* %33, %15
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %36, %55, %52, %2, %7, %32
  ret void

36:                                               ; preds = %32, %55
  %37 = phi %"struct.std::__1::pair"* [ %42, %55 ], [ %33, %32 ]
  %38 = tail call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* dereferenceable(16) %37, %"struct.std::__1::pair"* dereferenceable(16) %37) #10
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %40 = icmp eq %"struct.std::__1::pair"* %39, %15
  br i1 %40, label %35, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %45, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %15
  br i1 %54, label %35, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"struct.std::__1::pair"* %42, %15
  br i1 %56, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"struct.std::__1::pair"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !8

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %30, i32 %17, %"struct.std::__1::pair"* null) #10
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*, i32, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.std::__1::pair"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %78) #10
  %90 = extractvalue { %"struct.std::__1::pair"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #10
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair"*
  %113 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair"*, i8 } %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* null)
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #10
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #10
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  tail call void @llvm.trap() #10
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #10
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.std::__1::pair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable"* %0, %"struct.std::__1::pair"* %36, i32 %32, %"struct.std::__1::pair"* %1) #10
  ret %"struct.std::__1::pair"* %78
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.6"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN5blink17CSSPreloadScanner4ScanERKN3WTF6StringERKNS_15SegmentedStringERNS1_6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS1_18PartitionAllocatorEEERKNS_4KURLEPKNSB_13ExclusionInfoE(%"class.blink::CSSPreloadScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.6"* dereferenceable(16), %"class.blink::KURL"* dereferenceable(112), %"class.blink::PreloadRequest::ExclusionInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner22UpdatePredictedBaseURLINS_16CompactHTMLTokenEEEvRKT_(%"class.blink::TokenPreloadScanner"*, %"class.blink::CompactHTMLToken"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %8 = tail call %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %7) #10
  %9 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %8, i64 0, i32 1
  %15 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %14) #10
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %12, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %10, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %33 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %33) #10
  %34 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #10
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %40, align 8
  %41 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %4, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  br i1 %41, label %43, label %42

42:                                               ; preds = %35
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %6, %"class.blink::KURL"* nonnull %4) #10
  br label %44

43:                                               ; preds = %35, %32
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #10
  br label %44

44:                                               ; preds = %43, %42
  %45 = getelementptr inbounds %"class.blink::TokenPreloadScanner", %"class.blink::TokenPreloadScanner"* %0, i64 0, i32 2
  %46 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %45, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %33) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #10
  br label %47

47:                                               ; preds = %2, %44
  ret void
}

declare %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK5blink16CompactHTMLToken16GetAttributeItemERKNS_13QualifiedNameE(%"class.blink::CompactHTMLToken"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner16ProcessAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCharsetAttrE, align 8
  %5 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %4) #10
  br i1 %5, label %6, label %47

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #10
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %6
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %46, %43, %28, %3
  %48 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %49
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %106

57:                                               ; preds = %47
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, %49
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %106

65:                                               ; preds = %57
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, %49
  br i1 %71, label %72, label %73

72:                                               ; preds = %65
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %106

73:                                               ; preds = %65
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, %49
  br i1 %79, label %80, label %81

80:                                               ; preds = %73
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner21ProcessInputAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %106

81:                                               ; preds = %73
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, %49
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %106

89:                                               ; preds = %81
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE to %"class.blink::QualifiedName"**), align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, %49
  br i1 %95, label %96, label %106

96:                                               ; preds = %89
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kPosterAttrE, align 8
  %98 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %97) #10
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1) #10
  br label %106

100:                                              ; preds = %96
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %102 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %101) #10
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %105 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %104, i32* %105, align 8
  br label %106

106:                                              ; preds = %103, %100, %99, %64, %80, %89, %88, %72, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessScriptAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %5 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %4) #10
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1)
  br label %201

7:                                                ; preds = %3
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %9 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %8) #10
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %12 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %11, i32* %12, align 8
  br label %201

13:                                               ; preds = %7
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE, align 8
  %15 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %14) #10
  br i1 %15, label %16, label %57

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %16
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %17 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %201, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %201

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %201

57:                                               ; preds = %13
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAsyncAttrE, align 8
  %59 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %58) #10
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 30
  store i8 1, i8* %61, align 1
  %62 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  store i32 1, i32* %62, align 4
  br label %201

63:                                               ; preds = %57
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kDeferAttrE, align 8
  %65 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %64) #10
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 21
  store i32 1, i32* %67, align 4
  br label %201

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 29
  %70 = load i8, i8* %69, align 8, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %74 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %73) #10
  br i1 %74, label %75, label %80

75:                                               ; preds = %72
  store i8 1, i8* %69, align 8
  %76 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 33
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32
  %79 = tail call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, i32 %77, %"class.WTF::HashSet"* dereferenceable(24) %78) #10
  br label %201

80:                                               ; preds = %68, %72
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %82 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %81) #10
  br i1 %82, label %83, label %124

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #10
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !2

102:                                              ; preds = %93
  tail call void @llvm.trap() #10
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %103, %88, %83
  %106 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %107 = bitcast %"class.WTF::String"* %84 to i64*
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %201, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %201

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #10
  br label %201

124:                                              ; preds = %80
  %125 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLanguageAttrE, align 8
  %126 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %125) #10
  br i1 %126, label %127, label %168

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 15
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #10
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %137
  tail call void @llvm.trap() #10
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %149

149:                                              ; preds = %147, %132, %127
  %150 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %151 = bitcast %"class.WTF::String"* %128 to i64*
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store i64 %150, i64* %151, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %201, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %201

167:                                              ; preds = %164
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %201

168:                                              ; preds = %124
  %169 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kNomoduleAttrE, align 8
  %170 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %169) #10
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 18
  store i8 1, i8* %172, align 8
  br label %201

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %175 = load i8, i8* %174, align 8, !range !4
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %187

177:                                              ; preds = %173
  %178 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %179 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %178) #10
  br i1 %179, label %180, label %187

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  store i8 1, i8* %174, align 8
  %185 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %186 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 1, i32* %185) #10
  br label %201

187:                                              ; preds = %173, %180, %177
  %188 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %189 = load i8, i8* %188, align 8, !range !4
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %201

191:                                              ; preds = %187
  %192 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %193 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %192) #10
  br i1 %193, label %194, label %201

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %196 = load i8, i8* %195, align 8, !range !4
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  store i8 1, i8* %188, align 8
  %199 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %200 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %199, i32* %200, align 4
  br label %201

201:                                              ; preds = %167, %164, %149, %123, %120, %105, %56, %53, %38, %194, %187, %10, %60, %75, %184, %198, %191, %171, %66, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner19ProcessImgAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %5 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %4) #10
  br i1 %5, label %6, label %52

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %52

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %15, %11
  %31 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %32 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %31, i64* %32, align 8
  br label %198

33:                                               ; preds = %20
  %34 = trunc i33 %26 to i32
  store i32 %34, i32* %21, align 4
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %36 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %37 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %36, i64* %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %38, label %198, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %198

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br label %198

52:                                               ; preds = %6, %3
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %54 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %53) #10
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %57 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %56, i32* %57, align 8
  br label %198

58:                                               ; preds = %52
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %60 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %59) #10
  br i1 %60, label %61, label %107

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %107

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %88, !prof !2

84:                                               ; preds = %75
  tail call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %70, %66
  %86 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %87 = bitcast %"class.WTF::String"* %62 to i64*
  store i64 %86, i64* %87, align 8
  br label %198

88:                                               ; preds = %75
  %89 = trunc i33 %81 to i32
  store i32 %89, i32* %76, align 4
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %91 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %92 = bitcast %"class.WTF::String"* %62 to i64*
  store i64 %91, i64* %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %93, label %198, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %198

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %198

107:                                              ; preds = %61, %58
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %109 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %108) #10
  br i1 %109, label %110, label %115

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %112 = load i8, i8* %111, align 8, !range !4
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  br label %198

115:                                              ; preds = %110, %107
  %116 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %117 = load i8, i8* %116, align 8, !range !4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %121 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %120) #10
  br i1 %121, label %122, label %129

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  store i8 1, i8* %116, align 8
  %127 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %128 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 0, i32* %127) #10
  br label %198

129:                                              ; preds = %115, %122, %119
  %130 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %131 = load i8, i8* %130, align 8, !range !4
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %143

133:                                              ; preds = %129
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %135 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %134) #10
  br i1 %135, label %136, label %143

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %138 = load i8, i8* %137, align 8, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  store i8 1, i8* %130, align 8
  %141 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %142 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %141, i32* %142, align 4
  br label %198

143:                                              ; preds = %136, %129, %133
  %144 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 34
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %155

147:                                              ; preds = %143
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kLoadingAttrE, align 8
  %149 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %148) #10
  %150 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %151 = icmp ne i8 %150, 0
  %152 = and i1 %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = tail call i32 @_ZN5blink24GetLoadingAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %154, i32* %144, align 4
  br label %198

155:                                              ; preds = %147, %143
  %156 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 35
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %167

159:                                              ; preds = %155
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %161 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %160) #10
  %162 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %163 = icmp ne i8 %162, 0
  %164 = and i1 %161, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %159
  %166 = tail call i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %166, i32* %156, align 8
  br label %198

167:                                              ; preds = %159, %155
  %168 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 36
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %179

171:                                              ; preds = %167
  %172 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %173 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %172) #10
  %174 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %175 = icmp ne i8 %174, 0
  %176 = and i1 %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = tail call i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  store i32 %178, i32* %168, align 4
  br label %198

179:                                              ; preds = %171, %167
  %180 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 37
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %198

183:                                              ; preds = %179
  %184 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %185 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %184) #10
  %186 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_lazy_image_loading_enabled_E, align 1
  %187 = icmp ne i8 %186, 0
  %188 = and i1 %185, %187
  br i1 %188, label %189, label %198

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %191 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %190, align 8
  %192 = tail call zeroext i1 @_ZNK5blink17MediaValuesCached10StrictModeEv(%"class.blink::MediaValuesCached"* %191) #10
  %193 = xor i1 %192, true
  %194 = zext i1 %193 to i8
  %195 = tail call %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink9CSSParser27ParseInlineStyleDeclarationERKN3WTF6StringENS_13CSSParserModeENS_17SecureContextModeE(%"class.WTF::String"* dereferenceable(8) %2, i8 zeroext %194, i32 0) #10
  %196 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %195, i64 0, i32 0
  %197 = tail call i32 @_ZN5blink16HTMLImageElement28GetInlineStyleDimensionsTypeEPKNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"* %196) #10
  store i32 %197, i32* %180, align 8
  br label %198

198:                                              ; preds = %85, %30, %106, %103, %88, %51, %48, %33, %55, %114, %140, %165, %179, %183, %189, %177, %153, %126
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner20ProcessLinkAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LinkRelAttribute"*
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %7 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %6) #10
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1)
  %9 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #10
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #10
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %8
  %31 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %32 = bitcast %"class.WTF::String"* %9 to i64*
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %31, i64* %32, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %414, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %414

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %414

49:                                               ; preds = %3
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %51 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %50) #10
  br i1 %51, label %52, label %86

52:                                               ; preds = %49
  %53 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = bitcast i64* %4 to i32*
  %55 = getelementptr inbounds %"class.blink::LinkRelAttribute", %"class.blink::LinkRelAttribute"* %5, i64 0, i32 1
  store i64 -6148914691236517206, i64* %4, align 8
  call void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2) #10
  %56 = load i16, i16* %55, align 4
  %57 = and i16 %56, 3
  %58 = icmp eq i16 %57, 1
  %59 = load i32, i32* %54, align 8
  %60 = icmp eq i32 %59, 0
  %61 = and i1 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %52
  %63 = lshr i16 %56, 2
  %64 = trunc i16 %63 to i8
  %65 = and i8 %64, 1
  %66 = xor i8 %65, 1
  br label %67

67:                                               ; preds = %52, %62
  %68 = phi i8 [ 0, %52 ], [ %66, %62 ]
  %69 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 4
  store i8 %68, i8* %69, align 8
  %70 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 5
  %71 = lshr i16 %56, 3
  %72 = trunc i16 %71 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %70, align 1
  %74 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 6
  %75 = lshr i16 %56, 5
  %76 = trunc i16 %75 to i8
  %77 = and i8 %76, 1
  store i8 %77, i8* %74, align 2
  %78 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 7
  %79 = lshr i16 %56, 9
  %80 = trunc i16 %79 to i8
  %81 = and i8 %80, 1
  store i8 %81, i8* %78, align 1
  %82 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 8
  %83 = lshr i16 %56, 13
  %84 = trunc i16 %83 to i8
  %85 = and i8 %84, 1
  store i8 %85, i8* %82, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %414

86:                                               ; preds = %49
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %88 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %87) #10
  br i1 %88, label %89, label %97

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %91 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %90, align 8
  %92 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121MediaAttributeMatchesERKNS_17MediaValuesCachedERKN3WTF6StringE(%"class.blink::MediaValuesCached"* dereferenceable(120) %91, %"class.WTF::String"* dereferenceable(8) %2)
  %93 = zext i1 %92 to i8
  %94 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %95 = load i8, i8* %94, align 1, !range !4
  %96 = and i8 %95, %93
  store i8 %96, i8* %94, align 1
  br label %414

97:                                               ; preds = %86
  %98 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %99 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %98) #10
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  %101 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %102 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 22
  store i32 %101, i32* %102, align 8
  br label %414

103:                                              ; preds = %97
  %104 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE, align 8
  %105 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %104) #10
  br i1 %105, label %106, label %147

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 25
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #10
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %116
  tail call void @llvm.trap() #10
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %106
  %129 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %130 = bitcast %"class.WTF::String"* %107 to i64*
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %129, i64* %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %414, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %414

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %414

147:                                              ; preds = %103
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kAsAttrE, align 8
  %149 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %148) #10
  br i1 %149, label %150, label %171

150:                                              ; preds = %147
  %151 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* %2) #10
  %152 = ptrtoint %"class.WTF::StringImpl"* %151 to i64
  %153 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 13
  %154 = bitcast %"class.WTF::String"* %153 to i64*
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %153, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  store i64 %152, i64* %154, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %414, label %158

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %414

170:                                              ; preds = %167
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #10
  br label %414

171:                                              ; preds = %147
  %172 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %173 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %172) #10
  br i1 %173, label %174, label %215

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 14
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %196, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i33
  %188 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #10
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !2

193:                                              ; preds = %184
  tail call void @llvm.trap() #10
  unreachable

194:                                              ; preds = %184
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %185, align 4
  br label %196

196:                                              ; preds = %194, %179, %174
  %197 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %198 = bitcast %"class.WTF::String"* %175 to i64*
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  store i64 %197, i64* %198, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %414, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %414

214:                                              ; preds = %211
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #10
  br label %414

215:                                              ; preds = %171
  %216 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 27
  %217 = load i8, i8* %216, align 8, !range !4
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %229

219:                                              ; preds = %215
  %220 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %221 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %220) #10
  br i1 %221, label %222, label %229

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  store i8 1, i8* %216, align 8
  %227 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 28
  %228 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %2, i32 1, i32* %227) #10
  br label %414

229:                                              ; preds = %215, %222, %219
  %230 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 29
  %231 = load i8, i8* %230, align 8, !range !4
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %241

233:                                              ; preds = %229
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %235 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %234) #10
  br i1 %235, label %236, label %241

236:                                              ; preds = %233
  store i8 1, i8* %230, align 8
  %237 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 33
  %238 = load i32, i32* %237, align 8
  %239 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 32
  %240 = tail call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, i32 %238, %"class.WTF::HashSet"* dereferenceable(24) %239) #10
  br label %414

241:                                              ; preds = %229, %233
  %242 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kImagesrcsetAttrE, align 8
  %243 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %242) #10
  br i1 %243, label %244, label %290

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %245, i64 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %249, label %290

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %268, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %268

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i33
  %262 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #10
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %271, !prof !2

267:                                              ; preds = %258
  tail call void @llvm.trap() #10
  unreachable

268:                                              ; preds = %253, %249
  %269 = ptrtoint %"class.WTF::StringImpl"* %251 to i64
  %270 = bitcast %"class.WTF::String"* %245 to i64*
  store i64 %269, i64* %270, align 8
  br label %414

271:                                              ; preds = %258
  %272 = trunc i33 %264 to i32
  store i32 %272, i32* %259, align 4
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %274 = ptrtoint %"class.WTF::StringImpl"* %251 to i64
  %275 = bitcast %"class.WTF::String"* %245 to i64*
  store i64 %274, i64* %275, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %276, label %414, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %414

289:                                              ; preds = %286
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #10
  br label %414

290:                                              ; preds = %244, %241
  %291 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImagesizesAttrE, align 8
  %292 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %291) #10
  br i1 %292, label %293, label %298

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %295 = load i8, i8* %294, align 8, !range !4
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %293
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  br label %414

298:                                              ; preds = %293, %290
  %299 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 24
  %300 = load i8, i8* %299, align 8, !range !4
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %312

302:                                              ; preds = %298
  %303 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %304 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %303) #10
  br i1 %304, label %305, label %312

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 39
  %307 = load i8, i8* %306, align 8, !range !4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %305
  store i8 1, i8* %299, align 8
  %310 = tail call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #10
  %311 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 23
  store i32 %310, i32* %311, align 4
  br label %414

312:                                              ; preds = %305, %298, %302
  %313 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kScopesAttrE, align 8
  %314 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %313) #10
  br i1 %314, label %315, label %363

315:                                              ; preds = %312
  %316 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %318, label %342, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 acquire, align 4
  %322 = and i32 %321, 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %319
  %325 = load atomic i32, i32* %320 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %342

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i33
  %332 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %331, i33 1) #10
  %333 = extractvalue { i33, i1 } %332, 1
  %334 = extractvalue { i33, i1 } %332, 0
  %335 = icmp slt i33 %334, 0
  %336 = or i1 %333, %335
  br i1 %336, label %337, label %338, !prof !2

337:                                              ; preds = %328
  tail call void @llvm.trap() #10
  unreachable

338:                                              ; preds = %328
  %339 = trunc i33 %334 to i32
  store i32 %339, i32* %329, align 4
  br label %342

340:                                              ; preds = %319
  %341 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %317) #10
  br label %342

342:                                              ; preds = %315, %324, %338, %340
  %343 = phi %"class.WTF::StringImpl"* [ %341, %340 ], [ %317, %324 ], [ %317, %338 ], [ null, %315 ]
  %344 = ptrtoint %"class.WTF::StringImpl"* %343 to i64
  %345 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 16
  %346 = bitcast %"class.WTF::AtomicString"* %345 to i64*
  %347 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %345, i64 0, i32 0, i32 0, i32 0
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  store i64 %344, i64* %346, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %414, label %350

350:                                              ; preds = %342
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %414

362:                                              ; preds = %359
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #10
  br label %414

363:                                              ; preds = %312
  %364 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kResourcesAttrE, align 8
  %365 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %364) #10
  br i1 %365, label %366, label %414

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %393, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 acquire, align 4
  %373 = and i32 %372, 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %391, label %375

375:                                              ; preds = %370
  %376 = load atomic i32, i32* %371 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %393

379:                                              ; preds = %375
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  %382 = zext i32 %381 to i33
  %383 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %382, i33 1) #10
  %384 = extractvalue { i33, i1 } %383, 1
  %385 = extractvalue { i33, i1 } %383, 0
  %386 = icmp slt i33 %385, 0
  %387 = or i1 %384, %386
  br i1 %387, label %388, label %389, !prof !2

388:                                              ; preds = %379
  tail call void @llvm.trap() #10
  unreachable

389:                                              ; preds = %379
  %390 = trunc i33 %385 to i32
  store i32 %390, i32* %380, align 4
  br label %393

391:                                              ; preds = %370
  %392 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %368) #10
  br label %393

393:                                              ; preds = %366, %375, %389, %391
  %394 = phi %"class.WTF::StringImpl"* [ %392, %391 ], [ %368, %375 ], [ %368, %389 ], [ null, %366 ]
  %395 = ptrtoint %"class.WTF::StringImpl"* %394 to i64
  %396 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 17
  %397 = bitcast %"class.WTF::AtomicString"* %396 to i64*
  %398 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %396, i64 0, i32 0, i32 0, i32 0
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  store i64 %395, i64* %397, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %393
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %410

408:                                              ; preds = %401
  %409 = add i32 %407, -1
  store i32 %409, i32* %406, align 4
  br label %410

410:                                              ; preds = %408, %401
  %411 = phi i32 [ %409, %408 ], [ %407, %401 ]
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #10
  br label %414

414:                                              ; preds = %268, %393, %410, %413, %342, %359, %362, %289, %286, %271, %214, %211, %196, %150, %167, %170, %146, %143, %128, %48, %45, %30, %67, %100, %226, %309, %363, %297, %236, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner21ProcessInputAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %7 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %6) #10
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner12SetUrlToLoadERKN3WTF6StringENS1_14URLReplacementE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2, i32 1)
  br label %53

9:                                                ; preds = %3
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %11 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %10) #10
  br i1 %11, label %12, label %53

12:                                               ; preds = %9
  %13 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %19, i64* %20, align 8
  br label %28

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  br label %28

28:                                               ; preds = %17, %21
  %29 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %38, i64* %39, align 8
  br label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  br label %47

47:                                               ; preds = %36, %40
  %48 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  %50 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  %51 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 10
  %52 = zext i1 %50 to i8
  store i8 %52, i8* %51, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br label %53

53:                                               ; preds = %9, %47, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TokenPreloadScanner15StartTagScanner22ProcessSourceAttributeIN3WTF6StringEEEvRKT_RKS4_(%"class.blink::TokenPreloadScanner::StartTagScanner"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::ImageCandidate", align 8
  %5 = alloca %"class.blink::ImageCandidate", align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %7 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %6) #10
  br i1 %7, label %8, label %102

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %102

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #10
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %13
  %36 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %37 = bitcast %"class.WTF::String"* %14 to i64*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %35, %50, %53
  %55 = bitcast %"class.blink::ImageCandidate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %55) #10
  %56 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %57 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %56, align 8
  %58 = tail call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %57) #10
  %59 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %60 = load float, float* %59, align 4
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %4, float %58, float %60, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Document"* null) #10
  %61 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %64 = bitcast %"class.blink::ImageCandidate"* %9 to i64*
  %65 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %54
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #10
  br label %81

81:                                               ; preds = %54, %77, %80
  %82 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %83 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %84 = bitcast %"class.WTF::StringView"* %82 to i8*
  %85 = bitcast %"class.WTF::StringView"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 36, i1 false) #10
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %81, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %55) #10
  br label %185

102:                                              ; preds = %8, %3
  %103 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %104 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %103) #10
  br i1 %104, label %105, label %163

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 20
  %107 = load i8, i8* %106, align 8, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %163

109:                                              ; preds = %105
  tail call void @_ZN5blink19TokenPreloadScanner15StartTagScanner15ParseSourceSizeERKN3WTF6StringE(%"class.blink::TokenPreloadScanner::StartTagScanner"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  %110 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %185, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.blink::ImageCandidate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %115) #10
  %116 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %117 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %116, align 8
  %118 = tail call float @_ZNK5blink17MediaValuesCached16DevicePixelRatioEv(%"class.blink::MediaValuesCached"* %117) #10
  %119 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 19
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 12
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %5, float %118, float %120, %"class.WTF::String"* dereferenceable(8) %121, %"class.blink::Document"* null) #10
  %122 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.blink::ImageCandidate"* %5 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %122, align 8
  %125 = bitcast %"class.blink::ImageCandidate"* %110 to i64*
  %126 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %110, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #10
  br label %142

142:                                              ; preds = %114, %138, %141
  %143 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 2, i32 1
  %144 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 1
  %145 = bitcast %"class.WTF::StringView"* %143 to i8*
  %146 = bitcast %"class.WTF::StringView"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 36, i1 false) #10
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #10
  br label %162

162:                                              ; preds = %142, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %115) #10
  br label %185

163:                                              ; preds = %105, %102
  %164 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %165 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %164) #10
  br i1 %165, label %166, label %174

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 26
  %168 = load %"class.blink::MediaValuesCached"*, %"class.blink::MediaValuesCached"** %167, align 8
  %169 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121MediaAttributeMatchesERKNS_17MediaValuesCachedERKN3WTF6StringE(%"class.blink::MediaValuesCached"* dereferenceable(120) %168, %"class.WTF::String"* dereferenceable(8) %2)
  %170 = zext i1 %169 to i8
  %171 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %172 = load i8, i8* %171, align 1, !range !4
  %173 = and i8 %172, %170
  store i8 %173, i8* %171, align 1
  br label %185

174:                                              ; preds = %163
  %175 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %176 = tail call zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %175) #10
  br i1 %176, label %177, label %185

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 40
  %179 = load %"class.WTF::HashSet.222"*, %"class.WTF::HashSet.222"** %178, align 8
  %180 = tail call zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::HashSet.222"* %179) #10
  %181 = zext i1 %180 to i8
  %182 = getelementptr inbounds %"class.blink::TokenPreloadScanner::StartTagScanner", %"class.blink::TokenPreloadScanner::StartTagScanner"* %0, i64 0, i32 9
  %183 = load i8, i8* %182, align 1, !range !4
  %184 = and i8 %183, %181
  store i8 %184, i8* %182, align 1
  br label %185

185:                                              ; preds = %162, %109, %174, %177, %166, %101
  ret void
}

declare zeroext i1 @_ZN5blink15ThreadSafeMatchERKN3WTF6StringERKNS_13QualifiedNameE(%"class.WTF::String"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"* dereferenceable(2)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink27AttemptStaticStringCreationEPKDsjNS_14CharacterWidthE(i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LazyLoadImageObserver"**
  %4 = load %"class.blink::LazyLoadImageObserver"*, %"class.blink::LazyLoadImageObserver"** %3, align 8
  %5 = icmp eq %"class.blink::LazyLoadImageObserver"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::LazyLoadImageObserver", %"class.blink::LazyLoadImageObserver"* %4, i64 -1, i32 2
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::LazyLoadImageObserver"* null, %"class.blink::LazyLoadImageObserver"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::LazyLoadImageObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::LazyLoadImageObserver"* %1, %"class.blink::LazyLoadImageObserver"** %3, align 8
  %4 = ptrtoint %"class.blink::LazyLoadImageObserver"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #10
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #10
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21LazyLoadImageObserverELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #10
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #10
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.212"*, %"class.blink::SubresourceRedirectOriginsPreloader"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.212", %"class.blink::PersistentBase.212"* %0, i64 0, i32 0
  store %"class.blink::SubresourceRedirectOriginsPreloader"* %1, %"class.blink::SubresourceRedirectOriginsPreloader"** %3, align 8
  %4 = ptrtoint %"class.blink::SubresourceRedirectOriginsPreloader"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.212", %"class.blink::PersistentBase.212"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.212"* %0) #10
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.212", %"class.blink::PersistentBase.212"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.212"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.212"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !2

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #10
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.212"**
  store %"class.blink::PersistentBase.212"* %0, %"class.blink::PersistentBase.212"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.212", %"class.blink::PersistentBase.212"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_35SubresourceRedirectOriginsPreloaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SubresourceRedirectOriginsPreloader"**
  %4 = load %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::SubresourceRedirectOriginsPreloader"** %3, align 8
  %5 = icmp eq %"class.blink::SubresourceRedirectOriginsPreloader"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SubresourceRedirectOriginsPreloader", %"class.blink::SubresourceRedirectOriginsPreloader"* %4, i64 -1, i32 1, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::SubresourceRedirectOriginsPreloader"* null, %"class.blink::SubresourceRedirectOriginsPreloader"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink12ViewportData23ViewportDefaultMinWidthEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink12ViewportData23ViewportDefaultMinWidthEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
