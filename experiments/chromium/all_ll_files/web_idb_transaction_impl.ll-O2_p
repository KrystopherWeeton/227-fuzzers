; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/web_idb_transaction_impl.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/web_idb_transaction_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebIDBTransactionImpl" = type { %"class.blink::WebIDBTransaction", i64, %"class.mojo::AssociatedRemote", %class.scoped_refptr.6, i64 }
%"class.blink::WebIDBTransaction" = type { i32 (...)** }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.62" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr", i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional", %"class.absl::optional.1", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.22", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.48", i64, %"class.base::OnceCallback.15", %"class.base::OnceCallback.57", i8, %class.scoped_refptr.6, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.58" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.15" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.6, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.9", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.68", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.6, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.69", [4 x i8] }>
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.25", %class.scoped_refptr.26 }
%"class.base::RepeatingCallback.25" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.26 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.27", [4 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.41" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.41" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::OnceCallback.15" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.57" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.15" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.58" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::mojom::blink::IDBTransactionProxy"* }
%"class.blink::mojom::blink::IDBTransactionProxy" = type { %"class.blink::mojom::blink::IDBTransaction", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::IDBTransaction" = type { i32 (...)** }
%class.scoped_refptr.6 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7", [4 x i8] }>
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.69" }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::IDBValue" = type { %class.scoped_refptr.78, %"class.WTF::Vector.90", %"class.WTF::Vector.95", %"class.std::__1::unique_ptr.100", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%class.scoped_refptr.78 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.79", %"class.WTF::Vector.84" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { i8*, i32, i32 }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.std::__1::unique_ptr.87"*, i32, i32 }
%"class.std::__1::unique_ptr.87" = type opaque
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type opaque
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::IDBKey"* }
%"class.v8::Isolate" = type { i8 }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.103", %class.scoped_refptr.78, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.103" = type { %"class.WTF::VectorBuffer.104" }
%"class.WTF::VectorBuffer.104" = type { %"class.WTF::VectorBufferBase.105" }
%"class.WTF::VectorBufferBase.105" = type { %"class.std::__1::unique_ptr.100"*, i32, i32 }
%"class.blink::WebIDBCallbacks" = type { %"class.blink::mojom::blink::IDBCallbacks" }
%"class.blink::mojom::blink::IDBCallbacks" = type { i32 (...)** }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"struct.blink::IDBIndexKeys"*, i32, i32 }
%"struct.blink::IDBIndexKeys" = type { i64, %"class.WTF::Vector.103" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.126" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebIDBCursorImpl" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::mojom::blink::IDBTransactionPutResult"* }
%"class.blink::mojom::blink::IDBTransactionPutResult" = type { i32, %"union.blink::mojom::blink::IDBTransactionPutResult::Union_" }
%"union.blink::mojom::blink::IDBTransactionPutResult::Union_" = type { %"class.mojo::StructPtr.130"* }
%"class.mojo::StructPtr.130" = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::mojom::blink::IDBError"* }
%"class.blink::mojom::blink::IDBError" = type { i32, %"class.WTF::String" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.mojo::StructPtr.143"*, i32, i32 }
%"class.mojo::StructPtr.143" = type { %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::mojom::blink::IDBPutParams"* }
%"class.blink::mojom::blink::IDBPutParams" = type { %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.100", %"class.WTF::Vector.120" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::IDBValue"* }
%"class.base::OnceCallback.152" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.153" = type { %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::mojom::blink::IDBTransactionPutAllResult"* }
%"class.blink::mojom::blink::IDBTransactionPutAllResult" = type { i32, %"union.blink::mojom::blink::IDBTransactionPutAllResult::Union_" }
%"union.blink::mojom::blink::IDBTransactionPutAllResult::Union_" = type { %"class.mojo::StructPtr.130"* }
%"class.mojo::AssociatedInterfacePtrInfo" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink6IDBKey11CreateArrayEN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14IDBTransactionEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ = comdat any

$_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ = comdat any

$_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5blink21WebIDBTransactionImplE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*)* @_ZN5blink21WebIDBTransactionImplD2Ev to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*)* @_ZN5blink21WebIDBTransactionImplD0Ev to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)* @_ZN5blink21WebIDBTransactionImpl17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*, i64)* @_ZN5blink21WebIDBTransactionImpl17DeleteObjectStoreEl to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.blink::WebIDBCallbacks"*, %"class.WTF::Vector.120"*)* @_ZN5blink21WebIDBTransactionImpl3PutElNSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEENS2_INS_6IDBKeyENS4_IS7_EEEENS_5mojom10IDBPutModeENS2_INS_15WebIDBCallbacksENS4_ISC_EEEEN3WTF6VectorINS_12IDBIndexKeysELj0ENSF_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*, i64, %"class.WTF::Vector.140"*, %"class.blink::WebIDBCallbacks"*)* @_ZN5blink21WebIDBTransactionImpl6PutAllElN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink12IDBPutParamsEEELj0ENS1_18PartitionAllocatorEEENSt3__110unique_ptrINS_15WebIDBCallbacksENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.blink::WebIDBTransactionImpl"*, i64)* @_ZN5blink21WebIDBTransactionImpl6CommitEl to i8*), i8* bitcast (void (%"class.mojo::PendingAssociatedReceiver"*, %"class.blink::WebIDBTransactionImpl"*)* @_ZN5blink21WebIDBTransactionImpl14CreateReceiverEv to i8*)] }, align 8
@.str = private unnamed_addr constant [80 x i8] c"The serialized keys and/or value are too large (size=%zu bytes, max=%zu bytes).\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"The serialized keys and/or values are too large (size=%zu bytes, max=%zu bytes).\00", align 1
@_ZN5blink5mojom5blink14IDBTransaction5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink31IDBTransactionResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN5blink21WebIDBTransactionImplC1E13scoped_refptrIN4base19SequencedTaskRunnerEEl = hidden unnamed_addr alias void (%"class.blink::WebIDBTransactionImpl"*, %"class.base::SequencedTaskRunner"*, i64), void (%"class.blink::WebIDBTransactionImpl"*, %"class.base::SequencedTaskRunner"*, i64)* @_ZN5blink21WebIDBTransactionImplC2E13scoped_refptrIN4base19SequencedTaskRunnerEEl
@_ZN5blink21WebIDBTransactionImplD1Ev = hidden unnamed_addr alias void (%"class.blink::WebIDBTransactionImpl"*), void (%"class.blink::WebIDBTransactionImpl"*)* @_ZN5blink21WebIDBTransactionImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImplC2E13scoped_refptrIN4base19SequencedTaskRunnerEEl(%"class.blink::WebIDBTransactionImpl"*, %"class.base::SequencedTaskRunner"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink21WebIDBTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 1
  store i64 133169152, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2
  %7 = bitcast %"class.mojo::AssociatedRemote"* %6 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %7) #9
  %8 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.62"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 3, i32 0
  store %"class.base::SequencedTaskRunner"* %1, %"class.base::SequencedTaskRunner"** %10, align 8
  %11 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 4
  store i64 %2, i64* %13, align 8
  br label %25

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 4
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.7"* %23 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %24) #9
  br label %25

25:                                               ; preds = %12, %14, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImplD2Ev(%"class.blink::WebIDBTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink21WebIDBTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.7"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %16, align 8
  store %"class.blink::mojom::blink::IDBTransactionProxy"* null, %"class.blink::mojom::blink::IDBTransactionProxy"** %16, align 8
  %18 = icmp eq %"class.blink::mojom::blink::IDBTransactionProxy"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::mojom::blink::IDBTransactionProxy"* %17 to void (%"class.blink::mojom::blink::IDBTransactionProxy"*)***
  %21 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)**, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %21, i64 1
  %23 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %22, align 8
  tail call void %23(%"class.blink::mojom::blink::IDBTransactionProxy"* nonnull %17) #9
  br label %24

24:                                               ; preds = %14, %19
  %25 = bitcast %"class.mojo::AssociatedRemote"* %15 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %25) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImplD0Ev(%"class.blink::WebIDBTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink21WebIDBTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.7"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %11, %6, %1
  %15 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %16, align 8
  store %"class.blink::mojom::blink::IDBTransactionProxy"* null, %"class.blink::mojom::blink::IDBTransactionProxy"** %16, align 8
  %18 = icmp eq %"class.blink::mojom::blink::IDBTransactionProxy"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::mojom::blink::IDBTransactionProxy"* %17 to void (%"class.blink::mojom::blink::IDBTransactionProxy"*)***
  %21 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)**, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %21, i64 1
  %23 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %22, align 8
  tail call void %23(%"class.blink::mojom::blink::IDBTransactionProxy"* nonnull %17) #9
  br label %24

24:                                               ; preds = %14, %19
  %25 = bitcast %"class.mojo::AssociatedRemote"* %15 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %25) #9
  %26 = bitcast %"class.blink::WebIDBTransactionImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl14CreateReceiverEv(%"class.mojo::PendingAssociatedReceiver"* noalias sret, %"class.blink::WebIDBTransactionImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %1, i64 0, i32 3, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  tail call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingAssociatedReceiver"* sret %0, %"class.mojo::AssociatedRemote"* %3, %"class.base::SequencedTaskRunner"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE30BindNewEndpointAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingAssociatedReceiver"* noalias sret, %"class.mojo::AssociatedRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %6 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %7 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %8 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %9 = bitcast %"class.mojo::ScopedInterfaceEndpointHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.mojo::ScopedInterfaceEndpointHandle", %"class.mojo::ScopedInterfaceEndpointHandle"* %4, i64 0, i32 0, i32 0
  store %"class.mojo::ScopedInterfaceEndpointHandle::State"* inttoptr (i64 -6148914691236517206 to %"class.mojo::ScopedInterfaceEndpointHandle::State"*), %"class.mojo::ScopedInterfaceEndpointHandle::State"** %10, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #9
  %11 = bitcast %"class.mojo::ScopedInterfaceEndpointHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.mojo::ScopedInterfaceEndpointHandle", %"class.mojo::ScopedInterfaceEndpointHandle"* %5, i64 0, i32 0, i32 0
  store %"class.mojo::ScopedInterfaceEndpointHandle::State"* inttoptr (i64 -6148914691236517206 to %"class.mojo::ScopedInterfaceEndpointHandle::State"*), %"class.mojo::ScopedInterfaceEndpointHandle::State"** %12, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandle28CreatePairPendingAssociationEPS0_S1_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %4) #9
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %7) #9
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 1
  store i32 0, i32* %14, align 8
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote"* %1, %"class.mojo::PendingAssociatedRemote"* nonnull %6, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %13) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %8, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %5) #9
  %15 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %15, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %8) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %8) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb(%"class.blink::WebIDBTransactionImpl"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %6, align 8
  tail call void @_ZN5blink5mojom5blink19IDBTransactionProxy17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb(%"class.blink::mojom::blink::IDBTransactionProxy"* %7, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::IDBKeyPath"* dereferenceable(32) %3, i1 zeroext %4) #9
  ret void
}

declare void @_ZN5blink5mojom5blink19IDBTransactionProxy17CreateObjectStoreElRKN3WTF6StringERKNS_10IDBKeyPathEb(%"class.blink::mojom::blink::IDBTransactionProxy"*, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl17DeleteObjectStoreEl(%"class.blink::WebIDBTransactionImpl"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink19IDBTransactionProxy17DeleteObjectStoreEl(%"class.blink::mojom::blink::IDBTransactionProxy"* %4, i64 %1) #9
  ret void
}

declare void @_ZN5blink5mojom5blink19IDBTransactionProxy17DeleteObjectStoreEl(%"class.blink::mojom::blink::IDBTransactionProxy"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl3PutElNSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEENS2_INS_6IDBKeyENS4_IS7_EEEENS_5mojom10IDBPutModeENS2_INS_15WebIDBCallbacksENS4_ISC_EEEEN3WTF6VectorINS_12IDBIndexKeysELj0ENSF_18PartitionAllocatorEEE(%"class.blink::WebIDBTransactionImpl"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.blink::WebIDBCallbacks"*, %"class.WTF::Vector.120"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = alloca %"class.WTF::Vector.120", align 8
  %11 = alloca %"class.base::OnceCallback.126", align 8
  %12 = ptrtoint %"class.blink::WebIDBCallbacks"* %5 to i64
  %13 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN5blink19IndexedDBDispatcher25ResetCursorPrefetchCachesElPNS_16WebIDBCursorImplE(i64 %14, %"class.blink::WebIDBCursorImpl"* null) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %6, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %22, label %39

22:                                               ; preds = %74, %7
  %23 = phi i64 [ 0, %7 ], [ %75, %74 ]
  %24 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %24, align 8
  %26 = icmp eq %"class.WTF::SharedBuffer"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi i64 [ %29, %27 ], [ 0, %22 ]
  %32 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %3, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %31, %23
  %35 = add i64 %34, %33
  %36 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %147, label %123

39:                                               ; preds = %7, %74
  %40 = phi i64 [ %75, %74 ], [ 0, %7 ]
  %41 = phi %"struct.blink::IDBIndexKeys"* [ %76, %74 ], [ %16, %7 ]
  %42 = add i64 %40, 1
  %43 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %41, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %41, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %44, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %39
  %51 = shl nuw nsw i64 %47, 3
  %52 = add nsw i64 %51, -8
  %53 = lshr exact i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %50, %57
  %58 = phi i64 [ %65, %57 ], [ %42, %50 ]
  %59 = phi %"class.std::__1::unique_ptr.100"* [ %66, %57 ], [ %44, %50 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %62, i64 0, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %59, i64 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !2

69:                                               ; preds = %57, %50
  %70 = phi i64 [ undef, %50 ], [ %65, %57 ]
  %71 = phi i64 [ %42, %50 ], [ %65, %57 ]
  %72 = phi %"class.std::__1::unique_ptr.100"* [ %44, %50 ], [ %66, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %74, label %78

74:                                               ; preds = %69, %78, %39
  %75 = phi i64 [ %42, %39 ], [ %70, %69 ], [ %120, %78 ]
  %76 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %41, i64 1
  %77 = icmp eq %"struct.blink::IDBIndexKeys"* %76, %20
  br i1 %77, label %22, label %39

78:                                               ; preds = %69, %78
  %79 = phi i64 [ %120, %78 ], [ %71, %69 ]
  %80 = phi %"class.std::__1::unique_ptr.100"* [ %121, %78 ], [ %72, %69 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %82, i64 0, i32 5
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, %79
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 1, i32 0, i32 0, i32 0
  %87 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %87, i64 0, i32 5
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, %85
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 2, i32 0, i32 0, i32 0
  %92 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %92, i64 0, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, %90
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 3, i32 0, i32 0, i32 0
  %97 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %97, i64 0, i32 5
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, %95
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 4, i32 0, i32 0, i32 0
  %102 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %102, i64 0, i32 5
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %100
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 5, i32 0, i32 0, i32 0
  %107 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %107, i64 0, i32 5
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, %105
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 6, i32 0, i32 0, i32 0
  %112 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %112, i64 0, i32 5
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, %110
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 7, i32 0, i32 0, i32 0
  %117 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %117, i64 0, i32 5
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, %115
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %80, i64 8
  %122 = icmp eq %"class.std::__1::unique_ptr.100"* %121, %48
  br i1 %122, label %74, label %78

123:                                              ; preds = %30
  %124 = getelementptr inbounds %"class.blink::WebIDBCallbacks", %"class.blink::WebIDBCallbacks"* %5, i64 0, i32 0
  %125 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #9
  %126 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i64 %35, i64 %37) #9
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %127, align 8
  %128 = bitcast %"class.blink::WebIDBCallbacks"* %5 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)***
  %129 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %129, i64 2
  %131 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %130, align 8
  call void %131(%"class.blink::mojom::blink::IDBCallbacks"* %124, i32 28, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %223, label %134

134:                                              ; preds = %123
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %223

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #9
  br label %223

147:                                              ; preds = %30
  %148 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %148) #9
  %149 = load i64, i64* %13, align 8
  %150 = bitcast %"class.blink::WebIDBCallbacks"* %5 to void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)***
  %151 = load void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)**, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)** %151, i64 11
  %153 = load void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)** %152, align 8
  call void %153(%"class.blink::WebIDBCallbacks"* %5, %"class.base::WeakPtr"* nonnull %9, i64 %149) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %148) #9
  %154 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %154, align 8
  %156 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %10, i64 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %10, i64 0, i32 0, i32 0, i32 2
  %158 = bitcast %"class.WTF::Vector.120"* %6 to i64*
  %159 = bitcast %"class.WTF::Vector.120"* %10 to i64*
  store i64 0, i64* %159, align 8
  %160 = load i64, i64* %158, align 8
  %161 = bitcast %"class.WTF::Vector.120"* %10 to i64*
  store atomic i64 0, i64* %158 monotonic, align 8
  store atomic i64 %160, i64* %161 monotonic, align 8
  %162 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %6, i64 0, i32 0, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %156, align 8
  store i32 0, i32* %162, align 4
  %164 = load i32, i32* %17, align 4
  store i32 %164, i32* %157, align 4
  store i32 0, i32* %17, align 4
  %165 = ptrtoint %"class.blink::WebIDBTransactionImpl"* %0 to i64
  %166 = call i8* @_Znwm(i64 64) #10, !noalias !4
  %167 = bitcast i8* %166 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %167, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !4
  %168 = getelementptr inbounds i8, i8* %166, i64 32
  %169 = bitcast i8* %168 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)* @_ZN5blink21WebIDBTransactionImpl11PutCallbackENSt3__110unique_ptrINS_15WebIDBCallbacksENS1_14default_deleteIS3_EEEEN4mojo9StructPtrINS_5mojom5blink23IDBTransactionPutResultEEE to i64), i64 0>, <2 x i64>* %169, align 8, !noalias !4
  %170 = getelementptr inbounds i8, i8* %166, i64 48
  %171 = bitcast i8* %170 to i64*
  store i64 %165, i64* %171, align 8, !noalias !4
  %172 = getelementptr inbounds i8, i8* %166, i64 56
  %173 = bitcast i8* %172 to i64*
  store i64 %12, i64* %173, align 8, !noalias !4
  %174 = bitcast %"class.base::OnceCallback.126"* %11 to i8**
  store i8* %166, i8** %174, align 8, !alias.scope !4
  call void @_ZN5blink5mojom5blink19IDBTransactionProxy3PutElNSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEENS4_INS_6IDBKeyENS6_IS9_EEEENS0_10IDBPutModeEN3WTF6VectorINS_12IDBIndexKeysELj0ENSD_18PartitionAllocatorEEEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_23IDBTransactionPutResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionProxy"* %155, i64 %1, %"class.blink::IDBValue"* %2, %"class.blink::IDBKey"* %3, i32 %4, %"class.WTF::Vector.120"* nonnull %10, %"class.base::OnceCallback.126"* nonnull %11) #9
  %175 = getelementptr inbounds %"class.base::OnceCallback.126", %"class.base::OnceCallback.126"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %175) #9
  %176 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %10, i64 0, i32 0, i32 0, i32 0
  %177 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %176, align 8
  %178 = icmp eq %"struct.blink::IDBIndexKeys"* %177, null
  br i1 %178, label %238, label %179, !prof !11

179:                                              ; preds = %147
  %180 = bitcast %"struct.blink::IDBIndexKeys"* %177 to i8*
  %181 = load i32, i32* %157, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %221, label %183, !prof !12

183:                                              ; preds = %179
  %184 = zext i32 %181 to i64
  %185 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %177, i64 %184
  br label %186

186:                                              ; preds = %215, %183
  %187 = phi %"struct.blink::IDBIndexKeys"* [ %216, %215 ], [ %177, %183 ]
  %188 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %187, i64 0, i32 1
  %189 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %189, align 8
  %191 = icmp eq %"class.std::__1::unique_ptr.100"* %190, null
  br i1 %191, label %215, label %192, !prof !11

192:                                              ; preds = %186
  %193 = bitcast %"class.std::__1::unique_ptr.100"* %190 to i8*
  %194 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %187, i64 0, i32 1, i32 0, i32 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %213, label %197, !prof !12

197:                                              ; preds = %192
  %198 = zext i32 %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %190, i64 %198
  br label %200

200:                                              ; preds = %207, %197
  %201 = phi %"class.std::__1::unique_ptr.100"* [ %208, %207 ], [ %190, %197 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %201, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %202, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %202, align 8
  %204 = icmp eq %"class.blink::IDBKey"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %200
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %203) #9
  %206 = bitcast %"class.blink::IDBKey"* %203 to i8*
  call void @free(i8* %206) #9
  br label %207

207:                                              ; preds = %205, %200
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %201, i64 1
  %209 = icmp eq %"class.std::__1::unique_ptr.100"* %208, %199
  br i1 %209, label %210, label %200

210:                                              ; preds = %207
  store i32 0, i32* %194, align 4
  %211 = bitcast %"class.WTF::Vector.103"* %188 to i8**
  %212 = load i8*, i8** %211, align 8
  br label %213

213:                                              ; preds = %210, %192
  %214 = phi i8* [ %212, %210 ], [ %193, %192 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %214) #9
  store %"class.std::__1::unique_ptr.100"* null, %"class.std::__1::unique_ptr.100"** %189, align 8
  br label %215

215:                                              ; preds = %213, %186
  %216 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %187, i64 1
  %217 = icmp eq %"struct.blink::IDBIndexKeys"* %216, %185
  br i1 %217, label %218, label %186

218:                                              ; preds = %215
  store i32 0, i32* %157, align 4
  %219 = bitcast %"class.WTF::Vector.120"* %10 to i8**
  %220 = load i8*, i8** %219, align 8
  br label %221

221:                                              ; preds = %218, %179
  %222 = phi i8* [ %220, %218 ], [ %180, %179 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %222) #9
  store %"struct.blink::IDBIndexKeys"* null, %"struct.blink::IDBIndexKeys"** %176, align 8
  br label %238

223:                                              ; preds = %146, %143, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  %224 = icmp eq %"class.blink::WebIDBCallbacks"* %5, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %223
  %226 = bitcast %"class.blink::WebIDBCallbacks"* %5 to void (%"class.blink::WebIDBCallbacks"*)***
  %227 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %226, align 8
  %228 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %227, i64 1
  %229 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %228, align 8
  call void %229(%"class.blink::WebIDBCallbacks"* nonnull %5) #9
  br label %230

230:                                              ; preds = %223, %225
  %231 = icmp eq %"class.blink::IDBKey"* %3, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %230
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %3) #9
  %233 = bitcast %"class.blink::IDBKey"* %3 to i8*
  call void @free(i8* %233) #9
  br label %234

234:                                              ; preds = %230, %232
  %235 = icmp eq %"class.blink::IDBValue"* %2, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %234
  call void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"* nonnull %2) #9
  %237 = bitcast %"class.blink::IDBValue"* %2 to i8*
  call void @_ZdlPv(i8* %237) #10
  br label %238

238:                                              ; preds = %221, %147, %234, %236
  ret void
}

declare void @_ZN5blink19IndexedDBDispatcher25ResetCursorPrefetchCachesElPNS_16WebIDBCursorImplE(i64, %"class.blink::WebIDBCursorImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare void @_ZN5blink5mojom5blink19IDBTransactionProxy3PutElNSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEENS4_INS_6IDBKeyENS6_IS9_EEEENS0_10IDBPutModeEN3WTF6VectorINS_12IDBIndexKeysELj0ENSD_18PartitionAllocatorEEEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_23IDBTransactionPutResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionProxy"*, i64, %"class.blink::IDBValue"*, %"class.blink::IDBKey"*, i32, %"class.WTF::Vector.120"*, %"class.base::OnceCallback.126"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl11PutCallbackENSt3__110unique_ptrINS_15WebIDBCallbacksENS1_14default_deleteIS3_EEEEN4mojo9StructPtrINS_5mojom5blink23IDBTransactionPutResultEEE(%"class.blink::WebIDBTransactionImpl"* nocapture readnone, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"* nocapture readonly) #0 align 2 {
  %4 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::blink::IDBTransactionPutResult"*, %"class.blink::mojom::blink::IDBTransactionPutResult"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutResult", %"class.blink::mojom::blink::IDBTransactionPutResult"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %43 [
    i32 0, label %8
    i32 1, label %27
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WebIDBCallbacks", %"class.blink::WebIDBCallbacks"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutResult", %"class.blink::mojom::blink::IDBTransactionPutResult"* %5, i64 0, i32 1, i32 0
  %11 = load %"class.mojo::StructPtr.130"*, %"class.mojo::StructPtr.130"** %10, align 8
  %12 = getelementptr inbounds %"class.mojo::StructPtr.130", %"class.mojo::StructPtr.130"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::mojom::blink::IDBError"*, %"class.blink::mojom::blink::IDBError"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::blink::IDBError", %"class.blink::mojom::blink::IDBError"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::mojom::blink::IDBError", %"class.blink::mojom::blink::IDBError"* %13, i64 0, i32 1
  %17 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)***
  %18 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %18, i64 2
  %20 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %19, align 8
  tail call void %20(%"class.blink::mojom::blink::IDBCallbacks"* %9, i32 %15, %"class.WTF::String"* dereferenceable(8) %16) #9
  %21 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %24 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %24, i64 1
  %26 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %25, align 8
  tail call void %26(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %50

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutResult", %"class.blink::mojom::blink::IDBTransactionPutResult"* %5, i64 0, i32 1
  %29 = bitcast %"union.blink::mojom::blink::IDBTransactionPutResult::Union_"* %28 to %"class.std::__1::unique_ptr.100"**
  %30 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %31, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %31, align 8
  %33 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)***
  %34 = load void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)**, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)** %34, i64 16
  %36 = load void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)** %35, align 8
  tail call void %36(%"class.blink::WebIDBCallbacks"* %1, %"class.blink::IDBKey"* %32) #9
  %37 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %40 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %40, i64 1
  %42 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %41, align 8
  tail call void %42(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %50

43:                                               ; preds = %3
  %44 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %47 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %47, i64 1
  %49 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %48, align 8
  tail call void %49(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %50

50:                                               ; preds = %38, %27, %22, %8, %43, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl6PutAllElN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink12IDBPutParamsEEELj0ENS1_18PartitionAllocatorEEENSt3__110unique_ptrINS_15WebIDBCallbacksENSB_14default_deleteISD_EEEE(%"class.blink::WebIDBTransactionImpl"*, i64, %"class.WTF::Vector.140"* nocapture, %"class.blink::WebIDBCallbacks"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.WTF::Vector.140", align 8
  %8 = alloca %"class.base::OnceCallback.152", align 8
  %9 = ptrtoint %"class.blink::WebIDBCallbacks"* %3 to i64
  %10 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  tail call void @_ZN5blink19IndexedDBDispatcher25ResetCursorPrefetchCachesElPNS_16WebIDBCursorImplE(i64 %11, %"class.blink::WebIDBCursorImpl"* null) #9
  %12 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.mojo::StructPtr.143"*, %"class.mojo::StructPtr.143"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %2, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %122, label %20

19:                                               ; preds = %47
  br i1 %18, label %115, label %133

20:                                               ; preds = %4, %47
  %21 = phi %"class.mojo::StructPtr.143"* [ %50, %47 ], [ %13, %4 ]
  %22 = phi i64 [ %49, %47 ], [ 0, %4 ]
  %23 = phi i8 [ %48, %47 ], [ 1, %4 ]
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = zext i64 %22 to i65
  %27 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %26, i65 1) #9
  %28 = extractvalue { i65, i1 } %27, 1
  %29 = extractvalue { i65, i1 } %27, 0
  %30 = trunc i65 %29 to i64
  %31 = icmp slt i65 %29, 0
  %32 = or i1 %28, %31
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i8
  br label %35

35:                                               ; preds = %20, %25
  %36 = phi i64 [ %30, %25 ], [ 0, %20 ]
  %37 = phi i8 [ %34, %25 ], [ 0, %20 ]
  %38 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::mojom::blink::IDBPutParams"*, %"class.blink::mojom::blink::IDBPutParams"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::mojom::blink::IDBPutParams", %"class.blink::mojom::blink::IDBPutParams"* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"struct.blink::IDBIndexKeys"*, %"struct.blink::IDBIndexKeys"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::mojom::blink::IDBPutParams", %"class.blink::mojom::blink::IDBPutParams"* %39, i64 0, i32 2, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %91, %35
  %48 = phi i8 [ %37, %35 ], [ %92, %91 ]
  %49 = phi i64 [ %36, %35 ], [ %93, %91 ]
  %50 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %21, i64 1
  %51 = icmp eq %"class.mojo::StructPtr.143"* %50, %17
  br i1 %51, label %19, label %20

52:                                               ; preds = %35, %91
  %53 = phi %"struct.blink::IDBIndexKeys"* [ %94, %91 ], [ %41, %35 ]
  %54 = phi i64 [ %93, %91 ], [ %36, %35 ]
  %55 = phi i8 [ %92, %91 ], [ %37, %35 ]
  %56 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %53, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %56, align 8
  %58 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %53, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %57, i64 %60
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %91, label %63

63:                                               ; preds = %52
  %64 = shl nuw nsw i64 %60, 3
  %65 = add nsw i64 %64, -8
  %66 = and i64 %65, 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %84

68:                                               ; preds = %63
  %69 = icmp eq i8 %55, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %57, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %72, i64 0, i32 5
  %74 = load i64, i64* %73, align 8
  %75 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %54, i64 %74) #9
  %76 = extractvalue { i64, i1 } %75, 1
  %77 = extractvalue { i64, i1 } %75, 0
  %78 = xor i1 %76, true
  %79 = zext i1 %78 to i8
  br label %80

80:                                               ; preds = %70, %68
  %81 = phi i64 [ %77, %70 ], [ 0, %68 ]
  %82 = phi i8 [ %79, %70 ], [ 0, %68 ]
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %57, i64 1
  br label %84

84:                                               ; preds = %80, %63
  %85 = phi i64 [ %81, %80 ], [ undef, %63 ]
  %86 = phi i8 [ %82, %80 ], [ undef, %63 ]
  %87 = phi %"class.std::__1::unique_ptr.100"* [ %83, %80 ], [ %57, %63 ]
  %88 = phi i64 [ %81, %80 ], [ %54, %63 ]
  %89 = phi i8 [ %82, %80 ], [ %55, %63 ]
  %90 = icmp eq i64 %65, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %84, %265, %52
  %92 = phi i8 [ %55, %52 ], [ %86, %84 ], [ %267, %265 ]
  %93 = phi i64 [ %54, %52 ], [ %85, %84 ], [ %266, %265 ]
  %94 = getelementptr inbounds %"struct.blink::IDBIndexKeys", %"struct.blink::IDBIndexKeys"* %53, i64 1
  %95 = icmp eq %"struct.blink::IDBIndexKeys"* %94, %45
  br i1 %95, label %47, label %52

96:                                               ; preds = %84, %265
  %97 = phi %"class.std::__1::unique_ptr.100"* [ %268, %265 ], [ %87, %84 ]
  %98 = phi i64 [ %266, %265 ], [ %88, %84 ]
  %99 = phi i8 [ %267, %265 ], [ %89, %84 ]
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %111, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %97, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %103, i64 0, i32 5
  %105 = load i64, i64* %104, align 8
  %106 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %98, i64 %105) #9
  %107 = extractvalue { i64, i1 } %106, 1
  %108 = extractvalue { i64, i1 } %106, 0
  %109 = xor i1 %107, true
  %110 = zext i1 %109 to i8
  br label %111

111:                                              ; preds = %96, %101
  %112 = phi i64 [ %108, %101 ], [ 0, %96 ]
  %113 = phi i8 [ %110, %101 ], [ 0, %96 ]
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %265, label %255

115:                                              ; preds = %164, %19
  %116 = phi i64 [ 0, %19 ], [ %165, %164 ]
  %117 = phi i8 [ 1, %19 ], [ %166, %164 ]
  %118 = icmp eq i8 %48, 0
  br i1 %118, label %119, label %120, !prof !12

119:                                              ; preds = %115
  tail call void @llvm.trap() #9
  unreachable

120:                                              ; preds = %115
  %121 = icmp eq i8 %117, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %4, %120
  %123 = phi i64 [ %49, %120 ], [ 0, %4 ]
  %124 = phi i64 [ %116, %120 ], [ 0, %4 ]
  %125 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %124, i64 %123) #9
  %126 = extractvalue { i64, i1 } %125, 1
  %127 = extractvalue { i64, i1 } %125, 0
  br i1 %126, label %128, label %129, !prof !12

128:                                              ; preds = %120, %122
  tail call void @llvm.trap() #9
  unreachable

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = icmp ult i64 %127, %131
  br i1 %132, label %193, label %169

133:                                              ; preds = %19, %164
  %134 = phi %"class.mojo::StructPtr.143"* [ %167, %164 ], [ %13, %19 ]
  %135 = phi i8 [ %166, %164 ], [ 1, %19 ]
  %136 = phi i64 [ %165, %164 ], [ 0, %19 ]
  %137 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::mojom::blink::IDBPutParams"*, %"class.blink::mojom::blink::IDBPutParams"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::mojom::blink::IDBPutParams", %"class.blink::mojom::blink::IDBPutParams"* %138, i64 0, i32 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::IDBValue"*, %"class.blink::IDBValue"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %141, align 8
  %143 = icmp eq %"class.WTF::SharedBuffer"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %142, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  br label %147

147:                                              ; preds = %133, %144
  %148 = phi i64 [ %146, %144 ], [ 0, %133 ]
  %149 = icmp eq i8 %135, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %147
  %151 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %136, i64 %148) #9
  %152 = extractvalue { i64, i1 } %151, 1
  br i1 %152, label %164, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.blink::mojom::blink::IDBPutParams", %"class.blink::mojom::blink::IDBPutParams"* %138, i64 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %155, i64 0, i32 5
  %157 = load i64, i64* %156, align 8
  %158 = extractvalue { i64, i1 } %151, 0
  %159 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %158, i64 %157) #9
  %160 = extractvalue { i64, i1 } %159, 1
  %161 = extractvalue { i64, i1 } %159, 0
  %162 = xor i1 %160, true
  %163 = zext i1 %162 to i8
  br label %164

164:                                              ; preds = %147, %150, %153
  %165 = phi i64 [ %161, %153 ], [ 0, %150 ], [ 0, %147 ]
  %166 = phi i8 [ %163, %153 ], [ 0, %150 ], [ 0, %147 ]
  %167 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %134, i64 1
  %168 = icmp eq %"class.mojo::StructPtr.143"* %167, %17
  br i1 %168, label %115, label %133

169:                                              ; preds = %129
  %170 = getelementptr inbounds %"class.blink::WebIDBCallbacks", %"class.blink::WebIDBCallbacks"* %3, i64 0, i32 0
  %171 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #9
  %172 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i64 %127, i64 %131) #9
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %173, align 8
  %174 = bitcast %"class.blink::WebIDBCallbacks"* %3 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)***
  %175 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %175, i64 2
  %177 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %176, align 8
  call void %177(%"class.blink::mojom::blink::IDBCallbacks"* %170, i32 28, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %247, label %180

180:                                              ; preds = %169
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %247

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #9
  br label %247

193:                                              ; preds = %129
  %194 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %194) #9
  %195 = load i64, i64* %10, align 8
  %196 = bitcast %"class.blink::WebIDBCallbacks"* %3 to void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)***
  %197 = load void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)**, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)** %197, i64 11
  %199 = load void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)*, void (%"class.blink::WebIDBCallbacks"*, %"class.base::WeakPtr"*, i64)** %198, align 8
  call void %199(%"class.blink::WebIDBCallbacks"* %3, %"class.base::WeakPtr"* nonnull %6, i64 %195) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %194) #9
  %200 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %201 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %200, align 8
  %202 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %7, i64 0, i32 0, i32 0, i32 1
  %203 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %7, i64 0, i32 0, i32 0, i32 2
  %204 = bitcast %"class.WTF::Vector.140"* %2 to i64*
  %205 = bitcast %"class.WTF::Vector.140"* %7 to i64*
  store i64 0, i64* %205, align 8
  %206 = load i64, i64* %204, align 8
  %207 = bitcast %"class.WTF::Vector.140"* %7 to i64*
  store atomic i64 0, i64* %204 monotonic, align 8
  store atomic i64 %206, i64* %207 monotonic, align 8
  %208 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %2, i64 0, i32 0, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %202, align 8
  store i32 0, i32* %208, align 4
  %210 = load i32, i32* %14, align 4
  store i32 %210, i32* %203, align 4
  store i32 0, i32* %14, align 4
  %211 = ptrtoint %"class.blink::WebIDBTransactionImpl"* %0 to i64
  %212 = call i8* @_Znwm(i64 64) #10, !noalias !13
  %213 = bitcast i8* %212 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %213, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.153"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !13
  %214 = getelementptr inbounds i8, i8* %212, i64 32
  %215 = bitcast i8* %214 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)* @_ZN5blink21WebIDBTransactionImpl14PutAllCallbackENSt3__110unique_ptrINS_15WebIDBCallbacksENS1_14default_deleteIS3_EEEEN4mojo9StructPtrINS_5mojom5blink26IDBTransactionPutAllResultEEE to i64), i64 0>, <2 x i64>* %215, align 8, !noalias !13
  %216 = getelementptr inbounds i8, i8* %212, i64 48
  %217 = bitcast i8* %216 to i64*
  store i64 %211, i64* %217, align 8, !noalias !13
  %218 = getelementptr inbounds i8, i8* %212, i64 56
  %219 = bitcast i8* %218 to i64*
  store i64 %9, i64* %219, align 8, !noalias !13
  %220 = bitcast %"class.base::OnceCallback.152"* %8 to i8**
  store i8* %212, i8** %220, align 8, !alias.scope !13
  call void @_ZN5blink5mojom5blink19IDBTransactionProxy6PutAllElN3WTF6VectorIN4mojo9StructPtrINS1_12IDBPutParamsEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS1_26IDBTransactionPutAllResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionProxy"* %201, i64 %1, %"class.WTF::Vector.140"* nonnull %7, %"class.base::OnceCallback.152"* nonnull %8) #9
  %221 = getelementptr inbounds %"class.base::OnceCallback.152", %"class.base::OnceCallback.152"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %221) #9
  %222 = getelementptr inbounds %"class.WTF::Vector.140", %"class.WTF::Vector.140"* %7, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.mojo::StructPtr.143"*, %"class.mojo::StructPtr.143"** %222, align 8
  %224 = icmp eq %"class.mojo::StructPtr.143"* %223, null
  br i1 %224, label %254, label %225, !prof !11

225:                                              ; preds = %193
  %226 = bitcast %"class.mojo::StructPtr.143"* %223 to i8*
  %227 = load i32, i32* %203, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %245, label %229, !prof !12

229:                                              ; preds = %225
  %230 = zext i32 %227 to i64
  %231 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %223, i64 %230
  br label %232

232:                                              ; preds = %239, %229
  %233 = phi %"class.mojo::StructPtr.143"* [ %240, %239 ], [ %223, %229 ]
  %234 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"class.blink::mojom::blink::IDBPutParams"*, %"class.blink::mojom::blink::IDBPutParams"** %234, align 8
  store %"class.blink::mojom::blink::IDBPutParams"* null, %"class.blink::mojom::blink::IDBPutParams"** %234, align 8
  %236 = icmp eq %"class.blink::mojom::blink::IDBPutParams"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %232
  call void @_ZN5blink5mojom5blink12IDBPutParamsD1Ev(%"class.blink::mojom::blink::IDBPutParams"* nonnull %235) #9
  %238 = bitcast %"class.blink::mojom::blink::IDBPutParams"* %235 to i8*
  call void @_ZdlPv(i8* %238) #10
  br label %239

239:                                              ; preds = %237, %232
  %240 = getelementptr inbounds %"class.mojo::StructPtr.143", %"class.mojo::StructPtr.143"* %233, i64 1
  %241 = icmp eq %"class.mojo::StructPtr.143"* %240, %231
  br i1 %241, label %242, label %232

242:                                              ; preds = %239
  store i32 0, i32* %203, align 4
  %243 = bitcast %"class.WTF::Vector.140"* %7 to i8**
  %244 = load i8*, i8** %243, align 8
  br label %245

245:                                              ; preds = %242, %225
  %246 = phi i8* [ %244, %242 ], [ %226, %225 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %246) #9
  store %"class.mojo::StructPtr.143"* null, %"class.mojo::StructPtr.143"** %222, align 8
  br label %254

247:                                              ; preds = %192, %189, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #9
  %248 = icmp eq %"class.blink::WebIDBCallbacks"* %3, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %247
  %250 = bitcast %"class.blink::WebIDBCallbacks"* %3 to void (%"class.blink::WebIDBCallbacks"*)***
  %251 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %251, i64 1
  %253 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %252, align 8
  call void %253(%"class.blink::WebIDBCallbacks"* nonnull %3) #9
  br label %254

254:                                              ; preds = %245, %193, %247, %249
  ret void

255:                                              ; preds = %111
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %97, i64 1, i32 0, i32 0, i32 0
  %257 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %257, i64 0, i32 5
  %259 = load i64, i64* %258, align 8
  %260 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %112, i64 %259) #9
  %261 = extractvalue { i64, i1 } %260, 1
  %262 = extractvalue { i64, i1 } %260, 0
  %263 = xor i1 %261, true
  %264 = zext i1 %263 to i8
  br label %265

265:                                              ; preds = %255, %111
  %266 = phi i64 [ %262, %255 ], [ 0, %111 ]
  %267 = phi i8 [ %264, %255 ], [ 0, %111 ]
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %97, i64 2
  %269 = icmp eq %"class.std::__1::unique_ptr.100"* %268, %61
  br i1 %269, label %91, label %96
}

declare void @_ZN5blink5mojom5blink19IDBTransactionProxy6PutAllElN3WTF6VectorIN4mojo9StructPtrINS1_12IDBPutParamsEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS6_INS1_26IDBTransactionPutAllResultEEEEEE(%"class.blink::mojom::blink::IDBTransactionProxy"*, i64, %"class.WTF::Vector.140"*, %"class.base::OnceCallback.152"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl14PutAllCallbackENSt3__110unique_ptrINS_15WebIDBCallbacksENS1_14default_deleteIS3_EEEEN4mojo9StructPtrINS_5mojom5blink26IDBTransactionPutAllResultEEE(%"class.blink::WebIDBTransactionImpl"* nocapture readnone, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"* nocapture readonly) #0 align 2 {
  %4 = alloca %"class.WTF::Vector.103", align 8
  %5 = getelementptr inbounds %"class.mojo::StructPtr.153", %"class.mojo::StructPtr.153"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::mojom::blink::IDBTransactionPutAllResult"*, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutAllResult", %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %81 [
    i32 0, label %9
    i32 1, label %28
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::WebIDBCallbacks", %"class.blink::WebIDBCallbacks"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutAllResult", %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %6, i64 0, i32 1, i32 0
  %12 = load %"class.mojo::StructPtr.130"*, %"class.mojo::StructPtr.130"** %11, align 8
  %13 = getelementptr inbounds %"class.mojo::StructPtr.130", %"class.mojo::StructPtr.130"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::mojom::blink::IDBError"*, %"class.blink::mojom::blink::IDBError"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::IDBError", %"class.blink::mojom::blink::IDBError"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::mojom::blink::IDBError", %"class.blink::mojom::blink::IDBError"* %14, i64 0, i32 1
  %18 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)***
  %19 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %19, i64 2
  %21 = load void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::IDBCallbacks"*, i32, %"class.WTF::String"*)** %20, align 8
  tail call void %21(%"class.blink::mojom::blink::IDBCallbacks"* %10, i32 %16, %"class.WTF::String"* dereferenceable(8) %17) #9
  %22 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %22, label %88, label %23

23:                                               ; preds = %9
  %24 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %25 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %25, i64 1
  %27 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %26, align 8
  tail call void %27(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %88

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::mojom::blink::IDBTransactionPutAllResult", %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %6, i64 0, i32 1
  %30 = bitcast %"union.blink::mojom::blink::IDBTransactionPutAllResult::Union_"* %29 to %"class.WTF::Vector.103"**
  %31 = load %"class.WTF::Vector.103"*, %"class.WTF::Vector.103"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::Vector.103"* %31 to i64*
  %35 = bitcast %"class.WTF::Vector.103"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #9
  %36 = load i64, i64* %34, align 8
  %37 = bitcast %"class.WTF::Vector.103"* %4 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %31, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %32, align 8
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %32, align 8
  store i32 %39, i32* %38, align 4
  %41 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %31, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %33, align 4
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %33, align 4
  store i32 %42, i32* %41, align 4
  %44 = call %"class.blink::IDBKey"* @_ZN5blink6IDBKey11CreateArrayEN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.103"* nonnull %4)
  %45 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)***
  %46 = load void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)**, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)** %46, i64 16
  %48 = load void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)*, void (%"class.blink::WebIDBCallbacks"*, %"class.blink::IDBKey"*)** %47, align 8
  call void %48(%"class.blink::WebIDBCallbacks"* %1, %"class.blink::IDBKey"* %44) #9
  %49 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %49, align 8
  %51 = icmp eq %"class.std::__1::unique_ptr.100"* %50, null
  br i1 %51, label %74, label %52, !prof !11

52:                                               ; preds = %28
  %53 = bitcast %"class.std::__1::unique_ptr.100"* %50 to i8*
  %54 = load i32, i32* %33, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56, !prof !12

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %50, i64 %57
  br label %59

59:                                               ; preds = %66, %56
  %60 = phi %"class.std::__1::unique_ptr.100"* [ %67, %66 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %61, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %61, align 8
  %63 = icmp eq %"class.blink::IDBKey"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %62) #9
  %65 = bitcast %"class.blink::IDBKey"* %62 to i8*
  call void @free(i8* %65) #9
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %60, i64 1
  %68 = icmp eq %"class.std::__1::unique_ptr.100"* %67, %58
  br i1 %68, label %69, label %59

69:                                               ; preds = %66
  store i32 0, i32* %33, align 4
  %70 = bitcast %"class.WTF::Vector.103"* %4 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %52
  %73 = phi i8* [ %71, %69 ], [ %53, %52 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #9
  store %"class.std::__1::unique_ptr.100"* null, %"class.std::__1::unique_ptr.100"** %49, align 8
  br label %74

74:                                               ; preds = %28, %72
  %75 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %74
  %77 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %78 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %78, i64 1
  %80 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %79, align 8
  call void %80(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %88

81:                                               ; preds = %3
  %82 = icmp eq %"class.blink::WebIDBCallbacks"* %1, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %81
  %84 = bitcast %"class.blink::WebIDBCallbacks"* %1 to void (%"class.blink::WebIDBCallbacks"*)***
  %85 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %85, i64 1
  %87 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %86, align 8
  tail call void %87(%"class.blink::WebIDBCallbacks"* nonnull %1) #9
  br label %88

88:                                               ; preds = %76, %74, %23, %9, %81, %83
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IDBKey"* @_ZN5blink6IDBKey11CreateArrayEN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.103"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Vector.103", align 8
  %3 = tail call noalias i8* @malloc(i64 56) #9
  %4 = bitcast i8* %3 to %"class.blink::IDBKey"*
  %5 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %2, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.103"* %0 to i64*
  %8 = bitcast %"class.WTF::Vector.103"* %2 to i64*
  store i64 0, i64* %8, align 8
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"class.WTF::Vector.103"* %2 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %5, align 8
  store i32 0, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %6, align 4
  store i32 0, i32* %13, align 4
  call void @_ZN5blink6IDBKeyC1EN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::IDBKey"* %4, %"class.WTF::Vector.103"* nonnull %2) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.103", %"class.WTF::Vector.103"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.100"* %16, null
  br i1 %17, label %40, label %18, !prof !11

18:                                               ; preds = %1
  %19 = bitcast %"class.std::__1::unique_ptr.100"* %16 to i8*
  %20 = load i32, i32* %6, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22, !prof !12

22:                                               ; preds = %18
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %16, i64 %23
  br label %25

25:                                               ; preds = %32, %22
  %26 = phi %"class.std::__1::unique_ptr.100"* [ %33, %32 ], [ %16, %22 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %27, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %27, align 8
  %29 = icmp eq %"class.blink::IDBKey"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %28) #9
  %31 = bitcast %"class.blink::IDBKey"* %28 to i8*
  call void @free(i8* %31) #9
  br label %32

32:                                               ; preds = %30, %25
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %26, i64 1
  %34 = icmp eq %"class.std::__1::unique_ptr.100"* %33, %24
  br i1 %34, label %35, label %25

35:                                               ; preds = %32
  store i32 0, i32* %6, align 4
  %36 = bitcast %"class.WTF::Vector.103"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %18
  %39 = phi i8* [ %37, %35 ], [ %19, %18 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  store %"class.std::__1::unique_ptr.100"* null, %"class.std::__1::unique_ptr.100"** %15, align 8
  br label %40

40:                                               ; preds = %1, %38
  ret %"class.blink::IDBKey"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebIDBTransactionImpl6CommitEl(%"class.blink::WebIDBTransactionImpl"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebIDBTransactionImpl", %"class.blink::WebIDBTransactionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink19IDBTransactionProxy6CommitEl(%"class.blink::mojom::blink::IDBTransactionProxy"* %4, i64 %1) #9
  ret void
}

declare void @_ZN5blink5mojom5blink19IDBTransactionProxy6CommitEl(%"class.blink::mojom::blink::IDBTransactionProxy"*, i64) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink12IDBPutParamsD1Ev(%"class.blink::mojom::blink::IDBPutParams"*) unnamed_addr #4

declare void @_ZN5blink6IDBKeyC1EN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::IDBKey"*, %"class.WTF::Vector.103"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #2

declare void @_ZN4mojo29ScopedInterfaceEndpointHandle28CreatePairPendingAssociationEPS0_S1_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink14IDBTransactionEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::AssociatedInterfacePtrState", align 8
  %5 = alloca %"class.mojo::AssociatedInterfacePtrInfo", align 8
  %6 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %7 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"* %7) #9
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #9
  %11 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState"* %4 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #9
  %12 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState", %"class.mojo::internal::AssociatedInterfacePtrState"* %4, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.62"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast %"class.mojo::AssociatedRemote"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %14, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #9
  %15 = getelementptr inbounds %"class.mojo::AssociatedRemote", %"class.mojo::AssociatedRemote"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %13, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.62"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState", %"class.mojo::internal::AssociatedInterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::IDBTransactionProxy"* null, %"class.blink::mojom::blink::IDBTransactionProxy"** %19, align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %9
  %22 = inttoptr i64 %18 to %"class.blink::mojom::blink::IDBTransactionProxy"*
  %23 = inttoptr i64 %18 to void (%"class.blink::mojom::blink::IDBTransactionProxy"*)***
  %24 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)**, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %24, i64 1
  %26 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::IDBTransactionProxy"* nonnull %22) #9
  br label %33

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.mojo::AssociatedRemote", %"class.mojo::AssociatedRemote"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %7) #9
  %29 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %6) #9
  %32 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 1
  store i32 %30, i32* %32, align 8
  call void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14IDBTransactionEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState"* %28, %"class.mojo::AssociatedInterfacePtrInfo"* nonnull %5, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6) #9
  br label %43

33:                                               ; preds = %21, %9
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.7"* %41 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #9
  br label %43

43:                                               ; preds = %27, %33, %35, %40
  ret void
}

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink14IDBTransactionEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState"*, %"class.mojo::AssociatedInterfacePtrInfo"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  %6 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %6) #9
  %7 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = call i8* @_Znwm(i64 8) #10
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink31IDBTransactionResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %5, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, i32 %8, %"class.mojo::MessageReceiver"* nonnull %11, %"class.base::SequencedTaskRunner"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink14IDBTransaction5Name_E, i64 0, i64 0)) #9
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #9
  %12 = call i8* @_Znwm(i64 16) #10
  %13 = bitcast i8* %12 to %"class.blink::mojom::blink::IDBTransactionProxy"*
  %14 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState", %"class.mojo::internal::AssociatedInterfacePtrState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %14, align 8
  %16 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %15, i64 0, i32 0
  call void @_ZN5blink5mojom5blink19IDBTransactionProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::IDBTransactionProxy"* nonnull %13, %"class.mojo::MessageReceiverWithResponder"* %16) #9
  %17 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState", %"class.mojo::internal::AssociatedInterfacePtrState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.blink::mojom::blink::IDBTransactionProxy"** %17, align 8
  %19 = bitcast %"class.blink::mojom::blink::IDBTransactionProxy"** %17 to i8**
  store i8* %12, i8** %19, align 8
  %20 = icmp eq %"class.blink::mojom::blink::IDBTransactionProxy"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::mojom::blink::IDBTransactionProxy"* %18 to void (%"class.blink::mojom::blink::IDBTransactionProxy"*)***
  %23 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)**, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %23, i64 1
  %25 = load void (%"class.blink::mojom::blink::IDBTransactionProxy"*)*, void (%"class.blink::mojom::blink::IDBTransactionProxy"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::IDBTransactionProxy"* nonnull %18) #9
  br label %26

26:                                               ; preds = %21, %3
  ret void
}

declare zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::internal::AssociatedInterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, i32, %"class.mojo::MessageReceiver"*, %"class.base::SequencedTaskRunner"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN5blink5mojom5blink19IDBTransactionProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::IDBTransactionProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds i8, i8* %7, i64 %12
  %15 = bitcast i8* %14 to %"class.blink::WebIDBTransactionImpl"*
  %16 = and i64 %9, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %9, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)**
  %24 = load void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)*, void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %9 to void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %29 to %"class.blink::WebIDBCallbacks"**
  %31 = load %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %30, align 8
  store %"class.blink::WebIDBCallbacks"* null, %"class.blink::WebIDBCallbacks"** %30, align 8
  %32 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  call void %28(%"class.blink::WebIDBTransactionImpl"* %15, %"class.blink::WebIDBCallbacks"* %31, %"class.mojo::StructPtr"* nonnull %3) #9
  %36 = load %"class.blink::mojom::blink::IDBTransactionPutResult"*, %"class.blink::mojom::blink::IDBTransactionPutResult"** %33, align 8
  store %"class.blink::mojom::blink::IDBTransactionPutResult"* null, %"class.blink::mojom::blink::IDBTransactionPutResult"** %33, align 8
  %37 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutResult"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  call void @_ZN5blink5mojom5blink23IDBTransactionPutResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutResult"* nonnull %36) #9
  %39 = bitcast %"class.blink::mojom::blink::IDBTransactionPutResult"* %36 to i8*
  call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %27, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23IDBTransactionPutResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutResult"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::WebIDBCallbacks"**
  %6 = load %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %5, align 8
  store %"class.blink::WebIDBCallbacks"* null, %"class.blink::WebIDBCallbacks"** %5, align 8
  %7 = icmp eq %"class.blink::WebIDBCallbacks"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::WebIDBCallbacks"* %6 to void (%"class.blink::WebIDBCallbacks"*)***
  %10 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %10, i64 1
  %12 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %11, align 8
  tail call void %12(%"class.blink::WebIDBCallbacks"* nonnull %6) #9
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.153"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.153", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.mojo::StructPtr.153"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds i8, i8* %7, i64 %12
  %15 = bitcast i8* %14 to %"class.blink::WebIDBTransactionImpl"*
  %16 = and i64 %9, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %9, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)**
  %24 = load void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)*, void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %9 to void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::WebIDBTransactionImpl"*, %"class.blink::WebIDBCallbacks"*, %"class.mojo::StructPtr.153"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %29 to %"class.blink::WebIDBCallbacks"**
  %31 = load %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %30, align 8
  store %"class.blink::WebIDBCallbacks"* null, %"class.blink::WebIDBCallbacks"** %30, align 8
  %32 = bitcast %"class.mojo::StructPtr.153"* %3 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.153", %"class.mojo::StructPtr.153"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.153"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  call void %28(%"class.blink::WebIDBTransactionImpl"* %15, %"class.blink::WebIDBCallbacks"* %31, %"class.mojo::StructPtr.153"* nonnull %3) #9
  %36 = load %"class.blink::mojom::blink::IDBTransactionPutAllResult"*, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %33, align 8
  store %"class.blink::mojom::blink::IDBTransactionPutAllResult"* null, %"class.blink::mojom::blink::IDBTransactionPutAllResult"** %33, align 8
  %37 = icmp eq %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  call void @_ZN5blink5mojom5blink26IDBTransactionPutAllResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutAllResult"* nonnull %36) #9
  %39 = bitcast %"class.blink::mojom::blink::IDBTransactionPutAllResult"* %36 to i8*
  call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %27, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink26IDBTransactionPutAllResultD1Ev(%"class.blink::mojom::blink::IDBTransactionPutAllResult"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS2_15WebIDBCallbacksENS4_14default_deleteIS6_EEEEN4mojo9StructPtrINS2_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::WebIDBCallbacks"**
  %6 = load %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %5, align 8
  store %"class.blink::WebIDBCallbacks"* null, %"class.blink::WebIDBCallbacks"** %5, align 8
  %7 = icmp eq %"class.blink::WebIDBCallbacks"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::WebIDBCallbacks"* %6 to void (%"class.blink::WebIDBCallbacks"*)***
  %10 = load void (%"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCallbacks"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %10, i64 1
  %12 = load void (%"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCallbacks"*)** %11, align 8
  tail call void %12(%"class.blink::WebIDBCallbacks"* nonnull %6) #9
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink23IDBTransactionPutResultEEEEJN3WTF17UnretainedWrapperIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!9 = distinct !{!9, !10, !"_ZN3WTF4BindIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink23IDBTransactionPutResultEEEEJNS_17UnretainedWrapperIS2_EES8_EFvSE_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF4BindIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink23IDBTransactionPutResultEEEEJNS_17UnretainedWrapperIS2_EES8_EFvSE_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14, !16, !18}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS3_15WebIDBCallbacksENS5_14default_deleteIS7_EEEEN4mojo9StructPtrINS3_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS4_EESA_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink26IDBTransactionPutAllResultEEEEJN3WTF17UnretainedWrapperIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!18 = distinct !{!18, !19, !"_ZN3WTF4BindIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink26IDBTransactionPutAllResultEEEEJNS_17UnretainedWrapperIS2_EES8_EFvSE_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF4BindIMN5blink21WebIDBTransactionImplEFvNSt3__110unique_ptrINS1_15WebIDBCallbacksENS3_14default_deleteIS5_EEEEN4mojo9StructPtrINS1_5mojom5blink26IDBTransactionPutAllResultEEEEJNS_17UnretainedWrapperIS2_EES8_EFvSE_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
