; ModuleID = '../../base/memory/memory_pressure_monitor.cc'
source_filename = "../../base/memory/memory_pressure_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.base::MemoryPressureMonitor" = type { i32 (...)** }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN4base21MemoryPressureMonitor29kUMAMemoryPressureLevelPeriodE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 5000000 }, align 8
@_ZTVN4base21MemoryPressureMonitorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MemoryPressureMonitor"*)* @_ZN4base21MemoryPressureMonitorD2Ev to i8*), i8* bitcast (void (%"class.base::MemoryPressureMonitor"*)* @_ZN4base21MemoryPressureMonitorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN4base12_GLOBAL__N_19g_monitorE = internal unnamed_addr global %"class.base::MemoryPressureMonitor"* null, align 8
@.str = private unnamed_addr constant [21 x i8] c"Memory.PressureLevel\00", align 1

@_ZN4base21MemoryPressureMonitorD1Ev = hidden unnamed_addr alias void (%"class.base::MemoryPressureMonitor"*), void (%"class.base::MemoryPressureMonitor"*)* @_ZN4base21MemoryPressureMonitorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base21MemoryPressureMonitorC2Ev(%"class.base::MemoryPressureMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MemoryPressureMonitor", %"class.base::MemoryPressureMonitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base21MemoryPressureMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.base::MemoryPressureMonitor"* %0, %"class.base::MemoryPressureMonitor"** @_ZN4base12_GLOBAL__N_19g_monitorE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base21MemoryPressureMonitorD2Ev(%"class.base::MemoryPressureMonitor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MemoryPressureMonitor", %"class.base::MemoryPressureMonitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base21MemoryPressureMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.base::MemoryPressureMonitor"* null, %"class.base::MemoryPressureMonitor"** @_ZN4base12_GLOBAL__N_19g_monitorE, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base21MemoryPressureMonitorD0Ev(%"class.base::MemoryPressureMonitor"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::MemoryPressureMonitor"* @_ZN4base21MemoryPressureMonitor3GetEv() local_unnamed_addr #3 align 2 {
  %1 = load %"class.base::MemoryPressureMonitor"*, %"class.base::MemoryPressureMonitor"** @_ZN4base12_GLOBAL__N_19g_monitorE, align 8
  ret %"class.base::MemoryPressureMonitor"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21MemoryPressureMonitor20RecordMemoryPressureENS_22MemoryPressureListener19MemoryPressureLevelEi(i32, i32) local_unnamed_addr #4 align 2 {
  %3 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #7
  %4 = bitcast %"class.base::HistogramBase"* %3 to void (%"class.base::HistogramBase"*, i32, i32)***
  %5 = load void (%"class.base::HistogramBase"*, i32, i32)**, void (%"class.base::HistogramBase"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %5, i64 7
  %7 = load void (%"class.base::HistogramBase"*, i32, i32)*, void (%"class.base::HistogramBase"*, i32, i32)** %6, align 8
  tail call void %7(%"class.base::HistogramBase"* %3, i32 %0, i32 %1) #7
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
