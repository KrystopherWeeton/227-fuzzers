; ModuleID = '../../third_party/blink/renderer/core/fetch/request.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.278" }
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__cxx_atomic_impl.281" }
%"struct.std::__1::__cxx_atomic_impl.281" = type { %"struct.std::__1::__cxx_atomic_base_impl.282" }
%"struct.std::__1::__cxx_atomic_base_impl.282" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.36" }
%"class.WTF::HashTable.36" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.38", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.40", i32, [4 x i8], %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.177", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.218", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.136", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.151", [4 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { float }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.160", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.169" }
%"class.WTF::Vector.169" = type { %"class.WTF::VectorBuffer.170" }
%"class.WTF::VectorBuffer.170" = type { %"class.WTF::VectorBufferBase.171" }
%"class.WTF::VectorBufferBase.171" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.185" }
%"class.WTF::VectorBuffer.185" = type { %"class.WTF::VectorBufferBase.186" }
%"class.WTF::VectorBufferBase.186" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.101"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.385" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::Request" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::Body", %"class.blink::Member.396", %"class.blink::Member.398", %"class.blink::Member.252" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Body" = type { %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.395" }
%"class.blink::WeakMember.395" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.339", i32, i8, [3 x i8], %"class.blink::HeapVector.341", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.349", %"class.blink::Member.364", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.373", %"class.blink::Member.379", %"class.blink::Member.381", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.300" }
%"class.blink::HeapHashMap.300" = type { %"class.WTF::HashMap.303" }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.306" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.307" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.24"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.24" = type opaque
%"class.blink::Supplementable.307" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.308" }
%"class.blink::HeapHashMap.308" = type { %"class.WTF::HashMap.311" }
%"class.WTF::HashMap.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"struct.WTF::KeyValuePair.314"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.314" = type { i8*, %"class.blink::Member.484" }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.486" }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.315, %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329", %"class.blink::Member.292", i32, [4 x i8], %"class.WTF::HashSet.335", i32, i32 }
%class.scoped_refptr.315 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.316", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.318", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.10 }
%"class.WTF::RefCounted.316" = type { %"class.base::RefCounted.317" }
%"class.base::RefCounted.317" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.10 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.WTF::HashSet.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.341" = type { %"class.WTF::Vector.344" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.blink::Member.347"*, i32, i32 }
%"class.blink::Member.347" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::HashMap.353", %"class.WTF::HashSet.358", i8, %"class.blink::HeapMojoAssociatedRemote" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.WTF::HashMap.353" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type opaque
%"class.WTF::HashSet.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.362" }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.667" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.610", i32 }>
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.613", %"class.absl::optional.614", %"class.absl::optional.619", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.626", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.634", %"class.std::__1::map.645", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.654", i8, %class.scoped_refptr.393, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.655" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.278" }
%"class.base::OnceCallback.613" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.614" = type { %"class.absl::optional_internal::optional_data.615" }
%"class.absl::optional_internal::optional_data.615" = type { %"class.absl::optional_internal::optional_data_base.616" }
%"class.absl::optional_internal::optional_data_base.616" = type { %"class.absl::optional_internal::optional_data_dtor_base.617" }
%"class.absl::optional_internal::optional_data_dtor_base.617" = type { i8, %union.anon.618 }
%union.anon.618 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.619" = type { %"class.absl::optional_internal::optional_data.620" }
%"class.absl::optional_internal::optional_data.620" = type { %"class.absl::optional_internal::optional_data_base.621" }
%"class.absl::optional_internal::optional_data_base.621" = type { %"class.absl::optional_internal::optional_data_dtor_base.622" }
%"class.absl::optional_internal::optional_data_dtor_base.622" = type { i8, %union.anon.623 }
%union.anon.623 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.393, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.624" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.624" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.510 }
%class.scoped_refptr.510 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.511", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.511" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.512" }
%"struct.std::__1::atomic.512" = type { %"struct.std::__1::__atomic_base.513" }
%"struct.std::__1::__atomic_base.513" = type { %"struct.std::__1::__atomic_base.514" }
%"struct.std::__1::__atomic_base.514" = type { %"struct.std::__1::__cxx_atomic_impl.515" }
%"struct.std::__1::__cxx_atomic_impl.515" = type { %"struct.std::__1::__cxx_atomic_base_impl.516" }
%"struct.std::__1::__cxx_atomic_base_impl.516" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.391 }
%class.scoped_refptr.391 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.392", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.393, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.392" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.625 }
%class.scoped_refptr.625 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.629", %class.scoped_refptr.630 }
%"class.base::RepeatingCallback.629" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.630 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.491", [4 x i8] }>
%"class.base::RefCountedThreadSafe.491" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.634" = type { %"class.std::__1::__tree.635" }
%"class.std::__1::__tree.635" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.636", %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.645" = type { %"class.std::__1::__tree.646" }
%"class.std::__1::__tree.646" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.647", %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.654" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.393 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394" }>
%"class.base::RefCountedThreadSafe.394" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.655" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::mojom::blink::BlobURLStoreProxy"* }
%"class.blink::mojom::blink::BlobURLStoreProxy" = type { %"class.blink::mojom::blink::BlobURLStore", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BlobURLStore" = type { i32 (...)** }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.366", i32, i32 }
%"class.blink::HeapHashMap.366" = type { %"class.WTF::HashMap.369" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::FetchRequestData"* }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::Headers"* }
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::AbortSignal"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.31, %"class.blink::Member.222", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.31 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.224" }
%"class.blink::Persistent.224" = type { %"class.blink::PersistentBase.225" }
%"class.blink::PersistentBase.225" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::FetchRequestData" = type <{ %"class.WTF::AtomicString", %"class.blink::KURL", %"class.blink::Member", i32, [4 x i8], %class.scoped_refptr.10, %class.scoped_refptr.10, %"class.WTF::AtomicString", i32, i32, i32, i32, i32, i32, %"class.absl::optional", %"class.blink::Member.16", %"class.WTF::String", %"class.WTF::String", i32, i8, i8, [2 x i8], %"class.blink::HeapMojoRemote", %"class.base::UnguessableToken", %"class.blink::Member.292", i8, [7 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FetchHeaderList"* }
%"class.blink::FetchHeaderList" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.11", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.10*, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::BodyStreamBuffer"* }
%"class.blink::BodyStreamBuffer" = type <{ %"class.blink::UnderlyingSourceBase", %"class.blink::BytesConsumer::Client", %"class.blink::Member.27", %"class.blink::Member.226", %"class.blink::Member.242", %"class.blink::Member.244", %"class.blink::Member.248", %"class.blink::Member.252", %"class.blink::Member.294", %class.scoped_refptr.296, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::UnderlyingSourceBase" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ReadableStreamDefaultControllerWithScriptScope"* }
%"class.blink::ReadableStreamDefaultControllerWithScriptScope" = type opaque
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ScriptState"* }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.228", i8, %"class.blink::Member.229", %"class.blink::Member.231", %"class.blink::TraceWrapperV8Reference.233", %"class.std::__1::unique_ptr.236" }
%"class.base::StrongAlias.228" = type { i8 }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.383", %"class.blink::Member.226" }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::TraceWrapperV8Reference.233" = type { %"class.v8::TracedReference.234" }
%"class.v8::TracedReference.234" = type { %"class.v8::BasicTracedReference.235" }
%"class.v8::BasicTracedReference.235" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type opaque
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::BytesUploader"* }
%"class.blink::BytesUploader" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::FetchDataLoader"* }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%class.scoped_refptr.296 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.297" }
%"class.base::RefCountedThreadSafe.297" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.298" }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.659" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.490, %"class.std::__1::unique_ptr.610", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.393, i32 }>
%class.scoped_refptr.490 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.393, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.576", %"class.absl::optional.581", %"class.absl::optional.537", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.601", i8, [7 x i8], %class.scoped_refptr.393, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.491" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.494 }
%union.anon.494 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.393, %"class.std::__1::unique_ptr.517", %"class.absl::optional.527", %"struct.std::__1::atomic.218", i8, i8, i8, i8, i32, i32, %"class.absl::optional.537", %"class.std::__1::unique_ptr.542", i8, i64, %class.scoped_refptr.573, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.575" }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.393, i8, %"class.mojo::ScopedHandleBase.520", %class.scoped_refptr.521, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.522", i8*, %"class.base::WeakPtrFactory.523" }
%"class.mojo::ScopedHandleBase.520" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.521 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.522" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.523" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.527" = type { %"class.absl::optional_internal::optional_data.528" }
%"class.absl::optional_internal::optional_data.528" = type { %"class.absl::optional_internal::optional_data_base.529" }
%"class.absl::optional_internal::optional_data_base.529" = type { %"class.absl::optional_internal::optional_data_dtor_base.530" }
%"class.absl::optional_internal::optional_data_dtor_base.530" = type { i8, %union.anon.531 }
%union.anon.531 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.532", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.532" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.545", i8, i64, %class.scoped_refptr.546, %class.scoped_refptr.569 }
%"class.base::RepeatingCallback.545" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.546 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.547", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.558", i8, [7 x i8] }>
%"class.base::RefCounted.547" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.548 }
%class.scoped_refptr.548 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.549" }
%"class.std::__1::__tree.549" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.558" = type { %"class.std::__1::__tree.559" }
%"class.std::__1::__tree.559" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%class.scoped_refptr.569 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.573 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.574 }
%class.scoped_refptr.574 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.575" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.576" = type { %"class.absl::optional_internal::optional_data.577" }
%"class.absl::optional_internal::optional_data.577" = type { %"class.absl::optional_internal::optional_data_base.578" }
%"class.absl::optional_internal::optional_data_base.578" = type { %"class.absl::optional_internal::optional_data_dtor_base.579" }
%"class.absl::optional_internal::optional_data_dtor_base.579" = type { i8, %union.anon.580 }
%union.anon.580 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.581" = type { %"class.absl::optional_internal::optional_data.582" }
%"class.absl::optional_internal::optional_data.582" = type { %"class.absl::optional_internal::optional_data_base.583" }
%"class.absl::optional_internal::optional_data_base.583" = type { %"class.absl::optional_internal::optional_data_dtor_base.584" }
%"class.absl::optional_internal::optional_data_dtor_base.584" = type { i8, [7 x i8], %union.anon.585 }
%union.anon.585 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.537" = type { %"class.absl::optional_internal::optional_data.538" }
%"class.absl::optional_internal::optional_data.538" = type { %"class.absl::optional_internal::optional_data_base.539" }
%"class.absl::optional_internal::optional_data_base.539" = type { %"class.absl::optional_internal::optional_data_dtor_base.540" }
%"class.absl::optional_internal::optional_data_dtor_base.540" = type { i8, %union.anon.541 }
%union.anon.541 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.586 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.586 = type { %"class.std::__1::map.589" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.600"*, i64 }
%"class.std::__1::unique_ptr.600" = type opaque
%"class.std::__1::map.601" = type { %"class.std::__1::__tree.602" }
%"class.std::__1::__tree.602" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.network::mojom::blink::URLLoaderFactoryProxy"* }
%"class.network::mojom::blink::URLLoaderFactoryProxy" = type { %"class.network::mojom::blink::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::URLLoaderFactory" = type { i32 (...)** }
%"class.blink::Headers" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.274", %"class.blink::HeapVector.285", %"class.blink::Member.292" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.267" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.258" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260", [32 x i8] }
%"class.WTF::VectorBufferBase.260" = type { %"struct.std::__1::pair.261"*, i32, i32 }
%"struct.std::__1::pair.261" = type { %"class.WTF::AtomicString", %"class.blink::Member.262" }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::HeapVector.264"* }
%"class.blink::HeapVector.264" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.WTF::Vector.270"* }
%"class.WTF::Vector.270" = type opaque
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::HeapVector.285" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::Member.252"*, i32, i32 }
%"class.mojo::PendingRemote.390" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::RequestInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.252", %"class.blink::Member.414" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.233", %class.scoped_refptr.402 }
%class.scoped_refptr.402 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord" = type { i32, %"class.WTF::Vector.403", %"class.WTF::Vector.409" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"struct.std::__1::pair.406"*, i32, i32 }
%"struct.std::__1::pair.406" = type opaque
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.WTF::Vector.11"*, i32, i32 }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::TrustToken"* }
%"class.blink::TrustToken" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::Vector.11", %"class.WTF::String", i8, %"class.WTF::Vector.11", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.233" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringAppend.479" = type { %"class.WTF::AtomicString", i8* }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.416" = type { %"class.WTF::StringAppend", i8* }
%"class.WTF::StringAppend.422" = type { %"class.WTF::StringAppend.423", i8* }
%"class.WTF::StringAppend.423" = type { i8*, %"class.WTF::AtomicString" }
%"class.v8::Value" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.732", %"class.WTF::HashMap.732", %"class.WTF::HashMap.737", %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.789", %"class.blink::Persistent.224", i8, i8, i8, %"class.WTF::Vector.274", %"class.std::__1::unique_ptr.795", %"class.blink::Persistent.801", %"class.blink::Persistent.805", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.714", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.726", i32, i32 }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ %"struct.WTF::KeyValuePair.736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.736" = type opaque
%"class.WTF::HashMap.737" = type { %"class.WTF::HashTable.738" }
%"class.WTF::HashTable.738" = type <{ %"struct.WTF::KeyValuePair.741"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.741" = type opaque
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.750", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.745", i8* }
%"class.WTF::HashMap.745" = type { %"class.WTF::HashTable.746" }
%"class.WTF::HashTable.746" = type <{ %"struct.WTF::KeyValuePair.749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.749" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.750" = type { %"class.v8::PersistentValueMapBase.751" }
%"class.v8::PersistentValueMapBase.751" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.752", i8* }
%"class.WTF::HashMap.752" = type { %"class.WTF::HashTable.753" }
%"class.WTF::HashTable.753" = type <{ %"struct.WTF::KeyValuePair.756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.756" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.757", %"class.WTF::String", %"class.std::__1::unique_ptr.759" }
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.762", %"class.std::__1::unique_ptr.773", %"class.WTF::Vector.779", i8, i32 }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.WTF::Vector.765"* }
%"class.WTF::Vector.765" = type { %"class.WTF::VectorBuffer.766" }
%"class.WTF::VectorBuffer.766" = type { %"class.WTF::VectorBufferBase.767" }
%"class.WTF::VectorBufferBase.767" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.779" = type { %"class.WTF::VectorBuffer.780" }
%"class.WTF::VectorBuffer.780" = type { %"class.WTF::VectorBufferBase.767", [32 x i8] }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.801" = type { %"class.blink::PersistentBase.802" }
%"class.blink::PersistentBase.802" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.805" = type { %"class.blink::PersistentBase.806" }
%"class.blink::PersistentBase.806" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.809", i64 }
%"class.blink::HeapVector.809" = type { %"class.WTF::Vector.812" }
%"class.WTF::Vector.812" = type { %"class.WTF::VectorBuffer.813" }
%"class.WTF::VectorBuffer.813" = type { %"class.WTF::VectorBufferBase.814" }
%"class.WTF::VectorBufferBase.814" = type { %"struct.std::__1::pair.815"*, i32, i32 }
%"struct.std::__1::pair.815" = type { %"class.blink::UntracedMember", %"class.blink::Member.817" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::BlobBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.292", %class.scoped_refptr.296, %"class.blink::Member.696", %"class.blink::Member.244", %"class.blink::Member.698" }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::BlobBytesConsumer::BlobClient"* }
%"class.blink::BlobBytesConsumer::BlobClient" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::FormDataBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.244" }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.700" }
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable.702", %"class.WTF::TextEncoding", %"class.blink::HeapVector.704", i8, [7 x i8] }>
%"class.blink::PairIterable.702" = type { %"class.blink::Iterable.703" }
%"class.blink::Iterable.703" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapVector.704" = type { %"class.WTF::Vector.707" }
%"class.WTF::Vector.707" = type { %"class.WTF::VectorBuffer.708" }
%"class.WTF::VectorBuffer.708" = type { %"class.WTF::VectorBufferBase.709" }
%"class.WTF::VectorBufferBase.709" = type { %"class.blink::Member.710"*, i32, i32 }
%"class.blink::Member.710" = type opaque
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.437", [4 x i8], %"class.WTF::Vector.439", i64, %"class.WTF::Vector.442", i8, [7 x i8] }>
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.442", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.296, i64, i64, %"class.absl::optional.447", %class.scoped_refptr.453 }
%"class.absl::optional.447" = type { %"class.absl::optional_internal::optional_data.448" }
%"class.absl::optional_internal::optional_data.448" = type { %"class.absl::optional_internal::optional_data_base.449" }
%"class.absl::optional_internal::optional_data_base.449" = type { %"class.absl::optional_internal::optional_data_dtor_base.450" }
%"class.absl::optional_internal::optional_data_dtor_base.450" = type { i8, %union.anon.451 }
%union.anon.451 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.452" }
%"class.base::time_internal::TimeBase.452" = type { i64 }
%class.scoped_refptr.453 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.442" = type { %"class.WTF::VectorBuffer.443" }
%"class.WTF::VectorBuffer.443" = type { %"class.WTF::VectorBufferBase.444" }
%"class.WTF::VectorBufferBase.444" = type { i8*, i32, i32 }
%"class.blink::URLSearchParams" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::Vector.403", %"class.blink::WeakMember.712" }
%"class.blink::WeakMember.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::DOMURL"* }
%"class.blink::DOMURL" = type opaque
%"class.WTF::StringTypeAdapter.836" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.856" = type { %"class.WTF::StringTypeAdapter.835" }
%"class.WTF::StringTypeAdapter.835" = type { %"class.WTF::StringView" }
%"class.blink::V8UnionRequestOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.426", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::Request"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.428" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap.431", %class.scoped_refptr.296, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.457", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.464", i8, i8, i8, %"class.WTF::String" }
%"class.WTF::HashMap.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.436, %"class.mojo::PendingRemote.456" }
%class.scoped_refptr.436 = type { %"class.blink::EncodedFormData"* }
%"class.mojo::PendingRemote.456" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.457" = type { %"class.std::__1::unique_ptr.458" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.464" = type { %"class.absl::optional_internal::optional_data.465" }
%"class.absl::optional_internal::optional_data.465" = type { %"class.absl::optional_internal::optional_data_base.466" }
%"class.absl::optional_internal::optional_data_base.466" = type { %"class.absl::optional_internal::optional_data_dtor_base.467" }
%"class.absl::optional_internal::optional_data_dtor_base.467" = type { i8, %union.anon.468 }
%union.anon.468 = type { %"class.base::UnguessableToken" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.472" }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.476" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend.478" = type { %"class.WTF::StringAppend.479", %"class.WTF::String" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.490, %"class.std::__1::unique_ptr.610", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.393, i32, [4 x i8] }>
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.835" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.837" }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { i8* }
%"class.v8::String" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN5blink16FetchRequestData9SetMethodEN3WTF12AtomicStringE = comdat any

$_ZN5blink16FetchRequestData19SetTrustTokenParamsEN4absl8optionalIN7network5mojom5blink16TrustTokenParamsEEE = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZN5blink7Request10BodyBufferEv = comdat any

$_ZNK5blink7Request10BodyBufferEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink7RequestD2Ev = comdat any

$_ZN5blink7RequestD0Ev = comdat any

$_ZNK5blink7Request18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink7Request18GetWrapperTypeInfoEv = comdat any

$_ZThn16_N5blink7RequestD1Ev = comdat any

$_ZThn16_N5blink7RequestD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_7RequestEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_7RequestEE26DispatchHasPendingActivityEv = comdat any

$_ZThn24_N5blink7Request10BodyBufferEv = comdat any

$_ZThn24_NK5blink7Request10BodyBufferEv = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_ = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv = comdat any

$_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_7RequestEED0Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKNS_12AtomicStringESH_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKNS_12AtomicStringESE_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN5blink10TraceTraitINS_7HeadersEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11AbortSignalEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [26 x i8] c"Failed to parse URL from \00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"Request cannot be constructed from a URL that includes credentials: \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"Referrer '\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"' is not a valid URL.\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"navigate\00", align 1
@.str.7 = private unnamed_addr constant [86 x i8] c"Cannot construct a Request with a RequestInit whose mode member is set as 'navigate'.\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"same-origin\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"no-cors\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"cors\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"low\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"high\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"no-store\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"reload\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"no-cache\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"force-cache\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"only-if-cached\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"'only-if-cached' can be set only with 'same-origin' mode\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"follow\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"manual\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"' is not a valid HTTP method.\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"' HTTP method is unsupported.\00", align 1
@.str.26 = private unnamed_addr constant [74 x i8] c"trustToken: TrustTokens operations are only available in secure contexts.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.27 = private unnamed_addr constant [173 x i8] c"trustToken: Redemption ('token-redemption') and signing ('send-redemption-record') operations require that the trust-token-redemption Permissions Policy feature be enabled.\00", align 1
@.str.28 = private unnamed_addr constant [113 x i8] c"trustToken: Issuance ('token-request') is disabled except in contexts with the TrustTokens Origin Trial enabled.\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"' is unsupported in no-cors mode.\00", align 1
@_ZN5blink10http_names4kGETE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names5kHEADE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.30 = private unnamed_addr constant [47 x i8] c"Request with GET/HEAD method cannot have body.\00", align 1
@.str.31 = private unnamed_addr constant [53 x i8] c"Keepalive request cannot have a ReadableStream body.\00", align 1
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.32 = private unnamed_addr constant [78 x i8] c"If request is made from ReadableStream, mode should be\22same-origin\22 or \22cors\22\00", align 1
@.str.33 = private unnamed_addr constant [77 x i8] c"Cannot construct a Request with a Request object that has already been used.\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"omit\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@_ZTVN5blink7RequestE = hidden unnamed_addr constant { [15 x i8*], [7 x i8*], [8 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Request"*)* @_ZN5blink7RequestD2Ev to i8*), i8* bitcast (void (%"class.blink::Request"*)* @_ZN5blink7RequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Request"*)* @_ZNK5blink7Request18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Request"*, %"class.blink::Visitor"*)* @_ZNK5blink7Request5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Request"*)* @_ZNK5blink7Request18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::BodyStreamBuffer"* (%"class.blink::Request"*)* @_ZN5blink7Request10BodyBufferEv to i8*), i8* bitcast (%"class.blink::BodyStreamBuffer"* (%"class.blink::Request"*)* @_ZNK5blink7Request10BodyBufferEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Request"*)* @_ZNK5blink7Request11ContentTypeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Request"*)* @_ZNK5blink7Request8MimeTypeEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::Request"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink7Request5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::Request"*)* @_ZThn16_N5blink7RequestD1Ev to i8*), i8* bitcast (void (%"class.blink::Request"*)* @_ZThn16_N5blink7RequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.blink::Request"*, %"class.blink::Visitor"*)* @_ZThn24_NK5blink7Request5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::BodyStreamBuffer"* (%"class.blink::Request"*)* @_ZThn24_N5blink7Request10BodyBufferEv to i8*), i8* bitcast (%"class.blink::BodyStreamBuffer"* (%"class.blink::Request"*)* @_ZThn24_NK5blink7Request10BodyBufferEv to i8*), i8* bitcast (i1 (%"class.blink::Body"*)* @_ZNK5blink4Body10IsBodyUsedEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Request"*)* @_ZThn24_NK5blink7Request11ContentTypeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Request"*)* @_ZThn24_NK5blink7Request8MimeTypeEv to i8*)] }, align 8
@.str.36 = private unnamed_addr constant [11 x i8] c"unsafe-url\00", align 1
@.str.37 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"no-referrer-when-downgrade\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"no-referrer\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"origin-when-cross-origin\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"strict-origin\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"strict-origin-when-cross-origin\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"Request body is already used\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"referer\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN7network5mojom5blink16URLLoaderFactory5Name_E = external constant [0 x i8], align 1
@.str.47 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.48 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::SecurityOrigin>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.51 = private unnamed_addr constant [13 x i8] c"about:client\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"about\00", align 1
@.str.53 = private unnamed_addr constant [60 x i8] c"The provided ArrayBuffer exceeds the maximum supported size\00", align 1
@.str.54 = private unnamed_addr constant [64 x i8] c"The provided ArrayBufferView exceeds the maximum supported size\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"multipart/form-data; boundary=\00", align 1
@.str.56 = private unnamed_addr constant [48 x i8] c"application/x-www-form-urlencoded;charset=UTF-8\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"The provided ReadableStream is disturbed\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"The provided ReadableStream is locked\00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"text/plain;charset=UTF-8\00", align 1
@_ZN5blink6V8Blob18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BytesConsumer]\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.61 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.62 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.63 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.64 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink10V8FormData18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.str.65 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.66 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink17V8URLSearchParams18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_7RequestEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@.str.68 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.69 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN5blink7Request18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FetchRequestDataEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchRequestData]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink16V8ReadableStream18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1

@_ZN5blink7RequestC1EPNS_11ScriptStateEPNS_16FetchRequestDataEPNS_7HeadersEPNS_11AbortSignalE = hidden unnamed_addr alias void (%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*, %"class.blink::Headers"*, %"class.blink::AbortSignal"*), void (%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*, %"class.blink::Headers"*, %"class.blink::AbortSignal"*)* @_ZN5blink7RequestC2EPNS_11ScriptStateEPNS_16FetchRequestDataEPNS_7HeadersEPNS_11AbortSignalE
@_ZN5blink7RequestC1EPNS_11ScriptStateEPNS_16FetchRequestDataE = hidden unnamed_addr alias void (%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*), void (%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*)* @_ZN5blink7RequestC2EPNS_11ScriptStateEPNS_16FetchRequestDataE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink36CreateCopyOfFetchRequestDataForFetchEPNS_11ScriptStateEPKNS_16FetchRequestDataE(%"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*) local_unnamed_addr #0 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = alloca %"class.mojo::MessagePipeHandle", align 4
  %5 = alloca %"class.mojo::MessagePipeHandle", align 4
  %6 = alloca %"class.mojo::PendingRemote.390", align 4
  %7 = alloca %"class.mojo::PendingRemote.390", align 4
  %8 = alloca %"class.mojo::PendingRemote.390", align 4
  %9 = alloca %"class.mojo::PendingReceiver", align 8
  %10 = alloca %"class.mojo::PendingRemote.390", align 4
  %11 = alloca %"class.absl::optional", align 8
  %12 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64 320) #12
  %14 = bitcast i8* %13 to %"class.blink::FetchRequestData"*
  tail call void @_ZN5blink16FetchRequestDataC1EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"* %14, %"class.blink::ExecutionContext"* %12) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 1
  %20 = getelementptr inbounds i8, i8* %13, i64 8
  %21 = bitcast i8* %20 to %"class.blink::KURL"*
  %22 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %21, %"class.blink::KURL"* dereferenceable(112) %19) #12
  %23 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %2, %26, %41
  tail call void @_ZN5blink16FetchRequestData9SetMethodEN3WTF12AtomicStringE(%"class.blink::FetchRequestData"* %14, %"class.WTF::StringImpl"* %24)
  %44 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %44, align 8
  %46 = tail call %"class.blink::FetchHeaderList"* @_ZNK5blink15FetchHeaderList5CloneEv(%"class.blink::FetchHeaderList"* %45) #12
  %47 = getelementptr inbounds i8, i8* %13, i64 120
  %48 = ptrtoint %"class.blink::FetchHeaderList"* %46 to i64
  %49 = bitcast i8* %47 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.blink::FetchHeaderList"* %46 to i8*
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %43, %52
  %56 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %12) #12
  %57 = icmp eq %"class.blink::SecurityOrigin"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %56, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #12
  br label %60

60:                                               ; preds = %55, %58
  %61 = ptrtoint %"class.blink::SecurityOrigin"* %56 to i64
  %62 = getelementptr inbounds i8, i8* %13, i64 136
  %63 = bitcast i8* %62 to i64*
  %64 = bitcast i8* %62 to %"class.blink::SecurityOrigin"**
  %65 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %64, align 8
  store i64 %61, i64* %63, align 8
  %66 = icmp eq %"class.blink::SecurityOrigin"* %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #12
  %69 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %65) #12
  %73 = bitcast %"class.blink::SecurityOrigin"* %65 to i8*
  tail call void @free(i8* %73) #12
  br label %74

74:                                               ; preds = %60, %67, %72
  %75 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 2, i32 0
  %76 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  %80 = icmp ult i32 %79, 2
  br i1 %80, label %81, label %97

81:                                               ; preds = %74
  %82 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"* %12) #12
  %83 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"* %76, %"class.base::UnguessableToken"* dereferenceable(16) %82) #12
  %84 = ptrtoint %"class.blink::SecurityOrigin"* %83 to i64
  %85 = getelementptr inbounds i8, i8* %13, i64 144
  %86 = bitcast i8* %85 to i64*
  %87 = bitcast i8* %85 to %"class.blink::SecurityOrigin"**
  %88 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %87, align 8
  store i64 %84, i64* %86, align 8
  %89 = icmp eq %"class.blink::SecurityOrigin"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %88, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #12
  %92 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %88) #12
  %96 = bitcast %"class.blink::SecurityOrigin"* %88 to i8*
  tail call void @free(i8* %96) #12
  br label %97

97:                                               ; preds = %81, %90, %95, %74
  %98 = getelementptr inbounds i8, i8* %13, i64 152
  %99 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #12
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %107
  tail call void @llvm.trap() #12
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %97
  %120 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  %121 = bitcast i8* %98 to i64*
  %122 = bitcast i8* %98 to %"class.WTF::StringImpl"**
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #12
  br label %138

138:                                              ; preds = %119, %134, %137
  %139 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 8
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds i8, i8* %13, i64 160
  %142 = bitcast i8* %141 to i32*
  store i32 %140, i32* %142, align 8
  %143 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 9
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds i8, i8* %13, i64 164
  %146 = bitcast i8* %145 to i32*
  store i32 %144, i32* %146, align 4
  %147 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 10
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds i8, i8* %13, i64 168
  %150 = bitcast i8* %149 to i32*
  store i32 %148, i32* %150, align 8
  %151 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 11
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i8, i8* %13, i64 172
  %154 = bitcast i8* %153 to i32*
  store i32 %152, i32* %154, align 4
  %155 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 12
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds i8, i8* %13, i64 176
  %158 = bitcast i8* %157 to i32*
  store i32 %156, i32* %158, align 8
  %159 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 17, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %138
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %182

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #12
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %167
  tail call void @llvm.trap() #12
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %182

179:                                              ; preds = %138
  %180 = getelementptr inbounds i8, i8* %13, i64 264
  %181 = bitcast i8* %180 to %"class.WTF::String"*
  br label %200

182:                                              ; preds = %162, %177
  %183 = getelementptr inbounds i8, i8* %13, i64 264
  %184 = bitcast i8* %183 to %"class.WTF::String"*
  %185 = load atomic i32, i32* %163 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i33
  %192 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %191, i33 1) #12
  %193 = extractvalue { i33, i1 } %192, 1
  %194 = extractvalue { i33, i1 } %192, 0
  %195 = icmp slt i33 %194, 0
  %196 = or i1 %193, %195
  br i1 %196, label %197, label %198, !prof !2

197:                                              ; preds = %188
  tail call void @llvm.trap() #12
  unreachable

198:                                              ; preds = %188
  %199 = trunc i33 %194 to i32
  store i32 %199, i32* %189, align 4
  br label %200

200:                                              ; preds = %179, %198, %182
  %201 = phi %"class.WTF::String"* [ %184, %198 ], [ %184, %182 ], [ %181, %179 ]
  %202 = ptrtoint %"class.WTF::StringImpl"* %160 to i64
  %203 = bitcast %"class.WTF::String"* %201 to i64*
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %201, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  store i64 %202, i64* %203, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #12
  br label %220

220:                                              ; preds = %200, %216, %219
  br i1 %161, label %234, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #12
  br label %234

234:                                              ; preds = %220, %230, %233
  %235 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 13
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds i8, i8* %13, i64 180
  %238 = bitcast i8* %237 to i32*
  store i32 %236, i32* %238, align 4
  %239 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 18
  %240 = load i32, i32* %239, align 8
  %241 = getelementptr inbounds i8, i8* %13, i64 272
  %242 = bitcast i8* %241 to i32*
  store i32 %240, i32* %242, align 8
  %243 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 19
  %244 = load i8, i8* %243, align 4, !range !3
  %245 = getelementptr inbounds i8, i8* %13, i64 276
  store i8 %244, i8* %245, align 4
  %246 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 20
  %247 = load i8, i8* %246, align 1, !range !3
  %248 = getelementptr inbounds i8, i8* %13, i64 277
  store i8 %247, i8* %248, align 1
  %249 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %250 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %250, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %258

254:                                              ; preds = %234
  %255 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %250, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %256 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %255, align 8
  %257 = icmp eq %"class.mojo::InterfaceEndpointClient"* %256, null
  br i1 %257, label %327, label %258

258:                                              ; preds = %254, %234
  %259 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %250, i64 0, i32 1, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %259) #12
  %260 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %250, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %261 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %260, align 8
  %262 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %261, null
  br i1 %262, label %327, label %263

263:                                              ; preds = %258
  %264 = bitcast %"class.mojo::PendingRemote.390"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #12
  %265 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %265, align 4
  %266 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %8, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %266, align 4
  %267 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %267) #12
  %268 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %249, align 8
  %269 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %268, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %276

272:                                              ; preds = %263
  %273 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %268, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %274 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %273, align 8
  %275 = icmp eq %"class.mojo::InterfaceEndpointClient"* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %272, %263
  %277 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %268, i64 0, i32 1, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %277) #12
  %278 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %268, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %279 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %278, align 8
  %280 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %279 to void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)***
  br label %281

281:                                              ; preds = %272, %276
  %282 = phi void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)*** [ %280, %276 ], [ null, %272 ]
  %283 = phi %"class.network::mojom::blink::URLLoaderFactoryProxy"* [ %279, %276 ], [ null, %272 ]
  %284 = getelementptr inbounds %"class.network::mojom::blink::URLLoaderFactoryProxy", %"class.network::mojom::blink::URLLoaderFactoryProxy"* %283, i64 0, i32 0
  %285 = bitcast %"class.mojo::MessagePipeHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #12, !noalias !4
  %286 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %286, align 4, !noalias !4
  %287 = bitcast %"class.mojo::MessagePipeHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %287) #12, !noalias !4
  %288 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %288, align 4, !noalias !4
  %289 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %286, i32* nonnull %288) #12, !noalias !4
  %290 = load i32, i32* %286, align 4, !noalias !4
  %291 = load i32, i32* %288, align 4, !noalias !4
  %292 = load i32, i32* %265, align 4, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #12, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %285) #12, !noalias !4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %296, label %294

294:                                              ; preds = %281
  %295 = call i32 @MojoClose(i32 %292) #12
  br label %296

296:                                              ; preds = %294, %281
  store i32 %290, i32* %265, align 4, !noalias !4
  %297 = bitcast %"class.mojo::ScopedHandleBase"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #12, !noalias !4
  %298 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %9, i64 0, i32 0
  %299 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 %291, i32* %299, align 4, !alias.scope !7, !noalias !4
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %298, %"class.mojo::ScopedHandleBase"* nonnull %3) #12
  %300 = load i32, i32* %299, align 4, !noalias !4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %296
  %303 = call i32 @MojoClose(i32 %300) #12
  br label %304

304:                                              ; preds = %296, %302
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #12, !noalias !4
  %305 = load void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)**, void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)*** %282, align 8
  %306 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)** %305, i64 3
  %307 = load void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::URLLoaderFactory"*, %"class.mojo::PendingReceiver"*)** %306, align 8
  call void %307(%"class.network::mojom::blink::URLLoaderFactory"* %284, %"class.mojo::PendingReceiver"* nonnull %9) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %298) #12
  %308 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %10, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %308, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %267) #12
  %309 = bitcast %"class.mojo::PendingRemote.390"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309)
  %310 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %7, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %310, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %308) #12
  %311 = getelementptr inbounds i8, i8* %13, i64 304
  %312 = bitcast i8* %311 to %"class.blink::ExecutionContext"**
  %313 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %313, i64 0, i32 1
  %315 = bitcast %"class.blink::MojoBindingContext"* %314 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %316 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %315, align 8
  %317 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %316, i64 6
  %318 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %317, align 8
  %319 = call %"class.base::SingleThreadTaskRunner"* %318(%"class.blink::MojoBindingContext"* %314, i8 zeroext 3) #12
  %320 = bitcast %"class.base::SingleThreadTaskRunner"* %319 to %"class.base::SequencedTaskRunner"*
  %321 = bitcast %"class.mojo::PendingRemote.390"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #12
  %322 = getelementptr inbounds i8, i8* %13, i64 280
  %323 = bitcast i8* %322 to %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"**
  %324 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %324, i64 0, i32 1
  %326 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %326, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %310) #12
  call void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %325, %"class.mojo::PendingRemote.390"* nonnull %6, %"class.base::SequencedTaskRunner"* %320) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %326) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %310) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %308) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %267) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #12
  br label %327

327:                                              ; preds = %254, %258, %304
  %328 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 23
  %329 = getelementptr inbounds i8, i8* %13, i64 288
  %330 = bitcast %"class.base::UnguessableToken"* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %330, i64 16, i1 false) #12
  %331 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %331, i8 0, i64 64, i1 false) #12
  %333 = load i8, i8* %332, align 8, !range !3
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %338, label %335

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %337 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %337, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56) %336) #12
  store i8 1, i8* %331, align 8
  br label %338

338:                                              ; preds = %327, %335
  call void @_ZN5blink16FetchRequestData19SetTrustTokenParamsEN4absl8optionalIN7network5mojom5blink16TrustTokenParamsEEE(%"class.blink::FetchRequestData"* %14, %"class.absl::optional"* nonnull %11)
  %339 = load i8, i8* %331, align 8, !range !3
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %342) #12
  store i8 0, i8* %331, align 8
  br label %343

343:                                              ; preds = %338, %341
  ret %"class.blink::FetchRequestData"* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FetchRequestData9SetMethodEN3WTF12AtomicStringE(%"class.blink::FetchRequestData"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i33
  %13 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %12, i33 1) #12
  %14 = extractvalue { i33, i1 } %13, 1
  %15 = extractvalue { i33, i1 } %13, 0
  %16 = icmp slt i33 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %9
  tail call void @llvm.trap() #12
  unreachable

19:                                               ; preds = %9
  %20 = trunc i33 %15 to i32
  store i32 %20, i32* %10, align 4
  br label %21

21:                                               ; preds = %19, %4, %2
  %22 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %23 = bitcast %"class.blink::FetchRequestData"* %0 to i64*
  %24 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  store i64 %22, i64* %23, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %40

40:                                               ; preds = %21, %36, %39
  br i1 %3, label %54, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %54

54:                                               ; preds = %40, %50, %53
  ret void
}

declare %"class.blink::FetchHeaderList"* @_ZNK5blink15FetchHeaderList5CloneEv(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"*, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FetchRequestData19SetTrustTokenParamsEN4absl8optionalIN7network5mojom5blink16TrustTokenParamsEEE(%"class.blink::FetchRequestData"*, %"class.absl::optional"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %63, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %11, label %62, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %12 to i8*
  %15 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 13, i1 false) #12
  %16 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %18 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"* %16, %"class.WTF::Vector"* dereferenceable(16) %17) #12
  %19 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %21 = tail call dereferenceable(16) %"class.WTF::Vector.11"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.11"* %19, %"class.WTF::Vector.11"* dereferenceable(16) %20) #12
  %22 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %26, %13
  %44 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %45 = bitcast %"class.WTF::String"* %22 to i64*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #12
  br label %69

62:                                               ; preds = %7
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %12, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56) %8) #12
  store i8 1, i8* %9, align 8
  br label %69

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %68) #12
  store i8 0, i8* %64, align 8
  br label %69

69:                                               ; preds = %61, %58, %43, %62, %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::Request"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::RequestInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::StringView", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.logging::CheckError", align 8
  %37 = alloca %"class.WTF::StringAppend.479", align 8
  %38 = alloca %"class.WTF::AtomicString", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %"class.WTF::String", align 8
  %41 = alloca %"class.WTF::String", align 8
  %42 = alloca %"class.WTF::String", align 8
  %43 = alloca %"class.WTF::StringView", align 8
  %44 = alloca %"class.WTF::StringView", align 8
  %45 = alloca %"class.WTF::StringView", align 8
  %46 = alloca %"class.WTF::String", align 8
  %47 = alloca %"class.mojo::PendingRemote.390", align 4
  %48 = alloca %"class.mojo::PendingRemote.390", align 4
  %49 = alloca %"class.mojo::ScopedHandleBase", align 4
  %50 = alloca %"class.mojo::MessagePipeHandle", align 4
  %51 = alloca %"class.mojo::MessagePipeHandle", align 4
  %52 = alloca %"class.blink::KURL", align 8
  %53 = alloca %"class.blink::KURL", align 8
  %54 = alloca %"class.WTF::String", align 8
  %55 = alloca %"class.WTF::StringAppend", align 8
  %56 = alloca %"class.WTF::String", align 8
  %57 = alloca %"class.WTF::StringAppend", align 8
  %58 = alloca %"class.WTF::StringView", align 8
  %59 = alloca %"class.mojo::PendingRemote.390", align 4
  %60 = alloca %"class.mojo::PendingReceiver", align 8
  %61 = alloca %"class.mojo::PendingRemote.390", align 4
  %62 = alloca %"class.blink::KURL", align 8
  %63 = alloca %"class.WTF::String", align 8
  %64 = alloca %"class.WTF::StringAppend.416", align 8
  %65 = alloca i32, align 4
  %66 = alloca %"class.WTF::String", align 8
  %67 = alloca %"class.WTF::StringAppend.416", align 8
  %68 = alloca %"class.WTF::String", align 8
  %69 = alloca %"class.WTF::StringAppend.416", align 8
  %70 = alloca %"class.WTF::AtomicString", align 8
  %71 = alloca %"class.network::mojom::blink::TrustTokenParams", align 8
  %72 = alloca %"class.absl::optional", align 8
  %73 = alloca %"class.WTF::String", align 8
  %74 = alloca %"class.WTF::StringAppend.422", align 8
  %75 = alloca %"class.blink::ScriptValue", align 8
  %76 = alloca %"class.WTF::String", align 8
  %77 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %78 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %77) #12
  %79 = icmp eq %"class.blink::SecurityOrigin"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %5
  %81 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %78, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #12
  br label %82

82:                                               ; preds = %5, %80
  %83 = icmp ne %"class.blink::Request"* %1, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %82
  %85 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64 320) #12
  %86 = bitcast i8* %85 to %"class.blink::FetchRequestData"*
  tail call void @_ZN5blink16FetchRequestDataC1EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"* %86, %"class.blink::ExecutionContext"* %77) #12
  %87 = getelementptr inbounds i8, i8* %85, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  %91 = tail call %"class.blink::FetchRequestData"* @_ZN5blink36CreateCopyOfFetchRequestDataForFetchEPNS_11ScriptStateEPKNS_16FetchRequestDataE(%"class.blink::ScriptState"* %0, %"class.blink::FetchRequestData"* %86)
  br label %98

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 3, i32 0, i32 0
  %94 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %93, align 8
  %95 = tail call %"class.blink::FetchRequestData"* @_ZN5blink36CreateCopyOfFetchRequestDataForFetchEPNS_11ScriptStateEPKNS_16FetchRequestDataE(%"class.blink::ScriptState"* %0, %"class.blink::FetchRequestData"* %94)
  %96 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 5, i32 0, i32 0
  %97 = load %"class.blink::AbortSignal"*, %"class.blink::AbortSignal"** %96, align 8
  br label %98

98:                                               ; preds = %84, %92
  %99 = phi %"class.blink::FetchRequestData"* [ %95, %92 ], [ %91, %84 ]
  %100 = phi %"class.blink::AbortSignal"* [ %97, %92 ], [ null, %84 ]
  %101 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %52, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %101) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 112, i1 false)
  %102 = bitcast %"class.blink::ExecutionContext"* %77 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %103 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %103, i64 19
  %105 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %104, align 8
  %106 = tail call dereferenceable(112) %"class.blink::KURL"* %105(%"class.blink::ExecutionContext"* %77) #12
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %52, %"class.blink::KURL"* dereferenceable(112) %106) #12
  br i1 %83, label %387, label %107

107:                                              ; preds = %98
  %108 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %53, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %108) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %53, %"class.blink::KURL"* nonnull dereferenceable(112) %52, %"class.WTF::String"* dereferenceable(8) %2) #12
  %109 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %53) #12
  br i1 %109, label %200, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.WTF::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #12
  %112 = bitcast %"class.WTF::StringAppend"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %159, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %133

123:                                              ; preds = %116
  %124 = zext i32 %122 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #12
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !2

130:                                              ; preds = %123
  call void @llvm.trap() #12
  unreachable

131:                                              ; preds = %123
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %121, align 4
  br label %133

133:                                              ; preds = %131, %116
  %134 = phi i32 [ %132, %131 ], [ %122, %116 ]
  %135 = load atomic i32, i32* %117 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %133
  %139 = zext i32 %134 to i33
  %140 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #12
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %138
  call void @llvm.trap() #12
  unreachable

146:                                              ; preds = %138
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %121, align 4
  br label %148

148:                                              ; preds = %146, %133
  %149 = phi i32 [ %147, %146 ], [ %134, %133 ]
  %150 = load atomic i32, i32* %117 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = add i32 %149, -1
  store i32 %154, i32* %121, align 4
  br label %155

155:                                              ; preds = %153, %148
  %156 = phi i32 [ %154, %153 ], [ %149, %148 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #12
  br label %159

159:                                              ; preds = %110, %155, %158
  %160 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %55, i64 0, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8** %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %55, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %161, align 8
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %55)
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8
  %164 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %165 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %165, i64 3
  %167 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %166, align 8
  call void %167(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %54) #12
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %159
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #12
  br label %183

183:                                              ; preds = %159, %179, %182
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #12
  br label %199

199:                                              ; preds = %183, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %108) #12
  br label %3026

200:                                              ; preds = %107
  %201 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4UserEv(%"class.blink::KURL"* nonnull %53) #12
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %207, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %228

207:                                              ; preds = %200, %203
  %208 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4PassEv(%"class.blink::KURL"* nonnull %53) #12
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %226, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp ne i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %210
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %210
  %223 = phi i32 [ %221, %220 ], [ %219, %210 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %226

226:                                              ; preds = %207, %225, %222
  %227 = phi i1 [ %213, %222 ], [ %213, %225 ], [ false, %207 ]
  br i1 %202, label %242, label %228

228:                                              ; preds = %203, %226
  %229 = phi i1 [ %227, %226 ], [ true, %203 ]
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %228
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %228
  %239 = phi i32 [ %237, %236 ], [ %235, %228 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #12
  br i1 %229, label %244, label %334

242:                                              ; preds = %226, %238
  %243 = phi i1 [ %227, %226 ], [ %229, %238 ]
  br i1 %243, label %244, label %334

244:                                              ; preds = %241, %242
  %245 = bitcast %"class.WTF::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #12
  %246 = bitcast %"class.WTF::StringAppend"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #12
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %293, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %267

257:                                              ; preds = %250
  %258 = zext i32 %256 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #12
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !2

264:                                              ; preds = %257
  call void @llvm.trap() #12
  unreachable

265:                                              ; preds = %257
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %255, align 4
  br label %267

267:                                              ; preds = %265, %250
  %268 = phi i32 [ %266, %265 ], [ %256, %250 ]
  %269 = load atomic i32, i32* %251 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %282

272:                                              ; preds = %267
  %273 = zext i32 %268 to i33
  %274 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #12
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !2

279:                                              ; preds = %272
  call void @llvm.trap() #12
  unreachable

280:                                              ; preds = %272
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %255, align 4
  br label %282

282:                                              ; preds = %280, %267
  %283 = phi i32 [ %281, %280 ], [ %268, %267 ]
  %284 = load atomic i32, i32* %251 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %282
  %288 = add i32 %283, -1
  store i32 %288, i32* %255, align 4
  br label %289

289:                                              ; preds = %287, %282
  %290 = phi i32 [ %288, %287 ], [ %283, %282 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #12
  br label %293

293:                                              ; preds = %244, %289, %292
  %294 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %57, i64 0, i32 0
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i8** %294, align 8
  %295 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %57, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %248, %"class.WTF::StringImpl"** %295, align 8
  %296 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %57)
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %296, %"class.WTF::StringImpl"** %297, align 8
  %298 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %299 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %299, i64 3
  %301 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %300, align 8
  call void %301(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %56) #12
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %293
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #12
  br label %317

317:                                              ; preds = %293, %313, %316
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #12
  br label %333

333:                                              ; preds = %317, %329, %332
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %108) #12
  br label %3026

334:                                              ; preds = %241, %242
  %335 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 1
  %336 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %335, %"class.blink::KURL"* nonnull dereferenceable(112) %53) #12
  %337 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %338 = bitcast %"class.WTF::StringView"* %58 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %339, align 8
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %58, i64 0, i32 2
  store i32 4, i32* %340, align 8
  %341 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %53, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %58) #12
  br i1 %341, label %342, label %386

342:                                              ; preds = %334
  %343 = bitcast %"class.mojo::PendingRemote.390"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #12
  %344 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %344, align 4
  %345 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %59, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %345, align 4
  %346 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %59, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %346) #12
  %347 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %348 = call dereferenceable(88) %"class.blink::PublicURLManager"* @_ZN5blink16ExecutionContext19GetPublicURLManagerEv(%"class.blink::ExecutionContext"* %347) #12
  %349 = bitcast %"class.mojo::MessagePipeHandle"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %349) #12, !noalias !10
  %350 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %50, i64 0, i32 0, i32 0
  store i32 0, i32* %350, align 4, !noalias !10
  %351 = bitcast %"class.mojo::MessagePipeHandle"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %351) #12, !noalias !10
  %352 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %51, i64 0, i32 0, i32 0
  store i32 0, i32* %352, align 4, !noalias !10
  %353 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %350, i32* nonnull %352) #12, !noalias !10
  %354 = load i32, i32* %350, align 4, !noalias !10
  %355 = load i32, i32* %352, align 4, !noalias !10
  %356 = load i32, i32* %344, align 4, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %351) #12, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349) #12, !noalias !10
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %360, label %358

358:                                              ; preds = %342
  %359 = call i32 @MojoClose(i32 %356) #12
  br label %360

360:                                              ; preds = %358, %342
  store i32 %354, i32* %344, align 4, !noalias !10
  %361 = bitcast %"class.mojo::ScopedHandleBase"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %361) #12, !noalias !10
  %362 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %60, i64 0, i32 0
  %363 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %49, i64 0, i32 0, i32 0, i32 0
  store i32 %355, i32* %363, align 4, !alias.scope !13, !noalias !10
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %362, %"class.mojo::ScopedHandleBase"* nonnull %49) #12
  %364 = load i32, i32* %363, align 4, !noalias !10
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %368, label %366

366:                                              ; preds = %360
  %367 = call i32 @MojoClose(i32 %364) #12
  br label %368

368:                                              ; preds = %360, %366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %361) #12, !noalias !10
  call void @_ZN5blink16PublicURLManager7ResolveERKNS_4KURLEN4mojo15PendingReceiverIN7network5mojom5blink16URLLoaderFactoryEEE(%"class.blink::PublicURLManager"* %348, %"class.blink::KURL"* nonnull dereferenceable(112) %53, %"class.mojo::PendingReceiver"* nonnull %60) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %362) #12
  %369 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %61, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %369, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %346) #12
  %370 = bitcast %"class.mojo::PendingRemote.390"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370)
  %371 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %48, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %371, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %369) #12
  %372 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 24, i32 0, i32 0
  %373 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %372, align 8
  %374 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %373, i64 0, i32 1
  %375 = bitcast %"class.blink::MojoBindingContext"* %374 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %376 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %375, align 8
  %377 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %376, i64 6
  %378 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %377, align 8
  %379 = call %"class.base::SingleThreadTaskRunner"* %378(%"class.blink::MojoBindingContext"* %374, i8 zeroext 3) #12
  %380 = bitcast %"class.base::SingleThreadTaskRunner"* %379 to %"class.base::SequencedTaskRunner"*
  %381 = bitcast %"class.mojo::PendingRemote.390"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381) #12
  %382 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 22, i32 0, i32 0, i32 0
  %383 = load %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %382, align 8
  %384 = getelementptr inbounds %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %383, i64 0, i32 1
  %385 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %47, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %385, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %371) #12
  call void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %384, %"class.mojo::PendingRemote.390"* nonnull %47, %"class.base::SequencedTaskRunner"* %380) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %385) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %371) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %369) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %346) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #12
  br label %386

386:                                              ; preds = %334, %368
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %108) #12
  br label %387

387:                                              ; preds = %386, %98
  %388 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 12, i32 0, i32 0
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %391, label %471

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 8, i32 0
  %393 = load i32, i32* %392, align 8
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %471

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load i64*, i64** %396, align 8
  %398 = icmp eq i64* %397, null
  br i1 %398, label %425, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5
  %401 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %400) #12
  %402 = icmp eq %"class.v8::Value"* %401, null
  br i1 %402, label %471, label %403

403:                                              ; preds = %399
  %404 = bitcast %"class.v8::Value"* %401 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = and i64 %405, 3
  %407 = icmp eq i64 %406, 1
  br i1 %407, label %408, label %471

408:                                              ; preds = %403
  %409 = add i64 %405, -1
  %410 = inttoptr i64 %409 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = and i64 %405, -4294967296
  %413 = zext i32 %411 to i64
  %414 = or i64 %412, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load i16, i16* %416, align 2
  %418 = icmp eq i16 %417, 67
  br i1 %418, label %419, label %471

419:                                              ; preds = %408
  %420 = add i64 %405, 23
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = and i32 %422, -2
  %424 = icmp eq i32 %423, 10
  br i1 %424, label %425, label %471

425:                                              ; preds = %419, %395
  %426 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 15, i32 0, i32 0
  %427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  %428 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %428, label %429, label %471

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 16, i32 0, i32 0
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %433, label %471

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 13, i32 0, i32 0
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %434, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %437, label %471

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 7, i32 0, i32 0
  %439 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8
  %440 = icmp eq %"class.WTF::StringImpl"* %439, null
  br i1 %440, label %441, label %471

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 6, i32 0, i32 0
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %445, label %471

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 14, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %449, label %471

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 10, i32 0, i32 0
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %450, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %453, label %471

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 2
  %455 = load i8, i8* %454, align 1, !range !3
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %457, label %471

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 9, i32 0, i32 0
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %461, label %471

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 3
  %463 = load i8, i8* %462, align 2, !range !3
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %471

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 18, i32 0, i32 0
  %467 = load %"class.blink::TrustToken"*, %"class.blink::TrustToken"** %466, align 8
  %468 = icmp eq %"class.blink::TrustToken"* %467, null
  br i1 %468, label %469, label %471

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 15, i32 0, i32 0
  br label %1063

471:                                              ; preds = %465, %419, %408, %403, %399, %387, %391, %425, %429, %433, %437, %441, %445, %449, %453, %457, %461
  %472 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  %473 = load i32, i32* %472, align 4
  %474 = icmp eq i32 %473, 4
  br i1 %474, label %475, label %476

475:                                              ; preds = %471
  store i32 0, i32* %472, align 4
  br label %476

476:                                              ; preds = %475, %471
  %477 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 20
  store i8 0, i8* %477, align 1
  %478 = bitcast %"class.WTF::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i64 12) #12
  %479 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478)
  %481 = icmp eq %"class.WTF::StringImpl"* %480, null
  br i1 %481, label %482, label %484

482:                                              ; preds = %476
  %483 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %533

484:                                              ; preds = %476
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 acquire, align 4
  %487 = and i32 %486, 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %508, label %489

489:                                              ; preds = %484
  %490 = load atomic i32, i32* %485 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %505

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  %496 = zext i32 %495 to i33
  %497 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %496, i33 1) #12
  %498 = extractvalue { i33, i1 } %497, 1
  %499 = extractvalue { i33, i1 } %497, 0
  %500 = icmp slt i33 %499, 0
  %501 = or i1 %498, %500
  br i1 %501, label %502, label %503, !prof !2

502:                                              ; preds = %493
  call void @llvm.trap() #12
  unreachable

503:                                              ; preds = %493
  %504 = trunc i33 %499 to i32
  store i32 %504, i32* %494, align 4
  br label %505

505:                                              ; preds = %489, %503
  %506 = ptrtoint %"class.WTF::StringImpl"* %480 to i64
  %507 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %513

508:                                              ; preds = %484
  %509 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %480) #12
  %510 = ptrtoint %"class.WTF::StringImpl"* %509 to i64
  %511 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  %512 = icmp eq %"class.WTF::StringImpl"* %509, null
  br i1 %512, label %533, label %513

513:                                              ; preds = %505, %508
  %514 = phi %"class.WTF::AtomicString"* [ %507, %505 ], [ %511, %508 ]
  %515 = phi i64 [ %506, %505 ], [ %510, %508 ]
  %516 = phi %"class.WTF::StringImpl"* [ %480, %505 ], [ %509, %508 ]
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %533

521:                                              ; preds = %513
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %523 = load i32, i32* %522, align 4
  %524 = zext i32 %523 to i33
  %525 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %524, i33 1) #12
  %526 = extractvalue { i33, i1 } %525, 1
  %527 = extractvalue { i33, i1 } %525, 0
  %528 = icmp slt i33 %527, 0
  %529 = or i1 %526, %528
  br i1 %529, label %530, label %531, !prof !2

530:                                              ; preds = %521
  call void @llvm.trap() #12
  unreachable

531:                                              ; preds = %521
  %532 = trunc i33 %527 to i32
  store i32 %532, i32* %522, align 4
  br label %533

533:                                              ; preds = %482, %531, %513, %508
  %534 = phi i1 [ false, %531 ], [ false, %513 ], [ true, %508 ], [ true, %482 ]
  %535 = phi %"class.WTF::AtomicString"* [ %514, %531 ], [ %514, %513 ], [ %511, %508 ], [ %483, %482 ]
  %536 = phi i64 [ %515, %531 ], [ %515, %513 ], [ %510, %508 ], [ 0, %482 ]
  %537 = phi %"class.WTF::StringImpl"* [ %516, %531 ], [ %516, %513 ], [ null, %508 ], [ null, %482 ]
  %538 = bitcast %"class.WTF::AtomicString"* %535 to i64*
  %539 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %535, i64 0, i32 0, i32 0, i32 0
  %540 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %539, align 8
  store i64 %536, i64* %538, align 8
  %541 = icmp eq %"class.WTF::StringImpl"* %540, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %533
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %540) #12
  br label %555

555:                                              ; preds = %533, %551, %554
  br i1 %534, label %569, label %556

556:                                              ; preds = %555
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #12
  br label %569

569:                                              ; preds = %555, %565, %568
  br i1 %481, label %583, label %570

570:                                              ; preds = %569
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = load atomic i32, i32* %571 monotonic, align 4
  %573 = and i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %576 = load i32, i32* %575, align 4
  br i1 %574, label %577, label %579

577:                                              ; preds = %570
  %578 = add i32 %576, -1
  store i32 %578, i32* %575, align 4
  br label %579

579:                                              ; preds = %577, %570
  %580 = phi i32 [ %578, %577 ], [ %576, %570 ]
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %583

582:                                              ; preds = %579
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %480) #12
  br label %583

583:                                              ; preds = %582, %579, %569
  %584 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 8
  store i32 1, i32* %584, align 8
  %585 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 15, i32 0, i32 0
  %586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %585, align 8
  %587 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 15, i32 0, i32 0
  %588 = icmp eq %"class.WTF::StringImpl"* %586, null
  br i1 %588, label %1063, label %589

589:                                              ; preds = %583
  %590 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 15
  %591 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %590, i64 0, i32 0, i32 0
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %586, i64 0, i32 1
  %593 = load i32, i32* %592, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %614

595:                                              ; preds = %589
  %596 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  %597 = bitcast %"class.WTF::AtomicString"* %596 to i64*
  %598 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %596, i64 0, i32 0, i32 0, i32 0
  %599 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %598, align 8
  store i64 0, i64* %597, align 8
  %600 = icmp eq %"class.WTF::StringImpl"* %599, null
  br i1 %600, label %1063, label %601

601:                                              ; preds = %595
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %599, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %603 = load atomic i32, i32* %602 monotonic, align 4
  %604 = and i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %599, i64 0, i32 0
  %607 = load i32, i32* %606, align 4
  br i1 %605, label %608, label %610

608:                                              ; preds = %601
  %609 = add i32 %607, -1
  store i32 %609, i32* %606, align 4
  br label %610

610:                                              ; preds = %608, %601
  %611 = phi i32 [ %609, %608 ], [ %607, %601 ]
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %613, label %1063

613:                                              ; preds = %610
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %599) #12
  br label %1063

614:                                              ; preds = %589
  %615 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %62, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %615) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %615, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %62, %"class.blink::KURL"* nonnull dereferenceable(112) %52, %"class.WTF::String"* dereferenceable(8) %590) #12
  %616 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %62) #12
  br i1 %616, label %767, label %617

617:                                              ; preds = %614
  %618 = bitcast %"class.WTF::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %618) #12
  %619 = bitcast %"class.WTF::StringAppend.416"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #12
  %620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %591, align 8
  %621 = icmp eq %"class.WTF::StringImpl"* %620, null
  br i1 %621, label %697, label %622

622:                                              ; preds = %617
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load atomic i32, i32* %623 monotonic, align 4
  %625 = and i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  br i1 %626, label %629, label %639

629:                                              ; preds = %622
  %630 = zext i32 %628 to i33
  %631 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %630, i33 1) #12
  %632 = extractvalue { i33, i1 } %631, 1
  %633 = extractvalue { i33, i1 } %631, 0
  %634 = icmp slt i33 %633, 0
  %635 = or i1 %632, %634
  br i1 %635, label %636, label %637, !prof !2

636:                                              ; preds = %629
  call void @llvm.trap() #12
  unreachable

637:                                              ; preds = %629
  %638 = trunc i33 %633 to i32
  store i32 %638, i32* %627, align 4
  br label %639

639:                                              ; preds = %637, %622
  %640 = phi i32 [ %638, %637 ], [ %628, %622 ]
  %641 = load atomic i32, i32* %623 monotonic, align 4
  %642 = and i32 %641, 2
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %644, label %654

644:                                              ; preds = %639
  %645 = zext i32 %640 to i33
  %646 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %645, i33 1) #12
  %647 = extractvalue { i33, i1 } %646, 1
  %648 = extractvalue { i33, i1 } %646, 0
  %649 = icmp slt i33 %648, 0
  %650 = or i1 %647, %649
  br i1 %650, label %651, label %652, !prof !2

651:                                              ; preds = %644
  call void @llvm.trap() #12
  unreachable

652:                                              ; preds = %644
  %653 = trunc i33 %648 to i32
  store i32 %653, i32* %627, align 4
  br label %654

654:                                              ; preds = %652, %639
  %655 = phi i32 [ %653, %652 ], [ %640, %639 ]
  %656 = load atomic i32, i32* %623 monotonic, align 4
  %657 = and i32 %656, 2
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %661

659:                                              ; preds = %654
  %660 = add i32 %655, -1
  store i32 %660, i32* %627, align 4
  br label %661

661:                                              ; preds = %659, %654
  %662 = phi i32 [ %660, %659 ], [ %655, %654 ]
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %665

664:                                              ; preds = %661
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #12
  br label %665

665:                                              ; preds = %661, %664
  %666 = load atomic i32, i32* %623 monotonic, align 4, !noalias !16
  %667 = and i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = load i32, i32* %627, align 4
  br i1 %668, label %670, label %680

670:                                              ; preds = %665
  %671 = zext i32 %669 to i33
  %672 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %671, i33 1) #12
  %673 = extractvalue { i33, i1 } %672, 1
  %674 = extractvalue { i33, i1 } %672, 0
  %675 = icmp slt i33 %674, 0
  %676 = or i1 %673, %675
  br i1 %676, label %677, label %678, !prof !2

677:                                              ; preds = %670
  call void @llvm.trap() #12, !noalias !16
  unreachable

678:                                              ; preds = %670
  %679 = trunc i33 %674 to i32
  store i32 %679, i32* %627, align 4, !noalias !16
  br label %680

680:                                              ; preds = %665, %678
  %681 = phi i32 [ %679, %678 ], [ %669, %665 ]
  %682 = bitcast %"class.WTF::StringAppend.416"* %64 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.3 to i64), i64* %682, align 8, !alias.scope !16
  %683 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %64, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %620, %"class.WTF::StringImpl"** %683, align 8, !alias.scope !16
  %684 = load atomic i32, i32* %623 monotonic, align 4, !noalias !16
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %687, label %701

687:                                              ; preds = %680
  %688 = zext i32 %681 to i33
  %689 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %688, i33 1) #12
  %690 = extractvalue { i33, i1 } %689, 1
  %691 = extractvalue { i33, i1 } %689, 0
  %692 = icmp slt i33 %691, 0
  %693 = or i1 %690, %692
  br i1 %693, label %694, label %695, !prof !2

694:                                              ; preds = %687
  call void @llvm.trap() #12, !noalias !16
  unreachable

695:                                              ; preds = %687
  %696 = trunc i33 %691 to i32
  store i32 %696, i32* %627, align 4, !noalias !16
  br label %701

697:                                              ; preds = %617
  %698 = bitcast %"class.WTF::StringAppend.416"* %64 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.3 to i64), i64* %698, align 8, !alias.scope !16
  %699 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %64, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %699, align 8, !alias.scope !16
  %700 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %64, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8** %700, align 8, !alias.scope !16
  br label %713

701:                                              ; preds = %695, %680
  %702 = phi i32 [ %696, %695 ], [ %681, %680 ]
  %703 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %64, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8** %703, align 8, !alias.scope !16
  %704 = load atomic i32, i32* %623 monotonic, align 4, !noalias !16
  %705 = and i32 %704, 2
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %709

707:                                              ; preds = %701
  %708 = add i32 %702, -1
  store i32 %708, i32* %627, align 4, !noalias !16
  br label %709

709:                                              ; preds = %707, %701
  %710 = phi i32 [ %708, %707 ], [ %702, %701 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #12, !noalias !16
  br label %713

713:                                              ; preds = %697, %709, %712
  %714 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.416"* nonnull %64)
  %715 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %714, %"class.WTF::StringImpl"** %715, align 8
  %716 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %717 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %716, align 8
  %718 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %717, i64 3
  %719 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %718, align 8
  call void %719(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %63) #12
  %720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %721 = icmp eq %"class.WTF::StringImpl"* %720, null
  br i1 %721, label %735, label %722

722:                                              ; preds = %713
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %724 = load atomic i32, i32* %723 monotonic, align 4
  %725 = and i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  br i1 %726, label %729, label %731

729:                                              ; preds = %722
  %730 = add i32 %728, -1
  store i32 %730, i32* %727, align 4
  br label %731

731:                                              ; preds = %729, %722
  %732 = phi i32 [ %730, %729 ], [ %728, %722 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %735

734:                                              ; preds = %731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %720) #12
  br label %735

735:                                              ; preds = %713, %731, %734
  %736 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %64, i64 0, i32 0, i32 1, i32 0, i32 0
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %736, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %735
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #12
  br label %752

752:                                              ; preds = %735, %748, %751
  br i1 %621, label %766, label %753

753:                                              ; preds = %752
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 0
  %759 = load i32, i32* %758, align 4
  br i1 %757, label %760, label %762

760:                                              ; preds = %753
  %761 = add i32 %759, -1
  store i32 %761, i32* %758, align 4
  br label %762

762:                                              ; preds = %760, %753
  %763 = phi i32 [ %761, %760 ], [ %759, %753 ]
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %766

765:                                              ; preds = %762
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #12
  br label %766

766:                                              ; preds = %752, %762, %765
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %619) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %618) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %62) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %615) #12
  br label %3026

767:                                              ; preds = %614
  %768 = bitcast %"class.WTF::StringView"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %768)
  %769 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %770 = bitcast %"class.WTF::StringView"* %45 to i64*
  store i64 %769, i64* %770, align 8
  %771 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8** %771, align 8
  %772 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 2
  store i32 5, i32* %772, align 8
  %773 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %62, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %45) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %768)
  br i1 %773, label %774, label %806

774:                                              ; preds = %767
  %775 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* nonnull %62) #12
  %776 = icmp eq %"class.WTF::StringImpl"* %775, null
  br i1 %776, label %781, label %777

777:                                              ; preds = %774
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 1
  %779 = load i32, i32* %778, align 4
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %781, label %806

781:                                              ; preds = %774, %777
  %782 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* nonnull %62) #12
  %783 = bitcast %"class.WTF::StringView"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %783) #12
  %784 = icmp eq %"class.WTF::StringImpl"* %782, null
  br i1 %784, label %785, label %789

785:                                              ; preds = %781
  %786 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 1
  store i8* null, i8** %786, align 8
  %787 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %788 = bitcast %"class.WTF::StringView"* %43 to i64*
  store i64 %787, i64* %788, align 8
  br label %797

789:                                              ; preds = %781
  %790 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 0
  store %"class.WTF::StringImpl"* %782, %"class.WTF::StringImpl"** %790, align 8
  %791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 0, i32 1
  %792 = load i32, i32* %791, align 4
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 1
  %794 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 1
  %795 = bitcast i8** %794 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %793, %"class.WTF::StringImpl"** %795, align 8
  %796 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %797

797:                                              ; preds = %789, %785
  %798 = phi i64 [ %796, %789 ], [ %787, %785 ]
  %799 = phi i32 [ %792, %789 ], [ 0, %785 ]
  %800 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 2
  store i32 %799, i32* %800, align 8
  %801 = bitcast %"class.WTF::StringView"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %801) #12
  %802 = bitcast %"class.WTF::StringView"* %44 to i64*
  store i64 %798, i64* %802, align 8
  %803 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %803, align 8
  %804 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 2
  store i32 6, i32* %804, align 8
  %805 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %43, %"class.WTF::StringView"* nonnull dereferenceable(24) %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %801) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %783) #12
  br i1 %805, label %823, label %806

806:                                              ; preds = %767, %777, %797
  %807 = phi %"class.WTF::StringImpl"* [ %782, %797 ], [ undef, %777 ], [ undef, %767 ]
  %808 = phi %"class.WTF::StringImpl"* [ %775, %797 ], [ %775, %777 ], [ undef, %767 ]
  %809 = phi i1 [ true, %797 ], [ true, %777 ], [ false, %767 ]
  %810 = phi i1 [ true, %797 ], [ false, %777 ], [ false, %767 ]
  %811 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %62) #12
  %812 = call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %78, %"class.blink::SecurityOrigin"* %811) #12
  %813 = xor i1 %812, true
  %814 = icmp eq %"class.blink::SecurityOrigin"* %811, null
  br i1 %814, label %822, label %815

815:                                              ; preds = %806
  %816 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %811, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %816) #12
  %817 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %811, i64 0, i32 0, i32 0, i32 0, i32 0
  %818 = load i32, i32* %817, align 4
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %822

820:                                              ; preds = %815
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %811) #12
  %821 = bitcast %"class.blink::SecurityOrigin"* %811 to i8*
  call void @free(i8* %821) #12
  br i1 %810, label %823, label %842

822:                                              ; preds = %815, %806
  br i1 %810, label %823, label %842

823:                                              ; preds = %797, %820, %822
  %824 = phi %"class.WTF::StringImpl"* [ %807, %822 ], [ %807, %820 ], [ %782, %797 ]
  %825 = phi %"class.WTF::StringImpl"* [ %808, %822 ], [ %808, %820 ], [ %775, %797 ]
  %826 = phi i1 [ %809, %822 ], [ %809, %820 ], [ true, %797 ]
  %827 = phi i1 [ %813, %822 ], [ %813, %820 ], [ true, %797 ]
  %828 = icmp eq %"class.WTF::StringImpl"* %824, null
  br i1 %828, label %842, label %829

829:                                              ; preds = %823
  %830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %831 = load atomic i32, i32* %830 monotonic, align 4
  %832 = and i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 0
  %835 = load i32, i32* %834, align 4
  br i1 %833, label %836, label %838

836:                                              ; preds = %829
  %837 = add i32 %835, -1
  store i32 %837, i32* %834, align 4
  br label %838

838:                                              ; preds = %836, %829
  %839 = phi i32 [ %837, %836 ], [ %835, %829 ]
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %842

841:                                              ; preds = %838
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %824) #12
  br i1 %826, label %846, label %863

842:                                              ; preds = %838, %823, %820, %822
  %843 = phi %"class.WTF::StringImpl"* [ %808, %822 ], [ %808, %820 ], [ %825, %823 ], [ %825, %838 ]
  %844 = phi i1 [ %809, %822 ], [ %809, %820 ], [ %826, %823 ], [ %826, %838 ]
  %845 = phi i1 [ %813, %822 ], [ %813, %820 ], [ %827, %823 ], [ %827, %838 ]
  br i1 %844, label %846, label %863

846:                                              ; preds = %841, %842
  %847 = phi i1 [ %827, %841 ], [ %845, %842 ]
  %848 = phi %"class.WTF::StringImpl"* [ %825, %841 ], [ %843, %842 ]
  %849 = icmp eq %"class.WTF::StringImpl"* %848, null
  br i1 %849, label %863, label %850

850:                                              ; preds = %846
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %859

857:                                              ; preds = %850
  %858 = add i32 %856, -1
  store i32 %858, i32* %855, align 4
  br label %859

859:                                              ; preds = %857, %850
  %860 = phi i32 [ %858, %857 ], [ %856, %850 ]
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %848) #12
  br i1 %847, label %865, label %971

863:                                              ; preds = %859, %846, %841, %842
  %864 = phi i1 [ %827, %841 ], [ %845, %842 ], [ %847, %846 ], [ %847, %859 ]
  br i1 %864, label %865, label %971

865:                                              ; preds = %862, %863
  %866 = bitcast %"class.WTF::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %866)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i64 12) #12
  %867 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %868 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %867, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %866)
  %869 = icmp eq %"class.WTF::StringImpl"* %868, null
  br i1 %869, label %870, label %872

870:                                              ; preds = %865
  %871 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %921

872:                                              ; preds = %865
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %868, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load atomic i32, i32* %873 acquire, align 4
  %875 = and i32 %874, 4
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %896, label %877

877:                                              ; preds = %872
  %878 = load atomic i32, i32* %873 monotonic, align 4
  %879 = and i32 %878, 2
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %893

881:                                              ; preds = %877
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %868, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  %884 = zext i32 %883 to i33
  %885 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %884, i33 1) #12
  %886 = extractvalue { i33, i1 } %885, 1
  %887 = extractvalue { i33, i1 } %885, 0
  %888 = icmp slt i33 %887, 0
  %889 = or i1 %886, %888
  br i1 %889, label %890, label %891, !prof !2

890:                                              ; preds = %881
  call void @llvm.trap() #12
  unreachable

891:                                              ; preds = %881
  %892 = trunc i33 %887 to i32
  store i32 %892, i32* %882, align 4
  br label %893

893:                                              ; preds = %877, %891
  %894 = ptrtoint %"class.WTF::StringImpl"* %868 to i64
  %895 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %901

896:                                              ; preds = %872
  %897 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %868) #12
  %898 = ptrtoint %"class.WTF::StringImpl"* %897 to i64
  %899 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  %900 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %900, label %921, label %901

901:                                              ; preds = %893, %896
  %902 = phi %"class.WTF::AtomicString"* [ %895, %893 ], [ %899, %896 ]
  %903 = phi i64 [ %894, %893 ], [ %898, %896 ]
  %904 = phi %"class.WTF::StringImpl"* [ %868, %893 ], [ %897, %896 ]
  %905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %904, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %906 = load atomic i32, i32* %905 monotonic, align 4
  %907 = and i32 %906, 2
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %921

909:                                              ; preds = %901
  %910 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %904, i64 0, i32 0
  %911 = load i32, i32* %910, align 4
  %912 = zext i32 %911 to i33
  %913 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %912, i33 1) #12
  %914 = extractvalue { i33, i1 } %913, 1
  %915 = extractvalue { i33, i1 } %913, 0
  %916 = icmp slt i33 %915, 0
  %917 = or i1 %914, %916
  br i1 %917, label %918, label %919, !prof !2

918:                                              ; preds = %909
  call void @llvm.trap() #12
  unreachable

919:                                              ; preds = %909
  %920 = trunc i33 %915 to i32
  store i32 %920, i32* %910, align 4
  br label %921

921:                                              ; preds = %870, %919, %901, %896
  %922 = phi i1 [ false, %919 ], [ false, %901 ], [ true, %896 ], [ true, %870 ]
  %923 = phi %"class.WTF::AtomicString"* [ %902, %919 ], [ %902, %901 ], [ %899, %896 ], [ %871, %870 ]
  %924 = phi i64 [ %903, %919 ], [ %903, %901 ], [ %898, %896 ], [ 0, %870 ]
  %925 = phi %"class.WTF::StringImpl"* [ %904, %919 ], [ %904, %901 ], [ null, %896 ], [ null, %870 ]
  %926 = bitcast %"class.WTF::AtomicString"* %923 to i64*
  %927 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %923, i64 0, i32 0, i32 0, i32 0
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %927, align 8
  store i64 %924, i64* %926, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %943, label %930

930:                                              ; preds = %921
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %939

937:                                              ; preds = %930
  %938 = add i32 %936, -1
  store i32 %938, i32* %935, align 4
  br label %939

939:                                              ; preds = %937, %930
  %940 = phi i32 [ %938, %937 ], [ %936, %930 ]
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %943

942:                                              ; preds = %939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #12
  br label %943

943:                                              ; preds = %921, %939, %942
  br i1 %922, label %957, label %944

944:                                              ; preds = %943
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %946 = load atomic i32, i32* %945 monotonic, align 4
  %947 = and i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 0
  %950 = load i32, i32* %949, align 4
  br i1 %948, label %951, label %953

951:                                              ; preds = %944
  %952 = add i32 %950, -1
  store i32 %952, i32* %949, align 4
  br label %953

953:                                              ; preds = %951, %944
  %954 = phi i32 [ %952, %951 ], [ %950, %944 ]
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %957

956:                                              ; preds = %953
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %925) #12
  br label %957

957:                                              ; preds = %943, %953, %956
  br i1 %869, label %1062, label %958

958:                                              ; preds = %957
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %868, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %960 = load atomic i32, i32* %959 monotonic, align 4
  %961 = and i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %868, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  br i1 %962, label %965, label %967

965:                                              ; preds = %958
  %966 = add i32 %964, -1
  store i32 %966, i32* %963, align 4
  br label %967

967:                                              ; preds = %965, %958
  %968 = phi i32 [ %966, %965 ], [ %964, %958 ]
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %1062

970:                                              ; preds = %967
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %868) #12
  br label %1062

971:                                              ; preds = %862, %863
  %972 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %62, i64 0, i32 4, i32 0, i32 0
  %973 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %972, align 8
  %974 = icmp eq %"class.WTF::StringImpl"* %973, null
  br i1 %974, label %975, label %977

975:                                              ; preds = %971
  %976 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %1026

977:                                              ; preds = %971
  %978 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %973, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %979 = load atomic i32, i32* %978 acquire, align 4
  %980 = and i32 %979, 4
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %1001, label %982

982:                                              ; preds = %977
  %983 = load atomic i32, i32* %978 monotonic, align 4
  %984 = and i32 %983, 2
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %986, label %998

986:                                              ; preds = %982
  %987 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %973, i64 0, i32 0
  %988 = load i32, i32* %987, align 4
  %989 = zext i32 %988 to i33
  %990 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %989, i33 1) #12
  %991 = extractvalue { i33, i1 } %990, 1
  %992 = extractvalue { i33, i1 } %990, 0
  %993 = icmp slt i33 %992, 0
  %994 = or i1 %991, %993
  br i1 %994, label %995, label %996, !prof !2

995:                                              ; preds = %986
  call void @llvm.trap() #12
  unreachable

996:                                              ; preds = %986
  %997 = trunc i33 %992 to i32
  store i32 %997, i32* %987, align 4
  br label %998

998:                                              ; preds = %982, %996
  %999 = ptrtoint %"class.WTF::StringImpl"* %973 to i64
  %1000 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  br label %1006

1001:                                             ; preds = %977
  %1002 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %973) #12
  %1003 = ptrtoint %"class.WTF::StringImpl"* %1002 to i64
  %1004 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 7
  %1005 = icmp eq %"class.WTF::StringImpl"* %1002, null
  br i1 %1005, label %1026, label %1006

1006:                                             ; preds = %998, %1001
  %1007 = phi %"class.WTF::AtomicString"* [ %1000, %998 ], [ %1004, %1001 ]
  %1008 = phi i64 [ %999, %998 ], [ %1003, %1001 ]
  %1009 = phi %"class.WTF::StringImpl"* [ %973, %998 ], [ %1002, %1001 ]
  %1010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1009, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1011 = load atomic i32, i32* %1010 monotonic, align 4
  %1012 = and i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1014, label %1026

1014:                                             ; preds = %1006
  %1015 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1009, i64 0, i32 0
  %1016 = load i32, i32* %1015, align 4
  %1017 = zext i32 %1016 to i33
  %1018 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1017, i33 1) #12
  %1019 = extractvalue { i33, i1 } %1018, 1
  %1020 = extractvalue { i33, i1 } %1018, 0
  %1021 = icmp slt i33 %1020, 0
  %1022 = or i1 %1019, %1021
  br i1 %1022, label %1023, label %1024, !prof !2

1023:                                             ; preds = %1014
  call void @llvm.trap() #12
  unreachable

1024:                                             ; preds = %1014
  %1025 = trunc i33 %1020 to i32
  store i32 %1025, i32* %1015, align 4
  br label %1026

1026:                                             ; preds = %975, %1024, %1006, %1001
  %1027 = phi i1 [ false, %1024 ], [ false, %1006 ], [ true, %1001 ], [ true, %975 ]
  %1028 = phi %"class.WTF::AtomicString"* [ %1007, %1024 ], [ %1007, %1006 ], [ %1004, %1001 ], [ %976, %975 ]
  %1029 = phi i64 [ %1008, %1024 ], [ %1008, %1006 ], [ %1003, %1001 ], [ 0, %975 ]
  %1030 = phi %"class.WTF::StringImpl"* [ %1009, %1024 ], [ %1009, %1006 ], [ null, %1001 ], [ null, %975 ]
  %1031 = bitcast %"class.WTF::AtomicString"* %1028 to i64*
  %1032 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1028, i64 0, i32 0, i32 0, i32 0
  %1033 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1032, align 8
  store i64 %1029, i64* %1031, align 8
  %1034 = icmp eq %"class.WTF::StringImpl"* %1033, null
  br i1 %1034, label %1048, label %1035

1035:                                             ; preds = %1026
  %1036 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1037 = load atomic i32, i32* %1036 monotonic, align 4
  %1038 = and i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 0
  %1041 = load i32, i32* %1040, align 4
  br i1 %1039, label %1042, label %1044

1042:                                             ; preds = %1035
  %1043 = add i32 %1041, -1
  store i32 %1043, i32* %1040, align 4
  br label %1044

1044:                                             ; preds = %1042, %1035
  %1045 = phi i32 [ %1043, %1042 ], [ %1041, %1035 ]
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1044
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1033) #12
  br label %1048

1048:                                             ; preds = %1026, %1044, %1047
  br i1 %1027, label %1062, label %1049

1049:                                             ; preds = %1048
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1030, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1030, i64 0, i32 0
  %1055 = load i32, i32* %1054, align 4
  br i1 %1053, label %1056, label %1058

1056:                                             ; preds = %1049
  %1057 = add i32 %1055, -1
  store i32 %1057, i32* %1054, align 4
  br label %1058

1058:                                             ; preds = %1056, %1049
  %1059 = phi i32 [ %1057, %1056 ], [ %1055, %1049 ]
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1058
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1030) #12
  br label %1062

1062:                                             ; preds = %1061, %1058, %1048, %970, %967, %957
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %62) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %615) #12
  br label %1063

1063:                                             ; preds = %469, %583, %613, %610, %595, %1062
  %1064 = phi %"class.WTF::StringImpl"** [ %470, %469 ], [ %587, %583 ], [ %587, %613 ], [ %587, %610 ], [ %587, %595 ], [ %587, %1062 ]
  %1065 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 16, i32 0, i32 0
  %1066 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1065, align 8
  %1067 = icmp eq %"class.WTF::StringImpl"* %1066, null
  br i1 %1067, label %1078, label %1068

1068:                                             ; preds = %1063
  %1069 = bitcast i32* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1069) #12
  store i32 -1431655766, i32* %65, align 4
  %1070 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 16
  %1071 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %1070, i32 1, i32* nonnull %65) #12
  br i1 %1071, label %1072, label %1074

1072:                                             ; preds = %1068
  %1073 = load i32, i32* %65, align 4
  br label %1075

1074:                                             ; preds = %1068
  store i32 1, i32* %65, align 4
  br label %1075

1075:                                             ; preds = %1072, %1074
  %1076 = phi i32 [ %1073, %1072 ], [ 1, %1074 ]
  %1077 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 8
  store i32 %1076, i32* %1077, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1069) #12
  br label %1078

1078:                                             ; preds = %1063, %1075
  %1079 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 13, i32 0, i32 0
  %1080 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1081 = icmp eq %"class.WTF::StringImpl"* %1080, null
  br i1 %1081, label %1179, label %1082

1082:                                             ; preds = %1078
  %1083 = bitcast %"class.WTF::StringView"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1083) #12
  %1084 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1080, %"class.WTF::StringImpl"** %1084, align 8
  %1085 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 1
  %1086 = load i32, i32* %1085, align 4
  %1087 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 1
  %1088 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  %1089 = bitcast i8** %1088 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1087, %"class.WTF::StringImpl"** %1089, align 8
  %1090 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1091 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 %1086, i32* %1091, align 8
  %1092 = bitcast %"class.WTF::StringView"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1092) #12
  %1093 = bitcast %"class.WTF::StringView"* %35 to i64*
  store i64 %1090, i64* %1093, align 8
  %1094 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %1094, align 8
  %1095 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  store i32 8, i32* %1095, align 8
  %1096 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %34, %"class.WTF::StringView"* nonnull dereferenceable(24) %35) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1092) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1083) #12
  br i1 %1096, label %1097, label %1098

1097:                                             ; preds = %1082
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %3026

1098:                                             ; preds = %1082
  %1099 = bitcast %"class.WTF::StringView"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1099) #12
  %1100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1101 = icmp eq %"class.WTF::StringImpl"* %1100, null
  br i1 %1101, label %1102, label %1106

1102:                                             ; preds = %1098
  %1103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* null, i8** %1103, align 8
  %1104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1105 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %1104, i64* %1105, align 8
  br label %1114

1106:                                             ; preds = %1098
  %1107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1100, %"class.WTF::StringImpl"** %1107, align 8
  %1108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1100, i64 0, i32 1
  %1109 = load i32, i32* %1108, align 4
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1100, i64 1
  %1111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  %1112 = bitcast i8** %1111 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1110, %"class.WTF::StringImpl"** %1112, align 8
  %1113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1114

1114:                                             ; preds = %1106, %1102
  %1115 = phi i64 [ %1113, %1106 ], [ %1104, %1102 ]
  %1116 = phi i32 [ %1109, %1106 ], [ 0, %1102 ]
  %1117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 %1116, i32* %1117, align 8
  %1118 = bitcast %"class.WTF::StringView"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1118) #12
  %1119 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %1115, i64* %1119, align 8
  %1120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8** %1120, align 8
  %1121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 11, i32* %1121, align 8
  %1122 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %32, %"class.WTF::StringView"* nonnull dereferenceable(24) %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1118) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1099) #12
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1114
  %1124 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  store i32 0, i32* %1124, align 4
  br label %1182

1125:                                             ; preds = %1114
  %1126 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1126) #12
  %1127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1128 = icmp eq %"class.WTF::StringImpl"* %1127, null
  br i1 %1128, label %1129, label %1133

1129:                                             ; preds = %1125
  %1130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* null, i8** %1130, align 8
  %1131 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1132 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %1131, i64* %1132, align 8
  br label %1141

1133:                                             ; preds = %1125
  %1134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1127, %"class.WTF::StringImpl"** %1134, align 8
  %1135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1127, i64 0, i32 1
  %1136 = load i32, i32* %1135, align 4
  %1137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1127, i64 1
  %1138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  %1139 = bitcast i8** %1138 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1137, %"class.WTF::StringImpl"** %1139, align 8
  %1140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1141

1141:                                             ; preds = %1133, %1129
  %1142 = phi i64 [ %1140, %1133 ], [ %1131, %1129 ]
  %1143 = phi i32 [ %1136, %1133 ], [ 0, %1129 ]
  %1144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 %1143, i32* %1144, align 8
  %1145 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1145) #12
  %1146 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %1142, i64* %1146, align 8
  %1147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %1147, align 8
  %1148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 7, i32* %1148, align 8
  %1149 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %30, %"class.WTF::StringView"* nonnull dereferenceable(24) %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1145) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1126) #12
  br i1 %1149, label %1150, label %1152

1150:                                             ; preds = %1141
  %1151 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  store i32 1, i32* %1151, align 4
  br label %1182

1152:                                             ; preds = %1141
  %1153 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1153) #12
  %1154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1155 = icmp eq %"class.WTF::StringImpl"* %1154, null
  br i1 %1155, label %1156, label %1160

1156:                                             ; preds = %1152
  %1157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* null, i8** %1157, align 8
  %1158 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1159 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %1158, i64* %1159, align 8
  br label %1168

1160:                                             ; preds = %1152
  %1161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1154, %"class.WTF::StringImpl"** %1161, align 8
  %1162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1154, i64 0, i32 1
  %1163 = load i32, i32* %1162, align 4
  %1164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1154, i64 1
  %1165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %1166 = bitcast i8** %1165 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1164, %"class.WTF::StringImpl"** %1166, align 8
  %1167 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1168

1168:                                             ; preds = %1160, %1156
  %1169 = phi i64 [ %1167, %1160 ], [ %1158, %1156 ]
  %1170 = phi i32 [ %1163, %1160 ], [ 0, %1156 ]
  %1171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 %1170, i32* %1171, align 8
  %1172 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1172) #12
  %1173 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %1169, i64* %1173, align 8
  %1174 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8** %1174, align 8
  %1175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 4, i32* %1175, align 8
  %1176 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %28, %"class.WTF::StringView"* nonnull dereferenceable(24) %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1172) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1153) #12
  br i1 %1176, label %1177, label %1182

1177:                                             ; preds = %1168
  %1178 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  store i32 2, i32* %1178, align 4
  br label %1182

1179:                                             ; preds = %1078
  br i1 %83, label %1182, label %1180

1180:                                             ; preds = %1179
  %1181 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  store i32 2, i32* %1181, align 4
  br label %1182

1182:                                             ; preds = %1179, %1180, %1123, %1168, %1177, %1150
  %1183 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 9, i32 0, i32 0
  %1184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1183, align 8
  %1185 = icmp eq %"class.WTF::StringImpl"* %1184, null
  br i1 %1185, label %1254, label %1186

1186:                                             ; preds = %1182
  %1187 = icmp eq %"class.blink::ExecutionContext"* %77, null
  %1188 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %77, i64 0, i32 3
  %1189 = icmp eq %"class.blink::UseCounter"* %1188, null
  %1190 = or i1 %1187, %1189
  br i1 %1190, label %1191, label %1193

1191:                                             ; preds = %1186
  %1192 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1192) #12
  br label %1205

1193:                                             ; preds = %1186
  %1194 = bitcast %"class.blink::UseCounter"* %1188 to void (%"class.blink::UseCounter"*, i32)***
  %1195 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %1194, align 8
  %1196 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1195, i64 3
  %1197 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1196, align 8
  call void %1197(%"class.blink::UseCounter"* nonnull %1188, i32 2738) #12
  %1198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1183, align 8
  %1199 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1199) #12
  %1200 = icmp eq %"class.WTF::StringImpl"* %1198, null
  br i1 %1200, label %1201, label %1205

1201:                                             ; preds = %1193
  %1202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* null, i8** %1202, align 8
  %1203 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1204 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %1203, i64* %1204, align 8
  br label %1215

1205:                                             ; preds = %1191, %1193
  %1206 = phi i8* [ %1192, %1191 ], [ %1199, %1193 ]
  %1207 = phi %"class.WTF::StringImpl"* [ %1184, %1191 ], [ %1198, %1193 ]
  %1208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1207, %"class.WTF::StringImpl"** %1208, align 8
  %1209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1207, i64 0, i32 1
  %1210 = load i32, i32* %1209, align 4
  %1211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1207, i64 1
  %1212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %1213 = bitcast i8** %1212 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1211, %"class.WTF::StringImpl"** %1213, align 8
  %1214 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1215

1215:                                             ; preds = %1205, %1201
  %1216 = phi i8* [ %1206, %1205 ], [ %1199, %1201 ]
  %1217 = phi i64 [ %1214, %1205 ], [ %1203, %1201 ]
  %1218 = phi i32 [ %1210, %1205 ], [ 0, %1201 ]
  %1219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 %1218, i32* %1219, align 8
  %1220 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1220) #12
  %1221 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %1217, i64* %1221, align 8
  %1222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %1222, align 8
  %1223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 3, i32* %1223, align 8
  %1224 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %26, %"class.WTF::StringView"* nonnull dereferenceable(24) %27) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1220) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1216) #12
  br i1 %1224, label %1225, label %1227

1225:                                             ; preds = %1215
  %1226 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 13
  store i32 0, i32* %1226, align 4
  br label %1254

1227:                                             ; preds = %1215
  %1228 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1228) #12
  %1229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1183, align 8
  %1230 = icmp eq %"class.WTF::StringImpl"* %1229, null
  br i1 %1230, label %1231, label %1235

1231:                                             ; preds = %1227
  %1232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* null, i8** %1232, align 8
  %1233 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1234 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %1233, i64* %1234, align 8
  br label %1243

1235:                                             ; preds = %1227
  %1236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1229, %"class.WTF::StringImpl"** %1236, align 8
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1229, i64 0, i32 1
  %1238 = load i32, i32* %1237, align 4
  %1239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1229, i64 1
  %1240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %1241 = bitcast i8** %1240 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1239, %"class.WTF::StringImpl"** %1241, align 8
  %1242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1243

1243:                                             ; preds = %1235, %1231
  %1244 = phi i64 [ %1242, %1235 ], [ %1233, %1231 ]
  %1245 = phi i32 [ %1238, %1235 ], [ 0, %1231 ]
  %1246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 %1245, i32* %1246, align 8
  %1247 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1247) #12
  %1248 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %1244, i64* %1248, align 8
  %1249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %1249, align 8
  %1250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 4, i32* %1250, align 8
  %1251 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1247) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1228) #12
  br i1 %1251, label %1252, label %1254

1252:                                             ; preds = %1243
  %1253 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 13
  store i32 2, i32* %1253, align 4
  br label %1254

1254:                                             ; preds = %1182, %1225, %1252, %1243
  %1255 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 7, i32 0, i32 0
  %1256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1255, align 8
  %1257 = icmp eq %"class.WTF::StringImpl"* %1256, null
  br i1 %1257, label %1267, label %1258

1258:                                             ; preds = %1254
  %1259 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 7
  %1260 = call i64 @_ZN5blink7Request20ParseCredentialsModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1259)
  %1261 = trunc i64 %1260 to i8
  %1262 = icmp eq i8 %1261, 0
  br i1 %1262, label %1263, label %1264

1263:                                             ; preds = %1258
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

1264:                                             ; preds = %1258
  %1265 = lshr i64 %1260, 32
  %1266 = trunc i64 %1265 to i32
  br label %1268

1267:                                             ; preds = %1254
  br i1 %83, label %1271, label %1268

1268:                                             ; preds = %1267, %1264
  %1269 = phi i32 [ %1266, %1264 ], [ 1, %1267 ]
  %1270 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 10
  store i32 %1269, i32* %1270, align 8
  br label %1271

1271:                                             ; preds = %1268, %1267
  %1272 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 6, i32 0, i32 0
  %1273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1274 = icmp eq %"class.WTF::StringImpl"* %1273, null
  br i1 %1274, label %1427, label %1275

1275:                                             ; preds = %1271
  %1276 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1276) #12
  %1277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1273, %"class.WTF::StringImpl"** %1277, align 8
  %1278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1273, i64 0, i32 1
  %1279 = load i32, i32* %1278, align 4
  %1280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1273, i64 1
  %1281 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %1282 = bitcast i8** %1281 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1280, %"class.WTF::StringImpl"** %1282, align 8
  %1283 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %1279, i32* %1284, align 8
  %1285 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1285) #12
  %1286 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %1283, i64* %1286, align 8
  %1287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8** %1287, align 8
  %1288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 7, i32* %1288, align 8
  %1289 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %22, %"class.WTF::StringView"* nonnull dereferenceable(24) %23) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1285) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1276) #12
  br i1 %1289, label %1290, label %1292

1290:                                             ; preds = %1275
  %1291 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 0, i32* %1291, align 4
  br label %1427

1292:                                             ; preds = %1275
  %1293 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1293) #12
  %1294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1295 = icmp eq %"class.WTF::StringImpl"* %1294, null
  br i1 %1295, label %1296, label %1300

1296:                                             ; preds = %1292
  %1297 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* null, i8** %1297, align 8
  %1298 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1299 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %1298, i64* %1299, align 8
  br label %1308

1300:                                             ; preds = %1292
  %1301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1294, %"class.WTF::StringImpl"** %1301, align 8
  %1302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 1
  %1303 = load i32, i32* %1302, align 4
  %1304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 1
  %1305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %1306 = bitcast i8** %1305 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1304, %"class.WTF::StringImpl"** %1306, align 8
  %1307 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1308

1308:                                             ; preds = %1300, %1296
  %1309 = phi i64 [ %1307, %1300 ], [ %1298, %1296 ]
  %1310 = phi i32 [ %1303, %1300 ], [ 0, %1296 ]
  %1311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %1310, i32* %1311, align 8
  %1312 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1312) #12
  %1313 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %1309, i64* %1313, align 8
  %1314 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i8** %1314, align 8
  %1315 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 8, i32* %1315, align 8
  %1316 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1312) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1293) #12
  br i1 %1316, label %1317, label %1319

1317:                                             ; preds = %1308
  %1318 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 1, i32* %1318, align 4
  br label %1427

1319:                                             ; preds = %1308
  %1320 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1320) #12
  %1321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1322 = icmp eq %"class.WTF::StringImpl"* %1321, null
  br i1 %1322, label %1323, label %1327

1323:                                             ; preds = %1319
  %1324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %1324, align 8
  %1325 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1326 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %1325, i64* %1326, align 8
  br label %1335

1327:                                             ; preds = %1319
  %1328 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1321, %"class.WTF::StringImpl"** %1328, align 8
  %1329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1321, i64 0, i32 1
  %1330 = load i32, i32* %1329, align 4
  %1331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1321, i64 1
  %1332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %1333 = bitcast i8** %1332 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1331, %"class.WTF::StringImpl"** %1333, align 8
  %1334 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1335

1335:                                             ; preds = %1327, %1323
  %1336 = phi i64 [ %1334, %1327 ], [ %1325, %1323 ]
  %1337 = phi i32 [ %1330, %1327 ], [ 0, %1323 ]
  %1338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %1337, i32* %1338, align 8
  %1339 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1339) #12
  %1340 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %1336, i64* %1340, align 8
  %1341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8** %1341, align 8
  %1342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 6, i32* %1342, align 8
  %1343 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1339) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1320) #12
  br i1 %1343, label %1344, label %1346

1344:                                             ; preds = %1335
  %1345 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 2, i32* %1345, align 4
  br label %1427

1346:                                             ; preds = %1335
  %1347 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1347) #12
  %1348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1349 = icmp eq %"class.WTF::StringImpl"* %1348, null
  br i1 %1349, label %1350, label %1354

1350:                                             ; preds = %1346
  %1351 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %1351, align 8
  %1352 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1353 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %1352, i64* %1353, align 8
  br label %1362

1354:                                             ; preds = %1346
  %1355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1348, %"class.WTF::StringImpl"** %1355, align 8
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1348, i64 0, i32 1
  %1357 = load i32, i32* %1356, align 4
  %1358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1348, i64 1
  %1359 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %1360 = bitcast i8** %1359 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1358, %"class.WTF::StringImpl"** %1360, align 8
  %1361 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1362

1362:                                             ; preds = %1354, %1350
  %1363 = phi i64 [ %1361, %1354 ], [ %1352, %1350 ]
  %1364 = phi i32 [ %1357, %1354 ], [ 0, %1350 ]
  %1365 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %1364, i32* %1365, align 8
  %1366 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1366) #12
  %1367 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %1363, i64* %1367, align 8
  %1368 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8** %1368, align 8
  %1369 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 8, i32* %1369, align 8
  %1370 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1366) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1347) #12
  br i1 %1370, label %1371, label %1373

1371:                                             ; preds = %1362
  %1372 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 3, i32* %1372, align 4
  br label %1427

1373:                                             ; preds = %1362
  %1374 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1374) #12
  %1375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1376 = icmp eq %"class.WTF::StringImpl"* %1375, null
  br i1 %1376, label %1377, label %1381

1377:                                             ; preds = %1373
  %1378 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %1378, align 8
  %1379 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1380 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %1379, i64* %1380, align 8
  br label %1389

1381:                                             ; preds = %1373
  %1382 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1375, %"class.WTF::StringImpl"** %1382, align 8
  %1383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1375, i64 0, i32 1
  %1384 = load i32, i32* %1383, align 4
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1375, i64 1
  %1386 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %1387 = bitcast i8** %1386 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1385, %"class.WTF::StringImpl"** %1387, align 8
  %1388 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1389

1389:                                             ; preds = %1381, %1377
  %1390 = phi i64 [ %1388, %1381 ], [ %1379, %1377 ]
  %1391 = phi i32 [ %1384, %1381 ], [ 0, %1377 ]
  %1392 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %1391, i32* %1392, align 8
  %1393 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1393) #12
  %1394 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %1390, i64* %1394, align 8
  %1395 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8** %1395, align 8
  %1396 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 11, i32* %1396, align 8
  %1397 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1393) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1374) #12
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1389
  %1399 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 4, i32* %1399, align 4
  br label %1427

1400:                                             ; preds = %1389
  %1401 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1401) #12
  %1402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1403 = icmp eq %"class.WTF::StringImpl"* %1402, null
  br i1 %1403, label %1404, label %1408

1404:                                             ; preds = %1400
  %1405 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %1405, align 8
  %1406 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1407 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %1406, i64* %1407, align 8
  br label %1416

1408:                                             ; preds = %1400
  %1409 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1402, %"class.WTF::StringImpl"** %1409, align 8
  %1410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1402, i64 0, i32 1
  %1411 = load i32, i32* %1410, align 4
  %1412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1402, i64 1
  %1413 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %1414 = bitcast i8** %1413 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1412, %"class.WTF::StringImpl"** %1414, align 8
  %1415 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1416

1416:                                             ; preds = %1408, %1404
  %1417 = phi i64 [ %1415, %1408 ], [ %1406, %1404 ]
  %1418 = phi i32 [ %1411, %1408 ], [ 0, %1404 ]
  %1419 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %1418, i32* %1419, align 8
  %1420 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1420) #12
  %1421 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %1417, i64* %1421, align 8
  %1422 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8** %1422, align 8
  %1423 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 14, i32* %1423, align 8
  %1424 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1420) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1401) #12
  br i1 %1424, label %1425, label %1427

1425:                                             ; preds = %1416
  %1426 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  store i32 5, i32* %1426, align 4
  br label %1427

1427:                                             ; preds = %1271, %1290, %1344, %1398, %1425, %1416, %1371, %1317
  %1428 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 11
  %1429 = load i32, i32* %1428, align 4
  %1430 = icmp eq i32 %1429, 5
  br i1 %1430, label %1431, label %1436

1431:                                             ; preds = %1427
  %1432 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  %1433 = load i32, i32* %1432, align 4
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1436, label %1435

1435:                                             ; preds = %1431
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i64 0, i64 0)) #12
  br label %3026

1436:                                             ; preds = %1431, %1427
  %1437 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 14, i32 0, i32 0
  %1438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1437, align 8
  %1439 = icmp eq %"class.WTF::StringImpl"* %1438, null
  br i1 %1439, label %1511, label %1440

1440:                                             ; preds = %1436
  %1441 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1441) #12
  %1442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1438, %"class.WTF::StringImpl"** %1442, align 8
  %1443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 1
  %1444 = load i32, i32* %1443, align 4
  %1445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 1
  %1446 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %1447 = bitcast i8** %1446 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1445, %"class.WTF::StringImpl"** %1447, align 8
  %1448 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1449 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %1444, i32* %1449, align 8
  %1450 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1450) #12
  %1451 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %1448, i64* %1451, align 8
  %1452 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8** %1452, align 8
  %1453 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %1453, align 8
  %1454 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1450) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1441) #12
  br i1 %1454, label %1455, label %1457

1455:                                             ; preds = %1440
  %1456 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 12
  store i32 0, i32* %1456, align 8
  br label %1511

1457:                                             ; preds = %1440
  %1458 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1458) #12
  %1459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1437, align 8
  %1460 = icmp eq %"class.WTF::StringImpl"* %1459, null
  br i1 %1460, label %1461, label %1465

1461:                                             ; preds = %1457
  %1462 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %1462, align 8
  %1463 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1464 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %1463, i64* %1464, align 8
  br label %1473

1465:                                             ; preds = %1457
  %1466 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1459, %"class.WTF::StringImpl"** %1466, align 8
  %1467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1459, i64 0, i32 1
  %1468 = load i32, i32* %1467, align 4
  %1469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1459, i64 1
  %1470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %1471 = bitcast i8** %1470 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1469, %"class.WTF::StringImpl"** %1471, align 8
  %1472 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1473

1473:                                             ; preds = %1465, %1461
  %1474 = phi i64 [ %1472, %1465 ], [ %1463, %1461 ]
  %1475 = phi i32 [ %1468, %1465 ], [ 0, %1461 ]
  %1476 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %1475, i32* %1476, align 8
  %1477 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1477) #12
  %1478 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %1474, i64* %1478, align 8
  %1479 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i8** %1479, align 8
  %1480 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 5, i32* %1480, align 8
  %1481 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1477) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1458) #12
  br i1 %1481, label %1482, label %1484

1482:                                             ; preds = %1473
  %1483 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 12
  store i32 1, i32* %1483, align 8
  br label %1511

1484:                                             ; preds = %1473
  %1485 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1485) #12
  %1486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1437, align 8
  %1487 = icmp eq %"class.WTF::StringImpl"* %1486, null
  br i1 %1487, label %1488, label %1492

1488:                                             ; preds = %1484
  %1489 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %1489, align 8
  %1490 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1491 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %1490, i64* %1491, align 8
  br label %1500

1492:                                             ; preds = %1484
  %1493 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1486, %"class.WTF::StringImpl"** %1493, align 8
  %1494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1486, i64 0, i32 1
  %1495 = load i32, i32* %1494, align 4
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1486, i64 1
  %1497 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %1498 = bitcast i8** %1497 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1496, %"class.WTF::StringImpl"** %1498, align 8
  %1499 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1500

1500:                                             ; preds = %1492, %1488
  %1501 = phi i64 [ %1499, %1492 ], [ %1490, %1488 ]
  %1502 = phi i32 [ %1495, %1492 ], [ 0, %1488 ]
  %1503 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %1502, i32* %1503, align 8
  %1504 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1504) #12
  %1505 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %1501, i64* %1505, align 8
  %1506 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i8** %1506, align 8
  %1507 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 6, i32* %1507, align 8
  %1508 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1504) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1485) #12
  br i1 %1508, label %1509, label %1511

1509:                                             ; preds = %1500
  %1510 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 12
  store i32 2, i32* %1510, align 8
  br label %1511

1511:                                             ; preds = %1436, %1455, %1500, %1509, %1482
  %1512 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 10, i32 0, i32 0
  %1513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1512, align 8
  %1514 = icmp eq %"class.WTF::StringImpl"* %1513, null
  br i1 %1514, label %1552, label %1515

1515:                                             ; preds = %1511
  %1516 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 17
  %1517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1518 = load atomic i32, i32* %1517 monotonic, align 4
  %1519 = and i32 %1518, 2
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %1521, label %1533

1521:                                             ; preds = %1515
  %1522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1513, i64 0, i32 0
  %1523 = load i32, i32* %1522, align 4
  %1524 = zext i32 %1523 to i33
  %1525 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1524, i33 1) #12
  %1526 = extractvalue { i33, i1 } %1525, 1
  %1527 = extractvalue { i33, i1 } %1525, 0
  %1528 = icmp slt i33 %1527, 0
  %1529 = or i1 %1526, %1528
  br i1 %1529, label %1530, label %1531, !prof !2

1530:                                             ; preds = %1521
  call void @llvm.trap() #12
  unreachable

1531:                                             ; preds = %1521
  %1532 = trunc i33 %1527 to i32
  store i32 %1532, i32* %1522, align 4
  br label %1533

1533:                                             ; preds = %1531, %1515
  %1534 = ptrtoint %"class.WTF::StringImpl"* %1513 to i64
  %1535 = bitcast %"class.WTF::String"* %1516 to i64*
  %1536 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1516, i64 0, i32 0, i32 0
  %1537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1536, align 8
  store i64 %1534, i64* %1535, align 8
  %1538 = icmp eq %"class.WTF::StringImpl"* %1537, null
  br i1 %1538, label %1552, label %1539

1539:                                             ; preds = %1533
  %1540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1541 = load atomic i32, i32* %1540 monotonic, align 4
  %1542 = and i32 %1541, 2
  %1543 = icmp eq i32 %1542, 0
  %1544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 0
  %1545 = load i32, i32* %1544, align 4
  br i1 %1543, label %1546, label %1548

1546:                                             ; preds = %1539
  %1547 = add i32 %1545, -1
  store i32 %1547, i32* %1544, align 4
  br label %1548

1548:                                             ; preds = %1546, %1539
  %1549 = phi i32 [ %1547, %1546 ], [ %1545, %1539 ]
  %1550 = icmp eq i32 %1549, 0
  br i1 %1550, label %1551, label %1552

1551:                                             ; preds = %1548
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1537) #12
  br label %1552

1552:                                             ; preds = %1511, %1551, %1548, %1533
  %1553 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 2
  %1554 = load i8, i8* %1553, align 1, !range !3
  %1555 = icmp eq i8 %1554, 0
  br i1 %1555, label %1560, label %1556

1556:                                             ; preds = %1552
  %1557 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 11
  %1558 = load i8, i8* %1557, align 8, !range !3
  %1559 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 19
  store i8 %1558, i8* %1559, align 4
  br label %1560

1560:                                             ; preds = %1552, %1556
  %1561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %1562 = icmp eq %"class.WTF::StringImpl"* %1561, null
  br i1 %1562, label %1920, label %1563

1563:                                             ; preds = %1560
  %1564 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 12
  %1565 = call zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1564) #12
  br i1 %1565, label %1717, label %1566

1566:                                             ; preds = %1563
  %1567 = bitcast %"class.WTF::String"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1567) #12
  %1568 = bitcast %"class.WTF::StringAppend.416"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1568) #12
  %1569 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1564, i64 0, i32 0, i32 0
  %1570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1569, align 8
  %1571 = icmp eq %"class.WTF::StringImpl"* %1570, null
  br i1 %1571, label %1647, label %1572

1572:                                             ; preds = %1566
  %1573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1574 = load atomic i32, i32* %1573 monotonic, align 4
  %1575 = and i32 %1574, 2
  %1576 = icmp eq i32 %1575, 0
  %1577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1570, i64 0, i32 0
  %1578 = load i32, i32* %1577, align 4
  br i1 %1576, label %1579, label %1589

1579:                                             ; preds = %1572
  %1580 = zext i32 %1578 to i33
  %1581 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1580, i33 1) #12
  %1582 = extractvalue { i33, i1 } %1581, 1
  %1583 = extractvalue { i33, i1 } %1581, 0
  %1584 = icmp slt i33 %1583, 0
  %1585 = or i1 %1582, %1584
  br i1 %1585, label %1586, label %1587, !prof !2

1586:                                             ; preds = %1579
  call void @llvm.trap() #12
  unreachable

1587:                                             ; preds = %1579
  %1588 = trunc i33 %1583 to i32
  store i32 %1588, i32* %1577, align 4
  br label %1589

1589:                                             ; preds = %1587, %1572
  %1590 = phi i32 [ %1588, %1587 ], [ %1578, %1572 ]
  %1591 = load atomic i32, i32* %1573 monotonic, align 4
  %1592 = and i32 %1591, 2
  %1593 = icmp eq i32 %1592, 0
  br i1 %1593, label %1594, label %1604

1594:                                             ; preds = %1589
  %1595 = zext i32 %1590 to i33
  %1596 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1595, i33 1) #12
  %1597 = extractvalue { i33, i1 } %1596, 1
  %1598 = extractvalue { i33, i1 } %1596, 0
  %1599 = icmp slt i33 %1598, 0
  %1600 = or i1 %1597, %1599
  br i1 %1600, label %1601, label %1602, !prof !2

1601:                                             ; preds = %1594
  call void @llvm.trap() #12
  unreachable

1602:                                             ; preds = %1594
  %1603 = trunc i33 %1598 to i32
  store i32 %1603, i32* %1577, align 4
  br label %1604

1604:                                             ; preds = %1602, %1589
  %1605 = phi i32 [ %1603, %1602 ], [ %1590, %1589 ]
  %1606 = load atomic i32, i32* %1573 monotonic, align 4
  %1607 = and i32 %1606, 2
  %1608 = icmp eq i32 %1607, 0
  br i1 %1608, label %1609, label %1611

1609:                                             ; preds = %1604
  %1610 = add i32 %1605, -1
  store i32 %1610, i32* %1577, align 4
  br label %1611

1611:                                             ; preds = %1609, %1604
  %1612 = phi i32 [ %1610, %1609 ], [ %1605, %1604 ]
  %1613 = icmp eq i32 %1612, 0
  br i1 %1613, label %1614, label %1615

1614:                                             ; preds = %1611
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1570) #12
  br label %1615

1615:                                             ; preds = %1611, %1614
  %1616 = load atomic i32, i32* %1573 monotonic, align 4, !noalias !19
  %1617 = and i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = load i32, i32* %1577, align 4
  br i1 %1618, label %1620, label %1630

1620:                                             ; preds = %1615
  %1621 = zext i32 %1619 to i33
  %1622 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1621, i33 1) #12
  %1623 = extractvalue { i33, i1 } %1622, 1
  %1624 = extractvalue { i33, i1 } %1622, 0
  %1625 = icmp slt i33 %1624, 0
  %1626 = or i1 %1623, %1625
  br i1 %1626, label %1627, label %1628, !prof !2

1627:                                             ; preds = %1620
  call void @llvm.trap() #12, !noalias !19
  unreachable

1628:                                             ; preds = %1620
  %1629 = trunc i33 %1624 to i32
  store i32 %1629, i32* %1577, align 4, !noalias !19
  br label %1630

1630:                                             ; preds = %1615, %1628
  %1631 = phi i32 [ %1629, %1628 ], [ %1619, %1615 ]
  %1632 = bitcast %"class.WTF::StringAppend.416"* %67 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %1632, align 8, !alias.scope !19
  %1633 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %67, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1570, %"class.WTF::StringImpl"** %1633, align 8, !alias.scope !19
  %1634 = load atomic i32, i32* %1573 monotonic, align 4, !noalias !19
  %1635 = and i32 %1634, 2
  %1636 = icmp eq i32 %1635, 0
  br i1 %1636, label %1637, label %1651

1637:                                             ; preds = %1630
  %1638 = zext i32 %1631 to i33
  %1639 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1638, i33 1) #12
  %1640 = extractvalue { i33, i1 } %1639, 1
  %1641 = extractvalue { i33, i1 } %1639, 0
  %1642 = icmp slt i33 %1641, 0
  %1643 = or i1 %1640, %1642
  br i1 %1643, label %1644, label %1645, !prof !2

1644:                                             ; preds = %1637
  call void @llvm.trap() #12, !noalias !19
  unreachable

1645:                                             ; preds = %1637
  %1646 = trunc i33 %1641 to i32
  store i32 %1646, i32* %1577, align 4, !noalias !19
  br label %1651

1647:                                             ; preds = %1566
  %1648 = bitcast %"class.WTF::StringAppend.416"* %67 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %1648, align 8, !alias.scope !19
  %1649 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %67, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1649, align 8, !alias.scope !19
  %1650 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %67, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i8** %1650, align 8, !alias.scope !19
  br label %1663

1651:                                             ; preds = %1645, %1630
  %1652 = phi i32 [ %1646, %1645 ], [ %1631, %1630 ]
  %1653 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %67, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i8** %1653, align 8, !alias.scope !19
  %1654 = load atomic i32, i32* %1573 monotonic, align 4, !noalias !19
  %1655 = and i32 %1654, 2
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1657, label %1659

1657:                                             ; preds = %1651
  %1658 = add i32 %1652, -1
  store i32 %1658, i32* %1577, align 4, !noalias !19
  br label %1659

1659:                                             ; preds = %1657, %1651
  %1660 = phi i32 [ %1658, %1657 ], [ %1652, %1651 ]
  %1661 = icmp eq i32 %1660, 0
  br i1 %1661, label %1662, label %1663

1662:                                             ; preds = %1659
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1570) #12, !noalias !19
  br label %1663

1663:                                             ; preds = %1647, %1659, %1662
  %1664 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.416"* nonnull %67)
  %1665 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1664, %"class.WTF::StringImpl"** %1665, align 8
  %1666 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %1667 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %1666, align 8
  %1668 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1667, i64 3
  %1669 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1668, align 8
  call void %1669(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %66) #12
  %1670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1665, align 8
  %1671 = icmp eq %"class.WTF::StringImpl"* %1670, null
  br i1 %1671, label %1685, label %1672

1672:                                             ; preds = %1663
  %1673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1674 = load atomic i32, i32* %1673 monotonic, align 4
  %1675 = and i32 %1674, 2
  %1676 = icmp eq i32 %1675, 0
  %1677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1670, i64 0, i32 0
  %1678 = load i32, i32* %1677, align 4
  br i1 %1676, label %1679, label %1681

1679:                                             ; preds = %1672
  %1680 = add i32 %1678, -1
  store i32 %1680, i32* %1677, align 4
  br label %1681

1681:                                             ; preds = %1679, %1672
  %1682 = phi i32 [ %1680, %1679 ], [ %1678, %1672 ]
  %1683 = icmp eq i32 %1682, 0
  br i1 %1683, label %1684, label %1685

1684:                                             ; preds = %1681
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1670) #12
  br label %1685

1685:                                             ; preds = %1663, %1681, %1684
  %1686 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %67, i64 0, i32 0, i32 1, i32 0, i32 0
  %1687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1686, align 8
  %1688 = icmp eq %"class.WTF::StringImpl"* %1687, null
  br i1 %1688, label %1702, label %1689

1689:                                             ; preds = %1685
  %1690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1687, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1691 = load atomic i32, i32* %1690 monotonic, align 4
  %1692 = and i32 %1691, 2
  %1693 = icmp eq i32 %1692, 0
  %1694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1687, i64 0, i32 0
  %1695 = load i32, i32* %1694, align 4
  br i1 %1693, label %1696, label %1698

1696:                                             ; preds = %1689
  %1697 = add i32 %1695, -1
  store i32 %1697, i32* %1694, align 4
  br label %1698

1698:                                             ; preds = %1696, %1689
  %1699 = phi i32 [ %1697, %1696 ], [ %1695, %1689 ]
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1701, label %1702

1701:                                             ; preds = %1698
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1687) #12
  br label %1702

1702:                                             ; preds = %1685, %1698, %1701
  br i1 %1571, label %1716, label %1703

1703:                                             ; preds = %1702
  %1704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1705 = load atomic i32, i32* %1704 monotonic, align 4
  %1706 = and i32 %1705, 2
  %1707 = icmp eq i32 %1706, 0
  %1708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1570, i64 0, i32 0
  %1709 = load i32, i32* %1708, align 4
  br i1 %1707, label %1710, label %1712

1710:                                             ; preds = %1703
  %1711 = add i32 %1709, -1
  store i32 %1711, i32* %1708, align 4
  br label %1712

1712:                                             ; preds = %1710, %1703
  %1713 = phi i32 [ %1711, %1710 ], [ %1709, %1703 ]
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1715, label %1716

1715:                                             ; preds = %1712
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1570) #12
  br label %1716

1716:                                             ; preds = %1702, %1712, %1715
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1568) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1567) #12
  br label %3026

1717:                                             ; preds = %1563
  %1718 = call zeroext i1 @_ZN5blink10FetchUtils17IsForbiddenMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1564) #12
  br i1 %1718, label %1719, label %1870

1719:                                             ; preds = %1717
  %1720 = bitcast %"class.WTF::String"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1720) #12
  %1721 = bitcast %"class.WTF::StringAppend.416"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1721) #12
  %1722 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1564, i64 0, i32 0, i32 0
  %1723 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1722, align 8
  %1724 = icmp eq %"class.WTF::StringImpl"* %1723, null
  br i1 %1724, label %1800, label %1725

1725:                                             ; preds = %1719
  %1726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1723, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1727 = load atomic i32, i32* %1726 monotonic, align 4
  %1728 = and i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1723, i64 0, i32 0
  %1731 = load i32, i32* %1730, align 4
  br i1 %1729, label %1732, label %1742

1732:                                             ; preds = %1725
  %1733 = zext i32 %1731 to i33
  %1734 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1733, i33 1) #12
  %1735 = extractvalue { i33, i1 } %1734, 1
  %1736 = extractvalue { i33, i1 } %1734, 0
  %1737 = icmp slt i33 %1736, 0
  %1738 = or i1 %1735, %1737
  br i1 %1738, label %1739, label %1740, !prof !2

1739:                                             ; preds = %1732
  call void @llvm.trap() #12
  unreachable

1740:                                             ; preds = %1732
  %1741 = trunc i33 %1736 to i32
  store i32 %1741, i32* %1730, align 4
  br label %1742

1742:                                             ; preds = %1740, %1725
  %1743 = phi i32 [ %1741, %1740 ], [ %1731, %1725 ]
  %1744 = load atomic i32, i32* %1726 monotonic, align 4
  %1745 = and i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  br i1 %1746, label %1747, label %1757

1747:                                             ; preds = %1742
  %1748 = zext i32 %1743 to i33
  %1749 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1748, i33 1) #12
  %1750 = extractvalue { i33, i1 } %1749, 1
  %1751 = extractvalue { i33, i1 } %1749, 0
  %1752 = icmp slt i33 %1751, 0
  %1753 = or i1 %1750, %1752
  br i1 %1753, label %1754, label %1755, !prof !2

1754:                                             ; preds = %1747
  call void @llvm.trap() #12
  unreachable

1755:                                             ; preds = %1747
  %1756 = trunc i33 %1751 to i32
  store i32 %1756, i32* %1730, align 4
  br label %1757

1757:                                             ; preds = %1755, %1742
  %1758 = phi i32 [ %1756, %1755 ], [ %1743, %1742 ]
  %1759 = load atomic i32, i32* %1726 monotonic, align 4
  %1760 = and i32 %1759, 2
  %1761 = icmp eq i32 %1760, 0
  br i1 %1761, label %1762, label %1764

1762:                                             ; preds = %1757
  %1763 = add i32 %1758, -1
  store i32 %1763, i32* %1730, align 4
  br label %1764

1764:                                             ; preds = %1762, %1757
  %1765 = phi i32 [ %1763, %1762 ], [ %1758, %1757 ]
  %1766 = icmp eq i32 %1765, 0
  br i1 %1766, label %1767, label %1768

1767:                                             ; preds = %1764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1723) #12
  br label %1768

1768:                                             ; preds = %1764, %1767
  %1769 = load atomic i32, i32* %1726 monotonic, align 4, !noalias !22
  %1770 = and i32 %1769, 2
  %1771 = icmp eq i32 %1770, 0
  %1772 = load i32, i32* %1730, align 4
  br i1 %1771, label %1773, label %1783

1773:                                             ; preds = %1768
  %1774 = zext i32 %1772 to i33
  %1775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1774, i33 1) #12
  %1776 = extractvalue { i33, i1 } %1775, 1
  %1777 = extractvalue { i33, i1 } %1775, 0
  %1778 = icmp slt i33 %1777, 0
  %1779 = or i1 %1776, %1778
  br i1 %1779, label %1780, label %1781, !prof !2

1780:                                             ; preds = %1773
  call void @llvm.trap() #12, !noalias !22
  unreachable

1781:                                             ; preds = %1773
  %1782 = trunc i33 %1777 to i32
  store i32 %1782, i32* %1730, align 4, !noalias !22
  br label %1783

1783:                                             ; preds = %1768, %1781
  %1784 = phi i32 [ %1782, %1781 ], [ %1772, %1768 ]
  %1785 = bitcast %"class.WTF::StringAppend.416"* %69 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %1785, align 8, !alias.scope !22
  %1786 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1723, %"class.WTF::StringImpl"** %1786, align 8, !alias.scope !22
  %1787 = load atomic i32, i32* %1726 monotonic, align 4, !noalias !22
  %1788 = and i32 %1787, 2
  %1789 = icmp eq i32 %1788, 0
  br i1 %1789, label %1790, label %1804

1790:                                             ; preds = %1783
  %1791 = zext i32 %1784 to i33
  %1792 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1791, i33 1) #12
  %1793 = extractvalue { i33, i1 } %1792, 1
  %1794 = extractvalue { i33, i1 } %1792, 0
  %1795 = icmp slt i33 %1794, 0
  %1796 = or i1 %1793, %1795
  br i1 %1796, label %1797, label %1798, !prof !2

1797:                                             ; preds = %1790
  call void @llvm.trap() #12, !noalias !22
  unreachable

1798:                                             ; preds = %1790
  %1799 = trunc i33 %1794 to i32
  store i32 %1799, i32* %1730, align 4, !noalias !22
  br label %1804

1800:                                             ; preds = %1719
  %1801 = bitcast %"class.WTF::StringAppend.416"* %69 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %1801, align 8, !alias.scope !22
  %1802 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1802, align 8, !alias.scope !22
  %1803 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %69, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i8** %1803, align 8, !alias.scope !22
  br label %1816

1804:                                             ; preds = %1798, %1783
  %1805 = phi i32 [ %1799, %1798 ], [ %1784, %1783 ]
  %1806 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %69, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i8** %1806, align 8, !alias.scope !22
  %1807 = load atomic i32, i32* %1726 monotonic, align 4, !noalias !22
  %1808 = and i32 %1807, 2
  %1809 = icmp eq i32 %1808, 0
  br i1 %1809, label %1810, label %1812

1810:                                             ; preds = %1804
  %1811 = add i32 %1805, -1
  store i32 %1811, i32* %1730, align 4, !noalias !22
  br label %1812

1812:                                             ; preds = %1810, %1804
  %1813 = phi i32 [ %1811, %1810 ], [ %1805, %1804 ]
  %1814 = icmp eq i32 %1813, 0
  br i1 %1814, label %1815, label %1816

1815:                                             ; preds = %1812
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1723) #12, !noalias !22
  br label %1816

1816:                                             ; preds = %1800, %1812, %1815
  %1817 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.416"* nonnull %69)
  %1818 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1817, %"class.WTF::StringImpl"** %1818, align 8
  %1819 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %1820 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %1819, align 8
  %1821 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1820, i64 3
  %1822 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %1821, align 8
  call void %1822(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %68) #12
  %1823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1818, align 8
  %1824 = icmp eq %"class.WTF::StringImpl"* %1823, null
  br i1 %1824, label %1838, label %1825

1825:                                             ; preds = %1816
  %1826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1823, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1827 = load atomic i32, i32* %1826 monotonic, align 4
  %1828 = and i32 %1827, 2
  %1829 = icmp eq i32 %1828, 0
  %1830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1823, i64 0, i32 0
  %1831 = load i32, i32* %1830, align 4
  br i1 %1829, label %1832, label %1834

1832:                                             ; preds = %1825
  %1833 = add i32 %1831, -1
  store i32 %1833, i32* %1830, align 4
  br label %1834

1834:                                             ; preds = %1832, %1825
  %1835 = phi i32 [ %1833, %1832 ], [ %1831, %1825 ]
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1837, label %1838

1837:                                             ; preds = %1834
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1823) #12
  br label %1838

1838:                                             ; preds = %1816, %1834, %1837
  %1839 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  %1840 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1839, align 8
  %1841 = icmp eq %"class.WTF::StringImpl"* %1840, null
  br i1 %1841, label %1855, label %1842

1842:                                             ; preds = %1838
  %1843 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1840, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1844 = load atomic i32, i32* %1843 monotonic, align 4
  %1845 = and i32 %1844, 2
  %1846 = icmp eq i32 %1845, 0
  %1847 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1840, i64 0, i32 0
  %1848 = load i32, i32* %1847, align 4
  br i1 %1846, label %1849, label %1851

1849:                                             ; preds = %1842
  %1850 = add i32 %1848, -1
  store i32 %1850, i32* %1847, align 4
  br label %1851

1851:                                             ; preds = %1849, %1842
  %1852 = phi i32 [ %1850, %1849 ], [ %1848, %1842 ]
  %1853 = icmp eq i32 %1852, 0
  br i1 %1853, label %1854, label %1855

1854:                                             ; preds = %1851
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1840) #12
  br label %1855

1855:                                             ; preds = %1838, %1851, %1854
  br i1 %1724, label %1869, label %1856

1856:                                             ; preds = %1855
  %1857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1723, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1858 = load atomic i32, i32* %1857 monotonic, align 4
  %1859 = and i32 %1858, 2
  %1860 = icmp eq i32 %1859, 0
  %1861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1723, i64 0, i32 0
  %1862 = load i32, i32* %1861, align 4
  br i1 %1860, label %1863, label %1865

1863:                                             ; preds = %1856
  %1864 = add i32 %1862, -1
  store i32 %1864, i32* %1861, align 4
  br label %1865

1865:                                             ; preds = %1863, %1856
  %1866 = phi i32 [ %1864, %1863 ], [ %1862, %1856 ]
  %1867 = icmp eq i32 %1866, 0
  br i1 %1867, label %1868, label %1869

1868:                                             ; preds = %1865
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1723) #12
  br label %1869

1869:                                             ; preds = %1855, %1865, %1868
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1721) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1720) #12
  br label %3026

1870:                                             ; preds = %1717
  %1871 = bitcast %"class.WTF::AtomicString"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1871) #12
  %1872 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1564, i64 0, i32 0, i32 0
  %1873 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1872, align 8
  %1874 = icmp eq %"class.WTF::StringImpl"* %1873, null
  br i1 %1874, label %1898, label %1875

1875:                                             ; preds = %1870
  %1876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1877 = load atomic i32, i32* %1876 acquire, align 4
  %1878 = and i32 %1877, 4
  %1879 = icmp eq i32 %1878, 0
  br i1 %1879, label %1896, label %1880

1880:                                             ; preds = %1875
  %1881 = load atomic i32, i32* %1876 monotonic, align 4
  %1882 = and i32 %1881, 2
  %1883 = icmp eq i32 %1882, 0
  br i1 %1883, label %1884, label %1898

1884:                                             ; preds = %1880
  %1885 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1873, i64 0, i32 0
  %1886 = load i32, i32* %1885, align 4
  %1887 = zext i32 %1886 to i33
  %1888 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1887, i33 1) #12
  %1889 = extractvalue { i33, i1 } %1888, 1
  %1890 = extractvalue { i33, i1 } %1888, 0
  %1891 = icmp slt i33 %1890, 0
  %1892 = or i1 %1889, %1891
  br i1 %1892, label %1893, label %1894, !prof !2

1893:                                             ; preds = %1884
  call void @llvm.trap() #12
  unreachable

1894:                                             ; preds = %1884
  %1895 = trunc i33 %1890 to i32
  store i32 %1895, i32* %1885, align 4
  br label %1898

1896:                                             ; preds = %1875
  %1897 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1873) #12
  br label %1898

1898:                                             ; preds = %1870, %1880, %1894, %1896
  %1899 = phi %"class.WTF::StringImpl"* [ %1897, %1896 ], [ %1873, %1880 ], [ %1873, %1894 ], [ null, %1870 ]
  %1900 = ptrtoint %"class.WTF::StringImpl"* %1899 to i64
  %1901 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  store i64 %1900, i64* %1901, align 8
  %1902 = call %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils15NormalizeMethodERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %70) #12
  call void @_ZN5blink16FetchRequestData9SetMethodEN3WTF12AtomicStringE(%"class.blink::FetchRequestData"* %99, %"class.WTF::StringImpl"* %1902)
  %1903 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %1904 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1903, align 8
  %1905 = icmp eq %"class.WTF::StringImpl"* %1904, null
  br i1 %1905, label %1919, label %1906

1906:                                             ; preds = %1898
  %1907 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1904, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1908 = load atomic i32, i32* %1907 monotonic, align 4
  %1909 = and i32 %1908, 2
  %1910 = icmp eq i32 %1909, 0
  %1911 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1904, i64 0, i32 0
  %1912 = load i32, i32* %1911, align 4
  br i1 %1910, label %1913, label %1915

1913:                                             ; preds = %1906
  %1914 = add i32 %1912, -1
  store i32 %1914, i32* %1911, align 4
  br label %1915

1915:                                             ; preds = %1913, %1906
  %1916 = phi i32 [ %1914, %1913 ], [ %1912, %1906 ]
  %1917 = icmp eq i32 %1916, 0
  br i1 %1917, label %1918, label %1919

1918:                                             ; preds = %1915
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1904) #12
  br label %1919

1919:                                             ; preds = %1898, %1915, %1918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1871) #12
  br label %1920

1920:                                             ; preds = %1560, %1919
  %1921 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 3
  %1922 = load i8, i8* %1921, align 2, !range !3
  %1923 = icmp eq i8 %1922, 0
  br i1 %1923, label %1927, label %1924

1924:                                             ; preds = %1920
  %1925 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 17, i32 0, i32 0
  %1926 = load %"class.blink::AbortSignal"*, %"class.blink::AbortSignal"** %1925, align 8
  br label %1927

1927:                                             ; preds = %1920, %1924
  %1928 = phi %"class.blink::AbortSignal"* [ %1926, %1924 ], [ %100, %1920 ]
  %1929 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 18, i32 0, i32 0
  %1930 = load %"class.blink::TrustToken"*, %"class.blink::TrustToken"** %1929, align 8
  %1931 = icmp eq %"class.blink::TrustToken"* %1930, null
  br i1 %1931, label %1976, label %1932

1932:                                             ; preds = %1927
  %1933 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %1934 = icmp eq %"class.blink::ExecutionContext"* %1933, null
  %1935 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1933, i64 0, i32 3
  %1936 = icmp eq %"class.blink::UseCounter"* %1935, null
  %1937 = or i1 %1934, %1936
  br i1 %1937, label %1943, label %1938

1938:                                             ; preds = %1932
  %1939 = bitcast %"class.blink::UseCounter"* %1935 to void (%"class.blink::UseCounter"*, i32)***
  %1940 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %1939, align 8
  %1941 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1940, i64 3
  %1942 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1941, align 8
  call void %1942(%"class.blink::UseCounter"* nonnull %1935, i32 3276) #12
  br label %1943

1943:                                             ; preds = %1932, %1938
  %1944 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1944) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1944, i8 -86, i64 56, i1 false)
  call void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %71) #12
  %1945 = load %"class.blink::TrustToken"*, %"class.blink::TrustToken"** %1929, align 8
  %1946 = call zeroext i1 @_ZN5blink24ConvertTrustTokenToMojomERKNS_10TrustTokenEPNS_14ExceptionStateEPN7network5mojom5blink16TrustTokenParamsE(%"class.blink::TrustToken"* dereferenceable(88) %1945, %"class.blink::ExceptionState"* %4, %"class.network::mojom::blink::TrustTokenParams"* nonnull %71) #12
  br i1 %1946, label %1947, label %1975

1947:                                             ; preds = %1943
  %1948 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %77, i64 0, i32 6, i32 11
  %1949 = load i32, i32* %1948, align 8
  %1950 = icmp eq i32 %1949, 1
  br i1 %1950, label %1951, label %1973

1951:                                             ; preds = %1947
  %1952 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %71, i64 0, i32 0
  %1953 = load i32, i32* %1952, align 8
  %1954 = add i32 %1953, -1
  %1955 = icmp ult i32 %1954, 2
  br i1 %1955, label %1956, label %1961

1956:                                             ; preds = %1951
  %1957 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %1958 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* %77, i32 72, i32 1, %"class.WTF::String"* dereferenceable(8) %1957) #12
  br i1 %1958, label %1959, label %1973

1959:                                             ; preds = %1956
  %1960 = load i32, i32* %1952, align 8
  br label %1961

1961:                                             ; preds = %1959, %1951
  %1962 = phi i32 [ %1960, %1959 ], [ %1953, %1951 ]
  %1963 = icmp eq i32 %1962, 0
  br i1 %1963, label %1964, label %1966

1964:                                             ; preds = %1961
  %1965 = call zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %77) #12
  br i1 %1965, label %1966, label %1973

1966:                                             ; preds = %1964, %1961
  %1967 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %1967, align 8
  %1968 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %1968, %"class.network::mojom::blink::TrustTokenParams"* nonnull dereferenceable(56) %71) #12
  call void @_ZN5blink16FetchRequestData19SetTrustTokenParamsEN4absl8optionalIN7network5mojom5blink16TrustTokenParamsEEE(%"class.blink::FetchRequestData"* %99, %"class.absl::optional"* nonnull %72)
  %1969 = load i8, i8* %1967, align 8, !range !3
  %1970 = icmp eq i8 %1969, 0
  br i1 %1970, label %1972, label %1971

1971:                                             ; preds = %1966
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %1968) #12
  store i8 0, i8* %1967, align 8
  br label %1972

1972:                                             ; preds = %1966, %1971
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1944) #12
  br label %1976

1973:                                             ; preds = %1964, %1956, %1947
  %1974 = phi i8* [ getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), %1947 ], [ getelementptr inbounds ([173 x i8], [173 x i8]* @.str.27, i64 0, i64 0), %1956 ], [ getelementptr inbounds ([113 x i8], [113 x i8]* @.str.28, i64 0, i64 0), %1964 ]
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* %1974) #12
  br label %1975

1975:                                             ; preds = %1973, %1943
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1944) #12
  br label %3026

1976:                                             ; preds = %1927, %1972
  %1977 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 1
  %1978 = load i8, i8* %1977, align 8, !range !3
  %1979 = icmp eq i8 %1978, 0
  br i1 %1979, label %1984, label %1980

1980:                                             ; preds = %1976
  %1981 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 4
  %1982 = load i8, i8* %1981, align 1, !range !3
  %1983 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 25
  store i8 %1982, i8* %1983, align 8
  br label %1984

1984:                                             ; preds = %1976, %1980
  %1985 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %1986 = bitcast i8* %1985 to %"class.blink::Request"*
  %1987 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 2, i32 0, i32 0
  %1988 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %1987, align 8
  %1989 = call %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"* %1988) #12
  %1990 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %1991 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #12
  %1992 = bitcast i8* %1991 to %"class.blink::AbortSignal"*
  call void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"* %1992, %"class.blink::ExecutionContext"* %1990) #12
  %1993 = getelementptr inbounds i8, i8* %1991, i64 -4
  %1994 = bitcast i8* %1993 to i16*
  %1995 = load atomic i16, i16* %1994 monotonic, align 2
  %1996 = or i16 %1995, 1
  store atomic i16 %1996, i16* %1994 release, align 2
  %1997 = bitcast i8* %1985 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1997, align 8
  %1998 = getelementptr inbounds i8, i8* %1985, i64 8
  %1999 = bitcast i8* %1998 to i64**
  store i64* null, i64** %1999, align 8
  %2000 = getelementptr inbounds i8, i8* %1985, i64 16
  %2001 = bitcast i8* %2000 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2001, align 8
  %2002 = getelementptr inbounds i8, i8* %1985, i64 24
  %2003 = bitcast i8* %2002 to %"class.blink::Body"*
  %2004 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %2003, %"class.blink::ExecutionContext"* %2004) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1997, align 8
  %2005 = bitcast i8* %2000 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2005, align 8
  %2006 = getelementptr inbounds i8, i8* %1985, i64 40
  %2007 = bitcast i8* %2006 to %"class.blink::FetchRequestData"**
  store %"class.blink::FetchRequestData"* %99, %"class.blink::FetchRequestData"** %2007, align 8
  %2008 = getelementptr inbounds i8, i8* %1985, i64 48
  %2009 = bitcast i8* %2008 to %"class.blink::Headers"**
  store %"class.blink::Headers"* %1989, %"class.blink::Headers"** %2009, align 8
  %2010 = getelementptr inbounds i8, i8* %1985, i64 56
  %2011 = bitcast i8* %2010 to i8**
  store i8* %1991, i8** %2011, align 8
  %2012 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %1989, i64 0, i32 3
  store i32 1, i32* %2012, align 8
  %2013 = getelementptr inbounds i8, i8* %1985, i64 -4
  %2014 = bitcast i8* %2013 to i16*
  %2015 = load atomic i16, i16* %2014 monotonic, align 2
  %2016 = or i16 %2015, 1
  store atomic i16 %2016, i16* %2014 release, align 2
  %2017 = bitcast i8* %2000 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %2017) #12
  %2018 = icmp eq %"class.blink::AbortSignal"* %1928, null
  br i1 %2018, label %2022, label %2019

2019:                                             ; preds = %1984
  %2020 = bitcast i8* %2010 to %"class.blink::AbortSignal"**
  %2021 = load %"class.blink::AbortSignal"*, %"class.blink::AbortSignal"** %2020, align 8
  call void @_ZN5blink11AbortSignal6FollowEPS0_(%"class.blink::AbortSignal"* %2021, %"class.blink::AbortSignal"* nonnull %1928) #12
  br label %2022

2022:                                             ; preds = %1984, %2019
  %2023 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2007, align 8
  %2024 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2023, i64 0, i32 9
  %2025 = load i32, i32* %2024, align 4
  %2026 = icmp eq i32 %2025, 1
  br i1 %2026, label %2027, label %2185

2027:                                             ; preds = %2022
  %2028 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2023, i64 0, i32 0, i32 0
  %2029 = call zeroext i1 @_ZN5blink4cors22IsCorsSafelistedMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2028) #12
  br i1 %2029, label %2182, label %2030

2030:                                             ; preds = %2027
  %2031 = bitcast %"class.WTF::String"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2031) #12
  %2032 = bitcast %"class.WTF::StringAppend.422"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2032) #12
  %2033 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2007, align 8
  %2034 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2033, i64 0, i32 0, i32 0, i32 0, i32 0
  %2035 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2034, align 8
  %2036 = icmp eq %"class.WTF::StringImpl"* %2035, null
  br i1 %2036, label %2112, label %2037

2037:                                             ; preds = %2030
  %2038 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2035, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2039 = load atomic i32, i32* %2038 monotonic, align 4
  %2040 = and i32 %2039, 2
  %2041 = icmp eq i32 %2040, 0
  %2042 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2035, i64 0, i32 0
  %2043 = load i32, i32* %2042, align 4
  br i1 %2041, label %2044, label %2054

2044:                                             ; preds = %2037
  %2045 = zext i32 %2043 to i33
  %2046 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2045, i33 1) #12
  %2047 = extractvalue { i33, i1 } %2046, 1
  %2048 = extractvalue { i33, i1 } %2046, 0
  %2049 = icmp slt i33 %2048, 0
  %2050 = or i1 %2047, %2049
  br i1 %2050, label %2051, label %2052, !prof !2

2051:                                             ; preds = %2044
  call void @llvm.trap() #12
  unreachable

2052:                                             ; preds = %2044
  %2053 = trunc i33 %2048 to i32
  store i32 %2053, i32* %2042, align 4
  br label %2054

2054:                                             ; preds = %2052, %2037
  %2055 = phi i32 [ %2053, %2052 ], [ %2043, %2037 ]
  %2056 = load atomic i32, i32* %2038 monotonic, align 4
  %2057 = and i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  br i1 %2058, label %2059, label %2069

2059:                                             ; preds = %2054
  %2060 = zext i32 %2055 to i33
  %2061 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2060, i33 1) #12
  %2062 = extractvalue { i33, i1 } %2061, 1
  %2063 = extractvalue { i33, i1 } %2061, 0
  %2064 = icmp slt i33 %2063, 0
  %2065 = or i1 %2062, %2064
  br i1 %2065, label %2066, label %2067, !prof !2

2066:                                             ; preds = %2059
  call void @llvm.trap() #12
  unreachable

2067:                                             ; preds = %2059
  %2068 = trunc i33 %2063 to i32
  store i32 %2068, i32* %2042, align 4
  br label %2069

2069:                                             ; preds = %2067, %2054
  %2070 = phi i32 [ %2068, %2067 ], [ %2055, %2054 ]
  %2071 = load atomic i32, i32* %2038 monotonic, align 4
  %2072 = and i32 %2071, 2
  %2073 = icmp eq i32 %2072, 0
  br i1 %2073, label %2074, label %2076

2074:                                             ; preds = %2069
  %2075 = add i32 %2070, -1
  store i32 %2075, i32* %2042, align 4
  br label %2076

2076:                                             ; preds = %2074, %2069
  %2077 = phi i32 [ %2075, %2074 ], [ %2070, %2069 ]
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %2079, label %2080

2079:                                             ; preds = %2076
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2035) #12
  br label %2080

2080:                                             ; preds = %2076, %2079
  %2081 = load atomic i32, i32* %2038 monotonic, align 4
  %2082 = and i32 %2081, 2
  %2083 = icmp eq i32 %2082, 0
  br i1 %2083, label %2084, label %2095

2084:                                             ; preds = %2080
  %2085 = load i32, i32* %2042, align 4
  %2086 = zext i32 %2085 to i33
  %2087 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2086, i33 1) #12
  %2088 = extractvalue { i33, i1 } %2087, 1
  %2089 = extractvalue { i33, i1 } %2087, 0
  %2090 = icmp slt i33 %2089, 0
  %2091 = or i1 %2088, %2090
  br i1 %2091, label %2092, label %2093, !prof !2

2092:                                             ; preds = %2084
  call void @llvm.trap() #12
  unreachable

2093:                                             ; preds = %2084
  %2094 = trunc i33 %2089 to i32
  store i32 %2094, i32* %2042, align 4
  br label %2095

2095:                                             ; preds = %2080, %2093
  %2096 = bitcast %"class.WTF::StringAppend.422"* %74 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %2096, align 8
  %2097 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %74, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2035, %"class.WTF::StringImpl"** %2097, align 8
  %2098 = load atomic i32, i32* %2038 monotonic, align 4
  %2099 = and i32 %2098, 2
  %2100 = icmp eq i32 %2099, 0
  br i1 %2100, label %2101, label %2116

2101:                                             ; preds = %2095
  %2102 = load i32, i32* %2042, align 4
  %2103 = zext i32 %2102 to i33
  %2104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2103, i33 1) #12
  %2105 = extractvalue { i33, i1 } %2104, 1
  %2106 = extractvalue { i33, i1 } %2104, 0
  %2107 = icmp slt i33 %2106, 0
  %2108 = or i1 %2105, %2107
  br i1 %2108, label %2109, label %2110, !prof !2

2109:                                             ; preds = %2101
  call void @llvm.trap() #12
  unreachable

2110:                                             ; preds = %2101
  %2111 = trunc i33 %2106 to i32
  store i32 %2111, i32* %2042, align 4
  br label %2116

2112:                                             ; preds = %2030
  %2113 = bitcast %"class.WTF::StringAppend.422"* %74 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.23 to i64), i64* %2113, align 8
  %2114 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %74, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2114, align 8
  %2115 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %74, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i64 0, i64 0), i8** %2115, align 8
  br label %2128

2116:                                             ; preds = %2110, %2095
  %2117 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %74, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i64 0, i64 0), i8** %2117, align 8
  %2118 = load atomic i32, i32* %2038 monotonic, align 4
  %2119 = and i32 %2118, 2
  %2120 = icmp eq i32 %2119, 0
  %2121 = load i32, i32* %2042, align 4
  br i1 %2120, label %2122, label %2124

2122:                                             ; preds = %2116
  %2123 = add i32 %2121, -1
  store i32 %2123, i32* %2042, align 4
  br label %2124

2124:                                             ; preds = %2122, %2116
  %2125 = phi i32 [ %2123, %2122 ], [ %2121, %2116 ]
  %2126 = icmp eq i32 %2125, 0
  br i1 %2126, label %2127, label %2128

2127:                                             ; preds = %2124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2035) #12
  br label %2128

2128:                                             ; preds = %2112, %2124, %2127
  %2129 = phi %"class.WTF::StringImpl"** [ %2114, %2112 ], [ %2097, %2124 ], [ %2097, %2127 ]
  %2130 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.422"* nonnull %74)
  %2131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2130, %"class.WTF::StringImpl"** %2131, align 8
  %2132 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %2133 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %2132, align 8
  %2134 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %2133, i64 3
  %2135 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %2134, align 8
  call void %2135(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %73) #12
  %2136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2131, align 8
  %2137 = icmp eq %"class.WTF::StringImpl"* %2136, null
  br i1 %2137, label %2151, label %2138

2138:                                             ; preds = %2128
  %2139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2140 = load atomic i32, i32* %2139 monotonic, align 4
  %2141 = and i32 %2140, 2
  %2142 = icmp eq i32 %2141, 0
  %2143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2136, i64 0, i32 0
  %2144 = load i32, i32* %2143, align 4
  br i1 %2142, label %2145, label %2147

2145:                                             ; preds = %2138
  %2146 = add i32 %2144, -1
  store i32 %2146, i32* %2143, align 4
  br label %2147

2147:                                             ; preds = %2145, %2138
  %2148 = phi i32 [ %2146, %2145 ], [ %2144, %2138 ]
  %2149 = icmp eq i32 %2148, 0
  br i1 %2149, label %2150, label %2151

2150:                                             ; preds = %2147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2136) #12
  br label %2151

2151:                                             ; preds = %2128, %2147, %2150
  %2152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2129, align 8
  %2153 = icmp eq %"class.WTF::StringImpl"* %2152, null
  br i1 %2153, label %2167, label %2154

2154:                                             ; preds = %2151
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2156 = load atomic i32, i32* %2155 monotonic, align 4
  %2157 = and i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2152, i64 0, i32 0
  %2160 = load i32, i32* %2159, align 4
  br i1 %2158, label %2161, label %2163

2161:                                             ; preds = %2154
  %2162 = add i32 %2160, -1
  store i32 %2162, i32* %2159, align 4
  br label %2163

2163:                                             ; preds = %2161, %2154
  %2164 = phi i32 [ %2162, %2161 ], [ %2160, %2154 ]
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2166, label %2167

2166:                                             ; preds = %2163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2152) #12
  br label %2167

2167:                                             ; preds = %2151, %2163, %2166
  br i1 %2036, label %2181, label %2168

2168:                                             ; preds = %2167
  %2169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2035, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2170 = load atomic i32, i32* %2169 monotonic, align 4
  %2171 = and i32 %2170, 2
  %2172 = icmp eq i32 %2171, 0
  %2173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2035, i64 0, i32 0
  %2174 = load i32, i32* %2173, align 4
  br i1 %2172, label %2175, label %2177

2175:                                             ; preds = %2168
  %2176 = add i32 %2174, -1
  store i32 %2176, i32* %2173, align 4
  br label %2177

2177:                                             ; preds = %2175, %2168
  %2178 = phi i32 [ %2176, %2175 ], [ %2174, %2168 ]
  %2179 = icmp eq i32 %2178, 0
  br i1 %2179, label %2180, label %2181

2180:                                             ; preds = %2177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2035) #12
  br label %2181

2181:                                             ; preds = %2167, %2177, %2180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2032) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2031) #12
  br label %3026

2182:                                             ; preds = %2027
  %2183 = load %"class.blink::Headers"*, %"class.blink::Headers"** %2009, align 8
  %2184 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %2183, i64 0, i32 3
  store i32 2, i32* %2184, align 8
  br label %2185

2185:                                             ; preds = %2182, %2022
  %2186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %2187 = icmp eq %"class.WTF::StringImpl"* %2186, null
  br i1 %2187, label %2188, label %2255

2188:                                             ; preds = %2185
  %2189 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 8, i32 0
  %2190 = load i32, i32* %2189, align 8
  %2191 = icmp eq i32 %2190, 0
  br i1 %2191, label %2192, label %2255

2192:                                             ; preds = %2188
  %2193 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %2194 = load i64*, i64** %2193, align 8
  %2195 = icmp eq i64* %2194, null
  br i1 %2195, label %2222, label %2196

2196:                                             ; preds = %2192
  %2197 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5
  %2198 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2197) #12
  %2199 = icmp eq %"class.v8::Value"* %2198, null
  br i1 %2199, label %2255, label %2200

2200:                                             ; preds = %2196
  %2201 = bitcast %"class.v8::Value"* %2198 to i64*
  %2202 = load i64, i64* %2201, align 8
  %2203 = and i64 %2202, 3
  %2204 = icmp eq i64 %2203, 1
  br i1 %2204, label %2205, label %2255

2205:                                             ; preds = %2200
  %2206 = add i64 %2202, -1
  %2207 = inttoptr i64 %2206 to i32*
  %2208 = load i32, i32* %2207, align 4
  %2209 = and i64 %2202, -4294967296
  %2210 = zext i32 %2208 to i64
  %2211 = or i64 %2209, %2210
  %2212 = add i64 %2211, 7
  %2213 = inttoptr i64 %2212 to i16*
  %2214 = load i16, i16* %2213, align 2
  %2215 = icmp eq i16 %2214, 67
  br i1 %2215, label %2216, label %2255

2216:                                             ; preds = %2205
  %2217 = add i64 %2202, 23
  %2218 = inttoptr i64 %2217 to i32*
  %2219 = load i32, i32* %2218, align 4
  %2220 = and i32 %2219, -2
  %2221 = icmp eq i32 %2220, 10
  br i1 %2221, label %2222, label %2255

2222:                                             ; preds = %2216, %2192
  %2223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1064, align 8
  %2224 = icmp eq %"class.WTF::StringImpl"* %2223, null
  br i1 %2224, label %2225, label %2255

2225:                                             ; preds = %2222
  %2226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1065, align 8
  %2227 = icmp eq %"class.WTF::StringImpl"* %2226, null
  br i1 %2227, label %2228, label %2255

2228:                                             ; preds = %2225
  %2229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %2230 = icmp eq %"class.WTF::StringImpl"* %2229, null
  br i1 %2230, label %2231, label %2255

2231:                                             ; preds = %2228
  %2232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1255, align 8
  %2233 = icmp eq %"class.WTF::StringImpl"* %2232, null
  br i1 %2233, label %2234, label %2255

2234:                                             ; preds = %2231
  %2235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %2236 = icmp eq %"class.WTF::StringImpl"* %2235, null
  br i1 %2236, label %2237, label %2255

2237:                                             ; preds = %2234
  %2238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1437, align 8
  %2239 = icmp eq %"class.WTF::StringImpl"* %2238, null
  br i1 %2239, label %2240, label %2255

2240:                                             ; preds = %2237
  %2241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1512, align 8
  %2242 = icmp eq %"class.WTF::StringImpl"* %2241, null
  br i1 %2242, label %2243, label %2255

2243:                                             ; preds = %2240
  %2244 = load i8, i8* %1553, align 1, !range !3
  %2245 = icmp eq i8 %2244, 0
  br i1 %2245, label %2246, label %2255

2246:                                             ; preds = %2243
  %2247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1183, align 8
  %2248 = icmp eq %"class.WTF::StringImpl"* %2247, null
  br i1 %2248, label %2249, label %2255

2249:                                             ; preds = %2246
  %2250 = load i8, i8* %1921, align 2, !range !3
  %2251 = icmp eq i8 %2250, 0
  br i1 %2251, label %2252, label %2255

2252:                                             ; preds = %2249
  %2253 = load %"class.blink::TrustToken"*, %"class.blink::TrustToken"** %1929, align 8
  %2254 = icmp eq %"class.blink::TrustToken"* %2253, null
  br i1 %2254, label %2277, label %2255

2255:                                             ; preds = %2252, %2216, %2205, %2200, %2196, %2185, %2188, %2222, %2225, %2228, %2231, %2234, %2237, %2240, %2243, %2246, %2249
  %2256 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 8, i32 0
  %2257 = load i32, i32* %2256, align 8
  %2258 = icmp eq i32 %2257, 0
  br i1 %2258, label %2259, label %2262

2259:                                             ; preds = %2255
  %2260 = load %"class.blink::Headers"*, %"class.blink::Headers"** %2009, align 8
  %2261 = call %"class.blink::Headers"* @_ZNK5blink7Headers5CloneEv(%"class.blink::Headers"* %2260) #12
  br label %2262

2262:                                             ; preds = %2255, %2259
  %2263 = phi %"class.blink::Headers"* [ null, %2255 ], [ %2261, %2259 ]
  %2264 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2007, align 8
  %2265 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2264, i64 0, i32 2, i32 0, i32 0
  %2266 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %2265, align 8
  call void @_ZN5blink15FetchHeaderList9ClearListEv(%"class.blink::FetchHeaderList"* %2266) #12
  %2267 = load i32, i32* %2256, align 8
  %2268 = icmp eq i32 %2267, 0
  %2269 = load %"class.blink::Headers"*, %"class.blink::Headers"** %2009, align 8
  br i1 %2268, label %2272, label %2270

2270:                                             ; preds = %2262
  %2271 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 8
  call void @_ZN5blink7Headers8FillWithERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordERNS_14ExceptionStateE(%"class.blink::Headers"* %2269, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40) %2271, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br label %2273

2272:                                             ; preds = %2262
  call void @_ZN5blink7Headers8FillWithEPKS0_RNS_14ExceptionStateE(%"class.blink::Headers"* %2269, %"class.blink::Headers"* %2263, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br label %2273

2273:                                             ; preds = %2272, %2270
  %2274 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %2275 = load i32, i32* %2274, align 8
  %2276 = icmp eq i32 %2275, 0
  br i1 %2276, label %2277, label %3026

2277:                                             ; preds = %2252, %2273
  br i1 %83, label %2278, label %2283

2278:                                             ; preds = %2277
  %2279 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 3, i32 0, i32 0
  %2280 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2279, align 8
  %2281 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2280, i64 0, i32 15, i32 0, i32 0
  %2282 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %2281, align 8
  br label %2283

2283:                                             ; preds = %2277, %2278
  %2284 = phi %"class.blink::BodyStreamBuffer"* [ %2282, %2278 ], [ null, %2277 ]
  %2285 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %2286 = load i64*, i64** %2285, align 8
  %2287 = icmp eq i64* %2286, null
  br i1 %2287, label %2371, label %2288

2288:                                             ; preds = %2283
  %2289 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5
  %2290 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2289) #12
  %2291 = icmp eq %"class.v8::Value"* %2290, null
  br i1 %2291, label %2314, label %2292

2292:                                             ; preds = %2288
  %2293 = bitcast %"class.v8::Value"* %2290 to i64*
  %2294 = load i64, i64* %2293, align 8
  %2295 = and i64 %2294, 3
  %2296 = icmp eq i64 %2295, 1
  br i1 %2296, label %2297, label %2314

2297:                                             ; preds = %2292
  %2298 = add i64 %2294, -1
  %2299 = inttoptr i64 %2298 to i32*
  %2300 = load i32, i32* %2299, align 4
  %2301 = and i64 %2294, -4294967296
  %2302 = zext i32 %2300 to i64
  %2303 = or i64 %2301, %2302
  %2304 = add i64 %2303, 7
  %2305 = inttoptr i64 %2304 to i16*
  %2306 = load i16, i16* %2305, align 2
  %2307 = icmp eq i16 %2306, 67
  br i1 %2307, label %2308, label %2314

2308:                                             ; preds = %2297
  %2309 = add i64 %2294, 23
  %2310 = inttoptr i64 %2309 to i32*
  %2311 = load i32, i32* %2310, align 4
  %2312 = and i32 %2311, -2
  %2313 = icmp eq i32 %2312, 10
  br i1 %2313, label %2371, label %2314

2314:                                             ; preds = %2308, %2297, %2292, %2288
  %2315 = bitcast %"class.blink::ScriptValue"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2315) #12
  %2316 = bitcast %"class.blink::ScriptValue"* %2289 to i64*
  %2317 = load i64, i64* %2316, align 8, !noalias !25
  %2318 = bitcast %"class.blink::ScriptValue"* %75 to i64*
  store i64 %2317, i64* %2318, align 8, !alias.scope !25
  %2319 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %75, i64 0, i32 1
  %2320 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %2319, i64 0, i32 0
  %2321 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %2319, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %2321, align 8, !alias.scope !25
  %2322 = icmp eq %"class.blink::ScriptValue"* %2289, %75
  br i1 %2322, label %2327, label %2323

2323:                                             ; preds = %2314
  %2324 = load i64*, i64** %2285, align 8, !noalias !25
  %2325 = icmp eq i64* %2324, null
  br i1 %2325, label %2327, label %2326

2326:                                             ; preds = %2323
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %2285, i64** %2321) #12
  br label %2327

2327:                                             ; preds = %2326, %2323, %2314
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8) %2320) #12
  %2328 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 5, i32 1, i32 1, i32 0
  %2329 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %2328, align 8, !noalias !25
  %2330 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %75, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %2329, %"class.blink::DOMWrapperWorld"** %2330, align 8, !alias.scope !25
  %2331 = icmp eq %"class.blink::DOMWrapperWorld"* %2329, null
  br i1 %2331, label %2334, label %2332

2332:                                             ; preds = %2327
  %2333 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %2329, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %2333) #12
  br label %2334

2334:                                             ; preds = %2327, %2332
  %2335 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %75) #12
  %2336 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %2330, align 8
  %2337 = icmp eq %"class.blink::DOMWrapperWorld"* %2336, null
  br i1 %2337, label %2345, label %2338

2338:                                             ; preds = %2334
  %2339 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %2336, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2339) #12
  %2340 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %2336, i64 0, i32 0, i32 0, i32 0, i32 0
  %2341 = load i32, i32* %2340, align 4
  %2342 = icmp eq i32 %2341, 0
  br i1 %2342, label %2343, label %2345

2343:                                             ; preds = %2338
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %2336) #12
  %2344 = bitcast %"class.blink::DOMWrapperWorld"* %2336 to i8*
  call void @free(i8* %2344) #12
  br label %2345

2345:                                             ; preds = %2343, %2338, %2334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2315) #12
  %2346 = icmp eq %"class.v8::Value"* %2335, null
  br i1 %2346, label %2371, label %2347

2347:                                             ; preds = %2345
  %2348 = bitcast %"class.v8::Value"* %2335 to i64*
  %2349 = load i64, i64* %2348, align 8
  %2350 = and i64 %2349, 3
  %2351 = icmp eq i64 %2350, 1
  br i1 %2351, label %2352, label %2373

2352:                                             ; preds = %2347
  %2353 = add i64 %2349, -1
  %2354 = inttoptr i64 %2353 to i32*
  %2355 = load i32, i32* %2354, align 4
  %2356 = and i64 %2349, -4294967296
  %2357 = zext i32 %2355 to i64
  %2358 = or i64 %2356, %2357
  %2359 = add i64 %2358, 7
  %2360 = inttoptr i64 %2359 to i16*
  %2361 = load i16, i16* %2360, align 2
  %2362 = icmp eq i16 %2361, 67
  br i1 %2362, label %2363, label %2373

2363:                                             ; preds = %2352
  %2364 = add i64 %2349, 23
  %2365 = inttoptr i64 %2364 to i32*
  %2366 = load i32, i32* %2365, align 4
  %2367 = and i32 %2366, -2
  %2368 = icmp eq i32 %2367, 6
  %2369 = icmp eq %"class.blink::BodyStreamBuffer"* %2284, null
  %2370 = and i1 %2369, %2368
  br i1 %2370, label %2392, label %2373

2371:                                             ; preds = %2308, %2283, %2345
  %2372 = icmp eq %"class.blink::BodyStreamBuffer"* %2284, null
  br i1 %2372, label %2924, label %2373

2373:                                             ; preds = %2352, %2347, %2371, %2363
  %2374 = phi i1 [ true, %2371 ], [ false, %2363 ], [ false, %2347 ], [ false, %2352 ]
  %2375 = phi %"class.v8::Value"* [ null, %2371 ], [ %2335, %2363 ], [ %2335, %2347 ], [ %2335, %2352 ]
  %2376 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %2377 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %2378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2377, align 8
  %2379 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2376, i64 0, i32 0, i32 0, i32 0
  %2380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2379, align 8
  %2381 = icmp eq %"class.WTF::StringImpl"* %2378, %2380
  br i1 %2381, label %2387, label %2382

2382:                                             ; preds = %2373
  %2383 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %2384 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2383, i64 0, i32 0, i32 0, i32 0
  %2385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2384, align 8
  %2386 = icmp eq %"class.WTF::StringImpl"* %2378, %2385
  br i1 %2386, label %2387, label %2388

2387:                                             ; preds = %2382, %2373
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.30, i64 0, i64 0)) #12
  br label %3026

2388:                                             ; preds = %2382
  br i1 %2374, label %2912, label %2389

2389:                                             ; preds = %2388
  %2390 = bitcast %"class.v8::Value"* %2375 to i64*
  %2391 = load i64, i64* %2390, align 8
  br label %2392

2392:                                             ; preds = %2389, %2363
  %2393 = phi i64* [ %2390, %2389 ], [ %2348, %2363 ]
  %2394 = phi i64 [ %2391, %2389 ], [ %2349, %2363 ]
  %2395 = phi %"class.v8::Value"* [ %2375, %2389 ], [ %2335, %2363 ]
  %2396 = and i64 %2394, 3
  %2397 = icmp eq i64 %2396, 1
  br i1 %2397, label %2398, label %2415

2398:                                             ; preds = %2392
  %2399 = add i64 %2394, -1
  %2400 = inttoptr i64 %2399 to i32*
  %2401 = load i32, i32* %2400, align 4
  %2402 = and i64 %2394, -4294967296
  %2403 = zext i32 %2401 to i64
  %2404 = or i64 %2402, %2403
  %2405 = add i64 %2404, 7
  %2406 = inttoptr i64 %2405 to i16*
  %2407 = load i16, i16* %2406, align 2
  %2408 = icmp eq i16 %2407, 67
  br i1 %2408, label %2409, label %2415

2409:                                             ; preds = %2398
  %2410 = add i64 %2394, 23
  %2411 = inttoptr i64 %2410 to i32*
  %2412 = load i32, i32* %2411, align 4
  %2413 = and i32 %2412, -2
  %2414 = icmp eq i32 %2413, 6
  br i1 %2414, label %2912, label %2415

2415:                                             ; preds = %2398, %2392, %2409
  %2416 = load i8, i8* %1553, align 1, !range !3
  %2417 = icmp eq i8 %2416, 0
  br i1 %2417, label %2430, label %2418

2418:                                             ; preds = %2415
  %2419 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %3, i64 0, i32 11
  %2420 = load i8, i8* %2419, align 8, !range !3
  %2421 = icmp eq i8 %2420, 0
  br i1 %2421, label %2430, label %2422

2422:                                             ; preds = %2418
  %2423 = bitcast %"class.blink::ScriptState"* %0 to i64*
  %2424 = load i64, i64* %2423, align 8
  %2425 = add i64 %2424, 8
  %2426 = inttoptr i64 %2425 to %"class.blink::V8PerIsolateData"**
  %2427 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2426, align 8
  %2428 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2427, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8ReadableStream18wrapper_type_info_E, %"class.v8::Value"* %2395) #12
  br i1 %2428, label %2429, label %2430

2429:                                             ; preds = %2422
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.31, i64 0, i64 0)) #12
  br label %3026

2430:                                             ; preds = %2418, %2415, %2422
  %2431 = bitcast %"class.WTF::String"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2431) #12
  %2432 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2432, align 8
  %2433 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %2434 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %2435 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2434, align 8
  %2436 = ptrtoint %"class.v8::Isolate"* %2435 to i64
  %2437 = add i64 %2436, 8
  %2438 = inttoptr i64 %2437 to %"class.blink::V8PerIsolateData"**
  %2439 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2438, align 8
  %2440 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2439, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Blob18wrapper_type_info_E, %"class.v8::Value"* %2395) #12
  br i1 %2440, label %2441, label %2501

2441:                                             ; preds = %2430
  %2442 = load i64, i64* %2393, align 8
  %2443 = add i64 %2442, -1
  %2444 = inttoptr i64 %2443 to i32*
  %2445 = load i32, i32* %2444, align 4
  %2446 = and i64 %2442, -4294967296
  %2447 = zext i32 %2445 to i64
  %2448 = or i64 %2446, %2447
  %2449 = add i64 %2448, 7
  %2450 = inttoptr i64 %2449 to i16*
  %2451 = load i16, i16* %2450, align 2
  switch i16 %2451, label %2456 [
    i16 1057, label %2452
    i16 1056, label %2452
    i16 1040, label %2452
  ]

2452:                                             ; preds = %2441, %2441, %2441
  %2453 = add i64 %2442, 19
  %2454 = inttoptr i64 %2453 to i8**
  %2455 = load i8*, i8** %2454, align 1
  br label %2459

2456:                                             ; preds = %2441
  %2457 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2458 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2457, i32 1) #12
  br label %2459

2459:                                             ; preds = %2456, %2452
  %2460 = phi i8* [ %2455, %2452 ], [ %2458, %2456 ]
  %2461 = getelementptr inbounds i8, i8* %2460, i64 32
  %2462 = bitcast i8* %2461 to %"class.blink::BlobDataHandle"**
  %2463 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %2462, align 8
  %2464 = icmp eq %"class.blink::BlobDataHandle"* %2463, null
  br i1 %2464, label %2472, label %2465

2465:                                             ; preds = %2459
  %2466 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %2463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2467 = atomicrmw add i32* %2466, i32 1 monotonic
  %2468 = icmp sgt i32 %2467, 0
  br i1 %2468, label %2472, label %2469

2469:                                             ; preds = %2465
  %2470 = bitcast %"class.logging::CheckError"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2470) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %36, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.63, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.64, i64 0, i64 0)) #12
  %2471 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %36) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2470) #12
  br label %2472

2472:                                             ; preds = %2469, %2465, %2459
  %2473 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #12
  %2474 = bitcast i8* %2473 to %"class.blink::BlobBytesConsumer"*
  call void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"* %2474, %"class.blink::ExecutionContext"* %2433, %"class.blink::BlobDataHandle"* %2463) #12
  %2475 = getelementptr inbounds i8, i8* %2473, i64 -4
  %2476 = bitcast i8* %2475 to i16*
  %2477 = load atomic i16, i16* %2476 monotonic, align 2
  %2478 = or i16 %2477, 1
  store atomic i16 %2478, i16* %2476 release, align 2
  %2479 = bitcast i8* %2473 to %"class.blink::BytesConsumer"*
  %2480 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2479, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  %2481 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %2462, align 8
  %2482 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %2481, i64 0, i32 2
  %2483 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %2482) #12
  %2484 = ptrtoint %"class.WTF::StringImpl"* %2483 to i64
  %2485 = bitcast %"class.WTF::String"* %76 to i64*
  %2486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  store i64 %2484, i64* %2485, align 8
  %2487 = icmp eq %"class.WTF::StringImpl"* %2486, null
  br i1 %2487, label %2871, label %2488

2488:                                             ; preds = %2472
  %2489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2490 = load atomic i32, i32* %2489 monotonic, align 4
  %2491 = and i32 %2490, 2
  %2492 = icmp eq i32 %2491, 0
  %2493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2486, i64 0, i32 0
  %2494 = load i32, i32* %2493, align 4
  br i1 %2492, label %2495, label %2497

2495:                                             ; preds = %2488
  %2496 = add i32 %2494, -1
  store i32 %2496, i32* %2493, align 4
  br label %2497

2497:                                             ; preds = %2495, %2488
  %2498 = phi i32 [ %2496, %2495 ], [ %2494, %2488 ]
  %2499 = icmp eq i32 %2498, 0
  br i1 %2499, label %2500, label %2871

2500:                                             ; preds = %2497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2486) #12
  br label %2871

2501:                                             ; preds = %2430
  %2502 = call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %2395) #12
  br i1 %2502, label %2503, label %2522

2503:                                             ; preds = %2501
  %2504 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2505 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %2504) #12
  %2506 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %2505, i64 0, i32 0, i32 1, i32 0, i32 0
  %2507 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %2506, align 8
  %2508 = icmp eq %"class.v8::BackingStore"* %2507, null
  br i1 %2508, label %2512, label %2509

2509:                                             ; preds = %2503
  %2510 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %2507) #12
  %2511 = icmp ult i64 %2510, 4294967296
  br i1 %2511, label %2512, label %2521

2512:                                             ; preds = %2509, %2503
  %2513 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %2514 = bitcast i8* %2513 to %"class.blink::FormDataBytesConsumer"*
  call void @_ZN5blink21FormDataBytesConsumerC1EPNS_14DOMArrayBufferE(%"class.blink::FormDataBytesConsumer"* %2514, %"class.blink::DOMArrayBuffer"* %2505) #12
  %2515 = getelementptr inbounds i8, i8* %2513, i64 -4
  %2516 = bitcast i8* %2515 to i16*
  %2517 = load atomic i16, i16* %2516 monotonic, align 2
  %2518 = or i16 %2517, 1
  store atomic i16 %2518, i16* %2516 release, align 2
  %2519 = bitcast i8* %2513 to %"class.blink::BytesConsumer"*
  %2520 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2519, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  br label %2871

2521:                                             ; preds = %2509
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.53, i64 0, i64 0)) #12
  br label %2873

2522:                                             ; preds = %2501
  %2523 = call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %2395) #12
  br i1 %2523, label %2524, label %2543

2524:                                             ; preds = %2522
  %2525 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2526 = call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %2525) #12
  %2527 = bitcast %"class.blink::DOMArrayBufferView"* %2526 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %2528 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %2527, align 8
  %2529 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %2528, i64 10
  %2530 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %2529, align 8
  %2531 = call i64 %2530(%"class.blink::DOMArrayBufferView"* %2526) #12
  %2532 = icmp ult i64 %2531, 4294967296
  br i1 %2532, label %2533, label %2542

2533:                                             ; preds = %2524
  %2534 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %2535 = bitcast i8* %2534 to %"class.blink::FormDataBytesConsumer"*
  call void @_ZN5blink21FormDataBytesConsumerC1EPNS_18DOMArrayBufferViewE(%"class.blink::FormDataBytesConsumer"* %2535, %"class.blink::DOMArrayBufferView"* %2526) #12
  %2536 = getelementptr inbounds i8, i8* %2534, i64 -4
  %2537 = bitcast i8* %2536 to i16*
  %2538 = load atomic i16, i16* %2537 monotonic, align 2
  %2539 = or i16 %2538, 1
  store atomic i16 %2539, i16* %2537 release, align 2
  %2540 = bitcast i8* %2534 to %"class.blink::BytesConsumer"*
  %2541 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2540, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  br label %2871

2542:                                             ; preds = %2524
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.54, i64 0, i64 0)) #12
  br label %2873

2543:                                             ; preds = %2522
  %2544 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2438, align 8
  %2545 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2544, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8FormData18wrapper_type_info_E, %"class.v8::Value"* %2395) #12
  br i1 %2545, label %2546, label %2682

2546:                                             ; preds = %2543
  %2547 = load i64, i64* %2393, align 8
  %2548 = add i64 %2547, -1
  %2549 = inttoptr i64 %2548 to i32*
  %2550 = load i32, i32* %2549, align 4
  %2551 = and i64 %2547, -4294967296
  %2552 = zext i32 %2550 to i64
  %2553 = or i64 %2551, %2552
  %2554 = add i64 %2553, 7
  %2555 = inttoptr i64 %2554 to i16*
  %2556 = load i16, i16* %2555, align 2
  switch i16 %2556, label %2561 [
    i16 1057, label %2557
    i16 1056, label %2557
    i16 1040, label %2557
  ]

2557:                                             ; preds = %2546, %2546, %2546
  %2558 = add i64 %2547, 19
  %2559 = inttoptr i64 %2558 to i8**
  %2560 = load i8*, i8** %2559, align 1
  br label %2564

2561:                                             ; preds = %2546
  %2562 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2563 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2562, i32 1) #12
  br label %2564

2564:                                             ; preds = %2561, %2557
  %2565 = phi i8* [ %2560, %2557 ], [ %2563, %2561 ]
  %2566 = bitcast i8* %2565 to %"class.blink::FormData"*
  %2567 = call %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"* %2566) #12
  %2568 = bitcast %"class.WTF::StringAppend.479"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2568) #12
  %2569 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2569) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %38, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i64 30) #12
  %2570 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %2567, i64 0, i32 4, i32 0, i32 0, i32 0
  %2571 = bitcast i8** %2570 to i64*
  %2572 = load i64, i64* %2571, align 8
  %2573 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %2574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2573, align 8
  %2575 = icmp eq %"class.WTF::StringImpl"* %2574, null
  br i1 %2575, label %2619, label %2576

2576:                                             ; preds = %2564
  %2577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2578 = load atomic i32, i32* %2577 monotonic, align 4
  %2579 = and i32 %2578, 2
  %2580 = icmp eq i32 %2579, 0
  %2581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2574, i64 0, i32 0
  %2582 = load i32, i32* %2581, align 4
  br i1 %2580, label %2583, label %2593

2583:                                             ; preds = %2576
  %2584 = zext i32 %2582 to i33
  %2585 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2584, i33 1) #12
  %2586 = extractvalue { i33, i1 } %2585, 1
  %2587 = extractvalue { i33, i1 } %2585, 0
  %2588 = icmp slt i33 %2587, 0
  %2589 = or i1 %2586, %2588
  br i1 %2589, label %2590, label %2591, !prof !2

2590:                                             ; preds = %2583
  call void @llvm.trap() #12
  unreachable

2591:                                             ; preds = %2583
  %2592 = trunc i33 %2587 to i32
  store i32 %2592, i32* %2581, align 4
  br label %2593

2593:                                             ; preds = %2591, %2576
  %2594 = phi i32 [ %2592, %2591 ], [ %2582, %2576 ]
  %2595 = load atomic i32, i32* %2577 monotonic, align 4
  %2596 = and i32 %2595, 2
  %2597 = icmp eq i32 %2596, 0
  br i1 %2597, label %2598, label %2608

2598:                                             ; preds = %2593
  %2599 = zext i32 %2594 to i33
  %2600 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2599, i33 1) #12
  %2601 = extractvalue { i33, i1 } %2600, 1
  %2602 = extractvalue { i33, i1 } %2600, 0
  %2603 = icmp slt i33 %2602, 0
  %2604 = or i1 %2601, %2603
  br i1 %2604, label %2605, label %2606, !prof !2

2605:                                             ; preds = %2598
  call void @llvm.trap() #12
  unreachable

2606:                                             ; preds = %2598
  %2607 = trunc i33 %2602 to i32
  store i32 %2607, i32* %2581, align 4
  br label %2608

2608:                                             ; preds = %2606, %2593
  %2609 = phi i32 [ %2607, %2606 ], [ %2594, %2593 ]
  %2610 = load atomic i32, i32* %2577 monotonic, align 4
  %2611 = and i32 %2610, 2
  %2612 = icmp eq i32 %2611, 0
  br i1 %2612, label %2613, label %2615

2613:                                             ; preds = %2608
  %2614 = add i32 %2609, -1
  store i32 %2614, i32* %2581, align 4
  br label %2615

2615:                                             ; preds = %2613, %2608
  %2616 = phi i32 [ %2614, %2613 ], [ %2609, %2608 ]
  %2617 = icmp eq i32 %2616, 0
  br i1 %2617, label %2618, label %2619

2618:                                             ; preds = %2615
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2574) #12
  br label %2619

2619:                                             ; preds = %2618, %2615, %2564
  %2620 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2574, %"class.WTF::StringImpl"** %2620, align 8
  %2621 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %37, i64 0, i32 1
  %2622 = bitcast i8** %2621 to i64*
  store i64 %2572, i64* %2622, align 8
  %2623 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend.479"* nonnull %37) #12
  %2624 = ptrtoint %"class.WTF::StringImpl"* %2623 to i64
  %2625 = bitcast %"class.WTF::String"* %76 to i64*
  %2626 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  store i64 %2624, i64* %2625, align 8
  %2627 = icmp eq %"class.WTF::StringImpl"* %2626, null
  br i1 %2627, label %2641, label %2628

2628:                                             ; preds = %2619
  %2629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2626, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2630 = load atomic i32, i32* %2629 monotonic, align 4
  %2631 = and i32 %2630, 2
  %2632 = icmp eq i32 %2631, 0
  %2633 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2626, i64 0, i32 0
  %2634 = load i32, i32* %2633, align 4
  br i1 %2632, label %2635, label %2637

2635:                                             ; preds = %2628
  %2636 = add i32 %2634, -1
  store i32 %2636, i32* %2633, align 4
  br label %2637

2637:                                             ; preds = %2635, %2628
  %2638 = phi i32 [ %2636, %2635 ], [ %2634, %2628 ]
  %2639 = icmp eq i32 %2638, 0
  br i1 %2639, label %2640, label %2641

2640:                                             ; preds = %2637
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2626) #12
  br label %2641

2641:                                             ; preds = %2640, %2637, %2619
  %2642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2620, align 8
  %2643 = icmp eq %"class.WTF::StringImpl"* %2642, null
  br i1 %2643, label %2657, label %2644

2644:                                             ; preds = %2641
  %2645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2646 = load atomic i32, i32* %2645 monotonic, align 4
  %2647 = and i32 %2646, 2
  %2648 = icmp eq i32 %2647, 0
  %2649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2642, i64 0, i32 0
  %2650 = load i32, i32* %2649, align 4
  br i1 %2648, label %2651, label %2653

2651:                                             ; preds = %2644
  %2652 = add i32 %2650, -1
  store i32 %2652, i32* %2649, align 4
  br label %2653

2653:                                             ; preds = %2651, %2644
  %2654 = phi i32 [ %2652, %2651 ], [ %2650, %2644 ]
  %2655 = icmp eq i32 %2654, 0
  br i1 %2655, label %2656, label %2657

2656:                                             ; preds = %2653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2642) #12
  br label %2657

2657:                                             ; preds = %2656, %2653, %2641
  %2658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2573, align 8
  %2659 = icmp eq %"class.WTF::StringImpl"* %2658, null
  br i1 %2659, label %2673, label %2660

2660:                                             ; preds = %2657
  %2661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2658, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2662 = load atomic i32, i32* %2661 monotonic, align 4
  %2663 = and i32 %2662, 2
  %2664 = icmp eq i32 %2663, 0
  %2665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2658, i64 0, i32 0
  %2666 = load i32, i32* %2665, align 4
  br i1 %2664, label %2667, label %2669

2667:                                             ; preds = %2660
  %2668 = add i32 %2666, -1
  store i32 %2668, i32* %2665, align 4
  br label %2669

2669:                                             ; preds = %2667, %2660
  %2670 = phi i32 [ %2668, %2667 ], [ %2666, %2660 ]
  %2671 = icmp eq i32 %2670, 0
  br i1 %2671, label %2672, label %2673

2672:                                             ; preds = %2669
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2658) #12
  br label %2673

2673:                                             ; preds = %2672, %2669, %2657
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2569) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2568) #12
  %2674 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %2675 = bitcast i8* %2674 to %"class.blink::FormDataBytesConsumer"*
  call void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* %2675, %"class.blink::ExecutionContext"* %2433, %"class.blink::EncodedFormData"* %2567) #12
  %2676 = getelementptr inbounds i8, i8* %2674, i64 -4
  %2677 = bitcast i8* %2676 to i16*
  %2678 = load atomic i16, i16* %2677 monotonic, align 2
  %2679 = or i16 %2678, 1
  store atomic i16 %2679, i16* %2677 release, align 2
  %2680 = bitcast i8* %2674 to %"class.blink::BytesConsumer"*
  %2681 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2680, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  br label %2871

2682:                                             ; preds = %2543
  %2683 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2438, align 8
  %2684 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2683, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8URLSearchParams18wrapper_type_info_E, %"class.v8::Value"* %2395) #12
  br i1 %2684, label %2685, label %2752

2685:                                             ; preds = %2682
  %2686 = load i64, i64* %2393, align 8
  %2687 = add i64 %2686, -1
  %2688 = inttoptr i64 %2687 to i32*
  %2689 = load i32, i32* %2688, align 4
  %2690 = and i64 %2686, -4294967296
  %2691 = zext i32 %2689 to i64
  %2692 = or i64 %2690, %2691
  %2693 = add i64 %2692, 7
  %2694 = inttoptr i64 %2693 to i16*
  %2695 = load i16, i16* %2694, align 2
  switch i16 %2695, label %2700 [
    i16 1057, label %2696
    i16 1056, label %2696
    i16 1040, label %2696
  ]

2696:                                             ; preds = %2685, %2685, %2685
  %2697 = add i64 %2686, 19
  %2698 = inttoptr i64 %2697 to i8**
  %2699 = load i8*, i8** %2698, align 1
  br label %2703

2700:                                             ; preds = %2685
  %2701 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2702 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2701, i32 1) #12
  br label %2703

2703:                                             ; preds = %2700, %2696
  %2704 = phi i8* [ %2699, %2696 ], [ %2702, %2700 ]
  %2705 = bitcast i8* %2704 to %"class.blink::URLSearchParams"*
  %2706 = call %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"* %2705) #12
  %2707 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %2708 = bitcast i8* %2707 to %"class.blink::FormDataBytesConsumer"*
  call void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* %2708, %"class.blink::ExecutionContext"* %2433, %"class.blink::EncodedFormData"* %2706) #12
  %2709 = getelementptr inbounds i8, i8* %2707, i64 -4
  %2710 = bitcast i8* %2709 to i16*
  %2711 = load atomic i16, i16* %2710 monotonic, align 2
  %2712 = or i16 %2711, 1
  store atomic i16 %2712, i16* %2710 release, align 2
  %2713 = bitcast i8* %2707 to %"class.blink::BytesConsumer"*
  %2714 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2713, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  %2715 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2715) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %39, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.56, i64 0, i64 0), i64 47) #12
  %2716 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %2717 = bitcast %"class.WTF::String"* %39 to i64*
  %2718 = load i64, i64* %2717, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2716, align 8
  %2719 = bitcast %"class.WTF::String"* %76 to i64*
  %2720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  store i64 %2718, i64* %2719, align 8
  %2721 = icmp eq %"class.WTF::StringImpl"* %2720, null
  br i1 %2721, label %2751, label %2722

2722:                                             ; preds = %2703
  %2723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2724 = load atomic i32, i32* %2723 monotonic, align 4
  %2725 = and i32 %2724, 2
  %2726 = icmp eq i32 %2725, 0
  %2727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2720, i64 0, i32 0
  %2728 = load i32, i32* %2727, align 4
  br i1 %2726, label %2729, label %2731

2729:                                             ; preds = %2722
  %2730 = add i32 %2728, -1
  store i32 %2730, i32* %2727, align 4
  br label %2731

2731:                                             ; preds = %2729, %2722
  %2732 = phi i32 [ %2730, %2729 ], [ %2728, %2722 ]
  %2733 = icmp eq i32 %2732, 0
  br i1 %2733, label %2734, label %2735

2734:                                             ; preds = %2731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2720) #12
  br label %2735

2735:                                             ; preds = %2734, %2731
  %2736 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2716, align 8
  %2737 = icmp eq %"class.WTF::StringImpl"* %2736, null
  br i1 %2737, label %2751, label %2738

2738:                                             ; preds = %2735
  %2739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2736, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2740 = load atomic i32, i32* %2739 monotonic, align 4
  %2741 = and i32 %2740, 2
  %2742 = icmp eq i32 %2741, 0
  %2743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2736, i64 0, i32 0
  %2744 = load i32, i32* %2743, align 4
  br i1 %2742, label %2745, label %2747

2745:                                             ; preds = %2738
  %2746 = add i32 %2744, -1
  store i32 %2746, i32* %2743, align 4
  br label %2747

2747:                                             ; preds = %2745, %2738
  %2748 = phi i32 [ %2746, %2745 ], [ %2744, %2738 ]
  %2749 = icmp eq i32 %2748, 0
  br i1 %2749, label %2750, label %2751

2750:                                             ; preds = %2747
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2736) #12
  br label %2751

2751:                                             ; preds = %2703, %2750, %2747, %2735
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2715) #12
  br label %2871

2752:                                             ; preds = %2682
  %2753 = icmp eq %"class.blink::ExecutionContext"* %2433, null
  %2754 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %2433, i64 0, i32 4
  %2755 = select i1 %2753, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %2754
  %2756 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27FetchUploadStreamingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %2755) #12
  br i1 %2756, label %2757, label %2798

2757:                                             ; preds = %2752
  %2758 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2438, align 8
  %2759 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2758, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8ReadableStream18wrapper_type_info_E, %"class.v8::Value"* %2395) #12
  br i1 %2759, label %2760, label %2798

2760:                                             ; preds = %2757
  %2761 = load i64, i64* %2393, align 8
  %2762 = add i64 %2761, -1
  %2763 = inttoptr i64 %2762 to i32*
  %2764 = load i32, i32* %2763, align 4
  %2765 = and i64 %2761, -4294967296
  %2766 = zext i32 %2764 to i64
  %2767 = or i64 %2765, %2766
  %2768 = add i64 %2767, 7
  %2769 = inttoptr i64 %2768 to i16*
  %2770 = load i16, i16* %2769, align 2
  switch i16 %2770, label %2775 [
    i16 1057, label %2771
    i16 1056, label %2771
    i16 1040, label %2771
  ]

2771:                                             ; preds = %2760, %2760, %2760
  %2772 = add i64 %2761, 19
  %2773 = inttoptr i64 %2772 to i8**
  %2774 = load i8*, i8** %2773, align 1
  br label %2778

2775:                                             ; preds = %2760
  %2776 = bitcast %"class.v8::Value"* %2395 to %"class.v8::Object"*
  %2777 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2776, i32 1) #12
  br label %2778

2778:                                             ; preds = %2775, %2771
  %2779 = phi i8* [ %2774, %2771 ], [ %2777, %2775 ]
  %2780 = bitcast i8* %2779 to %"class.blink::ReadableStream"*
  %2781 = getelementptr inbounds i8, i8* %2779, i64 16
  %2782 = load i8, i8* %2781, align 8, !range !3
  %2783 = icmp eq i8 %2782, 0
  br i1 %2783, label %2785, label %2784

2784:                                             ; preds = %2778
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0)) #12
  br label %2873

2785:                                             ; preds = %2778
  %2786 = getelementptr inbounds i8, i8* %2779, i64 32
  %2787 = bitcast i8* %2786 to %"class.blink::ReadableStreamGenericReader"**
  %2788 = load %"class.blink::ReadableStreamGenericReader"*, %"class.blink::ReadableStreamGenericReader"** %2787, align 8
  %2789 = icmp eq %"class.blink::ReadableStreamGenericReader"* %2788, null
  br i1 %2789, label %2791, label %2790

2790:                                             ; preds = %2785
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0)) #12
  br label %2873

2791:                                             ; preds = %2785
  %2792 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 128) #12
  %2793 = bitcast i8* %2792 to %"class.blink::BodyStreamBuffer"*
  call void @_ZN5blink16BodyStreamBufferC1EPNS_11ScriptStateEPNS_14ReadableStreamEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BodyStreamBuffer"* %2793, %"class.blink::ScriptState"* %0, %"class.blink::ReadableStream"* %2780, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  %2794 = getelementptr inbounds i8, i8* %2792, i64 -4
  %2795 = bitcast i8* %2794 to i16*
  %2796 = load atomic i16, i16* %2795 monotonic, align 2
  %2797 = or i16 %2796, 1
  store atomic i16 %2797, i16* %2795 release, align 2
  br label %2871

2798:                                             ; preds = %2757, %2752
  %2799 = bitcast %"class.WTF::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2799) #12
  %2800 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %2801 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %2435, %"class.v8::Value"* %2395, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  store %"class.WTF::StringImpl"* %2801, %"class.WTF::StringImpl"** %2800, align 8
  %2802 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %2803 = load i32, i32* %2802, align 8
  %2804 = icmp eq i32 %2803, 0
  br i1 %2804, label %2805, label %2852

2805:                                             ; preds = %2798
  %2806 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %2807 = bitcast i8* %2806 to %"class.blink::FormDataBytesConsumer"*
  call void @_ZN5blink21FormDataBytesConsumerC1ERKN3WTF6StringE(%"class.blink::FormDataBytesConsumer"* %2807, %"class.WTF::String"* nonnull dereferenceable(8) %40) #12
  %2808 = getelementptr inbounds i8, i8* %2806, i64 -4
  %2809 = bitcast i8* %2808 to i16*
  %2810 = load atomic i16, i16* %2809 monotonic, align 2
  %2811 = or i16 %2810, 1
  store atomic i16 %2811, i16* %2809 release, align 2
  %2812 = bitcast i8* %2806 to %"class.blink::BytesConsumer"*
  %2813 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %2812, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  %2814 = bitcast %"class.WTF::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2814) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0), i64 24) #12
  %2815 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %2816 = bitcast %"class.WTF::String"* %41 to i64*
  %2817 = load i64, i64* %2816, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2815, align 8
  %2818 = bitcast %"class.WTF::String"* %76 to i64*
  %2819 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  store i64 %2817, i64* %2818, align 8
  %2820 = icmp eq %"class.WTF::StringImpl"* %2819, null
  br i1 %2820, label %2850, label %2821

2821:                                             ; preds = %2805
  %2822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2819, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2823 = load atomic i32, i32* %2822 monotonic, align 4
  %2824 = and i32 %2823, 2
  %2825 = icmp eq i32 %2824, 0
  %2826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2819, i64 0, i32 0
  %2827 = load i32, i32* %2826, align 4
  br i1 %2825, label %2828, label %2830

2828:                                             ; preds = %2821
  %2829 = add i32 %2827, -1
  store i32 %2829, i32* %2826, align 4
  br label %2830

2830:                                             ; preds = %2828, %2821
  %2831 = phi i32 [ %2829, %2828 ], [ %2827, %2821 ]
  %2832 = icmp eq i32 %2831, 0
  br i1 %2832, label %2833, label %2834

2833:                                             ; preds = %2830
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2819) #12
  br label %2834

2834:                                             ; preds = %2833, %2830
  %2835 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2815, align 8
  %2836 = icmp eq %"class.WTF::StringImpl"* %2835, null
  br i1 %2836, label %2850, label %2837

2837:                                             ; preds = %2834
  %2838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2835, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2839 = load atomic i32, i32* %2838 monotonic, align 4
  %2840 = and i32 %2839, 2
  %2841 = icmp eq i32 %2840, 0
  %2842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2835, i64 0, i32 0
  %2843 = load i32, i32* %2842, align 4
  br i1 %2841, label %2844, label %2846

2844:                                             ; preds = %2837
  %2845 = add i32 %2843, -1
  store i32 %2845, i32* %2842, align 4
  br label %2846

2846:                                             ; preds = %2844, %2837
  %2847 = phi i32 [ %2845, %2844 ], [ %2843, %2837 ]
  %2848 = icmp eq i32 %2847, 0
  br i1 %2848, label %2849, label %2850

2849:                                             ; preds = %2846
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2835) #12
  br label %2850

2850:                                             ; preds = %2805, %2849, %2846, %2834
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2814) #12
  %2851 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2800, align 8
  br label %2852

2852:                                             ; preds = %2850, %2798
  %2853 = phi %"class.WTF::StringImpl"* [ %2801, %2798 ], [ %2851, %2850 ]
  %2854 = phi i1 [ false, %2798 ], [ true, %2850 ]
  %2855 = phi %"class.blink::BodyStreamBuffer"* [ null, %2798 ], [ %2813, %2850 ]
  %2856 = icmp eq %"class.WTF::StringImpl"* %2853, null
  br i1 %2856, label %2870, label %2857

2857:                                             ; preds = %2852
  %2858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2853, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2859 = load atomic i32, i32* %2858 monotonic, align 4
  %2860 = and i32 %2859, 2
  %2861 = icmp eq i32 %2860, 0
  %2862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2853, i64 0, i32 0
  %2863 = load i32, i32* %2862, align 4
  br i1 %2861, label %2864, label %2866

2864:                                             ; preds = %2857
  %2865 = add i32 %2863, -1
  store i32 %2865, i32* %2862, align 4
  br label %2866

2866:                                             ; preds = %2864, %2857
  %2867 = phi i32 [ %2865, %2864 ], [ %2863, %2857 ]
  %2868 = icmp eq i32 %2867, 0
  br i1 %2868, label %2869, label %2870

2869:                                             ; preds = %2866
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2853) #12
  br label %2870

2870:                                             ; preds = %2869, %2866, %2852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2799) #12
  br i1 %2854, label %2871, label %2873

2871:                                             ; preds = %2870, %2791, %2751, %2673, %2533, %2512, %2500, %2497, %2472
  %2872 = phi %"class.blink::BodyStreamBuffer"* [ %2681, %2673 ], [ %2714, %2751 ], [ %2793, %2791 ], [ %2855, %2870 ], [ %2480, %2500 ], [ %2480, %2497 ], [ %2480, %2472 ], [ %2520, %2512 ], [ %2541, %2533 ]
  br label %2873

2873:                                             ; preds = %2521, %2542, %2784, %2790, %2870, %2871
  %2874 = phi %"class.blink::BodyStreamBuffer"* [ %2872, %2871 ], [ null, %2521 ], [ null, %2542 ], [ null, %2870 ], [ null, %2784 ], [ null, %2790 ]
  %2875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  %2876 = icmp eq %"class.WTF::StringImpl"* %2875, null
  br i1 %2876, label %2877, label %2881

2877:                                             ; preds = %2873
  %2878 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %2879 = load i32, i32* %2878, align 8
  %2880 = icmp eq i32 %2879, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2431) #12
  br i1 %2880, label %2912, label %3026

2881:                                             ; preds = %2873
  %2882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2875, i64 0, i32 1
  %2883 = load i32, i32* %2882, align 4
  %2884 = icmp eq i32 %2883, 0
  br i1 %2884, label %2892, label %2885

2885:                                             ; preds = %2881
  %2886 = load %"class.blink::Headers"*, %"class.blink::Headers"** %2009, align 8
  %2887 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %2888 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2887, i64 0, i32 0
  %2889 = call zeroext i1 @_ZN5blink7Headers3hasERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Headers"* %2886, %"class.WTF::String"* dereferenceable(8) %2888, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br i1 %2889, label %2892, label %2890

2890:                                             ; preds = %2885
  %2891 = load %"class.blink::Headers"*, %"class.blink::Headers"** %2009, align 8
  call void @_ZN5blink7Headers6appendERKN3WTF6StringES4_RNS_14ExceptionStateE(%"class.blink::Headers"* %2891, %"class.WTF::String"* dereferenceable(8) %2888, %"class.WTF::String"* nonnull dereferenceable(8) %76, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  br label %2892

2892:                                             ; preds = %2890, %2885, %2881
  %2893 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2432, align 8
  %2894 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %2895 = load i32, i32* %2894, align 8
  %2896 = icmp eq i32 %2895, 0
  %2897 = icmp eq %"class.WTF::StringImpl"* %2893, null
  br i1 %2897, label %2911, label %2898

2898:                                             ; preds = %2892
  %2899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2900 = load atomic i32, i32* %2899 monotonic, align 4
  %2901 = and i32 %2900, 2
  %2902 = icmp eq i32 %2901, 0
  %2903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2893, i64 0, i32 0
  %2904 = load i32, i32* %2903, align 4
  br i1 %2902, label %2905, label %2907

2905:                                             ; preds = %2898
  %2906 = add i32 %2904, -1
  store i32 %2906, i32* %2903, align 4
  br label %2907

2907:                                             ; preds = %2905, %2898
  %2908 = phi i32 [ %2906, %2905 ], [ %2904, %2898 ]
  %2909 = icmp eq i32 %2908, 0
  br i1 %2909, label %2910, label %2911

2910:                                             ; preds = %2907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2893) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2431) #12
  br i1 %2896, label %2912, label %3026

2911:                                             ; preds = %2892, %2907
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2431) #12
  br i1 %2896, label %2912, label %3026

2912:                                             ; preds = %2910, %2877, %2911, %2409, %2388
  %2913 = phi %"class.blink::BodyStreamBuffer"* [ %2284, %2388 ], [ %2284, %2409 ], [ %2874, %2911 ], [ %2874, %2877 ], [ %2874, %2910 ]
  %2914 = icmp eq %"class.blink::BodyStreamBuffer"* %2913, null
  br i1 %2914, label %2924, label %2915

2915:                                             ; preds = %2912
  %2916 = getelementptr inbounds %"class.blink::BodyStreamBuffer", %"class.blink::BodyStreamBuffer"* %2913, i64 0, i32 11
  %2917 = load i8, i8* %2916, align 1, !range !3
  %2918 = icmp eq i8 %2917, 0
  br i1 %2918, label %2924, label %2919

2919:                                             ; preds = %2915
  %2920 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %99, i64 0, i32 9
  %2921 = load i32, i32* %2920, align 4
  switch i32 %2921, label %2922 [
    i32 0, label %2923
    i32 2, label %2923
  ]

2922:                                             ; preds = %2919
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0)) #12
  br label %3026

2923:                                             ; preds = %2919, %2919
  store i32 3, i32* %2920, align 4
  br label %2924

2924:                                             ; preds = %2915, %2912, %2371, %2923
  %2925 = phi i1 [ true, %2923 ], [ true, %2915 ], [ false, %2912 ], [ false, %2371 ]
  %2926 = phi %"class.blink::BodyStreamBuffer"* [ %2913, %2923 ], [ %2913, %2915 ], [ null, %2912 ], [ null, %2371 ]
  %2927 = icmp eq %"class.blink::BodyStreamBuffer"* %2284, %2926
  %2928 = and i1 %83, %2927
  br i1 %2928, label %2929, label %2935

2929:                                             ; preds = %2924
  %2930 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 2
  %2931 = call zeroext i1 @_ZNK5blink4Body10IsBodyUsedEv(%"class.blink::Body"* %2930) #12
  br i1 %2931, label %2934, label %2932

2932:                                             ; preds = %2929
  %2933 = call zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"* %2930) #12
  br i1 %2933, label %2934, label %2935

2934:                                             ; preds = %2932, %2929
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.33, i64 0, i64 0)) #12
  br label %3026

2935:                                             ; preds = %2932, %2924
  br i1 %2925, label %2936, label %2946

2936:                                             ; preds = %2935
  %2937 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2007, align 8
  %2938 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2937, i64 0, i32 15
  %2939 = ptrtoint %"class.blink::BodyStreamBuffer"* %2926 to i64
  %2940 = bitcast %"class.blink::Member.16"* %2938 to i64*
  store atomic i64 %2939, i64* %2940 monotonic, align 8
  %2941 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2942 = icmp eq i32 %2941, 0
  br i1 %2942, label %2946, label %2943

2943:                                             ; preds = %2936
  %2944 = bitcast %"class.blink::BodyStreamBuffer"* %2926 to i8*
  %2945 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2944) #12
  br label %2946

2946:                                             ; preds = %2943, %2936, %2935
  %2947 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2007, align 8
  %2948 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2947, i64 0, i32 2, i32 0, i32 0
  %2949 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %2948, align 8
  %2950 = call %"class.WTF::StringImpl"* @_ZNK5blink15FetchHeaderList15ExtractMIMETypeEv(%"class.blink::FetchHeaderList"* %2949) #12
  %2951 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2947, i64 0, i32 16
  %2952 = icmp eq %"class.WTF::StringImpl"* %2950, null
  br i1 %2952, label %2970, label %2953

2953:                                             ; preds = %2946
  %2954 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2955 = load atomic i32, i32* %2954 monotonic, align 4
  %2956 = and i32 %2955, 2
  %2957 = icmp eq i32 %2956, 0
  br i1 %2957, label %2958, label %2970

2958:                                             ; preds = %2953
  %2959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2950, i64 0, i32 0
  %2960 = load i32, i32* %2959, align 4
  %2961 = zext i32 %2960 to i33
  %2962 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2961, i33 1) #12
  %2963 = extractvalue { i33, i1 } %2962, 1
  %2964 = extractvalue { i33, i1 } %2962, 0
  %2965 = icmp slt i33 %2964, 0
  %2966 = or i1 %2963, %2965
  br i1 %2966, label %2967, label %2968, !prof !2

2967:                                             ; preds = %2958
  call void @llvm.trap() #12
  unreachable

2968:                                             ; preds = %2958
  %2969 = trunc i33 %2964 to i32
  store i32 %2969, i32* %2959, align 4
  br label %2970

2970:                                             ; preds = %2968, %2953, %2946
  %2971 = ptrtoint %"class.WTF::StringImpl"* %2950 to i64
  %2972 = bitcast %"class.WTF::String"* %2951 to i64*
  %2973 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2951, i64 0, i32 0, i32 0
  %2974 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2973, align 8
  store i64 %2971, i64* %2972, align 8
  %2975 = icmp eq %"class.WTF::StringImpl"* %2974, null
  br i1 %2975, label %2989, label %2976

2976:                                             ; preds = %2970
  %2977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2974, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2978 = load atomic i32, i32* %2977 monotonic, align 4
  %2979 = and i32 %2978, 2
  %2980 = icmp eq i32 %2979, 0
  %2981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2974, i64 0, i32 0
  %2982 = load i32, i32* %2981, align 4
  br i1 %2980, label %2983, label %2985

2983:                                             ; preds = %2976
  %2984 = add i32 %2982, -1
  store i32 %2984, i32* %2981, align 4
  br label %2985

2985:                                             ; preds = %2983, %2976
  %2986 = phi i32 [ %2984, %2983 ], [ %2982, %2976 ]
  %2987 = icmp eq i32 %2986, 0
  br i1 %2987, label %2988, label %2989

2988:                                             ; preds = %2985
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2974) #12
  br label %2989

2989:                                             ; preds = %2970, %2985, %2988
  br i1 %2952, label %3003, label %2990

2990:                                             ; preds = %2989
  %2991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2992 = load atomic i32, i32* %2991 monotonic, align 4
  %2993 = and i32 %2992, 2
  %2994 = icmp eq i32 %2993, 0
  %2995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2950, i64 0, i32 0
  %2996 = load i32, i32* %2995, align 4
  br i1 %2994, label %2997, label %2999

2997:                                             ; preds = %2990
  %2998 = add i32 %2996, -1
  store i32 %2998, i32* %2995, align 4
  br label %2999

2999:                                             ; preds = %2997, %2990
  %3000 = phi i32 [ %2998, %2997 ], [ %2996, %2990 ]
  %3001 = icmp eq i32 %3000, 0
  br i1 %3001, label %3002, label %3003

3002:                                             ; preds = %2999
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2950) #12
  br label %3003

3003:                                             ; preds = %2989, %2999, %3002
  br i1 %83, label %3004, label %3026

3004:                                             ; preds = %3003
  %3005 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 3, i32 0, i32 0
  %3006 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3005, align 8
  %3007 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3006, i64 0, i32 15, i32 0, i32 0
  %3008 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %3007, align 8
  %3009 = icmp eq %"class.blink::BodyStreamBuffer"* %3008, null
  br i1 %3009, label %3026, label %3010

3010:                                             ; preds = %3004
  %3011 = call %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer12CreateClosedEv() #12
  %3012 = call %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"* %0, %"class.blink::BytesConsumer"* %3011, %"class.blink::AbortSignal"* null, %"class.blink::ScriptCachedMetadataHandler"* null, %"class.blink::BlobDataHandle"* null) #12
  %3013 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3005, align 8
  %3014 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3013, i64 0, i32 15
  %3015 = ptrtoint %"class.blink::BodyStreamBuffer"* %3012 to i64
  %3016 = bitcast %"class.blink::Member.16"* %3014 to i64*
  store atomic i64 %3015, i64* %3016 monotonic, align 8
  %3017 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3018 = icmp eq i32 %3017, 0
  br i1 %3018, label %3022, label %3019

3019:                                             ; preds = %3010
  %3020 = bitcast %"class.blink::BodyStreamBuffer"* %3012 to i8*
  %3021 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %3020) #12
  br label %3022

3022:                                             ; preds = %3010, %3019
  %3023 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3005, align 8
  %3024 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3023, i64 0, i32 15, i32 0, i32 0
  %3025 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %3024, align 8
  call void @_ZN5blink16BodyStreamBuffer22CloseAndLockAndDisturbEv(%"class.blink::BodyStreamBuffer"* %3025) #12
  br label %3026

3026:                                             ; preds = %2387, %3003, %3022, %3004, %2911, %2934, %2922, %2429, %2877, %2910, %2181, %2273, %1975, %766, %199, %333, %1869, %1716, %1435, %1097
  %3027 = phi %"class.blink::Request"* [ null, %1097 ], [ null, %1435 ], [ null, %1869 ], [ null, %1975 ], [ null, %1716 ], [ null, %333 ], [ null, %199 ], [ null, %766 ], [ null, %2273 ], [ null, %2181 ], [ null, %2387 ], [ null, %2922 ], [ null, %2934 ], [ null, %2429 ], [ null, %2911 ], [ %1986, %3004 ], [ %1986, %3022 ], [ %1986, %3003 ], [ null, %2877 ], [ null, %2910 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %101) #12
  br i1 %79, label %3035, label %3028

3028:                                             ; preds = %3026
  %3029 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %78, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3029) #12
  %3030 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %3031 = load i32, i32* %3030, align 4
  %3032 = icmp eq i32 %3031, 0
  br i1 %3032, label %3033, label %3035

3033:                                             ; preds = %3028
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %78) #12
  %3034 = bitcast %"class.blink::SecurityOrigin"* %78 to i8*
  call void @free(i8* %3034) #12
  br label %3035

3035:                                             ; preds = %3026, %3028, %3033
  ret %"class.blink::Request"* %3027
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %6, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #12
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %28) #12
  %29 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #12
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %25) #12
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %47, i8* %50) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #12
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #12
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.836"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #12
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %2, i8* %89) #12
  %90 = bitcast %"class.WTF::StringTypeAdapter.856"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #12
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.856"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %2, i16* %86) #12
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %108, i16* %111) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #12
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #12
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4UserEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4PassEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare dereferenceable(88) %"class.blink::PublicURLManager"* @_ZN5blink16ExecutionContext19GetPublicURLManagerEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink16PublicURLManager7ResolveERKNS_4KURLEN4mojo15PendingReceiverIN7network5mojom5blink16URLLoaderFactoryEEE(%"class.blink::PublicURLManager"*, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::PendingReceiver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.416"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.416"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.416"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.416"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.416"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink7Request20ParseCredentialsModeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %14, i64* %15, align 8
  br label %24

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %24

24:                                               ; preds = %16, %12
  %25 = phi i64 [ %23, %16 ], [ %14, %12 ]
  %26 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %31, align 8
  %32 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br i1 %32, label %84, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %49

49:                                               ; preds = %41, %37
  %50 = phi i64 [ %48, %41 ], [ %39, %37 ]
  %51 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 11, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  br i1 %57, label %84, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %63, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %64, i64* %65, align 8
  br label %74

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %72 = bitcast i8** %71 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %74

74:                                               ; preds = %66, %62
  %75 = phi i64 [ %73, %66 ], [ %64, %62 ]
  %76 = phi i32 [ %69, %66 ], [ 0, %62 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  %79 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %75, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 7, i32* %81, align 8
  %82 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  %83 = zext i1 %82 to i64
  br label %84

84:                                               ; preds = %74, %49, %24
  %85 = phi i64 [ 1, %24 ], [ 1, %49 ], [ %83, %74 ]
  %86 = phi i64 [ 0, %24 ], [ 4294967296, %49 ], [ 8589934592, %74 ]
  %87 = or i64 %86, %85
  ret i64 %87
}

declare zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10FetchUtils17IsForbiddenMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils15NormalizeMethodERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink24ConvertTrustTokenToMojomERKNS_10TrustTokenEPNS_14ExceptionStateEPN7network5mojom5blink16TrustTokenParamsE(%"class.blink::TrustToken"* dereferenceable(88), %"class.blink::ExceptionState"*, %"class.network::mojom::blink::TrustTokenParams"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEPNS_16FetchRequestDataE(%"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %4 = bitcast i8* %3 to %"class.blink::Request"*
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %5, align 8
  %7 = tail call %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"* %6) #12
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #12
  %10 = bitcast i8* %9 to %"class.blink::AbortSignal"*
  tail call void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"* %10, %"class.blink::ExecutionContext"* %8) #12
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 8
  %17 = bitcast i8* %16 to i64**
  store i64* null, i64** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 16
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 24
  %21 = bitcast i8* %20 to %"class.blink::Body"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  tail call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %21, %"class.blink::ExecutionContext"* %22) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %23 = bitcast i8* %18 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %3, i64 40
  %25 = bitcast i8* %24 to %"class.blink::FetchRequestData"**
  store %"class.blink::FetchRequestData"* %1, %"class.blink::FetchRequestData"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %3, i64 48
  %27 = bitcast i8* %26 to %"class.blink::Headers"**
  store %"class.blink::Headers"* %7, %"class.blink::Headers"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 56
  %29 = bitcast i8* %28 to i8**
  store i8* %9, i8** %29, align 8
  %30 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %7, i64 0, i32 3
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %3, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast i8* %18 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %35) #12
  ret %"class.blink::Request"* %4
}

declare void @_ZN5blink11AbortSignal6FollowEPS0_(%"class.blink::AbortSignal"*, %"class.blink::AbortSignal"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors22IsCorsSafelistedMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.422"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.422"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.422"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.422"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.422"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::Headers"* @_ZNK5blink7Headers5CloneEv(%"class.blink::Headers"*) local_unnamed_addr #2

declare void @_ZN5blink15FetchHeaderList9ClearListEv(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

declare void @_ZN5blink7Headers8FillWithERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordERNS_14ExceptionStateE(%"class.blink::Headers"*, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink7Headers8FillWithEPKS0_RNS_14ExceptionStateE(%"class.blink::Headers"*, %"class.blink::Headers"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BodyStreamBuffer"* @_ZN5blink7Request10BodyBufferEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 15, i32 0, i32 0
  %5 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %4, align 8
  ret %"class.blink::BodyStreamBuffer"* %5
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink7Headers3hasERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::Headers"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink7Headers6appendERKN3WTF6StringES4_RNS_14ExceptionStateE(%"class.blink::Headers"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Body10IsBodyUsedEv(%"class.blink::Body"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15FetchHeaderList15ExtractMIMETypeEv(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

declare %"class.blink::BodyStreamBuffer"* @_ZN5blink16BodyStreamBuffer6CreateEPNS_11ScriptStateEPNS_13BytesConsumerEPNS_11AbortSignalEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ScriptState"*, %"class.blink::BytesConsumer"*, %"class.blink::AbortSignal"*, %"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #2

declare %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer12CreateClosedEv() local_unnamed_addr #2

declare void @_ZN5blink16BodyStreamBuffer22CloseAndLockAndDisturbEv(%"class.blink::BodyStreamBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::V8UnionRequestOrUSVString"*, %"class.blink::RequestInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %33 [
    i32 0, label %8
    i32 1, label %30
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Request"*, %"class.blink::Request"** %9, align 8
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::RequestInit"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #12
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %8, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %33

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %1, i64 0, i32 3
  %32 = tail call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* null, %"class.WTF::String"* dereferenceable(8) %31, %"class.blink::RequestInit"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #12
  br label %33

33:                                               ; preds = %4, %30, %29
  %34 = phi %"class.blink::Request"* [ %32, %30 ], [ %13, %29 ], [ null, %4 ]
  ret %"class.blink::Request"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEPS0_PKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::Request"*, %"class.blink::RequestInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::RequestInit"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #12
  br label %24

24:                                               ; preds = %4, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret %"class.blink::Request"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateERKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::RequestInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* null, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::RequestInit"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret %"class.blink::Request"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 176) #12
  %5 = bitcast i8* %4 to %"class.blink::RequestInit"*
  tail call void @_ZN5blink11RequestInitC1Ev(%"class.blink::RequestInit"* %5) #12
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* null, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::RequestInit"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  ret %"class.blink::Request"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEPS0_RNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.blink::Request"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 176) #12
  %6 = bitcast i8* %5 to %"class.blink::RequestInit"*
  tail call void @_ZN5blink11RequestInitC1Ev(%"class.blink::RequestInit"* %6) #12
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = call %"class.blink::Request"* @_ZN5blink7Request32CreateRequestWithRequestOrStringEPNS_11ScriptStateEPS0_RKN3WTF6StringEPKNS_11RequestInitERNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.blink::Request"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::RequestInit"* %6, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %3, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret %"class.blink::Request"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS_16FetchRequestData26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"*, %"class.mojo::StructPtr"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %6 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  store i64 0, i64* %7, align 8
  %9 = call %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS0_26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"* %0, %"class.mojo::StructPtr"* nonnull %4, i32 %2) #12
  %10 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %6, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %6, align 8
  %11 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %10) #12
  %13 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %10 to i8*
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %3, %12
  %15 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %16 = bitcast i8* %15 to %"class.blink::Request"*
  %17 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %9, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %17, align 8
  %19 = call %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"* %18) #12
  %20 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  %21 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #12
  %22 = bitcast i8* %21 to %"class.blink::AbortSignal"*
  call void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"* %22, %"class.blink::ExecutionContext"* %20) #12
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 8
  %29 = bitcast i8* %28 to i64**
  store i64* null, i64** %29, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 16
  %31 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 24
  %33 = bitcast i8* %32 to %"class.blink::Body"*
  %34 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #12
  call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %33, %"class.blink::ExecutionContext"* %34) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %35 = bitcast i8* %30 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %35, align 8
  %36 = getelementptr inbounds i8, i8* %15, i64 40
  %37 = bitcast i8* %36 to %"class.blink::FetchRequestData"**
  store %"class.blink::FetchRequestData"* %9, %"class.blink::FetchRequestData"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %15, i64 48
  %39 = bitcast i8* %38 to %"class.blink::Headers"**
  store %"class.blink::Headers"* %19, %"class.blink::Headers"** %39, align 8
  %40 = getelementptr inbounds i8, i8* %15, i64 56
  %41 = bitcast i8* %40 to i8**
  store i8* %21, i8** %41, align 8
  %42 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %19, i64 0, i32 3
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %15, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  %47 = bitcast i8* %30 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %47) #12
  ret %"class.blink::Request"* %16
}

declare %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS0_26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"*, %"class.mojo::StructPtr"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RequestC2EPNS_11ScriptStateEPNS_16FetchRequestDataEPNS_7HeadersEPNS_11AbortSignalE(%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*, %"class.blink::Headers"*, %"class.blink::AbortSignal"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 2
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #12
  tail call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %9, %"class.blink::ExecutionContext"* %10) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = bitcast i32 (...)*** %8 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %11, align 8
  %12 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::FetchRequestData"* %2, %"class.blink::FetchRequestData"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::Headers"* %3, %"class.blink::Headers"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::AbortSignal"* %4, %"class.blink::AbortSignal"** %14, align 8
  ret void
}

declare void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RequestC2EPNS_11ScriptStateEPNS_16FetchRequestDataE(%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::FetchRequestData"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %2, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %4, align 8
  %6 = tail call %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"* %5) #12
  %7 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #12
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #12
  %9 = bitcast i8* %8 to %"class.blink::AbortSignal"*
  tail call void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"* %9, %"class.blink::ExecutionContext"* %7) #12
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 2
  %18 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #12
  tail call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %17, %"class.blink::ExecutionContext"* %18) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %19 = bitcast i32 (...)*** %16 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::FetchRequestData"* %2, %"class.blink::FetchRequestData"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::Headers"* %6, %"class.blink::Headers"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.blink::AbortSignal"** %22 to i8**
  store i8* %8, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %6, i64 0, i32 3
  store i32 1, i32* %24, align 8
  ret void
}

declare %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request6methodEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink7Request3urlEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 1
  ret %"class.blink::KURL"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request11destinationEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = tail call i8* @_ZN7network26RequestDestinationToStringENS_5mojom18RequestDestinationE(i32 %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i64 @strlen(i8* nonnull %7) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %7, i64 %12) #12
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  ret %"class.WTF::StringImpl"* %14
}

declare i8* @_ZN7network26RequestDestinationToStringENS_5mojom18RequestDestinationE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request8referrerEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request17getReferrerPolicyEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %16 [
    i32 0, label %7
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
    i32 4, label %11
    i32 5, label %12
    i32 7, label %13
    i32 8, label %14
    i32 6, label %15
  ]

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i64 10) #12
  br label %18

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.37, i64 0, i64 0), i64 0) #12
  br label %18

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i64 26) #12
  br label %18

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i64 11) #12
  br label %18

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i64 6) #12
  br label %18

12:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0), i64 24) #12
  br label %18

13:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11) #12
  br label %18

14:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i64 13) #12
  br label %18

15:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0), i64 31) #12
  br label %18

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  br label %18

18:                                               ; preds = %16, %15, %14, %13, %12, %11, %10, %9, %8, %7
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  ret %"class.WTF::StringImpl"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request4modeEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 9
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %11 [
    i32 0, label %7
    i32 1, label %8
    i32 2, label %9
    i32 3, label %9
    i32 4, label %10
  ]

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11) #12
  br label %12

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7) #12
  br label %12

9:                                                ; preds = %1, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #12
  br label %12

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #12
  br label %12

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.37, i64 0, i64 0), i64 0) #12
  br label %12

12:                                               ; preds = %11, %10, %9, %8, %7
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request11credentialsEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 3, label %7
    i32 1, label %8
    i32 2, label %9
  ]

7:                                                ; preds = %1, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), i64 4) #12
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11) #12
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), i64 7) #12
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.37, i64 0, i64 0), i64 0) #12
  br label %11

11:                                               ; preds = %10, %9, %8, %7
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request5cacheEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %13 [
    i32 0, label %7
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
    i32 4, label %11
    i32 5, label %12
  ]

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7) #12
  br label %14

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8) #12
  br label %14

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #12
  br label %14

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i64 8) #12
  br label %14

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #12
  br label %14

12:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i64 14) #12
  br label %14

13:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.37, i64 0, i64 0), i64 0) #12
  br label %14

14:                                               ; preds = %13, %12, %11, %10, %9, %8, %7
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  ret %"class.WTF::StringImpl"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request8redirectEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 12
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 1, label %8
    i32 2, label %9
  ]

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i64 6) #12
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5) #12
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i64 6) #12
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.37, i64 0, i64 0), i64 0) #12
  br label %11

11:                                               ; preds = %10, %9, %8, %7
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request9integrityEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 17, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7Request9keepaliveEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 19
  %5 = load i8, i8* %4, align 4, !range !3
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7Request19isHistoryNavigationEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 20
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Request"* @_ZN5blink7Request5cloneEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::Request"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 2
  %5 = tail call zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"* %4) #12
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink4Body10IsBodyUsedEv(%"class.blink::Body"* %4) #12
  br i1 %7, label %8, label %9

8:                                                ; preds = %6, %3
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0)) #12
  br label %59

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %10, align 8
  %12 = tail call %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData5CloneEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::FetchRequestData"* %11, %"class.blink::ScriptState"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %59

16:                                               ; preds = %9
  %17 = ptrtoint %"class.blink::FetchRequestData"* %12 to i64
  %18 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %12, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %18, align 8
  %20 = tail call %"class.blink::Headers"* @_ZN5blink7Headers6CreateEPNS_15FetchHeaderListE(%"class.blink::FetchHeaderList"* %19) #12
  %21 = ptrtoint %"class.blink::Headers"* %20 to i64
  %22 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::Headers"*, %"class.blink::Headers"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %20, i64 0, i32 3
  store i32 %25, i32* %26, align 8
  %27 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #12
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #12
  %29 = bitcast i8* %28 to %"class.blink::AbortSignal"*
  tail call void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"* %29, %"class.blink::ExecutionContext"* %27) #12
  %30 = getelementptr inbounds i8, i8* %28, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = ptrtoint i8* %28 to i64
  %35 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::AbortSignal"*, %"class.blink::AbortSignal"** %35, align 8
  tail call void @_ZN5blink11AbortSignal6FollowEPS0_(%"class.blink::AbortSignal"* %29, %"class.blink::AbortSignal"* %36) #12
  %37 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #12
  %38 = bitcast i8* %37 to %"class.blink::Request"*
  %39 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  %41 = bitcast i8* %40 to i64**
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds i8, i8* %37, i64 16
  %43 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_7RequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 24
  %45 = bitcast i8* %44 to %"class.blink::Body"*
  %46 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #12
  tail call void @_ZN5blink4BodyC2EPNS_16ExecutionContextE(%"class.blink::Body"* %45, %"class.blink::ExecutionContext"* %46) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %47 = bitcast i8* %42 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [7 x i8*], [8 x i8*] }, { [15 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink7RequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 40
  %49 = bitcast i8* %48 to i64*
  store i64 %17, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %37, i64 48
  %51 = bitcast i8* %50 to i64*
  store i64 %21, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %37, i64 56
  %53 = bitcast i8* %52 to i64*
  store i64 %34, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %37, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = bitcast i8* %42 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %58) #12
  br label %59

59:                                               ; preds = %9, %16, %8
  %60 = phi %"class.blink::Request"* [ null, %8 ], [ %38, %16 ], [ null, %9 ]
  ret %"class.blink::Request"* %60
}

declare %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData5CloneEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::FetchRequestData"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchRequestData"* @_ZN5blink7Request15PassRequestDataEPNS_11ScriptStateE(%"class.blink::Request"* nocapture readonly, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = tail call %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData4PassEPNS_11ScriptStateE(%"class.blink::FetchRequestData"* %4, %"class.blink::ScriptState"* %1) #12
  ret %"class.blink::FetchRequestData"* %5
}

declare %"class.blink::FetchRequestData"* @_ZN5blink16FetchRequestData4PassEPNS_11ScriptStateE(%"class.blink::FetchRequestData"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7Request7HasBodyEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 15, i32 0, i32 0
  %5 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %4, align 8
  %6 = icmp ne %"class.blink::BodyStreamBuffer"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BodyStreamBuffer"* @_ZNK5blink7Request10BodyBufferEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 15, i32 0, i32 0
  %5 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %4, align 8
  ret %"class.blink::BodyStreamBuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7Request21CreateFetchAPIRequestEv(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.blink::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.blink::HTTPHeaderMap", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::StringAppend.478", align 8
  %9 = alloca %"class.WTF::StringAppend.479", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call i8* @_Znwm(i64 264) #14, !noalias !28
  %13 = bitcast i8* %12 to %"class.blink::mojom::blink::FetchAPIRequest"*
  tail call void @_ZN5blink5mojom5blink15FetchAPIRequestC1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %13) #12, !noalias !28
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %14, i64* %15, align 8, !alias.scope !28
  %16 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #12
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %2, %21, %36
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = getelementptr inbounds i8, i8* %12, i64 128
  %41 = bitcast i8* %40 to i64*
  %42 = bitcast i8* %40 to %"class.WTF::StringImpl"**
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %39, i64* %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #12
  br label %58

58:                                               ; preds = %57, %54, %38
  %59 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %60 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %59, i64 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = bitcast i8* %12 to i32*
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %59, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds i8, i8* %12, i64 192
  %66 = bitcast i8* %65 to i32*
  store i32 %64, i32* %66, align 8
  %67 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %68 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %67, i64 0, i32 11
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i8, i8* %12, i64 196
  %71 = bitcast i8* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %67, i64 0, i32 12
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds i8, i8* %12, i64 200
  %75 = bitcast i8* %74 to i32*
  store i32 %73, i32* %75, align 8
  %76 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %77 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %76, i64 0, i32 17, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %58
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #12
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  tail call void @llvm.trap() #12
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %58, %80, %95
  %98 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %99 = getelementptr inbounds i8, i8* %12, i64 208
  %100 = bitcast i8* %99 to i64*
  %101 = bitcast i8* %99 to %"class.WTF::StringImpl"**
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  store i64 %98, i64* %100, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #12
  br label %117

117:                                              ; preds = %116, %113, %97
  %118 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %119 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %118, i64 0, i32 20
  %120 = load i8, i8* %119, align 1, !range !3
  %121 = getelementptr inbounds i8, i8* %12, i64 250
  store i8 %120, i8* %121, align 2
  %122 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %118, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds i8, i8* %12, i64 8
  %125 = bitcast i8* %124 to i32*
  store i32 %123, i32* %125, align 8
  %126 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %126) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 112, i1 false)
  %127 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %128 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %127, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %128) #12
  %129 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %130 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %129, i64 0, i32 1
  %131 = call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %130) #12
  br i1 %131, label %132, label %133

132:                                              ; preds = %117
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %3) #12
  br label %133

133:                                              ; preds = %132, %117
  %134 = getelementptr inbounds i8, i8* %12, i64 16
  %135 = bitcast i8* %134 to %"class.blink::KURL"*
  %136 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %135, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #12
  %137 = bitcast %"class.blink::HTTPHeaderMap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #12
  %138 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %4, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %4, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %4, i64 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.blink::HTTPHeaderMap"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* nonnull %4) #12
  %142 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %1, i64 0, i32 4, i32 0, i32 0
  %143 = load %"class.blink::Headers"*, %"class.blink::Headers"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::Headers", %"class.blink::Headers"* %143, i64 0, i32 2, i32 0, i32 0
  %145 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::FetchHeaderList", %"class.blink::FetchHeaderList"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::FetchHeaderList", %"class.blink::FetchHeaderList"* %145, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %147, %148
  br i1 %149, label %170, label %150

150:                                              ; preds = %133
  %151 = bitcast %"class.WTF::StringView"* %5 to i8*
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %154 = bitcast i8** %153 to %"class.WTF::StringImpl"**
  %155 = bitcast %"class.WTF::StringView"* %5 to i64*
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %157 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %160 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %161 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %163 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %4, i64 0, i32 0, i32 0
  %164 = bitcast %"class.WTF::StringAppend.478"* %8 to i8*
  %165 = bitcast %"class.WTF::StringAppend.479"* %9 to i8*
  %166 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %9, i64 0, i32 1
  %168 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %8, i64 0, i32 1, i32 0, i32 0
  %169 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %192

170:                                              ; preds = %508, %133
  %171 = load i32, i32* %140, align 4
  %172 = icmp eq i32 %171, 0
  %173 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %138, align 8
  %174 = load i32, i32* %139, align 8
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %173, i64 %175
  br i1 %172, label %511, label %177

177:                                              ; preds = %170
  %178 = icmp eq i32 %174, 0
  br i1 %178, label %186, label %179

179:                                              ; preds = %177, %183
  %180 = phi %"struct.WTF::KeyValuePair.476"* [ %184, %183 ], [ %173, %177 ]
  %181 = bitcast %"struct.WTF::KeyValuePair.476"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  switch i64 %182, label %186 [
    i64 -1, label %183
    i64 0, label %183
  ]

183:                                              ; preds = %179, %179
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %180, i64 1
  %185 = icmp eq %"struct.WTF::KeyValuePair.476"* %184, %176
  br i1 %185, label %511, label %179

186:                                              ; preds = %179, %177
  %187 = phi %"struct.WTF::KeyValuePair.476"* [ %173, %177 ], [ %180, %179 ]
  %188 = icmp eq %"struct.WTF::KeyValuePair.476"* %187, %176
  br i1 %188, label %511, label %189

189:                                              ; preds = %186
  %190 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %11, align 8
  %191 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %190, i64 0, i32 6, i32 0
  br label %520

192:                                              ; preds = %150, %508
  %193 = phi %"class.std::__1::__tree_end_node"* [ %147, %150 ], [ %509, %508 ]
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #12
  %195 = bitcast %"class.std::__1::__tree_end_node"* %194 to %"class.WTF::StringImpl"**
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  store i8* null, i8** %153, align 8
  %199 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %199, i64* %155, align 8
  br label %204

200:                                              ; preds = %192
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %152, align 8
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 1
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %154, align 8
  br label %204

204:                                              ; preds = %198, %200
  %205 = phi i32 [ %202, %200 ], [ 0, %198 ]
  store i32 %205, i32* %156, align 8
  %206 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [8 x i8]* nonnull dereferenceable(8) @.str.45)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #12
  br i1 %206, label %480, label %207

207:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %158, align 8
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %233, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 acquire, align 4
  %213 = and i32 %212, 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %231, label %215

215:                                              ; preds = %210
  %216 = load atomic i32, i32* %211 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %233

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #12
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !2

228:                                              ; preds = %219
  call void @llvm.trap() #12
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %233

231:                                              ; preds = %210
  %232 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %233

233:                                              ; preds = %207, %215, %229, %231
  %234 = phi %"class.WTF::StringImpl"* [ %232, %231 ], [ %208, %215 ], [ %208, %229 ], [ null, %207 ]
  %235 = ptrtoint %"class.WTF::StringImpl"* %234 to i64
  store i64 %235, i64* %159, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %161, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 5
  %237 = bitcast %"class.std::__1::__tree_end_node"* %236 to %"class.WTF::StringImpl"**
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %263, label %240

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 acquire, align 4
  %243 = and i32 %242, 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %261, label %245

245:                                              ; preds = %240
  %246 = load atomic i32, i32* %241 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %263

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #12
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #12
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %263

261:                                              ; preds = %240
  %262 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %238) #12
  br label %263

263:                                              ; preds = %233, %245, %259, %261
  %264 = phi %"class.WTF::StringImpl"* [ %262, %261 ], [ %238, %245 ], [ %238, %259 ], [ null, %233 ]
  %265 = ptrtoint %"class.WTF::StringImpl"* %264 to i64
  store i64 %265, i64* %162, align 8
  %266 = call { %"struct.WTF::KeyValuePair.476"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.473"* nonnull %163, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #12
  %267 = extractvalue { %"struct.WTF::KeyValuePair.476"*, i8 } %266, 1
  %268 = and i8 %267, 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %270, label %447

270:                                              ; preds = %263
  %271 = extractvalue { %"struct.WTF::KeyValuePair.476"*, i8 } %266, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #12
  %272 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %271, i64 0, i32 1
  %273 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %320, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %293

283:                                              ; preds = %276
  %284 = zext i32 %282 to i33
  %285 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %284, i33 1) #12
  %286 = extractvalue { i33, i1 } %285, 1
  %287 = extractvalue { i33, i1 } %285, 0
  %288 = icmp slt i33 %287, 0
  %289 = or i1 %286, %288
  br i1 %289, label %290, label %291, !prof !2

290:                                              ; preds = %283
  call void @llvm.trap() #12
  unreachable

291:                                              ; preds = %283
  %292 = trunc i33 %287 to i32
  store i32 %292, i32* %281, align 4
  br label %293

293:                                              ; preds = %276, %291
  %294 = phi i32 [ %292, %291 ], [ %282, %276 ]
  %295 = load atomic i32, i32* %277 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  br i1 %297, label %299, label %309

299:                                              ; preds = %293
  %300 = zext i32 %294 to i33
  %301 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %300, i33 1) #12
  %302 = extractvalue { i33, i1 } %301, 1
  %303 = extractvalue { i33, i1 } %301, 0
  %304 = icmp slt i33 %303, 0
  %305 = or i1 %302, %304
  br i1 %305, label %306, label %307, !prof !2

306:                                              ; preds = %299
  call void @llvm.trap() #12
  unreachable

307:                                              ; preds = %299
  %308 = trunc i33 %303 to i32
  store i32 %308, i32* %298, align 4
  br label %309

309:                                              ; preds = %307, %293
  %310 = phi i32 [ %308, %307 ], [ %294, %293 ]
  %311 = load atomic i32, i32* %277 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %309
  %315 = add i32 %310, -1
  store i32 %315, i32* %298, align 4
  br label %316

316:                                              ; preds = %314, %309
  %317 = phi i32 [ %315, %314 ], [ %310, %309 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #12
  br label %320

320:                                              ; preds = %270, %316, %319
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %166, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i8** %167, align 8
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %340, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %340

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i33
  %332 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %331, i33 1) #12
  %333 = extractvalue { i33, i1 } %332, 1
  %334 = extractvalue { i33, i1 } %332, 0
  %335 = icmp slt i33 %334, 0
  %336 = or i1 %333, %335
  br i1 %336, label %337, label %338, !prof !2

337:                                              ; preds = %328
  call void @llvm.trap() #12
  unreachable

338:                                              ; preds = %328
  %339 = trunc i33 %334 to i32
  store i32 %339, i32* %329, align 4
  br label %340

340:                                              ; preds = %320, %323, %338
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.478"* nonnull sret %8, %"class.WTF::StringAppend.479"* nonnull dereferenceable(16) %9, %"class.WTF::StringImpl"* %321)
  %341 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend.478"* nonnull %8) #12
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %379, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 acquire, align 4
  %346 = and i32 %345, 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %364, label %348

348:                                              ; preds = %343
  %349 = load atomic i32, i32* %344 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %366

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = zext i32 %354 to i33
  %356 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %355, i33 1) #12
  %357 = extractvalue { i33, i1 } %356, 1
  %358 = extractvalue { i33, i1 } %356, 0
  %359 = icmp slt i33 %358, 0
  %360 = or i1 %357, %359
  br i1 %360, label %361, label %362, !prof !2

361:                                              ; preds = %352
  call void @llvm.trap() #12
  unreachable

362:                                              ; preds = %352
  %363 = trunc i33 %358 to i32
  store i32 %363, i32* %353, align 4
  br label %366

364:                                              ; preds = %343
  %365 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %341) #12
  br label %366

366:                                              ; preds = %364, %362, %348
  %367 = phi %"class.WTF::StringImpl"* [ %341, %362 ], [ %341, %348 ], [ %365, %364 ]
  %368 = load atomic i32, i32* %344 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #12
  br label %379

379:                                              ; preds = %340, %375, %378
  %380 = phi %"class.WTF::StringImpl"* [ %367, %375 ], [ %367, %378 ], [ null, %340 ]
  %381 = ptrtoint %"class.WTF::StringImpl"* %380 to i64
  %382 = bitcast %"class.WTF::AtomicString"* %272 to i64*
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  store i64 %381, i64* %382, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %379
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #12
  br label %398

398:                                              ; preds = %397, %394, %379
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %410

408:                                              ; preds = %401
  %409 = add i32 %407, -1
  store i32 %409, i32* %406, align 4
  br label %410

410:                                              ; preds = %408, %401
  %411 = phi i32 [ %409, %408 ], [ %407, %401 ]
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #12
  br label %414

414:                                              ; preds = %413, %410, %398
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %430, label %417

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #12
  br label %430

430:                                              ; preds = %414, %426, %429
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #12
  br label %446

446:                                              ; preds = %430, %442, %445
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #12
  br label %447

447:                                              ; preds = %263, %446
  %448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %449 = icmp eq %"class.WTF::StringImpl"* %448, null
  br i1 %449, label %463, label %450

450:                                              ; preds = %447
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load atomic i32, i32* %451 monotonic, align 4
  %453 = and i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  br i1 %454, label %457, label %459

457:                                              ; preds = %450
  %458 = add i32 %456, -1
  store i32 %458, i32* %455, align 4
  br label %459

459:                                              ; preds = %457, %450
  %460 = phi i32 [ %458, %457 ], [ %456, %450 ]
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %463

462:                                              ; preds = %459
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %448) #12
  br label %463

463:                                              ; preds = %447, %459, %462
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #12
  %464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %479, label %466

466:                                              ; preds = %463
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load atomic i32, i32* %467 monotonic, align 4
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  br i1 %470, label %473, label %475

473:                                              ; preds = %466
  %474 = add i32 %472, -1
  store i32 %474, i32* %471, align 4
  br label %475

475:                                              ; preds = %473, %466
  %476 = phi i32 [ %474, %473 ], [ %472, %466 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %464) #12
  br label %479

479:                                              ; preds = %463, %475, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #12
  br label %480

480:                                              ; preds = %204, %479
  %481 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 1, i32 0
  %482 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %481, align 8
  %483 = icmp eq %"class.std::__1::__tree_node_base"* %482, null
  br i1 %483, label %484, label %492

484:                                              ; preds = %480
  %485 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_node_base"*
  %486 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 2
  %487 = bitcast %"class.std::__1::__tree_end_node"* %486 to %"class.std::__1::__tree_end_node"**
  %488 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %487, align 8
  %489 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %488, i64 0, i32 0
  %490 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %489, align 8
  %491 = icmp eq %"class.std::__1::__tree_node_base"* %490, %485
  br i1 %491, label %508, label %499

492:                                              ; preds = %480, %492
  %493 = phi %"class.std::__1::__tree_node_base"* [ %495, %492 ], [ %482, %480 ]
  %494 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %493, i64 0, i32 0, i32 0
  %495 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %494, align 8
  %496 = icmp eq %"class.std::__1::__tree_node_base"* %495, null
  br i1 %496, label %497, label %492

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %493, i64 0, i32 0
  br label %508

499:                                              ; preds = %484, %499
  %500 = phi %"class.std::__1::__tree_end_node"** [ %503, %499 ], [ %487, %484 ]
  %501 = bitcast %"class.std::__1::__tree_end_node"** %500 to %"class.std::__1::__tree_node_base"**
  %502 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %501, align 8
  %503 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %502, i64 0, i32 2
  %504 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %503, align 8
  %505 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %504, i64 0, i32 0
  %506 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %505, align 8
  %507 = icmp eq %"class.std::__1::__tree_node_base"* %506, %502
  br i1 %507, label %508, label %499

508:                                              ; preds = %499, %484, %497
  %509 = phi %"class.std::__1::__tree_end_node"* [ %498, %497 ], [ %488, %484 ], [ %504, %499 ]
  %510 = icmp eq %"class.std::__1::__tree_end_node"* %509, %148
  br i1 %510, label %170, label %192

511:                                              ; preds = %183, %520, %534, %531, %170, %186
  %512 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %513 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %512, i64 0, i32 7, i32 0, i32 0, i32 0
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %513, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %514, null
  br i1 %515, label %562, label %516

516:                                              ; preds = %511
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 1
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %562, label %536

520:                                              ; preds = %189, %534
  %521 = phi %"struct.WTF::KeyValuePair.476"* [ %528, %534 ], [ %187, %189 ]
  %522 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %521, i64 0, i32 0
  %523 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %521, i64 0, i32 1
  %524 = call { %"struct.WTF::KeyValuePair.435"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKNS_12AtomicStringESH_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.432"* %191, %"class.WTF::AtomicString"* dereferenceable(8) %522, %"class.WTF::AtomicString"* dereferenceable(8) %523) #12
  %525 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %521, i64 1
  %526 = icmp eq %"struct.WTF::KeyValuePair.476"* %525, %176
  br i1 %526, label %511, label %527

527:                                              ; preds = %520, %531
  %528 = phi %"struct.WTF::KeyValuePair.476"* [ %532, %531 ], [ %525, %520 ]
  %529 = bitcast %"struct.WTF::KeyValuePair.476"* %528 to i64*
  %530 = load i64, i64* %529, align 8
  switch i64 %530, label %534 [
    i64 -1, label %531
    i64 0, label %531
  ]

531:                                              ; preds = %527, %527
  %532 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %528, i64 1
  %533 = icmp eq %"struct.WTF::KeyValuePair.476"* %532, %176
  br i1 %533, label %511, label %527

534:                                              ; preds = %527
  %535 = icmp eq %"struct.WTF::KeyValuePair.476"* %528, %176
  br i1 %535, label %511, label %520

536:                                              ; preds = %516
  %537 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %537) #12
  %538 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #12
  %539 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %540 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %539, i64 0, i32 7, i32 0
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %10, %"class.blink::KURL"* dereferenceable(112) %538, %"class.WTF::String"* dereferenceable(8) %540) #12
  %541 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %16, align 8
  %542 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %541, i64 0, i32 8
  %543 = load i32, i32* %542, align 8
  %544 = call i8* @_Znwm(i64 120) #14, !noalias !31
  %545 = bitcast i8* %544 to %"class.blink::mojom::blink::Referrer"*
  call void @_ZN5blink5mojom5blink8ReferrerC1ERKNS_4KURLEN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::blink::Referrer"* nonnull %545, %"class.blink::KURL"* nonnull dereferenceable(112) %10, i32 %543) #12, !noalias !31
  %546 = ptrtoint i8* %544 to i64
  %547 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %11, align 8
  %548 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %547, i64 0, i32 9
  %549 = getelementptr inbounds %"class.mojo::StructPtr.457", %"class.mojo::StructPtr.457"* %548, i64 0, i32 0, i32 0, i32 0, i32 0
  %550 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %549, align 8
  store %"class.blink::mojom::blink::Referrer"* null, %"class.blink::mojom::blink::Referrer"** %549, align 8
  %551 = icmp eq %"class.blink::mojom::blink::Referrer"* %550, null
  br i1 %551, label %552, label %554

552:                                              ; preds = %536
  %553 = bitcast %"class.mojo::StructPtr.457"* %548 to i64*
  store i64 %546, i64* %553, align 8
  br label %561

554:                                              ; preds = %536
  call void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"* nonnull %550) #12
  %555 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %550, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %555) #14
  %556 = bitcast %"class.mojo::StructPtr.457"* %548 to i64*
  %557 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %549, align 8
  store i64 %546, i64* %556, align 8
  %558 = icmp eq %"class.blink::mojom::blink::Referrer"* %557, null
  br i1 %558, label %561, label %559

559:                                              ; preds = %554
  call void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"* nonnull %557) #12
  %560 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %557, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %560) #14
  br label %561

561:                                              ; preds = %552, %554, %559
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %537) #12
  br label %562

562:                                              ; preds = %511, %561, %516
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %126) #12
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.478"* noalias sret, %"class.WTF::StringAppend.479"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #12
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.478"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.478"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request8MimeTypeEv(%"class.blink::Request"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 16, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn24_NK5blink7Request8MimeTypeEv(%"class.blink::Request"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %2, i64 5, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 16, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %1, %8, %23
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7Request11ContentTypeEv(%"class.blink::Request"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %6, align 8
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0
  %10 = call zeroext i1 @_ZNK5blink15FetchHeaderList3GetERKN3WTF6StringERS2_(%"class.blink::FetchHeaderList"* %7, %"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %2) #12
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %11
}

declare zeroext i1 @_ZNK5blink15FetchHeaderList3GetERKN3WTF6StringERS2_(%"class.blink::FetchHeaderList"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn24_NK5blink7Request11ContentTypeEv(%"class.blink::Request"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 3
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %3, i64 5, i32 0, i32 0
  %7 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::FetchHeaderList"*, %"class.blink::FetchHeaderList"** %8, align 8
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  %12 = call zeroext i1 @_ZNK5blink15FetchHeaderList3GetERKN3WTF6StringERS2_(%"class.blink::FetchHeaderList"* %9, %"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %2) #12
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink7Request21GetRequestContextTypeEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = icmp eq %"class.blink::FetchRequestData"* %3, null
  %5 = select i1 %4, i32 0, i32 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink7Request21GetRequestDestinationEv(%"class.blink::Request"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %2, align 8
  %4 = icmp eq %"class.blink::FetchRequestData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7Request5TraceEPNS_7VisitorE(%"class.blink::Request"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %1) #12
  %4 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %4, %"class.blink::Visitor"* %1) #12
  %5 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::Member.396"* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, i64 5
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %13, align 8
  tail call void %14(%"class.blink::Visitor"* %1, i8* nonnull %10, i8* nonnull %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv) #12
  br label %15

15:                                               ; preds = %2, %9
  %16 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::Member.398"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* nonnull %21, i8* nonnull %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7HeadersEE5TraceEPNS_7VisitorEPKv) #12
  br label %26

26:                                               ; preds = %15, %20
  %27 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 5
  %28 = bitcast %"class.blink::Member.252"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to i8*
  %33 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, i64 5
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, align 8
  tail call void %36(%"class.blink::Visitor"* %1, i8* nonnull %32, i8* nonnull %32, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AbortSignalEE5TraceEPNS_7VisitorEPKv) #12
  br label %37

37:                                               ; preds = %26, %31
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink7Request5TraceEPNS_7VisitorE(%"class.blink::Request"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.398"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %4, %"class.blink::Visitor"* %1) #12
  %5 = getelementptr inbounds %"class.blink::Member.398", %"class.blink::Member.398"* %3, i64 3
  %6 = bitcast %"class.blink::Member.398"* %5 to %"class.blink::ExecutionContextClient"*
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %6, %"class.blink::Visitor"* %1) #12
  %7 = getelementptr inbounds %"class.blink::Member.398", %"class.blink::Member.398"* %3, i64 5
  %8 = bitcast %"class.blink::Member.398"* %7 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %9 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds %"class.blink::Member.398", %"class.blink::Member.398"* %3, i64 6
  %19 = bitcast %"class.blink::Member.398"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7HeadersEE5TraceEPNS_7VisitorEPKv) #12
  br label %28

28:                                               ; preds = %22, %17
  %29 = getelementptr inbounds %"class.blink::Member.398", %"class.blink::Member.398"* %3, i64 7
  %30 = bitcast %"class.blink::Member.398"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = inttoptr i64 %31 to i8*
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AbortSignalEE5TraceEPNS_7VisitorEPKv) #12
  br label %39

39:                                               ; preds = %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_NK5blink7Request5TraceEPNS_7VisitorE(%"class.blink::Request"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 3
  %4 = bitcast %"class.blink::Member.396"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %4, %"class.blink::Visitor"* %1) #12
  %5 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %3, i64 3
  %6 = bitcast %"class.blink::Member.396"* %5 to %"class.blink::ExecutionContextClient"*
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %6, %"class.blink::Visitor"* %1) #12
  %7 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %3, i64 5
  %8 = bitcast %"class.blink::Member.396"* %7 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %9 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %3, i64 6
  %19 = bitcast %"class.blink::Member.396"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7HeadersEE5TraceEPNS_7VisitorEPKv) #12
  br label %28

28:                                               ; preds = %22, %17
  %29 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %3, i64 7
  %30 = bitcast %"class.blink::Member.396"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = inttoptr i64 %31 to i8*
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AbortSignalEE5TraceEPNS_7VisitorEPKv) #12
  br label %39

39:                                               ; preds = %28, %33
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7RequestD2Ev(%"class.blink::Request"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7RequestD0Ev(%"class.blink::Request"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Request18HasPendingActivityEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 0, i32 2
  %3 = tail call zeroext i1 @_ZNK5blink4Body18HasPendingActivityEv(%"class.blink::Body"* %2) #12
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink7Request18GetWrapperTypeInfoEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink7Request18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink7RequestD1Ev(%"class.blink::Request"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink7RequestD0Ev(%"class.blink::Request"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContextClient"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %3) #12
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #12
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_7RequestEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Body"*
  %4 = tail call zeroext i1 @_ZNK5blink4Body18HasPendingActivityEv(%"class.blink::Body"* %3) #12
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BodyStreamBuffer"* @_ZThn24_N5blink7Request10BodyBufferEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %2, i64 5, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 15, i32 0, i32 0
  %6 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %5, align 8
  ret %"class.blink::BodyStreamBuffer"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BodyStreamBuffer"* @_ZThn24_NK5blink7Request10BodyBufferEv(%"class.blink::Request"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Request", %"class.blink::Request"* %0, i64 -1, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.396", %"class.blink::Member.396"* %2, i64 5, i32 0, i32 0
  %4 = load %"class.blink::FetchRequestData"*, %"class.blink::FetchRequestData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FetchRequestData", %"class.blink::FetchRequestData"* %4, i64 0, i32 15, i32 0, i32 0
  %6 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %5, align 8
  ret %"class.blink::BodyStreamBuffer"* %6
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.659"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %3, align 8
  %5 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #14
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #12
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink16URLLoaderFactory5Name_E, i64 0, i64 0)) #12
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #14
  %17 = bitcast i8* %16 to %"class.network::mojom::blink::URLLoaderFactoryProxy"*
  tail call void @_ZN7network5mojom5blink21URLLoaderFactoryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #12
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.659"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %19 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %24 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %24, i64 1
  %26 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %25, align 8
  tail call void %26(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %19) #12
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #2

declare void @_ZN7network5mojom5blink21URLLoaderFactoryProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink16URLLoaderFactoryEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.390"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #12
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.659"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.659"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.network::mojom::blink::URLLoaderFactoryProxy"*, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %17, align 8
  store %"class.network::mojom::blink::URLLoaderFactoryProxy"* null, %"class.network::mojom::blink::URLLoaderFactoryProxy"** %17, align 8
  %19 = icmp eq %"class.network::mojom::blink::URLLoaderFactoryProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.network::mojom::blink::URLLoaderFactoryProxy"* %18 to void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)***
  %22 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)**, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %22, i64 1
  %24 = load void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)*, void (%"class.network::mojom::blink::URLLoaderFactoryProxy"*)** %23, align 8
  call void %24(%"class.network::mojom::blink::URLLoaderFactoryProxy"* nonnull %18) #12
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote.390", %"class.mojo::PendingRemote.390"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #12
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink16URLLoaderFactoryEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %26) #12
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.394"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #12
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %171, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %12, i64 %15
  br label %17

17:                                               ; preds = %29, %10
  %18 = phi %class.scoped_refptr.10* [ %30, %29 ], [ %16, %10 ]
  %19 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %18, i64 0, i32 0
  %20 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %19, align 8
  %21 = icmp eq %"class.blink::SecurityOrigin"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #12
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %20) #12
  %28 = bitcast %"class.blink::SecurityOrigin"* %20 to i8*
  tail call void @free(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %22, %17
  %30 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %18, i64 1
  %31 = icmp eq %class.scoped_refptr.10* %30, %14
  br i1 %31, label %32, label %17

32:                                               ; preds = %29
  store i32 %8, i32* %5, align 4
  br label %104

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %8, %35
  br i1 %36, label %37, label %102

37:                                               ; preds = %33
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %42, align 8
  %44 = zext i32 %6 to i64
  %45 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %43, i64 %44
  br label %46

46:                                               ; preds = %58, %41
  %47 = phi %class.scoped_refptr.10* [ %59, %58 ], [ %43, %41 ]
  %48 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %47, i64 0, i32 0
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %48, align 8
  %50 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #12
  %53 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %49) #12
  %57 = bitcast %"class.blink::SecurityOrigin"* %49 to i8*
  tail call void @free(i8* %57) #12
  br label %58

58:                                               ; preds = %56, %51, %46
  %59 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %47, i64 1
  %60 = icmp eq %class.scoped_refptr.10* %59, %45
  br i1 %60, label %61, label %46

61:                                               ; preds = %58
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %39
  %63 = bitcast %"class.WTF::Vector"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store i32 0, i32* %34, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #12
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %34, align 8
  br label %68

68:                                               ; preds = %37, %62
  %69 = phi i32 [ 0, %37 ], [ %67, %62 ]
  %70 = phi i32 [ %8, %37 ], [ %66, %62 ]
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %102, !prof !34

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %73, align 8
  %75 = icmp eq %class.scoped_refptr.10* %74, null
  %76 = zext i32 %70 to i64
  %77 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %76) #12
  %78 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %77, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #12
  br i1 %75, label %79, label %84

79:                                               ; preds = %72
  %80 = ptrtoint i8* %78 to i64
  %81 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = lshr i64 %77, 3
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %34, align 8
  br label %102

84:                                               ; preds = %72
  %85 = lshr i64 %77, 3
  %86 = ptrtoint i8* %78 to i64
  %87 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %73, align 8
  %88 = icmp ne i8* %78, null
  %89 = icmp ne %class.scoped_refptr.10* %87, null
  %90 = and i1 %88, %89
  %91 = bitcast %class.scoped_refptr.10* %87 to i8*
  br i1 %90, label %92, label %98, !prof !34

92:                                               ; preds = %84
  %93 = load i32, i32* %5, align 4
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %91, i64 %95, i1 false) #12
  %96 = bitcast %"class.WTF::Vector"* %0 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %92, %84
  %99 = phi i8* [ %97, %92 ], [ %91, %84 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #12
  %100 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %86, i64* %100 monotonic, align 8
  %101 = trunc i64 %85 to i32
  store i32 %101, i32* %34, align 8
  br label %102

102:                                              ; preds = %33, %68, %79, %98
  %103 = load i32, i32* %5, align 4
  br label %104

104:                                              ; preds = %102, %32
  %105 = phi i32 [ %103, %102 ], [ %8, %32 ]
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %107 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %106, align 8
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %107, i64 %108
  %110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %111 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %110, align 8
  %112 = icmp eq i32 %105, 0
  br i1 %112, label %142, label %113

113:                                              ; preds = %104, %134
  %114 = phi %class.scoped_refptr.10* [ %136, %134 ], [ %111, %104 ]
  %115 = phi %class.scoped_refptr.10* [ %135, %134 ], [ %107, %104 ]
  %116 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %115, i64 0, i32 0
  %117 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %116, align 8
  %118 = icmp eq %"class.blink::SecurityOrigin"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %120) #12
  br label %121

121:                                              ; preds = %119, %113
  %122 = ptrtoint %"class.blink::SecurityOrigin"* %117 to i64
  %123 = bitcast %class.scoped_refptr.10* %114 to i64*
  %124 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %114, i64 0, i32 0
  %125 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %124, align 8
  store i64 %122, i64* %123, align 8
  %126 = icmp eq %"class.blink::SecurityOrigin"* %125, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #12
  %129 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %125) #12
  %133 = bitcast %"class.blink::SecurityOrigin"* %125 to i8*
  tail call void @free(i8* %133) #12
  br label %134

134:                                              ; preds = %132, %127, %121
  %135 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %115, i64 1
  %136 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %114, i64 1
  %137 = icmp eq %class.scoped_refptr.10* %135, %109
  br i1 %137, label %138, label %113

138:                                              ; preds = %134
  %139 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %106, align 8
  %140 = load i32, i32* %5, align 4
  %141 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %110, align 8
  br label %142

142:                                              ; preds = %138, %104
  %143 = phi %class.scoped_refptr.10* [ %141, %138 ], [ %111, %104 ]
  %144 = phi i32 [ %140, %138 ], [ 0, %104 ]
  %145 = phi %class.scoped_refptr.10* [ %139, %138 ], [ %107, %104 ]
  %146 = zext i32 %144 to i64
  %147 = load i32, i32* %7, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %145, i64 %148
  %150 = icmp eq i32 %144, %147
  br i1 %150, label %169, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %143, i64 %146
  %153 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %145, i64 %146
  br label %154

154:                                              ; preds = %151, %163
  %155 = phi %class.scoped_refptr.10* [ %164, %163 ], [ %152, %151 ]
  %156 = phi %class.scoped_refptr.10* [ %165, %163 ], [ %153, %151 ]
  %157 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %156, i64 0, i32 0
  %158 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %157, align 8
  %159 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %155, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %158, %"class.blink::SecurityOrigin"** %159, align 8
  %160 = icmp eq %"class.blink::SecurityOrigin"* %158, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %158, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %162) #12
  br label %163

163:                                              ; preds = %161, %154
  %164 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %155, i64 1
  %165 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %156, i64 1
  %166 = icmp eq %class.scoped_refptr.10* %165, %149
  br i1 %166, label %167, label %154

167:                                              ; preds = %163
  %168 = load i32, i32* %7, align 4
  br label %169

169:                                              ; preds = %167, %142
  %170 = phi i32 [ %168, %167 ], [ %144, %142 ]
  store i32 %170, i32* %5, align 4
  br label %171

171:                                              ; preds = %2, %169
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.11"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.11"*, %"class.WTF::Vector.11"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.11"* %1, %0
  br i1 %3, label %219, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #12
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !34

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #12
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !34

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #12
  %108 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #12
  %112 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #12
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #12
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #12
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #12
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  tail call void @llvm.trap() #12
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.11"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56)) unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %0 to i8*
  %4 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 13, i1 false)
  %5 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr.10* null, %class.scoped_refptr.10** %8, align 8
  %9 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %class.scoped_refptr.10*
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi %class.scoped_refptr.10* [ null, %2 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %class.scoped_refptr.10*, %class.scoped_refptr.10** %25, align 8
  %27 = load i32, i32* %22, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %20, %40
  %32 = phi %class.scoped_refptr.10* [ %41, %40 ], [ %21, %20 ]
  %33 = phi %class.scoped_refptr.10* [ %42, %40 ], [ %26, %20 ]
  %34 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %33, i64 0, i32 0
  %35 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %34, align 8
  %36 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %32, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %35, %"class.blink::SecurityOrigin"** %36, align 8
  %37 = icmp eq %"class.blink::SecurityOrigin"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %35, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  br label %40

40:                                               ; preds = %38, %31
  %41 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %32, i64 1
  %42 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %33, i64 1
  %43 = icmp eq %class.scoped_refptr.10* %42, %29
  br i1 %43, label %44, label %31

44:                                               ; preds = %40, %20
  %45 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %45, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  %49 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = zext i32 %47 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %52) #12
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %55 = ptrtoint i8* %54 to i64
  %56 = bitcast %"class.WTF::Vector.11"* %45 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = lshr i64 %53, 3
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %49, align 8
  %59 = bitcast i8* %54 to %"class.WTF::String"*
  br label %60

60:                                               ; preds = %51, %44
  %61 = phi %"class.WTF::String"* [ null, %44 ], [ %59, %51 ]
  %62 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::String"*, %"class.WTF::String"** %65, align 8
  %67 = load i32, i32* %62, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %60, %95
  %72 = phi %"class.WTF::String"* [ %96, %95 ], [ %61, %60 ]
  %73 = phi %"class.WTF::String"* [ %97, %95 ], [ %66, %60 ]
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %71
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 1
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 1
  %98 = icmp eq %"class.WTF::String"* %97, %69
  br i1 %98, label %99, label %71

99:                                               ; preds = %95, %60
  %100 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #12
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %99, %104, %119
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.233"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend.479"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.836"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %6, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #12
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %45) #12
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %46, i8* %25) #12
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #12
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #12
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #12
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %105) #12
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %106, i16* %85) #12
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i16* %109) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #12
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #12
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27FetchUploadStreamingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.837"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #12
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #12
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #12
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #12
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #12
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #12
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #12
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  br label %58

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #12
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %31, %35, %38, %53
  %56 = phi %"class.WTF::StringImpl"* [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %56) #12
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi %"class.WTF::StringImpl"* [ %57, %55 ], [ null, %22 ]
  %60 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  store i8* null, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %61) #12
  br label %64

64:                                               ; preds = %63, %58
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #12
  ret %"class.WTF::StringImpl"* %59
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.61, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::BytesConsumer"*
  %3 = bitcast i8* %0 to void (%"class.blink::BytesConsumer"*)***
  %4 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %3, align 8
  %5 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %4, align 8
  tail call void %5(%"class.blink::BytesConsumer"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN5blink21FormDataBytesConsumerC1EPNS_14DOMArrayBufferE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #2

declare void @_ZN5blink21FormDataBytesConsumerC1EPNS_18DOMArrayBufferViewE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBufferView"*) unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.479", %"class.WTF::StringAppend.479"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"*, i16*) local_unnamed_addr #2

declare void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*) unnamed_addr #2

declare void @_ZN5blink16BodyStreamBufferC1EPNS_11ScriptStateEPNS_14ReadableStreamEPNS_27ScriptCachedMetadataHandlerE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BodyStreamBuffer"*, %"class.blink::ScriptState"*, %"class.blink::ReadableStream"*, %"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !35

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !34

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #12
  br i1 %22, label %23, label %80, !prof !34

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #12
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #12
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink21FormDataBytesConsumerC1ERKN3WTF6StringE(%"class.blink::FormDataBytesConsumer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink11RequestInitC1Ev(%"class.blink::RequestInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_7RequestEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.476"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.473"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.476"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.473"* %0, %"struct.WTF::KeyValuePair.476"* null)
  %11 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.476"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #12
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.476"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.476"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.476"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.476"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.476"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.476"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #12
  %85 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.476"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.476"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.473"* %0, %"struct.WTF::KeyValuePair.476"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.476"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.476"*, i8 } undef, %"struct.WTF::KeyValuePair.476"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.476"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.476"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.473"*, %"struct.WTF::KeyValuePair.476"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.476"*
  %37 = call %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.473"* %0, %"struct.WTF::KeyValuePair.476"* %36, i32 %32, %"struct.WTF::KeyValuePair.476"* %1) #12
  ret %"struct.WTF::KeyValuePair.476"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.476"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.476"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #12
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #12
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.473"*, %"struct.WTF::KeyValuePair.476"*, i32, %"struct.WTF::KeyValuePair.476"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.473", align 8
  %6 = bitcast %"class.WTF::HashTable.473"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.473"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.476"* %1, %"struct.WTF::KeyValuePair.476"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.476"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.473"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.473"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.476"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.473"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.473"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.476"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.476"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.476"* nonnull %37, i32 %34) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.476"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.476"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.476"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.476"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.473"* nonnull %5, %"struct.WTF::KeyValuePair.476"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.476"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.476"* %53, %"struct.WTF::KeyValuePair.476"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.476"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.476"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.476"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.476"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.473"*, %"struct.WTF::KeyValuePair.476"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.476"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.473"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.476"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #12
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.476"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.476"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.476"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.476"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.473"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.476"*, %"struct.WTF::KeyValuePair.476"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.473", %"class.WTF::HashTable.473"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #12
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.476"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair.476"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.476"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.476"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.476"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair.476"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair.476"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.476"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair.476"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair.476"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair.476"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair.476"*, i8 } undef, %"struct.WTF::KeyValuePair.476"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair.476"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair.476"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #12
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #12
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #12
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #12
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.476"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.476"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.476"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.476", %"struct.WTF::KeyValuePair.476"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink4Body18HasPendingActivityEv(%"class.blink::Body"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #12
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #12
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZN5blink16FetchRequestDataC1EPNS_16ExecutionContextE(%"class.blink::FetchRequestData"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16FetchRequestDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FetchRequestDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FetchRequestDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16FetchRequestDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchRequestData"*
  tail call void @_ZNK5blink16FetchRequestData5TraceEPNS_7VisitorE(%"class.blink::FetchRequestData"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16FetchRequestDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchRequestData"*
  tail call void @_ZN5blink16FetchRequestDataD1Ev(%"class.blink::FetchRequestData"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16FetchRequestDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16FetchRequestData5TraceEPNS_7VisitorE(%"class.blink::FetchRequestData"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16FetchRequestDataD1Ev(%"class.blink::FetchRequestData"*) unnamed_addr #3

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.416"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.416"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.856"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.856"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.416"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.856"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.416", %"class.WTF::StringAppend.416"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.856"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.422"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.423"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.423"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.422"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.423"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.422"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.836"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.422", %"class.WTF::StringAppend.422"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.423"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.423"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.836", %"class.WTF::StringTypeAdapter.836"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.423", %"class.WTF::StringAppend.423"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.423", %"class.WTF::StringAppend.423"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

declare void @_ZN5blink11AbortSignalC1EPNS_16ExecutionContextE(%"class.blink::AbortSignal"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink15FetchAPIRequestC1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend.478"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend.478"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.836"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %2, i8* %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.478"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #12
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend.478"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.478"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #12
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend.478"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #12
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend.478"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.66, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend.478"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %49, i8* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.835"* nonnull %53, i8* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend.478"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.836", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.856", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.856"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.478", %"class.WTF::StringAppend.478"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %49, i16* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.836"* nonnull %4, i16* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.856", %"class.WTF::StringTypeAdapter.856"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.479"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.835"* nonnull %53, i16* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.435"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKNS_12AtomicStringESH_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.432"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.435"*, %"struct.WTF::KeyValuePair.435"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.435"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.432"* %0, %"struct.WTF::KeyValuePair.435"* null)
  %11 = load %"struct.WTF::KeyValuePair.435"*, %"struct.WTF::KeyValuePair.435"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.435"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #12
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %68
  %51 = phi %"struct.WTF::KeyValuePair.435"* [ %23, %27 ], [ %74, %68 ]
  %52 = phi %"struct.WTF::KeyValuePair.435"* [ null, %27 ], [ %69, %68 ]
  %53 = phi i64 [ %22, %27 ], [ %73, %68 ]
  %54 = phi i64 [ 0, %27 ], [ %71, %68 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.435"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  store i8* %56, i8** %49, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %60, i8** %29, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %35, align 8
  %67 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  br i1 %67, label %101, label %68

68:                                               ; preds = %50, %58
  %69 = phi %"struct.WTF::KeyValuePair.435"* [ %52, %58 ], [ %51, %50 ]
  %70 = icmp eq i64 %54, 0
  %71 = select i1 %70, i64 %48, i64 %54
  %72 = add i64 %71, %53
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %68
  %79 = icmp eq %"struct.WTF::KeyValuePair.435"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.435"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #12
  %82 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %12, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair.435"* [ %69, %80 ], [ %74, %78 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKNS_12AtomicStringESE_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.435"* dereferenceable(16) %89, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %90 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, %92
  %96 = shl i32 %95, 1
  %97 = load i32, i32* %14, align 8
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %101, label %99

99:                                               ; preds = %88
  %100 = call %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.432"* %0, %"struct.WTF::KeyValuePair.435"* %89)
  br label %101

101:                                              ; preds = %58, %88, %99
  %102 = phi i8 [ 1, %88 ], [ 1, %99 ], [ 0, %58 ]
  %103 = phi %"struct.WTF::KeyValuePair.435"* [ %89, %88 ], [ %100, %99 ], [ %51, %58 ]
  %104 = insertvalue { %"struct.WTF::KeyValuePair.435"*, i8 } undef, %"struct.WTF::KeyValuePair.435"* %103, 0
  %105 = insertvalue { %"struct.WTF::KeyValuePair.435"*, i8 } %104, i8 %102, 1
  ret { %"struct.WTF::KeyValuePair.435"*, i8 } %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.432"*, %"struct.WTF::KeyValuePair.435"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.435"*
  %37 = call %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.432"* %0, %"struct.WTF::KeyValuePair.435"* %36, i32 %32, %"struct.WTF::KeyValuePair.435"* %1) #12
  ret %"struct.WTF::KeyValuePair.435"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKNS_12AtomicStringESE_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.435"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.435"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #12
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #12
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.432"*, %"struct.WTF::KeyValuePair.435"*, i32, %"struct.WTF::KeyValuePair.435"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.432", align 8
  %6 = bitcast %"class.WTF::HashTable.432"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.432"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.435"* %1, %"struct.WTF::KeyValuePair.435"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.435"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.432"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.432"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.435"*, %"struct.WTF::KeyValuePair.435"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.435"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.432"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.432"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.435"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.435"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.435"* nonnull %37, i32 %34) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.435"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.435"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.435"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.435"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.432"* nonnull %5, %"struct.WTF::KeyValuePair.435"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.435"*, %"struct.WTF::KeyValuePair.435"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.435"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.435"* %53, %"struct.WTF::KeyValuePair.435"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.435"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.435"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.435"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.435"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.432"*, %"struct.WTF::KeyValuePair.435"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.435"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.432"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.435"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #12
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.435"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.435"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.435"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.435"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.432"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.435"*, %"struct.WTF::KeyValuePair.435"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.432", %"class.WTF::HashTable.432"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #12
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.435"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %71
  %45 = ptrtoint %"struct.WTF::KeyValuePair.435"* %77 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.435"* [ null, %2 ], [ %72, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.435"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.435"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %82

52:                                               ; preds = %71, %21
  %53 = phi %"struct.WTF::KeyValuePair.435"* [ null, %21 ], [ %72, %71 ]
  %54 = phi i64 [ %17, %21 ], [ %78, %71 ]
  %55 = phi %"struct.WTF::KeyValuePair.435"* [ %16, %21 ], [ %77, %71 ]
  %56 = phi i64 [ %15, %21 ], [ %76, %71 ]
  %57 = phi i64 [ 0, %21 ], [ %74, %71 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.435"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %71, label %61

61:                                               ; preds = %52
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  store i8* %59, i8** %43, align 8
  %63 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %63, i8** %23, align 8
  %64 = getelementptr inbounds i8, i8* %59, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %26, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %29, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br i1 %70, label %82, label %71

71:                                               ; preds = %61, %52
  %72 = phi %"struct.WTF::KeyValuePair.435"* [ %53, %61 ], [ %55, %52 ]
  %73 = icmp eq i64 %57, 0
  %74 = select i1 %73, i64 %42, i64 %57
  %75 = add i64 %74, %56
  %76 = and i64 %75, %10
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %6, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.435"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %44, label %52

82:                                               ; preds = %61, %46
  %83 = phi i64 [ %51, %46 ], [ %54, %61 ]
  %84 = phi i8 [ 0, %46 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.435"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.435"*, i8 } undef, %"struct.WTF::KeyValuePair.435"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.435"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.435"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.435"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.435"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.435"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.435", %"struct.WTF::KeyValuePair.435"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN5blink5mojom5blink8ReferrerC1ERKNS_4KURLEN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::blink::Referrer"*, %"class.blink::KURL"* dereferenceable(112), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7HeadersEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Headers"*
  tail call void @_ZNK5blink7Headers5TraceEPNS_7VisitorE(%"class.blink::Headers"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink7Headers5TraceEPNS_7VisitorE(%"class.blink::Headers"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11AbortSignalEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AbortSignal"*
  %4 = bitcast i8* %1 to void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)**, void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)*, void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)*, void (%"class.blink::AbortSignal"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AbortSignal"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!15 = distinct !{!15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink11RequestInit4bodyEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink11RequestInit4bodyEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN5blink5mojom5blink8Referrer3NewIJNS_4KURLEN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZN5blink5mojom5blink8Referrer3NewIJNS_4KURLEN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!34 = !{!"branch_weights", i32 2000, i32 1}
!35 = !{!"branch_weights", i32 2146410443, i32 1073205}
