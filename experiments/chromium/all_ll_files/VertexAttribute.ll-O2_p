; ModuleID = '../../third_party/angle/src/libANGLE/VertexAttribute.cpp'
source_filename = "../../third_party/angle/src/libANGLE/VertexAttribute.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer", %"class.angle::BitSetT" }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::BufferImpl" = type opaque
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.angle::BitSetT" = type { i64 }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.gl::Context" = type opaque

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZN2gl14BindingPointerINS_6BufferEED0Ev = comdat any

$_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = comdat any

$_ZTVN2gl14BindingPointerINS_6BufferEEE = comdat any

@_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZN5angle16gFormatInfoTableE = external global [0 x %"struct.angle::Format"], align 8
@_ZTVN2gl14BindingPointerINS_6BufferEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::BindingPointer"*)* @_ZN2gl14BindingPointerINS_6BufferEED0Ev to i8*)] }, comdat, align 8

@_ZN2gl13VertexBindingC1Ev = hidden unnamed_addr alias void (%"class.gl::VertexBinding"*), void (%"class.gl::VertexBinding"*)* @_ZN2gl13VertexBindingC2Ev
@_ZN2gl13VertexBindingC1Ej = hidden unnamed_addr alias void (%"class.gl::VertexBinding"*, i32), void (%"class.gl::VertexBinding"*, i32)* @_ZN2gl13VertexBindingC2Ej
@_ZN2gl13VertexBindingC1EOS0_ = hidden unnamed_addr alias void (%"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*), void (%"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*)* @_ZN2gl13VertexBindingC2EOS0_
@_ZN2gl13VertexBindingD1Ev = hidden unnamed_addr alias void (%"class.gl::VertexBinding"*), void (%"class.gl::VertexBinding"*)* @_ZN2gl13VertexBindingD2Ev
@_ZN2gl15VertexAttributeC1Ej = hidden unnamed_addr alias void (%"struct.gl::VertexAttribute"*, i32), void (%"struct.gl::VertexAttribute"*, i32)* @_ZN2gl15VertexAttributeC2Ej
@_ZN2gl15VertexAttributeC1EOS0_ = hidden unnamed_addr alias void (%"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*), void (%"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*)* @_ZN2gl15VertexAttributeC2EOS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl13VertexBindingC2Ev(%"class.gl::VertexBinding"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 0
  store i32 16, i32* %2, align 8
  %3 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 2
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 4, i32 0
  store i64 1, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13VertexBindingC2Ej(%"class.gl::VertexBinding"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 0
  store i32 16, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 2
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 4, i32 0
  %9 = zext i32 %1 to i64
  %10 = shl i64 1, %9
  %11 = and i64 %10, 65535
  store i64 %11, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13VertexBindingC2EOS0_(%"class.gl::VertexBinding"*, %"class.gl::VertexBinding"* dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 4, i32 0
  store i64 0, i64* %5, align 8
  %6 = icmp eq %"class.gl::VertexBinding"* %0, %1
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 0
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 4, i32 0
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %5, align 8
  %19 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 3, i32 0, i32 1
  %20 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %19, align 8
  %21 = ptrtoint %"class.gl::Buffer"* %20 to i64
  %22 = icmp eq %"class.gl::Buffer"* %20, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %7
  %24 = bitcast %"class.gl::Buffer"** %4 to i64*
  br label %31

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %20, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %26, align 8
  %29 = bitcast %"class.gl::Buffer"** %4 to i64*
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %23, %25
  %32 = phi i64* [ %24, %23 ], [ %29, %25 ]
  %33 = phi i64 [ 0, %23 ], [ %30, %25 ]
  %34 = bitcast %"class.gl::Buffer"** %19 to i64*
  store i64 %33, i64* %34, align 8
  store i64 %21, i64* %32, align 8
  br label %35

35:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(40) %"class.gl::VertexBinding"* @_ZN2gl13VertexBindingaSEOS0_(%"class.gl::VertexBinding"* returned, %"class.gl::VertexBinding"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.gl::VertexBinding"* %0, %1
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 4, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 4, i32 0
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %17, align 8
  %19 = ptrtoint %"class.gl::Buffer"* %18 to i64
  %20 = icmp eq %"class.gl::Buffer"* %18, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %18, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  br label %25

25:                                               ; preds = %4, %21
  %26 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast %"class.gl::Buffer"** %17 to i64*
  %28 = bitcast %"class.gl::Buffer"** %26 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %27, align 8
  store i64 %19, i64* %28, align 8
  br label %30

30:                                               ; preds = %2, %25
  ret %"class.gl::VertexBinding"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl13VertexBindingD2Ev(%"class.gl::VertexBinding"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2gl13VertexBinding25onContainerBindingChangedEPKNS_7ContextEi(%"class.gl::VertexBinding"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %4, align 8
  %6 = icmp eq %"class.gl::Buffer"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %5, i64 0, i32 4, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %2
  store i32 %10, i32* %8, align 8
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15VertexAttributeC2Ej(%"struct.gl::VertexAttribute"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 1
  store %"struct.angle::Format"* getelementptr inbounds ([0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 156), %"struct.angle::Format"** %4, align 8
  %5 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 5
  %7 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i32 %1, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 6
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15VertexAttributeC2EOS0_(%"struct.gl::VertexAttribute"* nocapture, %"struct.gl::VertexAttribute"* nocapture readonly dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 1
  %8 = bitcast %"struct.angle::Format"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.angle::Format"** %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %25, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZN2gl15VertexAttributeaSEOS0_(%"struct.gl::VertexAttribute"* returned, %"struct.gl::VertexAttribute"* readonly dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"struct.gl::VertexAttribute"* %0, %1
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 0
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 1
  %9 = bitcast %"struct.angle::Format"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 1
  %12 = bitcast %"struct.angle::Format"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 5
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %1, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 6
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %2, %4
  ret %"struct.gl::VertexAttribute"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* nocapture, %"class.gl::VertexBinding"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 3, i32 0, i32 1
  %4 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %3, align 8
  %5 = icmp eq %"class.gl::Buffer"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 6
  store i64 0, i64* %7, align 8
  br label %85

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %4, i64 0, i32 4, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 1
  %17 = load %"struct.angle::Format"*, %"struct.angle::Format"** %16, align 8
  %18 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %17, i64 0, i32 15
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = sub i64 %10, %12
  %22 = xor i64 %21, %10
  %23 = xor i64 %12, %10
  %24 = and i64 %22, %23
  %25 = icmp sgt i64 %24, -1
  %26 = icmp slt i64 %21, 0
  %27 = select i1 %26, i8 2, i8 1
  %28 = select i1 %25, i8 0, i8 %27
  %29 = sub i64 %21, %15
  %30 = xor i64 %29, -9223372036854775808
  %31 = and i64 %30, %21
  %32 = icmp sgt i64 %31, -1
  %33 = icmp slt i64 %29, 0
  %34 = select i1 %33, i8 2, i8 1
  %35 = select i1 %32, i8 0, i8 %34
  %36 = or i8 %35, %28
  %37 = sub i64 %29, %20
  %38 = xor i64 %37, -9223372036854775808
  %39 = and i64 %38, %29
  %40 = icmp sgt i64 %39, -1
  %41 = icmp slt i64 %37, 0
  %42 = select i1 %41, i8 2, i8 1
  %43 = select i1 %40, i8 0, i8 %42
  %44 = or i8 %36, %43
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 6
  br i1 %45, label %48, label %47

47:                                               ; preds = %8
  store i64 -9223372036854775808, i64* %46, align 8
  br label %85

48:                                               ; preds = %8
  store i64 %37, i64* %46, align 8
  br i1 %41, label %85, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store i64 9223372036854775807, i64* %46, align 8
  br label %85

54:                                               ; preds = %49
  %55 = zext i32 %51 to i64
  %56 = sdiv i64 %37, %55
  %57 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %54
  %61 = zext i32 %58 to i64
  %62 = icmp eq i64 %56, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = udiv i64 9223372036854775807, %61
  %65 = icmp slt i64 %64, %56
  %66 = select i1 %65, i8 2, i8 0
  %67 = mul nsw i64 %56, %61
  br label %68

68:                                               ; preds = %60, %63
  %69 = phi i8 [ %66, %63 ], [ 0, %60 ]
  %70 = phi i64 [ %67, %63 ], [ 0, %60 ]
  %71 = add nsw i64 %61, -1
  %72 = add i64 %70, %71
  %73 = xor i64 %72, %70
  %74 = xor i64 %72, %71
  %75 = and i64 %73, %74
  %76 = icmp sgt i64 %75, -1
  %77 = icmp slt i64 %72, 0
  %78 = select i1 %77, i8 2, i8 1
  %79 = select i1 %76, i8 0, i8 %78
  %80 = or i8 %69, %79
  %81 = icmp eq i8 %80, 0
  %82 = select i1 %81, i64 %72, i64 -9223372036854775808
  br label %83

83:                                               ; preds = %54, %68
  %84 = phi i64 [ %56, %54 ], [ %82, %68 ]
  store i64 %84, i64* %46, align 8
  br label %85

85:                                               ; preds = %47, %53, %83, %48, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl28ComputeVertexAttributeStrideERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* nocapture readonly dereferenceable(48), %"class.gl::VertexBinding"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = select i1 %5, i64 16, i64 %8
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl28ComputeVertexAttributeOffsetERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* nocapture readonly dereferenceable(48), %"class.gl::VertexBinding"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  ret i64 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl32ComputeVertexBindingElementCountEjmm(i32, i64, i64) local_unnamed_addr #4 {
  %4 = icmp ne i64 %2, 0
  %5 = icmp ne i32 %0, 0
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = zext i32 %0 to i64
  %9 = add nsw i64 %8, -1
  %10 = add i64 %9, %2
  %11 = udiv i64 %10, %8
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i64 [ %11, %7 ], [ %1, %3 ]
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer", %"class.angle::BindingPointer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14BindingPointerINS_6BufferEED0Ev(%"class.gl::BindingPointer"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.gl::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
