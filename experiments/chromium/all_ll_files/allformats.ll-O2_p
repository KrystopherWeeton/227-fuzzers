; ModuleID = '../../third_party/ffmpeg/libavformat/allformats.c'
source_filename = "../../third_party/ffmpeg/libavformat/allformats.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, {}*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

@outdev_list = internal unnamed_addr global %struct.AVOutputFormat** null, align 8
@demuxer_list = internal unnamed_addr constant [7 x %struct.AVInputFormat*] [%struct.AVInputFormat* @ff_flac_demuxer, %struct.AVInputFormat* @ff_matroska_demuxer, %struct.AVInputFormat* @ff_mov_demuxer, %struct.AVInputFormat* @ff_mp3_demuxer, %struct.AVInputFormat* @ff_ogg_demuxer, %struct.AVInputFormat* @ff_wav_demuxer, %struct.AVInputFormat* null], align 16
@indev_list = internal unnamed_addr global %struct.AVInputFormat** null, align 8
@av_format_next_init = internal global i32 0, align 4
@avpriv_register_devices_mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8
@ff_flac_demuxer = external global %struct.AVInputFormat, align 8
@ff_matroska_demuxer = external global %struct.AVInputFormat, align 8
@ff_mov_demuxer = external global %struct.AVInputFormat, align 8
@ff_mp3_demuxer = external global %struct.AVInputFormat, align 8
@ff_ogg_demuxer = external global %struct.AVInputFormat, align 8
@ff_wav_demuxer = external global %struct.AVInputFormat, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.AVOutputFormat* @av_muxer_iterate(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = load %struct.AVOutputFormat**, %struct.AVOutputFormat*** @outdev_list, align 8
  %5 = icmp eq %struct.AVOutputFormat** %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.AVOutputFormat*, %struct.AVOutputFormat** %4, i64 %3
  %8 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %7, align 8
  %9 = icmp eq %struct.AVOutputFormat* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = add i64 %3, 1
  %12 = inttoptr i64 %11 to i8*
  store i8* %12, i8** %0, align 8
  br label %13

13:                                               ; preds = %1, %6, %10
  %14 = phi %struct.AVOutputFormat* [ null, %6 ], [ %8, %10 ], [ null, %1 ]
  ret %struct.AVOutputFormat* %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.AVInputFormat* @av_demuxer_iterate(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 6
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds [7 x %struct.AVInputFormat*], [7 x %struct.AVInputFormat*]* @demuxer_list, i64 0, i64 %3
  br label %13

7:                                                ; preds = %1
  %8 = load %struct.AVInputFormat**, %struct.AVInputFormat*** @indev_list, align 8
  %9 = icmp eq %struct.AVInputFormat** %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %7
  %11 = add i64 %3, -6
  %12 = getelementptr inbounds %struct.AVInputFormat*, %struct.AVInputFormat** %8, i64 %11
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi %struct.AVInputFormat** [ %6, %5 ], [ %12, %10 ]
  %15 = load %struct.AVInputFormat*, %struct.AVInputFormat** %14, align 8
  %16 = icmp eq %struct.AVInputFormat* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = add i64 %3, 1
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %0, align 8
  br label %20

20:                                               ; preds = %7, %13, %17
  %21 = phi %struct.AVInputFormat* [ null, %13 ], [ %15, %17 ], [ null, %7 ]
  ret %struct.AVInputFormat* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVInputFormat* @av_iformat_next(%struct.AVInputFormat* readonly) local_unnamed_addr #1 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_format_next_init, void ()* nonnull @av_format_init_next) #4
  %3 = icmp eq %struct.AVInputFormat* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %0, i64 0, i32 7
  %6 = load %struct.AVInputFormat*, %struct.AVInputFormat** %5, align 8
  ret %struct.AVInputFormat* %6

7:                                                ; preds = %1
  ret %struct.AVInputFormat* @ff_flac_demuxer
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @av_format_init_next() #1 {
  %1 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  %2 = load %struct.AVOutputFormat**, %struct.AVOutputFormat*** @outdev_list, align 8
  %3 = icmp eq %struct.AVOutputFormat** %2, null
  br i1 %3, label %33, label %4

4:                                                ; preds = %0
  %5 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %2, align 8
  %6 = icmp eq %struct.AVOutputFormat* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %4, %14
  %8 = phi i64 [ %15, %14 ], [ 0, %4 ]
  %9 = phi %struct.AVOutputFormat* [ %17, %14 ], [ %5, %4 ]
  %10 = phi %struct.AVOutputFormat* [ %9, %14 ], [ null, %4 ]
  %11 = icmp eq %struct.AVOutputFormat* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %10, i64 0, i32 10
  store %struct.AVOutputFormat* %9, %struct.AVOutputFormat** %13, align 8
  br label %14

14:                                               ; preds = %7, %12
  %15 = add nuw i64 %8, 1
  %16 = getelementptr inbounds %struct.AVOutputFormat*, %struct.AVOutputFormat** %2, i64 %15
  %17 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %16, align 8
  %18 = icmp eq %struct.AVOutputFormat* %17, null
  br i1 %18, label %33, label %7

19:                                               ; preds = %33
  %20 = load %struct.AVInputFormat*, %struct.AVInputFormat** %34, align 8
  %21 = icmp eq %struct.AVInputFormat* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %19, %22
  %23 = phi i64 [ %27, %22 ], [ 0, %19 ]
  %24 = phi %struct.AVInputFormat* [ %29, %22 ], [ %20, %19 ]
  %25 = phi %struct.AVInputFormat* [ %24, %22 ], [ @ff_wav_demuxer, %19 ]
  %26 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %25, i64 0, i32 7
  store %struct.AVInputFormat* %24, %struct.AVInputFormat** %26, align 8
  %27 = add nuw i64 %23, 1
  %28 = getelementptr inbounds %struct.AVInputFormat*, %struct.AVInputFormat** %34, i64 %27
  %29 = load %struct.AVInputFormat*, %struct.AVInputFormat** %28, align 8
  %30 = icmp eq %struct.AVInputFormat* %29, null
  br i1 %30, label %31, label %22

31:                                               ; preds = %22, %19, %33
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  ret void

33:                                               ; preds = %14, %0, %4
  store %struct.AVInputFormat* @ff_matroska_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_flac_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_mov_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_matroska_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_mp3_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_mov_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_ogg_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_mp3_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_wav_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_ogg_demuxer, i64 0, i32 7), align 8
  %34 = load %struct.AVInputFormat**, %struct.AVInputFormat*** @indev_list, align 8
  %35 = icmp eq %struct.AVInputFormat** %34, null
  br i1 %35, label %31, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVOutputFormat* @av_oformat_next(%struct.AVOutputFormat* readonly) local_unnamed_addr #1 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_format_next_init, void ()* nonnull @av_format_init_next) #4
  %3 = icmp eq %struct.AVOutputFormat* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %0, i64 0, i32 10
  %6 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %5, align 8
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.AVOutputFormat**, %struct.AVOutputFormat*** @outdev_list, align 8
  %9 = icmp eq %struct.AVOutputFormat** %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %8, align 8
  ret %struct.AVOutputFormat* %11

12:                                               ; preds = %7, %4
  %13 = phi %struct.AVOutputFormat* [ %6, %4 ], [ null, %7 ]
  ret %struct.AVOutputFormat* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_register_all() local_unnamed_addr #1 {
  %1 = tail call i32 @pthread_once(i32* nonnull @av_format_next_init, void ()* nonnull @av_format_init_next) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_register_input_format(%struct.AVInputFormat* nocapture readnone) local_unnamed_addr #1 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_format_next_init, void ()* nonnull @av_format_init_next) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_register_output_format(%struct.AVOutputFormat* nocapture readnone) local_unnamed_addr #1 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_format_next_init, void ()* nonnull @av_format_init_next) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avpriv_register_devices(%struct.AVOutputFormat**, %struct.AVInputFormat**) local_unnamed_addr #1 {
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  store %struct.AVOutputFormat** %0, %struct.AVOutputFormat*** @outdev_list, align 8
  store %struct.AVInputFormat** %1, %struct.AVInputFormat*** @indev_list, align 8
  %4 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  %6 = load %struct.AVOutputFormat**, %struct.AVOutputFormat*** @outdev_list, align 8
  %7 = icmp eq %struct.AVOutputFormat** %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %6, align 8
  %10 = icmp eq %struct.AVOutputFormat* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %8, %18
  %12 = phi i64 [ %19, %18 ], [ 0, %8 ]
  %13 = phi %struct.AVOutputFormat* [ %21, %18 ], [ %9, %8 ]
  %14 = phi %struct.AVOutputFormat* [ %13, %18 ], [ null, %8 ]
  %15 = icmp eq %struct.AVOutputFormat* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %14, i64 0, i32 10
  store %struct.AVOutputFormat* %13, %struct.AVOutputFormat** %17, align 8
  br label %18

18:                                               ; preds = %16, %11
  %19 = add nuw i64 %12, 1
  %20 = getelementptr inbounds %struct.AVOutputFormat*, %struct.AVOutputFormat** %6, i64 %19
  %21 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %20, align 8
  %22 = icmp eq %struct.AVOutputFormat* %21, null
  br i1 %22, label %35, label %11

23:                                               ; preds = %35
  %24 = load %struct.AVInputFormat*, %struct.AVInputFormat** %36, align 8
  %25 = icmp eq %struct.AVInputFormat* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ 0, %23 ]
  %28 = phi %struct.AVInputFormat* [ %33, %26 ], [ %24, %23 ]
  %29 = phi %struct.AVInputFormat* [ %28, %26 ], [ @ff_wav_demuxer, %23 ]
  %30 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %29, i64 0, i32 7
  store %struct.AVInputFormat* %28, %struct.AVInputFormat** %30, align 8
  %31 = add nuw i64 %27, 1
  %32 = getelementptr inbounds %struct.AVInputFormat*, %struct.AVInputFormat** %36, i64 %31
  %33 = load %struct.AVInputFormat*, %struct.AVInputFormat** %32, align 8
  %34 = icmp eq %struct.AVInputFormat* %33, null
  br i1 %34, label %38, label %26

35:                                               ; preds = %18, %8, %2
  store %struct.AVInputFormat* @ff_matroska_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_flac_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_mov_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_matroska_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_mp3_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_mov_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_ogg_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_mp3_demuxer, i64 0, i32 7), align 8
  store %struct.AVInputFormat* @ff_wav_demuxer, %struct.AVInputFormat** getelementptr inbounds (%struct.AVInputFormat, %struct.AVInputFormat* @ff_ogg_demuxer, i64 0, i32 7), align 8
  %36 = load %struct.AVInputFormat**, %struct.AVInputFormat*** @indev_list, align 8
  %37 = icmp eq %struct.AVInputFormat** %36, null
  br i1 %37, label %38, label %23

38:                                               ; preds = %26, %23, %35
  %39 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @avpriv_register_devices_mutex) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
