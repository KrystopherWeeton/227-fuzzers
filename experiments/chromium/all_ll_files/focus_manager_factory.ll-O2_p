; ModuleID = '../../ui/views/focus/focus_manager_factory.cc'
source_filename = "../../ui/views/focus/focus_manager_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::FocusManagerFactory" = type { i32 (...)** }
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.0", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.10", i32, [4 x i8], %"class.base::ObserverList", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type { i32 (...)** }
%"class.views::View" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.views::Widget" = type opaque
%"class.views::(anonymous namespace)::DefaultFocusManagerFactory" = type { %"class.views::FocusManagerFactory" }

@_ZTVN5views19FocusManagerFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::FocusManagerFactory"*)* @_ZN5views19FocusManagerFactoryD2Ev to i8*), i8* bitcast (void (%"class.views::FocusManagerFactory"*)* @_ZN5views19FocusManagerFactoryD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN5views12_GLOBAL__N_123g_focus_manager_factoryE = internal unnamed_addr global %"class.views::FocusManagerFactory"* null, align 8
@_ZTVN5views12_GLOBAL__N_126DefaultFocusManagerFactoryE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::FocusManagerFactory"*)* @_ZN5views19FocusManagerFactoryD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::DefaultFocusManagerFactory"*)* @_ZN5views12_GLOBAL__N_126DefaultFocusManagerFactoryD0Ev to i8*), i8* bitcast (%"class.views::FocusManager"* (%"class.views::(anonymous namespace)::DefaultFocusManagerFactory"*, %"class.views::Widget"*)* @_ZN5views12_GLOBAL__N_126DefaultFocusManagerFactory18CreateFocusManagerEPNS_6WidgetE to i8*)] }, align 8

@_ZN5views19FocusManagerFactoryD1Ev = hidden unnamed_addr alias void (%"class.views::FocusManagerFactory"*), void (%"class.views::FocusManagerFactory"*)* @_ZN5views19FocusManagerFactoryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views19FocusManagerFactoryC2Ev(%"class.views::FocusManagerFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::FocusManagerFactory", %"class.views::FocusManagerFactory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views19FocusManagerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5views19FocusManagerFactoryD0Ev(%"class.views::FocusManagerFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::FocusManager"* @_ZN5views19FocusManagerFactory6CreateEPNS_6WidgetE(%"class.views::Widget"*) local_unnamed_addr #3 align 2 {
  %2 = load %"class.views::FocusManagerFactory"*, %"class.views::FocusManagerFactory"** @_ZN5views12_GLOBAL__N_123g_focus_manager_factoryE, align 8
  %3 = icmp eq %"class.views::FocusManagerFactory"* %2, null
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = tail call i8* @_Znwm(i64 8) #9
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views12_GLOBAL__N_126DefaultFocusManagerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i8* %5, i8** bitcast (%"class.views::FocusManagerFactory"** @_ZN5views12_GLOBAL__N_123g_focus_manager_factoryE to i8**), align 8
  %7 = bitcast i8* %5 to %"class.views::FocusManagerFactory"*
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi %"class.views::FocusManagerFactory"* [ %2, %1 ], [ %7, %4 ]
  %10 = bitcast %"class.views::FocusManagerFactory"* %9 to %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)***
  %11 = load %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)**, %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)*, %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)** %11, i64 2
  %13 = load %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)*, %"class.views::FocusManager"* (%"class.views::FocusManagerFactory"*, %"class.views::Widget"*)** %12, align 8
  %14 = tail call %"class.views::FocusManager"* %13(%"class.views::FocusManagerFactory"* nonnull %9, %"class.views::Widget"* %0) #10
  ret %"class.views::FocusManager"* %14
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views19FocusManagerFactory7InstallEPS0_(%"class.views::FocusManagerFactory"*) local_unnamed_addr #3 align 2 {
  %2 = load %"class.views::FocusManagerFactory"*, %"class.views::FocusManagerFactory"** @_ZN5views12_GLOBAL__N_123g_focus_manager_factoryE, align 8
  %3 = icmp eq %"class.views::FocusManagerFactory"* %2, %0
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = icmp eq %"class.views::FocusManagerFactory"* %2, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.views::FocusManagerFactory"* %2 to void (%"class.views::FocusManagerFactory"*)***
  %8 = load void (%"class.views::FocusManagerFactory"*)**, void (%"class.views::FocusManagerFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::FocusManagerFactory"*)*, void (%"class.views::FocusManagerFactory"*)** %8, i64 1
  %10 = load void (%"class.views::FocusManagerFactory"*)*, void (%"class.views::FocusManagerFactory"*)** %9, align 8
  tail call void %10(%"class.views::FocusManagerFactory"* nonnull %2) #10
  br label %11

11:                                               ; preds = %6, %4
  %12 = icmp eq %"class.views::FocusManagerFactory"* %0, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = tail call i8* @_Znwm(i64 8) #9
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5views12_GLOBAL__N_126DefaultFocusManagerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = bitcast i8* %14 to %"class.views::FocusManagerFactory"*
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi %"class.views::FocusManagerFactory"* [ %16, %13 ], [ %0, %11 ]
  store %"class.views::FocusManagerFactory"* %18, %"class.views::FocusManagerFactory"** @_ZN5views12_GLOBAL__N_123g_focus_manager_factoryE, align 8
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views19FocusManagerFactoryD2Ev(%"class.views::FocusManagerFactory"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_126DefaultFocusManagerFactoryD0Ev(%"class.views::(anonymous namespace)::DefaultFocusManagerFactory"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::DefaultFocusManagerFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.views::FocusManager"* @_ZN5views12_GLOBAL__N_126DefaultFocusManagerFactory18CreateFocusManagerEPNS_6WidgetE(%"class.views::(anonymous namespace)::DefaultFocusManagerFactory"* nocapture readnone, %"class.views::Widget"*) unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 144) #9
  %4 = bitcast i8* %3 to %"class.views::FocusManager"*
  tail call void @_ZN5views12FocusManagerC1EPNS_6WidgetENSt3__110unique_ptrINS_20FocusManagerDelegateENS3_14default_deleteIS5_EEEE(%"class.views::FocusManager"* nonnull %4, %"class.views::Widget"* %1, %"class.views::FocusManagerDelegate"* null) #10
  ret %"class.views::FocusManager"* %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN5views12FocusManagerC1EPNS_6WidgetENSt3__110unique_ptrINS_20FocusManagerDelegateENS3_14default_deleteIS5_EEEE(%"class.views::FocusManager"*, %"class.views::Widget"*, %"class.views::FocusManagerDelegate"*) unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
